

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_42_1'
================================================================
* Date:           Fri May 10 15:03:15 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D4
* Solution:       comb_1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.282 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_42_1  |        4|        4|         3|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.94>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 6 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr = alloca i32 1"   --->   Operation 9 'alloca' 'arr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_1 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_2 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_3 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_4 = alloca i32 1"   --->   Operation 13 'alloca' 'arr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_5 = alloca i32 1"   --->   Operation 14 'alloca' 'arr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arr_6 = alloca i32 1"   --->   Operation 15 'alloca' 'arr_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arr_7 = alloca i32 1"   --->   Operation 16 'alloca' 'arr_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arr_8 = alloca i32 1"   --->   Operation 17 'alloca' 'arr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arr_9 = alloca i32 1"   --->   Operation 18 'alloca' 'arr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_10 = alloca i32 1"   --->   Operation 19 'alloca' 'arr_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_11 = alloca i32 1"   --->   Operation 20 'alloca' 'arr_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_12 = alloca i32 1"   --->   Operation 21 'alloca' 'arr_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arr_13 = alloca i32 1"   --->   Operation 22 'alloca' 'arr_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arr_14 = alloca i32 1"   --->   Operation 23 'alloca' 'arr_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arr_15 = alloca i32 1"   --->   Operation 24 'alloca' 'arr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 25 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 26 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 27 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 28 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 29 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%conv101_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv101"   --->   Operation 30 'read' 'conv101_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 31 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 32 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 33 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 34 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 35 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 36 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 37 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 38 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 39 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 40 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 41 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 42 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 43 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 44 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 45 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 46 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 47 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 48 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 49 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 50 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 51 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 52 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 53 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 54 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 55 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 56 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 57 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv101_cast = zext i32 %conv101_read"   --->   Operation 58 'zext' 'conv101_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_15"   --->   Operation 59 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_14"   --->   Operation 60 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_13"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_12"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_11"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_10"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_9"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_8"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_7"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_6"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_5"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_4"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_3"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_2"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_1"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %k1"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body55"   --->   Operation 78 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d4.cpp:53]   --->   Operation 79 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%icmp_ln42 = icmp_eq  i4 %i_1, i4 0" [d4.cpp:42]   --->   Operation 80 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body55.split, void %for.end225.exitStub" [d4.cpp:42]   --->   Operation 81 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i4 %i_1" [d4.cpp:42]   --->   Operation 82 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.48ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 83 'mux' 'tmp' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i32 %tmp" [d4.cpp:53]   --->   Operation 84 'zext' 'zext_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.79ns)   --->   "%empty = add i5 %zext_ln42, i5 1" [d4.cpp:42]   --->   Operation 85 'add' 'empty' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%cmp64 = icmp_ugt  i4 %i_1, i4 8" [d4.cpp:53]   --->   Operation 86 'icmp' 'cmp64' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%empty_34 = add i5 %zext_ln42, i5 25" [d4.cpp:42]   --->   Operation 87 'add' 'empty_34' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%cmp156 = icmp_ne  i4 %i_1, i4 15" [d4.cpp:53]   --->   Operation 88 'icmp' 'cmp156' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_126 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d4.cpp:63]   --->   Operation 89 'bitselect' 'tmp_126' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 90 '%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast'
ST_1 : Operation 90 [1/1] (2.09ns)   --->   "%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 90 'mul' 'mul_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%tmp_127 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d4.cpp:74]   --->   Operation 91 'bitselect' 'tmp_127' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%select_ln74_6 = select i1 %tmp_127, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 92 'select' 'select_ln74_6' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_1 = and i64 %mul_ln74_1, i64 %select_ln74_6" [d4.cpp:74]   --->   Operation 93 'and' 'and_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_20)   --->   "%select_ln83 = select i1 %tmp_126, i3 6, i3 7" [d4.cpp:83]   --->   Operation 94 'select' 'select_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.28ns)   --->   "%and_ln83 = and i1 %cmp156, i1 %cmp64" [d4.cpp:83]   --->   Operation 95 'and' 'and_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.78ns)   --->   "%icmp_ln63 = icmp_ugt  i5 %empty, i5 14" [d4.cpp:63]   --->   Operation 96 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_20)   --->   "%zext_ln78 = zext i1 %icmp_ln63" [d4.cpp:78]   --->   Operation 97 'zext' 'zext_ln78' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_20 = sub i3 %select_ln83, i3 %zext_ln78" [d4.cpp:78]   --->   Operation 98 'sub' 'sub_ln78_20' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.78ns)   --->   "%icmp_ln63_1 = icmp_ugt  i5 %empty, i5 13" [d4.cpp:63]   --->   Operation 99 'icmp' 'icmp_ln63_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i1 %icmp_ln63_1" [d4.cpp:78]   --->   Operation 100 'zext' 'zext_ln78_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.67ns)   --->   "%sub_ln78_21 = sub i3 %sub_ln78_20, i3 %zext_ln78_1" [d4.cpp:78]   --->   Operation 101 'sub' 'sub_ln78_21' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%sext_ln83_1 = sext i3 %sub_ln78_21" [d4.cpp:83]   --->   Operation 102 'sext' 'sext_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.78ns)   --->   "%icmp_ln63_2 = icmp_ugt  i5 %empty, i5 12" [d4.cpp:63]   --->   Operation 103 'icmp' 'icmp_ln63_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i1 %icmp_ln63_2" [d4.cpp:75]   --->   Operation 104 'zext' 'zext_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.67ns)   --->   "%sub_ln78_10 = sub i4 %sext_ln83_1, i4 %zext_ln75" [d4.cpp:78]   --->   Operation 105 'sub' 'sub_ln78_10' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.78ns)   --->   "%icmp_ln63_3 = icmp_ugt  i5 %empty, i5 11" [d4.cpp:63]   --->   Operation 106 'icmp' 'icmp_ln63_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i1 %icmp_ln63_3" [d4.cpp:75]   --->   Operation 107 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.79ns)   --->   "%sub_ln78_11 = sub i4 %sub_ln78_10, i4 %zext_ln75_1" [d4.cpp:78]   --->   Operation 108 'sub' 'sub_ln78_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.79ns)   --->   "%sub_ln83_3 = sub i4 11, i4 %i_1" [d4.cpp:83]   --->   Operation 109 'sub' 'sub_ln83_3' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.78ns)   --->   "%icmp_ln63_4 = icmp_ugt  i5 %empty, i5 10" [d4.cpp:63]   --->   Operation 110 'icmp' 'icmp_ln63_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln75_2 = zext i1 %icmp_ln63_4" [d4.cpp:75]   --->   Operation 111 'zext' 'zext_ln75_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.79ns)   --->   "%sub_ln78_12 = sub i4 %sub_ln78_11, i4 %zext_ln75_2" [d4.cpp:78]   --->   Operation 112 'sub' 'sub_ln78_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (0.79ns)   --->   "%sub_ln83_4 = sub i4 10, i4 %i_1" [d4.cpp:83]   --->   Operation 113 'sub' 'sub_ln83_4' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.78ns)   --->   "%icmp_ln63_5 = icmp_ugt  i5 %empty, i5 9" [d4.cpp:63]   --->   Operation 114 'icmp' 'icmp_ln63_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln75_3 = zext i1 %icmp_ln63_5" [d4.cpp:75]   --->   Operation 115 'zext' 'zext_ln75_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.79ns)   --->   "%sub_ln78_13 = sub i4 %sub_ln78_12, i4 %zext_ln75_3" [d4.cpp:78]   --->   Operation 116 'sub' 'sub_ln78_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 117 [1/1] (0.78ns)   --->   "%icmp_ln74 = icmp_ugt  i5 %empty, i5 8" [d4.cpp:74]   --->   Operation 117 'icmp' 'icmp_ln74' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln75_4 = zext i1 %icmp_ln74" [d4.cpp:75]   --->   Operation 118 'zext' 'zext_ln75_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.79ns)   --->   "%sub_ln58 = sub i4 %sub_ln78_13, i4 %zext_ln75_4" [d4.cpp:58]   --->   Operation 119 'sub' 'sub_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_128 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty, i32 3, i32 4" [d4.cpp:74]   --->   Operation 120 'partselect' 'tmp_128' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.54ns)   --->   "%icmp_ln74_1 = icmp_ne  i2 %tmp_128, i2 0" [d4.cpp:74]   --->   Operation 121 'icmp' 'icmp_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.78ns)   --->   "%icmp_ln67 = icmp_sgt  i5 %empty_34, i5 6" [d4.cpp:67]   --->   Operation 122 'icmp' 'icmp_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 123 [1/1] (0.78ns)   --->   "%icmp_ln74_2 = icmp_ugt  i5 %empty, i5 6" [d4.cpp:74]   --->   Operation 123 'icmp' 'icmp_ln74_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.28ns)   --->   "%and_ln86 = and i1 %icmp_ln67, i1 %and_ln83" [d4.cpp:86]   --->   Operation 124 'and' 'and_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_16)   --->   "%select_ln67 = select i1 %and_ln86, i3 6, i3 7" [d4.cpp:67]   --->   Operation 125 'select' 'select_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.78ns)   --->   "%icmp_ln67_1 = icmp_sgt  i5 %empty_34, i5 5" [d4.cpp:67]   --->   Operation 126 'icmp' 'icmp_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (0.28ns)   --->   "%and_ln86_2 = and i1 %icmp_ln67_1, i1 %and_ln83" [d4.cpp:86]   --->   Operation 127 'and' 'and_ln86_2' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_16)   --->   "%zext_ln58 = zext i1 %and_ln86_2" [d4.cpp:58]   --->   Operation 128 'zext' 'zext_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_16 = sub i3 %select_ln67, i3 %zext_ln58" [d4.cpp:58]   --->   Operation 129 'sub' 'sub_ln58_16' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 130 [1/1] (0.78ns)   --->   "%icmp_ln67_2 = icmp_sgt  i5 %empty_34, i5 4" [d4.cpp:67]   --->   Operation 130 'icmp' 'icmp_ln67_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 131 [1/1] (0.28ns)   --->   "%and_ln86_4 = and i1 %icmp_ln67_2, i1 %and_ln83" [d4.cpp:86]   --->   Operation 131 'and' 'and_ln86_4' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_129 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_34, i32 2, i32 4" [d4.cpp:67]   --->   Operation 132 'partselect' 'tmp_129' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.67ns)   --->   "%icmp_ln67_3 = icmp_sgt  i3 %tmp_129, i3 0" [d4.cpp:67]   --->   Operation 133 'icmp' 'icmp_ln67_3' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.78ns)   --->   "%icmp_ln67_4 = icmp_sgt  i5 %empty_34, i5 2" [d4.cpp:67]   --->   Operation 134 'icmp' 'icmp_ln67_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_130 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_34, i32 1, i32 4" [d4.cpp:67]   --->   Operation 135 'partselect' 'tmp_130' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.79ns)   --->   "%icmp_ln67_5 = icmp_sgt  i4 %tmp_130, i4 0" [d4.cpp:67]   --->   Operation 136 'icmp' 'icmp_ln67_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 137 [1/1] (0.79ns)   --->   "%add_ln53_2 = add i4 %i_1, i4 15" [d4.cpp:53]   --->   Operation 137 'add' 'add_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.79ns)   --->   "%cmp64_1 = icmp_ugt  i4 %add_ln53_2, i4 8" [d4.cpp:53]   --->   Operation 138 'icmp' 'cmp64_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 139 [1/1] (0.35ns)   --->   "%empty_35 = xor i4 %i_1, i4 8" [d4.cpp:53]   --->   Operation 139 'xor' 'empty_35' <Predicate = (!icmp_ln42)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_131 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln53_2, i32 3" [d4.cpp:53]   --->   Operation 140 'bitselect' 'tmp_131' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.79ns)   --->   "%icmp_ln63_6 = icmp_eq  i4 %i_1, i4 15" [d4.cpp:63]   --->   Operation 141 'icmp' 'icmp_ln63_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_22)   --->   "%select_ln83_9 = select i1 %icmp_ln63_6, i3 6, i3 7" [d4.cpp:83]   --->   Operation 142 'select' 'select_ln83_9' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 143 [1/1] (0.79ns)   --->   "%icmp_ln63_7 = icmp_ugt  i4 %i_1, i4 13" [d4.cpp:63]   --->   Operation 143 'icmp' 'icmp_ln63_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_22)   --->   "%zext_ln78_2 = zext i1 %icmp_ln63_7" [d4.cpp:78]   --->   Operation 144 'zext' 'zext_ln78_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_22 = sub i3 %select_ln83_9, i3 %zext_ln78_2" [d4.cpp:78]   --->   Operation 145 'sub' 'sub_ln78_22' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.79ns)   --->   "%icmp_ln63_8 = icmp_ugt  i4 %i_1, i4 12" [d4.cpp:63]   --->   Operation 146 'icmp' 'icmp_ln63_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i1 %icmp_ln63_8" [d4.cpp:78]   --->   Operation 147 'zext' 'zext_ln78_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.67ns)   --->   "%sub_ln78_23 = sub i3 %sub_ln78_22, i3 %zext_ln78_3" [d4.cpp:78]   --->   Operation 148 'sub' 'sub_ln78_23' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%sext_ln83_3 = sext i3 %sub_ln78_23" [d4.cpp:83]   --->   Operation 149 'sext' 'sext_ln83_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.79ns)   --->   "%icmp_ln63_9 = icmp_ugt  i4 %i_1, i4 11" [d4.cpp:63]   --->   Operation 150 'icmp' 'icmp_ln63_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln75_7 = zext i1 %icmp_ln63_9" [d4.cpp:75]   --->   Operation 151 'zext' 'zext_ln75_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.67ns)   --->   "%sub_ln78_14 = sub i4 %sext_ln83_3, i4 %zext_ln75_7" [d4.cpp:78]   --->   Operation 152 'sub' 'sub_ln78_14' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 153 [1/1] (0.79ns)   --->   "%icmp_ln63_10 = icmp_ugt  i4 %i_1, i4 10" [d4.cpp:63]   --->   Operation 153 'icmp' 'icmp_ln63_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln75_8 = zext i1 %icmp_ln63_10" [d4.cpp:75]   --->   Operation 154 'zext' 'zext_ln75_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.79ns)   --->   "%sub_ln78_15 = sub i4 %sub_ln78_14, i4 %zext_ln75_8" [d4.cpp:78]   --->   Operation 155 'sub' 'sub_ln78_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.79ns)   --->   "%icmp_ln63_11 = icmp_ugt  i4 %i_1, i4 9" [d4.cpp:63]   --->   Operation 156 'icmp' 'icmp_ln63_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln75_9 = zext i1 %icmp_ln63_11" [d4.cpp:75]   --->   Operation 157 'zext' 'zext_ln75_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.79ns)   --->   "%sub_ln78_16 = sub i4 %sub_ln78_15, i4 %zext_ln75_9" [d4.cpp:78]   --->   Operation 158 'sub' 'sub_ln78_16' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln75_10 = zext i1 %cmp64" [d4.cpp:75]   --->   Operation 159 'zext' 'zext_ln75_10' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.79ns)   --->   "%sub_ln58_17 = sub i4 %sub_ln78_16, i4 %zext_ln75_10" [d4.cpp:58]   --->   Operation 160 'sub' 'sub_ln58_17' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (0.28ns)   --->   "%and_ln86_12 = and i1 %icmp_ln63_6, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 161 'and' 'and_ln86_12' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_18)   --->   "%select_ln67_1 = select i1 %and_ln86_12, i3 6, i3 7" [d4.cpp:67]   --->   Operation 162 'select' 'select_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 163 [1/1] (0.79ns)   --->   "%icmp_ln67_6 = icmp_sgt  i4 %empty_35, i4 5" [d4.cpp:67]   --->   Operation 163 'icmp' 'icmp_ln67_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.28ns)   --->   "%and_ln86_14 = and i1 %icmp_ln67_6, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 164 'and' 'and_ln86_14' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_18)   --->   "%zext_ln58_2 = zext i1 %and_ln86_14" [d4.cpp:58]   --->   Operation 165 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_18 = sub i3 %select_ln67_1, i3 %zext_ln58_2" [d4.cpp:58]   --->   Operation 166 'sub' 'sub_ln58_18' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.79ns)   --->   "%icmp_ln67_7 = icmp_sgt  i4 %empty_35, i4 4" [d4.cpp:67]   --->   Operation 167 'icmp' 'icmp_ln67_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.28ns)   --->   "%and_ln86_16 = and i1 %icmp_ln67_7, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 168 'and' 'and_ln86_16' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln58_3 = zext i1 %and_ln86_16" [d4.cpp:58]   --->   Operation 169 'zext' 'zext_ln58_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.67ns)   --->   "%sub_ln58_5 = sub i3 %sub_ln58_18, i3 %zext_ln58_3" [d4.cpp:58]   --->   Operation 170 'sub' 'sub_ln58_5' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_132 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_35, i32 2, i32 3" [d4.cpp:67]   --->   Operation 171 'partselect' 'tmp_132' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.54ns)   --->   "%icmp_ln67_8 = icmp_eq  i2 %tmp_132, i2 1" [d4.cpp:67]   --->   Operation 172 'icmp' 'icmp_ln67_8' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.28ns)   --->   "%and_ln86_18 = and i1 %icmp_ln67_8, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 173 'and' 'and_ln86_18' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.79ns)   --->   "%icmp_ln67_9 = icmp_sgt  i4 %empty_35, i4 2" [d4.cpp:67]   --->   Operation 174 'icmp' 'icmp_ln67_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_133 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_35, i32 1, i32 3" [d4.cpp:67]   --->   Operation 175 'partselect' 'tmp_133' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.67ns)   --->   "%icmp_ln67_10 = icmp_sgt  i3 %tmp_133, i3 0" [d4.cpp:67]   --->   Operation 176 'icmp' 'icmp_ln67_10' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 177 [1/1] (0.79ns)   --->   "%add_ln53_4 = add i5 %zext_ln42, i5 30" [d4.cpp:53]   --->   Operation 177 'add' 'add_ln53_4' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_134 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln53_4, i32 3, i32 4" [d4.cpp:53]   --->   Operation 178 'partselect' 'tmp_134' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.54ns)   --->   "%icmp_ln53 = icmp_eq  i2 %tmp_134, i2 1" [d4.cpp:53]   --->   Operation 179 'icmp' 'icmp_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 180 [1/1] (0.78ns)   --->   "%cmp64_2 = icmp_sgt  i5 %add_ln53_4, i5 8" [d4.cpp:53]   --->   Operation 180 'icmp' 'cmp64_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 181 [1/1] (0.79ns)   --->   "%add_ln53_11 = add i4 %i_1, i4 7" [d4.cpp:53]   --->   Operation 181 'add' 'add_ln53_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 182 [1/1] (0.79ns)   --->   "%icmp_ln63_12 = icmp_ugt  i4 %add_ln53_2, i4 13" [d4.cpp:63]   --->   Operation 182 'icmp' 'icmp_ln63_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_24)   --->   "%select_ln83_17 = select i1 %icmp_ln63_12, i3 6, i3 7" [d4.cpp:83]   --->   Operation 183 'select' 'select_ln83_17' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 184 [1/1] (0.79ns)   --->   "%icmp_ln63_13 = icmp_ugt  i4 %add_ln53_2, i4 12" [d4.cpp:63]   --->   Operation 184 'icmp' 'icmp_ln63_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_24)   --->   "%zext_ln78_4 = zext i1 %icmp_ln63_13" [d4.cpp:78]   --->   Operation 185 'zext' 'zext_ln78_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_24 = sub i3 %select_ln83_17, i3 %zext_ln78_4" [d4.cpp:78]   --->   Operation 186 'sub' 'sub_ln78_24' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 187 [1/1] (0.79ns)   --->   "%icmp_ln63_14 = icmp_ugt  i4 %add_ln53_2, i4 11" [d4.cpp:63]   --->   Operation 187 'icmp' 'icmp_ln63_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i1 %icmp_ln63_14" [d4.cpp:78]   --->   Operation 188 'zext' 'zext_ln78_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.67ns)   --->   "%sub_ln78_25 = sub i3 %sub_ln78_24, i3 %zext_ln78_5" [d4.cpp:78]   --->   Operation 189 'sub' 'sub_ln78_25' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%sext_ln83_5 = sext i3 %sub_ln78_25" [d4.cpp:83]   --->   Operation 190 'sext' 'sext_ln83_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.79ns)   --->   "%icmp_ln63_15 = icmp_ugt  i4 %add_ln53_2, i4 10" [d4.cpp:63]   --->   Operation 191 'icmp' 'icmp_ln63_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln75_13 = zext i1 %icmp_ln63_15" [d4.cpp:75]   --->   Operation 192 'zext' 'zext_ln75_13' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.67ns)   --->   "%sub_ln78_17 = sub i4 %sext_ln83_5, i4 %zext_ln75_13" [d4.cpp:78]   --->   Operation 193 'sub' 'sub_ln78_17' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 194 [1/1] (0.79ns)   --->   "%icmp_ln63_16 = icmp_ugt  i4 %add_ln53_2, i4 9" [d4.cpp:63]   --->   Operation 194 'icmp' 'icmp_ln63_16' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln75_14 = zext i1 %icmp_ln63_16" [d4.cpp:75]   --->   Operation 195 'zext' 'zext_ln75_14' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.79ns)   --->   "%sub_ln78_18 = sub i4 %sub_ln78_17, i4 %zext_ln75_14" [d4.cpp:78]   --->   Operation 196 'sub' 'sub_ln78_18' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln75_15 = zext i1 %cmp64_1" [d4.cpp:75]   --->   Operation 197 'zext' 'zext_ln75_15' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 198 [1/1] (0.79ns)   --->   "%sub_ln58_19 = sub i4 %sub_ln78_18, i4 %zext_ln75_15" [d4.cpp:58]   --->   Operation 198 'sub' 'sub_ln58_19' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 199 [1/1] (0.79ns)   --->   "%icmp_ln67_11 = icmp_sgt  i4 %add_ln53_11, i4 5" [d4.cpp:67]   --->   Operation 199 'icmp' 'icmp_ln67_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.28ns)   --->   "%and_ln86_24 = and i1 %icmp_ln67_11, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 200 'and' 'and_ln86_24' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_8)   --->   "%select_ln67_2 = select i1 %and_ln86_24, i3 6, i3 7" [d4.cpp:67]   --->   Operation 201 'select' 'select_ln67_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.79ns)   --->   "%icmp_ln67_12 = icmp_sgt  i4 %add_ln53_11, i4 4" [d4.cpp:67]   --->   Operation 202 'icmp' 'icmp_ln67_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.28ns)   --->   "%and_ln86_26 = and i1 %icmp_ln67_12, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 203 'and' 'and_ln86_26' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_8)   --->   "%zext_ln58_4 = zext i1 %and_ln86_26" [d4.cpp:58]   --->   Operation 204 'zext' 'zext_ln58_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_8 = sub i3 %select_ln67_2, i3 %zext_ln58_4" [d4.cpp:58]   --->   Operation 205 'sub' 'sub_ln58_8' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_135 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln53_11, i32 2, i32 3" [d4.cpp:67]   --->   Operation 206 'partselect' 'tmp_135' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (0.54ns)   --->   "%icmp_ln67_13 = icmp_eq  i2 %tmp_135, i2 1" [d4.cpp:67]   --->   Operation 207 'icmp' 'icmp_ln67_13' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.28ns)   --->   "%and_ln86_28 = and i1 %icmp_ln67_13, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 208 'and' 'and_ln86_28' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.79ns)   --->   "%icmp_ln67_14 = icmp_sgt  i4 %add_ln53_11, i4 2" [d4.cpp:67]   --->   Operation 209 'icmp' 'icmp_ln67_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.00ns)   --->   "%tmp_136 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln53_11, i32 1, i32 3" [d4.cpp:67]   --->   Operation 210 'partselect' 'tmp_136' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (0.67ns)   --->   "%icmp_ln67_15 = icmp_sgt  i3 %tmp_136, i3 0" [d4.cpp:67]   --->   Operation 211 'icmp' 'icmp_ln67_15' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.79ns)   --->   "%add_ln53_6 = add i5 %zext_ln42, i5 29" [d4.cpp:53]   --->   Operation 212 'add' 'add_ln53_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_137 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln53_6, i32 3, i32 4" [d4.cpp:53]   --->   Operation 213 'partselect' 'tmp_137' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 214 [1/1] (0.54ns)   --->   "%icmp_ln53_1 = icmp_eq  i2 %tmp_137, i2 1" [d4.cpp:53]   --->   Operation 214 'icmp' 'icmp_ln53_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.78ns)   --->   "%cmp64_3 = icmp_sgt  i5 %add_ln53_6, i5 8" [d4.cpp:53]   --->   Operation 215 'icmp' 'cmp64_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 216 [1/1] (0.78ns)   --->   "%empty_36 = add i5 %zext_ln42, i5 22" [d4.cpp:42]   --->   Operation 216 'add' 'empty_36' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (0.78ns)   --->   "%icmp_ln63_17 = icmp_sgt  i5 %add_ln53_4, i5 12" [d4.cpp:63]   --->   Operation 217 'icmp' 'icmp_ln63_17' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_26)   --->   "%select_ln83_24 = select i1 %icmp_ln63_17, i3 6, i3 7" [d4.cpp:83]   --->   Operation 218 'select' 'select_ln83_24' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 219 [1/1] (0.78ns)   --->   "%icmp_ln63_18 = icmp_sgt  i5 %add_ln53_4, i5 11" [d4.cpp:63]   --->   Operation 219 'icmp' 'icmp_ln63_18' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_26)   --->   "%zext_ln78_6 = zext i1 %icmp_ln63_18" [d4.cpp:78]   --->   Operation 220 'zext' 'zext_ln78_6' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 221 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_26 = sub i3 %select_ln83_24, i3 %zext_ln78_6" [d4.cpp:78]   --->   Operation 221 'sub' 'sub_ln78_26' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 222 [1/1] (0.78ns)   --->   "%icmp_ln63_19 = icmp_sgt  i5 %add_ln53_4, i5 10" [d4.cpp:63]   --->   Operation 222 'icmp' 'icmp_ln63_19' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i1 %icmp_ln63_19" [d4.cpp:78]   --->   Operation 223 'zext' 'zext_ln78_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.67ns)   --->   "%sub_ln78_27 = sub i3 %sub_ln78_26, i3 %zext_ln78_7" [d4.cpp:78]   --->   Operation 224 'sub' 'sub_ln78_27' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 225 [1/1] (0.00ns)   --->   "%sext_ln83_7 = sext i3 %sub_ln78_27" [d4.cpp:83]   --->   Operation 225 'sext' 'sext_ln83_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 226 [1/1] (0.78ns)   --->   "%icmp_ln63_20 = icmp_sgt  i5 %add_ln53_4, i5 9" [d4.cpp:63]   --->   Operation 226 'icmp' 'icmp_ln63_20' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln75_19 = zext i1 %icmp_ln63_20" [d4.cpp:75]   --->   Operation 227 'zext' 'zext_ln75_19' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 228 [1/1] (0.67ns)   --->   "%sub_ln78_19 = sub i4 %sext_ln83_7, i4 %zext_ln75_19" [d4.cpp:78]   --->   Operation 228 'sub' 'sub_ln78_19' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln75_20 = zext i1 %cmp64_2" [d4.cpp:75]   --->   Operation 229 'zext' 'zext_ln75_20' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.79ns)   --->   "%sub_ln58_21 = sub i4 %sub_ln78_19, i4 %zext_ln75_20" [d4.cpp:58]   --->   Operation 230 'sub' 'sub_ln58_21' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 231 [1/1] (0.78ns)   --->   "%icmp_ln67_16 = icmp_sgt  i5 %empty_36, i5 4" [d4.cpp:67]   --->   Operation 231 'icmp' 'icmp_ln67_16' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 232 [1/1] (0.28ns)   --->   "%and_ln86_34 = and i1 %icmp_ln67_16, i1 %cmp64_3" [d4.cpp:86]   --->   Operation 232 'and' 'and_ln86_34' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%tmp_138 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_36, i32 2, i32 4" [d4.cpp:67]   --->   Operation 233 'partselect' 'tmp_138' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 234 [1/1] (0.67ns)   --->   "%icmp_ln67_17 = icmp_sgt  i3 %tmp_138, i3 0" [d4.cpp:67]   --->   Operation 234 'icmp' 'icmp_ln67_17' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_139 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln53_4, i32 2, i32 4" [d4.cpp:74]   --->   Operation 235 'partselect' 'tmp_139' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 236 [1/1] (0.67ns)   --->   "%icmp_ln74_8 = icmp_sgt  i3 %tmp_139, i3 0" [d4.cpp:74]   --->   Operation 236 'icmp' 'icmp_ln74_8' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 237 [1/1] (0.28ns)   --->   "%and_ln86_36 = and i1 %icmp_ln67_17, i1 %cmp64_3" [d4.cpp:86]   --->   Operation 237 'and' 'and_ln86_36' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 238 [1/1] (0.78ns)   --->   "%icmp_ln67_18 = icmp_sgt  i5 %empty_36, i5 2" [d4.cpp:67]   --->   Operation 238 'icmp' 'icmp_ln67_18' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 239 [1/1] (0.00ns)   --->   "%tmp_140 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_36, i32 1, i32 4" [d4.cpp:67]   --->   Operation 239 'partselect' 'tmp_140' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 240 [1/1] (0.79ns)   --->   "%icmp_ln67_19 = icmp_sgt  i4 %tmp_140, i4 0" [d4.cpp:67]   --->   Operation 240 'icmp' 'icmp_ln67_19' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 241 [1/1] (0.79ns)   --->   "%add_ln53_8 = add i5 %zext_ln42, i5 28" [d4.cpp:53]   --->   Operation 241 'add' 'add_ln53_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 242 [1/1] (0.48ns)   --->   "%tmp_106 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 242 'mux' 'tmp_106' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 243 [1/1] (0.00ns)   --->   "%zext_ln53_9 = zext i32 %tmp_106" [d4.cpp:53]   --->   Operation 243 'zext' 'zext_ln53_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 244 [1/1] (0.00ns)   --->   "%tmp_141 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln53_8, i32 3, i32 4" [d4.cpp:53]   --->   Operation 244 'partselect' 'tmp_141' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 245 [1/1] (0.54ns)   --->   "%icmp_ln53_2 = icmp_eq  i2 %tmp_141, i2 1" [d4.cpp:53]   --->   Operation 245 'icmp' 'icmp_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 246 [1/1] (0.78ns)   --->   "%cmp86_4 = icmp_sgt  i5 %add_ln53_8, i5 6" [d4.cpp:53]   --->   Operation 246 'icmp' 'cmp86_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 247 [1/1] (0.78ns)   --->   "%cmp64_4 = icmp_sgt  i5 %add_ln53_8, i5 8" [d4.cpp:53]   --->   Operation 247 'icmp' 'cmp64_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 248 [1/1] (0.78ns)   --->   "%empty_37 = add i5 %zext_ln42, i5 21" [d4.cpp:42]   --->   Operation 248 'add' 'empty_37' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 249 [1/1] (0.78ns)   --->   "%icmp_ln63_21 = icmp_sgt  i5 %add_ln53_6, i5 11" [d4.cpp:63]   --->   Operation 249 'icmp' 'icmp_ln63_21' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 250 '%mul_ln74_77 = mul i64 %zext_ln53_9, i64 %conv101_cast'
ST_1 : Operation 250 [1/1] (2.09ns)   --->   "%mul_ln74_77 = mul i64 %zext_ln53_9, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 250 'mul' 'mul_ln74_77' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_63)   --->   "%select_ln74_38 = select i1 %icmp_ln63_21, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 251 'select' 'select_ln74_38' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 252 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_63 = and i64 %mul_ln74_77, i64 %select_ln74_38" [d4.cpp:74]   --->   Operation 252 'and' 'and_ln74_63' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_28)   --->   "%select_ln83_30 = select i1 %icmp_ln63_21, i3 6, i3 7" [d4.cpp:83]   --->   Operation 253 'select' 'select_ln83_30' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 254 [1/1] (0.48ns)   --->   "%tmp_113 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 254 'mux' 'tmp_113' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln83_28 = zext i32 %tmp_113" [d4.cpp:83]   --->   Operation 255 'zext' 'zext_ln83_28' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 256 [1/1] (0.78ns)   --->   "%icmp_ln83_17 = icmp_slt  i5 %add_ln53_8, i5 11" [d4.cpp:83]   --->   Operation 256 'icmp' 'icmp_ln83_17' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_57)   --->   "%and_ln83_56 = and i1 %icmp_ln83_17, i1 %cmp64_4" [d4.cpp:83]   --->   Operation 257 'and' 'and_ln83_56' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 258 '%mul_ln83_38 = mul i64 %zext_ln83_28, i64 %zext_ln53_9'
ST_1 : Operation 258 [1/1] (2.09ns)   --->   "%mul_ln83_38 = mul i64 %zext_ln83_28, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 258 'mul' 'mul_ln83_38' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_57)   --->   "%select_ln83_31 = select i1 %and_ln83_56, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 259 'select' 'select_ln83_31' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 260 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_57 = and i64 %mul_ln83_38, i64 %select_ln83_31" [d4.cpp:83]   --->   Operation 260 'and' 'and_ln83_57' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 261 [1/1] (0.78ns)   --->   "%icmp_ln63_22 = icmp_sgt  i5 %add_ln53_6, i5 10" [d4.cpp:63]   --->   Operation 261 'icmp' 'icmp_ln63_22' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 262 [1/1] (0.44ns)   --->   "%select_ln74_4 = select i1 %icmp_ln63_21, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 262 'select' 'select_ln74_4' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 263 [1/1] (0.00ns)   --->   "%zext_ln74_50 = zext i32 %select_ln74_4" [d4.cpp:74]   --->   Operation 263 'zext' 'zext_ln74_50' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 264 '%mul_ln74_79 = mul i64 %zext_ln74_50, i64 %zext_ln53_9'
ST_1 : Operation 264 [1/1] (2.09ns)   --->   "%mul_ln74_79 = mul i64 %zext_ln74_50, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 264 'mul' 'mul_ln74_79' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_65)   --->   "%select_ln74_39 = select i1 %icmp_ln63_22, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 265 'select' 'select_ln74_39' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 266 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_65 = and i64 %mul_ln74_79, i64 %select_ln74_39" [d4.cpp:74]   --->   Operation 266 'and' 'and_ln74_65' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_28)   --->   "%zext_ln78_8 = zext i1 %icmp_ln63_22" [d4.cpp:78]   --->   Operation 267 'zext' 'zext_ln78_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 268 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_28 = sub i3 %select_ln83_30, i3 %zext_ln78_8" [d4.cpp:78]   --->   Operation 268 'sub' 'sub_ln78_28' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 269 [1/1] (0.00ns)   --->   "%sext_ln83_8 = sext i3 %sub_ln78_28" [d4.cpp:83]   --->   Operation 269 'sext' 'sext_ln83_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 270 [1/1] (0.48ns)   --->   "%tmp_114 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 270 'mux' 'tmp_114' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 271 [1/1] (0.00ns)   --->   "%zext_ln83_29 = zext i32 %tmp_114" [d4.cpp:83]   --->   Operation 271 'zext' 'zext_ln83_29' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 272 [1/1] (0.78ns)   --->   "%icmp_ln83_18 = icmp_slt  i5 %add_ln53_8, i5 10" [d4.cpp:83]   --->   Operation 272 'icmp' 'icmp_ln83_18' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_59)   --->   "%and_ln83_58 = and i1 %icmp_ln83_18, i1 %cmp64_4" [d4.cpp:83]   --->   Operation 273 'and' 'and_ln83_58' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 274 '%mul_ln83_39 = mul i64 %zext_ln83_29, i64 %zext_ln53_9'
ST_1 : Operation 274 [1/1] (2.09ns)   --->   "%mul_ln83_39 = mul i64 %zext_ln83_29, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 274 'mul' 'mul_ln83_39' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_59)   --->   "%select_ln83_32 = select i1 %and_ln83_58, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 275 'select' 'select_ln83_32' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 276 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_59 = and i64 %mul_ln83_39, i64 %select_ln83_32" [d4.cpp:83]   --->   Operation 276 'and' 'and_ln83_59' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 277 [1/1] (0.78ns)   --->   "%icmp_ln63_23 = icmp_sgt  i5 %add_ln53_6, i5 9" [d4.cpp:63]   --->   Operation 277 'icmp' 'icmp_ln63_23' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 278 [1/1] (0.48ns)   --->   "%tmp_115 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_8" [d4.cpp:74]   --->   Operation 278 'mux' 'tmp_115' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln74_51 = zext i32 %tmp_115" [d4.cpp:74]   --->   Operation 279 'zext' 'zext_ln74_51' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 280 '%mul_ln74_81 = mul i64 %zext_ln74_51, i64 %zext_ln53_9'
ST_1 : Operation 280 [1/1] (2.09ns)   --->   "%mul_ln74_81 = mul i64 %zext_ln74_51, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 280 'mul' 'mul_ln74_81' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 281 [1/1] (0.00ns)   --->   "%zext_ln78_9 = zext i1 %icmp_ln63_23" [d4.cpp:78]   --->   Operation 281 'zext' 'zext_ln78_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 282 [1/1] (0.67ns)   --->   "%sub_ln78_29 = sub i3 %sub_ln78_28, i3 %zext_ln78_9" [d4.cpp:78]   --->   Operation 282 'sub' 'sub_ln78_29' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 283 [1/1] (0.00ns)   --->   "%sext_ln74 = sext i3 %sub_ln78_29" [d4.cpp:74]   --->   Operation 283 'sext' 'sext_ln74' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 284 [1/1] (0.00ns)   --->   "%zext_ln75_26 = zext i1 %cmp64_3" [d4.cpp:75]   --->   Operation 284 'zext' 'zext_ln75_26' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 285 [1/1] (0.67ns)   --->   "%sub_ln58_23 = sub i4 %sext_ln74, i4 %zext_ln75_26" [d4.cpp:58]   --->   Operation 285 'sub' 'sub_ln58_23' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 286 [1/1] (0.48ns)   --->   "%tmp_117 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 286 'mux' 'tmp_117' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln86_21 = zext i32 %tmp_117" [d4.cpp:86]   --->   Operation 287 'zext' 'zext_ln86_21' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 288 '%mul_ln86_21 = mul i64 %zext_ln86_21, i64 %conv101_cast'
ST_1 : Operation 288 [1/1] (2.09ns)   --->   "%mul_ln86_21 = mul i64 %zext_ln86_21, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 288 'mul' 'mul_ln86_21' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 289 [1/1] (0.00ns)   --->   "%tmp_142 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_37, i32 2, i32 4" [d4.cpp:67]   --->   Operation 289 'partselect' 'tmp_142' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 290 [1/1] (0.67ns)   --->   "%icmp_ln67_20 = icmp_sgt  i3 %tmp_142, i3 0" [d4.cpp:67]   --->   Operation 290 'icmp' 'icmp_ln67_20' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 291 [1/1] (0.00ns)   --->   "%tmp_143 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln53_6, i32 2, i32 4" [d4.cpp:74]   --->   Operation 291 'partselect' 'tmp_143' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 292 [1/1] (0.67ns)   --->   "%icmp_ln74_11 = icmp_sgt  i3 %tmp_143, i3 0" [d4.cpp:74]   --->   Operation 292 'icmp' 'icmp_ln74_11' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 293 [1/1] (0.28ns)   --->   "%and_ln86_42 = and i1 %icmp_ln67_20, i1 %cmp64_4" [d4.cpp:86]   --->   Operation 293 'and' 'and_ln86_42' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_43)   --->   "%select_ln86_26 = select i1 %and_ln86_42, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 294 'select' 'select_ln86_26' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 295 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_43 = and i64 %mul_ln86_21, i64 %select_ln86_26" [d4.cpp:86]   --->   Operation 295 'and' 'and_ln86_43' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 296 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_14 = add i64 %and_ln83_57, i64 %and_ln86_43" [d4.cpp:86]   --->   Operation 296 'add' 'add_ln86_14' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 297 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_15 = add i64 %add_ln86_14, i64 %and_ln74_63" [d4.cpp:86]   --->   Operation 297 'add' 'add_ln86_15' <Predicate = (!icmp_ln42)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_15)   --->   "%select_ln67_4 = select i1 %and_ln86_42, i3 6, i3 7" [d4.cpp:67]   --->   Operation 298 'select' 'select_ln67_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 299 [1/1] (0.78ns)   --->   "%icmp_ln67_21 = icmp_sgt  i5 %empty_37, i5 2" [d4.cpp:67]   --->   Operation 299 'icmp' 'icmp_ln67_21' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 300 [1/1] (0.44ns)   --->   "%select_ln86_4 = select i1 %and_ln86_42, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 300 'select' 'select_ln86_4' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 301 [1/1] (0.00ns)   --->   "%zext_ln86_22 = zext i32 %select_ln86_4" [d4.cpp:86]   --->   Operation 301 'zext' 'zext_ln86_22' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 302 [1/1] (0.28ns)   --->   "%and_ln86_44 = and i1 %icmp_ln67_21, i1 %cmp64_4" [d4.cpp:86]   --->   Operation 302 'and' 'and_ln86_44' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 303 '%mul_ln86_22 = mul i64 %zext_ln86_22, i64 %zext_ln86_21'
ST_1 : Operation 303 [1/1] (2.09ns)   --->   "%mul_ln86_22 = mul i64 %zext_ln86_22, i64 %zext_ln86_21" [d4.cpp:86]   --->   Operation 303 'mul' 'mul_ln86_22' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_45)   --->   "%select_ln86_27 = select i1 %and_ln86_44, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 304 'select' 'select_ln86_27' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 305 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_45 = and i64 %mul_ln86_22, i64 %select_ln86_27" [d4.cpp:86]   --->   Operation 305 'and' 'and_ln86_45' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 306 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_34 = add i64 %and_ln83_59, i64 %and_ln86_45" [d4.cpp:86]   --->   Operation 306 'add' 'add_ln86_34' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 307 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_35 = add i64 %add_ln86_34, i64 %and_ln74_65" [d4.cpp:86]   --->   Operation 307 'add' 'add_ln86_35' <Predicate = (!icmp_ln42)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_15)   --->   "%zext_ln58_8 = zext i1 %and_ln86_44" [d4.cpp:58]   --->   Operation 308 'zext' 'zext_ln58_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 309 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_15 = sub i3 %select_ln67_4, i3 %zext_ln58_8" [d4.cpp:58]   --->   Operation 309 'sub' 'sub_ln58_15' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 310 [1/1] (0.00ns)   --->   "%sext_ln67_8 = sext i3 %sub_ln58_15" [d4.cpp:67]   --->   Operation 310 'sext' 'sext_ln67_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 311 [1/1] (0.00ns)   --->   "%tmp_144 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_37, i32 1, i32 4" [d4.cpp:67]   --->   Operation 311 'partselect' 'tmp_144' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 312 [1/1] (0.79ns)   --->   "%icmp_ln67_22 = icmp_sgt  i4 %tmp_144, i4 0" [d4.cpp:67]   --->   Operation 312 'icmp' 'icmp_ln67_22' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 313 [1/1] (0.48ns)   --->   "%tmp_125 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_8" [d4.cpp:86]   --->   Operation 313 'mux' 'tmp_125' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 314 [1/1] (0.00ns)   --->   "%zext_ln86_23 = zext i32 %tmp_125" [d4.cpp:86]   --->   Operation 314 'zext' 'zext_ln86_23' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.32ns)   --->   Input mux for Operation 315 '%mul_ln86_23 = mul i64 %zext_ln86_23, i64 %zext_ln86_21'
ST_1 : Operation 315 [1/1] (2.09ns)   --->   "%mul_ln86_23 = mul i64 %zext_ln86_23, i64 %zext_ln86_21" [d4.cpp:86]   --->   Operation 315 'mul' 'mul_ln86_23' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 316 [1/1] (0.79ns)   --->   "%add_ln42 = add i4 %i_1, i4 11" [d4.cpp:42]   --->   Operation 316 'add' 'add_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 317 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln42, i4 %i" [d4.cpp:42]   --->   Operation 317 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.28>
ST_2 : Operation 318 [1/1] (0.00ns)   --->   "%k_load = load i4 %k" [d4.cpp:53]   --->   Operation 318 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 319 [1/1] (0.00ns)   --->   "%k1_load = load i5 %k1" [d4.cpp:42]   --->   Operation 319 'load' 'k1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 320 [1/1] (0.00ns)   --->   "%arr_6_load = load i64 %arr_6" [d4.cpp:74]   --->   Operation 320 'load' 'arr_6_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 321 [1/1] (0.00ns)   --->   "%arr_7_load = load i64 %arr_7" [d4.cpp:74]   --->   Operation 321 'load' 'arr_7_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 322 [1/1] (0.00ns)   --->   "%arr_8_load = load i64 %arr_8" [d4.cpp:74]   --->   Operation 322 'load' 'arr_8_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 323 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i5 %k1_load" [d4.cpp:42]   --->   Operation 323 'trunc' 'trunc_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 324 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 324 'mux' 'tmp_1' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i32 %tmp_1" [d4.cpp:53]   --->   Operation 325 'zext' 'zext_ln53_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 326 [1/1] (0.73ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %k_load" [d4.cpp:53]   --->   Operation 326 'mux' 'tmp_2' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 327 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i32 %tmp_2" [d4.cpp:53]   --->   Operation 327 'zext' 'zext_ln53_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 328 [1/1] (1.01ns)   --->   "%add_ln53 = add i33 %zext_ln53_2, i33 %zext_ln53_1" [d4.cpp:53]   --->   Operation 328 'add' 'add_ln53' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i33 %add_ln53" [d4.cpp:53]   --->   Operation 329 'zext' 'zext_ln53_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 330 '%mul_ln53 = mul i64 %zext_ln53_4, i64 %zext_ln53'
ST_2 : Operation 330 [1/1] (2.84ns)   --->   "%mul_ln53 = mul i64 %zext_ln53_4, i64 %zext_ln53" [d4.cpp:53]   --->   Operation 330 'mul' 'mul_ln53' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d4.cpp:53]   --->   Operation 331 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 332 [1/1] (0.00ns)   --->   "%zext_ln53_16 = zext i1 %tmp_8" [d4.cpp:53]   --->   Operation 332 'zext' 'zext_ln53_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 333 [1/1] (0.17ns)   --->   "%select_ln53 = select i1 %tmp_8, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 333 'select' 'select_ln53' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_12)   --->   "%and_ln53 = and i64 %mul_ln53, i64 %select_ln53" [d4.cpp:53]   --->   Operation 334 'and' 'and_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 335 [1/1] (0.79ns)   --->   "%cmp86 = icmp_ugt  i4 %i_1, i4 6" [d4.cpp:53]   --->   Operation 335 'icmp' 'cmp86' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 336 [1/1] (0.73ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 336 'mux' 'tmp_3' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i32 %tmp_3" [d4.cpp:72]   --->   Operation 337 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 338 '%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53'
ST_2 : Operation 338 [1/1] (2.09ns)   --->   "%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 338 'mul' 'mul_ln74' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 339 [1/1] (0.17ns)   --->   "%select_ln74_5 = select i1 %cmp86, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 339 'select' 'select_ln74_5' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.37ns)   --->   "%and_ln74 = and i64 %mul_ln74, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 340 'and' 'and_ln74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 341 [1/1] (0.35ns)   --->   "%xor_ln83 = xor i4 %i_1, i4 15" [d4.cpp:83]   --->   Operation 341 'xor' 'xor_ln83' <Predicate = true> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.73ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 342 'mux' 'tmp_5' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 343 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i32 %tmp_5" [d4.cpp:83]   --->   Operation 343 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 344 '%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53'
ST_2 : Operation 344 [1/1] (2.09ns)   --->   "%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 344 'mul' 'mul_ln83' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_1)   --->   "%select_ln83_1 = select i1 %and_ln83, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 345 'select' 'select_ln83_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 346 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_1 = and i64 %mul_ln83, i64 %select_ln83_1" [d4.cpp:83]   --->   Operation 346 'and' 'and_ln83_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 347 [1/1] (0.79ns)   --->   "%add_ln53_1 = add i4 %k_load, i4 5" [d4.cpp:53]   --->   Operation 347 'add' 'add_ln53_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 348 [1/1] (0.73ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 348 'mux' 'tmp_6' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 349 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i32 %tmp_6" [d4.cpp:72]   --->   Operation 349 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 350 [1/1] (0.44ns)   --->   "%select_ln74 = select i1 %tmp_126, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 350 'select' 'select_ln74' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 351 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i32 %select_ln74" [d4.cpp:74]   --->   Operation 351 'zext' 'zext_ln74' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 352 '%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53'
ST_2 : Operation 352 [1/1] (2.09ns)   --->   "%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 352 'mul' 'mul_ln74_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 353 [1/1] (0.37ns)   --->   "%and_ln74_2 = and i64 %mul_ln74_2, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 353 'and' 'and_ln74_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 354 '%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53'
ST_2 : Operation 354 [1/1] (2.09ns)   --->   "%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 354 'mul' 'mul_ln74_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_11)   --->   "%select_ln74_7 = select i1 %icmp_ln63, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 355 'select' 'select_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_11)   --->   "%and_ln74_3 = and i64 %mul_ln74_3, i64 %select_ln74_7" [d4.cpp:74]   --->   Operation 356 'and' 'and_ln74_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 357 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i3 %sub_ln78_20" [d4.cpp:83]   --->   Operation 357 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 358 [1/1] (0.79ns)   --->   "%sub_ln83 = sub i4 14, i4 %i_1" [d4.cpp:83]   --->   Operation 358 'sub' 'sub_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_14_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 359 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 360 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i32 %tmp_s" [d4.cpp:83]   --->   Operation 360 'zext' 'zext_ln83_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 361 [1/1] (0.79ns)   --->   "%icmp_ln83 = icmp_ult  i4 %i_1, i4 14" [d4.cpp:83]   --->   Operation 361 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_11)   --->   "%and_ln83_2 = and i1 %icmp_ln83, i1 %cmp64" [d4.cpp:83]   --->   Operation 362 'and' 'and_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 363 '%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53'
ST_2 : Operation 363 [1/1] (2.09ns)   --->   "%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 363 'mul' 'mul_ln83_1' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_11)   --->   "%select_ln83_2 = select i1 %and_ln83_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 364 'select' 'select_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_11)   --->   "%and_ln83_3 = and i64 %mul_ln83_1, i64 %select_ln83_2" [d4.cpp:83]   --->   Operation 365 'and' 'and_ln83_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 366 [1/1] (0.73ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 366 'mux' 'tmp_4' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 367 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i32 %tmp_4" [d4.cpp:72]   --->   Operation 367 'zext' 'zext_ln72_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 368 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83" [d4.cpp:74]   --->   Operation 368 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.00ns)   --->   "%zext_ln74_1 = zext i32 %tmp_7" [d4.cpp:74]   --->   Operation 369 'zext' 'zext_ln74_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 370 '%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53'
ST_2 : Operation 370 [1/1] (2.09ns)   --->   "%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 370 'mul' 'mul_ln74_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_25)   --->   "%and_ln74_4 = and i64 %mul_ln74_4, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 371 'and' 'and_ln74_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 372 '%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53'
ST_2 : Operation 372 [1/1] (2.09ns)   --->   "%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 372 'mul' 'mul_ln74_5' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_25)   --->   "%select_ln74_8 = select i1 %icmp_ln63_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 373 'select' 'select_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_25)   --->   "%and_ln74_5 = and i64 %mul_ln74_5, i64 %select_ln74_8" [d4.cpp:74]   --->   Operation 374 'and' 'and_ln74_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 375 [1/1] (0.79ns)   --->   "%sub_ln83_1 = sub i4 13, i4 %i_1" [d4.cpp:83]   --->   Operation 375 'sub' 'sub_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 376 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln83_2 = zext i32 %tmp_9" [d4.cpp:83]   --->   Operation 377 'zext' 'zext_ln83_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 378 [1/1] (0.79ns)   --->   "%icmp_ln83_1 = icmp_ult  i4 %i_1, i4 13" [d4.cpp:83]   --->   Operation 378 'icmp' 'icmp_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_26)   --->   "%and_ln83_4 = and i1 %icmp_ln83_1, i1 %and_ln83" [d4.cpp:83]   --->   Operation 379 'and' 'and_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 380 '%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53'
ST_2 : Operation 380 [1/1] (2.09ns)   --->   "%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 380 'mul' 'mul_ln83_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_26)   --->   "%select_ln83_3 = select i1 %and_ln83_4, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 381 'select' 'select_ln83_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_26)   --->   "%and_ln83_5 = and i64 %mul_ln83_2, i64 %select_ln83_3" [d4.cpp:83]   --->   Operation 382 'and' 'and_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (0.73ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 383 'mux' 'tmp_10' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 384 [1/1] (0.00ns)   --->   "%zext_ln72_3 = zext i32 %tmp_10" [d4.cpp:72]   --->   Operation 384 'zext' 'zext_ln72_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 385 [1/1] (0.00ns)   --->   "%zext_ln74_60 = zext i32 %tmp_10" [d4.cpp:74]   --->   Operation 385 'zext' 'zext_ln74_60' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 386 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_1" [d4.cpp:74]   --->   Operation 386 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 387 [1/1] (0.00ns)   --->   "%zext_ln74_2 = zext i32 %tmp_11" [d4.cpp:74]   --->   Operation 387 'zext' 'zext_ln74_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 388 '%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53'
ST_2 : Operation 388 [1/1] (2.09ns)   --->   "%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 388 'mul' 'mul_ln74_6' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_41)   --->   "%and_ln74_6 = and i64 %mul_ln74_6, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 389 'and' 'and_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 390 '%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53'
ST_2 : Operation 390 [1/1] (2.09ns)   --->   "%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 390 'mul' 'mul_ln74_7' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_41)   --->   "%select_ln74_9 = select i1 %icmp_ln63_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 391 'select' 'select_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_41)   --->   "%and_ln74_7 = and i64 %mul_ln74_7, i64 %select_ln74_9" [d4.cpp:74]   --->   Operation 392 'and' 'and_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 393 [1/1] (0.79ns)   --->   "%sub_ln83_2 = sub i4 12, i4 %i_1" [d4.cpp:83]   --->   Operation 393 'sub' 'sub_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 394 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 394 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.00ns)   --->   "%zext_ln83_3 = zext i32 %tmp_12" [d4.cpp:83]   --->   Operation 395 'zext' 'zext_ln83_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 396 [1/1] (0.79ns)   --->   "%icmp_ln83_2 = icmp_ult  i4 %i_1, i4 12" [d4.cpp:83]   --->   Operation 396 'icmp' 'icmp_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_42)   --->   "%and_ln83_6 = and i1 %icmp_ln83_2, i1 %and_ln83" [d4.cpp:83]   --->   Operation 397 'and' 'and_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 398 '%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53'
ST_2 : Operation 398 [1/1] (2.09ns)   --->   "%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 398 'mul' 'mul_ln83_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_42)   --->   "%select_ln83_4 = select i1 %and_ln83_6, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 399 'select' 'select_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_42)   --->   "%and_ln83_7 = and i64 %mul_ln83_3, i64 %select_ln83_4" [d4.cpp:83]   --->   Operation 400 'and' 'and_ln83_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 401 [1/1] (0.73ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 401 'mux' 'tmp_13' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln72_4 = zext i32 %tmp_13" [d4.cpp:72]   --->   Operation 402 'zext' 'zext_ln72_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 403 [1/1] (0.00ns)   --->   "%zext_ln74_61 = zext i32 %tmp_13" [d4.cpp:74]   --->   Operation 403 'zext' 'zext_ln74_61' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 404 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_10" [d4.cpp:74]   --->   Operation 404 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 405 [1/1] (0.00ns)   --->   "%zext_ln74_3 = zext i32 %tmp_14" [d4.cpp:74]   --->   Operation 405 'zext' 'zext_ln74_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 406 '%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53'
ST_2 : Operation 406 [1/1] (2.09ns)   --->   "%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 406 'mul' 'mul_ln74_8' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%and_ln74_8 = and i64 %mul_ln74_8, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 407 'and' 'and_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 408 '%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53'
ST_2 : Operation 408 [1/1] (2.09ns)   --->   "%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 408 'mul' 'mul_ln74_9' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%select_ln74_10 = select i1 %icmp_ln63_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 409 'select' 'select_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%and_ln74_9 = and i64 %mul_ln74_9, i64 %select_ln74_10" [d4.cpp:74]   --->   Operation 410 'and' 'and_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 411 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 411 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 412 [1/1] (0.00ns)   --->   "%zext_ln83_4 = zext i32 %tmp_15" [d4.cpp:83]   --->   Operation 412 'zext' 'zext_ln83_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 413 [1/1] (0.79ns)   --->   "%icmp_ln83_3 = icmp_ult  i4 %i_1, i4 11" [d4.cpp:83]   --->   Operation 413 'icmp' 'icmp_ln83_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_9)   --->   "%and_ln83_8 = and i1 %icmp_ln83_3, i1 %and_ln83" [d4.cpp:83]   --->   Operation 414 'and' 'and_ln83_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 415 '%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53'
ST_2 : Operation 415 [1/1] (2.09ns)   --->   "%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 415 'mul' 'mul_ln83_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_9)   --->   "%select_ln83_5 = select i1 %and_ln83_8, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 416 'select' 'select_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 417 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_9 = and i64 %mul_ln83_4, i64 %select_ln83_5" [d4.cpp:83]   --->   Operation 417 'and' 'and_ln83_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 418 [1/1] (0.73ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 418 'mux' 'tmp_16' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 419 [1/1] (0.00ns)   --->   "%zext_ln72_5 = zext i32 %tmp_16" [d4.cpp:72]   --->   Operation 419 'zext' 'zext_ln72_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 420 [1/1] (0.00ns)   --->   "%zext_ln74_62 = zext i32 %tmp_16" [d4.cpp:74]   --->   Operation 420 'zext' 'zext_ln74_62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 421 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_11" [d4.cpp:74]   --->   Operation 421 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 422 [1/1] (0.00ns)   --->   "%zext_ln74_4 = zext i32 %tmp_17" [d4.cpp:74]   --->   Operation 422 'zext' 'zext_ln74_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 423 '%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53'
ST_2 : Operation 423 [1/1] (2.09ns)   --->   "%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 423 'mul' 'mul_ln74_10' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln74_10 = and i64 %mul_ln74_10, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 424 'and' 'and_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 425 '%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53'
ST_2 : Operation 425 [1/1] (2.09ns)   --->   "%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 425 'mul' 'mul_ln74_11' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 426 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%select_ln74_11 = select i1 %icmp_ln63_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 426 'select' 'select_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln74_11 = and i64 %mul_ln74_11, i64 %select_ln74_11" [d4.cpp:74]   --->   Operation 427 'and' 'and_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 428 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 428 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 429 [1/1] (0.00ns)   --->   "%zext_ln83_5 = zext i32 %tmp_18" [d4.cpp:83]   --->   Operation 429 'zext' 'zext_ln83_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 430 [1/1] (0.79ns)   --->   "%icmp_ln83_4 = icmp_ult  i4 %i_1, i4 10" [d4.cpp:83]   --->   Operation 430 'icmp' 'icmp_ln83_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_11)   --->   "%and_ln83_10 = and i1 %icmp_ln83_4, i1 %and_ln83" [d4.cpp:83]   --->   Operation 431 'and' 'and_ln83_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 432 '%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53'
ST_2 : Operation 432 [1/1] (2.09ns)   --->   "%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 432 'mul' 'mul_ln83_5' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 433 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_11)   --->   "%select_ln83_6 = select i1 %and_ln83_10, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 433 'select' 'select_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 434 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_11 = and i64 %mul_ln83_5, i64 %select_ln83_6" [d4.cpp:83]   --->   Operation 434 'and' 'and_ln83_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 435 [1/1] (0.73ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 435 'mux' 'tmp_19' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 436 [1/1] (0.00ns)   --->   "%zext_ln72_6 = zext i32 %tmp_19" [d4.cpp:72]   --->   Operation 436 'zext' 'zext_ln72_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 437 [1/1] (0.00ns)   --->   "%zext_ln74_63 = zext i32 %tmp_19" [d4.cpp:74]   --->   Operation 437 'zext' 'zext_ln74_63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 438 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_12" [d4.cpp:74]   --->   Operation 438 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 439 [1/1] (0.00ns)   --->   "%zext_ln74_5 = zext i32 %tmp_20" [d4.cpp:74]   --->   Operation 439 'zext' 'zext_ln74_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 440 '%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53'
ST_2 : Operation 440 [1/1] (2.09ns)   --->   "%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 440 'mul' 'mul_ln74_12' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 441 [1/1] (0.37ns)   --->   "%and_ln74_12 = and i64 %mul_ln74_12, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 441 'and' 'and_ln74_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 442 '%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53'
ST_2 : Operation 442 [1/1] (2.09ns)   --->   "%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 442 'mul' 'mul_ln74_13' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 443 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_40)   --->   "%select_ln74_12 = select i1 %icmp_ln63_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 443 'select' 'select_ln74_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_40)   --->   "%and_ln74_13 = and i64 %mul_ln74_13, i64 %select_ln74_12" [d4.cpp:74]   --->   Operation 444 'and' 'and_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 445 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_13" [d4.cpp:74]   --->   Operation 445 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 446 [1/1] (0.00ns)   --->   "%zext_ln74_6 = zext i32 %tmp_21" [d4.cpp:74]   --->   Operation 446 'zext' 'zext_ln74_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 447 '%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53'
ST_2 : Operation 447 [1/1] (2.09ns)   --->   "%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 447 'mul' 'mul_ln74_14' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 448 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%select_ln74_13 = select i1 %icmp_ln74, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 448 'select' 'select_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%and_ln74_14 = and i64 %mul_ln74_14, i64 %select_ln74_13" [d4.cpp:74]   --->   Operation 449 'and' 'and_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 450 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58" [d4.cpp:74]   --->   Operation 450 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 451 [1/1] (0.00ns)   --->   "%zext_ln74_7 = zext i32 %tmp_22" [d4.cpp:74]   --->   Operation 451 'zext' 'zext_ln74_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 452 '%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53'
ST_2 : Operation 452 [1/1] (2.09ns)   --->   "%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 452 'mul' 'mul_ln74_15' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_5)   --->   "%select_ln74_14 = select i1 %icmp_ln74_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 453 'select' 'select_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_5)   --->   "%and_ln74_15 = and i64 %mul_ln74_15, i64 %select_ln74_14" [d4.cpp:74]   --->   Operation 454 'and' 'and_ln74_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 455 [1/1] (0.00ns)   --->   "%zext_ln75_5 = zext i1 %icmp_ln74_1" [d4.cpp:75]   --->   Operation 455 'zext' 'zext_ln75_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 456 [1/1] (0.79ns)   --->   "%sub_ln78 = sub i4 %sub_ln58, i4 %zext_ln75_5" [d4.cpp:78]   --->   Operation 456 'sub' 'sub_ln78' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 457 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78" [d4.cpp:74]   --->   Operation 457 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 458 [1/1] (0.00ns)   --->   "%zext_ln74_8 = zext i32 %tmp_23" [d4.cpp:74]   --->   Operation 458 'zext' 'zext_ln74_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 459 '%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53'
ST_2 : Operation 459 [1/1] (2.09ns)   --->   "%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 459 'mul' 'mul_ln74_16' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 460 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_10)   --->   "%select_ln74_15 = select i1 %icmp_ln74_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 460 'select' 'select_ln74_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_10)   --->   "%and_ln74_16 = and i64 %mul_ln74_16, i64 %select_ln74_15" [d4.cpp:74]   --->   Operation 461 'and' 'and_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 462 [1/1] (0.00ns)   --->   "%zext_ln75_6 = zext i1 %icmp_ln74_2" [d4.cpp:75]   --->   Operation 462 'zext' 'zext_ln75_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 463 [1/1] (0.79ns)   --->   "%sub_ln78_1 = sub i4 %sub_ln78, i4 %zext_ln75_6" [d4.cpp:78]   --->   Operation 463 'sub' 'sub_ln78_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 464 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 464 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 465 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i32 %tmp_24" [d4.cpp:86]   --->   Operation 465 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 466 '%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast'
ST_2 : Operation 466 [1/1] (2.09ns)   --->   "%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 466 'mul' 'mul_ln86' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 467 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_1)   --->   "%select_ln86_5 = select i1 %and_ln86, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 467 'select' 'select_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 468 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_1 = and i64 %mul_ln86, i64 %select_ln86_5" [d4.cpp:86]   --->   Operation 468 'and' 'and_ln86_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 469 [1/1] (0.44ns)   --->   "%select_ln86 = select i1 %and_ln86, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 469 'select' 'select_ln86' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 470 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i32 %select_ln86" [d4.cpp:86]   --->   Operation 470 'zext' 'zext_ln86_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 471 '%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86'
ST_2 : Operation 471 [1/1] (2.09ns)   --->   "%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 471 'mul' 'mul_ln86_1' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 472 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_26)   --->   "%select_ln86_6 = select i1 %and_ln86_2, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 472 'select' 'select_ln86_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 473 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_26)   --->   "%and_ln86_3 = and i64 %mul_ln86_1, i64 %select_ln86_6" [d4.cpp:86]   --->   Operation 473 'and' 'and_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 474 [1/1] (0.00ns)   --->   "%sext_ln67 = sext i3 %sub_ln58_16" [d4.cpp:67]   --->   Operation 474 'sext' 'sext_ln67' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 475 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67" [d4.cpp:86]   --->   Operation 475 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 476 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i32 %tmp_27" [d4.cpp:86]   --->   Operation 476 'zext' 'zext_ln86_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 477 '%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86'
ST_2 : Operation 477 [1/1] (2.09ns)   --->   "%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 477 'mul' 'mul_ln86_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_42)   --->   "%select_ln86_7 = select i1 %and_ln86_4, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 478 'select' 'select_ln86_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_42)   --->   "%and_ln86_5 = and i64 %mul_ln86_2, i64 %select_ln86_7" [d4.cpp:86]   --->   Operation 479 'and' 'and_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 480 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i1 %and_ln86_4" [d4.cpp:58]   --->   Operation 480 'zext' 'zext_ln58_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 481 [1/1] (0.67ns)   --->   "%sub_ln58_1 = sub i3 %sub_ln58_16, i3 %zext_ln58_1" [d4.cpp:58]   --->   Operation 481 'sub' 'sub_ln58_1' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 482 [1/1] (0.00ns)   --->   "%sext_ln67_1 = sext i3 %sub_ln58_1" [d4.cpp:67]   --->   Operation 482 'sext' 'sext_ln67_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 483 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_1" [d4.cpp:86]   --->   Operation 483 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 484 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i32 %tmp_29" [d4.cpp:86]   --->   Operation 484 'zext' 'zext_ln86_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 485 [1/1] (0.28ns)   --->   "%and_ln86_6 = and i1 %icmp_ln67_3, i1 %and_ln83" [d4.cpp:86]   --->   Operation 485 'and' 'and_ln86_6' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 486 '%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86'
ST_2 : Operation 486 [1/1] (2.09ns)   --->   "%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 486 'mul' 'mul_ln86_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_7)   --->   "%select_ln86_8 = select i1 %and_ln86_6, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 487 'select' 'select_ln86_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 488 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_7 = and i64 %mul_ln86_3, i64 %select_ln86_8" [d4.cpp:86]   --->   Operation 488 'and' 'and_ln86_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 489 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i1 %and_ln86_6" [d4.cpp:87]   --->   Operation 489 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 490 [1/1] (0.67ns)   --->   "%sub_ln58_2 = sub i4 %sext_ln67_1, i4 %zext_ln87" [d4.cpp:58]   --->   Operation 490 'sub' 'sub_ln58_2' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 491 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_2" [d4.cpp:86]   --->   Operation 491 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 492 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i32 %tmp_31" [d4.cpp:86]   --->   Operation 492 'zext' 'zext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 493 [1/1] (0.28ns)   --->   "%and_ln86_8 = and i1 %icmp_ln67_4, i1 %and_ln83" [d4.cpp:86]   --->   Operation 493 'and' 'and_ln86_8' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 494 '%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86'
ST_2 : Operation 494 [1/1] (2.09ns)   --->   "%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 494 'mul' 'mul_ln86_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 495 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%select_ln86_9 = select i1 %and_ln86_8, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 495 'select' 'select_ln86_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 496 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_9 = and i64 %mul_ln86_4, i64 %select_ln86_9" [d4.cpp:86]   --->   Operation 496 'and' 'and_ln86_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 497 [1/1] (0.00ns)   --->   "%zext_ln87_1 = zext i1 %and_ln86_8" [d4.cpp:87]   --->   Operation 497 'zext' 'zext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 498 [1/1] (0.79ns)   --->   "%sub_ln58_3 = sub i4 %sub_ln58_2, i4 %zext_ln87_1" [d4.cpp:58]   --->   Operation 498 'sub' 'sub_ln58_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 499 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_3" [d4.cpp:86]   --->   Operation 499 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 500 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %tmp_33" [d4.cpp:86]   --->   Operation 500 'zext' 'zext_ln86_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 501 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_40)   --->   "%and_ln86_10 = and i1 %icmp_ln67_5, i1 %and_ln83" [d4.cpp:86]   --->   Operation 501 'and' 'and_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 502 '%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86'
ST_2 : Operation 502 [1/1] (2.09ns)   --->   "%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 502 'mul' 'mul_ln86_5' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_40)   --->   "%select_ln86_10 = select i1 %and_ln86_10, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 503 'select' 'select_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_40)   --->   "%and_ln86_11 = and i64 %mul_ln86_5, i64 %select_ln86_10" [d4.cpp:86]   --->   Operation 504 'and' 'and_ln86_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 505 [1/1] (0.48ns)   --->   "%tmp_34 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 505 'mux' 'tmp_34' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 506 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i32 %tmp_34" [d4.cpp:53]   --->   Operation 506 'zext' 'zext_ln53_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 507 [1/1] (0.79ns)   --->   "%cmp86_1 = icmp_ugt  i4 %add_ln53_2, i4 6" [d4.cpp:53]   --->   Operation 507 'icmp' 'cmp86_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 508 [1/1] (0.48ns)   --->   "%tmp_35 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 508 'mux' 'tmp_35' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 509 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i32 %tmp_35" [d4.cpp:53]   --->   Operation 509 'zext' 'zext_ln53_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 510 [1/1] (1.01ns)   --->   "%add_ln53_3 = add i33 %zext_ln53_6, i33 %zext_ln74_63" [d4.cpp:53]   --->   Operation 510 'add' 'add_ln53_3' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 511 [1/1] (0.00ns)   --->   "%zext_ln53_8 = zext i33 %add_ln53_3" [d4.cpp:53]   --->   Operation 511 'zext' 'zext_ln53_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 512 '%mul_ln53_1 = mul i64 %zext_ln53_8, i64 %zext_ln53_3'
ST_2 : Operation 512 [1/1] (2.84ns)   --->   "%mul_ln53_1 = mul i64 %zext_ln53_8, i64 %zext_ln53_3" [d4.cpp:53]   --->   Operation 512 'mul' 'mul_ln53_1' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 513 [1/1] (0.00ns)   --->   "%zext_ln53_17 = zext i1 %tmp_131" [d4.cpp:53]   --->   Operation 513 'zext' 'zext_ln53_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 514 [1/1] (0.17ns)   --->   "%select_ln53_1 = select i1 %tmp_131, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 514 'select' 'select_ln53_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 515 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_12)   --->   "%and_ln53_1 = and i64 %mul_ln53_1, i64 %select_ln53_1" [d4.cpp:53]   --->   Operation 515 'and' 'and_ln53_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 516 [1/1] (0.73ns)   --->   "%tmp_36 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 516 'mux' 'tmp_36' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 517 [1/1] (0.00ns)   --->   "%zext_ln72_7 = zext i32 %tmp_36" [d4.cpp:72]   --->   Operation 517 'zext' 'zext_ln72_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 518 [1/1] (0.73ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 518 'mux' 'tmp_37' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 519 [1/1] (0.00ns)   --->   "%zext_ln83_6 = zext i32 %tmp_37" [d4.cpp:83]   --->   Operation 519 'zext' 'zext_ln83_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 520 '%mul_ln83_6 = mul i64 %zext_ln72_7, i64 %zext_ln53_3'
ST_2 : Operation 520 [1/1] (2.09ns)   --->   "%mul_ln83_6 = mul i64 %zext_ln72_7, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 520 'mul' 'mul_ln83_6' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 521 [1/1] (0.17ns)   --->   "%select_ln83_7 = select i1 %cmp86_1, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 521 'select' 'select_ln83_7' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 522 [1/1] (0.37ns)   --->   "%and_ln83_12 = and i64 %mul_ln83_6, i64 %select_ln83_7" [d4.cpp:83]   --->   Operation 522 'and' 'and_ln83_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 523 '%mul_ln83_7 = mul i64 %zext_ln83_6, i64 %zext_ln53_3'
ST_2 : Operation 523 [1/1] (2.09ns)   --->   "%mul_ln83_7 = mul i64 %zext_ln83_6, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 523 'mul' 'mul_ln83_7' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 524 [1/1] (0.17ns)   --->   "%select_ln83_8 = select i1 %cmp64_1, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 524 'select' 'select_ln83_8' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 525 [1/1] (0.37ns)   --->   "%and_ln83_13 = and i64 %mul_ln83_7, i64 %select_ln83_8" [d4.cpp:83]   --->   Operation 525 'and' 'and_ln83_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 526 '%mul_ln74_22 = mul i64 %zext_ln53_3, i64 %zext_ln72'
ST_2 : Operation 526 [1/1] (2.09ns)   --->   "%mul_ln74_22 = mul i64 %zext_ln53_3, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 526 'mul' 'mul_ln74_22' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 527 [1/1] (0.37ns)   --->   "%and_ln74_17 = and i64 %mul_ln74_22, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 527 'and' 'and_ln74_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 528 '%mul_ln74_23 = mul i64 %zext_ln53_3, i64 %conv101_cast'
ST_2 : Operation 528 [1/1] (2.09ns)   --->   "%mul_ln74_23 = mul i64 %zext_ln53_3, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 528 'mul' 'mul_ln74_23' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_14)   --->   "%select_ln74_16 = select i1 %icmp_ln63_6, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 529 'select' 'select_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_14)   --->   "%and_ln74_18 = and i64 %mul_ln74_23, i64 %select_ln74_16" [d4.cpp:74]   --->   Operation 530 'and' 'and_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 531 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 531 'mux' 'tmp_38' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 532 [1/1] (0.00ns)   --->   "%zext_ln83_7 = zext i32 %tmp_38" [d4.cpp:83]   --->   Operation 532 'zext' 'zext_ln83_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 533 [1/1] (0.79ns)   --->   "%icmp_ln83_5 = icmp_ult  i4 %add_ln53_2, i4 14" [d4.cpp:83]   --->   Operation 533 'icmp' 'icmp_ln83_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 534 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_14)   --->   "%and_ln83_14 = and i1 %icmp_ln83_5, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 534 'and' 'and_ln83_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 535 '%mul_ln83_8 = mul i64 %zext_ln83_7, i64 %zext_ln53_3'
ST_2 : Operation 535 [1/1] (2.09ns)   --->   "%mul_ln83_8 = mul i64 %zext_ln83_7, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 535 'mul' 'mul_ln83_8' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 536 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_14)   --->   "%select_ln83_10 = select i1 %and_ln83_14, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 536 'select' 'select_ln83_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 537 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_14)   --->   "%and_ln83_15 = and i64 %mul_ln83_8, i64 %select_ln83_10" [d4.cpp:83]   --->   Operation 537 'and' 'and_ln83_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 538 [1/1] (0.44ns)   --->   "%select_ln74_1 = select i1 %icmp_ln63_6, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 538 'select' 'select_ln74_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 539 [1/1] (0.00ns)   --->   "%zext_ln74_14 = zext i32 %select_ln74_1" [d4.cpp:74]   --->   Operation 539 'zext' 'zext_ln74_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 540 '%mul_ln74_24 = mul i64 %zext_ln53_3, i64 %zext_ln72_1'
ST_2 : Operation 540 [1/1] (2.09ns)   --->   "%mul_ln74_24 = mul i64 %zext_ln53_3, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 540 'mul' 'mul_ln74_24' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 541 [1/1] (0.37ns)   --->   "%and_ln74_19 = and i64 %mul_ln74_24, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 541 'and' 'and_ln74_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 542 '%mul_ln74_25 = mul i64 %zext_ln74_14, i64 %zext_ln53_3'
ST_2 : Operation 542 [1/1] (2.09ns)   --->   "%mul_ln74_25 = mul i64 %zext_ln74_14, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 542 'mul' 'mul_ln74_25' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 543 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_20)   --->   "%select_ln74_17 = select i1 %icmp_ln63_7, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 543 'select' 'select_ln74_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 544 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_20 = and i64 %mul_ln74_25, i64 %select_ln74_17" [d4.cpp:74]   --->   Operation 544 'and' 'and_ln74_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 545 [1/1] (0.00ns)   --->   "%sext_ln83_2 = sext i3 %sub_ln78_22" [d4.cpp:83]   --->   Operation 545 'sext' 'sext_ln83_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 546 [1/1] (0.48ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 546 'mux' 'tmp_39' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 547 [1/1] (0.00ns)   --->   "%zext_ln83_8 = zext i32 %tmp_39" [d4.cpp:83]   --->   Operation 547 'zext' 'zext_ln83_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 548 [1/1] (0.79ns)   --->   "%icmp_ln83_6 = icmp_ult  i4 %add_ln53_2, i4 13" [d4.cpp:83]   --->   Operation 548 'icmp' 'icmp_ln83_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 549 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_29)   --->   "%and_ln83_16 = and i1 %icmp_ln83_6, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 549 'and' 'and_ln83_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 550 '%mul_ln83_9 = mul i64 %zext_ln83_8, i64 %zext_ln53_3'
ST_2 : Operation 550 [1/1] (2.09ns)   --->   "%mul_ln83_9 = mul i64 %zext_ln83_8, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 550 'mul' 'mul_ln83_9' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 551 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_29)   --->   "%select_ln83_11 = select i1 %and_ln83_16, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 551 'select' 'select_ln83_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 552 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_29)   --->   "%and_ln83_17 = and i64 %mul_ln83_9, i64 %select_ln83_11" [d4.cpp:83]   --->   Operation 552 'and' 'and_ln83_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 553 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_2" [d4.cpp:74]   --->   Operation 553 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 554 [1/1] (0.00ns)   --->   "%zext_ln74_15 = zext i32 %tmp_40" [d4.cpp:74]   --->   Operation 554 'zext' 'zext_ln74_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 555 '%mul_ln74_26 = mul i64 %zext_ln53_3, i64 %zext_ln72_2'
ST_2 : Operation 555 [1/1] (2.09ns)   --->   "%mul_ln74_26 = mul i64 %zext_ln53_3, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 555 'mul' 'mul_ln74_26' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 556 [1/1] (0.37ns)   --->   "%and_ln74_21 = and i64 %mul_ln74_26, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 556 'and' 'and_ln74_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 557 '%mul_ln74_27 = mul i64 %zext_ln74_15, i64 %zext_ln53_3'
ST_2 : Operation 557 [1/1] (2.09ns)   --->   "%mul_ln74_27 = mul i64 %zext_ln74_15, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 557 'mul' 'mul_ln74_27' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 558 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_22)   --->   "%select_ln74_18 = select i1 %icmp_ln63_8, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 558 'select' 'select_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 559 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_22 = and i64 %mul_ln74_27, i64 %select_ln74_18" [d4.cpp:74]   --->   Operation 559 'and' 'and_ln74_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 560 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 560 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 561 [1/1] (0.00ns)   --->   "%zext_ln83_9 = zext i32 %tmp_41" [d4.cpp:83]   --->   Operation 561 'zext' 'zext_ln83_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 562 [1/1] (0.79ns)   --->   "%icmp_ln83_7 = icmp_ult  i4 %add_ln53_2, i4 12" [d4.cpp:83]   --->   Operation 562 'icmp' 'icmp_ln83_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_19)   --->   "%and_ln83_18 = and i1 %icmp_ln83_7, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 563 'and' 'and_ln83_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 564 '%mul_ln83_10 = mul i64 %zext_ln83_9, i64 %zext_ln53_3'
ST_2 : Operation 564 [1/1] (2.09ns)   --->   "%mul_ln83_10 = mul i64 %zext_ln83_9, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 564 'mul' 'mul_ln83_10' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 565 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_19)   --->   "%select_ln83_12 = select i1 %and_ln83_18, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 565 'select' 'select_ln83_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 566 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_19 = and i64 %mul_ln83_10, i64 %select_ln83_12" [d4.cpp:83]   --->   Operation 566 'and' 'and_ln83_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 567 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_3" [d4.cpp:74]   --->   Operation 567 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 568 [1/1] (0.00ns)   --->   "%zext_ln74_16 = zext i32 %tmp_42" [d4.cpp:74]   --->   Operation 568 'zext' 'zext_ln74_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 569 '%mul_ln74_28 = mul i64 %zext_ln53_3, i64 %zext_ln72_3'
ST_2 : Operation 569 [1/1] (2.09ns)   --->   "%mul_ln74_28 = mul i64 %zext_ln53_3, i64 %zext_ln72_3" [d4.cpp:74]   --->   Operation 569 'mul' 'mul_ln74_28' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 570 [1/1] (0.37ns)   --->   "%and_ln74_23 = and i64 %mul_ln74_28, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 570 'and' 'and_ln74_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 571 '%mul_ln74_29 = mul i64 %zext_ln74_16, i64 %zext_ln53_3'
ST_2 : Operation 571 [1/1] (2.09ns)   --->   "%mul_ln74_29 = mul i64 %zext_ln74_16, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 571 'mul' 'mul_ln74_29' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_24)   --->   "%select_ln74_19 = select i1 %icmp_ln63_9, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 572 'select' 'select_ln74_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 573 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_24 = and i64 %mul_ln74_29, i64 %select_ln74_19" [d4.cpp:74]   --->   Operation 573 'and' 'and_ln74_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 574 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 574 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 575 [1/1] (0.00ns)   --->   "%zext_ln83_10 = zext i32 %tmp_43" [d4.cpp:83]   --->   Operation 575 'zext' 'zext_ln83_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 576 [1/1] (0.79ns)   --->   "%icmp_ln83_8 = icmp_ult  i4 %add_ln53_2, i4 11" [d4.cpp:83]   --->   Operation 576 'icmp' 'icmp_ln83_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 577 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_21)   --->   "%and_ln83_20 = and i1 %icmp_ln83_8, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 577 'and' 'and_ln83_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 578 '%mul_ln83_11 = mul i64 %zext_ln83_10, i64 %zext_ln53_3'
ST_2 : Operation 578 [1/1] (2.09ns)   --->   "%mul_ln83_11 = mul i64 %zext_ln83_10, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 578 'mul' 'mul_ln83_11' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 579 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_21)   --->   "%select_ln83_13 = select i1 %and_ln83_20, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 579 'select' 'select_ln83_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 580 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_21 = and i64 %mul_ln83_11, i64 %select_ln83_13" [d4.cpp:83]   --->   Operation 580 'and' 'and_ln83_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 581 [1/1] (0.48ns)   --->   "%tmp_44 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_14" [d4.cpp:74]   --->   Operation 581 'mux' 'tmp_44' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 582 [1/1] (0.00ns)   --->   "%zext_ln74_17 = zext i32 %tmp_44" [d4.cpp:74]   --->   Operation 582 'zext' 'zext_ln74_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 583 '%mul_ln74_30 = mul i64 %zext_ln53_3, i64 %zext_ln72_4'
ST_2 : Operation 583 [1/1] (2.09ns)   --->   "%mul_ln74_30 = mul i64 %zext_ln53_3, i64 %zext_ln72_4" [d4.cpp:74]   --->   Operation 583 'mul' 'mul_ln74_30' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 584 [1/1] (0.37ns)   --->   "%and_ln74_25 = and i64 %mul_ln74_30, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 584 'and' 'and_ln74_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 585 '%mul_ln74_31 = mul i64 %zext_ln74_17, i64 %zext_ln53_3'
ST_2 : Operation 585 [1/1] (2.09ns)   --->   "%mul_ln74_31 = mul i64 %zext_ln74_17, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 585 'mul' 'mul_ln74_31' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 586 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_26)   --->   "%select_ln74_20 = select i1 %icmp_ln63_10, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 586 'select' 'select_ln74_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 587 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_26 = and i64 %mul_ln74_31, i64 %select_ln74_20" [d4.cpp:74]   --->   Operation 587 'and' 'and_ln74_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 588 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 588 'mux' 'tmp_45' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 589 [1/1] (0.00ns)   --->   "%zext_ln83_11 = zext i32 %tmp_45" [d4.cpp:83]   --->   Operation 589 'zext' 'zext_ln83_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 590 [1/1] (0.79ns)   --->   "%icmp_ln83_9 = icmp_ult  i4 %add_ln53_2, i4 10" [d4.cpp:83]   --->   Operation 590 'icmp' 'icmp_ln83_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 591 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_23)   --->   "%and_ln83_22 = and i1 %icmp_ln83_9, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 591 'and' 'and_ln83_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 592 '%mul_ln83_12 = mul i64 %zext_ln83_11, i64 %zext_ln53_3'
ST_2 : Operation 592 [1/1] (2.09ns)   --->   "%mul_ln83_12 = mul i64 %zext_ln83_11, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 592 'mul' 'mul_ln83_12' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 593 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_23)   --->   "%select_ln83_14 = select i1 %and_ln83_22, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 593 'select' 'select_ln83_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 594 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_23 = and i64 %mul_ln83_12, i64 %select_ln83_14" [d4.cpp:83]   --->   Operation 594 'and' 'and_ln83_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 595 [1/1] (0.48ns)   --->   "%tmp_46 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_15" [d4.cpp:74]   --->   Operation 595 'mux' 'tmp_46' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 596 [1/1] (0.00ns)   --->   "%zext_ln74_18 = zext i32 %tmp_46" [d4.cpp:74]   --->   Operation 596 'zext' 'zext_ln74_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 597 '%mul_ln74_32 = mul i64 %zext_ln53_3, i64 %zext_ln72_5'
ST_2 : Operation 597 [1/1] (2.09ns)   --->   "%mul_ln74_32 = mul i64 %zext_ln53_3, i64 %zext_ln72_5" [d4.cpp:74]   --->   Operation 597 'mul' 'mul_ln74_32' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 598 [1/1] (0.37ns)   --->   "%and_ln74_27 = and i64 %mul_ln74_32, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 598 'and' 'and_ln74_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 599 '%mul_ln74_33 = mul i64 %zext_ln74_18, i64 %zext_ln53_3'
ST_2 : Operation 599 [1/1] (2.09ns)   --->   "%mul_ln74_33 = mul i64 %zext_ln74_18, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 599 'mul' 'mul_ln74_33' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 600 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_28)   --->   "%select_ln74_21 = select i1 %icmp_ln63_11, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 600 'select' 'select_ln74_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 601 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_28 = and i64 %mul_ln74_33, i64 %select_ln74_21" [d4.cpp:74]   --->   Operation 601 'and' 'and_ln74_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 602 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_16" [d4.cpp:74]   --->   Operation 602 'mux' 'tmp_47' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 603 [1/1] (0.00ns)   --->   "%zext_ln74_19 = zext i32 %tmp_47" [d4.cpp:74]   --->   Operation 603 'zext' 'zext_ln74_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 604 '%mul_ln74_34 = mul i64 %zext_ln74_19, i64 %zext_ln53_3'
ST_2 : Operation 604 [1/1] (2.09ns)   --->   "%mul_ln74_34 = mul i64 %zext_ln74_19, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 604 'mul' 'mul_ln74_34' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 605 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%select_ln74_22 = select i1 %cmp64, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 605 'select' 'select_ln74_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 606 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%and_ln74_29 = and i64 %mul_ln74_34, i64 %select_ln74_22" [d4.cpp:74]   --->   Operation 606 'and' 'and_ln74_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 607 [1/1] (0.79ns)   --->   "%sub_ln58_4 = sub i4 %sub_ln58_17, i4 %zext_ln53_16" [d4.cpp:58]   --->   Operation 607 'sub' 'sub_ln58_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 608 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_17" [d4.cpp:74]   --->   Operation 608 'mux' 'tmp_48' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 609 [1/1] (0.00ns)   --->   "%zext_ln74_20 = zext i32 %tmp_48" [d4.cpp:74]   --->   Operation 609 'zext' 'zext_ln74_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 610 '%mul_ln74_35 = mul i64 %zext_ln74_20, i64 %zext_ln53_3'
ST_2 : Operation 610 [1/1] (2.09ns)   --->   "%mul_ln74_35 = mul i64 %zext_ln74_20, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 610 'mul' 'mul_ln74_35' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 611 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_5)   --->   "%and_ln74_30 = and i64 %mul_ln74_35, i64 %select_ln53" [d4.cpp:74]   --->   Operation 611 'and' 'and_ln74_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 612 [1/1] (0.48ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_4" [d4.cpp:74]   --->   Operation 612 'mux' 'tmp_49' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 613 [1/1] (0.00ns)   --->   "%zext_ln74_21 = zext i32 %tmp_49" [d4.cpp:74]   --->   Operation 613 'zext' 'zext_ln74_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 614 '%mul_ln74_36 = mul i64 %zext_ln74_21, i64 %zext_ln53_3'
ST_2 : Operation 614 [1/1] (2.09ns)   --->   "%mul_ln74_36 = mul i64 %zext_ln74_21, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 614 'mul' 'mul_ln74_36' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 615 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_10)   --->   "%and_ln74_31 = and i64 %mul_ln74_36, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 615 'and' 'and_ln74_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 616 [1/1] (0.00ns)   --->   "%zext_ln75_11 = zext i1 %cmp86" [d4.cpp:75]   --->   Operation 616 'zext' 'zext_ln75_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 617 [1/1] (0.79ns)   --->   "%sub_ln78_2 = sub i4 %sub_ln58_4, i4 %zext_ln75_11" [d4.cpp:78]   --->   Operation 617 'sub' 'sub_ln78_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 618 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 618 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 619 [1/1] (0.00ns)   --->   "%zext_ln86_6 = zext i32 %tmp_50" [d4.cpp:86]   --->   Operation 619 'zext' 'zext_ln86_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 620 '%mul_ln86_6 = mul i64 %zext_ln86_6, i64 %conv101_cast'
ST_2 : Operation 620 [1/1] (2.09ns)   --->   "%mul_ln86_6 = mul i64 %zext_ln86_6, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 620 'mul' 'mul_ln86_6' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 621 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_13)   --->   "%select_ln86_11 = select i1 %and_ln86_12, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 621 'select' 'select_ln86_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 622 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_13 = and i64 %mul_ln86_6, i64 %select_ln86_11" [d4.cpp:86]   --->   Operation 622 'and' 'and_ln86_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 623 [1/1] (0.79ns)   --->   "%icmp_ln74_3 = icmp_ugt  i4 %i_1, i4 5" [d4.cpp:74]   --->   Operation 623 'icmp' 'icmp_ln74_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 624 [1/1] (0.44ns)   --->   "%select_ln86_1 = select i1 %and_ln86_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 624 'select' 'select_ln86_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 625 [1/1] (0.00ns)   --->   "%zext_ln86_7 = zext i32 %select_ln86_1" [d4.cpp:86]   --->   Operation 625 'zext' 'zext_ln86_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 626 '%mul_ln86_7 = mul i64 %zext_ln86_7, i64 %zext_ln86_6'
ST_2 : Operation 626 [1/1] (2.09ns)   --->   "%mul_ln86_7 = mul i64 %zext_ln86_7, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 626 'mul' 'mul_ln86_7' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 627 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_29)   --->   "%select_ln86_12 = select i1 %and_ln86_14, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 627 'select' 'select_ln86_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 628 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_29)   --->   "%and_ln86_15 = and i64 %mul_ln86_7, i64 %select_ln86_12" [d4.cpp:86]   --->   Operation 628 'and' 'and_ln86_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 629 [1/1] (0.00ns)   --->   "%sext_ln67_2 = sext i3 %sub_ln58_18" [d4.cpp:67]   --->   Operation 629 'sext' 'sext_ln67_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 630 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_2" [d4.cpp:86]   --->   Operation 630 'mux' 'tmp_53' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 631 [1/1] (0.00ns)   --->   "%zext_ln86_8 = zext i32 %tmp_53" [d4.cpp:86]   --->   Operation 631 'zext' 'zext_ln86_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 632 '%mul_ln86_8 = mul i64 %zext_ln86_8, i64 %zext_ln86_6'
ST_2 : Operation 632 [1/1] (2.09ns)   --->   "%mul_ln86_8 = mul i64 %zext_ln86_8, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 632 'mul' 'mul_ln86_8' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 633 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_17)   --->   "%select_ln86_13 = select i1 %and_ln86_16, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 633 'select' 'select_ln86_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 634 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_17 = and i64 %mul_ln86_8, i64 %select_ln86_13" [d4.cpp:86]   --->   Operation 634 'and' 'and_ln86_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 635 [1/1] (0.00ns)   --->   "%sext_ln67_3 = sext i3 %sub_ln58_5" [d4.cpp:67]   --->   Operation 635 'sext' 'sext_ln67_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 636 [1/1] (0.48ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_3" [d4.cpp:86]   --->   Operation 636 'mux' 'tmp_55' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 637 [1/1] (0.00ns)   --->   "%zext_ln86_9 = zext i32 %tmp_55" [d4.cpp:86]   --->   Operation 637 'zext' 'zext_ln86_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 638 '%mul_ln86_9 = mul i64 %zext_ln86_9, i64 %zext_ln86_6'
ST_2 : Operation 638 [1/1] (2.09ns)   --->   "%mul_ln86_9 = mul i64 %zext_ln86_9, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 638 'mul' 'mul_ln86_9' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 639 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_19)   --->   "%select_ln86_14 = select i1 %and_ln86_18, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 639 'select' 'select_ln86_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 640 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_19 = and i64 %mul_ln86_9, i64 %select_ln86_14" [d4.cpp:86]   --->   Operation 640 'and' 'and_ln86_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 641 [1/1] (0.00ns)   --->   "%zext_ln87_2 = zext i1 %and_ln86_18" [d4.cpp:87]   --->   Operation 641 'zext' 'zext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 642 [1/1] (0.67ns)   --->   "%sub_ln58_6 = sub i4 %sext_ln67_3, i4 %zext_ln87_2" [d4.cpp:58]   --->   Operation 642 'sub' 'sub_ln58_6' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 643 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_6" [d4.cpp:86]   --->   Operation 643 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 644 [1/1] (0.00ns)   --->   "%zext_ln86_10 = zext i32 %tmp_57" [d4.cpp:86]   --->   Operation 644 'zext' 'zext_ln86_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 645 [1/1] (0.28ns)   --->   "%and_ln86_20 = and i1 %icmp_ln67_9, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 645 'and' 'and_ln86_20' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 646 '%mul_ln86_10 = mul i64 %zext_ln86_10, i64 %zext_ln86_6'
ST_2 : Operation 646 [1/1] (2.09ns)   --->   "%mul_ln86_10 = mul i64 %zext_ln86_10, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 646 'mul' 'mul_ln86_10' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 647 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_21)   --->   "%select_ln86_15 = select i1 %and_ln86_20, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 647 'select' 'select_ln86_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 648 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_21 = and i64 %mul_ln86_10, i64 %select_ln86_15" [d4.cpp:86]   --->   Operation 648 'and' 'and_ln86_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 649 [1/1] (0.00ns)   --->   "%zext_ln87_3 = zext i1 %and_ln86_20" [d4.cpp:87]   --->   Operation 649 'zext' 'zext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 650 [1/1] (0.79ns)   --->   "%sub_ln58_7 = sub i4 %sub_ln58_6, i4 %zext_ln87_3" [d4.cpp:58]   --->   Operation 650 'sub' 'sub_ln58_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 651 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_7" [d4.cpp:86]   --->   Operation 651 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 652 [1/1] (0.00ns)   --->   "%zext_ln86_11 = zext i32 %tmp_59" [d4.cpp:86]   --->   Operation 652 'zext' 'zext_ln86_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_43)   --->   "%and_ln86_22 = and i1 %icmp_ln67_10, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 653 'and' 'and_ln86_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 654 '%mul_ln86_11 = mul i64 %zext_ln86_11, i64 %zext_ln86_6'
ST_2 : Operation 654 [1/1] (2.09ns)   --->   "%mul_ln86_11 = mul i64 %zext_ln86_11, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 654 'mul' 'mul_ln86_11' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 655 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_43)   --->   "%select_ln86_16 = select i1 %and_ln86_22, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 655 'select' 'select_ln86_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 656 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_43)   --->   "%and_ln86_23 = and i64 %mul_ln86_11, i64 %select_ln86_16" [d4.cpp:86]   --->   Operation 656 'and' 'and_ln86_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 657 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 657 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 658 [1/1] (0.00ns)   --->   "%zext_ln53_5 = zext i32 %tmp_60" [d4.cpp:53]   --->   Operation 658 'zext' 'zext_ln53_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 659 [1/1] (0.78ns)   --->   "%cmp86_2 = icmp_sgt  i5 %add_ln53_4, i5 6" [d4.cpp:53]   --->   Operation 659 'icmp' 'cmp86_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 660 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 660 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 661 [1/1] (0.00ns)   --->   "%zext_ln53_10 = zext i32 %tmp_61" [d4.cpp:53]   --->   Operation 661 'zext' 'zext_ln53_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 662 [1/1] (1.01ns)   --->   "%add_ln53_5 = add i33 %zext_ln53_10, i33 %zext_ln74_62" [d4.cpp:53]   --->   Operation 662 'add' 'add_ln53_5' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 663 [1/1] (0.00ns)   --->   "%zext_ln53_11 = zext i33 %add_ln53_5" [d4.cpp:53]   --->   Operation 663 'zext' 'zext_ln53_11' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 664 '%mul_ln53_2 = mul i64 %zext_ln53_11, i64 %zext_ln53_5'
ST_2 : Operation 664 [1/1] (2.84ns)   --->   "%mul_ln53_2 = mul i64 %zext_ln53_11, i64 %zext_ln53_5" [d4.cpp:53]   --->   Operation 664 'mul' 'mul_ln53_2' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 665 [1/1] (0.17ns)   --->   "%select_ln53_2 = select i1 %icmp_ln53, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 665 'select' 'select_ln53_2' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 666 [1/1] (0.37ns)   --->   "%and_ln53_2 = and i64 %mul_ln53_2, i64 %select_ln53_2" [d4.cpp:53]   --->   Operation 666 'and' 'and_ln53_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 667 [1/1] (0.73ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 667 'mux' 'tmp_62' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 668 [1/1] (0.00ns)   --->   "%zext_ln72_8 = zext i32 %tmp_62" [d4.cpp:72]   --->   Operation 668 'zext' 'zext_ln72_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 669 [1/1] (0.73ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 669 'mux' 'tmp_63' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 670 [1/1] (0.00ns)   --->   "%zext_ln83_12 = zext i32 %tmp_63" [d4.cpp:83]   --->   Operation 670 'zext' 'zext_ln83_12' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 671 '%mul_ln83_13 = mul i64 %zext_ln72_8, i64 %zext_ln53_5'
ST_2 : Operation 671 [1/1] (2.09ns)   --->   "%mul_ln83_13 = mul i64 %zext_ln72_8, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 671 'mul' 'mul_ln83_13' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 672 [1/1] (0.17ns)   --->   "%select_ln83_15 = select i1 %cmp86_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 672 'select' 'select_ln83_15' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 673 [1/1] (0.37ns)   --->   "%and_ln83_24 = and i64 %mul_ln83_13, i64 %select_ln83_15" [d4.cpp:83]   --->   Operation 673 'and' 'and_ln83_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 674 '%mul_ln83_14 = mul i64 %zext_ln83_12, i64 %zext_ln53_5'
ST_2 : Operation 674 [1/1] (2.09ns)   --->   "%mul_ln83_14 = mul i64 %zext_ln83_12, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 674 'mul' 'mul_ln83_14' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 675 [1/1] (0.17ns)   --->   "%select_ln83_16 = select i1 %cmp64_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 675 'select' 'select_ln83_16' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%and_ln83_25 = and i64 %mul_ln83_14, i64 %select_ln83_16" [d4.cpp:83]   --->   Operation 676 'and' 'and_ln83_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 677 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 677 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 678 [1/1] (0.00ns)   --->   "%zext_ln83_13 = zext i32 %tmp_64" [d4.cpp:83]   --->   Operation 678 'zext' 'zext_ln83_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 679 '%mul_ln83_15 = mul i64 %zext_ln53_5, i64 %zext_ln72_7'
ST_2 : Operation 679 [1/1] (2.09ns)   --->   "%mul_ln83_15 = mul i64 %zext_ln53_5, i64 %zext_ln72_7" [d4.cpp:83]   --->   Operation 679 'mul' 'mul_ln83_15' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 680 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_17)   --->   "%and_ln83_26 = and i64 %mul_ln83_15, i64 %select_ln83_15" [d4.cpp:83]   --->   Operation 680 'and' 'and_ln83_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 681 '%mul_ln83_16 = mul i64 %zext_ln83_13, i64 %zext_ln53_5'
ST_2 : Operation 681 [1/1] (2.09ns)   --->   "%mul_ln83_16 = mul i64 %zext_ln83_13, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 681 'mul' 'mul_ln83_16' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 682 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_17)   --->   "%and_ln83_27 = and i64 %mul_ln83_16, i64 %select_ln83_16" [d4.cpp:83]   --->   Operation 682 'and' 'and_ln83_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 683 '%mul_ln74_42 = mul i64 %zext_ln53_5, i64 %zext_ln72'
ST_2 : Operation 683 [1/1] (2.09ns)   --->   "%mul_ln74_42 = mul i64 %zext_ln53_5, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 683 'mul' 'mul_ln74_42' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 684 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_32)   --->   "%and_ln74_33 = and i64 %mul_ln74_42, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 684 'and' 'and_ln74_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 685 '%mul_ln74_43 = mul i64 %zext_ln53_5, i64 %conv101_cast'
ST_2 : Operation 685 [1/1] (2.09ns)   --->   "%mul_ln74_43 = mul i64 %zext_ln53_5, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 685 'mul' 'mul_ln74_43' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 686 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_32)   --->   "%select_ln74_24 = select i1 %icmp_ln63_12, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 686 'select' 'select_ln74_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 687 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_32)   --->   "%and_ln74_34 = and i64 %mul_ln74_43, i64 %select_ln74_24" [d4.cpp:74]   --->   Operation 687 'and' 'and_ln74_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 688 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 688 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 689 [1/1] (0.00ns)   --->   "%zext_ln83_14 = zext i32 %tmp_65" [d4.cpp:83]   --->   Operation 689 'zext' 'zext_ln83_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 690 [1/1] (0.78ns)   --->   "%icmp_ln83_10 = icmp_slt  i5 %add_ln53_4, i5 13" [d4.cpp:83]   --->   Operation 690 'icmp' 'icmp_ln83_10' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 691 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_33)   --->   "%and_ln83_28 = and i1 %icmp_ln83_10, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 691 'and' 'and_ln83_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 692 '%mul_ln83_17 = mul i64 %zext_ln83_14, i64 %zext_ln53_5'
ST_2 : Operation 692 [1/1] (2.09ns)   --->   "%mul_ln83_17 = mul i64 %zext_ln83_14, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 692 'mul' 'mul_ln83_17' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 693 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_33)   --->   "%select_ln83_18 = select i1 %and_ln83_28, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 693 'select' 'select_ln83_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_33)   --->   "%and_ln83_29 = and i64 %mul_ln83_17, i64 %select_ln83_18" [d4.cpp:83]   --->   Operation 694 'and' 'and_ln83_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 695 [1/1] (0.44ns)   --->   "%select_ln74_2 = select i1 %icmp_ln63_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 695 'select' 'select_ln74_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 696 [1/1] (0.00ns)   --->   "%zext_ln74_27 = zext i32 %select_ln74_2" [d4.cpp:74]   --->   Operation 696 'zext' 'zext_ln74_27' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 697 '%mul_ln74_44 = mul i64 %zext_ln53_5, i64 %zext_ln72_1'
ST_2 : Operation 697 [1/1] (2.09ns)   --->   "%mul_ln74_44 = mul i64 %zext_ln53_5, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 697 'mul' 'mul_ln74_44' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 698 [1/1] (0.37ns)   --->   "%and_ln74_35 = and i64 %mul_ln74_44, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 698 'and' 'and_ln74_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 699 '%mul_ln74_45 = mul i64 %zext_ln74_27, i64 %zext_ln53_5'
ST_2 : Operation 699 [1/1] (2.09ns)   --->   "%mul_ln74_45 = mul i64 %zext_ln74_27, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 699 'mul' 'mul_ln74_45' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 700 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_49)   --->   "%select_ln74_25 = select i1 %icmp_ln63_13, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 700 'select' 'select_ln74_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 701 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_49)   --->   "%and_ln74_36 = and i64 %mul_ln74_45, i64 %select_ln74_25" [d4.cpp:74]   --->   Operation 701 'and' 'and_ln74_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 702 [1/1] (0.00ns)   --->   "%sext_ln83_4 = sext i3 %sub_ln78_24" [d4.cpp:83]   --->   Operation 702 'sext' 'sext_ln83_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 703 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 703 'mux' 'tmp_66' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 704 [1/1] (0.00ns)   --->   "%zext_ln83_15 = zext i32 %tmp_66" [d4.cpp:83]   --->   Operation 704 'zext' 'zext_ln83_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 705 [1/1] (0.78ns)   --->   "%icmp_ln83_11 = icmp_slt  i5 %add_ln53_4, i5 12" [d4.cpp:83]   --->   Operation 705 'icmp' 'icmp_ln83_11' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_49)   --->   "%and_ln83_30 = and i1 %icmp_ln83_11, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 706 'and' 'and_ln83_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 707 '%mul_ln83_18 = mul i64 %zext_ln83_15, i64 %zext_ln53_5'
ST_2 : Operation 707 [1/1] (2.09ns)   --->   "%mul_ln83_18 = mul i64 %zext_ln83_15, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 707 'mul' 'mul_ln83_18' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 708 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_49)   --->   "%select_ln83_19 = select i1 %and_ln83_30, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 708 'select' 'select_ln83_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 709 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_49)   --->   "%and_ln83_31 = and i64 %mul_ln83_18, i64 %select_ln83_19" [d4.cpp:83]   --->   Operation 709 'and' 'and_ln83_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 710 [1/1] (0.48ns)   --->   "%tmp_67 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_4" [d4.cpp:74]   --->   Operation 710 'mux' 'tmp_67' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 711 [1/1] (0.00ns)   --->   "%zext_ln74_28 = zext i32 %tmp_67" [d4.cpp:74]   --->   Operation 711 'zext' 'zext_ln74_28' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 712 '%mul_ln74_46 = mul i64 %zext_ln53_5, i64 %zext_ln72_2'
ST_2 : Operation 712 [1/1] (2.09ns)   --->   "%mul_ln74_46 = mul i64 %zext_ln53_5, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 712 'mul' 'mul_ln74_46' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 713 [1/1] (0.37ns)   --->   "%and_ln74_37 = and i64 %mul_ln74_46, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 713 'and' 'and_ln74_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 714 '%mul_ln74_47 = mul i64 %zext_ln74_28, i64 %zext_ln53_5'
ST_2 : Operation 714 [1/1] (2.09ns)   --->   "%mul_ln74_47 = mul i64 %zext_ln74_28, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 714 'mul' 'mul_ln74_47' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 715 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_38)   --->   "%select_ln74_26 = select i1 %icmp_ln63_14, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 715 'select' 'select_ln74_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 716 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_38 = and i64 %mul_ln74_47, i64 %select_ln74_26" [d4.cpp:74]   --->   Operation 716 'and' 'and_ln74_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 717 [1/1] (0.48ns)   --->   "%tmp_68 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 717 'mux' 'tmp_68' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 718 [1/1] (0.00ns)   --->   "%zext_ln83_16 = zext i32 %tmp_68" [d4.cpp:83]   --->   Operation 718 'zext' 'zext_ln83_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 719 [1/1] (0.78ns)   --->   "%icmp_ln83_12 = icmp_slt  i5 %add_ln53_4, i5 11" [d4.cpp:83]   --->   Operation 719 'icmp' 'icmp_ln83_12' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 720 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln83_32 = and i1 %icmp_ln83_12, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 720 'and' 'and_ln83_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 721 '%mul_ln83_19 = mul i64 %zext_ln83_16, i64 %zext_ln53_5'
ST_2 : Operation 721 [1/1] (2.09ns)   --->   "%mul_ln83_19 = mul i64 %zext_ln83_16, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 721 'mul' 'mul_ln83_19' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 722 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%select_ln83_20 = select i1 %and_ln83_32, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 722 'select' 'select_ln83_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 723 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln83_33 = and i64 %mul_ln83_19, i64 %select_ln83_20" [d4.cpp:83]   --->   Operation 723 'and' 'and_ln83_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 724 [1/1] (0.48ns)   --->   "%tmp_69 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_5" [d4.cpp:74]   --->   Operation 724 'mux' 'tmp_69' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 725 [1/1] (0.00ns)   --->   "%zext_ln74_29 = zext i32 %tmp_69" [d4.cpp:74]   --->   Operation 725 'zext' 'zext_ln74_29' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 726 '%mul_ln74_48 = mul i64 %zext_ln53_5, i64 %zext_ln72_3'
ST_2 : Operation 726 [1/1] (2.09ns)   --->   "%mul_ln74_48 = mul i64 %zext_ln53_5, i64 %zext_ln72_3" [d4.cpp:74]   --->   Operation 726 'mul' 'mul_ln74_48' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 727 [1/1] (0.37ns)   --->   "%and_ln74_39 = and i64 %mul_ln74_48, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 727 'and' 'and_ln74_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 728 '%mul_ln74_49 = mul i64 %zext_ln74_29, i64 %zext_ln53_5'
ST_2 : Operation 728 [1/1] (2.09ns)   --->   "%mul_ln74_49 = mul i64 %zext_ln74_29, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 728 'mul' 'mul_ln74_49' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 729 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_40)   --->   "%select_ln74_27 = select i1 %icmp_ln63_15, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 729 'select' 'select_ln74_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 730 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_40 = and i64 %mul_ln74_49, i64 %select_ln74_27" [d4.cpp:74]   --->   Operation 730 'and' 'and_ln74_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 731 [1/1] (0.48ns)   --->   "%tmp_70 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 731 'mux' 'tmp_70' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 732 [1/1] (0.00ns)   --->   "%zext_ln83_17 = zext i32 %tmp_70" [d4.cpp:83]   --->   Operation 732 'zext' 'zext_ln83_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 733 [1/1] (0.78ns)   --->   "%icmp_ln83_13 = icmp_slt  i5 %add_ln53_4, i5 10" [d4.cpp:83]   --->   Operation 733 'icmp' 'icmp_ln83_13' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 734 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_29)   --->   "%and_ln83_34 = and i1 %icmp_ln83_13, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 734 'and' 'and_ln83_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 735 '%mul_ln83_20 = mul i64 %zext_ln83_17, i64 %zext_ln53_5'
ST_2 : Operation 735 [1/1] (2.09ns)   --->   "%mul_ln83_20 = mul i64 %zext_ln83_17, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 735 'mul' 'mul_ln83_20' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 736 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_29)   --->   "%select_ln83_21 = select i1 %and_ln83_34, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 736 'select' 'select_ln83_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 737 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_29)   --->   "%and_ln83_35 = and i64 %mul_ln83_20, i64 %select_ln83_21" [d4.cpp:83]   --->   Operation 737 'and' 'and_ln83_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 738 [1/1] (0.48ns)   --->   "%tmp_71 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_17" [d4.cpp:74]   --->   Operation 738 'mux' 'tmp_71' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 739 [1/1] (0.00ns)   --->   "%zext_ln74_30 = zext i32 %tmp_71" [d4.cpp:74]   --->   Operation 739 'zext' 'zext_ln74_30' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 740 '%mul_ln74_50 = mul i64 %zext_ln53_5, i64 %zext_ln72_4'
ST_2 : Operation 740 [1/1] (2.09ns)   --->   "%mul_ln74_50 = mul i64 %zext_ln53_5, i64 %zext_ln72_4" [d4.cpp:74]   --->   Operation 740 'mul' 'mul_ln74_50' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 741 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_43)   --->   "%and_ln74_41 = and i64 %mul_ln74_50, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 741 'and' 'and_ln74_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 742 '%mul_ln74_51 = mul i64 %zext_ln74_30, i64 %zext_ln53_5'
ST_2 : Operation 742 [1/1] (2.09ns)   --->   "%mul_ln74_51 = mul i64 %zext_ln74_30, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 742 'mul' 'mul_ln74_51' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 743 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_46)   --->   "%select_ln74_28 = select i1 %icmp_ln63_16, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 743 'select' 'select_ln74_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 744 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_46)   --->   "%and_ln74_42 = and i64 %mul_ln74_51, i64 %select_ln74_28" [d4.cpp:74]   --->   Operation 744 'and' 'and_ln74_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 745 [1/1] (0.48ns)   --->   "%tmp_72 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_18" [d4.cpp:74]   --->   Operation 745 'mux' 'tmp_72' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 746 [1/1] (0.00ns)   --->   "%zext_ln74_31 = zext i32 %tmp_72" [d4.cpp:74]   --->   Operation 746 'zext' 'zext_ln74_31' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 747 '%mul_ln74_52 = mul i64 %zext_ln74_31, i64 %zext_ln53_5'
ST_2 : Operation 747 [1/1] (2.09ns)   --->   "%mul_ln74_52 = mul i64 %zext_ln74_31, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 747 'mul' 'mul_ln74_52' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 748 [1/1] (0.37ns)   --->   "%and_ln74_43 = and i64 %mul_ln74_52, i64 %select_ln83_8" [d4.cpp:74]   --->   Operation 748 'and' 'and_ln74_43' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 749 [1/1] (0.79ns)   --->   "%sub_ln58_20 = sub i4 %sub_ln58_19, i4 %zext_ln53_17" [d4.cpp:58]   --->   Operation 749 'sub' 'sub_ln58_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 750 [1/1] (0.00ns)   --->   "%zext_ln75_16 = zext i1 %cmp86_1" [d4.cpp:75]   --->   Operation 750 'zext' 'zext_ln75_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 751 [1/1] (0.79ns)   --->   "%sub_ln86 = sub i4 %sub_ln58_20, i4 %zext_ln75_16" [d4.cpp:86]   --->   Operation 751 'sub' 'sub_ln86' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 752 [1/1] (0.48ns)   --->   "%tmp_73 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 752 'mux' 'tmp_73' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 753 [1/1] (0.00ns)   --->   "%zext_ln86_12 = zext i32 %tmp_73" [d4.cpp:86]   --->   Operation 753 'zext' 'zext_ln86_12' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 754 '%mul_ln86_12 = mul i64 %zext_ln86_12, i64 %conv101_cast'
ST_2 : Operation 754 [1/1] (2.09ns)   --->   "%mul_ln86_12 = mul i64 %zext_ln86_12, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 754 'mul' 'mul_ln86_12' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 755 [1/1] (0.48ns)   --->   "%tmp_74 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_19" [d4.cpp:74]   --->   Operation 755 'mux' 'tmp_74' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 756 [1/1] (0.00ns)   --->   "%zext_ln74_32 = zext i32 %tmp_74" [d4.cpp:74]   --->   Operation 756 'zext' 'zext_ln74_32' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 757 '%mul_ln74_53 = mul i64 %zext_ln74_32, i64 %zext_ln53_5'
ST_2 : Operation 757 [1/1] (2.09ns)   --->   "%mul_ln74_53 = mul i64 %zext_ln74_32, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 757 'mul' 'mul_ln74_53' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 758 [1/1] (0.37ns)   --->   "%and_ln74_44 = and i64 %mul_ln74_53, i64 %select_ln53_1" [d4.cpp:74]   --->   Operation 758 'and' 'and_ln74_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 759 [1/1] (0.48ns)   --->   "%tmp_75 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_20" [d4.cpp:74]   --->   Operation 759 'mux' 'tmp_75' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 760 [1/1] (0.00ns)   --->   "%zext_ln74_33 = zext i32 %tmp_75" [d4.cpp:74]   --->   Operation 760 'zext' 'zext_ln74_33' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 761 '%mul_ln74_54 = mul i64 %zext_ln74_33, i64 %zext_ln53_5'
ST_2 : Operation 761 [1/1] (2.09ns)   --->   "%mul_ln74_54 = mul i64 %zext_ln74_33, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 761 'mul' 'mul_ln74_54' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 762 [1/1] (0.37ns)   --->   "%and_ln74_45 = and i64 %mul_ln74_54, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 762 'and' 'and_ln74_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 763 [1/1] (0.79ns)   --->   "%icmp_ln74_4 = icmp_ugt  i4 %add_ln53_2, i4 5" [d4.cpp:74]   --->   Operation 763 'icmp' 'icmp_ln74_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 764 [1/1] (0.00ns)   --->   "%zext_ln75_17 = zext i1 %icmp_ln74_4" [d4.cpp:75]   --->   Operation 764 'zext' 'zext_ln75_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 765 [1/1] (0.79ns)   --->   "%sub_ln78_4 = sub i4 %sub_ln86, i4 %zext_ln75_17" [d4.cpp:78]   --->   Operation 765 'sub' 'sub_ln78_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 766 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_33)   --->   "%select_ln86_17 = select i1 %and_ln86_24, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 766 'select' 'select_ln86_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 767 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_33)   --->   "%and_ln86_25 = and i64 %mul_ln86_12, i64 %select_ln86_17" [d4.cpp:86]   --->   Operation 767 'and' 'and_ln86_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 768 [1/1] (0.79ns)   --->   "%icmp_ln74_5 = icmp_ugt  i4 %add_ln53_2, i4 4" [d4.cpp:74]   --->   Operation 768 'icmp' 'icmp_ln74_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 769 [1/1] (0.44ns)   --->   "%select_ln86_2 = select i1 %and_ln86_24, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 769 'select' 'select_ln86_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 770 [1/1] (0.00ns)   --->   "%zext_ln86_13 = zext i32 %select_ln86_2" [d4.cpp:86]   --->   Operation 770 'zext' 'zext_ln86_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 771 '%mul_ln86_13 = mul i64 %zext_ln86_13, i64 %zext_ln86_12'
ST_2 : Operation 771 [1/1] (2.09ns)   --->   "%mul_ln86_13 = mul i64 %zext_ln86_13, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 771 'mul' 'mul_ln86_13' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 772 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_50)   --->   "%select_ln86_18 = select i1 %and_ln86_26, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 772 'select' 'select_ln86_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 773 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_50)   --->   "%and_ln86_27 = and i64 %mul_ln86_13, i64 %select_ln86_18" [d4.cpp:86]   --->   Operation 773 'and' 'and_ln86_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 774 [1/1] (0.00ns)   --->   "%sext_ln67_4 = sext i3 %sub_ln58_8" [d4.cpp:67]   --->   Operation 774 'sext' 'sext_ln67_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 775 [1/1] (0.48ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_4" [d4.cpp:86]   --->   Operation 775 'mux' 'tmp_79' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 776 [1/1] (0.00ns)   --->   "%zext_ln86_14 = zext i32 %tmp_79" [d4.cpp:86]   --->   Operation 776 'zext' 'zext_ln86_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 777 '%mul_ln86_14 = mul i64 %zext_ln86_14, i64 %zext_ln86_12'
ST_2 : Operation 777 [1/1] (2.09ns)   --->   "%mul_ln86_14 = mul i64 %zext_ln86_14, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 777 'mul' 'mul_ln86_14' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 778 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%select_ln86_19 = select i1 %and_ln86_28, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 778 'select' 'select_ln86_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 779 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln86_29 = and i64 %mul_ln86_14, i64 %select_ln86_19" [d4.cpp:86]   --->   Operation 779 'and' 'and_ln86_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 780 [1/1] (0.00ns)   --->   "%zext_ln58_5 = zext i1 %and_ln86_28" [d4.cpp:58]   --->   Operation 780 'zext' 'zext_ln58_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 781 [1/1] (0.67ns)   --->   "%sub_ln58_9 = sub i3 %sub_ln58_8, i3 %zext_ln58_5" [d4.cpp:58]   --->   Operation 781 'sub' 'sub_ln58_9' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 782 [1/1] (0.00ns)   --->   "%sext_ln67_5 = sext i3 %sub_ln58_9" [d4.cpp:67]   --->   Operation 782 'sext' 'sext_ln67_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 783 [1/1] (0.48ns)   --->   "%tmp_81 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_5" [d4.cpp:86]   --->   Operation 783 'mux' 'tmp_81' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 784 [1/1] (0.00ns)   --->   "%zext_ln86_15 = zext i32 %tmp_81" [d4.cpp:86]   --->   Operation 784 'zext' 'zext_ln86_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 785 [1/1] (0.28ns)   --->   "%and_ln86_30 = and i1 %icmp_ln67_14, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 785 'and' 'and_ln86_30' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 786 '%mul_ln86_15 = mul i64 %zext_ln86_15, i64 %zext_ln86_12'
ST_2 : Operation 786 [1/1] (2.09ns)   --->   "%mul_ln86_15 = mul i64 %zext_ln86_15, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 786 'mul' 'mul_ln86_15' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 787 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_29)   --->   "%select_ln86_20 = select i1 %and_ln86_30, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 787 'select' 'select_ln86_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 788 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_29)   --->   "%and_ln86_31 = and i64 %mul_ln86_15, i64 %select_ln86_20" [d4.cpp:86]   --->   Operation 788 'and' 'and_ln86_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 789 [1/1] (0.00ns)   --->   "%zext_ln87_4 = zext i1 %and_ln86_30" [d4.cpp:87]   --->   Operation 789 'zext' 'zext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 790 [1/1] (0.67ns)   --->   "%sub_ln58_10 = sub i4 %sext_ln67_5, i4 %zext_ln87_4" [d4.cpp:58]   --->   Operation 790 'sub' 'sub_ln58_10' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 791 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_10" [d4.cpp:86]   --->   Operation 791 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 792 [1/1] (0.00ns)   --->   "%zext_ln86_16 = zext i32 %tmp_83" [d4.cpp:86]   --->   Operation 792 'zext' 'zext_ln86_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 793 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_46)   --->   "%and_ln86_32 = and i1 %icmp_ln67_15, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 793 'and' 'and_ln86_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 794 '%mul_ln86_16 = mul i64 %zext_ln86_16, i64 %zext_ln86_12'
ST_2 : Operation 794 [1/1] (2.09ns)   --->   "%mul_ln86_16 = mul i64 %zext_ln86_16, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 794 'mul' 'mul_ln86_16' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 795 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_46)   --->   "%select_ln86_21 = select i1 %and_ln86_32, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 795 'select' 'select_ln86_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 796 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_46)   --->   "%and_ln86_33 = and i64 %mul_ln86_16, i64 %select_ln86_21" [d4.cpp:86]   --->   Operation 796 'and' 'and_ln86_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 797 [1/1] (0.48ns)   --->   "%tmp_84 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 797 'mux' 'tmp_84' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 798 [1/1] (0.00ns)   --->   "%zext_ln53_7 = zext i32 %tmp_84" [d4.cpp:53]   --->   Operation 798 'zext' 'zext_ln53_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 799 [1/1] (0.78ns)   --->   "%cmp86_3 = icmp_sgt  i5 %add_ln53_6, i5 6" [d4.cpp:53]   --->   Operation 799 'icmp' 'cmp86_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 800 [1/1] (0.48ns)   --->   "%tmp_85 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 800 'mux' 'tmp_85' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 801 [1/1] (0.00ns)   --->   "%zext_ln53_12 = zext i32 %tmp_85" [d4.cpp:53]   --->   Operation 801 'zext' 'zext_ln53_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 802 [1/1] (1.01ns)   --->   "%add_ln53_7 = add i33 %zext_ln53_12, i33 %zext_ln74_61" [d4.cpp:53]   --->   Operation 802 'add' 'add_ln53_7' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 803 [1/1] (0.00ns)   --->   "%zext_ln53_13 = zext i33 %add_ln53_7" [d4.cpp:53]   --->   Operation 803 'zext' 'zext_ln53_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 804 '%mul_ln53_3 = mul i64 %zext_ln53_13, i64 %zext_ln53_7'
ST_2 : Operation 804 [1/1] (2.84ns)   --->   "%mul_ln53_3 = mul i64 %zext_ln53_13, i64 %zext_ln53_7" [d4.cpp:53]   --->   Operation 804 'mul' 'mul_ln53_3' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 805 [1/1] (0.17ns)   --->   "%select_ln53_3 = select i1 %icmp_ln53_1, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 805 'select' 'select_ln53_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 806 [1/1] (0.37ns)   --->   "%and_ln53_3 = and i64 %mul_ln53_3, i64 %select_ln53_3" [d4.cpp:53]   --->   Operation 806 'and' 'and_ln53_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 807 [1/1] (0.73ns)   --->   "%tmp_86 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 807 'mux' 'tmp_86' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 808 [1/1] (0.00ns)   --->   "%zext_ln72_9 = zext i32 %tmp_86" [d4.cpp:72]   --->   Operation 808 'zext' 'zext_ln72_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 809 [1/1] (0.73ns)   --->   "%tmp_87 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 809 'mux' 'tmp_87' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 810 [1/1] (0.00ns)   --->   "%zext_ln83_18 = zext i32 %tmp_87" [d4.cpp:83]   --->   Operation 810 'zext' 'zext_ln83_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 811 '%mul_ln83_21 = mul i64 %zext_ln72_9, i64 %zext_ln53_7'
ST_2 : Operation 811 [1/1] (2.09ns)   --->   "%mul_ln83_21 = mul i64 %zext_ln72_9, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 811 'mul' 'mul_ln83_21' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 812 [1/1] (0.17ns)   --->   "%select_ln83_22 = select i1 %cmp86_3, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 812 'select' 'select_ln83_22' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 813 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_4)   --->   "%and_ln83_36 = and i64 %mul_ln83_21, i64 %select_ln83_22" [d4.cpp:83]   --->   Operation 813 'and' 'and_ln83_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 814 '%mul_ln83_22 = mul i64 %zext_ln83_18, i64 %zext_ln53_7'
ST_2 : Operation 814 [1/1] (2.09ns)   --->   "%mul_ln83_22 = mul i64 %zext_ln83_18, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 814 'mul' 'mul_ln83_22' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 815 [1/1] (0.17ns)   --->   "%select_ln83_23 = select i1 %cmp64_3, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 815 'select' 'select_ln83_23' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 816 [1/1] (0.37ns)   --->   "%and_ln83_37 = and i64 %mul_ln83_22, i64 %select_ln83_23" [d4.cpp:83]   --->   Operation 816 'and' 'and_ln83_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 817 [1/1] (0.48ns)   --->   "%tmp_88 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 817 'mux' 'tmp_88' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 818 [1/1] (0.00ns)   --->   "%zext_ln83_19 = zext i32 %tmp_88" [d4.cpp:83]   --->   Operation 818 'zext' 'zext_ln83_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 819 '%mul_ln83_23 = mul i64 %zext_ln53_7, i64 %zext_ln72_8'
ST_2 : Operation 819 [1/1] (2.09ns)   --->   "%mul_ln83_23 = mul i64 %zext_ln53_7, i64 %zext_ln72_8" [d4.cpp:83]   --->   Operation 819 'mul' 'mul_ln83_23' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 820 [1/1] (0.37ns)   --->   "%and_ln83_38 = and i64 %mul_ln83_23, i64 %select_ln83_22" [d4.cpp:83]   --->   Operation 820 'and' 'and_ln83_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 821 '%mul_ln83_24 = mul i64 %zext_ln83_19, i64 %zext_ln53_7'
ST_2 : Operation 821 [1/1] (2.09ns)   --->   "%mul_ln83_24 = mul i64 %zext_ln83_19, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 821 'mul' 'mul_ln83_24' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 822 [1/1] (0.37ns)   --->   "%and_ln83_39 = and i64 %mul_ln83_24, i64 %select_ln83_23" [d4.cpp:83]   --->   Operation 822 'and' 'and_ln83_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 823 [1/1] (0.48ns)   --->   "%tmp_89 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 823 'mux' 'tmp_89' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 824 [1/1] (0.00ns)   --->   "%zext_ln83_20 = zext i32 %tmp_89" [d4.cpp:83]   --->   Operation 824 'zext' 'zext_ln83_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 825 '%mul_ln83_25 = mul i64 %zext_ln53_7, i64 %zext_ln72_7'
ST_2 : Operation 825 [1/1] (2.09ns)   --->   "%mul_ln83_25 = mul i64 %zext_ln53_7, i64 %zext_ln72_7" [d4.cpp:83]   --->   Operation 825 'mul' 'mul_ln83_25' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 826 [1/1] (0.37ns)   --->   "%and_ln83_40 = and i64 %mul_ln83_25, i64 %select_ln83_22" [d4.cpp:83]   --->   Operation 826 'and' 'and_ln83_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 827 '%mul_ln83_26 = mul i64 %zext_ln83_20, i64 %zext_ln53_7'
ST_2 : Operation 827 [1/1] (2.09ns)   --->   "%mul_ln83_26 = mul i64 %zext_ln83_20, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 827 'mul' 'mul_ln83_26' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 828 [1/1] (0.37ns)   --->   "%and_ln83_41 = and i64 %mul_ln83_26, i64 %select_ln83_23" [d4.cpp:83]   --->   Operation 828 'and' 'and_ln83_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 829 '%mul_ln74_60 = mul i64 %zext_ln53_7, i64 %zext_ln72'
ST_2 : Operation 829 [1/1] (2.09ns)   --->   "%mul_ln74_60 = mul i64 %zext_ln53_7, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 829 'mul' 'mul_ln74_60' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_50)   --->   "%and_ln74_48 = and i64 %mul_ln74_60, i64 %select_ln83_22" [d4.cpp:74]   --->   Operation 830 'and' 'and_ln74_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 831 '%mul_ln74_61 = mul i64 %zext_ln53_7, i64 %conv101_cast'
ST_2 : Operation 831 [1/1] (2.09ns)   --->   "%mul_ln74_61 = mul i64 %zext_ln53_7, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 831 'mul' 'mul_ln74_61' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 832 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_49)   --->   "%select_ln74_31 = select i1 %icmp_ln63_17, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 832 'select' 'select_ln74_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 833 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_49 = and i64 %mul_ln74_61, i64 %select_ln74_31" [d4.cpp:74]   --->   Operation 833 'and' 'and_ln74_49' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 834 [1/1] (0.48ns)   --->   "%tmp_90 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 834 'mux' 'tmp_90' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 835 [1/1] (0.00ns)   --->   "%zext_ln83_21 = zext i32 %tmp_90" [d4.cpp:83]   --->   Operation 835 'zext' 'zext_ln83_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 836 [1/1] (0.78ns)   --->   "%icmp_ln83_14 = icmp_slt  i5 %add_ln53_6, i5 12" [d4.cpp:83]   --->   Operation 836 'icmp' 'icmp_ln83_14' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 837 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_43)   --->   "%and_ln83_42 = and i1 %icmp_ln83_14, i1 %cmp64_3" [d4.cpp:83]   --->   Operation 837 'and' 'and_ln83_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 838 '%mul_ln83_27 = mul i64 %zext_ln83_21, i64 %zext_ln53_7'
ST_2 : Operation 838 [1/1] (2.09ns)   --->   "%mul_ln83_27 = mul i64 %zext_ln83_21, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 838 'mul' 'mul_ln83_27' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 839 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_43)   --->   "%select_ln83_25 = select i1 %and_ln83_42, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 839 'select' 'select_ln83_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 840 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_43 = and i64 %mul_ln83_27, i64 %select_ln83_25" [d4.cpp:83]   --->   Operation 840 'and' 'and_ln83_43' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 841 [1/1] (0.44ns)   --->   "%select_ln74_3 = select i1 %icmp_ln63_17, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 841 'select' 'select_ln74_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 842 [1/1] (0.00ns)   --->   "%zext_ln74_39 = zext i32 %select_ln74_3" [d4.cpp:74]   --->   Operation 842 'zext' 'zext_ln74_39' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 843 '%mul_ln74_62 = mul i64 %zext_ln53_7, i64 %zext_ln72_1'
ST_2 : Operation 843 [1/1] (2.09ns)   --->   "%mul_ln74_62 = mul i64 %zext_ln53_7, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 843 'mul' 'mul_ln74_62' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 844 [1/1] (0.37ns)   --->   "%and_ln74_50 = and i64 %mul_ln74_62, i64 %select_ln83_22" [d4.cpp:74]   --->   Operation 844 'and' 'and_ln74_50' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 845 '%mul_ln74_63 = mul i64 %zext_ln74_39, i64 %zext_ln53_7'
ST_2 : Operation 845 [1/1] (2.09ns)   --->   "%mul_ln74_63 = mul i64 %zext_ln74_39, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 845 'mul' 'mul_ln74_63' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 846 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_51)   --->   "%select_ln74_32 = select i1 %icmp_ln63_18, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 846 'select' 'select_ln74_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 847 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_51 = and i64 %mul_ln74_63, i64 %select_ln74_32" [d4.cpp:74]   --->   Operation 847 'and' 'and_ln74_51' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 848 [1/1] (0.00ns)   --->   "%sext_ln83_6 = sext i3 %sub_ln78_26" [d4.cpp:83]   --->   Operation 848 'sext' 'sext_ln83_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 849 [1/1] (0.48ns)   --->   "%tmp_91 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 849 'mux' 'tmp_91' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 850 [1/1] (0.00ns)   --->   "%zext_ln83_22 = zext i32 %tmp_91" [d4.cpp:83]   --->   Operation 850 'zext' 'zext_ln83_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 851 [1/1] (0.78ns)   --->   "%icmp_ln83_15 = icmp_slt  i5 %add_ln53_6, i5 11" [d4.cpp:83]   --->   Operation 851 'icmp' 'icmp_ln83_15' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 852 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_45)   --->   "%and_ln83_44 = and i1 %icmp_ln83_15, i1 %cmp64_3" [d4.cpp:83]   --->   Operation 852 'and' 'and_ln83_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 853 '%mul_ln83_28 = mul i64 %zext_ln83_22, i64 %zext_ln53_7'
ST_2 : Operation 853 [1/1] (2.09ns)   --->   "%mul_ln83_28 = mul i64 %zext_ln83_22, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 853 'mul' 'mul_ln83_28' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 854 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_45)   --->   "%select_ln83_26 = select i1 %and_ln83_44, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 854 'select' 'select_ln83_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 855 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_45 = and i64 %mul_ln83_28, i64 %select_ln83_26" [d4.cpp:83]   --->   Operation 855 'and' 'and_ln83_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 856 [1/1] (0.48ns)   --->   "%tmp_92 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_6" [d4.cpp:74]   --->   Operation 856 'mux' 'tmp_92' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 857 [1/1] (0.00ns)   --->   "%zext_ln74_40 = zext i32 %tmp_92" [d4.cpp:74]   --->   Operation 857 'zext' 'zext_ln74_40' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 858 '%mul_ln74_64 = mul i64 %zext_ln53_7, i64 %zext_ln72_2'
ST_2 : Operation 858 [1/1] (2.09ns)   --->   "%mul_ln74_64 = mul i64 %zext_ln53_7, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 858 'mul' 'mul_ln74_64' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 859 [1/1] (0.37ns)   --->   "%and_ln74_52 = and i64 %mul_ln74_64, i64 %select_ln83_22" [d4.cpp:74]   --->   Operation 859 'and' 'and_ln74_52' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 860 '%mul_ln74_65 = mul i64 %zext_ln74_40, i64 %zext_ln53_7'
ST_2 : Operation 860 [1/1] (2.09ns)   --->   "%mul_ln74_65 = mul i64 %zext_ln74_40, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 860 'mul' 'mul_ln74_65' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 861 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_53)   --->   "%select_ln74_33 = select i1 %icmp_ln63_19, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 861 'select' 'select_ln74_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 862 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_53 = and i64 %mul_ln74_65, i64 %select_ln74_33" [d4.cpp:74]   --->   Operation 862 'and' 'and_ln74_53' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 863 [1/1] (0.48ns)   --->   "%tmp_93 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 863 'mux' 'tmp_93' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 864 [1/1] (0.00ns)   --->   "%zext_ln83_23 = zext i32 %tmp_93" [d4.cpp:83]   --->   Operation 864 'zext' 'zext_ln83_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 865 [1/1] (0.78ns)   --->   "%icmp_ln83_16 = icmp_slt  i5 %add_ln53_6, i5 10" [d4.cpp:83]   --->   Operation 865 'icmp' 'icmp_ln83_16' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 866 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_47)   --->   "%and_ln83_46 = and i1 %icmp_ln83_16, i1 %cmp64_3" [d4.cpp:83]   --->   Operation 866 'and' 'and_ln83_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 867 '%mul_ln83_29 = mul i64 %zext_ln83_23, i64 %zext_ln53_7'
ST_2 : Operation 867 [1/1] (2.09ns)   --->   "%mul_ln83_29 = mul i64 %zext_ln83_23, i64 %zext_ln53_7" [d4.cpp:83]   --->   Operation 867 'mul' 'mul_ln83_29' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 868 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_47)   --->   "%select_ln83_27 = select i1 %and_ln83_46, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 868 'select' 'select_ln83_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 869 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_47 = and i64 %mul_ln83_29, i64 %select_ln83_27" [d4.cpp:83]   --->   Operation 869 'and' 'and_ln83_47' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 870 [1/1] (0.48ns)   --->   "%tmp_94 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_7" [d4.cpp:74]   --->   Operation 870 'mux' 'tmp_94' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 871 [1/1] (0.00ns)   --->   "%zext_ln74_41 = zext i32 %tmp_94" [d4.cpp:74]   --->   Operation 871 'zext' 'zext_ln74_41' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 872 '%mul_ln74_66 = mul i64 %zext_ln53_7, i64 %zext_ln72_3'
ST_2 : Operation 872 [1/1] (2.09ns)   --->   "%mul_ln74_66 = mul i64 %zext_ln53_7, i64 %zext_ln72_3" [d4.cpp:74]   --->   Operation 872 'mul' 'mul_ln74_66' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 873 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_47)   --->   "%and_ln74_54 = and i64 %mul_ln74_66, i64 %select_ln83_22" [d4.cpp:74]   --->   Operation 873 'and' 'and_ln74_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 874 '%mul_ln74_67 = mul i64 %zext_ln74_41, i64 %zext_ln53_7'
ST_2 : Operation 874 [1/1] (2.09ns)   --->   "%mul_ln74_67 = mul i64 %zext_ln74_41, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 874 'mul' 'mul_ln74_67' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_47)   --->   "%select_ln74_34 = select i1 %icmp_ln63_20, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 875 'select' 'select_ln74_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 876 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_47)   --->   "%and_ln74_55 = and i64 %mul_ln74_67, i64 %select_ln74_34" [d4.cpp:74]   --->   Operation 876 'and' 'and_ln74_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 877 [1/1] (0.48ns)   --->   "%tmp_95 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_19" [d4.cpp:74]   --->   Operation 877 'mux' 'tmp_95' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 878 [1/1] (0.00ns)   --->   "%zext_ln74_42 = zext i32 %tmp_95" [d4.cpp:74]   --->   Operation 878 'zext' 'zext_ln74_42' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 879 '%mul_ln74_68 = mul i64 %zext_ln74_42, i64 %zext_ln53_7'
ST_2 : Operation 879 [1/1] (2.09ns)   --->   "%mul_ln74_68 = mul i64 %zext_ln74_42, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 879 'mul' 'mul_ln74_68' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 880 [1/1] (0.37ns)   --->   "%and_ln74_56 = and i64 %mul_ln74_68, i64 %select_ln83_16" [d4.cpp:74]   --->   Operation 880 'and' 'and_ln74_56' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 881 [1/1] (0.00ns)   --->   "%zext_ln75_21 = zext i1 %icmp_ln53" [d4.cpp:75]   --->   Operation 881 'zext' 'zext_ln75_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 882 [1/1] (0.79ns)   --->   "%sub_ln58_22 = sub i4 %sub_ln58_21, i4 %zext_ln75_21" [d4.cpp:58]   --->   Operation 882 'sub' 'sub_ln58_22' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 883 [1/1] (0.00ns)   --->   "%zext_ln75_22 = zext i1 %cmp86_2" [d4.cpp:75]   --->   Operation 883 'zext' 'zext_ln75_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 884 [1/1] (0.79ns)   --->   "%sub_ln86_1 = sub i4 %sub_ln58_22, i4 %zext_ln75_22" [d4.cpp:86]   --->   Operation 884 'sub' 'sub_ln86_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 885 [1/1] (0.48ns)   --->   "%tmp_96 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 885 'mux' 'tmp_96' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 886 [1/1] (0.00ns)   --->   "%zext_ln86_17 = zext i32 %tmp_96" [d4.cpp:86]   --->   Operation 886 'zext' 'zext_ln86_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 887 '%mul_ln86_17 = mul i64 %zext_ln86_17, i64 %conv101_cast'
ST_2 : Operation 887 [1/1] (2.09ns)   --->   "%mul_ln86_17 = mul i64 %zext_ln86_17, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 887 'mul' 'mul_ln86_17' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 888 [1/1] (0.78ns)   --->   "%icmp_ln74_6 = icmp_sgt  i5 %add_ln53_4, i5 5" [d4.cpp:74]   --->   Operation 888 'icmp' 'icmp_ln74_6' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 889 [1/1] (0.00ns)   --->   "%zext_ln75_23 = zext i1 %icmp_ln74_6" [d4.cpp:75]   --->   Operation 889 'zext' 'zext_ln75_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 890 [1/1] (0.79ns)   --->   "%sub_ln58_11 = sub i4 %sub_ln86_1, i4 %zext_ln75_23" [d4.cpp:58]   --->   Operation 890 'sub' 'sub_ln58_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 891 [1/1] (0.48ns)   --->   "%tmp_97 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_21" [d4.cpp:74]   --->   Operation 891 'mux' 'tmp_97' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 892 [1/1] (0.00ns)   --->   "%zext_ln74_43 = zext i32 %tmp_97" [d4.cpp:74]   --->   Operation 892 'zext' 'zext_ln74_43' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 893 '%mul_ln74_69 = mul i64 %zext_ln74_43, i64 %zext_ln53_7'
ST_2 : Operation 893 [1/1] (2.09ns)   --->   "%mul_ln74_69 = mul i64 %zext_ln74_43, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 893 'mul' 'mul_ln74_69' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 894 [1/1] (0.37ns)   --->   "%and_ln74_57 = and i64 %mul_ln74_69, i64 %select_ln53_2" [d4.cpp:74]   --->   Operation 894 'and' 'and_ln74_57' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 895 [1/1] (0.48ns)   --->   "%tmp_98 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_22" [d4.cpp:74]   --->   Operation 895 'mux' 'tmp_98' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 896 [1/1] (0.00ns)   --->   "%zext_ln74_44 = zext i32 %tmp_98" [d4.cpp:74]   --->   Operation 896 'zext' 'zext_ln74_44' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 897 '%mul_ln74_70 = mul i64 %zext_ln74_44, i64 %zext_ln53_7'
ST_2 : Operation 897 [1/1] (2.09ns)   --->   "%mul_ln74_70 = mul i64 %zext_ln74_44, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 897 'mul' 'mul_ln74_70' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 898 [1/1] (0.37ns)   --->   "%and_ln74_58 = and i64 %mul_ln74_70, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 898 'and' 'and_ln74_58' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 899 [1/1] (0.78ns)   --->   "%icmp_ln74_7 = icmp_sgt  i5 %add_ln53_4, i5 4" [d4.cpp:74]   --->   Operation 899 'icmp' 'icmp_ln74_7' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 900 [1/1] (0.00ns)   --->   "%zext_ln75_24 = zext i1 %icmp_ln74_7" [d4.cpp:75]   --->   Operation 900 'zext' 'zext_ln75_24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 901 [1/1] (0.79ns)   --->   "%sub_ln78_6 = sub i4 %sub_ln58_11, i4 %zext_ln75_24" [d4.cpp:78]   --->   Operation 901 'sub' 'sub_ln78_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 902 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_35)   --->   "%select_ln86_22 = select i1 %and_ln86_34, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 902 'select' 'select_ln86_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 903 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_35 = and i64 %mul_ln86_17, i64 %select_ln86_22" [d4.cpp:86]   --->   Operation 903 'and' 'and_ln86_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 904 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_12)   --->   "%select_ln67_3 = select i1 %and_ln86_34, i3 6, i3 7" [d4.cpp:67]   --->   Operation 904 'select' 'select_ln67_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 905 [1/1] (0.44ns)   --->   "%select_ln86_3 = select i1 %and_ln86_34, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 905 'select' 'select_ln86_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 906 [1/1] (0.00ns)   --->   "%zext_ln86_18 = zext i32 %select_ln86_3" [d4.cpp:86]   --->   Operation 906 'zext' 'zext_ln86_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 907 '%mul_ln86_18 = mul i64 %zext_ln86_18, i64 %zext_ln86_17'
ST_2 : Operation 907 [1/1] (2.09ns)   --->   "%mul_ln86_18 = mul i64 %zext_ln86_18, i64 %zext_ln86_17" [d4.cpp:86]   --->   Operation 907 'mul' 'mul_ln86_18' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_37)   --->   "%select_ln86_23 = select i1 %and_ln86_36, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 908 'select' 'select_ln86_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 909 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_37 = and i64 %mul_ln86_18, i64 %select_ln86_23" [d4.cpp:86]   --->   Operation 909 'and' 'and_ln86_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 910 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_12)   --->   "%zext_ln58_6 = zext i1 %and_ln86_36" [d4.cpp:58]   --->   Operation 910 'zext' 'zext_ln58_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 911 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_12 = sub i3 %select_ln67_3, i3 %zext_ln58_6" [d4.cpp:58]   --->   Operation 911 'sub' 'sub_ln58_12' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 912 [1/1] (0.00ns)   --->   "%sext_ln67_6 = sext i3 %sub_ln58_12" [d4.cpp:67]   --->   Operation 912 'sext' 'sext_ln67_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 913 [1/1] (0.48ns)   --->   "%tmp_103 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_6" [d4.cpp:86]   --->   Operation 913 'mux' 'tmp_103' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 914 [1/1] (0.00ns)   --->   "%zext_ln86_19 = zext i32 %tmp_103" [d4.cpp:86]   --->   Operation 914 'zext' 'zext_ln86_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 915 [1/1] (0.28ns)   --->   "%and_ln86_38 = and i1 %icmp_ln67_18, i1 %cmp64_3" [d4.cpp:86]   --->   Operation 915 'and' 'and_ln86_38' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 916 '%mul_ln86_19 = mul i64 %zext_ln86_19, i64 %zext_ln86_17'
ST_2 : Operation 916 [1/1] (2.09ns)   --->   "%mul_ln86_19 = mul i64 %zext_ln86_19, i64 %zext_ln86_17" [d4.cpp:86]   --->   Operation 916 'mul' 'mul_ln86_19' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 917 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_39)   --->   "%select_ln86_24 = select i1 %and_ln86_38, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 917 'select' 'select_ln86_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 918 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_39 = and i64 %mul_ln86_19, i64 %select_ln86_24" [d4.cpp:86]   --->   Operation 918 'and' 'and_ln86_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 919 [1/1] (0.00ns)   --->   "%zext_ln58_7 = zext i1 %and_ln86_38" [d4.cpp:58]   --->   Operation 919 'zext' 'zext_ln58_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 920 [1/1] (0.67ns)   --->   "%sub_ln58_13 = sub i3 %sub_ln58_12, i3 %zext_ln58_7" [d4.cpp:58]   --->   Operation 920 'sub' 'sub_ln58_13' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 921 [1/1] (0.00ns)   --->   "%sext_ln67_7 = sext i3 %sub_ln58_13" [d4.cpp:67]   --->   Operation 921 'sext' 'sext_ln67_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 922 [1/1] (0.48ns)   --->   "%tmp_105 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_7" [d4.cpp:86]   --->   Operation 922 'mux' 'tmp_105' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 923 [1/1] (0.00ns)   --->   "%zext_ln86_20 = zext i32 %tmp_105" [d4.cpp:86]   --->   Operation 923 'zext' 'zext_ln86_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_41)   --->   "%and_ln86_40 = and i1 %icmp_ln67_19, i1 %cmp64_3" [d4.cpp:86]   --->   Operation 924 'and' 'and_ln86_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 925 '%mul_ln86_20 = mul i64 %zext_ln86_20, i64 %zext_ln86_17'
ST_2 : Operation 925 [1/1] (2.09ns)   --->   "%mul_ln86_20 = mul i64 %zext_ln86_20, i64 %zext_ln86_17" [d4.cpp:86]   --->   Operation 925 'mul' 'mul_ln86_20' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_41)   --->   "%select_ln86_25 = select i1 %and_ln86_40, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 926 'select' 'select_ln86_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 927 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_41 = and i64 %mul_ln86_20, i64 %select_ln86_25" [d4.cpp:86]   --->   Operation 927 'and' 'and_ln86_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 928 [1/1] (0.78ns)   --->   "%add_ln53_9 = add i5 %k1_load, i5 5" [d4.cpp:53]   --->   Operation 928 'add' 'add_ln53_9' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 929 [1/1] (0.48ns)   --->   "%tmp_107 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 929 'mux' 'tmp_107' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 930 [1/1] (0.00ns)   --->   "%zext_ln53_14 = zext i32 %tmp_107" [d4.cpp:53]   --->   Operation 930 'zext' 'zext_ln53_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 931 [1/1] (1.01ns)   --->   "%add_ln53_10 = add i33 %zext_ln53_14, i33 %zext_ln74_60" [d4.cpp:53]   --->   Operation 931 'add' 'add_ln53_10' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 932 [1/1] (0.00ns)   --->   "%zext_ln53_15 = zext i33 %add_ln53_10" [d4.cpp:53]   --->   Operation 932 'zext' 'zext_ln53_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.57ns)   --->   Input mux for Operation 933 '%mul_ln53_4 = mul i64 %zext_ln53_15, i64 %zext_ln53_9'
ST_2 : Operation 933 [1/1] (2.84ns)   --->   "%mul_ln53_4 = mul i64 %zext_ln53_15, i64 %zext_ln53_9" [d4.cpp:53]   --->   Operation 933 'mul' 'mul_ln53_4' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 934 [1/1] (0.00ns) (grouped into LUT with out node and_ln53_4)   --->   "%select_ln53_4 = select i1 %icmp_ln53_2, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 934 'select' 'select_ln53_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 935 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln53_4 = and i64 %mul_ln53_4, i64 %select_ln53_4" [d4.cpp:53]   --->   Operation 935 'and' 'and_ln53_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 936 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln53_12 = add i64 %and_ln53, i64 %and_ln53_1" [d4.cpp:53]   --->   Operation 936 'add' 'add_ln53_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 937 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53_13 = add i64 %and_ln53_3, i64 %and_ln53_4" [d4.cpp:53]   --->   Operation 937 'add' 'add_ln53_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 938 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln53_14 = add i64 %add_ln53_13, i64 %and_ln53_2" [d4.cpp:53]   --->   Operation 938 'add' 'add_ln53_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 939 [1/1] (0.73ns)   --->   "%tmp_108 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 939 'mux' 'tmp_108' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 940 [1/1] (0.00ns)   --->   "%zext_ln72_10 = zext i32 %tmp_108" [d4.cpp:72]   --->   Operation 940 'zext' 'zext_ln72_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 941 [1/1] (0.73ns)   --->   "%tmp_109 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 941 'mux' 'tmp_109' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 942 [1/1] (0.00ns)   --->   "%zext_ln83_24 = zext i32 %tmp_109" [d4.cpp:83]   --->   Operation 942 'zext' 'zext_ln83_24' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 943 '%mul_ln83_30 = mul i64 %zext_ln72_10, i64 %zext_ln53_9'
ST_2 : Operation 943 [1/1] (2.09ns)   --->   "%mul_ln83_30 = mul i64 %zext_ln72_10, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 943 'mul' 'mul_ln83_30' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 944 [1/1] (0.17ns)   --->   "%select_ln83_28 = select i1 %cmp86_4, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 944 'select' 'select_ln83_28' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 945 [1/1] (0.37ns)   --->   "%and_ln83_48 = and i64 %mul_ln83_30, i64 %select_ln83_28" [d4.cpp:83]   --->   Operation 945 'and' 'and_ln83_48' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 946 '%mul_ln83_31 = mul i64 %zext_ln83_24, i64 %zext_ln53_9'
ST_2 : Operation 946 [1/1] (2.09ns)   --->   "%mul_ln83_31 = mul i64 %zext_ln83_24, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 946 'mul' 'mul_ln83_31' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 947 [1/1] (0.17ns)   --->   "%select_ln83_29 = select i1 %cmp64_4, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 947 'select' 'select_ln83_29' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 948 [1/1] (0.37ns)   --->   "%and_ln83_49 = and i64 %mul_ln83_31, i64 %select_ln83_29" [d4.cpp:83]   --->   Operation 948 'and' 'and_ln83_49' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 949 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83 = add i64 %and_ln74_1, i64 %and_ln74" [d4.cpp:83]   --->   Operation 949 'add' 'add_ln83' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 950 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_1 = add i64 %and_ln83_12, i64 %and_ln83_13" [d4.cpp:83]   --->   Operation 950 'add' 'add_ln83_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 951 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_2 = add i64 %add_ln83_1, i64 %and_ln83_1" [d4.cpp:83]   --->   Operation 951 'add' 'add_ln83_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 952 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_3 = add i64 %add_ln83_2, i64 %add_ln83" [d4.cpp:83]   --->   Operation 952 'add' 'add_ln83_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 953 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_4 = add i64 %and_ln83_25, i64 %and_ln83_36" [d4.cpp:83]   --->   Operation 953 'add' 'add_ln83_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 954 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_5 = add i64 %add_ln83_4, i64 %and_ln83_24" [d4.cpp:83]   --->   Operation 954 'add' 'add_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 955 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_6 = add i64 %and_ln83_48, i64 %and_ln83_49" [d4.cpp:83]   --->   Operation 955 'add' 'add_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 956 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_7 = add i64 %add_ln83_6, i64 %and_ln83_37" [d4.cpp:83]   --->   Operation 956 'add' 'add_ln83_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 957 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_8 = add i64 %add_ln83_7, i64 %add_ln83_5" [d4.cpp:83]   --->   Operation 957 'add' 'add_ln83_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 958 [1/1] (0.48ns)   --->   "%tmp_110 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 958 'mux' 'tmp_110' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 959 [1/1] (0.00ns)   --->   "%zext_ln83_25 = zext i32 %tmp_110" [d4.cpp:83]   --->   Operation 959 'zext' 'zext_ln83_25' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 960 '%mul_ln83_32 = mul i64 %zext_ln53_9, i64 %zext_ln72_9'
ST_2 : Operation 960 [1/1] (2.09ns)   --->   "%mul_ln83_32 = mul i64 %zext_ln53_9, i64 %zext_ln72_9" [d4.cpp:83]   --->   Operation 960 'mul' 'mul_ln83_32' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 961 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_20)   --->   "%and_ln83_50 = and i64 %mul_ln83_32, i64 %select_ln83_28" [d4.cpp:83]   --->   Operation 961 'and' 'and_ln83_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 962 '%mul_ln83_33 = mul i64 %zext_ln83_25, i64 %zext_ln53_9'
ST_2 : Operation 962 [1/1] (2.09ns)   --->   "%mul_ln83_33 = mul i64 %zext_ln83_25, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 962 'mul' 'mul_ln83_33' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 963 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_20)   --->   "%and_ln83_51 = and i64 %mul_ln83_33, i64 %select_ln83_29" [d4.cpp:83]   --->   Operation 963 'and' 'and_ln83_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 964 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_11 = add i64 %and_ln74_3, i64 %and_ln83_3" [d4.cpp:83]   --->   Operation 964 'add' 'add_ln83_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 965 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_13 = add i64 %and_ln86_1, i64 %and_ln74_17" [d4.cpp:83]   --->   Operation 965 'add' 'add_ln83_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 966 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_14 = add i64 %and_ln74_18, i64 %and_ln83_15" [d4.cpp:83]   --->   Operation 966 'add' 'add_ln83_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 967 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_15 = add i64 %add_ln83_14, i64 %add_ln83_13" [d4.cpp:83]   --->   Operation 967 'add' 'add_ln83_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 968 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_17 = add i64 %and_ln83_26, i64 %and_ln83_27" [d4.cpp:83]   --->   Operation 968 'add' 'add_ln83_17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 969 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_19 = add i64 %and_ln83_38, i64 %and_ln83_39" [d4.cpp:83]   --->   Operation 969 'add' 'add_ln83_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 970 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_20 = add i64 %and_ln83_50, i64 %and_ln83_51" [d4.cpp:83]   --->   Operation 970 'add' 'add_ln83_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 971 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_21 = add i64 %add_ln83_20, i64 %add_ln83_19" [d4.cpp:83]   --->   Operation 971 'add' 'add_ln83_21' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 972 [1/1] (0.48ns)   --->   "%tmp_111 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 972 'mux' 'tmp_111' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 973 [1/1] (0.00ns)   --->   "%zext_ln83_26 = zext i32 %tmp_111" [d4.cpp:83]   --->   Operation 973 'zext' 'zext_ln83_26' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 974 '%mul_ln83_34 = mul i64 %zext_ln53_9, i64 %zext_ln72_8'
ST_2 : Operation 974 [1/1] (2.09ns)   --->   "%mul_ln83_34 = mul i64 %zext_ln53_9, i64 %zext_ln72_8" [d4.cpp:83]   --->   Operation 974 'mul' 'mul_ln83_34' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 975 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_36)   --->   "%and_ln83_52 = and i64 %mul_ln83_34, i64 %select_ln83_28" [d4.cpp:83]   --->   Operation 975 'and' 'and_ln83_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 976 '%mul_ln83_35 = mul i64 %zext_ln83_26, i64 %zext_ln53_9'
ST_2 : Operation 976 [1/1] (2.09ns)   --->   "%mul_ln83_35 = mul i64 %zext_ln83_26, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 976 'mul' 'mul_ln83_35' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 977 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_36)   --->   "%and_ln83_53 = and i64 %mul_ln83_35, i64 %select_ln83_29" [d4.cpp:83]   --->   Operation 977 'and' 'and_ln83_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 978 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_25 = add i64 %and_ln74_4, i64 %and_ln74_5" [d4.cpp:83]   --->   Operation 978 'add' 'add_ln83_25' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 979 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_26 = add i64 %and_ln83_5, i64 %and_ln86_3" [d4.cpp:83]   --->   Operation 979 'add' 'add_ln83_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 980 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_28 = add i64 %and_ln74_19, i64 %and_ln74_20" [d4.cpp:83]   --->   Operation 980 'add' 'add_ln83_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 981 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_29 = add i64 %and_ln83_17, i64 %and_ln86_15" [d4.cpp:83]   --->   Operation 981 'add' 'add_ln83_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 982 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_30 = add i64 %add_ln83_29, i64 %add_ln83_28" [d4.cpp:83]   --->   Operation 982 'add' 'add_ln83_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 983 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_32 = add i64 %and_ln74_33, i64 %and_ln74_34" [d4.cpp:83]   --->   Operation 983 'add' 'add_ln83_32' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 984 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_33 = add i64 %and_ln83_29, i64 %and_ln86_25" [d4.cpp:83]   --->   Operation 984 'add' 'add_ln83_33' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 985 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_35 = add i64 %and_ln83_40, i64 %and_ln83_41" [d4.cpp:83]   --->   Operation 985 'add' 'add_ln83_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 986 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_36 = add i64 %and_ln83_52, i64 %and_ln83_53" [d4.cpp:83]   --->   Operation 986 'add' 'add_ln83_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 987 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_37 = add i64 %add_ln83_36, i64 %add_ln83_35" [d4.cpp:83]   --->   Operation 987 'add' 'add_ln83_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 988 [1/1] (0.48ns)   --->   "%tmp_112 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 988 'mux' 'tmp_112' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 989 [1/1] (0.00ns)   --->   "%zext_ln83_27 = zext i32 %tmp_112" [d4.cpp:83]   --->   Operation 989 'zext' 'zext_ln83_27' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 990 '%mul_ln83_36 = mul i64 %zext_ln53_9, i64 %zext_ln72_7'
ST_2 : Operation 990 [1/1] (2.09ns)   --->   "%mul_ln83_36 = mul i64 %zext_ln53_9, i64 %zext_ln72_7" [d4.cpp:83]   --->   Operation 990 'mul' 'mul_ln83_36' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 991 [1/1] (0.37ns)   --->   "%and_ln83_54 = and i64 %mul_ln83_36, i64 %select_ln83_28" [d4.cpp:83]   --->   Operation 991 'and' 'and_ln83_54' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 992 '%mul_ln83_37 = mul i64 %zext_ln83_27, i64 %zext_ln53_9'
ST_2 : Operation 992 [1/1] (2.09ns)   --->   "%mul_ln83_37 = mul i64 %zext_ln83_27, i64 %zext_ln53_9" [d4.cpp:83]   --->   Operation 992 'mul' 'mul_ln83_37' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 993 [1/1] (0.37ns)   --->   "%and_ln83_55 = and i64 %mul_ln83_37, i64 %select_ln83_29" [d4.cpp:83]   --->   Operation 993 'and' 'and_ln83_55' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 994 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_41 = add i64 %and_ln74_6, i64 %and_ln74_7" [d4.cpp:83]   --->   Operation 994 'add' 'add_ln83_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 995 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_42 = add i64 %and_ln83_7, i64 %and_ln86_5" [d4.cpp:83]   --->   Operation 995 'add' 'add_ln83_42' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 996 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_44 = add i64 %and_ln74_21, i64 %and_ln74_22" [d4.cpp:83]   --->   Operation 996 'add' 'add_ln83_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 997 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_45 = add i64 %and_ln86_17, i64 %and_ln74_35" [d4.cpp:83]   --->   Operation 997 'add' 'add_ln83_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 998 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_46 = add i64 %add_ln83_45, i64 %and_ln83_19" [d4.cpp:83]   --->   Operation 998 'add' 'add_ln83_46' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 999 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_47 = add i64 %add_ln83_46, i64 %add_ln83_44" [d4.cpp:83]   --->   Operation 999 'add' 'add_ln83_47' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1000 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_49 = add i64 %and_ln74_36, i64 %and_ln83_31" [d4.cpp:83]   --->   Operation 1000 'add' 'add_ln83_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1001 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_50 = add i64 %and_ln86_27, i64 %and_ln74_48" [d4.cpp:83]   --->   Operation 1001 'add' 'add_ln83_50' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1002 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_52 = add i64 %and_ln74_49, i64 %and_ln83_43" [d4.cpp:83]   --->   Operation 1002 'add' 'add_ln83_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1003 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_53 = add i64 %and_ln83_54, i64 %and_ln83_55" [d4.cpp:83]   --->   Operation 1003 'add' 'add_ln83_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1004 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_54 = add i64 %add_ln83_53, i64 %and_ln86_35" [d4.cpp:83]   --->   Operation 1004 'add' 'add_ln83_54' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1005 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_55 = add i64 %add_ln83_54, i64 %add_ln83_52" [d4.cpp:83]   --->   Operation 1005 'add' 'add_ln83_55' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1006 '%mul_ln74_76 = mul i64 %zext_ln53_9, i64 %zext_ln72'
ST_2 : Operation 1006 [1/1] (2.09ns)   --->   "%mul_ln74_76 = mul i64 %zext_ln53_9, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 1006 'mul' 'mul_ln74_76' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1007 [1/1] (0.37ns)   --->   "%and_ln74_62 = and i64 %mul_ln74_76, i64 %select_ln83_28" [d4.cpp:74]   --->   Operation 1007 'and' 'and_ln74_62' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1008 '%mul_ln74_78 = mul i64 %zext_ln53_9, i64 %zext_ln72_1'
ST_2 : Operation 1008 [1/1] (2.09ns)   --->   "%mul_ln74_78 = mul i64 %zext_ln53_9, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 1008 'mul' 'mul_ln74_78' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1009 [1/1] (0.37ns)   --->   "%and_ln74_64 = and i64 %mul_ln74_78, i64 %select_ln83_28" [d4.cpp:74]   --->   Operation 1009 'and' 'and_ln74_64' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1010 '%mul_ln74_80 = mul i64 %zext_ln53_9, i64 %zext_ln72_2'
ST_2 : Operation 1010 [1/1] (2.09ns)   --->   "%mul_ln74_80 = mul i64 %zext_ln53_9, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 1010 'mul' 'mul_ln74_80' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1011 [1/1] (0.37ns)   --->   "%and_ln74_66 = and i64 %mul_ln74_80, i64 %select_ln83_28" [d4.cpp:74]   --->   Operation 1011 'and' 'and_ln74_66' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1012 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_50)   --->   "%select_ln74_40 = select i1 %icmp_ln63_23, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1012 'select' 'select_ln74_40' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 1013 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_50)   --->   "%and_ln74_67 = and i64 %mul_ln74_81, i64 %select_ln74_40" [d4.cpp:74]   --->   Operation 1013 'and' 'and_ln74_67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1014 [1/1] (0.48ns)   --->   "%tmp_116 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln74" [d4.cpp:74]   --->   Operation 1014 'mux' 'tmp_116' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1015 [1/1] (0.00ns)   --->   "%zext_ln74_52 = zext i32 %tmp_116" [d4.cpp:74]   --->   Operation 1015 'zext' 'zext_ln74_52' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1016 '%mul_ln74_82 = mul i64 %zext_ln74_52, i64 %zext_ln53_9'
ST_2 : Operation 1016 [1/1] (2.09ns)   --->   "%mul_ln74_82 = mul i64 %zext_ln74_52, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1016 'mul' 'mul_ln74_82' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1017 [1/1] (0.37ns)   --->   "%and_ln74_68 = and i64 %mul_ln74_82, i64 %select_ln83_23" [d4.cpp:74]   --->   Operation 1017 'and' 'and_ln74_68' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1018 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74 = add i64 %and_ln74_14, i64 %and_ln74_29" [d4.cpp:74]   --->   Operation 1018 'add' 'add_ln74' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1019 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_1 = add i64 %and_ln74_56, i64 %and_ln74_68" [d4.cpp:74]   --->   Operation 1019 'add' 'add_ln74_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1020 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_2 = add i64 %add_ln74_1, i64 %and_ln74_43" [d4.cpp:74]   --->   Operation 1020 'add' 'add_ln74_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1021 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_3 = add i64 %add_ln74_2, i64 %add_ln74" [d4.cpp:74]   --->   Operation 1021 'add' 'add_ln74_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1022 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_21 = add i64 %arr_8_load, i64 %add_ln74_3" [d4.cpp:74]   --->   Operation 1022 'add' 'arr_21' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1023 [1/1] (0.00ns)   --->   "%zext_ln75_27 = zext i1 %icmp_ln53_1" [d4.cpp:75]   --->   Operation 1023 'zext' 'zext_ln75_27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 1024 [1/1] (0.79ns)   --->   "%sub_ln58_24 = sub i4 %sub_ln58_23, i4 %zext_ln75_27" [d4.cpp:58]   --->   Operation 1024 'sub' 'sub_ln58_24' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1025 [1/1] (0.00ns)   --->   "%zext_ln75_28 = zext i1 %cmp86_3" [d4.cpp:75]   --->   Operation 1025 'zext' 'zext_ln75_28' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 1026 [1/1] (0.79ns)   --->   "%sub_ln86_2 = sub i4 %sub_ln58_24, i4 %zext_ln75_28" [d4.cpp:86]   --->   Operation 1026 'sub' 'sub_ln86_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1027 [1/1] (0.78ns)   --->   "%icmp_ln74_9 = icmp_sgt  i5 %add_ln53_6, i5 5" [d4.cpp:74]   --->   Operation 1027 'icmp' 'icmp_ln74_9' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1028 [1/1] (0.00ns)   --->   "%zext_ln75_29 = zext i1 %icmp_ln74_9" [d4.cpp:75]   --->   Operation 1028 'zext' 'zext_ln75_29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 1029 [1/1] (0.79ns)   --->   "%sub_ln58_25 = sub i4 %sub_ln86_2, i4 %zext_ln75_29" [d4.cpp:58]   --->   Operation 1029 'sub' 'sub_ln58_25' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1030 [1/1] (0.78ns)   --->   "%icmp_ln74_10 = icmp_sgt  i5 %add_ln53_6, i5 4" [d4.cpp:74]   --->   Operation 1030 'icmp' 'icmp_ln74_10' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1031 [1/1] (0.00ns)   --->   "%zext_ln75_30 = zext i1 %icmp_ln74_10" [d4.cpp:75]   --->   Operation 1031 'zext' 'zext_ln75_30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 1032 [1/1] (0.79ns)   --->   "%sub_ln58_14 = sub i4 %sub_ln58_25, i4 %zext_ln75_30" [d4.cpp:58]   --->   Operation 1032 'sub' 'sub_ln58_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1033 [1/1] (0.48ns)   --->   "%tmp_118 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_23" [d4.cpp:74]   --->   Operation 1033 'mux' 'tmp_118' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1034 [1/1] (0.00ns)   --->   "%zext_ln74_53 = zext i32 %tmp_118" [d4.cpp:74]   --->   Operation 1034 'zext' 'zext_ln74_53' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1035 '%mul_ln74_83 = mul i64 %zext_ln74_53, i64 %zext_ln53_9'
ST_2 : Operation 1035 [1/1] (2.09ns)   --->   "%mul_ln74_83 = mul i64 %zext_ln74_53, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1035 'mul' 'mul_ln74_83' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1036 [1/1] (0.37ns)   --->   "%and_ln74_69 = and i64 %mul_ln74_83, i64 %select_ln53_3" [d4.cpp:74]   --->   Operation 1036 'and' 'and_ln74_69' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1037 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_5 = add i64 %and_ln74_15, i64 %and_ln74_30" [d4.cpp:74]   --->   Operation 1037 'add' 'add_ln74_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1038 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_6 = add i64 %and_ln74_57, i64 %and_ln74_69" [d4.cpp:74]   --->   Operation 1038 'add' 'add_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1039 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_7 = add i64 %add_ln74_6, i64 %and_ln74_44" [d4.cpp:74]   --->   Operation 1039 'add' 'add_ln74_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1040 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_8 = add i64 %add_ln74_7, i64 %add_ln74_5" [d4.cpp:74]   --->   Operation 1040 'add' 'add_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1041 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_22 = add i64 %arr_7_load, i64 %add_ln74_8" [d4.cpp:74]   --->   Operation 1041 'add' 'arr_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1042 [1/1] (0.48ns)   --->   "%tmp_119 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_24" [d4.cpp:74]   --->   Operation 1042 'mux' 'tmp_119' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1043 [1/1] (0.00ns)   --->   "%zext_ln74_54 = zext i32 %tmp_119" [d4.cpp:74]   --->   Operation 1043 'zext' 'zext_ln74_54' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 1044 '%mul_ln74_84 = mul i64 %zext_ln74_54, i64 %zext_ln53_9'
ST_2 : Operation 1044 [1/1] (2.09ns)   --->   "%mul_ln74_84 = mul i64 %zext_ln74_54, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1044 'mul' 'mul_ln74_84' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1045 [1/1] (0.37ns)   --->   "%and_ln74_70 = and i64 %mul_ln74_84, i64 %select_ln83_22" [d4.cpp:74]   --->   Operation 1045 'and' 'and_ln74_70' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1046 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_10 = add i64 %and_ln74_16, i64 %and_ln74_31" [d4.cpp:74]   --->   Operation 1046 'add' 'add_ln74_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1047 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_11 = add i64 %and_ln74_58, i64 %and_ln74_70" [d4.cpp:74]   --->   Operation 1047 'add' 'add_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1048 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_12 = add i64 %add_ln74_11, i64 %and_ln74_45" [d4.cpp:74]   --->   Operation 1048 'add' 'add_ln74_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1049 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_13 = add i64 %add_ln74_12, i64 %add_ln74_10" [d4.cpp:74]   --->   Operation 1049 'add' 'add_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1050 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_23 = add i64 %arr_6_load, i64 %add_ln74_13" [d4.cpp:74]   --->   Operation 1050 'add' 'arr_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1051 [1/1] (0.00ns)   --->   "%zext_ln75_31 = zext i1 %icmp_ln74_11" [d4.cpp:75]   --->   Operation 1051 'zext' 'zext_ln75_31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 1052 [1/1] (0.79ns)   --->   "%sub_ln78_8 = sub i4 %sub_ln58_14, i4 %zext_ln75_31" [d4.cpp:78]   --->   Operation 1052 'sub' 'sub_ln78_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1053 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86 = add i64 %and_ln74_8, i64 %and_ln74_9" [d4.cpp:86]   --->   Operation 1053 'add' 'add_ln86' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1054 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_1 = add i64 %and_ln86_7, i64 %and_ln74_23" [d4.cpp:86]   --->   Operation 1054 'add' 'add_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1055 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_2 = add i64 %add_ln86_1, i64 %and_ln83_9" [d4.cpp:86]   --->   Operation 1055 'add' 'add_ln86_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1056 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_4 = add i64 %and_ln74_24, i64 %and_ln83_21" [d4.cpp:86]   --->   Operation 1056 'add' 'add_ln86_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1057 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_5 = add i64 %and_ln74_37, i64 %and_ln74_38" [d4.cpp:86]   --->   Operation 1057 'add' 'add_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1058 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_6 = add i64 %add_ln86_5, i64 %and_ln86_19" [d4.cpp:86]   --->   Operation 1058 'add' 'add_ln86_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1059 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_7 = add i64 %add_ln86_6, i64 %add_ln86_4" [d4.cpp:86]   --->   Operation 1059 'add' 'add_ln86_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1060 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_9 = add i64 %and_ln83_33, i64 %and_ln86_29" [d4.cpp:86]   --->   Operation 1060 'add' 'add_ln86_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1061 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_10 = add i64 %and_ln74_51, i64 %and_ln83_45" [d4.cpp:86]   --->   Operation 1061 'add' 'add_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1062 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_11 = add i64 %add_ln86_10, i64 %and_ln74_50" [d4.cpp:86]   --->   Operation 1062 'add' 'add_ln86_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1063 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_12 = add i64 %add_ln86_11, i64 %add_ln86_9" [d4.cpp:86]   --->   Operation 1063 'add' 'add_ln86_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1064 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_13 = add i64 %and_ln86_37, i64 %and_ln74_62" [d4.cpp:86]   --->   Operation 1064 'add' 'add_ln86_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1065 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_16 = add i64 %add_ln86_15, i64 %add_ln86_13" [d4.cpp:86]   --->   Operation 1065 'add' 'add_ln86_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1066 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_17 = add i64 %add_ln86_16, i64 %add_ln86_12" [d4.cpp:86]   --->   Operation 1066 'add' 'add_ln86_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1067 [1/1] (0.78ns)   --->   "%icmp_ln74_12 = icmp_sgt  i5 %add_ln53_6, i5 2" [d4.cpp:74]   --->   Operation 1067 'icmp' 'icmp_ln74_12' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1068 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_20 = add i64 %and_ln74_10, i64 %and_ln74_11" [d4.cpp:86]   --->   Operation 1068 'add' 'add_ln86_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1069 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_21 = add i64 %and_ln86_9, i64 %and_ln74_25" [d4.cpp:86]   --->   Operation 1069 'add' 'add_ln86_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1070 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_22 = add i64 %add_ln86_21, i64 %and_ln83_11" [d4.cpp:86]   --->   Operation 1070 'add' 'add_ln86_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1071 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_24 = add i64 %and_ln74_26, i64 %and_ln83_23" [d4.cpp:86]   --->   Operation 1071 'add' 'add_ln86_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1072 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_25 = add i64 %and_ln74_39, i64 %and_ln74_40" [d4.cpp:86]   --->   Operation 1072 'add' 'add_ln86_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1073 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_26 = add i64 %add_ln86_25, i64 %and_ln86_21" [d4.cpp:86]   --->   Operation 1073 'add' 'add_ln86_26' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1074 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_27 = add i64 %add_ln86_26, i64 %add_ln86_24" [d4.cpp:86]   --->   Operation 1074 'add' 'add_ln86_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1075 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_29 = add i64 %and_ln83_35, i64 %and_ln86_31" [d4.cpp:86]   --->   Operation 1075 'add' 'add_ln86_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1076 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_30 = add i64 %and_ln74_53, i64 %and_ln83_47" [d4.cpp:86]   --->   Operation 1076 'add' 'add_ln86_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1077 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_31 = add i64 %add_ln86_30, i64 %and_ln74_52" [d4.cpp:86]   --->   Operation 1077 'add' 'add_ln86_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1078 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_32 = add i64 %add_ln86_31, i64 %add_ln86_29" [d4.cpp:86]   --->   Operation 1078 'add' 'add_ln86_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1079 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_33 = add i64 %and_ln86_39, i64 %and_ln74_64" [d4.cpp:86]   --->   Operation 1079 'add' 'add_ln86_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1080 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_36 = add i64 %add_ln86_35, i64 %add_ln86_33" [d4.cpp:86]   --->   Operation 1080 'add' 'add_ln86_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1081 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_37 = add i64 %add_ln86_36, i64 %add_ln86_32" [d4.cpp:86]   --->   Operation 1081 'add' 'add_ln86_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1082 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_50)   --->   "%and_ln86_46 = and i1 %icmp_ln67_22, i1 %cmp64_4" [d4.cpp:86]   --->   Operation 1082 'and' 'and_ln86_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1083 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_50)   --->   "%select_ln86_28 = select i1 %and_ln86_46, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 1083 'select' 'select_ln86_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 1084 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_50)   --->   "%and_ln86_47 = and i64 %mul_ln86_23, i64 %select_ln86_28" [d4.cpp:86]   --->   Operation 1084 'and' 'and_ln86_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1085 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_40 = add i64 %and_ln74_13, i64 %and_ln86_11" [d4.cpp:86]   --->   Operation 1085 'add' 'add_ln86_40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1086 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_42 = add i64 %and_ln74_27, i64 %and_ln74_28" [d4.cpp:86]   --->   Operation 1086 'add' 'add_ln86_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1087 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_43 = add i64 %and_ln86_23, i64 %and_ln74_41" [d4.cpp:86]   --->   Operation 1087 'add' 'add_ln86_43' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1088 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_44 = add i64 %add_ln86_43, i64 %add_ln86_42" [d4.cpp:86]   --->   Operation 1088 'add' 'add_ln86_44' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1089 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_46 = add i64 %and_ln74_42, i64 %and_ln86_33" [d4.cpp:86]   --->   Operation 1089 'add' 'add_ln86_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1090 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_47 = add i64 %and_ln74_54, i64 %and_ln74_55" [d4.cpp:86]   --->   Operation 1090 'add' 'add_ln86_47' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1091 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_48 = add i64 %add_ln86_47, i64 %add_ln86_46" [d4.cpp:86]   --->   Operation 1091 'add' 'add_ln86_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1092 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_49 = add i64 %and_ln86_41, i64 %and_ln74_66" [d4.cpp:86]   --->   Operation 1092 'add' 'add_ln86_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1093 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_50 = add i64 %and_ln74_67, i64 %and_ln86_47" [d4.cpp:86]   --->   Operation 1093 'add' 'add_ln86_50' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 1094 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_51 = add i64 %add_ln86_50, i64 %add_ln86_49" [d4.cpp:86]   --->   Operation 1094 'add' 'add_ln86_51' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1095 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_52 = add i64 %add_ln86_51, i64 %add_ln86_48" [d4.cpp:86]   --->   Operation 1095 'add' 'add_ln86_52' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 1096 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_21, i64 %arr_8" [d4.cpp:42]   --->   Operation 1096 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 1097 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_22, i64 %arr_7" [d4.cpp:42]   --->   Operation 1097 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 1098 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_23, i64 %arr_6" [d4.cpp:42]   --->   Operation 1098 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 1099 [1/1] (0.42ns)   --->   "%store_ln42 = store i5 %add_ln53_9, i5 %k1" [d4.cpp:42]   --->   Operation 1099 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 1100 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln53_1, i4 %k" [d4.cpp:42]   --->   Operation 1100 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 1293 [1/1] (0.00ns)   --->   "%arr_load_1 = load i64 %arr"   --->   Operation 1293 'load' 'arr_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1294 [1/1] (0.00ns)   --->   "%arr_1_load_1 = load i64 %arr_1"   --->   Operation 1294 'load' 'arr_1_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1295 [1/1] (0.00ns)   --->   "%arr_2_load_1 = load i64 %arr_2"   --->   Operation 1295 'load' 'arr_2_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1296 [1/1] (0.00ns)   --->   "%arr_3_load_1 = load i64 %arr_3"   --->   Operation 1296 'load' 'arr_3_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1297 [1/1] (0.00ns)   --->   "%arr_4_load_1 = load i64 %arr_4"   --->   Operation 1297 'load' 'arr_4_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1298 [1/1] (0.00ns)   --->   "%arr_5_load_1 = load i64 %arr_5"   --->   Operation 1298 'load' 'arr_5_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1299 [1/1] (0.00ns)   --->   "%arr_6_load_1 = load i64 %arr_6"   --->   Operation 1299 'load' 'arr_6_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1300 [1/1] (0.00ns)   --->   "%arr_7_load_1 = load i64 %arr_7"   --->   Operation 1300 'load' 'arr_7_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1301 [1/1] (0.00ns)   --->   "%arr_8_load_1 = load i64 %arr_8"   --->   Operation 1301 'load' 'arr_8_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1302 [1/1] (0.00ns)   --->   "%arr_9_load_1 = load i64 %arr_9"   --->   Operation 1302 'load' 'arr_9_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1303 [1/1] (0.00ns)   --->   "%arr_10_load_1 = load i64 %arr_10"   --->   Operation 1303 'load' 'arr_10_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1304 [1/1] (0.00ns)   --->   "%arr_11_load_1 = load i64 %arr_11"   --->   Operation 1304 'load' 'arr_11_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1305 [1/1] (0.00ns)   --->   "%arr_12_load_1 = load i64 %arr_12"   --->   Operation 1305 'load' 'arr_12_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1306 [1/1] (0.00ns)   --->   "%arr_13_load_1 = load i64 %arr_13"   --->   Operation 1306 'load' 'arr_13_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1307 [1/1] (0.00ns)   --->   "%arr_14_load_1 = load i64 %arr_14"   --->   Operation 1307 'load' 'arr_14_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1308 [1/1] (0.00ns)   --->   "%arr_15_load_1 = load i64 %arr_15"   --->   Operation 1308 'load' 'arr_15_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1309 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_15_out, i64 %arr_15_load_1"   --->   Operation 1309 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1310 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_14_out, i64 %arr_14_load_1"   --->   Operation 1310 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1311 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_13_out, i64 %arr_13_load_1"   --->   Operation 1311 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1312 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_12_out, i64 %arr_12_load_1"   --->   Operation 1312 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1313 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_11_out, i64 %arr_11_load_1"   --->   Operation 1313 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1314 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_10_out, i64 %arr_10_load_1"   --->   Operation 1314 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1315 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_9_out, i64 %arr_9_load_1"   --->   Operation 1315 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1316 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_8_out, i64 %arr_8_load_1"   --->   Operation 1316 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1317 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_7_out, i64 %arr_7_load_1"   --->   Operation 1317 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1318 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_6_out, i64 %arr_6_load_1"   --->   Operation 1318 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1319 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_5_out, i64 %arr_5_load_1"   --->   Operation 1319 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1320 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_4_out, i64 %arr_4_load_1"   --->   Operation 1320 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1321 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_3_out, i64 %arr_3_load_1"   --->   Operation 1321 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1322 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_2_out, i64 %arr_2_load_1"   --->   Operation 1322 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1323 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_1_out, i64 %arr_1_load_1"   --->   Operation 1323 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1324 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %arr_out, i64 %arr_load_1"   --->   Operation 1324 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1325 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 1325 'ret' 'ret_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.03>
ST_3 : Operation 1101 [1/1] (0.00ns)   --->   "%arr_load = load i64 %arr" [d4.cpp:53]   --->   Operation 1101 'load' 'arr_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1102 [1/1] (0.00ns)   --->   "%arr_1_load = load i64 %arr_1" [d4.cpp:74]   --->   Operation 1102 'load' 'arr_1_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1103 [1/1] (0.00ns)   --->   "%arr_2_load = load i64 %arr_2" [d4.cpp:74]   --->   Operation 1103 'load' 'arr_2_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1104 [1/1] (0.00ns)   --->   "%arr_3_load = load i64 %arr_3" [d4.cpp:74]   --->   Operation 1104 'load' 'arr_3_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1105 [1/1] (0.00ns)   --->   "%arr_4_load = load i64 %arr_4" [d4.cpp:74]   --->   Operation 1105 'load' 'arr_4_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1106 [1/1] (0.00ns)   --->   "%arr_5_load = load i64 %arr_5" [d4.cpp:74]   --->   Operation 1106 'load' 'arr_5_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1107 [1/1] (0.00ns)   --->   "%arr_9_load = load i64 %arr_9" [d4.cpp:86]   --->   Operation 1107 'load' 'arr_9_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1108 [1/1] (0.00ns)   --->   "%arr_10_load = load i64 %arr_10" [d4.cpp:86]   --->   Operation 1108 'load' 'arr_10_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1109 [1/1] (0.00ns)   --->   "%arr_11_load = load i64 %arr_11" [d4.cpp:86]   --->   Operation 1109 'load' 'arr_11_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1110 [1/1] (0.00ns)   --->   "%arr_12_load = load i64 %arr_12" [d4.cpp:83]   --->   Operation 1110 'load' 'arr_12_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1111 [1/1] (0.00ns)   --->   "%arr_13_load = load i64 %arr_13" [d4.cpp:83]   --->   Operation 1111 'load' 'arr_13_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1112 [1/1] (0.00ns)   --->   "%arr_14_load = load i64 %arr_14" [d4.cpp:83]   --->   Operation 1112 'load' 'arr_14_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1113 [1/1] (0.00ns)   --->   "%arr_15_load = load i64 %arr_15" [d4.cpp:83]   --->   Operation 1113 'load' 'arr_15_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1114 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d4.cpp:44]   --->   Operation 1114 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1115 [1/1] (0.00ns)   --->   "%speclooptripcount_ln12 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d4.cpp:12]   --->   Operation 1115 'speclooptripcount' 'speclooptripcount_ln12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1116 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d4.cpp:42]   --->   Operation 1116 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1117 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 1117 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1118 [1/1] (0.00ns)   --->   "%zext_ln74_9 = zext i32 %tmp_25" [d4.cpp:74]   --->   Operation 1118 'zext' 'zext_ln74_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1119 '%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53'
ST_3 : Operation 1119 [1/1] (2.09ns)   --->   "%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 1119 'mul' 'mul_ln74_17' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1120 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 1120 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1121 [1/1] (0.00ns)   --->   "%zext_ln74_10 = zext i32 %tmp_26" [d4.cpp:74]   --->   Operation 1121 'zext' 'zext_ln74_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1122 '%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53'
ST_3 : Operation 1122 [1/1] (2.09ns)   --->   "%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 1122 'mul' 'mul_ln74_18' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1123 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 1123 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1124 [1/1] (0.00ns)   --->   "%zext_ln74_11 = zext i32 %tmp_28" [d4.cpp:74]   --->   Operation 1124 'zext' 'zext_ln74_11' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1125 '%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53'
ST_3 : Operation 1125 [1/1] (2.09ns)   --->   "%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 1125 'mul' 'mul_ln74_19' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1126 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 1126 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1127 [1/1] (0.00ns)   --->   "%zext_ln74_12 = zext i32 %tmp_30" [d4.cpp:74]   --->   Operation 1127 'zext' 'zext_ln74_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1128 '%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53'
ST_3 : Operation 1128 [1/1] (2.09ns)   --->   "%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 1128 'mul' 'mul_ln74_20' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1129 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 1129 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1130 [1/1] (0.00ns)   --->   "%zext_ln74_13 = zext i32 %tmp_32" [d4.cpp:74]   --->   Operation 1130 'zext' 'zext_ln74_13' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1131 '%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53'
ST_3 : Operation 1131 [1/1] (2.09ns)   --->   "%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 1131 'mul' 'mul_ln74_21' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1132 [1/1] (0.48ns)   --->   "%tmp_51 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_2" [d4.cpp:74]   --->   Operation 1132 'mux' 'tmp_51' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1133 [1/1] (0.00ns)   --->   "%zext_ln74_22 = zext i32 %tmp_51" [d4.cpp:74]   --->   Operation 1133 'zext' 'zext_ln74_22' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1134 '%mul_ln74_37 = mul i64 %zext_ln74_22, i64 %zext_ln53_3'
ST_3 : Operation 1134 [1/1] (2.09ns)   --->   "%mul_ln74_37 = mul i64 %zext_ln74_22, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 1134 'mul' 'mul_ln74_37' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1135 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%select_ln74_23 = select i1 %icmp_ln74_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1135 'select' 'select_ln74_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1136 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%and_ln74_32 = and i64 %mul_ln74_37, i64 %select_ln74_23" [d4.cpp:74]   --->   Operation 1136 'and' 'and_ln74_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1137 [1/1] (0.00ns)   --->   "%zext_ln75_12 = zext i1 %icmp_ln74_3" [d4.cpp:75]   --->   Operation 1137 'zext' 'zext_ln75_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1138 [1/1] (0.79ns)   --->   "%sub_ln78_3 = sub i4 %sub_ln78_2, i4 %zext_ln75_12" [d4.cpp:78]   --->   Operation 1138 'sub' 'sub_ln78_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1139 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 1139 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1140 [1/1] (0.00ns)   --->   "%zext_ln74_23 = zext i32 %tmp_52" [d4.cpp:74]   --->   Operation 1140 'zext' 'zext_ln74_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1141 '%mul_ln74_38 = mul i64 %zext_ln74_23, i64 %zext_ln53_3'
ST_3 : Operation 1141 [1/1] (2.09ns)   --->   "%mul_ln74_38 = mul i64 %zext_ln74_23, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 1141 'mul' 'mul_ln74_38' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1142 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 1142 'mux' 'tmp_54' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1143 [1/1] (0.00ns)   --->   "%zext_ln74_24 = zext i32 %tmp_54" [d4.cpp:74]   --->   Operation 1143 'zext' 'zext_ln74_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1144 '%mul_ln74_39 = mul i64 %zext_ln74_24, i64 %zext_ln53_3'
ST_3 : Operation 1144 [1/1] (2.09ns)   --->   "%mul_ln74_39 = mul i64 %zext_ln74_24, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 1144 'mul' 'mul_ln74_39' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1145 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 1145 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1146 [1/1] (0.00ns)   --->   "%zext_ln74_25 = zext i32 %tmp_56" [d4.cpp:74]   --->   Operation 1146 'zext' 'zext_ln74_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1147 '%mul_ln74_40 = mul i64 %zext_ln74_25, i64 %zext_ln53_3'
ST_3 : Operation 1147 [1/1] (2.09ns)   --->   "%mul_ln74_40 = mul i64 %zext_ln74_25, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 1147 'mul' 'mul_ln74_40' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1148 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 1148 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1149 [1/1] (0.00ns)   --->   "%zext_ln74_26 = zext i32 %tmp_58" [d4.cpp:74]   --->   Operation 1149 'zext' 'zext_ln74_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1150 '%mul_ln74_41 = mul i64 %zext_ln74_26, i64 %zext_ln53_3'
ST_3 : Operation 1150 [1/1] (2.09ns)   --->   "%mul_ln74_41 = mul i64 %zext_ln74_26, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 1150 'mul' 'mul_ln74_41' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1151 [1/1] (0.48ns)   --->   "%tmp_76 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln86" [d4.cpp:74]   --->   Operation 1151 'mux' 'tmp_76' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1152 [1/1] (0.00ns)   --->   "%zext_ln74_34 = zext i32 %tmp_76" [d4.cpp:74]   --->   Operation 1152 'zext' 'zext_ln74_34' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1153 '%mul_ln74_55 = mul i64 %zext_ln74_34, i64 %zext_ln53_5'
ST_3 : Operation 1153 [1/1] (2.09ns)   --->   "%mul_ln74_55 = mul i64 %zext_ln74_34, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 1153 'mul' 'mul_ln74_55' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1154 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_46)   --->   "%select_ln74_29 = select i1 %icmp_ln74_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1154 'select' 'select_ln74_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1155 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_46 = and i64 %mul_ln74_55, i64 %select_ln74_29" [d4.cpp:74]   --->   Operation 1155 'and' 'and_ln74_46' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1156 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_4" [d4.cpp:74]   --->   Operation 1156 'mux' 'tmp_77' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1157 [1/1] (0.00ns)   --->   "%zext_ln74_35 = zext i32 %tmp_77" [d4.cpp:74]   --->   Operation 1157 'zext' 'zext_ln74_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1158 '%mul_ln74_56 = mul i64 %zext_ln74_35, i64 %zext_ln53_5'
ST_3 : Operation 1158 [1/1] (2.09ns)   --->   "%mul_ln74_56 = mul i64 %zext_ln74_35, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 1158 'mul' 'mul_ln74_56' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1159 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_47)   --->   "%select_ln74_30 = select i1 %icmp_ln74_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1159 'select' 'select_ln74_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1160 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_47 = and i64 %mul_ln74_56, i64 %select_ln74_30" [d4.cpp:74]   --->   Operation 1160 'and' 'and_ln74_47' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1161 [1/1] (0.00ns)   --->   "%zext_ln75_18 = zext i1 %icmp_ln74_5" [d4.cpp:75]   --->   Operation 1161 'zext' 'zext_ln75_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1162 [1/1] (0.79ns)   --->   "%sub_ln78_5 = sub i4 %sub_ln78_4, i4 %zext_ln75_18" [d4.cpp:78]   --->   Operation 1162 'sub' 'sub_ln78_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1163 [1/1] (0.48ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 1163 'mux' 'tmp_78' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1164 [1/1] (0.00ns)   --->   "%zext_ln74_36 = zext i32 %tmp_78" [d4.cpp:74]   --->   Operation 1164 'zext' 'zext_ln74_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1165 '%mul_ln74_57 = mul i64 %zext_ln74_36, i64 %zext_ln53_5'
ST_3 : Operation 1165 [1/1] (2.09ns)   --->   "%mul_ln74_57 = mul i64 %zext_ln74_36, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 1165 'mul' 'mul_ln74_57' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1166 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 1166 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1167 [1/1] (0.00ns)   --->   "%zext_ln74_37 = zext i32 %tmp_80" [d4.cpp:74]   --->   Operation 1167 'zext' 'zext_ln74_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1168 '%mul_ln74_58 = mul i64 %zext_ln74_37, i64 %zext_ln53_5'
ST_3 : Operation 1168 [1/1] (2.09ns)   --->   "%mul_ln74_58 = mul i64 %zext_ln74_37, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 1168 'mul' 'mul_ln74_58' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1169 [1/1] (0.48ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 1169 'mux' 'tmp_82' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1170 [1/1] (0.00ns)   --->   "%zext_ln74_38 = zext i32 %tmp_82" [d4.cpp:74]   --->   Operation 1170 'zext' 'zext_ln74_38' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1171 '%mul_ln74_59 = mul i64 %zext_ln74_38, i64 %zext_ln53_5'
ST_3 : Operation 1171 [1/1] (2.09ns)   --->   "%mul_ln74_59 = mul i64 %zext_ln74_38, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 1171 'mul' 'mul_ln74_59' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1172 [1/1] (0.48ns)   --->   "%tmp_99 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln86_1" [d4.cpp:74]   --->   Operation 1172 'mux' 'tmp_99' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1173 [1/1] (0.00ns)   --->   "%zext_ln74_45 = zext i32 %tmp_99" [d4.cpp:74]   --->   Operation 1173 'zext' 'zext_ln74_45' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1174 '%mul_ln74_71 = mul i64 %zext_ln74_45, i64 %zext_ln53_7'
ST_3 : Operation 1174 [1/1] (2.09ns)   --->   "%mul_ln74_71 = mul i64 %zext_ln74_45, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 1174 'mul' 'mul_ln74_71' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1175 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_59)   --->   "%select_ln74_35 = select i1 %icmp_ln74_6, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1175 'select' 'select_ln74_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1176 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_59 = and i64 %mul_ln74_71, i64 %select_ln74_35" [d4.cpp:74]   --->   Operation 1176 'and' 'and_ln74_59' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1177 [1/1] (0.48ns)   --->   "%tmp_100 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_11" [d4.cpp:74]   --->   Operation 1177 'mux' 'tmp_100' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1178 [1/1] (0.00ns)   --->   "%zext_ln74_46 = zext i32 %tmp_100" [d4.cpp:74]   --->   Operation 1178 'zext' 'zext_ln74_46' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1179 '%mul_ln74_72 = mul i64 %zext_ln74_46, i64 %zext_ln53_7'
ST_3 : Operation 1179 [1/1] (2.09ns)   --->   "%mul_ln74_72 = mul i64 %zext_ln74_46, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 1179 'mul' 'mul_ln74_72' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1180 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_60)   --->   "%select_ln74_36 = select i1 %icmp_ln74_7, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1180 'select' 'select_ln74_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1181 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_60 = and i64 %mul_ln74_72, i64 %select_ln74_36" [d4.cpp:74]   --->   Operation 1181 'and' 'and_ln74_60' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1182 [1/1] (0.48ns)   --->   "%tmp_101 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_6" [d4.cpp:74]   --->   Operation 1182 'mux' 'tmp_101' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1183 [1/1] (0.00ns)   --->   "%zext_ln74_47 = zext i32 %tmp_101" [d4.cpp:74]   --->   Operation 1183 'zext' 'zext_ln74_47' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1184 '%mul_ln74_73 = mul i64 %zext_ln74_47, i64 %zext_ln53_7'
ST_3 : Operation 1184 [1/1] (2.09ns)   --->   "%mul_ln74_73 = mul i64 %zext_ln74_47, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 1184 'mul' 'mul_ln74_73' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1185 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_61)   --->   "%select_ln74_37 = select i1 %icmp_ln74_8, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1185 'select' 'select_ln74_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1186 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_61 = and i64 %mul_ln74_73, i64 %select_ln74_37" [d4.cpp:74]   --->   Operation 1186 'and' 'and_ln74_61' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1187 [1/1] (0.00ns)   --->   "%zext_ln75_25 = zext i1 %icmp_ln74_8" [d4.cpp:75]   --->   Operation 1187 'zext' 'zext_ln75_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1188 [1/1] (0.79ns)   --->   "%sub_ln78_7 = sub i4 %sub_ln78_6, i4 %zext_ln75_25" [d4.cpp:78]   --->   Operation 1188 'sub' 'sub_ln78_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1189 [1/1] (0.48ns)   --->   "%tmp_102 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_7" [d4.cpp:74]   --->   Operation 1189 'mux' 'tmp_102' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1190 [1/1] (0.00ns)   --->   "%zext_ln74_48 = zext i32 %tmp_102" [d4.cpp:74]   --->   Operation 1190 'zext' 'zext_ln74_48' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1191 '%mul_ln74_74 = mul i64 %zext_ln74_48, i64 %zext_ln53_7'
ST_3 : Operation 1191 [1/1] (2.09ns)   --->   "%mul_ln74_74 = mul i64 %zext_ln74_48, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 1191 'mul' 'mul_ln74_74' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1192 [1/1] (0.48ns)   --->   "%tmp_104 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_7" [d4.cpp:74]   --->   Operation 1192 'mux' 'tmp_104' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1193 [1/1] (0.00ns)   --->   "%zext_ln74_49 = zext i32 %tmp_104" [d4.cpp:74]   --->   Operation 1193 'zext' 'zext_ln74_49' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1194 '%mul_ln74_75 = mul i64 %zext_ln74_49, i64 %zext_ln53_7'
ST_3 : Operation 1194 [1/1] (2.09ns)   --->   "%mul_ln74_75 = mul i64 %zext_ln74_49, i64 %zext_ln53_7" [d4.cpp:74]   --->   Operation 1194 'mul' 'mul_ln74_75' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1195 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53_15 = add i64 %add_ln53_14, i64 %add_ln53_12" [d4.cpp:53]   --->   Operation 1195 'add' 'add_ln53_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1196 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_16 = add i64 %arr_load, i64 %add_ln53_15" [d4.cpp:53]   --->   Operation 1196 'add' 'arr_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1197 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_9 = add i64 %add_ln83_8, i64 %add_ln83_3" [d4.cpp:83]   --->   Operation 1197 'add' 'add_ln83_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1198 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_17 = add i64 %arr_15_load, i64 %add_ln83_9" [d4.cpp:83]   --->   Operation 1198 'add' 'arr_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1199 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_12 = add i64 %add_ln83_11, i64 %and_ln74_2" [d4.cpp:83]   --->   Operation 1199 'add' 'add_ln83_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1200 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_16 = add i64 %add_ln83_15, i64 %add_ln83_12" [d4.cpp:83]   --->   Operation 1200 'add' 'add_ln83_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_18 = add i64 %add_ln83_17, i64 %and_ln86_13" [d4.cpp:83]   --->   Operation 1201 'add' 'add_ln83_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1202 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_22 = add i64 %add_ln83_21, i64 %add_ln83_18" [d4.cpp:83]   --->   Operation 1202 'add' 'add_ln83_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1203 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_23 = add i64 %add_ln83_22, i64 %add_ln83_16" [d4.cpp:83]   --->   Operation 1203 'add' 'add_ln83_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1204 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_18 = add i64 %arr_14_load, i64 %add_ln83_23" [d4.cpp:83]   --->   Operation 1204 'add' 'arr_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1205 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_27 = add i64 %add_ln83_26, i64 %add_ln83_25" [d4.cpp:83]   --->   Operation 1205 'add' 'add_ln83_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1206 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_31 = add i64 %add_ln83_30, i64 %add_ln83_27" [d4.cpp:83]   --->   Operation 1206 'add' 'add_ln83_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1207 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_34 = add i64 %add_ln83_33, i64 %add_ln83_32" [d4.cpp:83]   --->   Operation 1207 'add' 'add_ln83_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1208 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_38 = add i64 %add_ln83_37, i64 %add_ln83_34" [d4.cpp:83]   --->   Operation 1208 'add' 'add_ln83_38' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_39 = add i64 %add_ln83_38, i64 %add_ln83_31" [d4.cpp:83]   --->   Operation 1209 'add' 'add_ln83_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1210 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_19 = add i64 %arr_13_load, i64 %add_ln83_39" [d4.cpp:83]   --->   Operation 1210 'add' 'arr_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_43 = add i64 %add_ln83_42, i64 %add_ln83_41" [d4.cpp:83]   --->   Operation 1211 'add' 'add_ln83_43' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1212 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_48 = add i64 %add_ln83_47, i64 %add_ln83_43" [d4.cpp:83]   --->   Operation 1212 'add' 'add_ln83_48' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1213 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_51 = add i64 %add_ln83_50, i64 %add_ln83_49" [d4.cpp:83]   --->   Operation 1213 'add' 'add_ln83_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1214 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_56 = add i64 %add_ln83_55, i64 %add_ln83_51" [d4.cpp:83]   --->   Operation 1214 'add' 'add_ln83_56' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_57 = add i64 %add_ln83_56, i64 %add_ln83_48" [d4.cpp:83]   --->   Operation 1215 'add' 'add_ln83_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1216 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_20 = add i64 %arr_12_load, i64 %add_ln83_57" [d4.cpp:83]   --->   Operation 1216 'add' 'arr_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1217 [1/1] (0.48ns)   --->   "%tmp_120 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln86_2" [d4.cpp:74]   --->   Operation 1217 'mux' 'tmp_120' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1218 [1/1] (0.00ns)   --->   "%zext_ln74_55 = zext i32 %tmp_120" [d4.cpp:74]   --->   Operation 1218 'zext' 'zext_ln74_55' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1219 '%mul_ln74_85 = mul i64 %zext_ln74_55, i64 %zext_ln53_9'
ST_3 : Operation 1219 [1/1] (2.09ns)   --->   "%mul_ln74_85 = mul i64 %zext_ln74_55, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1219 'mul' 'mul_ln74_85' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1220 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_71)   --->   "%select_ln74_41 = select i1 %icmp_ln74_9, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1220 'select' 'select_ln74_41' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1221 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_71 = and i64 %mul_ln74_85, i64 %select_ln74_41" [d4.cpp:74]   --->   Operation 1221 'and' 'and_ln74_71' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1222 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_15 = add i64 %mul_ln74_17, i64 %and_ln74_32" [d4.cpp:74]   --->   Operation 1222 'add' 'add_ln74_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1223 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_16 = add i64 %and_ln74_59, i64 %and_ln74_71" [d4.cpp:74]   --->   Operation 1223 'add' 'add_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1224 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_17 = add i64 %add_ln74_16, i64 %and_ln74_46" [d4.cpp:74]   --->   Operation 1224 'add' 'add_ln74_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1225 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_18 = add i64 %add_ln74_17, i64 %add_ln74_15" [d4.cpp:74]   --->   Operation 1225 'add' 'add_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1226 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_24 = add i64 %arr_5_load, i64 %add_ln74_18" [d4.cpp:74]   --->   Operation 1226 'add' 'arr_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1227 [1/1] (0.48ns)   --->   "%tmp_121 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_25" [d4.cpp:74]   --->   Operation 1227 'mux' 'tmp_121' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1228 [1/1] (0.00ns)   --->   "%zext_ln74_56 = zext i32 %tmp_121" [d4.cpp:74]   --->   Operation 1228 'zext' 'zext_ln74_56' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1229 '%mul_ln74_86 = mul i64 %zext_ln74_56, i64 %zext_ln53_9'
ST_3 : Operation 1229 [1/1] (2.09ns)   --->   "%mul_ln74_86 = mul i64 %zext_ln74_56, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1229 'mul' 'mul_ln74_86' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1230 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_72)   --->   "%select_ln74_42 = select i1 %icmp_ln74_10, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1230 'select' 'select_ln74_42' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1231 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_72 = and i64 %mul_ln74_86, i64 %select_ln74_42" [d4.cpp:74]   --->   Operation 1231 'and' 'and_ln74_72' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1232 [1/1] (1.08ns)   --->   "%add_ln74_20 = add i64 %mul_ln74_18, i64 %mul_ln74_38" [d4.cpp:74]   --->   Operation 1232 'add' 'add_ln74_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1233 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_21 = add i64 %and_ln74_60, i64 %and_ln74_72" [d4.cpp:74]   --->   Operation 1233 'add' 'add_ln74_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1234 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_22 = add i64 %add_ln74_21, i64 %and_ln74_47" [d4.cpp:74]   --->   Operation 1234 'add' 'add_ln74_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1235 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_23 = add i64 %add_ln74_22, i64 %add_ln74_20" [d4.cpp:74]   --->   Operation 1235 'add' 'add_ln74_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1236 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_25 = add i64 %arr_4_load, i64 %add_ln74_23" [d4.cpp:74]   --->   Operation 1236 'add' 'arr_25' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1237 [1/1] (0.48ns)   --->   "%tmp_122 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_14" [d4.cpp:74]   --->   Operation 1237 'mux' 'tmp_122' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1238 [1/1] (0.00ns)   --->   "%zext_ln74_57 = zext i32 %tmp_122" [d4.cpp:74]   --->   Operation 1238 'zext' 'zext_ln74_57' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1239 '%mul_ln74_87 = mul i64 %zext_ln74_57, i64 %zext_ln53_9'
ST_3 : Operation 1239 [1/1] (2.09ns)   --->   "%mul_ln74_87 = mul i64 %zext_ln74_57, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1239 'mul' 'mul_ln74_87' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1240 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_73)   --->   "%select_ln74_43 = select i1 %icmp_ln74_11, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1240 'select' 'select_ln74_43' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1241 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_73 = and i64 %mul_ln74_87, i64 %select_ln74_43" [d4.cpp:74]   --->   Operation 1241 'and' 'and_ln74_73' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1242 [1/1] (1.08ns)   --->   "%add_ln74_25 = add i64 %mul_ln74_19, i64 %mul_ln74_39" [d4.cpp:74]   --->   Operation 1242 'add' 'add_ln74_25' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1243 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_26 = add i64 %and_ln74_61, i64 %and_ln74_73" [d4.cpp:74]   --->   Operation 1243 'add' 'add_ln74_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1244 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_27 = add i64 %add_ln74_26, i64 %mul_ln74_57" [d4.cpp:74]   --->   Operation 1244 'add' 'add_ln74_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1245 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_28 = add i64 %add_ln74_27, i64 %add_ln74_25" [d4.cpp:74]   --->   Operation 1245 'add' 'add_ln74_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1246 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_26 = add i64 %arr_3_load, i64 %add_ln74_28" [d4.cpp:74]   --->   Operation 1246 'add' 'arr_26' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1247 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_3 = add i64 %add_ln86_2, i64 %add_ln86" [d4.cpp:86]   --->   Operation 1247 'add' 'add_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1248 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_8 = add i64 %add_ln86_7, i64 %add_ln86_3" [d4.cpp:86]   --->   Operation 1248 'add' 'add_ln86_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1249 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_18 = add i64 %add_ln86_17, i64 %add_ln86_8" [d4.cpp:86]   --->   Operation 1249 'add' 'add_ln86_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1250 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_27 = add i64 %arr_11_load, i64 %add_ln86_18" [d4.cpp:86]   --->   Operation 1250 'add' 'arr_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1251 [1/1] (0.48ns)   --->   "%tmp_123 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_8" [d4.cpp:74]   --->   Operation 1251 'mux' 'tmp_123' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1252 [1/1] (0.00ns)   --->   "%zext_ln74_58 = zext i32 %tmp_123" [d4.cpp:74]   --->   Operation 1252 'zext' 'zext_ln74_58' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1253 '%mul_ln74_88 = mul i64 %zext_ln74_58, i64 %zext_ln53_9'
ST_3 : Operation 1253 [1/1] (2.09ns)   --->   "%mul_ln74_88 = mul i64 %zext_ln74_58, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1253 'mul' 'mul_ln74_88' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1254 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_74)   --->   "%select_ln74_44 = select i1 %icmp_ln74_12, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 1254 'select' 'select_ln74_44' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1255 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_74 = and i64 %mul_ln74_88, i64 %select_ln74_44" [d4.cpp:74]   --->   Operation 1255 'and' 'and_ln74_74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1256 [1/1] (1.08ns)   --->   "%add_ln74_30 = add i64 %mul_ln74_20, i64 %mul_ln74_40" [d4.cpp:74]   --->   Operation 1256 'add' 'add_ln74_30' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1257 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_31 = add i64 %mul_ln74_74, i64 %and_ln74_74" [d4.cpp:74]   --->   Operation 1257 'add' 'add_ln74_31' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1258 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_32 = add i64 %add_ln74_31, i64 %mul_ln74_58" [d4.cpp:74]   --->   Operation 1258 'add' 'add_ln74_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1259 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_33 = add i64 %add_ln74_32, i64 %add_ln74_30" [d4.cpp:74]   --->   Operation 1259 'add' 'add_ln74_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1260 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_28 = add i64 %add_ln74_33, i64 %arr_2_load" [d4.cpp:74]   --->   Operation 1260 'add' 'arr_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1261 [1/1] (0.00ns)   --->   "%zext_ln75_32 = zext i1 %icmp_ln74_12" [d4.cpp:75]   --->   Operation 1261 'zext' 'zext_ln75_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1262 [1/1] (0.79ns)   --->   "%sub_ln78_9 = sub i4 %sub_ln78_8, i4 %zext_ln75_32" [d4.cpp:78]   --->   Operation 1262 'sub' 'sub_ln78_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_23 = add i64 %add_ln86_22, i64 %add_ln86_20" [d4.cpp:86]   --->   Operation 1263 'add' 'add_ln86_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1264 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_28 = add i64 %add_ln86_27, i64 %add_ln86_23" [d4.cpp:86]   --->   Operation 1264 'add' 'add_ln86_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1265 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_38 = add i64 %add_ln86_37, i64 %add_ln86_28" [d4.cpp:86]   --->   Operation 1265 'add' 'add_ln86_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1266 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_29 = add i64 %arr_10_load, i64 %add_ln86_38" [d4.cpp:86]   --->   Operation 1266 'add' 'arr_29' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1267 [1/1] (0.48ns)   --->   "%tmp_124 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_9" [d4.cpp:74]   --->   Operation 1267 'mux' 'tmp_124' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1268 [1/1] (0.00ns)   --->   "%zext_ln74_59 = zext i32 %tmp_124" [d4.cpp:74]   --->   Operation 1268 'zext' 'zext_ln74_59' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1269 '%mul_ln74_89 = mul i64 %zext_ln74_59, i64 %zext_ln53_9'
ST_3 : Operation 1269 [1/1] (2.09ns)   --->   "%mul_ln74_89 = mul i64 %zext_ln74_59, i64 %zext_ln53_9" [d4.cpp:74]   --->   Operation 1269 'mul' 'mul_ln74_89' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1270 [1/1] (1.08ns)   --->   "%add_ln74_35 = add i64 %mul_ln74_21, i64 %mul_ln74_41" [d4.cpp:74]   --->   Operation 1270 'add' 'add_ln74_35' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1271 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_36 = add i64 %mul_ln74_75, i64 %mul_ln74_89" [d4.cpp:74]   --->   Operation 1271 'add' 'add_ln74_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1272 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_37 = add i64 %add_ln74_36, i64 %mul_ln74_59" [d4.cpp:74]   --->   Operation 1272 'add' 'add_ln74_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_38 = add i64 %add_ln74_37, i64 %add_ln74_35" [d4.cpp:74]   --->   Operation 1273 'add' 'add_ln74_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1274 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_30 = add i64 %add_ln74_38, i64 %arr_1_load" [d4.cpp:74]   --->   Operation 1274 'add' 'arr_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1275 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_41 = add i64 %add_ln86_40, i64 %and_ln74_12" [d4.cpp:86]   --->   Operation 1275 'add' 'add_ln86_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1276 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_45 = add i64 %add_ln86_44, i64 %add_ln86_41" [d4.cpp:86]   --->   Operation 1276 'add' 'add_ln86_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1277 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_53 = add i64 %add_ln86_52, i64 %add_ln86_45" [d4.cpp:86]   --->   Operation 1277 'add' 'add_ln86_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1278 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_31 = add i64 %arr_9_load, i64 %add_ln86_53" [d4.cpp:86]   --->   Operation 1278 'add' 'arr_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1279 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_17, i64 %arr_15" [d4.cpp:42]   --->   Operation 1279 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1280 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_18, i64 %arr_14" [d4.cpp:42]   --->   Operation 1280 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1281 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_19, i64 %arr_13" [d4.cpp:42]   --->   Operation 1281 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1282 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_20, i64 %arr_12" [d4.cpp:42]   --->   Operation 1282 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1283 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_27, i64 %arr_11" [d4.cpp:42]   --->   Operation 1283 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1284 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_29, i64 %arr_10" [d4.cpp:42]   --->   Operation 1284 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1285 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_31, i64 %arr_9" [d4.cpp:42]   --->   Operation 1285 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1286 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_24, i64 %arr_5" [d4.cpp:42]   --->   Operation 1286 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1287 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_25, i64 %arr_4" [d4.cpp:42]   --->   Operation 1287 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1288 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_26, i64 %arr_3" [d4.cpp:42]   --->   Operation 1288 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1289 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_28, i64 %arr_2" [d4.cpp:42]   --->   Operation 1289 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1290 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_30, i64 %arr_1" [d4.cpp:42]   --->   Operation 1290 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1291 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_16, i64 %arr" [d4.cpp:42]   --->   Operation 1291 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1292 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body55" [d4.cpp:42]   --->   Operation 1292 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.940ns
The critical path consists of the following:
	'alloca' operation ('i') [52]  (0.000 ns)
	'load' operation ('i', d4.cpp:53) on local variable 'i' [124]  (0.000 ns)
	'add' operation ('add_ln53_8', d4.cpp:53) [991]  (0.797 ns)
	'icmp' operation ('cmp64_4', d4.cpp:53) [998]  (0.789 ns)
	'and' operation ('and_ln86_42', d4.cpp:86) [1220]  (0.287 ns)
	'select' operation ('select_ln86_4', d4.cpp:86) [1258]  (0.449 ns)
	multiplexor before operation 'mul' with delay (1.327 ns)
'mul' operation ('mul_ln86_22', d4.cpp:86) [1261]  (2.093 ns)
	'and' operation ('and_ln86_45', d4.cpp:86) [1263]  (0.379 ns)
	'add' operation ('add_ln86_34', d4.cpp:86) [1278]  (0.000 ns)
	'add' operation ('add_ln86_35', d4.cpp:86) [1279]  (0.819 ns)

 <State 2>: 7.282ns
The critical path consists of the following:
	'sub' operation ('sub_ln58_6', d4.cpp:58) [588]  (0.673 ns)
	'sub' operation ('sub_ln58_7', d4.cpp:58) [600]  (0.797 ns)
	'mux' operation ('tmp_59', d4.cpp:86) [606]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.327 ns)
'mul' operation ('mul_ln86_11', d4.cpp:86) [609]  (2.093 ns)
	'and' operation ('and_ln86_23', d4.cpp:86) [611]  (0.000 ns)
	'add' operation ('add_ln86_43', d4.cpp:86) [1306]  (1.085 ns)
	'add' operation ('add_ln86_44', d4.cpp:86) [1307]  (0.819 ns)

 <State 3>: 7.037ns
The critical path consists of the following:
	'sub' operation ('sub_ln78_3', d4.cpp:78) [553]  (0.797 ns)
	'mux' operation ('tmp_52', d4.cpp:74) [564]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.327 ns)
'mul' operation ('mul_ln74_38', d4.cpp:74) [566]  (2.093 ns)
	'add' operation ('add_ln74_20', d4.cpp:74) [1201]  (1.085 ns)
	'add' operation ('add_ln74_23', d4.cpp:74) [1204]  (0.000 ns)
	'add' operation ('arr', d4.cpp:74) [1205]  (0.819 ns)
	'store' operation ('store_ln42', d4.cpp:42) of variable 'arr', d4.cpp:74 on local variable 'arr' [1330]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
