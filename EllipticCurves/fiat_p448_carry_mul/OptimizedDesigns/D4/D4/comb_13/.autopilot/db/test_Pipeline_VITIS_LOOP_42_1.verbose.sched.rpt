

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_42_1'
================================================================
* Date:           Fri May 10 15:12:00 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D4
* Solution:       comb_13 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.037 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_42_1  |       16|       16|         3|          1|          1|    15|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add94238 = alloca i32 1"   --->   Operation 7 'alloca' 'add94238' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add94_145242 = alloca i32 1"   --->   Operation 8 'alloca' 'add94_145242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add94_2132246 = alloca i32 1"   --->   Operation 9 'alloca' 'add94_2132246' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add94_1250 = alloca i32 1"   --->   Operation 10 'alloca' 'add94_1250' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add94_1_1254 = alloca i32 1"   --->   Operation 11 'alloca' 'add94_1_1254' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add94_1_2258 = alloca i32 1"   --->   Operation 12 'alloca' 'add94_1_2258' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add94_2262 = alloca i32 1"   --->   Operation 13 'alloca' 'add94_2262' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_32 = alloca i32 1"   --->   Operation 14 'alloca' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_33 = alloca i32 1"   --->   Operation 15 'alloca' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_34 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_35 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_36 = alloca i32 1"   --->   Operation 18 'alloca' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 19 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 20 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 21 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 22 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 23 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 24 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 25 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%conv101_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv101"   --->   Operation 26 'read' 'conv101_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 27 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 28 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 29 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 30 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 31 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 32 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 33 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 34 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 35 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 36 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 37 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 38 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 39 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 40 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 41 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 42 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 43 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 44 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 45 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 46 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 47 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 48 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 49 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 50 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 51 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 52 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 53 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 54 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 55 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 56 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 57 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv101_cast = zext i32 %conv101_read"   --->   Operation 58 'zext' 'conv101_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 59 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %k1"   --->   Operation 60 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_39"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_38"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_37"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_36"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_35"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_34"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_33"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_32"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_2262"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_1_2258"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_1_1254"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_1250"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_2132246"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_145242"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94238"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body55"   --->   Operation 78 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.66>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%k_s = load i4 %k" [d4.cpp:53]   --->   Operation 79 'load' 'k_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.79ns)   --->   "%icmp_ln42 = icmp_eq  i4 %k_s, i4 15" [d4.cpp:42]   --->   Operation 80 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.79ns)   --->   "%add_ln53 = add i4 %k_s, i4 1" [d4.cpp:53]   --->   Operation 81 'add' 'add_ln53' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body55.split, void %for.end225.exitStub" [d4.cpp:42]   --->   Operation 82 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%p_load69 = load i64 %empty" [d4.cpp:53]   --->   Operation 83 'load' 'p_load69' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%add94238_load = load i64 %add94238" [d4.cpp:83]   --->   Operation 84 'load' 'add94238_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%k1_load = load i5 %k1" [d4.cpp:42]   --->   Operation 85 'load' 'k1_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%i_load = load i4 %i" [d4.cpp:53]   --->   Operation 86 'load' 'i_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i4 %i_load" [d4.cpp:42]   --->   Operation 87 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i5 %k1_load" [d4.cpp:42]   --->   Operation 88 'trunc' 'trunc_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.48ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_load" [d4.cpp:53]   --->   Operation 89 'mux' 'tmp' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i32 %tmp" [d4.cpp:53]   --->   Operation 90 'zext' 'zext_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.78ns)   --->   "%add_ln53_1 = add i5 %k1_load, i5 1" [d4.cpp:53]   --->   Operation 91 'add' 'add_ln53_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 92 'mux' 'tmp_1' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i32 %tmp_1" [d4.cpp:53]   --->   Operation 93 'zext' 'zext_ln53_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.54ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %k_s" [d4.cpp:53]   --->   Operation 94 'mux' 'tmp_2' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i32 %tmp_2" [d4.cpp:53]   --->   Operation 95 'zext' 'zext_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (1.01ns)   --->   "%add_ln53_2 = add i33 %zext_ln53_2, i33 %zext_ln53_1" [d4.cpp:53]   --->   Operation 96 'add' 'add_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i33 %add_ln53_2" [d4.cpp:53]   --->   Operation 97 'zext' 'zext_ln53_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (3.41ns)   --->   "%mul_ln53 = mul i64 %zext_ln53_3, i64 %zext_ln53" [d4.cpp:53]   --->   Operation 98 'mul' 'mul_ln53' <Predicate = (!icmp_ln42)> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_3)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_load, i32 3" [d4.cpp:53]   --->   Operation 99 'bitselect' 'tmp_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_3)   --->   "%select_ln53 = select i1 %tmp_5, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 100 'select' 'select_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_3)   --->   "%and_ln53 = and i64 %mul_ln53, i64 %select_ln53" [d4.cpp:53]   --->   Operation 101 'and' 'and_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln53_3 = add i64 %and_ln53, i64 %p_load69" [d4.cpp:53]   --->   Operation 102 'add' 'add_ln53_3' <Predicate = (!icmp_ln42)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.79ns)   --->   "%empty_40 = add i5 %zext_ln42, i5 1" [d4.cpp:42]   --->   Operation 103 'add' 'empty_40' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.79ns)   --->   "%cmp86 = icmp_ugt  i4 %i_load, i4 6" [d4.cpp:53]   --->   Operation 104 'icmp' 'cmp86' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.79ns)   --->   "%cmp64 = icmp_ugt  i4 %i_load, i4 8" [d4.cpp:53]   --->   Operation 105 'icmp' 'cmp64' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.79ns)   --->   "%empty_41 = add i5 %zext_ln42, i5 25" [d4.cpp:42]   --->   Operation 106 'add' 'empty_41' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.79ns)   --->   "%cmp156 = icmp_ne  i4 %i_load, i4 15" [d4.cpp:53]   --->   Operation 107 'icmp' 'cmp156' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_34 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_40, i32 4" [d4.cpp:63]   --->   Operation 108 'bitselect' 'tmp_34' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.54ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 109 'mux' 'tmp_3' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i32 %tmp_3" [d4.cpp:72]   --->   Operation 110 'zext' 'zext_ln72' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 111 '%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53'
ST_2 : Operation 111 [1/1] (2.10ns)   --->   "%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 111 'mul' 'mul_ln74' <Predicate = (!icmp_ln42)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.17ns)   --->   "%select_ln74_1 = select i1 %cmp86, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 112 'select' 'select_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_1)   --->   "%and_ln74 = and i64 %mul_ln74, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 113 'and' 'and_ln74' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 114 '%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast'
ST_2 : Operation 114 [1/1] (2.10ns)   --->   "%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 114 'mul' 'mul_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%tmp_35 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_40, i32 4" [d4.cpp:74]   --->   Operation 115 'bitselect' 'tmp_35' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%select_ln74_2 = select i1 %tmp_35, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 116 'select' 'select_ln74_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_1 = and i64 %mul_ln74_1, i64 %select_ln74_2" [d4.cpp:74]   --->   Operation 117 'and' 'and_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node k3)   --->   "%select_ln83 = select i1 %tmp_34, i3 6, i3 7" [d4.cpp:83]   --->   Operation 118 'select' 'select_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.35ns)   --->   "%xor_ln83 = xor i4 %i_load, i4 15" [d4.cpp:83]   --->   Operation 119 'xor' 'xor_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.54ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 120 'mux' 'tmp_6' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i32 %tmp_6" [d4.cpp:83]   --->   Operation 121 'zext' 'zext_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.28ns)   --->   "%and_ln83 = and i1 %cmp156, i1 %cmp64" [d4.cpp:83]   --->   Operation 122 'and' 'and_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 123 '%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53'
ST_2 : Operation 123 [1/1] (2.10ns)   --->   "%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 123 'mul' 'mul_ln83' <Predicate = (!icmp_ln42)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_1)   --->   "%select_ln83_1 = select i1 %and_ln83, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 124 'select' 'select_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_1)   --->   "%and_ln83_1 = and i64 %mul_ln83, i64 %select_ln83_1" [d4.cpp:83]   --->   Operation 125 'and' 'and_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_1 = add i64 %and_ln74, i64 %and_ln83_1" [d4.cpp:83]   --->   Operation 126 'add' 'add_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_2 = add i64 %add_ln83_1, i64 %and_ln74_1" [d4.cpp:83]   --->   Operation 127 'add' 'add_ln83_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 128 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83 = add i64 %add94238_load, i64 %add_ln83_2" [d4.cpp:83]   --->   Operation 128 'add' 'add_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 129 [1/1] (0.78ns)   --->   "%icmp_ln63 = icmp_ugt  i5 %empty_40, i5 14" [d4.cpp:63]   --->   Operation 129 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node k3)   --->   "%zext_ln78 = zext i1 %icmp_ln63" [d4.cpp:78]   --->   Operation 130 'zext' 'zext_ln78' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.54ns) (out node of the LUT)   --->   "%k3 = sub i3 %select_ln83, i3 %zext_ln78" [d4.cpp:78]   --->   Operation 131 'sub' 'k3' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.78ns)   --->   "%icmp_ln63_1 = icmp_ugt  i5 %empty_40, i5 13" [d4.cpp:63]   --->   Operation 132 'icmp' 'icmp_ln63_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i1 %icmp_ln63_1" [d4.cpp:75]   --->   Operation 133 'zext' 'zext_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.67ns)   --->   "%k3_1 = sub i3 %k3, i3 %zext_ln75" [d4.cpp:75]   --->   Operation 134 'sub' 'k3_1' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%sext_ln83_1 = sext i3 %k3_1" [d4.cpp:83]   --->   Operation 135 'sext' 'sext_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.78ns)   --->   "%icmp_ln63_2 = icmp_ugt  i5 %empty_40, i5 12" [d4.cpp:63]   --->   Operation 136 'icmp' 'icmp_ln63_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i1 %icmp_ln63_2" [d4.cpp:75]   --->   Operation 137 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.67ns)   --->   "%sub_ln78_10 = sub i4 %sext_ln83_1, i4 %zext_ln75_1" [d4.cpp:78]   --->   Operation 138 'sub' 'sub_ln78_10' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln63_3 = icmp_ugt  i5 %empty_40, i5 11" [d4.cpp:63]   --->   Operation 139 'icmp' 'icmp_ln63_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln75_2 = zext i1 %icmp_ln63_3" [d4.cpp:75]   --->   Operation 140 'zext' 'zext_ln75_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.79ns)   --->   "%sub_ln78_6 = sub i4 %sub_ln78_10, i4 %zext_ln75_2" [d4.cpp:78]   --->   Operation 141 'sub' 'sub_ln78_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.78ns)   --->   "%icmp_ln63_4 = icmp_ugt  i5 %empty_40, i5 10" [d4.cpp:63]   --->   Operation 142 'icmp' 'icmp_ln63_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln75_3 = zext i1 %icmp_ln63_4" [d4.cpp:75]   --->   Operation 143 'zext' 'zext_ln75_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 144 [1/1] (0.79ns)   --->   "%sub_ln78_7 = sub i4 %sub_ln78_6, i4 %zext_ln75_3" [d4.cpp:78]   --->   Operation 144 'sub' 'sub_ln78_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.78ns)   --->   "%icmp_ln63_5 = icmp_ugt  i5 %empty_40, i5 9" [d4.cpp:63]   --->   Operation 145 'icmp' 'icmp_ln63_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln75_4 = zext i1 %icmp_ln63_5" [d4.cpp:75]   --->   Operation 146 'zext' 'zext_ln75_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.79ns)   --->   "%sub_ln78_8 = sub i4 %sub_ln78_7, i4 %zext_ln75_4" [d4.cpp:78]   --->   Operation 147 'sub' 'sub_ln78_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.78ns)   --->   "%icmp_ln74 = icmp_ugt  i5 %empty_40, i5 8" [d4.cpp:74]   --->   Operation 148 'icmp' 'icmp_ln74' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln75_5 = zext i1 %icmp_ln74" [d4.cpp:75]   --->   Operation 149 'zext' 'zext_ln75_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 150 [1/1] (0.79ns)   --->   "%sub_ln58_3 = sub i4 %sub_ln78_8, i4 %zext_ln75_5" [d4.cpp:58]   --->   Operation 150 'sub' 'sub_ln58_3' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_36 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_40, i32 3, i32 4" [d4.cpp:74]   --->   Operation 151 'partselect' 'tmp_36' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 152 [1/1] (0.54ns)   --->   "%icmp_ln74_1 = icmp_ne  i2 %tmp_36, i2 0" [d4.cpp:74]   --->   Operation 152 'icmp' 'icmp_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (0.78ns)   --->   "%icmp_ln67 = icmp_sgt  i5 %empty_41, i5 6" [d4.cpp:67]   --->   Operation 153 'icmp' 'icmp_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.78ns)   --->   "%icmp_ln74_2 = icmp_ugt  i5 %empty_40, i5 6" [d4.cpp:74]   --->   Operation 154 'icmp' 'icmp_ln74_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 155 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i4 %i_load" [d4.cpp:86]   --->   Operation 155 'mux' 'tmp_24' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.28ns)   --->   "%and_ln86 = and i1 %icmp_ln67, i1 %and_ln83" [d4.cpp:86]   --->   Operation 156 'and' 'and_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_4)   --->   "%select_ln67 = select i1 %and_ln86, i3 6, i3 7" [d4.cpp:67]   --->   Operation 157 'select' 'select_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.78ns)   --->   "%icmp_ln67_1 = icmp_sgt  i5 %empty_41, i5 5" [d4.cpp:67]   --->   Operation 158 'icmp' 'icmp_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.78ns)   --->   "%icmp_ln74_3 = icmp_ugt  i5 %empty_40, i5 5" [d4.cpp:74]   --->   Operation 159 'icmp' 'icmp_ln74_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.28ns)   --->   "%and_ln86_2 = and i1 %icmp_ln67_1, i1 %and_ln83" [d4.cpp:86]   --->   Operation 160 'and' 'and_ln86_2' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_4)   --->   "%zext_ln58 = zext i1 %and_ln86_2" [d4.cpp:58]   --->   Operation 161 'zext' 'zext_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 162 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_4 = sub i3 %select_ln67, i3 %zext_ln58" [d4.cpp:58]   --->   Operation 162 'sub' 'sub_ln58_4' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.78ns)   --->   "%icmp_ln67_2 = icmp_sgt  i5 %empty_41, i5 4" [d4.cpp:67]   --->   Operation 163 'icmp' 'icmp_ln67_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.78ns)   --->   "%icmp_ln74_4 = icmp_ugt  i5 %empty_40, i5 4" [d4.cpp:74]   --->   Operation 164 'icmp' 'icmp_ln74_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 165 [1/1] (0.28ns)   --->   "%and_ln86_4 = and i1 %icmp_ln67_2, i1 %and_ln83" [d4.cpp:86]   --->   Operation 165 'and' 'and_ln86_4' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i1 %and_ln86_4" [d4.cpp:58]   --->   Operation 166 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 167 [1/1] (0.67ns)   --->   "%sub_ln58 = sub i3 %sub_ln58_4, i3 %zext_ln58_1" [d4.cpp:58]   --->   Operation 167 'sub' 'sub_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.00ns)   --->   "%sext_ln67_1 = sext i3 %sub_ln58" [d4.cpp:67]   --->   Operation 168 'sext' 'sext_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 169 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_41, i32 2, i32 4" [d4.cpp:67]   --->   Operation 169 'partselect' 'tmp_37' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 170 [1/1] (0.67ns)   --->   "%icmp_ln67_3 = icmp_sgt  i3 %tmp_37, i3 0" [d4.cpp:67]   --->   Operation 170 'icmp' 'icmp_ln67_3' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_40, i32 2, i32 4" [d4.cpp:74]   --->   Operation 171 'partselect' 'tmp_38' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 172 [1/1] (0.67ns)   --->   "%icmp_ln74_5 = icmp_ne  i3 %tmp_38, i3 0" [d4.cpp:74]   --->   Operation 172 'icmp' 'icmp_ln74_5' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.28ns)   --->   "%and_ln86_6 = and i1 %icmp_ln67_3, i1 %and_ln83" [d4.cpp:86]   --->   Operation 173 'and' 'and_ln86_6' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i1 %and_ln86_6" [d4.cpp:87]   --->   Operation 174 'zext' 'zext_ln87' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 175 [1/1] (0.67ns)   --->   "%sub_ln58_1 = sub i4 %sext_ln67_1, i4 %zext_ln87" [d4.cpp:58]   --->   Operation 175 'sub' 'sub_ln58_1' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (0.78ns)   --->   "%icmp_ln67_4 = icmp_sgt  i5 %empty_41, i5 2" [d4.cpp:67]   --->   Operation 176 'icmp' 'icmp_ln67_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 177 [1/1] (0.78ns)   --->   "%icmp_ln74_6 = icmp_ugt  i5 %empty_40, i5 2" [d4.cpp:74]   --->   Operation 177 'icmp' 'icmp_ln74_6' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.28ns)   --->   "%and_ln86_8 = and i1 %icmp_ln67_4, i1 %and_ln83" [d4.cpp:86]   --->   Operation 178 'and' 'and_ln86_8' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.00ns)   --->   "%tmp_39 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_41, i32 1, i32 4" [d4.cpp:67]   --->   Operation 179 'partselect' 'tmp_39' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 180 [1/1] (0.79ns)   --->   "%icmp_ln67_5 = icmp_sgt  i4 %tmp_39, i4 0" [d4.cpp:67]   --->   Operation 180 'icmp' 'icmp_ln67_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.79ns)   --->   "%add_ln42 = add i4 %i_load, i4 15" [d4.cpp:42]   --->   Operation 181 'add' 'add_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln42, i4 %i" [d4.cpp:42]   --->   Operation 182 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 183 [1/1] (0.42ns)   --->   "%store_ln42 = store i5 %add_ln53_1, i5 %k1" [d4.cpp:42]   --->   Operation 183 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 184 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln53, i4 %k" [d4.cpp:42]   --->   Operation 184 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 185 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln83, i64 %add94238" [d4.cpp:42]   --->   Operation 185 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 186 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln53_3, i64 %empty" [d4.cpp:42]   --->   Operation 186 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.03>
ST_3 : Operation 187 [1/1] (0.00ns)   --->   "%add94_145242_load = load i64 %add94_145242" [d4.cpp:86]   --->   Operation 187 'load' 'add94_145242_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 188 [1/1] (0.00ns)   --->   "%add94_2132246_load = load i64 %add94_2132246" [d4.cpp:86]   --->   Operation 188 'load' 'add94_2132246_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 189 [1/1] (0.00ns)   --->   "%add94_1250_load = load i64 %add94_1250" [d4.cpp:86]   --->   Operation 189 'load' 'add94_1250_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 190 [1/1] (0.00ns)   --->   "%add94_1_1254_load = load i64 %add94_1_1254" [d4.cpp:86]   --->   Operation 190 'load' 'add94_1_1254_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 191 [1/1] (0.00ns)   --->   "%add94_1_2258_load = load i64 %add94_1_2258" [d4.cpp:86]   --->   Operation 191 'load' 'add94_1_2258_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 192 [1/1] (0.00ns)   --->   "%add94_2262_load = load i64 %add94_2262" [d4.cpp:86]   --->   Operation 192 'load' 'add94_2262_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 193 [1/1] (0.00ns)   --->   "%p_load60 = load i64 %empty_32" [d4.cpp:74]   --->   Operation 193 'load' 'p_load60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 194 [1/1] (0.00ns)   --->   "%p_load58 = load i64 %empty_33" [d4.cpp:74]   --->   Operation 194 'load' 'p_load58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 195 [1/1] (0.00ns)   --->   "%p_load56 = load i64 %empty_34" [d4.cpp:74]   --->   Operation 195 'load' 'p_load56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 196 [1/1] (0.00ns)   --->   "%p_load54 = load i64 %empty_35" [d4.cpp:74]   --->   Operation 196 'load' 'p_load54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 197 [1/1] (0.54ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 197 'mux' 'tmp_7' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i32 %tmp_7" [d4.cpp:72]   --->   Operation 198 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 199 [1/1] (0.44ns)   --->   "%select_ln74 = select i1 %tmp_34, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 199 'select' 'select_ln74' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i32 %select_ln74" [d4.cpp:74]   --->   Operation 200 'zext' 'zext_ln74' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 201 '%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53'
ST_3 : Operation 201 [1/1] (2.10ns)   --->   "%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 201 'mul' 'mul_ln74_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%and_ln74_2 = and i64 %mul_ln74_2, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 202 'and' 'and_ln74_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 203 '%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53'
ST_3 : Operation 203 [1/1] (2.10ns)   --->   "%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 203 'mul' 'mul_ln74_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%select_ln74_3 = select i1 %icmp_ln63, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 204 'select' 'select_ln74_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%and_ln74_3 = and i64 %mul_ln74_3, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 205 'and' 'and_ln74_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 206 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i3 %k3" [d4.cpp:83]   --->   Operation 206 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 207 [1/1] (0.79ns)   --->   "%sub_ln83 = sub i4 14, i4 %i_load" [d4.cpp:83]   --->   Operation 207 'sub' 'sub_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 208 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 0, i32 %arg2_r_14_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 208 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i32 %tmp_s" [d4.cpp:83]   --->   Operation 209 'zext' 'zext_ln83_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 210 [1/1] (0.79ns)   --->   "%icmp_ln83 = icmp_ult  i4 %i_load, i4 14" [d4.cpp:83]   --->   Operation 210 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%and_ln83_2 = and i1 %icmp_ln83, i1 %cmp64" [d4.cpp:83]   --->   Operation 211 'and' 'and_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 212 '%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53'
ST_3 : Operation 212 [1/1] (2.10ns)   --->   "%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 212 'mul' 'mul_ln83_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%select_ln83_2 = select i1 %and_ln83_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 213 'select' 'select_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%and_ln83_3 = and i64 %mul_ln83_1, i64 %select_ln83_2" [d4.cpp:83]   --->   Operation 214 'and' 'and_ln83_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 215 [1/1] (0.54ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 215 'mux' 'tmp_4' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i32 %tmp_4" [d4.cpp:72]   --->   Operation 216 'zext' 'zext_ln72_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 217 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83" [d4.cpp:74]   --->   Operation 217 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln74_1 = zext i32 %tmp_8" [d4.cpp:74]   --->   Operation 218 'zext' 'zext_ln74_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 219 '%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53'
ST_3 : Operation 219 [1/1] (2.10ns)   --->   "%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 219 'mul' 'mul_ln74_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_8)   --->   "%and_ln74_4 = and i64 %mul_ln74_4, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 220 'and' 'and_ln74_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 221 '%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53'
ST_3 : Operation 221 [1/1] (2.10ns)   --->   "%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 221 'mul' 'mul_ln74_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_8)   --->   "%select_ln74_4 = select i1 %icmp_ln63_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 222 'select' 'select_ln74_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_8)   --->   "%and_ln74_5 = and i64 %mul_ln74_5, i64 %select_ln74_4" [d4.cpp:74]   --->   Operation 223 'and' 'and_ln74_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 224 [1/1] (0.79ns)   --->   "%sub_ln83_1 = sub i4 13, i4 %i_load" [d4.cpp:83]   --->   Operation 224 'sub' 'sub_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 225 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 225 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 226 [1/1] (0.00ns)   --->   "%zext_ln83_2 = zext i32 %tmp_9" [d4.cpp:83]   --->   Operation 226 'zext' 'zext_ln83_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 227 [1/1] (0.79ns)   --->   "%icmp_ln83_1 = icmp_ult  i4 %i_load, i4 13" [d4.cpp:83]   --->   Operation 227 'icmp' 'icmp_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln83_4 = and i1 %icmp_ln83_1, i1 %and_ln83" [d4.cpp:83]   --->   Operation 228 'and' 'and_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 229 '%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53'
ST_3 : Operation 229 [1/1] (2.10ns)   --->   "%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 229 'mul' 'mul_ln83_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%select_ln83_3 = select i1 %and_ln83_4, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 230 'select' 'select_ln83_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln83_5 = and i64 %mul_ln83_2, i64 %select_ln83_3" [d4.cpp:83]   --->   Operation 231 'and' 'and_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 232 [1/1] (0.54ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 232 'mux' 'tmp_10' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 233 [1/1] (0.00ns)   --->   "%zext_ln72_3 = zext i32 %tmp_10" [d4.cpp:72]   --->   Operation 233 'zext' 'zext_ln72_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 234 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_1" [d4.cpp:74]   --->   Operation 234 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln74_2 = zext i32 %tmp_11" [d4.cpp:74]   --->   Operation 235 'zext' 'zext_ln74_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 236 '%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53'
ST_3 : Operation 236 [1/1] (2.10ns)   --->   "%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 236 'mul' 'mul_ln74_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_11)   --->   "%and_ln74_6 = and i64 %mul_ln74_6, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 237 'and' 'and_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 238 '%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53'
ST_3 : Operation 238 [1/1] (2.10ns)   --->   "%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 238 'mul' 'mul_ln74_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_11)   --->   "%select_ln74_5 = select i1 %icmp_ln63_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 239 'select' 'select_ln74_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_11)   --->   "%and_ln74_7 = and i64 %mul_ln74_7, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 240 'and' 'and_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 241 [1/1] (0.79ns)   --->   "%sub_ln83_2 = sub i4 12, i4 %i_load" [d4.cpp:83]   --->   Operation 241 'sub' 'sub_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 242 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 242 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 243 [1/1] (0.00ns)   --->   "%zext_ln83_3 = zext i32 %tmp_12" [d4.cpp:83]   --->   Operation 243 'zext' 'zext_ln83_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 244 [1/1] (0.79ns)   --->   "%icmp_ln83_2 = icmp_ult  i4 %i_load, i4 12" [d4.cpp:83]   --->   Operation 244 'icmp' 'icmp_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln83_6 = and i1 %icmp_ln83_2, i1 %and_ln83" [d4.cpp:83]   --->   Operation 245 'and' 'and_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 246 '%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53'
ST_3 : Operation 246 [1/1] (2.10ns)   --->   "%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 246 'mul' 'mul_ln83_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%select_ln83_4 = select i1 %and_ln83_6, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 247 'select' 'select_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln83_7 = and i64 %mul_ln83_3, i64 %select_ln83_4" [d4.cpp:83]   --->   Operation 248 'and' 'and_ln83_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 249 [1/1] (0.54ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 249 'mux' 'tmp_13' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln72_4 = zext i32 %tmp_13" [d4.cpp:72]   --->   Operation 250 'zext' 'zext_ln72_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 251 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_10" [d4.cpp:74]   --->   Operation 251 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln74_3 = zext i32 %tmp_14" [d4.cpp:74]   --->   Operation 252 'zext' 'zext_ln74_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 253 '%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53'
ST_3 : Operation 253 [1/1] (2.10ns)   --->   "%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 253 'mul' 'mul_ln74_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_14)   --->   "%and_ln74_8 = and i64 %mul_ln74_8, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 254 'and' 'and_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 255 '%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53'
ST_3 : Operation 255 [1/1] (2.10ns)   --->   "%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 255 'mul' 'mul_ln74_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_14)   --->   "%select_ln74_6 = select i1 %icmp_ln63_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 256 'select' 'select_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_14)   --->   "%and_ln74_9 = and i64 %mul_ln74_9, i64 %select_ln74_6" [d4.cpp:74]   --->   Operation 257 'and' 'and_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 258 [1/1] (0.79ns)   --->   "%sub_ln83_3 = sub i4 11, i4 %i_load" [d4.cpp:83]   --->   Operation 258 'sub' 'sub_ln83_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 259 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 259 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 260 [1/1] (0.00ns)   --->   "%zext_ln83_4 = zext i32 %tmp_15" [d4.cpp:83]   --->   Operation 260 'zext' 'zext_ln83_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 261 [1/1] (0.79ns)   --->   "%icmp_ln83_3 = icmp_ult  i4 %i_load, i4 11" [d4.cpp:83]   --->   Operation 261 'icmp' 'icmp_ln83_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_15)   --->   "%and_ln83_8 = and i1 %icmp_ln83_3, i1 %and_ln83" [d4.cpp:83]   --->   Operation 262 'and' 'and_ln83_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 263 '%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53'
ST_3 : Operation 263 [1/1] (2.10ns)   --->   "%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 263 'mul' 'mul_ln83_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_15)   --->   "%select_ln83_5 = select i1 %and_ln83_8, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 264 'select' 'select_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_15)   --->   "%and_ln83_9 = and i64 %mul_ln83_4, i64 %select_ln83_5" [d4.cpp:83]   --->   Operation 265 'and' 'and_ln83_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 266 [1/1] (0.54ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 266 'mux' 'tmp_16' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln72_5 = zext i32 %tmp_16" [d4.cpp:72]   --->   Operation 267 'zext' 'zext_ln72_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 268 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_6" [d4.cpp:74]   --->   Operation 268 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 269 [1/1] (0.00ns)   --->   "%zext_ln74_4 = zext i32 %tmp_17" [d4.cpp:74]   --->   Operation 269 'zext' 'zext_ln74_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 270 '%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53'
ST_3 : Operation 270 [1/1] (2.10ns)   --->   "%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 270 'mul' 'mul_ln74_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_17)   --->   "%and_ln74_10 = and i64 %mul_ln74_10, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 271 'and' 'and_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 272 '%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53'
ST_3 : Operation 272 [1/1] (2.10ns)   --->   "%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 272 'mul' 'mul_ln74_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_17)   --->   "%select_ln74_7 = select i1 %icmp_ln63_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 273 'select' 'select_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_17)   --->   "%and_ln74_11 = and i64 %mul_ln74_11, i64 %select_ln74_7" [d4.cpp:74]   --->   Operation 274 'and' 'and_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 275 [1/1] (0.79ns)   --->   "%sub_ln83_4 = sub i4 10, i4 %i_load" [d4.cpp:83]   --->   Operation 275 'sub' 'sub_ln83_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 276 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 276 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 277 [1/1] (0.00ns)   --->   "%zext_ln83_5 = zext i32 %tmp_18" [d4.cpp:83]   --->   Operation 277 'zext' 'zext_ln83_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 278 [1/1] (0.79ns)   --->   "%icmp_ln83_4 = icmp_ult  i4 %i_load, i4 10" [d4.cpp:83]   --->   Operation 278 'icmp' 'icmp_ln83_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_18)   --->   "%and_ln83_10 = and i1 %icmp_ln83_4, i1 %and_ln83" [d4.cpp:83]   --->   Operation 279 'and' 'and_ln83_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 280 '%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53'
ST_3 : Operation 280 [1/1] (2.10ns)   --->   "%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 280 'mul' 'mul_ln83_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_18)   --->   "%select_ln83_6 = select i1 %and_ln83_10, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 281 'select' 'select_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_18)   --->   "%and_ln83_11 = and i64 %mul_ln83_5, i64 %select_ln83_6" [d4.cpp:83]   --->   Operation 282 'and' 'and_ln83_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 283 [1/1] (0.54ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %k_s" [d4.cpp:72]   --->   Operation 283 'mux' 'tmp_19' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 284 [1/1] (0.00ns)   --->   "%zext_ln72_6 = zext i32 %tmp_19" [d4.cpp:72]   --->   Operation 284 'zext' 'zext_ln72_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 285 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_7" [d4.cpp:74]   --->   Operation 285 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 286 [1/1] (0.00ns)   --->   "%zext_ln74_5 = zext i32 %tmp_20" [d4.cpp:74]   --->   Operation 286 'zext' 'zext_ln74_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 287 '%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53'
ST_3 : Operation 287 [1/1] (2.10ns)   --->   "%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 287 'mul' 'mul_ln74_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 288 [1/1] (0.37ns)   --->   "%and_ln74_12 = and i64 %mul_ln74_12, i64 %select_ln74_1" [d4.cpp:74]   --->   Operation 288 'and' 'and_ln74_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 289 '%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53'
ST_3 : Operation 289 [1/1] (2.10ns)   --->   "%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 289 'mul' 'mul_ln74_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%select_ln74_8 = select i1 %icmp_ln63_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 290 'select' 'select_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln74_13 = and i64 %mul_ln74_13, i64 %select_ln74_8" [d4.cpp:74]   --->   Operation 291 'and' 'and_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 292 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_8" [d4.cpp:74]   --->   Operation 292 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 293 [1/1] (0.00ns)   --->   "%zext_ln74_6 = zext i32 %tmp_21" [d4.cpp:74]   --->   Operation 293 'zext' 'zext_ln74_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 294 '%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53'
ST_3 : Operation 294 [1/1] (2.10ns)   --->   "%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 294 'mul' 'mul_ln74_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 295 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%select_ln74_9 = select i1 %icmp_ln74, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 295 'select' 'select_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%and_ln74_14 = and i64 %mul_ln74_14, i64 %select_ln74_9" [d4.cpp:74]   --->   Operation 296 'and' 'and_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 297 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74 = add i64 %and_ln74_14, i64 %p_load60" [d4.cpp:74]   --->   Operation 297 'add' 'add_ln74' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 298 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_3" [d4.cpp:74]   --->   Operation 298 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln74_7 = zext i32 %tmp_22" [d4.cpp:74]   --->   Operation 299 'zext' 'zext_ln74_7' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 300 '%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53'
ST_3 : Operation 300 [1/1] (2.10ns)   --->   "%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 300 'mul' 'mul_ln74_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_1)   --->   "%select_ln74_10 = select i1 %icmp_ln74_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 301 'select' 'select_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 302 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_1)   --->   "%and_ln74_15 = and i64 %mul_ln74_15, i64 %select_ln74_10" [d4.cpp:74]   --->   Operation 302 'and' 'and_ln74_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 303 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_1 = add i64 %and_ln74_15, i64 %p_load58" [d4.cpp:74]   --->   Operation 303 'add' 'add_ln74_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 304 [1/1] (0.00ns)   --->   "%zext_ln75_6 = zext i1 %icmp_ln74_1" [d4.cpp:75]   --->   Operation 304 'zext' 'zext_ln75_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 305 [1/1] (0.79ns)   --->   "%sub_ln78_3 = sub i4 %sub_ln58_3, i4 %zext_ln75_6" [d4.cpp:78]   --->   Operation 305 'sub' 'sub_ln78_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 306 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 306 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 307 [1/1] (0.00ns)   --->   "%zext_ln74_8 = zext i32 %tmp_23" [d4.cpp:74]   --->   Operation 307 'zext' 'zext_ln74_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 308 '%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53'
ST_3 : Operation 308 [1/1] (2.10ns)   --->   "%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 308 'mul' 'mul_ln74_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_2)   --->   "%select_ln74_11 = select i1 %icmp_ln74_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 309 'select' 'select_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 310 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_2)   --->   "%and_ln74_16 = and i64 %mul_ln74_16, i64 %select_ln74_11" [d4.cpp:74]   --->   Operation 310 'and' 'and_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 311 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_2 = add i64 %and_ln74_16, i64 %p_load56" [d4.cpp:74]   --->   Operation 311 'add' 'add_ln74_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln75_7 = zext i1 %icmp_ln74_2" [d4.cpp:75]   --->   Operation 312 'zext' 'zext_ln75_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 313 [1/1] (0.79ns)   --->   "%sub_ln78_4 = sub i4 %sub_ln78_3, i4 %zext_ln75_7" [d4.cpp:78]   --->   Operation 313 'sub' 'sub_ln78_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 314 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i32 %tmp_24" [d4.cpp:86]   --->   Operation 314 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 315 '%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast'
ST_3 : Operation 315 [1/1] (2.10ns)   --->   "%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 315 'mul' 'mul_ln86' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%select_ln86_1 = select i1 %and_ln86, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 316 'select' 'select_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%and_ln86_1 = and i64 %mul_ln86, i64 %select_ln86_1" [d4.cpp:86]   --->   Operation 317 'and' 'and_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 318 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_5 = add i64 %and_ln74_2, i64 %and_ln74_3" [d4.cpp:86]   --->   Operation 318 'add' 'add_ln86_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 319 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_6 = add i64 %and_ln83_3, i64 %and_ln86_1" [d4.cpp:86]   --->   Operation 319 'add' 'add_ln86_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 320 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_7 = add i64 %add_ln86_6, i64 %add_ln86_5" [d4.cpp:86]   --->   Operation 320 'add' 'add_ln86_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 321 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86 = add i64 %add94_145242_load, i64 %add_ln86_7" [d4.cpp:86]   --->   Operation 321 'add' 'add_ln86' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 322 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_4" [d4.cpp:74]   --->   Operation 322 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 323 [1/1] (0.00ns)   --->   "%zext_ln74_9 = zext i32 %tmp_25" [d4.cpp:74]   --->   Operation 323 'zext' 'zext_ln74_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 324 '%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53'
ST_3 : Operation 324 [1/1] (2.10ns)   --->   "%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 324 'mul' 'mul_ln74_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_3)   --->   "%select_ln74_12 = select i1 %icmp_ln74_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 325 'select' 'select_ln74_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 326 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_3)   --->   "%and_ln74_17 = and i64 %mul_ln74_17, i64 %select_ln74_12" [d4.cpp:74]   --->   Operation 326 'and' 'and_ln74_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 327 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_3 = add i64 %and_ln74_17, i64 %p_load54" [d4.cpp:74]   --->   Operation 327 'add' 'add_ln74_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 328 [1/1] (0.00ns)   --->   "%zext_ln75_8 = zext i1 %icmp_ln74_3" [d4.cpp:75]   --->   Operation 328 'zext' 'zext_ln75_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 329 [1/1] (0.79ns)   --->   "%sub_ln78_5 = sub i4 %sub_ln78_4, i4 %zext_ln75_8" [d4.cpp:78]   --->   Operation 329 'sub' 'sub_ln78_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 330 [1/1] (0.44ns)   --->   "%select_ln86 = select i1 %and_ln86, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 330 'select' 'select_ln86' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 331 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i32 %select_ln86" [d4.cpp:86]   --->   Operation 331 'zext' 'zext_ln86_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 332 '%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86'
ST_3 : Operation 332 [1/1] (2.10ns)   --->   "%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 332 'mul' 'mul_ln86_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%select_ln86_2 = select i1 %and_ln86_2, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 333 'select' 'select_ln86_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_9)   --->   "%and_ln86_3 = and i64 %mul_ln86_1, i64 %select_ln86_2" [d4.cpp:86]   --->   Operation 334 'and' 'and_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 335 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_8 = add i64 %and_ln74_4, i64 %and_ln74_5" [d4.cpp:86]   --->   Operation 335 'add' 'add_ln86_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 336 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_9 = add i64 %and_ln83_5, i64 %and_ln86_3" [d4.cpp:86]   --->   Operation 336 'add' 'add_ln86_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 337 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_10 = add i64 %add_ln86_9, i64 %add_ln86_8" [d4.cpp:86]   --->   Operation 337 'add' 'add_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 338 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_1 = add i64 %add94_2132246_load, i64 %add_ln86_10" [d4.cpp:86]   --->   Operation 338 'add' 'add_ln86_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 339 [1/1] (0.00ns)   --->   "%sext_ln67 = sext i3 %sub_ln58_4" [d4.cpp:67]   --->   Operation 339 'sext' 'sext_ln67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 340 [1/1] (0.00ns)   --->   "%zext_ln75_9 = zext i1 %icmp_ln74_4" [d4.cpp:75]   --->   Operation 340 'zext' 'zext_ln75_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 341 [1/1] (0.79ns)   --->   "%sub_ln78 = sub i4 %sub_ln78_5, i4 %zext_ln75_9" [d4.cpp:78]   --->   Operation 341 'sub' 'sub_ln78' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 342 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67" [d4.cpp:86]   --->   Operation 342 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 343 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i32 %tmp_27" [d4.cpp:86]   --->   Operation 343 'zext' 'zext_ln86_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 344 '%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86'
ST_3 : Operation 344 [1/1] (2.10ns)   --->   "%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 344 'mul' 'mul_ln86_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%select_ln86_3 = select i1 %and_ln86_4, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 345 'select' 'select_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln86_5 = and i64 %mul_ln86_2, i64 %select_ln86_3" [d4.cpp:86]   --->   Operation 346 'and' 'and_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 347 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_11 = add i64 %and_ln74_6, i64 %and_ln74_7" [d4.cpp:86]   --->   Operation 347 'add' 'add_ln86_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 348 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_12 = add i64 %and_ln83_7, i64 %and_ln86_5" [d4.cpp:86]   --->   Operation 348 'add' 'add_ln86_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 349 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_13 = add i64 %add_ln86_12, i64 %add_ln86_11" [d4.cpp:86]   --->   Operation 349 'add' 'add_ln86_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 350 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_2 = add i64 %add94_1250_load, i64 %add_ln86_13" [d4.cpp:86]   --->   Operation 350 'add' 'add_ln86_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 351 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_1" [d4.cpp:86]   --->   Operation 351 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 352 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i32 %tmp_29" [d4.cpp:86]   --->   Operation 352 'zext' 'zext_ln86_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 353 '%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86'
ST_3 : Operation 353 [1/1] (2.10ns)   --->   "%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 353 'mul' 'mul_ln86_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_15)   --->   "%select_ln86_4 = select i1 %and_ln86_6, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 354 'select' 'select_ln86_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_15)   --->   "%and_ln86_7 = and i64 %mul_ln86_3, i64 %select_ln86_4" [d4.cpp:86]   --->   Operation 355 'and' 'and_ln86_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 356 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_14 = add i64 %and_ln74_8, i64 %and_ln74_9" [d4.cpp:86]   --->   Operation 356 'add' 'add_ln86_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 357 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_15 = add i64 %and_ln83_9, i64 %and_ln86_7" [d4.cpp:86]   --->   Operation 357 'add' 'add_ln86_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 358 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_16 = add i64 %add_ln86_15, i64 %add_ln86_14" [d4.cpp:86]   --->   Operation 358 'add' 'add_ln86_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 359 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_3 = add i64 %add94_1_1254_load, i64 %add_ln86_16" [d4.cpp:86]   --->   Operation 359 'add' 'add_ln86_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 360 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_1" [d4.cpp:86]   --->   Operation 360 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 361 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i32 %tmp_31" [d4.cpp:86]   --->   Operation 361 'zext' 'zext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 362 '%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86'
ST_3 : Operation 362 [1/1] (2.10ns)   --->   "%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 362 'mul' 'mul_ln86_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 363 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_18)   --->   "%select_ln86_5 = select i1 %and_ln86_8, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 363 'select' 'select_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_18)   --->   "%and_ln86_9 = and i64 %mul_ln86_4, i64 %select_ln86_5" [d4.cpp:86]   --->   Operation 364 'and' 'and_ln86_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 365 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_17 = add i64 %and_ln74_10, i64 %and_ln74_11" [d4.cpp:86]   --->   Operation 365 'add' 'add_ln86_17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 366 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_18 = add i64 %and_ln83_11, i64 %and_ln86_9" [d4.cpp:86]   --->   Operation 366 'add' 'add_ln86_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_19 = add i64 %add_ln86_18, i64 %add_ln86_17" [d4.cpp:86]   --->   Operation 367 'add' 'add_ln86_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 368 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_4 = add i64 %add94_1_2258_load, i64 %add_ln86_19" [d4.cpp:86]   --->   Operation 368 'add' 'add_ln86_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 369 [1/1] (0.00ns)   --->   "%zext_ln87_1 = zext i1 %and_ln86_8" [d4.cpp:87]   --->   Operation 369 'zext' 'zext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 370 [1/1] (0.79ns)   --->   "%sub_ln58_2 = sub i4 %sub_ln58_1, i4 %zext_ln87_1" [d4.cpp:58]   --->   Operation 370 'sub' 'sub_ln58_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 371 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_2" [d4.cpp:86]   --->   Operation 371 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 372 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %tmp_33" [d4.cpp:86]   --->   Operation 372 'zext' 'zext_ln86_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln86_10 = and i1 %icmp_ln67_5, i1 %and_ln83" [d4.cpp:86]   --->   Operation 373 'and' 'and_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 374 '%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86'
ST_3 : Operation 374 [1/1] (2.10ns)   --->   "%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 374 'mul' 'mul_ln86_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%select_ln86_6 = select i1 %and_ln86_10, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 375 'select' 'select_ln86_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln86_11 = and i64 %mul_ln86_5, i64 %select_ln86_6" [d4.cpp:86]   --->   Operation 376 'and' 'and_ln86_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 377 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_20 = add i64 %and_ln74_13, i64 %and_ln86_11" [d4.cpp:86]   --->   Operation 377 'add' 'add_ln86_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 378 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_21 = add i64 %add_ln86_20, i64 %and_ln74_12" [d4.cpp:86]   --->   Operation 378 'add' 'add_ln86_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 379 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_22 = add i64 %add94_2262_load, i64 %add_ln86_21" [d4.cpp:86]   --->   Operation 379 'add' 'add_ln86_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 380 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_3, i64 %empty_35" [d4.cpp:42]   --->   Operation 380 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 381 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_2, i64 %empty_34" [d4.cpp:42]   --->   Operation 381 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 382 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_1, i64 %empty_33" [d4.cpp:42]   --->   Operation 382 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 383 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74, i64 %empty_32" [d4.cpp:42]   --->   Operation 383 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 384 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_22, i64 %add94_2262" [d4.cpp:42]   --->   Operation 384 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 385 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_4, i64 %add94_1_2258" [d4.cpp:42]   --->   Operation 385 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 386 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_3, i64 %add94_1_1254" [d4.cpp:42]   --->   Operation 386 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 387 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_2, i64 %add94_1250" [d4.cpp:42]   --->   Operation 387 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 388 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_1, i64 %add94_2132246" [d4.cpp:42]   --->   Operation 388 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 389 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86, i64 %add94_145242" [d4.cpp:42]   --->   Operation 389 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 428 [1/1] (0.00ns)   --->   "%p_load70 = load i64 %empty"   --->   Operation 428 'load' 'p_load70' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 429 [1/1] (0.00ns)   --->   "%add94238_load_1 = load i64 %add94238"   --->   Operation 429 'load' 'add94238_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 430 [1/1] (0.00ns)   --->   "%add94_145242_load_1 = load i64 %add94_145242"   --->   Operation 430 'load' 'add94_145242_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 431 [1/1] (0.00ns)   --->   "%add94_2132246_load_1 = load i64 %add94_2132246"   --->   Operation 431 'load' 'add94_2132246_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 432 [1/1] (0.00ns)   --->   "%add94_1250_load_1 = load i64 %add94_1250"   --->   Operation 432 'load' 'add94_1250_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 433 [1/1] (0.00ns)   --->   "%add94_1_1254_load_1 = load i64 %add94_1_1254"   --->   Operation 433 'load' 'add94_1_1254_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 434 [1/1] (0.00ns)   --->   "%add94_1_2258_load_1 = load i64 %add94_1_2258"   --->   Operation 434 'load' 'add94_1_2258_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 435 [1/1] (0.00ns)   --->   "%add94_2262_load_1 = load i64 %add94_2262"   --->   Operation 435 'load' 'add94_2262_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 436 [1/1] (0.00ns)   --->   "%p_load61 = load i64 %empty_32"   --->   Operation 436 'load' 'p_load61' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 437 [1/1] (0.00ns)   --->   "%p_load59 = load i64 %empty_33"   --->   Operation 437 'load' 'p_load59' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 438 [1/1] (0.00ns)   --->   "%p_load57 = load i64 %empty_34"   --->   Operation 438 'load' 'p_load57' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 439 [1/1] (0.00ns)   --->   "%p_load55 = load i64 %empty_35"   --->   Operation 439 'load' 'p_load55' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 440 [1/1] (0.00ns)   --->   "%p_load53 = load i64 %empty_36"   --->   Operation 440 'load' 'p_load53' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 441 [1/1] (0.00ns)   --->   "%p_load51 = load i64 %empty_37"   --->   Operation 441 'load' 'p_load51' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 442 [1/1] (0.00ns)   --->   "%p_load49 = load i64 %empty_38"   --->   Operation 442 'load' 'p_load49' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 443 [1/1] (0.00ns)   --->   "%p_load47 = load i64 %empty_39"   --->   Operation 443 'load' 'p_load47' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 444 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load47"   --->   Operation 444 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 445 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load49"   --->   Operation 445 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 446 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load51"   --->   Operation 446 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 447 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load53"   --->   Operation 447 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 448 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load55"   --->   Operation 448 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 449 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load57"   --->   Operation 449 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 450 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load59"   --->   Operation 450 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 451 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load61"   --->   Operation 451 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 452 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_2262_out, i64 %add94_2262_load_1"   --->   Operation 452 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 453 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_1_2258_out, i64 %add94_1_2258_load_1"   --->   Operation 453 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 454 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_1_1254_out, i64 %add94_1_1254_load_1"   --->   Operation 454 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 455 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_1250_out, i64 %add94_1250_load_1"   --->   Operation 455 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 456 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_2132246_out, i64 %add94_2132246_load_1"   --->   Operation 456 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 457 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_145242_out, i64 %add94_145242_load_1"   --->   Operation 457 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 458 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94238_out, i64 %add94238_load_1"   --->   Operation 458 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 459 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out8, i64 %p_load70"   --->   Operation 459 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 460 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 460 'ret' 'ret_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.01>
ST_4 : Operation 390 [1/1] (0.00ns)   --->   "%p_load52 = load i64 %empty_36" [d4.cpp:74]   --->   Operation 390 'load' 'p_load52' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 391 [1/1] (0.00ns)   --->   "%p_load50 = load i64 %empty_37" [d4.cpp:74]   --->   Operation 391 'load' 'p_load50' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 392 [1/1] (0.00ns)   --->   "%p_load48 = load i64 %empty_38" [d4.cpp:74]   --->   Operation 392 'load' 'p_load48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 393 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_39" [d4.cpp:74]   --->   Operation 393 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 394 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d4.cpp:44]   --->   Operation 394 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 395 [1/1] (0.00ns)   --->   "%speclooptripcount_ln42 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15" [d4.cpp:42]   --->   Operation 395 'speclooptripcount' 'speclooptripcount_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 396 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d4.cpp:42]   --->   Operation 396 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 397 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 397 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 398 [1/1] (0.00ns)   --->   "%zext_ln74_10 = zext i32 %tmp_26" [d4.cpp:74]   --->   Operation 398 'zext' 'zext_ln74_10' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 399 '%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53'
ST_4 : Operation 399 [1/1] (2.10ns)   --->   "%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 399 'mul' 'mul_ln74_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_4)   --->   "%select_ln74_13 = select i1 %icmp_ln74_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 400 'select' 'select_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_4)   --->   "%and_ln74_18 = and i64 %mul_ln74_18, i64 %select_ln74_13" [d4.cpp:74]   --->   Operation 401 'and' 'and_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 402 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_4 = add i64 %and_ln74_18, i64 %p_load52" [d4.cpp:74]   --->   Operation 402 'add' 'add_ln74_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 403 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78" [d4.cpp:74]   --->   Operation 403 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln74_11 = zext i32 %tmp_28" [d4.cpp:74]   --->   Operation 404 'zext' 'zext_ln74_11' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 405 '%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53'
ST_4 : Operation 405 [1/1] (2.10ns)   --->   "%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 405 'mul' 'mul_ln74_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_5)   --->   "%select_ln74_14 = select i1 %icmp_ln74_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 406 'select' 'select_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_5)   --->   "%and_ln74_19 = and i64 %mul_ln74_19, i64 %select_ln74_14" [d4.cpp:74]   --->   Operation 407 'and' 'and_ln74_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 408 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_5 = add i64 %and_ln74_19, i64 %p_load50" [d4.cpp:74]   --->   Operation 408 'add' 'add_ln74_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 409 [1/1] (0.00ns)   --->   "%zext_ln75_10 = zext i1 %icmp_ln74_5" [d4.cpp:75]   --->   Operation 409 'zext' 'zext_ln75_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 410 [1/1] (0.79ns)   --->   "%sub_ln78_1 = sub i4 %sub_ln78, i4 %zext_ln75_10" [d4.cpp:78]   --->   Operation 410 'sub' 'sub_ln78_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 411 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 411 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 412 [1/1] (0.00ns)   --->   "%zext_ln74_12 = zext i32 %tmp_30" [d4.cpp:74]   --->   Operation 412 'zext' 'zext_ln74_12' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 413 '%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53'
ST_4 : Operation 413 [1/1] (2.10ns)   --->   "%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 413 'mul' 'mul_ln74_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_6)   --->   "%select_ln74_15 = select i1 %icmp_ln74_6, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 414 'select' 'select_ln74_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 415 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_6)   --->   "%and_ln74_20 = and i64 %mul_ln74_20, i64 %select_ln74_15" [d4.cpp:74]   --->   Operation 415 'and' 'and_ln74_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 416 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_6 = add i64 %and_ln74_20, i64 %p_load48" [d4.cpp:74]   --->   Operation 416 'add' 'add_ln74_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 417 [1/1] (0.00ns)   --->   "%zext_ln75_11 = zext i1 %icmp_ln74_6" [d4.cpp:75]   --->   Operation 417 'zext' 'zext_ln75_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 418 [1/1] (0.79ns)   --->   "%sub_ln78_2 = sub i4 %sub_ln78_1, i4 %zext_ln75_11" [d4.cpp:78]   --->   Operation 418 'sub' 'sub_ln78_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 419 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_2" [d4.cpp:74]   --->   Operation 419 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 420 [1/1] (0.00ns)   --->   "%zext_ln74_13 = zext i32 %tmp_32" [d4.cpp:74]   --->   Operation 420 'zext' 'zext_ln74_13' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 421 '%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53'
ST_4 : Operation 421 [1/1] (2.10ns)   --->   "%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 421 'mul' 'mul_ln74_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 422 [1/1] (1.08ns)   --->   "%add_ln74_7 = add i64 %mul_ln74_21, i64 %p_load" [d4.cpp:74]   --->   Operation 422 'add' 'add_ln74_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 423 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_7, i64 %empty_39" [d4.cpp:42]   --->   Operation 423 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 424 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_6, i64 %empty_38" [d4.cpp:42]   --->   Operation 424 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 425 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_5, i64 %empty_37" [d4.cpp:42]   --->   Operation 425 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 426 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_4, i64 %empty_36" [d4.cpp:42]   --->   Operation 426 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 427 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body55" [d4.cpp:42]   --->   Operation 427 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [68]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [103]  (0.427 ns)

 <State 2>: 6.667ns
The critical path consists of the following:
	'load' operation ('i_load', d4.cpp:53) on local variable 'i' [146]  (0.000 ns)
	'add' operation ('empty_40', d4.cpp:42) [166]  (0.797 ns)
	'icmp' operation ('icmp_ln63', d4.cpp:63) [192]  (0.789 ns)
	'sub' operation ('k3', d4.cpp:78) [203]  (0.548 ns)
	'sub' operation ('k3', d4.cpp:75) [224]  (0.673 ns)
	'sub' operation ('sub_ln78_10', d4.cpp:78) [245]  (0.673 ns)
	'sub' operation ('sub_ln78_6', d4.cpp:78) [265]  (0.797 ns)
	'sub' operation ('sub_ln78_7', d4.cpp:78) [285]  (0.797 ns)
	'sub' operation ('sub_ln78_8', d4.cpp:78) [305]  (0.797 ns)
	'sub' operation ('sub_ln58_3', d4.cpp:58) [314]  (0.797 ns)

 <State 3>: 7.037ns
The critical path consists of the following:
	'sub' operation ('sub_ln58_2', d4.cpp:58) [437]  (0.797 ns)
	'mux' operation ('tmp_33', d4.cpp:86) [444]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.315 ns)
'mul' operation ('mul_ln86_5', d4.cpp:86) [447]  (2.105 ns)
	'and' operation ('and_ln86_11', d4.cpp:86) [449]  (0.000 ns)
	'add' operation ('add_ln86_20', d4.cpp:86) [450]  (1.085 ns)
	'add' operation ('add_ln86_21', d4.cpp:86) [451]  (0.000 ns)
	'add' operation ('add_ln86_22', d4.cpp:86) [452]  (0.819 ns)
	'store' operation ('store_ln42', d4.cpp:42) of variable 'add_ln86_22', d4.cpp:86 on local variable 'add94_2262' [465]  (0.427 ns)

 <State 4>: 7.015ns
The critical path consists of the following:
	'sub' operation ('sub_ln78_1', d4.cpp:78) [403]  (0.797 ns)
	'sub' operation ('sub_ln78_2', d4.cpp:78) [425]  (0.797 ns)
	'mux' operation ('tmp_32', d4.cpp:74) [440]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.315 ns)
'mul' operation ('mul_ln74_21', d4.cpp:74) [442]  (2.105 ns)
	'add' operation ('add_ln74_7', d4.cpp:74) [443]  (1.085 ns)
	'store' operation ('store_ln42', d4.cpp:42) of variable 'add_ln74_7', d4.cpp:74 on local variable 'empty_39' [457]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
