

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_42_1'
================================================================
* Date:           Fri May 10 15:07:43 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D4
* Solution:       comb_7 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.282 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_42_1  |        6|        6|         3|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.87>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add94324 = alloca i32 1"   --->   Operation 7 'alloca' 'add94324' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add94_145330 = alloca i32 1"   --->   Operation 8 'alloca' 'add94_145330' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add94_2130336 = alloca i32 1"   --->   Operation 9 'alloca' 'add94_2130336' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add94_3342 = alloca i32 1"   --->   Operation 10 'alloca' 'add94_3342' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add94_4348 = alloca i32 1"   --->   Operation 11 'alloca' 'add94_4348' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add94_5354 = alloca i32 1"   --->   Operation 12 'alloca' 'add94_5354' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add94_6360 = alloca i32 1"   --->   Operation 13 'alloca' 'add94_6360' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_34 = alloca i32 1"   --->   Operation 14 'alloca' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_35 = alloca i32 1"   --->   Operation 15 'alloca' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_36 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 18 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 19 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_40 = alloca i32 1"   --->   Operation 20 'alloca' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_41 = alloca i32 1"   --->   Operation 21 'alloca' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 22 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 23 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 24 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 25 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 26 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 27 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%conv101_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv101"   --->   Operation 28 'read' 'conv101_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 29 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 30 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 31 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 32 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 33 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 34 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 35 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 36 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 37 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 38 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 39 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 40 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 41 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 42 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 43 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 44 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 45 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 46 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 47 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 48 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 49 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 50 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 51 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 52 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 53 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 54 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 55 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 56 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 57 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv101_cast = zext i32 %conv101_read"   --->   Operation 58 'zext' 'conv101_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 59 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %k1"   --->   Operation 60 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_41"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_40"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_39"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_38"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_37"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_36"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_35"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_34"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_6360"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_5354"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_4348"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_3342"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_2130336"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94_145330"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add94324"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body55"   --->   Operation 78 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d4.cpp:74]   --->   Operation 79 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%icmp_ln42 = icmp_eq  i4 %i_1, i4 0" [d4.cpp:42]   --->   Operation 80 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body55.split, void %for.end225.exitStub" [d4.cpp:42]   --->   Operation 81 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%k_load = load i4 %k" [d4.cpp:53]   --->   Operation 82 'load' 'k_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i4 %i_1" [d4.cpp:42]   --->   Operation 83 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.48ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 84 'mux' 'tmp' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i32 %tmp" [d4.cpp:53]   --->   Operation 85 'zext' 'zext_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%empty_42 = add i5 %zext_ln42, i5 1" [d4.cpp:42]   --->   Operation 86 'add' 'empty_42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%cmp64 = icmp_ugt  i4 %i_1, i4 8" [d4.cpp:74]   --->   Operation 87 'icmp' 'cmp64' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%empty_43 = add i5 %zext_ln42, i5 25" [d4.cpp:42]   --->   Operation 88 'add' 'empty_43' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.79ns)   --->   "%cmp156 = icmp_ne  i4 %i_1, i4 15" [d4.cpp:74]   --->   Operation 89 'icmp' 'cmp156' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_84 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_42, i32 4" [d4.cpp:63]   --->   Operation 90 'bitselect' 'tmp_84' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : [1/1] (1.31ns)   --->   Input mux for Operation 91 '%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast'
ST_1 : Operation 91 [1/1] (2.10ns)   --->   "%mul_ln74_1 = mul i64 %zext_ln53, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 91 'mul' 'mul_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%tmp_85 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_42, i32 4" [d4.cpp:74]   --->   Operation 92 'bitselect' 'tmp_85' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_1)   --->   "%select_ln74_4 = select i1 %tmp_85, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 93 'select' 'select_ln74_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_1 = and i64 %mul_ln74_1, i64 %select_ln74_4" [d4.cpp:74]   --->   Operation 94 'and' 'and_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_24)   --->   "%select_ln83 = select i1 %tmp_84, i3 6, i3 7" [d4.cpp:83]   --->   Operation 95 'select' 'select_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.28ns)   --->   "%and_ln83 = and i1 %cmp156, i1 %cmp64" [d4.cpp:83]   --->   Operation 96 'and' 'and_ln83' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.78ns)   --->   "%icmp_ln63 = icmp_ugt  i5 %empty_42, i5 14" [d4.cpp:63]   --->   Operation 97 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_24)   --->   "%zext_ln78 = zext i1 %icmp_ln63" [d4.cpp:78]   --->   Operation 98 'zext' 'zext_ln78' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_24 = sub i3 %select_ln83, i3 %zext_ln78" [d4.cpp:78]   --->   Operation 99 'sub' 'sub_ln78_24' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.78ns)   --->   "%icmp_ln63_1 = icmp_ugt  i5 %empty_42, i5 13" [d4.cpp:63]   --->   Operation 100 'icmp' 'icmp_ln63_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i1 %icmp_ln63_1" [d4.cpp:78]   --->   Operation 101 'zext' 'zext_ln78_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.67ns)   --->   "%sub_ln78_15 = sub i3 %sub_ln78_24, i3 %zext_ln78_1" [d4.cpp:78]   --->   Operation 102 'sub' 'sub_ln78_15' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%sext_ln83_1 = sext i3 %sub_ln78_15" [d4.cpp:83]   --->   Operation 103 'sext' 'sext_ln83_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.78ns)   --->   "%icmp_ln63_2 = icmp_ugt  i5 %empty_42, i5 12" [d4.cpp:63]   --->   Operation 104 'icmp' 'icmp_ln63_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.79ns)   --->   "%add_ln53_1 = add i4 %k_load, i4 3" [d4.cpp:53]   --->   Operation 105 'add' 'add_ln53_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i1 %icmp_ln63_2" [d4.cpp:75]   --->   Operation 106 'zext' 'zext_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.67ns)   --->   "%sub_ln78_16 = sub i4 %sext_ln83_1, i4 %zext_ln75" [d4.cpp:78]   --->   Operation 107 'sub' 'sub_ln78_16' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.78ns)   --->   "%icmp_ln63_3 = icmp_ugt  i5 %empty_42, i5 11" [d4.cpp:63]   --->   Operation 108 'icmp' 'icmp_ln63_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i1 %icmp_ln63_3" [d4.cpp:75]   --->   Operation 109 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.79ns)   --->   "%sub_ln78_17 = sub i4 %sub_ln78_16, i4 %zext_ln75_1" [d4.cpp:78]   --->   Operation 110 'sub' 'sub_ln78_17' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.78ns)   --->   "%icmp_ln63_4 = icmp_ugt  i5 %empty_42, i5 10" [d4.cpp:63]   --->   Operation 111 'icmp' 'icmp_ln63_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.66ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 112 'mux' 'tmp_16' <Predicate = (!icmp_ln42)> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln75_2 = zext i1 %icmp_ln63_4" [d4.cpp:75]   --->   Operation 113 'zext' 'zext_ln75_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.79ns)   --->   "%sub_ln78_9 = sub i4 %sub_ln78_17, i4 %zext_ln75_2" [d4.cpp:78]   --->   Operation 114 'sub' 'sub_ln78_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.78ns)   --->   "%icmp_ln63_5 = icmp_ugt  i5 %empty_42, i5 9" [d4.cpp:63]   --->   Operation 115 'icmp' 'icmp_ln63_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.66ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 116 'mux' 'tmp_19' <Predicate = (!icmp_ln42)> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln75_3 = zext i1 %icmp_ln63_5" [d4.cpp:75]   --->   Operation 117 'zext' 'zext_ln75_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.79ns)   --->   "%sub_ln78_10 = sub i4 %sub_ln78_9, i4 %zext_ln75_3" [d4.cpp:78]   --->   Operation 118 'sub' 'sub_ln78_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.78ns)   --->   "%icmp_ln74 = icmp_ugt  i5 %empty_42, i5 8" [d4.cpp:74]   --->   Operation 119 'icmp' 'icmp_ln74' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_86 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_42, i32 3, i32 4" [d4.cpp:74]   --->   Operation 120 'partselect' 'tmp_86' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.54ns)   --->   "%icmp_ln74_1 = icmp_ne  i2 %tmp_86, i2 0" [d4.cpp:74]   --->   Operation 121 'icmp' 'icmp_ln74_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.78ns)   --->   "%icmp_ln67 = icmp_sgt  i5 %empty_43, i5 6" [d4.cpp:67]   --->   Operation 122 'icmp' 'icmp_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 123 [1/1] (0.78ns)   --->   "%icmp_ln74_2 = icmp_ugt  i5 %empty_42, i5 6" [d4.cpp:74]   --->   Operation 123 'icmp' 'icmp_ln74_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.28ns)   --->   "%and_ln86 = and i1 %icmp_ln67, i1 %and_ln83" [d4.cpp:86]   --->   Operation 124 'and' 'and_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_10)   --->   "%select_ln67 = select i1 %and_ln86, i3 6, i3 7" [d4.cpp:67]   --->   Operation 125 'select' 'select_ln67' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.78ns)   --->   "%icmp_ln67_1 = icmp_sgt  i5 %empty_43, i5 5" [d4.cpp:67]   --->   Operation 126 'icmp' 'icmp_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (0.78ns)   --->   "%icmp_ln74_3 = icmp_ugt  i5 %empty_42, i5 5" [d4.cpp:74]   --->   Operation 127 'icmp' 'icmp_ln74_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.28ns)   --->   "%and_ln86_2 = and i1 %icmp_ln67_1, i1 %and_ln83" [d4.cpp:86]   --->   Operation 128 'and' 'and_ln86_2' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_10)   --->   "%zext_ln58 = zext i1 %and_ln86_2" [d4.cpp:58]   --->   Operation 129 'zext' 'zext_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_10 = sub i3 %select_ln67, i3 %zext_ln58" [d4.cpp:58]   --->   Operation 130 'sub' 'sub_ln58_10' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 131 [1/1] (0.78ns)   --->   "%icmp_ln67_2 = icmp_sgt  i5 %empty_43, i5 4" [d4.cpp:67]   --->   Operation 131 'icmp' 'icmp_ln67_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.78ns)   --->   "%icmp_ln74_4 = icmp_ugt  i5 %empty_42, i5 4" [d4.cpp:74]   --->   Operation 132 'icmp' 'icmp_ln74_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 133 [1/1] (0.28ns)   --->   "%and_ln86_4 = and i1 %icmp_ln67_2, i1 %and_ln83" [d4.cpp:86]   --->   Operation 133 'and' 'and_ln86_4' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i1 %and_ln86_4" [d4.cpp:58]   --->   Operation 134 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.67ns)   --->   "%sub_ln58 = sub i3 %sub_ln58_10, i3 %zext_ln58_1" [d4.cpp:58]   --->   Operation 135 'sub' 'sub_ln58' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_87 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_43, i32 2, i32 4" [d4.cpp:67]   --->   Operation 136 'partselect' 'tmp_87' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.67ns)   --->   "%icmp_ln67_3 = icmp_sgt  i3 %tmp_87, i3 0" [d4.cpp:67]   --->   Operation 137 'icmp' 'icmp_ln67_3' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.28ns)   --->   "%and_ln86_6 = and i1 %icmp_ln67_3, i1 %and_ln83" [d4.cpp:86]   --->   Operation 138 'and' 'and_ln86_6' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln67_4 = icmp_sgt  i5 %empty_43, i5 2" [d4.cpp:67]   --->   Operation 139 'icmp' 'icmp_ln67_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_88 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_43, i32 1, i32 4" [d4.cpp:67]   --->   Operation 140 'partselect' 'tmp_88' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.79ns)   --->   "%icmp_ln67_5 = icmp_sgt  i4 %tmp_88, i4 0" [d4.cpp:67]   --->   Operation 141 'icmp' 'icmp_ln67_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 142 [1/1] (0.79ns)   --->   "%add_ln53_2 = add i4 %i_1, i4 15" [d4.cpp:53]   --->   Operation 142 'add' 'add_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_89 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln53_2, i32 3" [d4.cpp:53]   --->   Operation 143 'bitselect' 'tmp_89' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.79ns)   --->   "%cmp64_1 = icmp_ugt  i4 %add_ln53_2, i4 8" [d4.cpp:53]   --->   Operation 144 'icmp' 'cmp64_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 145 [1/1] (0.35ns)   --->   "%empty_44 = xor i4 %i_1, i4 8" [d4.cpp:74]   --->   Operation 145 'xor' 'empty_44' <Predicate = (!icmp_ln42)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.79ns)   --->   "%icmp_ln63_6 = icmp_eq  i4 %i_1, i4 15" [d4.cpp:63]   --->   Operation 146 'icmp' 'icmp_ln63_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_25)   --->   "%select_ln83_9 = select i1 %icmp_ln63_6, i3 6, i3 7" [d4.cpp:83]   --->   Operation 147 'select' 'select_ln83_9' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 148 [1/1] (0.79ns)   --->   "%icmp_ln63_7 = icmp_ugt  i4 %i_1, i4 13" [d4.cpp:63]   --->   Operation 148 'icmp' 'icmp_ln63_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_25)   --->   "%zext_ln78_2 = zext i1 %icmp_ln63_7" [d4.cpp:78]   --->   Operation 149 'zext' 'zext_ln78_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_25 = sub i3 %select_ln83_9, i3 %zext_ln78_2" [d4.cpp:78]   --->   Operation 150 'sub' 'sub_ln78_25' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.79ns)   --->   "%icmp_ln63_8 = icmp_ugt  i4 %i_1, i4 12" [d4.cpp:63]   --->   Operation 151 'icmp' 'icmp_ln63_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i1 %icmp_ln63_8" [d4.cpp:78]   --->   Operation 152 'zext' 'zext_ln78_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.67ns)   --->   "%sub_ln78_18 = sub i3 %sub_ln78_25, i3 %zext_ln78_3" [d4.cpp:78]   --->   Operation 153 'sub' 'sub_ln78_18' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%sext_ln83_3 = sext i3 %sub_ln78_18" [d4.cpp:83]   --->   Operation 154 'sext' 'sext_ln83_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.79ns)   --->   "%icmp_ln63_9 = icmp_ugt  i4 %i_1, i4 11" [d4.cpp:63]   --->   Operation 155 'icmp' 'icmp_ln63_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln75_9 = zext i1 %icmp_ln63_9" [d4.cpp:75]   --->   Operation 156 'zext' 'zext_ln75_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.67ns)   --->   "%sub_ln78_19 = sub i4 %sext_ln83_3, i4 %zext_ln75_9" [d4.cpp:78]   --->   Operation 157 'sub' 'sub_ln78_19' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.79ns)   --->   "%icmp_ln63_10 = icmp_ugt  i4 %i_1, i4 10" [d4.cpp:63]   --->   Operation 158 'icmp' 'icmp_ln63_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln75_10 = zext i1 %icmp_ln63_10" [d4.cpp:75]   --->   Operation 159 'zext' 'zext_ln75_10' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.79ns)   --->   "%sub_ln78_20 = sub i4 %sub_ln78_19, i4 %zext_ln75_10" [d4.cpp:78]   --->   Operation 160 'sub' 'sub_ln78_20' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (0.79ns)   --->   "%icmp_ln63_11 = icmp_ugt  i4 %i_1, i4 9" [d4.cpp:63]   --->   Operation 161 'icmp' 'icmp_ln63_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln75_11 = zext i1 %icmp_ln63_11" [d4.cpp:75]   --->   Operation 162 'zext' 'zext_ln75_11' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.79ns)   --->   "%sub_ln78_12 = sub i4 %sub_ln78_20, i4 %zext_ln75_11" [d4.cpp:78]   --->   Operation 163 'sub' 'sub_ln78_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln75_12 = zext i1 %cmp64" [d4.cpp:75]   --->   Operation 164 'zext' 'zext_ln75_12' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.79ns)   --->   "%sub_ln58_11 = sub i4 %sub_ln78_12, i4 %zext_ln75_12" [d4.cpp:58]   --->   Operation 165 'sub' 'sub_ln58_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 166 [1/1] (0.28ns)   --->   "%and_ln86_12 = and i1 %icmp_ln63_6, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 166 'and' 'and_ln86_12' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_13)   --->   "%select_ln67_1 = select i1 %and_ln86_12, i3 6, i3 7" [d4.cpp:67]   --->   Operation 167 'select' 'select_ln67_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.79ns)   --->   "%icmp_ln67_6 = icmp_sgt  i4 %empty_44, i4 5" [d4.cpp:67]   --->   Operation 168 'icmp' 'icmp_ln67_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 169 [1/1] (0.28ns)   --->   "%and_ln86_14 = and i1 %icmp_ln67_6, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 169 'and' 'and_ln86_14' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_13)   --->   "%zext_ln58_2 = zext i1 %and_ln86_14" [d4.cpp:58]   --->   Operation 170 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_13 = sub i3 %select_ln67_1, i3 %zext_ln58_2" [d4.cpp:58]   --->   Operation 171 'sub' 'sub_ln58_13' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 172 [1/1] (0.79ns)   --->   "%icmp_ln67_7 = icmp_sgt  i4 %empty_44, i4 4" [d4.cpp:67]   --->   Operation 172 'icmp' 'icmp_ln67_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.28ns)   --->   "%and_ln86_16 = and i1 %icmp_ln67_7, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 173 'and' 'and_ln86_16' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_90 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_44, i32 2, i32 3" [d4.cpp:67]   --->   Operation 174 'partselect' 'tmp_90' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.54ns)   --->   "%icmp_ln67_8 = icmp_eq  i2 %tmp_90, i2 1" [d4.cpp:67]   --->   Operation 175 'icmp' 'icmp_ln67_8' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.28ns)   --->   "%and_ln86_18 = and i1 %icmp_ln67_8, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 176 'and' 'and_ln86_18' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 177 [1/1] (0.79ns)   --->   "%icmp_ln67_9 = icmp_sgt  i4 %empty_44, i4 2" [d4.cpp:67]   --->   Operation 177 'icmp' 'icmp_ln67_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_92 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_44, i32 1, i32 3" [d4.cpp:67]   --->   Operation 178 'partselect' 'tmp_92' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.67ns)   --->   "%icmp_ln67_10 = icmp_sgt  i3 %tmp_92, i3 0" [d4.cpp:67]   --->   Operation 179 'icmp' 'icmp_ln67_10' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 180 [1/1] (0.79ns)   --->   "%add_ln53_4 = add i5 %zext_ln42, i5 30" [d4.cpp:53]   --->   Operation 180 'add' 'add_ln53_4' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_93 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln53_4, i32 3, i32 4" [d4.cpp:53]   --->   Operation 181 'partselect' 'tmp_93' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.54ns)   --->   "%icmp_ln53 = icmp_eq  i2 %tmp_93, i2 1" [d4.cpp:53]   --->   Operation 182 'icmp' 'icmp_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 183 [1/1] (0.78ns)   --->   "%cmp64_2 = icmp_sgt  i5 %add_ln53_4, i5 8" [d4.cpp:53]   --->   Operation 183 'icmp' 'cmp64_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 184 [1/1] (0.79ns)   --->   "%add_ln72 = add i4 %i_1, i4 7" [d4.cpp:72]   --->   Operation 184 'add' 'add_ln72' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 185 [1/1] (0.79ns)   --->   "%icmp_ln63_12 = icmp_ugt  i4 %add_ln53_2, i4 13" [d4.cpp:63]   --->   Operation 185 'icmp' 'icmp_ln63_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_26)   --->   "%select_ln83_17 = select i1 %icmp_ln63_12, i3 6, i3 7" [d4.cpp:83]   --->   Operation 186 'select' 'select_ln83_17' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 187 [1/1] (0.79ns)   --->   "%icmp_ln63_13 = icmp_ugt  i4 %add_ln53_2, i4 12" [d4.cpp:63]   --->   Operation 187 'icmp' 'icmp_ln63_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node sub_ln78_26)   --->   "%zext_ln78_4 = zext i1 %icmp_ln63_13" [d4.cpp:78]   --->   Operation 188 'zext' 'zext_ln78_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln78_26 = sub i3 %select_ln83_17, i3 %zext_ln78_4" [d4.cpp:78]   --->   Operation 189 'sub' 'sub_ln78_26' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 190 [1/1] (0.79ns)   --->   "%icmp_ln63_14 = icmp_ugt  i4 %add_ln53_2, i4 11" [d4.cpp:63]   --->   Operation 190 'icmp' 'icmp_ln63_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i1 %icmp_ln63_14" [d4.cpp:78]   --->   Operation 191 'zext' 'zext_ln78_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.67ns)   --->   "%sub_ln78_21 = sub i3 %sub_ln78_26, i3 %zext_ln78_5" [d4.cpp:78]   --->   Operation 192 'sub' 'sub_ln78_21' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%sext_ln83_5 = sext i3 %sub_ln78_21" [d4.cpp:83]   --->   Operation 193 'sext' 'sext_ln83_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.79ns)   --->   "%icmp_ln63_15 = icmp_ugt  i4 %add_ln53_2, i4 10" [d4.cpp:63]   --->   Operation 194 'icmp' 'icmp_ln63_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln75_17 = zext i1 %icmp_ln63_15" [d4.cpp:75]   --->   Operation 195 'zext' 'zext_ln75_17' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.67ns)   --->   "%sub_ln78_22 = sub i4 %sext_ln83_5, i4 %zext_ln75_17" [d4.cpp:78]   --->   Operation 196 'sub' 'sub_ln78_22' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 197 [1/1] (0.79ns)   --->   "%icmp_ln63_16 = icmp_ugt  i4 %add_ln53_2, i4 9" [d4.cpp:63]   --->   Operation 197 'icmp' 'icmp_ln63_16' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln75_18 = zext i1 %icmp_ln63_16" [d4.cpp:75]   --->   Operation 198 'zext' 'zext_ln75_18' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.79ns)   --->   "%sub_ln78_23 = sub i4 %sub_ln78_22, i4 %zext_ln75_18" [d4.cpp:78]   --->   Operation 199 'sub' 'sub_ln78_23' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln75_19 = zext i1 %cmp64_1" [d4.cpp:75]   --->   Operation 200 'zext' 'zext_ln75_19' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.79ns)   --->   "%sub_ln58_14 = sub i4 %sub_ln78_23, i4 %zext_ln75_19" [d4.cpp:58]   --->   Operation 201 'sub' 'sub_ln58_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.79ns)   --->   "%icmp_ln67_11 = icmp_sgt  i4 %add_ln72, i4 5" [d4.cpp:67]   --->   Operation 202 'icmp' 'icmp_ln67_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.28ns)   --->   "%and_ln86_24 = and i1 %icmp_ln67_11, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 203 'and' 'and_ln86_24' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_6)   --->   "%select_ln67_2 = select i1 %and_ln86_24, i3 6, i3 7" [d4.cpp:67]   --->   Operation 204 'select' 'select_ln67_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 205 [1/1] (0.79ns)   --->   "%icmp_ln67_12 = icmp_sgt  i4 %add_ln72, i4 4" [d4.cpp:67]   --->   Operation 205 'icmp' 'icmp_ln67_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.28ns)   --->   "%and_ln86_26 = and i1 %icmp_ln67_12, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 206 'and' 'and_ln86_26' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node sub_ln58_6)   --->   "%zext_ln58_4 = zext i1 %and_ln86_26" [d4.cpp:58]   --->   Operation 207 'zext' 'zext_ln58_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 208 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln58_6 = sub i3 %select_ln67_2, i3 %zext_ln58_4" [d4.cpp:58]   --->   Operation 208 'sub' 'sub_ln58_6' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_94 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln72, i32 2, i32 3" [d4.cpp:67]   --->   Operation 209 'partselect' 'tmp_94' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 210 [1/1] (0.54ns)   --->   "%icmp_ln67_13 = icmp_eq  i2 %tmp_94, i2 1" [d4.cpp:67]   --->   Operation 210 'icmp' 'icmp_ln67_13' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (0.00ns)   --->   "%tmp_95 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln53_2, i32 2, i32 3" [d4.cpp:74]   --->   Operation 211 'partselect' 'tmp_95' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 212 [1/1] (0.54ns)   --->   "%icmp_ln74_10 = icmp_ne  i2 %tmp_95, i2 0" [d4.cpp:74]   --->   Operation 212 'icmp' 'icmp_ln74_10' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (0.28ns)   --->   "%and_ln86_28 = and i1 %icmp_ln67_13, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 213 'and' 'and_ln86_28' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.79ns)   --->   "%icmp_ln67_14 = icmp_sgt  i4 %add_ln72, i4 2" [d4.cpp:67]   --->   Operation 214 'icmp' 'icmp_ln67_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%tmp_96 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln72, i32 1, i32 3" [d4.cpp:67]   --->   Operation 215 'partselect' 'tmp_96' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.67ns)   --->   "%icmp_ln67_15 = icmp_sgt  i3 %tmp_96, i3 0" [d4.cpp:67]   --->   Operation 216 'icmp' 'icmp_ln67_15' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (0.79ns)   --->   "%add_ln42 = add i4 %i_1, i4 13" [d4.cpp:42]   --->   Operation 217 'add' 'add_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln42, i4 %i" [d4.cpp:42]   --->   Operation 218 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_1 : Operation 219 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln53_1, i4 %k" [d4.cpp:42]   --->   Operation 219 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.28>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%p_load91 = load i64 %empty" [d4.cpp:53]   --->   Operation 220 'load' 'p_load91' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%p_load82 = load i64 %empty_34" [d4.cpp:74]   --->   Operation 221 'load' 'p_load82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.00ns)   --->   "%p_load80 = load i64 %empty_35" [d4.cpp:74]   --->   Operation 222 'load' 'p_load80' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 223 [1/1] (0.00ns)   --->   "%p_load78 = load i64 %empty_36" [d4.cpp:74]   --->   Operation 223 'load' 'p_load78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.00ns)   --->   "%k1_load = load i5 %k1" [d4.cpp:42]   --->   Operation 224 'load' 'k1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i5 %k1_load" [d4.cpp:42]   --->   Operation 225 'trunc' 'trunc_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 226 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 226 'mux' 'tmp_1' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i32 %tmp_1" [d4.cpp:53]   --->   Operation 227 'zext' 'zext_ln53_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 228 [1/1] (0.66ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %k_load" [d4.cpp:53]   --->   Operation 228 'mux' 'tmp_2' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i32 %tmp_2" [d4.cpp:53]   --->   Operation 229 'zext' 'zext_ln53_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 230 [1/1] (1.01ns)   --->   "%add_ln53 = add i33 %zext_ln53_2, i33 %zext_ln53_1" [d4.cpp:53]   --->   Operation 230 'add' 'add_ln53' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i33 %add_ln53" [d4.cpp:53]   --->   Operation 231 'zext' 'zext_ln53_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.47ns)   --->   Input mux for Operation 232 '%mul_ln53 = mul i64 %zext_ln53_4, i64 %zext_ln53'
ST_2 : Operation 232 [1/1] (2.93ns)   --->   "%mul_ln53 = mul i64 %zext_ln53_4, i64 %zext_ln53" [d4.cpp:53]   --->   Operation 232 'mul' 'mul_ln53' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d4.cpp:53]   --->   Operation 233 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln53_10 = zext i1 %tmp_8" [d4.cpp:53]   --->   Operation 234 'zext' 'zext_ln53_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (0.17ns)   --->   "%select_ln53 = select i1 %tmp_8, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 235 'select' 'select_ln53' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 236 [1/1] (0.37ns)   --->   "%and_ln53 = and i64 %mul_ln53, i64 %select_ln53" [d4.cpp:53]   --->   Operation 236 'and' 'and_ln53' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.79ns)   --->   "%cmp86 = icmp_ugt  i4 %i_1, i4 6" [d4.cpp:74]   --->   Operation 237 'icmp' 'cmp86' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.66ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 238 'mux' 'tmp_3' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i32 %tmp_3" [d4.cpp:72]   --->   Operation 239 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 240 '%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53'
ST_2 : Operation 240 [1/1] (2.10ns)   --->   "%mul_ln74 = mul i64 %zext_ln72, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 240 'mul' 'mul_ln74' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 241 [1/1] (0.17ns)   --->   "%select_ln74_3 = select i1 %cmp86, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 241 'select' 'select_ln74_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.37ns)   --->   "%and_ln74 = and i64 %mul_ln74, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 242 'and' 'and_ln74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 243 [1/1] (0.35ns)   --->   "%xor_ln83 = xor i4 %i_1, i4 15" [d4.cpp:83]   --->   Operation 243 'xor' 'xor_ln83' <Predicate = true> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.66ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 244 'mux' 'tmp_5' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i32 %tmp_5" [d4.cpp:83]   --->   Operation 245 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 246 '%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53'
ST_2 : Operation 246 [1/1] (2.10ns)   --->   "%mul_ln83 = mul i64 %zext_ln83, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 246 'mul' 'mul_ln83' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_1)   --->   "%select_ln83_1 = select i1 %and_ln83, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 247 'select' 'select_ln83_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 248 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_1 = and i64 %mul_ln83, i64 %select_ln83_1" [d4.cpp:83]   --->   Operation 248 'and' 'and_ln83_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 249 [1/1] (0.66ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 249 'mux' 'tmp_6' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i32 %tmp_6" [d4.cpp:72]   --->   Operation 250 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 251 [1/1] (0.44ns)   --->   "%select_ln74 = select i1 %tmp_84, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 251 'select' 'select_ln74' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i32 %select_ln74" [d4.cpp:74]   --->   Operation 252 'zext' 'zext_ln74' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 253 '%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53'
ST_2 : Operation 253 [1/1] (2.10ns)   --->   "%mul_ln74_2 = mul i64 %zext_ln72_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 253 'mul' 'mul_ln74_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.37ns)   --->   "%and_ln74_2 = and i64 %mul_ln74_2, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 254 'and' 'and_ln74_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 255 '%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53'
ST_2 : Operation 255 [1/1] (2.10ns)   --->   "%mul_ln74_3 = mul i64 %zext_ln74, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 255 'mul' 'mul_ln74_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_3)   --->   "%select_ln74_5 = select i1 %icmp_ln63, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 256 'select' 'select_ln74_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_3 = and i64 %mul_ln74_3, i64 %select_ln74_5" [d4.cpp:74]   --->   Operation 257 'and' 'and_ln74_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 258 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i3 %sub_ln78_24" [d4.cpp:83]   --->   Operation 258 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 259 [1/1] (0.79ns)   --->   "%sub_ln83 = sub i4 14, i4 %i_1" [d4.cpp:83]   --->   Operation 259 'sub' 'sub_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 260 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_14_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 260 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i32 %tmp_s" [d4.cpp:83]   --->   Operation 261 'zext' 'zext_ln83_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 262 [1/1] (0.79ns)   --->   "%icmp_ln83 = icmp_ult  i4 %i_1, i4 14" [d4.cpp:83]   --->   Operation 262 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_3)   --->   "%and_ln83_2 = and i1 %icmp_ln83, i1 %cmp64" [d4.cpp:83]   --->   Operation 263 'and' 'and_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 264 '%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53'
ST_2 : Operation 264 [1/1] (2.10ns)   --->   "%mul_ln83_1 = mul i64 %zext_ln83_1, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 264 'mul' 'mul_ln83_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_3)   --->   "%select_ln83_2 = select i1 %and_ln83_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 265 'select' 'select_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_3 = and i64 %mul_ln83_1, i64 %select_ln83_2" [d4.cpp:83]   --->   Operation 266 'and' 'and_ln83_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 267 [1/1] (0.66ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 267 'mux' 'tmp_4' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i32 %tmp_4" [d4.cpp:72]   --->   Operation 268 'zext' 'zext_ln72_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 269 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83" [d4.cpp:74]   --->   Operation 269 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.00ns)   --->   "%zext_ln74_1 = zext i32 %tmp_7" [d4.cpp:74]   --->   Operation 270 'zext' 'zext_ln74_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 271 '%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53'
ST_2 : Operation 271 [1/1] (2.10ns)   --->   "%mul_ln74_4 = mul i64 %zext_ln72_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 271 'mul' 'mul_ln74_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (0.37ns)   --->   "%and_ln74_4 = and i64 %mul_ln74_4, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 272 'and' 'and_ln74_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 273 '%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53'
ST_2 : Operation 273 [1/1] (2.10ns)   --->   "%mul_ln74_5 = mul i64 %zext_ln74_1, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 273 'mul' 'mul_ln74_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%select_ln74_6 = select i1 %icmp_ln63_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 274 'select' 'select_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%and_ln74_5 = and i64 %mul_ln74_5, i64 %select_ln74_6" [d4.cpp:74]   --->   Operation 275 'and' 'and_ln74_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 276 [1/1] (0.79ns)   --->   "%sub_ln83_1 = sub i4 13, i4 %i_1" [d4.cpp:83]   --->   Operation 276 'sub' 'sub_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 277 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln83_2 = zext i32 %tmp_9" [d4.cpp:83]   --->   Operation 278 'zext' 'zext_ln83_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 279 [1/1] (0.79ns)   --->   "%icmp_ln83_1 = icmp_ult  i4 %i_1, i4 13" [d4.cpp:83]   --->   Operation 279 'icmp' 'icmp_ln83_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%and_ln83_4 = and i1 %icmp_ln83_1, i1 %and_ln83" [d4.cpp:83]   --->   Operation 280 'and' 'and_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 281 '%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53'
ST_2 : Operation 281 [1/1] (2.10ns)   --->   "%mul_ln83_2 = mul i64 %zext_ln83_2, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 281 'mul' 'mul_ln83_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%select_ln83_3 = select i1 %and_ln83_4, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 282 'select' 'select_ln83_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%and_ln83_5 = and i64 %mul_ln83_2, i64 %select_ln83_3" [d4.cpp:83]   --->   Operation 283 'and' 'and_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.66ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 284 'mux' 'tmp_10' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln72_3 = zext i32 %tmp_10" [d4.cpp:72]   --->   Operation 285 'zext' 'zext_ln72_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_1" [d4.cpp:74]   --->   Operation 286 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln74_2 = zext i32 %tmp_11" [d4.cpp:74]   --->   Operation 287 'zext' 'zext_ln74_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 288 '%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53'
ST_2 : Operation 288 [1/1] (2.10ns)   --->   "%mul_ln74_6 = mul i64 %zext_ln72_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 288 'mul' 'mul_ln74_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 289 [1/1] (0.37ns)   --->   "%and_ln74_6 = and i64 %mul_ln74_6, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 289 'and' 'and_ln74_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 290 '%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53'
ST_2 : Operation 290 [1/1] (2.10ns)   --->   "%mul_ln74_7 = mul i64 %zext_ln74_2, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 290 'mul' 'mul_ln74_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%select_ln74_7 = select i1 %icmp_ln63_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 291 'select' 'select_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln74_7 = and i64 %mul_ln74_7, i64 %select_ln74_7" [d4.cpp:74]   --->   Operation 292 'and' 'and_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 293 [1/1] (0.79ns)   --->   "%sub_ln83_2 = sub i4 12, i4 %i_1" [d4.cpp:83]   --->   Operation 293 'sub' 'sub_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 294 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.00ns)   --->   "%zext_ln83_3 = zext i32 %tmp_12" [d4.cpp:83]   --->   Operation 295 'zext' 'zext_ln83_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 296 [1/1] (0.79ns)   --->   "%icmp_ln83_2 = icmp_ult  i4 %i_1, i4 12" [d4.cpp:83]   --->   Operation 296 'icmp' 'icmp_ln83_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln83_6 = and i1 %icmp_ln83_2, i1 %and_ln83" [d4.cpp:83]   --->   Operation 297 'and' 'and_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 298 '%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53'
ST_2 : Operation 298 [1/1] (2.10ns)   --->   "%mul_ln83_3 = mul i64 %zext_ln83_3, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 298 'mul' 'mul_ln83_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%select_ln83_4 = select i1 %and_ln83_6, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 299 'select' 'select_ln83_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_12)   --->   "%and_ln83_7 = and i64 %mul_ln83_3, i64 %select_ln83_4" [d4.cpp:83]   --->   Operation 300 'and' 'and_ln83_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 301 [1/1] (0.66ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 301 'mux' 'tmp_13' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 302 [1/1] (0.00ns)   --->   "%zext_ln72_4 = zext i32 %tmp_13" [d4.cpp:72]   --->   Operation 302 'zext' 'zext_ln72_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 303 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_16" [d4.cpp:74]   --->   Operation 303 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 304 [1/1] (0.00ns)   --->   "%zext_ln74_3 = zext i32 %tmp_14" [d4.cpp:74]   --->   Operation 304 'zext' 'zext_ln74_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 305 '%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53'
ST_2 : Operation 305 [1/1] (2.10ns)   --->   "%mul_ln74_8 = mul i64 %zext_ln72_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 305 'mul' 'mul_ln74_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 306 [1/1] (0.37ns)   --->   "%and_ln74_8 = and i64 %mul_ln74_8, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 306 'and' 'and_ln74_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 307 '%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53'
ST_2 : Operation 307 [1/1] (2.10ns)   --->   "%mul_ln74_9 = mul i64 %zext_ln74_3, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 307 'mul' 'mul_ln74_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_26)   --->   "%select_ln74_8 = select i1 %icmp_ln63_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 308 'select' 'select_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_26)   --->   "%and_ln74_9 = and i64 %mul_ln74_9, i64 %select_ln74_8" [d4.cpp:74]   --->   Operation 309 'and' 'and_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.79ns)   --->   "%sub_ln83_3 = sub i4 11, i4 %i_1" [d4.cpp:83]   --->   Operation 310 'sub' 'sub_ln83_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 311 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 311 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln83_4 = zext i32 %tmp_15" [d4.cpp:83]   --->   Operation 312 'zext' 'zext_ln83_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 313 [1/1] (0.79ns)   --->   "%icmp_ln83_3 = icmp_ult  i4 %i_1, i4 11" [d4.cpp:83]   --->   Operation 313 'icmp' 'icmp_ln83_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_26)   --->   "%and_ln83_8 = and i1 %icmp_ln83_3, i1 %and_ln83" [d4.cpp:83]   --->   Operation 314 'and' 'and_ln83_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 315 '%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53'
ST_2 : Operation 315 [1/1] (2.10ns)   --->   "%mul_ln83_4 = mul i64 %zext_ln83_4, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 315 'mul' 'mul_ln83_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_26)   --->   "%select_ln83_5 = select i1 %and_ln83_8, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 316 'select' 'select_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_26)   --->   "%and_ln83_9 = and i64 %mul_ln83_4, i64 %select_ln83_5" [d4.cpp:83]   --->   Operation 317 'and' 'and_ln83_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 318 [1/1] (0.00ns)   --->   "%zext_ln72_5 = zext i32 %tmp_16" [d4.cpp:72]   --->   Operation 318 'zext' 'zext_ln72_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 319 [1/1] (0.00ns)   --->   "%zext_ln74_39 = zext i32 %tmp_16" [d4.cpp:74]   --->   Operation 319 'zext' 'zext_ln74_39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 320 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_17" [d4.cpp:74]   --->   Operation 320 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 321 [1/1] (0.00ns)   --->   "%zext_ln74_4 = zext i32 %tmp_17" [d4.cpp:74]   --->   Operation 321 'zext' 'zext_ln74_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 322 '%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53'
ST_2 : Operation 322 [1/1] (2.10ns)   --->   "%mul_ln74_10 = mul i64 %zext_ln72_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 322 'mul' 'mul_ln74_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 323 [1/1] (0.37ns)   --->   "%and_ln74_10 = and i64 %mul_ln74_10, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 323 'and' 'and_ln74_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 324 '%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53'
ST_2 : Operation 324 [1/1] (2.10ns)   --->   "%mul_ln74_11 = mul i64 %zext_ln74_4, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 324 'mul' 'mul_ln74_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_37)   --->   "%select_ln74_9 = select i1 %icmp_ln63_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 325 'select' 'select_ln74_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 326 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_37)   --->   "%and_ln74_11 = and i64 %mul_ln74_11, i64 %select_ln74_9" [d4.cpp:74]   --->   Operation 326 'and' 'and_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 327 [1/1] (0.79ns)   --->   "%sub_ln83_4 = sub i4 10, i4 %i_1" [d4.cpp:83]   --->   Operation 327 'sub' 'sub_ln83_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 328 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 328 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln83_5 = zext i32 %tmp_18" [d4.cpp:83]   --->   Operation 329 'zext' 'zext_ln83_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 330 [1/1] (0.79ns)   --->   "%icmp_ln83_4 = icmp_ult  i4 %i_1, i4 10" [d4.cpp:83]   --->   Operation 330 'icmp' 'icmp_ln83_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_37)   --->   "%and_ln83_10 = and i1 %icmp_ln83_4, i1 %and_ln83" [d4.cpp:83]   --->   Operation 331 'and' 'and_ln83_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 332 '%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53'
ST_2 : Operation 332 [1/1] (2.10ns)   --->   "%mul_ln83_5 = mul i64 %zext_ln83_5, i64 %zext_ln53" [d4.cpp:83]   --->   Operation 332 'mul' 'mul_ln83_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_37)   --->   "%select_ln83_6 = select i1 %and_ln83_10, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 333 'select' 'select_ln83_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_37)   --->   "%and_ln83_11 = and i64 %mul_ln83_5, i64 %select_ln83_6" [d4.cpp:83]   --->   Operation 334 'and' 'and_ln83_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 335 [1/1] (0.00ns)   --->   "%zext_ln72_6 = zext i32 %tmp_19" [d4.cpp:72]   --->   Operation 335 'zext' 'zext_ln72_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 336 [1/1] (0.00ns)   --->   "%zext_ln74_40 = zext i32 %tmp_19" [d4.cpp:74]   --->   Operation 336 'zext' 'zext_ln74_40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 337 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_9" [d4.cpp:74]   --->   Operation 337 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (0.00ns)   --->   "%zext_ln74_5 = zext i32 %tmp_20" [d4.cpp:74]   --->   Operation 338 'zext' 'zext_ln74_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 339 '%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53'
ST_2 : Operation 339 [1/1] (2.10ns)   --->   "%mul_ln74_12 = mul i64 %zext_ln72_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 339 'mul' 'mul_ln74_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.37ns)   --->   "%and_ln74_12 = and i64 %mul_ln74_12, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 340 'and' 'and_ln74_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 341 '%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53'
ST_2 : Operation 341 [1/1] (2.10ns)   --->   "%mul_ln74_13 = mul i64 %zext_ln74_5, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 341 'mul' 'mul_ln74_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_13)   --->   "%select_ln74_10 = select i1 %icmp_ln63_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 342 'select' 'select_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 343 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_13 = and i64 %mul_ln74_13, i64 %select_ln74_10" [d4.cpp:74]   --->   Operation 343 'and' 'and_ln74_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 344 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_10" [d4.cpp:74]   --->   Operation 344 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 345 [1/1] (0.00ns)   --->   "%zext_ln74_6 = zext i32 %tmp_21" [d4.cpp:74]   --->   Operation 345 'zext' 'zext_ln74_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 346 '%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53'
ST_2 : Operation 346 [1/1] (2.10ns)   --->   "%mul_ln74_14 = mul i64 %zext_ln74_6, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 346 'mul' 'mul_ln74_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_14)   --->   "%select_ln74_11 = select i1 %icmp_ln74, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 347 'select' 'select_ln74_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 348 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_14 = and i64 %mul_ln74_14, i64 %select_ln74_11" [d4.cpp:74]   --->   Operation 348 'and' 'and_ln74_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 349 [1/1] (0.00ns)   --->   "%zext_ln75_4 = zext i1 %icmp_ln74" [d4.cpp:75]   --->   Operation 349 'zext' 'zext_ln75_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 350 [1/1] (0.79ns)   --->   "%sub_ln58_9 = sub i4 %sub_ln78_10, i4 %zext_ln75_4" [d4.cpp:58]   --->   Operation 350 'sub' 'sub_ln58_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 351 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_9" [d4.cpp:74]   --->   Operation 351 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 352 [1/1] (0.00ns)   --->   "%zext_ln74_7 = zext i32 %tmp_22" [d4.cpp:74]   --->   Operation 352 'zext' 'zext_ln74_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 353 '%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53'
ST_2 : Operation 353 [1/1] (2.10ns)   --->   "%mul_ln74_15 = mul i64 %zext_ln74_7, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 353 'mul' 'mul_ln74_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_15)   --->   "%select_ln74_12 = select i1 %icmp_ln74_1, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 354 'select' 'select_ln74_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 355 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_15 = and i64 %mul_ln74_15, i64 %select_ln74_12" [d4.cpp:74]   --->   Operation 355 'and' 'and_ln74_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns)   --->   "%zext_ln75_5 = zext i1 %icmp_ln74_1" [d4.cpp:75]   --->   Operation 356 'zext' 'zext_ln75_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 357 [1/1] (0.79ns)   --->   "%sub_ln78_11 = sub i4 %sub_ln58_9, i4 %zext_ln75_5" [d4.cpp:78]   --->   Operation 357 'sub' 'sub_ln78_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 358 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_11" [d4.cpp:74]   --->   Operation 358 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.00ns)   --->   "%zext_ln74_8 = zext i32 %tmp_23" [d4.cpp:74]   --->   Operation 359 'zext' 'zext_ln74_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 360 '%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53'
ST_2 : Operation 360 [1/1] (2.10ns)   --->   "%mul_ln74_16 = mul i64 %zext_ln74_8, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 360 'mul' 'mul_ln74_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_16)   --->   "%select_ln74_13 = select i1 %icmp_ln74_2, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 361 'select' 'select_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_16 = and i64 %mul_ln74_16, i64 %select_ln74_13" [d4.cpp:74]   --->   Operation 362 'and' 'and_ln74_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 363 [1/1] (0.00ns)   --->   "%zext_ln75_6 = zext i1 %icmp_ln74_2" [d4.cpp:75]   --->   Operation 363 'zext' 'zext_ln75_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 364 [1/1] (0.79ns)   --->   "%sub_ln78 = sub i4 %sub_ln78_11, i4 %zext_ln75_6" [d4.cpp:78]   --->   Operation 364 'sub' 'sub_ln78' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 365 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 366 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i32 %tmp_24" [d4.cpp:86]   --->   Operation 366 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 367 '%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast'
ST_2 : Operation 367 [1/1] (2.10ns)   --->   "%mul_ln86 = mul i64 %zext_ln86, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 367 'mul' 'mul_ln86' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_1)   --->   "%select_ln86_3 = select i1 %and_ln86, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 368 'select' 'select_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_1 = and i64 %mul_ln86, i64 %select_ln86_3" [d4.cpp:86]   --->   Operation 369 'and' 'and_ln86_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 370 [1/1] (0.44ns)   --->   "%select_ln86 = select i1 %and_ln86, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 370 'select' 'select_ln86' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 371 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i32 %select_ln86" [d4.cpp:86]   --->   Operation 371 'zext' 'zext_ln86_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 372 '%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86'
ST_2 : Operation 372 [1/1] (2.10ns)   --->   "%mul_ln86_1 = mul i64 %zext_ln86_1, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 372 'mul' 'mul_ln86_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_3)   --->   "%select_ln86_4 = select i1 %and_ln86_2, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 373 'select' 'select_ln86_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_3 = and i64 %mul_ln86_1, i64 %select_ln86_4" [d4.cpp:86]   --->   Operation 374 'and' 'and_ln86_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 375 [1/1] (0.00ns)   --->   "%sext_ln67 = sext i3 %sub_ln58_10" [d4.cpp:67]   --->   Operation 375 'sext' 'sext_ln67' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 376 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67" [d4.cpp:86]   --->   Operation 376 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i32 %tmp_27" [d4.cpp:86]   --->   Operation 377 'zext' 'zext_ln86_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 378 '%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86'
ST_2 : Operation 378 [1/1] (2.10ns)   --->   "%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 378 'mul' 'mul_ln86_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_5)   --->   "%select_ln86_5 = select i1 %and_ln86_4, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 379 'select' 'select_ln86_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 380 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_5 = and i64 %mul_ln86_2, i64 %select_ln86_5" [d4.cpp:86]   --->   Operation 380 'and' 'and_ln86_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.00ns)   --->   "%sext_ln67_1 = sext i3 %sub_ln58" [d4.cpp:67]   --->   Operation 381 'sext' 'sext_ln67_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 382 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_1" [d4.cpp:86]   --->   Operation 382 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i32 %tmp_29" [d4.cpp:86]   --->   Operation 383 'zext' 'zext_ln86_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 384 '%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86'
ST_2 : Operation 384 [1/1] (2.10ns)   --->   "%mul_ln86_3 = mul i64 %zext_ln86_3, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 384 'mul' 'mul_ln86_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_7)   --->   "%select_ln86_6 = select i1 %and_ln86_6, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 385 'select' 'select_ln86_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_7 = and i64 %mul_ln86_3, i64 %select_ln86_6" [d4.cpp:86]   --->   Operation 386 'and' 'and_ln86_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 387 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i1 %and_ln86_6" [d4.cpp:87]   --->   Operation 387 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 388 [1/1] (0.67ns)   --->   "%sub_ln58_1 = sub i4 %sext_ln67_1, i4 %zext_ln87" [d4.cpp:58]   --->   Operation 388 'sub' 'sub_ln58_1' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 389 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_1" [d4.cpp:86]   --->   Operation 389 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i32 %tmp_31" [d4.cpp:86]   --->   Operation 390 'zext' 'zext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 391 [1/1] (0.28ns)   --->   "%and_ln86_8 = and i1 %icmp_ln67_4, i1 %and_ln83" [d4.cpp:86]   --->   Operation 391 'and' 'and_ln86_8' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 392 '%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86'
ST_2 : Operation 392 [1/1] (2.10ns)   --->   "%mul_ln86_4 = mul i64 %zext_ln86_4, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 392 'mul' 'mul_ln86_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_9)   --->   "%select_ln86_7 = select i1 %and_ln86_8, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 393 'select' 'select_ln86_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 394 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_9 = and i64 %mul_ln86_4, i64 %select_ln86_7" [d4.cpp:86]   --->   Operation 394 'and' 'and_ln86_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.00ns)   --->   "%zext_ln87_1 = zext i1 %and_ln86_8" [d4.cpp:87]   --->   Operation 395 'zext' 'zext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 396 [1/1] (0.79ns)   --->   "%sub_ln58_2 = sub i4 %sub_ln58_1, i4 %zext_ln87_1" [d4.cpp:58]   --->   Operation 396 'sub' 'sub_ln58_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 397 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_2" [d4.cpp:86]   --->   Operation 397 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 398 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %tmp_33" [d4.cpp:86]   --->   Operation 398 'zext' 'zext_ln86_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_49)   --->   "%and_ln86_10 = and i1 %icmp_ln67_5, i1 %and_ln83" [d4.cpp:86]   --->   Operation 399 'and' 'and_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 400 '%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86'
ST_2 : Operation 400 [1/1] (2.10ns)   --->   "%mul_ln86_5 = mul i64 %zext_ln86_5, i64 %zext_ln86" [d4.cpp:86]   --->   Operation 400 'mul' 'mul_ln86_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_49)   --->   "%select_ln86_8 = select i1 %and_ln86_10, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 401 'select' 'select_ln86_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_49)   --->   "%and_ln86_11 = and i64 %mul_ln86_5, i64 %select_ln86_8" [d4.cpp:86]   --->   Operation 402 'and' 'and_ln86_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 403 [1/1] (0.48ns)   --->   "%tmp_34 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 403 'mux' 'tmp_34' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i32 %tmp_34" [d4.cpp:53]   --->   Operation 404 'zext' 'zext_ln53_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 405 [1/1] (0.48ns)   --->   "%tmp_35 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 405 'mux' 'tmp_35' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 406 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i32 %tmp_35" [d4.cpp:53]   --->   Operation 406 'zext' 'zext_ln53_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 407 [1/1] (1.01ns)   --->   "%add_ln53_3 = add i33 %zext_ln53_6, i33 %zext_ln74_40" [d4.cpp:53]   --->   Operation 407 'add' 'add_ln53_3' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 408 [1/1] (0.00ns)   --->   "%zext_ln53_7 = zext i33 %add_ln53_3" [d4.cpp:53]   --->   Operation 408 'zext' 'zext_ln53_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.47ns)   --->   Input mux for Operation 409 '%mul_ln53_1 = mul i64 %zext_ln53_7, i64 %zext_ln53_3'
ST_2 : Operation 409 [1/1] (2.93ns)   --->   "%mul_ln53_1 = mul i64 %zext_ln53_7, i64 %zext_ln53_3" [d4.cpp:53]   --->   Operation 409 'mul' 'mul_ln53_1' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.00ns)   --->   "%zext_ln53_11 = zext i1 %tmp_89" [d4.cpp:53]   --->   Operation 410 'zext' 'zext_ln53_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 411 [1/1] (0.17ns)   --->   "%select_ln53_1 = select i1 %tmp_89, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 411 'select' 'select_ln53_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_7)   --->   "%and_ln53_1 = and i64 %mul_ln53_1, i64 %select_ln53_1" [d4.cpp:53]   --->   Operation 412 'and' 'and_ln53_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 413 [1/1] (0.79ns)   --->   "%cmp86_1 = icmp_ugt  i4 %add_ln53_2, i4 6" [d4.cpp:53]   --->   Operation 413 'icmp' 'cmp86_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 414 [1/1] (0.66ns)   --->   "%tmp_36 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 414 'mux' 'tmp_36' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 415 [1/1] (0.00ns)   --->   "%zext_ln72_7 = zext i32 %tmp_36" [d4.cpp:72]   --->   Operation 415 'zext' 'zext_ln72_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 416 [1/1] (0.66ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 416 'mux' 'tmp_37' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 417 [1/1] (0.00ns)   --->   "%zext_ln83_6 = zext i32 %tmp_37" [d4.cpp:83]   --->   Operation 417 'zext' 'zext_ln83_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 418 '%mul_ln83_6 = mul i64 %zext_ln72_7, i64 %zext_ln53_3'
ST_2 : Operation 418 [1/1] (2.10ns)   --->   "%mul_ln83_6 = mul i64 %zext_ln72_7, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 418 'mul' 'mul_ln83_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 419 [1/1] (0.17ns)   --->   "%select_ln83_7 = select i1 %cmp86_1, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 419 'select' 'select_ln83_7' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 420 [1/1] (0.37ns)   --->   "%and_ln83_12 = and i64 %mul_ln83_6, i64 %select_ln83_7" [d4.cpp:83]   --->   Operation 420 'and' 'and_ln83_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 421 '%mul_ln83_7 = mul i64 %zext_ln83_6, i64 %zext_ln53_3'
ST_2 : Operation 421 [1/1] (2.10ns)   --->   "%mul_ln83_7 = mul i64 %zext_ln83_6, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 421 'mul' 'mul_ln83_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 422 [1/1] (0.17ns)   --->   "%select_ln83_8 = select i1 %cmp64_1, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 422 'select' 'select_ln83_8' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 423 [1/1] (0.37ns)   --->   "%and_ln83_13 = and i64 %mul_ln83_7, i64 %select_ln83_8" [d4.cpp:83]   --->   Operation 423 'and' 'and_ln83_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 424 '%mul_ln74_22 = mul i64 %zext_ln53_3, i64 %zext_ln72'
ST_2 : Operation 424 [1/1] (2.10ns)   --->   "%mul_ln74_22 = mul i64 %zext_ln53_3, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 424 'mul' 'mul_ln74_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 425 [1/1] (0.37ns)   --->   "%and_ln74_19 = and i64 %mul_ln74_22, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 425 'and' 'and_ln74_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 426 '%mul_ln74_23 = mul i64 %zext_ln53_3, i64 %conv101_cast'
ST_2 : Operation 426 [1/1] (2.10ns)   --->   "%mul_ln74_23 = mul i64 %zext_ln53_3, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 426 'mul' 'mul_ln74_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_20)   --->   "%select_ln74_16 = select i1 %icmp_ln63_6, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 427 'select' 'select_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 428 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_20 = and i64 %mul_ln74_23, i64 %select_ln74_16" [d4.cpp:74]   --->   Operation 428 'and' 'and_ln74_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 429 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 429 'mux' 'tmp_38' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 430 [1/1] (0.00ns)   --->   "%zext_ln83_7 = zext i32 %tmp_38" [d4.cpp:83]   --->   Operation 430 'zext' 'zext_ln83_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 431 [1/1] (0.79ns)   --->   "%icmp_ln83_5 = icmp_ult  i4 %add_ln53_2, i4 14" [d4.cpp:83]   --->   Operation 431 'icmp' 'icmp_ln83_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_15)   --->   "%and_ln83_14 = and i1 %icmp_ln83_5, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 432 'and' 'and_ln83_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 433 '%mul_ln83_8 = mul i64 %zext_ln83_7, i64 %zext_ln53_3'
ST_2 : Operation 433 [1/1] (2.10ns)   --->   "%mul_ln83_8 = mul i64 %zext_ln83_7, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 433 'mul' 'mul_ln83_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_15)   --->   "%select_ln83_10 = select i1 %and_ln83_14, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 434 'select' 'select_ln83_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 435 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_15 = and i64 %mul_ln83_8, i64 %select_ln83_10" [d4.cpp:83]   --->   Operation 435 'and' 'and_ln83_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 436 [1/1] (0.44ns)   --->   "%select_ln74_1 = select i1 %icmp_ln63_6, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 436 'select' 'select_ln74_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 437 [1/1] (0.00ns)   --->   "%zext_ln74_14 = zext i32 %select_ln74_1" [d4.cpp:74]   --->   Operation 437 'zext' 'zext_ln74_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 438 '%mul_ln74_24 = mul i64 %zext_ln53_3, i64 %zext_ln72_1'
ST_2 : Operation 438 [1/1] (2.10ns)   --->   "%mul_ln74_24 = mul i64 %zext_ln53_3, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 438 'mul' 'mul_ln74_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 439 [1/1] (0.37ns)   --->   "%and_ln74_21 = and i64 %mul_ln74_24, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 439 'and' 'and_ln74_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 440 '%mul_ln74_25 = mul i64 %zext_ln74_14, i64 %zext_ln53_3'
ST_2 : Operation 440 [1/1] (2.10ns)   --->   "%mul_ln74_25 = mul i64 %zext_ln74_14, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 440 'mul' 'mul_ln74_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_22)   --->   "%select_ln74_17 = select i1 %icmp_ln63_7, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 441 'select' 'select_ln74_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 442 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_22 = and i64 %mul_ln74_25, i64 %select_ln74_17" [d4.cpp:74]   --->   Operation 442 'and' 'and_ln74_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 443 [1/1] (0.00ns)   --->   "%sext_ln83_2 = sext i3 %sub_ln78_25" [d4.cpp:83]   --->   Operation 443 'sext' 'sext_ln83_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 444 [1/1] (0.48ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 444 'mux' 'tmp_39' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 445 [1/1] (0.00ns)   --->   "%zext_ln83_8 = zext i32 %tmp_39" [d4.cpp:83]   --->   Operation 445 'zext' 'zext_ln83_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 446 [1/1] (0.79ns)   --->   "%icmp_ln83_6 = icmp_ult  i4 %add_ln53_2, i4 13" [d4.cpp:83]   --->   Operation 446 'icmp' 'icmp_ln83_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_17)   --->   "%and_ln83_16 = and i1 %icmp_ln83_6, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 447 'and' 'and_ln83_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 448 '%mul_ln83_9 = mul i64 %zext_ln83_8, i64 %zext_ln53_3'
ST_2 : Operation 448 [1/1] (2.10ns)   --->   "%mul_ln83_9 = mul i64 %zext_ln83_8, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 448 'mul' 'mul_ln83_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_17)   --->   "%select_ln83_11 = select i1 %and_ln83_16, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 449 'select' 'select_ln83_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 450 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_17 = and i64 %mul_ln83_9, i64 %select_ln83_11" [d4.cpp:83]   --->   Operation 450 'and' 'and_ln83_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 451 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_2" [d4.cpp:74]   --->   Operation 451 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 452 [1/1] (0.00ns)   --->   "%zext_ln74_15 = zext i32 %tmp_40" [d4.cpp:74]   --->   Operation 452 'zext' 'zext_ln74_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 453 '%mul_ln74_26 = mul i64 %zext_ln53_3, i64 %zext_ln72_2'
ST_2 : Operation 453 [1/1] (2.10ns)   --->   "%mul_ln74_26 = mul i64 %zext_ln53_3, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 453 'mul' 'mul_ln74_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 454 [1/1] (0.37ns)   --->   "%and_ln74_23 = and i64 %mul_ln74_26, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 454 'and' 'and_ln74_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 455 '%mul_ln74_27 = mul i64 %zext_ln74_15, i64 %zext_ln53_3'
ST_2 : Operation 455 [1/1] (2.10ns)   --->   "%mul_ln74_27 = mul i64 %zext_ln74_15, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 455 'mul' 'mul_ln74_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_24)   --->   "%select_ln74_18 = select i1 %icmp_ln63_8, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 456 'select' 'select_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 457 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_24 = and i64 %mul_ln74_27, i64 %select_ln74_18" [d4.cpp:74]   --->   Operation 457 'and' 'and_ln74_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 458 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 458 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 459 [1/1] (0.00ns)   --->   "%zext_ln83_9 = zext i32 %tmp_41" [d4.cpp:83]   --->   Operation 459 'zext' 'zext_ln83_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 460 [1/1] (0.79ns)   --->   "%icmp_ln83_7 = icmp_ult  i4 %add_ln53_2, i4 12" [d4.cpp:83]   --->   Operation 460 'icmp' 'icmp_ln83_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_19)   --->   "%and_ln83_18 = and i1 %icmp_ln83_7, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 461 'and' 'and_ln83_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 462 '%mul_ln83_10 = mul i64 %zext_ln83_9, i64 %zext_ln53_3'
ST_2 : Operation 462 [1/1] (2.10ns)   --->   "%mul_ln83_10 = mul i64 %zext_ln83_9, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 462 'mul' 'mul_ln83_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 463 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_19)   --->   "%select_ln83_12 = select i1 %and_ln83_18, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 463 'select' 'select_ln83_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 464 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_19 = and i64 %mul_ln83_10, i64 %select_ln83_12" [d4.cpp:83]   --->   Operation 464 'and' 'and_ln83_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 465 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_3" [d4.cpp:74]   --->   Operation 465 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 466 [1/1] (0.00ns)   --->   "%zext_ln74_16 = zext i32 %tmp_42" [d4.cpp:74]   --->   Operation 466 'zext' 'zext_ln74_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 467 '%mul_ln74_28 = mul i64 %zext_ln53_3, i64 %zext_ln72_3'
ST_2 : Operation 467 [1/1] (2.10ns)   --->   "%mul_ln74_28 = mul i64 %zext_ln53_3, i64 %zext_ln72_3" [d4.cpp:74]   --->   Operation 467 'mul' 'mul_ln74_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 468 [1/1] (0.37ns)   --->   "%and_ln74_25 = and i64 %mul_ln74_28, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 468 'and' 'and_ln74_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 469 '%mul_ln74_29 = mul i64 %zext_ln74_16, i64 %zext_ln53_3'
ST_2 : Operation 469 [1/1] (2.10ns)   --->   "%mul_ln74_29 = mul i64 %zext_ln74_16, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 469 'mul' 'mul_ln74_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 470 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_26)   --->   "%select_ln74_19 = select i1 %icmp_ln63_9, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 470 'select' 'select_ln74_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 471 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_26 = and i64 %mul_ln74_29, i64 %select_ln74_19" [d4.cpp:74]   --->   Operation 471 'and' 'and_ln74_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 472 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 472 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 473 [1/1] (0.00ns)   --->   "%zext_ln83_10 = zext i32 %tmp_43" [d4.cpp:83]   --->   Operation 473 'zext' 'zext_ln83_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 474 [1/1] (0.79ns)   --->   "%icmp_ln83_8 = icmp_ult  i4 %add_ln53_2, i4 11" [d4.cpp:83]   --->   Operation 474 'icmp' 'icmp_ln83_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_21)   --->   "%and_ln83_20 = and i1 %icmp_ln83_8, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 475 'and' 'and_ln83_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 476 '%mul_ln83_11 = mul i64 %zext_ln83_10, i64 %zext_ln53_3'
ST_2 : Operation 476 [1/1] (2.10ns)   --->   "%mul_ln83_11 = mul i64 %zext_ln83_10, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 476 'mul' 'mul_ln83_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 477 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_21)   --->   "%select_ln83_13 = select i1 %and_ln83_20, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 477 'select' 'select_ln83_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 478 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_21 = and i64 %mul_ln83_11, i64 %select_ln83_13" [d4.cpp:83]   --->   Operation 478 'and' 'and_ln83_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 479 [1/1] (0.48ns)   --->   "%tmp_44 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_19" [d4.cpp:74]   --->   Operation 479 'mux' 'tmp_44' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 480 [1/1] (0.00ns)   --->   "%zext_ln74_17 = zext i32 %tmp_44" [d4.cpp:74]   --->   Operation 480 'zext' 'zext_ln74_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 481 '%mul_ln74_30 = mul i64 %zext_ln53_3, i64 %zext_ln72_4'
ST_2 : Operation 481 [1/1] (2.10ns)   --->   "%mul_ln74_30 = mul i64 %zext_ln53_3, i64 %zext_ln72_4" [d4.cpp:74]   --->   Operation 481 'mul' 'mul_ln74_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 482 [1/1] (0.37ns)   --->   "%and_ln74_27 = and i64 %mul_ln74_30, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 482 'and' 'and_ln74_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 483 '%mul_ln74_31 = mul i64 %zext_ln74_17, i64 %zext_ln53_3'
ST_2 : Operation 483 [1/1] (2.10ns)   --->   "%mul_ln74_31 = mul i64 %zext_ln74_17, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 483 'mul' 'mul_ln74_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_28)   --->   "%select_ln74_20 = select i1 %icmp_ln63_10, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 484 'select' 'select_ln74_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 485 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_28 = and i64 %mul_ln74_31, i64 %select_ln74_20" [d4.cpp:74]   --->   Operation 485 'and' 'and_ln74_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 486 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 486 'mux' 'tmp_45' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 487 [1/1] (0.00ns)   --->   "%zext_ln83_11 = zext i32 %tmp_45" [d4.cpp:83]   --->   Operation 487 'zext' 'zext_ln83_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 488 [1/1] (0.79ns)   --->   "%icmp_ln83_9 = icmp_ult  i4 %add_ln53_2, i4 10" [d4.cpp:83]   --->   Operation 488 'icmp' 'icmp_ln83_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 489 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_23)   --->   "%and_ln83_22 = and i1 %icmp_ln83_9, i1 %cmp64_1" [d4.cpp:83]   --->   Operation 489 'and' 'and_ln83_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 490 '%mul_ln83_12 = mul i64 %zext_ln83_11, i64 %zext_ln53_3'
ST_2 : Operation 490 [1/1] (2.10ns)   --->   "%mul_ln83_12 = mul i64 %zext_ln83_11, i64 %zext_ln53_3" [d4.cpp:83]   --->   Operation 490 'mul' 'mul_ln83_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_23)   --->   "%select_ln83_14 = select i1 %and_ln83_22, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 491 'select' 'select_ln83_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 492 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_23 = and i64 %mul_ln83_12, i64 %select_ln83_14" [d4.cpp:83]   --->   Operation 492 'and' 'and_ln83_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 493 [1/1] (0.48ns)   --->   "%tmp_46 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_20" [d4.cpp:74]   --->   Operation 493 'mux' 'tmp_46' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 494 [1/1] (0.00ns)   --->   "%zext_ln74_18 = zext i32 %tmp_46" [d4.cpp:74]   --->   Operation 494 'zext' 'zext_ln74_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 495 '%mul_ln74_32 = mul i64 %zext_ln53_3, i64 %zext_ln72_5'
ST_2 : Operation 495 [1/1] (2.10ns)   --->   "%mul_ln74_32 = mul i64 %zext_ln53_3, i64 %zext_ln72_5" [d4.cpp:74]   --->   Operation 495 'mul' 'mul_ln74_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_49)   --->   "%and_ln74_29 = and i64 %mul_ln74_32, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 496 'and' 'and_ln74_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 497 '%mul_ln74_33 = mul i64 %zext_ln74_18, i64 %zext_ln53_3'
ST_2 : Operation 497 [1/1] (2.10ns)   --->   "%mul_ln74_33 = mul i64 %zext_ln74_18, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 497 'mul' 'mul_ln74_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_30)   --->   "%select_ln74_21 = select i1 %icmp_ln63_11, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 498 'select' 'select_ln74_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 499 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_30 = and i64 %mul_ln74_33, i64 %select_ln74_21" [d4.cpp:74]   --->   Operation 499 'and' 'and_ln74_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 500 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_12" [d4.cpp:74]   --->   Operation 500 'mux' 'tmp_47' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 501 [1/1] (0.00ns)   --->   "%zext_ln74_19 = zext i32 %tmp_47" [d4.cpp:74]   --->   Operation 501 'zext' 'zext_ln74_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 502 '%mul_ln74_34 = mul i64 %zext_ln74_19, i64 %zext_ln53_3'
ST_2 : Operation 502 [1/1] (2.10ns)   --->   "%mul_ln74_34 = mul i64 %zext_ln74_19, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 502 'mul' 'mul_ln74_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%select_ln74_22 = select i1 %cmp64, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 503 'select' 'select_ln74_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%and_ln74_31 = and i64 %mul_ln74_34, i64 %select_ln74_22" [d4.cpp:74]   --->   Operation 504 'and' 'and_ln74_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 505 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_11" [d4.cpp:74]   --->   Operation 505 'mux' 'tmp_48' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 506 [1/1] (0.00ns)   --->   "%zext_ln74_20 = zext i32 %tmp_48" [d4.cpp:74]   --->   Operation 506 'zext' 'zext_ln74_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 507 '%mul_ln74_35 = mul i64 %zext_ln74_20, i64 %zext_ln53_3'
ST_2 : Operation 507 [1/1] (2.10ns)   --->   "%mul_ln74_35 = mul i64 %zext_ln74_20, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 507 'mul' 'mul_ln74_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 508 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_3)   --->   "%and_ln74_32 = and i64 %mul_ln74_35, i64 %select_ln53" [d4.cpp:74]   --->   Operation 508 'and' 'and_ln74_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 509 [1/1] (0.79ns)   --->   "%sub_ln58_12 = sub i4 %sub_ln58_11, i4 %zext_ln53_10" [d4.cpp:58]   --->   Operation 509 'sub' 'sub_ln58_12' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 510 [1/1] (0.48ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_12" [d4.cpp:74]   --->   Operation 510 'mux' 'tmp_49' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 511 [1/1] (0.00ns)   --->   "%zext_ln74_21 = zext i32 %tmp_49" [d4.cpp:74]   --->   Operation 511 'zext' 'zext_ln74_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 512 '%mul_ln74_36 = mul i64 %zext_ln74_21, i64 %zext_ln53_3'
ST_2 : Operation 512 [1/1] (2.10ns)   --->   "%mul_ln74_36 = mul i64 %zext_ln74_21, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 512 'mul' 'mul_ln74_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 513 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_6)   --->   "%and_ln74_33 = and i64 %mul_ln74_36, i64 %select_ln74_3" [d4.cpp:74]   --->   Operation 513 'and' 'and_ln74_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 514 [1/1] (0.00ns)   --->   "%zext_ln75_13 = zext i1 %cmp86" [d4.cpp:75]   --->   Operation 514 'zext' 'zext_ln75_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 515 [1/1] (0.79ns)   --->   "%sub_ln78_13 = sub i4 %sub_ln58_12, i4 %zext_ln75_13" [d4.cpp:78]   --->   Operation 515 'sub' 'sub_ln78_13' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 516 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 516 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 517 [1/1] (0.00ns)   --->   "%zext_ln86_6 = zext i32 %tmp_50" [d4.cpp:86]   --->   Operation 517 'zext' 'zext_ln86_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 518 '%mul_ln86_6 = mul i64 %zext_ln86_6, i64 %conv101_cast'
ST_2 : Operation 518 [1/1] (2.10ns)   --->   "%mul_ln86_6 = mul i64 %zext_ln86_6, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 518 'mul' 'mul_ln86_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 519 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_13)   --->   "%select_ln86_9 = select i1 %and_ln86_12, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 519 'select' 'select_ln86_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 520 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_13 = and i64 %mul_ln86_6, i64 %select_ln86_9" [d4.cpp:86]   --->   Operation 520 'and' 'and_ln86_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 521 [1/1] (0.79ns)   --->   "%icmp_ln74_5 = icmp_ugt  i4 %i_1, i4 5" [d4.cpp:74]   --->   Operation 521 'icmp' 'icmp_ln74_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 522 [1/1] (0.00ns)   --->   "%zext_ln75_14 = zext i1 %icmp_ln74_5" [d4.cpp:75]   --->   Operation 522 'zext' 'zext_ln75_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 523 [1/1] (0.79ns)   --->   "%sub_ln78_3 = sub i4 %sub_ln78_13, i4 %zext_ln75_14" [d4.cpp:78]   --->   Operation 523 'sub' 'sub_ln78_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 524 [1/1] (0.44ns)   --->   "%select_ln86_1 = select i1 %and_ln86_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 524 'select' 'select_ln86_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 525 [1/1] (0.00ns)   --->   "%zext_ln86_7 = zext i32 %select_ln86_1" [d4.cpp:86]   --->   Operation 525 'zext' 'zext_ln86_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 526 '%mul_ln86_7 = mul i64 %zext_ln86_7, i64 %zext_ln86_6'
ST_2 : Operation 526 [1/1] (2.10ns)   --->   "%mul_ln86_7 = mul i64 %zext_ln86_7, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 526 'mul' 'mul_ln86_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%select_ln86_10 = select i1 %and_ln86_14, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 527 'select' 'select_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 528 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%and_ln86_15 = and i64 %mul_ln86_7, i64 %select_ln86_10" [d4.cpp:86]   --->   Operation 528 'and' 'and_ln86_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 529 [1/1] (0.00ns)   --->   "%sext_ln67_2 = sext i3 %sub_ln58_13" [d4.cpp:67]   --->   Operation 529 'sext' 'sext_ln67_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 530 [1/1] (0.79ns)   --->   "%icmp_ln74_6 = icmp_ugt  i4 %i_1, i4 4" [d4.cpp:74]   --->   Operation 530 'icmp' 'icmp_ln74_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 531 [1/1] (0.00ns)   --->   "%zext_ln75_15 = zext i1 %icmp_ln74_6" [d4.cpp:75]   --->   Operation 531 'zext' 'zext_ln75_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 532 [1/1] (0.79ns)   --->   "%sub_ln78_4 = sub i4 %sub_ln78_3, i4 %zext_ln75_15" [d4.cpp:78]   --->   Operation 532 'sub' 'sub_ln78_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 533 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_2" [d4.cpp:86]   --->   Operation 533 'mux' 'tmp_53' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 534 [1/1] (0.00ns)   --->   "%zext_ln86_8 = zext i32 %tmp_53" [d4.cpp:86]   --->   Operation 534 'zext' 'zext_ln86_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 535 '%mul_ln86_8 = mul i64 %zext_ln86_8, i64 %zext_ln86_6'
ST_2 : Operation 535 [1/1] (2.10ns)   --->   "%mul_ln86_8 = mul i64 %zext_ln86_8, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 535 'mul' 'mul_ln86_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 536 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%select_ln86_11 = select i1 %and_ln86_16, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 536 'select' 'select_ln86_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 537 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln86_17 = and i64 %mul_ln86_8, i64 %select_ln86_11" [d4.cpp:86]   --->   Operation 537 'and' 'and_ln86_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 538 [1/1] (0.00ns)   --->   "%zext_ln58_3 = zext i1 %and_ln86_16" [d4.cpp:58]   --->   Operation 538 'zext' 'zext_ln58_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 539 [1/1] (0.67ns)   --->   "%sub_ln58_3 = sub i3 %sub_ln58_13, i3 %zext_ln58_3" [d4.cpp:58]   --->   Operation 539 'sub' 'sub_ln58_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 540 [1/1] (0.00ns)   --->   "%sext_ln67_3 = sext i3 %sub_ln58_3" [d4.cpp:67]   --->   Operation 540 'sext' 'sext_ln67_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 541 [1/1] (0.00ns)   --->   "%tmp_91 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i_1, i32 2, i32 3" [d4.cpp:74]   --->   Operation 541 'partselect' 'tmp_91' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 542 [1/1] (0.54ns)   --->   "%icmp_ln74_7 = icmp_ne  i2 %tmp_91, i2 0" [d4.cpp:74]   --->   Operation 542 'icmp' 'icmp_ln74_7' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 543 [1/1] (0.48ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_3" [d4.cpp:86]   --->   Operation 543 'mux' 'tmp_55' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 544 [1/1] (0.00ns)   --->   "%zext_ln86_9 = zext i32 %tmp_55" [d4.cpp:86]   --->   Operation 544 'zext' 'zext_ln86_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 545 '%mul_ln86_9 = mul i64 %zext_ln86_9, i64 %zext_ln86_6'
ST_2 : Operation 545 [1/1] (2.10ns)   --->   "%mul_ln86_9 = mul i64 %zext_ln86_9, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 545 'mul' 'mul_ln86_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 546 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_31)   --->   "%select_ln86_12 = select i1 %and_ln86_18, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 546 'select' 'select_ln86_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 547 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_31)   --->   "%and_ln86_19 = and i64 %mul_ln86_9, i64 %select_ln86_12" [d4.cpp:86]   --->   Operation 547 'and' 'and_ln86_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 548 [1/1] (0.00ns)   --->   "%zext_ln87_2 = zext i1 %and_ln86_18" [d4.cpp:87]   --->   Operation 548 'zext' 'zext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 549 [1/1] (0.67ns)   --->   "%sub_ln58_4 = sub i4 %sext_ln67_3, i4 %zext_ln87_2" [d4.cpp:58]   --->   Operation 549 'sub' 'sub_ln58_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 550 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_4" [d4.cpp:86]   --->   Operation 550 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 551 [1/1] (0.00ns)   --->   "%zext_ln86_10 = zext i32 %tmp_57" [d4.cpp:86]   --->   Operation 551 'zext' 'zext_ln86_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 552 [1/1] (0.28ns)   --->   "%and_ln86_20 = and i1 %icmp_ln67_9, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 552 'and' 'and_ln86_20' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 553 '%mul_ln86_10 = mul i64 %zext_ln86_10, i64 %zext_ln86_6'
ST_2 : Operation 553 [1/1] (2.10ns)   --->   "%mul_ln86_10 = mul i64 %zext_ln86_10, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 553 'mul' 'mul_ln86_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 554 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_42)   --->   "%select_ln86_13 = select i1 %and_ln86_20, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 554 'select' 'select_ln86_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 555 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_42)   --->   "%and_ln86_21 = and i64 %mul_ln86_10, i64 %select_ln86_13" [d4.cpp:86]   --->   Operation 555 'and' 'and_ln86_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 556 [1/1] (0.00ns)   --->   "%zext_ln87_3 = zext i1 %and_ln86_20" [d4.cpp:87]   --->   Operation 556 'zext' 'zext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 557 [1/1] (0.79ns)   --->   "%sub_ln58_5 = sub i4 %sub_ln58_4, i4 %zext_ln87_3" [d4.cpp:58]   --->   Operation 557 'sub' 'sub_ln58_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 558 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_5" [d4.cpp:86]   --->   Operation 558 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 559 [1/1] (0.00ns)   --->   "%zext_ln86_11 = zext i32 %tmp_59" [d4.cpp:86]   --->   Operation 559 'zext' 'zext_ln86_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 560 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_23)   --->   "%and_ln86_22 = and i1 %icmp_ln67_10, i1 %cmp64_1" [d4.cpp:86]   --->   Operation 560 'and' 'and_ln86_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 561 '%mul_ln86_11 = mul i64 %zext_ln86_11, i64 %zext_ln86_6'
ST_2 : Operation 561 [1/1] (2.10ns)   --->   "%mul_ln86_11 = mul i64 %zext_ln86_11, i64 %zext_ln86_6" [d4.cpp:86]   --->   Operation 561 'mul' 'mul_ln86_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 562 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_23)   --->   "%select_ln86_14 = select i1 %and_ln86_22, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 562 'select' 'select_ln86_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 563 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_23 = and i64 %mul_ln86_11, i64 %select_ln86_14" [d4.cpp:86]   --->   Operation 563 'and' 'and_ln86_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 564 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_1" [d4.cpp:53]   --->   Operation 564 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 565 [1/1] (0.00ns)   --->   "%zext_ln53_5 = zext i32 %tmp_60" [d4.cpp:53]   --->   Operation 565 'zext' 'zext_ln53_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 566 [1/1] (0.78ns)   --->   "%add_ln53_5 = add i5 %k1_load, i5 3" [d4.cpp:53]   --->   Operation 566 'add' 'add_ln53_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 567 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %trunc_ln42" [d4.cpp:53]   --->   Operation 567 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 568 [1/1] (0.00ns)   --->   "%zext_ln53_8 = zext i32 %tmp_61" [d4.cpp:53]   --->   Operation 568 'zext' 'zext_ln53_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 569 [1/1] (1.01ns)   --->   "%add_ln53_6 = add i33 %zext_ln53_8, i33 %zext_ln74_39" [d4.cpp:53]   --->   Operation 569 'add' 'add_ln53_6' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 570 [1/1] (0.00ns)   --->   "%zext_ln53_9 = zext i33 %add_ln53_6" [d4.cpp:53]   --->   Operation 570 'zext' 'zext_ln53_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.47ns)   --->   Input mux for Operation 571 '%mul_ln53_2 = mul i64 %zext_ln53_9, i64 %zext_ln53_5'
ST_2 : Operation 571 [1/1] (2.93ns)   --->   "%mul_ln53_2 = mul i64 %zext_ln53_9, i64 %zext_ln53_5" [d4.cpp:53]   --->   Operation 571 'mul' 'mul_ln53_2' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_7)   --->   "%select_ln53_2 = select i1 %icmp_ln53, i64 18446744073709551615, i64 0" [d4.cpp:53]   --->   Operation 572 'select' 'select_ln53_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 573 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_7)   --->   "%and_ln53_2 = and i64 %mul_ln53_2, i64 %select_ln53_2" [d4.cpp:53]   --->   Operation 573 'and' 'and_ln53_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 574 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln53_7 = add i64 %and_ln53_1, i64 %and_ln53_2" [d4.cpp:53]   --->   Operation 574 'add' 'add_ln53_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 575 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53_8 = add i64 %add_ln53_7, i64 %and_ln53" [d4.cpp:53]   --->   Operation 575 'add' 'add_ln53_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 576 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln53_9 = add i64 %p_load91, i64 %add_ln53_8" [d4.cpp:53]   --->   Operation 576 'add' 'add_ln53_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 577 [1/1] (0.78ns)   --->   "%cmp86_2 = icmp_sgt  i5 %add_ln53_4, i5 6" [d4.cpp:53]   --->   Operation 577 'icmp' 'cmp86_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 578 [1/1] (0.66ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load" [d4.cpp:72]   --->   Operation 578 'mux' 'tmp_62' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 579 [1/1] (0.00ns)   --->   "%zext_ln72_8 = zext i32 %tmp_62" [d4.cpp:72]   --->   Operation 579 'zext' 'zext_ln72_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 580 [1/1] (0.66ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %xor_ln83" [d4.cpp:83]   --->   Operation 580 'mux' 'tmp_63' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 581 [1/1] (0.00ns)   --->   "%zext_ln83_12 = zext i32 %tmp_63" [d4.cpp:83]   --->   Operation 581 'zext' 'zext_ln83_12' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 582 '%mul_ln83_13 = mul i64 %zext_ln72_8, i64 %zext_ln53_5'
ST_2 : Operation 582 [1/1] (2.10ns)   --->   "%mul_ln83_13 = mul i64 %zext_ln72_8, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 582 'mul' 'mul_ln83_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 583 [1/1] (0.17ns)   --->   "%select_ln83_15 = select i1 %cmp86_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 583 'select' 'select_ln83_15' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 584 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_3)   --->   "%and_ln83_24 = and i64 %mul_ln83_13, i64 %select_ln83_15" [d4.cpp:83]   --->   Operation 584 'and' 'and_ln83_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 585 '%mul_ln83_14 = mul i64 %zext_ln83_12, i64 %zext_ln53_5'
ST_2 : Operation 585 [1/1] (2.10ns)   --->   "%mul_ln83_14 = mul i64 %zext_ln83_12, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 585 'mul' 'mul_ln83_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 586 [1/1] (0.17ns)   --->   "%select_ln83_16 = select i1 %cmp64_2, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 586 'select' 'select_ln83_16' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 587 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_3)   --->   "%and_ln83_25 = and i64 %mul_ln83_14, i64 %select_ln83_16" [d4.cpp:83]   --->   Operation 587 'and' 'and_ln83_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 588 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83 = add i64 %and_ln74, i64 %and_ln83_1" [d4.cpp:83]   --->   Operation 588 'add' 'add_ln83' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 589 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_1 = add i64 %add_ln83, i64 %and_ln74_1" [d4.cpp:83]   --->   Operation 589 'add' 'add_ln83_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 590 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_2 = add i64 %and_ln83_12, i64 %and_ln83_13" [d4.cpp:83]   --->   Operation 590 'add' 'add_ln83_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 591 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln83_3 = add i64 %and_ln83_24, i64 %and_ln83_25" [d4.cpp:83]   --->   Operation 591 'add' 'add_ln83_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 592 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_4 = add i64 %add_ln83_3, i64 %add_ln83_2" [d4.cpp:83]   --->   Operation 592 'add' 'add_ln83_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 593 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i4 %sub_ln83" [d4.cpp:83]   --->   Operation 593 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 594 [1/1] (0.00ns)   --->   "%zext_ln83_13 = zext i32 %tmp_64" [d4.cpp:83]   --->   Operation 594 'zext' 'zext_ln83_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 595 '%mul_ln83_15 = mul i64 %zext_ln53_5, i64 %zext_ln72_7'
ST_2 : Operation 595 [1/1] (2.10ns)   --->   "%mul_ln83_15 = mul i64 %zext_ln53_5, i64 %zext_ln72_7" [d4.cpp:83]   --->   Operation 595 'mul' 'mul_ln83_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 596 [1/1] (0.37ns)   --->   "%and_ln83_26 = and i64 %mul_ln83_15, i64 %select_ln83_15" [d4.cpp:83]   --->   Operation 596 'and' 'and_ln83_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 597 '%mul_ln83_16 = mul i64 %zext_ln83_13, i64 %zext_ln53_5'
ST_2 : Operation 597 [1/1] (2.10ns)   --->   "%mul_ln83_16 = mul i64 %zext_ln83_13, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 597 'mul' 'mul_ln83_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 598 [1/1] (0.37ns)   --->   "%and_ln83_27 = and i64 %mul_ln83_16, i64 %select_ln83_16" [d4.cpp:83]   --->   Operation 598 'and' 'and_ln83_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 599 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_7 = add i64 %and_ln74_2, i64 %and_ln74_3" [d4.cpp:83]   --->   Operation 599 'add' 'add_ln83_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 600 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_8 = add i64 %and_ln86_1, i64 %and_ln74_19" [d4.cpp:83]   --->   Operation 600 'add' 'add_ln83_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 601 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_9 = add i64 %add_ln83_8, i64 %and_ln83_3" [d4.cpp:83]   --->   Operation 601 'add' 'add_ln83_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 602 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_10 = add i64 %add_ln83_9, i64 %add_ln83_7" [d4.cpp:83]   --->   Operation 602 'add' 'add_ln83_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_11 = add i64 %and_ln74_20, i64 %and_ln83_15" [d4.cpp:83]   --->   Operation 603 'add' 'add_ln83_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 604 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_13 = add i64 %and_ln83_26, i64 %and_ln83_27" [d4.cpp:83]   --->   Operation 604 'add' 'add_ln83_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 605 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_14 = add i64 %add_ln83_13, i64 %and_ln86_13" [d4.cpp:83]   --->   Operation 605 'add' 'add_ln83_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 606 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_15 = add i64 %add_ln83_14, i64 %add_ln83_11" [d4.cpp:83]   --->   Operation 606 'add' 'add_ln83_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 607 '%mul_ln74_42 = mul i64 %zext_ln53_5, i64 %zext_ln72'
ST_2 : Operation 607 [1/1] (2.10ns)   --->   "%mul_ln74_42 = mul i64 %zext_ln53_5, i64 %zext_ln72" [d4.cpp:74]   --->   Operation 607 'mul' 'mul_ln74_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 608 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_5)   --->   "%and_ln74_37 = and i64 %mul_ln74_42, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 608 'and' 'and_ln74_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 609 '%mul_ln74_43 = mul i64 %zext_ln53_5, i64 %conv101_cast'
ST_2 : Operation 609 [1/1] (2.10ns)   --->   "%mul_ln74_43 = mul i64 %zext_ln53_5, i64 %conv101_cast" [d4.cpp:74]   --->   Operation 609 'mul' 'mul_ln74_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 610 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_38)   --->   "%select_ln74_26 = select i1 %icmp_ln63_12, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 610 'select' 'select_ln74_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 611 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_38 = and i64 %mul_ln74_43, i64 %select_ln74_26" [d4.cpp:74]   --->   Operation 611 'and' 'and_ln74_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 612 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_1" [d4.cpp:83]   --->   Operation 612 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 613 [1/1] (0.00ns)   --->   "%zext_ln83_14 = zext i32 %tmp_65" [d4.cpp:83]   --->   Operation 613 'zext' 'zext_ln83_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 614 [1/1] (0.78ns)   --->   "%icmp_ln83_10 = icmp_slt  i5 %add_ln53_4, i5 13" [d4.cpp:83]   --->   Operation 614 'icmp' 'icmp_ln83_10' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 615 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_29)   --->   "%and_ln83_28 = and i1 %icmp_ln83_10, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 615 'and' 'and_ln83_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 616 '%mul_ln83_17 = mul i64 %zext_ln83_14, i64 %zext_ln53_5'
ST_2 : Operation 616 [1/1] (2.10ns)   --->   "%mul_ln83_17 = mul i64 %zext_ln83_14, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 616 'mul' 'mul_ln83_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 617 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_29)   --->   "%select_ln83_18 = select i1 %and_ln83_28, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 617 'select' 'select_ln83_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 618 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_29 = and i64 %mul_ln83_17, i64 %select_ln83_18" [d4.cpp:83]   --->   Operation 618 'and' 'and_ln83_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 619 [1/1] (0.44ns)   --->   "%select_ln74_2 = select i1 %icmp_ln63_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:74]   --->   Operation 619 'select' 'select_ln74_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 620 [1/1] (0.00ns)   --->   "%zext_ln74_27 = zext i32 %select_ln74_2" [d4.cpp:74]   --->   Operation 620 'zext' 'zext_ln74_27' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 621 '%mul_ln74_44 = mul i64 %zext_ln53_5, i64 %zext_ln72_1'
ST_2 : Operation 621 [1/1] (2.10ns)   --->   "%mul_ln74_44 = mul i64 %zext_ln53_5, i64 %zext_ln72_1" [d4.cpp:74]   --->   Operation 621 'mul' 'mul_ln74_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 622 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_20)   --->   "%and_ln74_39 = and i64 %mul_ln74_44, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 622 'and' 'and_ln74_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 623 '%mul_ln74_45 = mul i64 %zext_ln74_27, i64 %zext_ln53_5'
ST_2 : Operation 623 [1/1] (2.10ns)   --->   "%mul_ln74_45 = mul i64 %zext_ln74_27, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 623 'mul' 'mul_ln74_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 624 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_40)   --->   "%select_ln74_27 = select i1 %icmp_ln63_13, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 624 'select' 'select_ln74_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 625 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_40 = and i64 %mul_ln74_45, i64 %select_ln74_27" [d4.cpp:74]   --->   Operation 625 'and' 'and_ln74_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 626 [1/1] (0.00ns)   --->   "%sext_ln83_4 = sext i3 %sub_ln78_26" [d4.cpp:83]   --->   Operation 626 'sext' 'sext_ln83_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 627 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_2" [d4.cpp:83]   --->   Operation 627 'mux' 'tmp_66' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 628 [1/1] (0.00ns)   --->   "%zext_ln83_15 = zext i32 %tmp_66" [d4.cpp:83]   --->   Operation 628 'zext' 'zext_ln83_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 629 [1/1] (0.78ns)   --->   "%icmp_ln83_11 = icmp_slt  i5 %add_ln53_4, i5 12" [d4.cpp:83]   --->   Operation 629 'icmp' 'icmp_ln83_11' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 630 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_31)   --->   "%and_ln83_30 = and i1 %icmp_ln83_11, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 630 'and' 'and_ln83_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 631 '%mul_ln83_18 = mul i64 %zext_ln83_15, i64 %zext_ln53_5'
ST_2 : Operation 631 [1/1] (2.10ns)   --->   "%mul_ln83_18 = mul i64 %zext_ln83_15, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 631 'mul' 'mul_ln83_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 632 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_31)   --->   "%select_ln83_19 = select i1 %and_ln83_30, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 632 'select' 'select_ln83_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 633 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_31 = and i64 %mul_ln83_18, i64 %select_ln83_19" [d4.cpp:83]   --->   Operation 633 'and' 'and_ln83_31' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 634 [1/1] (0.48ns)   --->   "%tmp_67 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_4" [d4.cpp:74]   --->   Operation 634 'mux' 'tmp_67' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 635 [1/1] (0.00ns)   --->   "%zext_ln74_28 = zext i32 %tmp_67" [d4.cpp:74]   --->   Operation 635 'zext' 'zext_ln74_28' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 636 '%mul_ln74_46 = mul i64 %zext_ln53_5, i64 %zext_ln72_2'
ST_2 : Operation 636 [1/1] (2.10ns)   --->   "%mul_ln74_46 = mul i64 %zext_ln53_5, i64 %zext_ln72_2" [d4.cpp:74]   --->   Operation 636 'mul' 'mul_ln74_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_31)   --->   "%and_ln74_41 = and i64 %mul_ln74_46, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 637 'and' 'and_ln74_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 638 '%mul_ln74_47 = mul i64 %zext_ln74_28, i64 %zext_ln53_5'
ST_2 : Operation 638 [1/1] (2.10ns)   --->   "%mul_ln74_47 = mul i64 %zext_ln74_28, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 638 'mul' 'mul_ln74_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 639 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_42)   --->   "%select_ln74_28 = select i1 %icmp_ln63_14, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 639 'select' 'select_ln74_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 640 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_42 = and i64 %mul_ln74_47, i64 %select_ln74_28" [d4.cpp:74]   --->   Operation 640 'and' 'and_ln74_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 641 [1/1] (0.48ns)   --->   "%tmp_68 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_3" [d4.cpp:83]   --->   Operation 641 'mux' 'tmp_68' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 642 [1/1] (0.00ns)   --->   "%zext_ln83_16 = zext i32 %tmp_68" [d4.cpp:83]   --->   Operation 642 'zext' 'zext_ln83_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 643 [1/1] (0.78ns)   --->   "%icmp_ln83_12 = icmp_slt  i5 %add_ln53_4, i5 11" [d4.cpp:83]   --->   Operation 643 'icmp' 'icmp_ln83_12' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 644 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_33)   --->   "%and_ln83_32 = and i1 %icmp_ln83_12, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 644 'and' 'and_ln83_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 645 '%mul_ln83_19 = mul i64 %zext_ln83_16, i64 %zext_ln53_5'
ST_2 : Operation 645 [1/1] (2.10ns)   --->   "%mul_ln83_19 = mul i64 %zext_ln83_16, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 645 'mul' 'mul_ln83_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 646 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_33)   --->   "%select_ln83_20 = select i1 %and_ln83_32, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 646 'select' 'select_ln83_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 647 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_33 = and i64 %mul_ln83_19, i64 %select_ln83_20" [d4.cpp:83]   --->   Operation 647 'and' 'and_ln83_33' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 648 [1/1] (0.48ns)   --->   "%tmp_69 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln83_5" [d4.cpp:74]   --->   Operation 648 'mux' 'tmp_69' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 649 [1/1] (0.00ns)   --->   "%zext_ln74_29 = zext i32 %tmp_69" [d4.cpp:74]   --->   Operation 649 'zext' 'zext_ln74_29' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 650 '%mul_ln74_48 = mul i64 %zext_ln53_5, i64 %zext_ln72_3'
ST_2 : Operation 650 [1/1] (2.10ns)   --->   "%mul_ln74_48 = mul i64 %zext_ln53_5, i64 %zext_ln72_3" [d4.cpp:74]   --->   Operation 650 'mul' 'mul_ln74_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 651 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_42)   --->   "%and_ln74_43 = and i64 %mul_ln74_48, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 651 'and' 'and_ln74_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 652 '%mul_ln74_49 = mul i64 %zext_ln74_29, i64 %zext_ln53_5'
ST_2 : Operation 652 [1/1] (2.10ns)   --->   "%mul_ln74_49 = mul i64 %zext_ln74_29, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 652 'mul' 'mul_ln74_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_44)   --->   "%select_ln74_29 = select i1 %icmp_ln63_15, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 653 'select' 'select_ln74_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 654 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_44 = and i64 %mul_ln74_49, i64 %select_ln74_29" [d4.cpp:74]   --->   Operation 654 'and' 'and_ln74_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 655 [1/1] (0.48ns)   --->   "%tmp_70 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln83_4" [d4.cpp:83]   --->   Operation 655 'mux' 'tmp_70' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 656 [1/1] (0.00ns)   --->   "%zext_ln83_17 = zext i32 %tmp_70" [d4.cpp:83]   --->   Operation 656 'zext' 'zext_ln83_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 657 [1/1] (0.78ns)   --->   "%icmp_ln83_13 = icmp_slt  i5 %add_ln53_4, i5 10" [d4.cpp:83]   --->   Operation 657 'icmp' 'icmp_ln83_13' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 658 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_35)   --->   "%and_ln83_34 = and i1 %icmp_ln83_13, i1 %cmp64_2" [d4.cpp:83]   --->   Operation 658 'and' 'and_ln83_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 659 '%mul_ln83_20 = mul i64 %zext_ln83_17, i64 %zext_ln53_5'
ST_2 : Operation 659 [1/1] (2.10ns)   --->   "%mul_ln83_20 = mul i64 %zext_ln83_17, i64 %zext_ln53_5" [d4.cpp:83]   --->   Operation 659 'mul' 'mul_ln83_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 660 [1/1] (0.00ns) (grouped into LUT with out node and_ln83_35)   --->   "%select_ln83_21 = select i1 %and_ln83_34, i64 18446744073709551615, i64 0" [d4.cpp:83]   --->   Operation 660 'select' 'select_ln83_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 661 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln83_35 = and i64 %mul_ln83_20, i64 %select_ln83_21" [d4.cpp:83]   --->   Operation 661 'and' 'and_ln83_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 662 [1/1] (0.48ns)   --->   "%tmp_71 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_22" [d4.cpp:74]   --->   Operation 662 'mux' 'tmp_71' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 663 [1/1] (0.00ns)   --->   "%zext_ln74_30 = zext i32 %tmp_71" [d4.cpp:74]   --->   Operation 663 'zext' 'zext_ln74_30' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 664 '%mul_ln74_50 = mul i64 %zext_ln53_5, i64 %zext_ln72_4'
ST_2 : Operation 664 [1/1] (2.10ns)   --->   "%mul_ln74_50 = mul i64 %zext_ln53_5, i64 %zext_ln72_4" [d4.cpp:74]   --->   Operation 664 'mul' 'mul_ln74_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 665 [1/1] (0.37ns)   --->   "%and_ln74_45 = and i64 %mul_ln74_50, i64 %select_ln83_15" [d4.cpp:74]   --->   Operation 665 'and' 'and_ln74_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 666 '%mul_ln74_51 = mul i64 %zext_ln74_30, i64 %zext_ln53_5'
ST_2 : Operation 666 [1/1] (2.10ns)   --->   "%mul_ln74_51 = mul i64 %zext_ln74_30, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 666 'mul' 'mul_ln74_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 667 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_46)   --->   "%select_ln74_30 = select i1 %icmp_ln63_16, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 667 'select' 'select_ln74_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 668 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_46 = and i64 %mul_ln74_51, i64 %select_ln74_30" [d4.cpp:74]   --->   Operation 668 'and' 'and_ln74_46' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 669 [1/1] (0.48ns)   --->   "%tmp_72 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_23" [d4.cpp:74]   --->   Operation 669 'mux' 'tmp_72' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 670 [1/1] (0.00ns)   --->   "%zext_ln74_31 = zext i32 %tmp_72" [d4.cpp:74]   --->   Operation 670 'zext' 'zext_ln74_31' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 671 '%mul_ln74_52 = mul i64 %zext_ln74_31, i64 %zext_ln53_5'
ST_2 : Operation 671 [1/1] (2.10ns)   --->   "%mul_ln74_52 = mul i64 %zext_ln74_31, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 671 'mul' 'mul_ln74_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 672 [1/1] (0.00ns) (grouped into LUT with out node add_ln74)   --->   "%and_ln74_47 = and i64 %mul_ln74_52, i64 %select_ln83_8" [d4.cpp:74]   --->   Operation 672 'and' 'and_ln74_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 673 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74 = add i64 %and_ln74_31, i64 %and_ln74_47" [d4.cpp:74]   --->   Operation 673 'add' 'add_ln74' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 674 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_1 = add i64 %add_ln74, i64 %and_ln74_14" [d4.cpp:74]   --->   Operation 674 'add' 'add_ln74_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 675 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_2 = add i64 %p_load82, i64 %add_ln74_1" [d4.cpp:74]   --->   Operation 675 'add' 'add_ln74_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 676 [1/1] (0.48ns)   --->   "%tmp_73 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_14" [d4.cpp:74]   --->   Operation 676 'mux' 'tmp_73' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 677 [1/1] (0.00ns)   --->   "%zext_ln74_32 = zext i32 %tmp_73" [d4.cpp:74]   --->   Operation 677 'zext' 'zext_ln74_32' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 678 '%mul_ln74_53 = mul i64 %zext_ln74_32, i64 %zext_ln53_5'
ST_2 : Operation 678 [1/1] (2.10ns)   --->   "%mul_ln74_53 = mul i64 %zext_ln74_32, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 678 'mul' 'mul_ln74_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 679 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_3)   --->   "%and_ln74_48 = and i64 %mul_ln74_53, i64 %select_ln53_1" [d4.cpp:74]   --->   Operation 679 'and' 'and_ln74_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 680 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_3 = add i64 %and_ln74_32, i64 %and_ln74_48" [d4.cpp:74]   --->   Operation 680 'add' 'add_ln74_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 681 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_4 = add i64 %add_ln74_3, i64 %and_ln74_15" [d4.cpp:74]   --->   Operation 681 'add' 'add_ln74_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 682 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_5 = add i64 %p_load80, i64 %add_ln74_4" [d4.cpp:74]   --->   Operation 682 'add' 'add_ln74_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 683 [1/1] (0.79ns)   --->   "%sub_ln58_15 = sub i4 %sub_ln58_14, i4 %zext_ln53_11" [d4.cpp:58]   --->   Operation 683 'sub' 'sub_ln58_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 684 [1/1] (0.48ns)   --->   "%tmp_74 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_15" [d4.cpp:74]   --->   Operation 684 'mux' 'tmp_74' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 685 [1/1] (0.00ns)   --->   "%zext_ln74_33 = zext i32 %tmp_74" [d4.cpp:74]   --->   Operation 685 'zext' 'zext_ln74_33' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 686 '%mul_ln74_54 = mul i64 %zext_ln74_33, i64 %zext_ln53_5'
ST_2 : Operation 686 [1/1] (2.10ns)   --->   "%mul_ln74_54 = mul i64 %zext_ln74_33, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 686 'mul' 'mul_ln74_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 687 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_6)   --->   "%and_ln74_49 = and i64 %mul_ln74_54, i64 %select_ln83_7" [d4.cpp:74]   --->   Operation 687 'and' 'and_ln74_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 688 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_6 = add i64 %and_ln74_33, i64 %and_ln74_49" [d4.cpp:74]   --->   Operation 688 'add' 'add_ln74_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 689 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_7 = add i64 %add_ln74_6, i64 %and_ln74_16" [d4.cpp:74]   --->   Operation 689 'add' 'add_ln74_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 690 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_8 = add i64 %p_load78, i64 %add_ln74_7" [d4.cpp:74]   --->   Operation 690 'add' 'add_ln74_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 691 [1/1] (0.00ns)   --->   "%zext_ln75_20 = zext i1 %cmp86_1" [d4.cpp:75]   --->   Operation 691 'zext' 'zext_ln75_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 692 [1/1] (0.79ns)   --->   "%sub_ln86 = sub i4 %sub_ln58_15, i4 %zext_ln75_20" [d4.cpp:86]   --->   Operation 692 'sub' 'sub_ln86' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 693 [1/1] (0.48ns)   --->   "%tmp_75 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i4 %i_1" [d4.cpp:86]   --->   Operation 693 'mux' 'tmp_75' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 694 [1/1] (0.00ns)   --->   "%zext_ln86_12 = zext i32 %tmp_75" [d4.cpp:86]   --->   Operation 694 'zext' 'zext_ln86_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 695 [1/1] (0.79ns)   --->   "%icmp_ln74_8 = icmp_ugt  i4 %add_ln53_2, i4 5" [d4.cpp:74]   --->   Operation 695 'icmp' 'icmp_ln74_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 696 [1/1] (0.00ns)   --->   "%zext_ln75_21 = zext i1 %icmp_ln74_8" [d4.cpp:75]   --->   Operation 696 'zext' 'zext_ln75_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 697 [1/1] (0.79ns)   --->   "%sub_ln78_14 = sub i4 %sub_ln86, i4 %zext_ln75_21" [d4.cpp:78]   --->   Operation 697 'sub' 'sub_ln78_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 698 '%mul_ln86_12 = mul i64 %zext_ln86_12, i64 %conv101_cast'
ST_2 : Operation 698 [1/1] (2.10ns)   --->   "%mul_ln86_12 = mul i64 %zext_ln86_12, i64 %conv101_cast" [d4.cpp:86]   --->   Operation 698 'mul' 'mul_ln86_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 699 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_25)   --->   "%select_ln86_15 = select i1 %and_ln86_24, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 699 'select' 'select_ln86_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 700 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_25 = and i64 %mul_ln86_12, i64 %select_ln86_15" [d4.cpp:86]   --->   Operation 700 'and' 'and_ln86_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 701 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86 = add i64 %and_ln74_5, i64 %and_ln83_5" [d4.cpp:86]   --->   Operation 701 'add' 'add_ln86' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 702 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_1 = add i64 %add_ln86, i64 %and_ln74_4" [d4.cpp:86]   --->   Operation 702 'add' 'add_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 703 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_2 = add i64 %and_ln74_21, i64 %and_ln74_22" [d4.cpp:86]   --->   Operation 703 'add' 'add_ln86_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 704 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_3 = add i64 %add_ln86_2, i64 %and_ln86_3" [d4.cpp:86]   --->   Operation 704 'add' 'add_ln86_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 705 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_4 = add i64 %add_ln86_3, i64 %add_ln86_1" [d4.cpp:86]   --->   Operation 705 'add' 'add_ln86_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 706 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_5 = add i64 %and_ln86_15, i64 %and_ln74_37" [d4.cpp:86]   --->   Operation 706 'add' 'add_ln86_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 707 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_6 = add i64 %add_ln86_5, i64 %and_ln83_17" [d4.cpp:86]   --->   Operation 707 'add' 'add_ln86_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 708 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_7 = add i64 %and_ln83_29, i64 %and_ln86_25" [d4.cpp:86]   --->   Operation 708 'add' 'add_ln86_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 709 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_8 = add i64 %add_ln86_7, i64 %and_ln74_38" [d4.cpp:86]   --->   Operation 709 'add' 'add_ln86_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 710 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_9 = add i64 %add_ln86_8, i64 %add_ln86_6" [d4.cpp:86]   --->   Operation 710 'add' 'add_ln86_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 711 [1/1] (0.79ns)   --->   "%icmp_ln74_9 = icmp_ugt  i4 %add_ln53_2, i4 4" [d4.cpp:74]   --->   Operation 711 'icmp' 'icmp_ln74_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 712 [1/1] (0.00ns)   --->   "%zext_ln75_22 = zext i1 %icmp_ln74_9" [d4.cpp:75]   --->   Operation 712 'zext' 'zext_ln75_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 713 [1/1] (0.79ns)   --->   "%sub_ln78_6 = sub i4 %sub_ln78_14, i4 %zext_ln75_22" [d4.cpp:78]   --->   Operation 713 'sub' 'sub_ln78_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 714 [1/1] (0.44ns)   --->   "%select_ln86_2 = select i1 %and_ln86_24, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d4.cpp:86]   --->   Operation 714 'select' 'select_ln86_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 715 [1/1] (0.00ns)   --->   "%zext_ln86_13 = zext i32 %select_ln86_2" [d4.cpp:86]   --->   Operation 715 'zext' 'zext_ln86_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 716 '%mul_ln86_13 = mul i64 %zext_ln86_13, i64 %zext_ln86_12'
ST_2 : Operation 716 [1/1] (2.10ns)   --->   "%mul_ln86_13 = mul i64 %zext_ln86_13, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 716 'mul' 'mul_ln86_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 717 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_27)   --->   "%select_ln86_16 = select i1 %and_ln86_26, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 717 'select' 'select_ln86_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 718 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_27 = and i64 %mul_ln86_13, i64 %select_ln86_16" [d4.cpp:86]   --->   Operation 718 'and' 'and_ln86_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 719 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_12 = add i64 %and_ln74_7, i64 %and_ln83_7" [d4.cpp:86]   --->   Operation 719 'add' 'add_ln86_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 720 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_16 = add i64 %add_ln86_12, i64 %and_ln74_6" [d4.cpp:86]   --->   Operation 720 'add' 'add_ln86_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 721 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_17 = add i64 %and_ln74_23, i64 %and_ln74_24" [d4.cpp:86]   --->   Operation 721 'add' 'add_ln86_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 722 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_18 = add i64 %add_ln86_17, i64 %and_ln86_5" [d4.cpp:86]   --->   Operation 722 'add' 'add_ln86_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 723 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_19 = add i64 %add_ln86_18, i64 %add_ln86_16" [d4.cpp:86]   --->   Operation 723 'add' 'add_ln86_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 724 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_20 = add i64 %and_ln86_17, i64 %and_ln74_39" [d4.cpp:86]   --->   Operation 724 'add' 'add_ln86_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 725 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_21 = add i64 %add_ln86_20, i64 %and_ln83_19" [d4.cpp:86]   --->   Operation 725 'add' 'add_ln86_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 726 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_22 = add i64 %and_ln83_31, i64 %and_ln86_27" [d4.cpp:86]   --->   Operation 726 'add' 'add_ln86_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 727 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_23 = add i64 %add_ln86_22, i64 %and_ln74_40" [d4.cpp:86]   --->   Operation 727 'add' 'add_ln86_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 728 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_24 = add i64 %add_ln86_23, i64 %add_ln86_21" [d4.cpp:86]   --->   Operation 728 'add' 'add_ln86_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 729 [1/1] (0.00ns)   --->   "%sext_ln67_4 = sext i3 %sub_ln58_6" [d4.cpp:67]   --->   Operation 729 'sext' 'sext_ln67_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 730 [1/1] (0.00ns)   --->   "%zext_ln75_23 = zext i1 %icmp_ln74_10" [d4.cpp:75]   --->   Operation 730 'zext' 'zext_ln75_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 731 [1/1] (0.79ns)   --->   "%sub_ln78_7 = sub i4 %sub_ln78_6, i4 %zext_ln75_23" [d4.cpp:78]   --->   Operation 731 'sub' 'sub_ln78_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 732 [1/1] (0.48ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_4" [d4.cpp:86]   --->   Operation 732 'mux' 'tmp_79' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 733 [1/1] (0.00ns)   --->   "%zext_ln86_14 = zext i32 %tmp_79" [d4.cpp:86]   --->   Operation 733 'zext' 'zext_ln86_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 734 '%mul_ln86_14 = mul i64 %zext_ln86_14, i64 %zext_ln86_12'
ST_2 : Operation 734 [1/1] (2.10ns)   --->   "%mul_ln86_14 = mul i64 %zext_ln86_14, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 734 'mul' 'mul_ln86_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 735 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_29)   --->   "%select_ln86_17 = select i1 %and_ln86_28, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 735 'select' 'select_ln86_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 736 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_29 = and i64 %mul_ln86_14, i64 %select_ln86_17" [d4.cpp:86]   --->   Operation 736 'and' 'and_ln86_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 737 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_26 = add i64 %and_ln74_9, i64 %and_ln83_9" [d4.cpp:86]   --->   Operation 737 'add' 'add_ln86_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 738 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_27 = add i64 %add_ln86_26, i64 %and_ln74_8" [d4.cpp:86]   --->   Operation 738 'add' 'add_ln86_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 739 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_28 = add i64 %and_ln74_25, i64 %and_ln74_26" [d4.cpp:86]   --->   Operation 739 'add' 'add_ln86_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 740 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_29 = add i64 %add_ln86_28, i64 %and_ln86_7" [d4.cpp:86]   --->   Operation 740 'add' 'add_ln86_29' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 741 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_30 = add i64 %add_ln86_29, i64 %add_ln86_27" [d4.cpp:86]   --->   Operation 741 'add' 'add_ln86_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 742 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_31 = add i64 %and_ln86_19, i64 %and_ln74_41" [d4.cpp:86]   --->   Operation 742 'add' 'add_ln86_31' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 743 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_32 = add i64 %add_ln86_31, i64 %and_ln83_21" [d4.cpp:86]   --->   Operation 743 'add' 'add_ln86_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 744 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_33 = add i64 %and_ln83_33, i64 %and_ln86_29" [d4.cpp:86]   --->   Operation 744 'add' 'add_ln86_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 745 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_34 = add i64 %add_ln86_33, i64 %and_ln74_42" [d4.cpp:86]   --->   Operation 745 'add' 'add_ln86_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 746 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_35 = add i64 %add_ln86_34, i64 %add_ln86_32" [d4.cpp:86]   --->   Operation 746 'add' 'add_ln86_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 747 [1/1] (0.00ns)   --->   "%zext_ln58_5 = zext i1 %and_ln86_28" [d4.cpp:58]   --->   Operation 747 'zext' 'zext_ln58_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 748 [1/1] (0.67ns)   --->   "%sub_ln58_7 = sub i3 %sub_ln58_6, i3 %zext_ln58_5" [d4.cpp:58]   --->   Operation 748 'sub' 'sub_ln58_7' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 749 [1/1] (0.00ns)   --->   "%sext_ln67_5 = sext i3 %sub_ln58_7" [d4.cpp:67]   --->   Operation 749 'sext' 'sext_ln67_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 750 [1/1] (0.79ns)   --->   "%icmp_ln74_11 = icmp_ugt  i4 %add_ln53_2, i4 2" [d4.cpp:74]   --->   Operation 750 'icmp' 'icmp_ln74_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 751 [1/1] (0.48ns)   --->   "%tmp_81 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln67_5" [d4.cpp:86]   --->   Operation 751 'mux' 'tmp_81' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 752 [1/1] (0.00ns)   --->   "%zext_ln86_15 = zext i32 %tmp_81" [d4.cpp:86]   --->   Operation 752 'zext' 'zext_ln86_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 753 [1/1] (0.28ns)   --->   "%and_ln86_30 = and i1 %icmp_ln67_14, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 753 'and' 'and_ln86_30' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 754 '%mul_ln86_15 = mul i64 %zext_ln86_15, i64 %zext_ln86_12'
ST_2 : Operation 754 [1/1] (2.10ns)   --->   "%mul_ln86_15 = mul i64 %zext_ln86_15, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 754 'mul' 'mul_ln86_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 755 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_31)   --->   "%select_ln86_18 = select i1 %and_ln86_30, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 755 'select' 'select_ln86_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 756 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_31 = and i64 %mul_ln86_15, i64 %select_ln86_18" [d4.cpp:86]   --->   Operation 756 'and' 'and_ln86_31' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 757 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_37 = add i64 %and_ln74_11, i64 %and_ln83_11" [d4.cpp:86]   --->   Operation 757 'add' 'add_ln86_37' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 758 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_38 = add i64 %add_ln86_37, i64 %and_ln74_10" [d4.cpp:86]   --->   Operation 758 'add' 'add_ln86_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 759 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_39 = add i64 %and_ln74_27, i64 %and_ln74_28" [d4.cpp:86]   --->   Operation 759 'add' 'add_ln86_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 760 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_40 = add i64 %add_ln86_39, i64 %and_ln86_9" [d4.cpp:86]   --->   Operation 760 'add' 'add_ln86_40' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 761 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_41 = add i64 %add_ln86_40, i64 %add_ln86_38" [d4.cpp:86]   --->   Operation 761 'add' 'add_ln86_41' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 762 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_42 = add i64 %and_ln86_21, i64 %and_ln74_43" [d4.cpp:86]   --->   Operation 762 'add' 'add_ln86_42' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 763 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_43 = add i64 %add_ln86_42, i64 %and_ln83_23" [d4.cpp:86]   --->   Operation 763 'add' 'add_ln86_43' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 764 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_44 = add i64 %and_ln83_35, i64 %and_ln86_31" [d4.cpp:86]   --->   Operation 764 'add' 'add_ln86_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 765 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_45 = add i64 %add_ln86_44, i64 %and_ln74_44" [d4.cpp:86]   --->   Operation 765 'add' 'add_ln86_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 766 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_46 = add i64 %add_ln86_45, i64 %add_ln86_43" [d4.cpp:86]   --->   Operation 766 'add' 'add_ln86_46' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 767 [1/1] (0.00ns)   --->   "%zext_ln87_4 = zext i1 %and_ln86_30" [d4.cpp:87]   --->   Operation 767 'zext' 'zext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 768 [1/1] (0.67ns)   --->   "%sub_ln58_8 = sub i4 %sext_ln67_5, i4 %zext_ln87_4" [d4.cpp:58]   --->   Operation 768 'sub' 'sub_ln58_8' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 769 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln58_8" [d4.cpp:86]   --->   Operation 769 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 770 [1/1] (0.00ns)   --->   "%zext_ln86_16 = zext i32 %tmp_83" [d4.cpp:86]   --->   Operation 770 'zext' 'zext_ln86_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_33)   --->   "%and_ln86_32 = and i1 %icmp_ln67_15, i1 %cmp64_2" [d4.cpp:86]   --->   Operation 771 'and' 'and_ln86_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 772 '%mul_ln86_16 = mul i64 %zext_ln86_16, i64 %zext_ln86_12'
ST_2 : Operation 772 [1/1] (2.10ns)   --->   "%mul_ln86_16 = mul i64 %zext_ln86_16, i64 %zext_ln86_12" [d4.cpp:86]   --->   Operation 772 'mul' 'mul_ln86_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 773 [1/1] (0.00ns) (grouped into LUT with out node and_ln86_33)   --->   "%select_ln86_19 = select i1 %and_ln86_32, i64 18446744073709551615, i64 0" [d4.cpp:86]   --->   Operation 773 'select' 'select_ln86_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 774 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86_33 = and i64 %mul_ln86_16, i64 %select_ln86_19" [d4.cpp:86]   --->   Operation 774 'and' 'and_ln86_33' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 775 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_48 = add i64 %and_ln74_12, i64 %and_ln74_13" [d4.cpp:86]   --->   Operation 775 'add' 'add_ln86_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 776 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_49 = add i64 %and_ln86_11, i64 %and_ln74_29" [d4.cpp:86]   --->   Operation 776 'add' 'add_ln86_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 777 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_50 = add i64 %add_ln86_49, i64 %add_ln86_48" [d4.cpp:86]   --->   Operation 777 'add' 'add_ln86_50' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 778 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_51 = add i64 %and_ln74_30, i64 %and_ln86_23" [d4.cpp:86]   --->   Operation 778 'add' 'add_ln86_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 779 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_52 = add i64 %and_ln74_46, i64 %and_ln86_33" [d4.cpp:86]   --->   Operation 779 'add' 'add_ln86_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 780 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_53 = add i64 %add_ln86_52, i64 %and_ln74_45" [d4.cpp:86]   --->   Operation 780 'add' 'add_ln86_53' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 781 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_54 = add i64 %add_ln86_53, i64 %add_ln86_51" [d4.cpp:86]   --->   Operation 781 'add' 'add_ln86_54' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 782 [1/1] (0.42ns)   --->   "%store_ln42 = store i5 %add_ln53_5, i5 %k1" [d4.cpp:42]   --->   Operation 782 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 783 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_8, i64 %empty_36" [d4.cpp:42]   --->   Operation 783 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 784 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_5, i64 %empty_35" [d4.cpp:42]   --->   Operation 784 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 785 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_2, i64 %empty_34" [d4.cpp:42]   --->   Operation 785 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 786 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln53_9, i64 %empty" [d4.cpp:42]   --->   Operation 786 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 915 [1/1] (0.00ns)   --->   "%p_load92 = load i64 %empty"   --->   Operation 915 'load' 'p_load92' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 916 [1/1] (0.00ns)   --->   "%add94324_load_1 = load i64 %add94324"   --->   Operation 916 'load' 'add94324_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 917 [1/1] (0.00ns)   --->   "%add94_145330_load_1 = load i64 %add94_145330"   --->   Operation 917 'load' 'add94_145330_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 918 [1/1] (0.00ns)   --->   "%add94_2130336_load_1 = load i64 %add94_2130336"   --->   Operation 918 'load' 'add94_2130336_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 919 [1/1] (0.00ns)   --->   "%add94_3342_load_1 = load i64 %add94_3342"   --->   Operation 919 'load' 'add94_3342_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 920 [1/1] (0.00ns)   --->   "%add94_4348_load_1 = load i64 %add94_4348"   --->   Operation 920 'load' 'add94_4348_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 921 [1/1] (0.00ns)   --->   "%add94_5354_load_1 = load i64 %add94_5354"   --->   Operation 921 'load' 'add94_5354_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 922 [1/1] (0.00ns)   --->   "%add94_6360_load_1 = load i64 %add94_6360"   --->   Operation 922 'load' 'add94_6360_load_1' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 923 [1/1] (0.00ns)   --->   "%p_load83 = load i64 %empty_34"   --->   Operation 923 'load' 'p_load83' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 924 [1/1] (0.00ns)   --->   "%p_load81 = load i64 %empty_35"   --->   Operation 924 'load' 'p_load81' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 925 [1/1] (0.00ns)   --->   "%p_load79 = load i64 %empty_36"   --->   Operation 925 'load' 'p_load79' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 926 [1/1] (0.00ns)   --->   "%p_load77 = load i64 %empty_37"   --->   Operation 926 'load' 'p_load77' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 927 [1/1] (0.00ns)   --->   "%p_load75 = load i64 %empty_38"   --->   Operation 927 'load' 'p_load75' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 928 [1/1] (0.00ns)   --->   "%p_load73 = load i64 %empty_39"   --->   Operation 928 'load' 'p_load73' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 929 [1/1] (0.00ns)   --->   "%p_load71 = load i64 %empty_40"   --->   Operation 929 'load' 'p_load71' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 930 [1/1] (0.00ns)   --->   "%p_load69 = load i64 %empty_41"   --->   Operation 930 'load' 'p_load69' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 931 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load69"   --->   Operation 931 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 932 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load71"   --->   Operation 932 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 933 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load73"   --->   Operation 933 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 934 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load75"   --->   Operation 934 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 935 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load77"   --->   Operation 935 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 936 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load79"   --->   Operation 936 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 937 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load81"   --->   Operation 937 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 938 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load83"   --->   Operation 938 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 939 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_6360_out, i64 %add94_6360_load_1"   --->   Operation 939 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 940 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_5354_out, i64 %add94_5354_load_1"   --->   Operation 940 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 941 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_4348_out, i64 %add94_4348_load_1"   --->   Operation 941 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 942 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_3342_out, i64 %add94_3342_load_1"   --->   Operation 942 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 943 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_2130336_out, i64 %add94_2130336_load_1"   --->   Operation 943 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 944 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94_145330_out, i64 %add94_145330_load_1"   --->   Operation 944 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 945 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add94324_out, i64 %add94324_load_1"   --->   Operation 945 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 946 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out8, i64 %p_load92"   --->   Operation 946 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 947 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 947 'ret' 'ret_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.03>
ST_3 : Operation 787 [1/1] (0.00ns)   --->   "%add94324_load = load i64 %add94324" [d4.cpp:83]   --->   Operation 787 'load' 'add94324_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 788 [1/1] (0.00ns)   --->   "%add94_145330_load = load i64 %add94_145330" [d4.cpp:83]   --->   Operation 788 'load' 'add94_145330_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 789 [1/1] (0.00ns)   --->   "%add94_2130336_load = load i64 %add94_2130336" [d4.cpp:86]   --->   Operation 789 'load' 'add94_2130336_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 790 [1/1] (0.00ns)   --->   "%add94_3342_load = load i64 %add94_3342" [d4.cpp:86]   --->   Operation 790 'load' 'add94_3342_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 791 [1/1] (0.00ns)   --->   "%add94_4348_load = load i64 %add94_4348" [d4.cpp:86]   --->   Operation 791 'load' 'add94_4348_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 792 [1/1] (0.00ns)   --->   "%add94_5354_load = load i64 %add94_5354" [d4.cpp:86]   --->   Operation 792 'load' 'add94_5354_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 793 [1/1] (0.00ns)   --->   "%add94_6360_load = load i64 %add94_6360" [d4.cpp:86]   --->   Operation 793 'load' 'add94_6360_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 794 [1/1] (0.00ns)   --->   "%p_load76 = load i64 %empty_37" [d4.cpp:74]   --->   Operation 794 'load' 'p_load76' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 795 [1/1] (0.00ns)   --->   "%p_load74 = load i64 %empty_38" [d4.cpp:74]   --->   Operation 795 'load' 'p_load74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 796 [1/1] (0.00ns)   --->   "%p_load72 = load i64 %empty_39" [d4.cpp:74]   --->   Operation 796 'load' 'p_load72' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 797 [1/1] (0.00ns)   --->   "%p_load70 = load i64 %empty_40" [d4.cpp:74]   --->   Operation 797 'load' 'p_load70' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 798 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_41" [d4.cpp:74]   --->   Operation 798 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 799 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d4.cpp:44]   --->   Operation 799 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 800 [1/1] (0.00ns)   --->   "%speclooptripcount_ln42 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d4.cpp:42]   --->   Operation 800 'speclooptripcount' 'speclooptripcount_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 801 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d4.cpp:42]   --->   Operation 801 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 802 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78" [d4.cpp:74]   --->   Operation 802 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 803 [1/1] (0.00ns)   --->   "%zext_ln74_9 = zext i32 %tmp_25" [d4.cpp:74]   --->   Operation 803 'zext' 'zext_ln74_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 804 '%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53'
ST_3 : Operation 804 [1/1] (2.10ns)   --->   "%mul_ln74_17 = mul i64 %zext_ln74_9, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 804 'mul' 'mul_ln74_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 805 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_17)   --->   "%select_ln74_14 = select i1 %icmp_ln74_3, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 805 'select' 'select_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 806 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_17 = and i64 %mul_ln74_17, i64 %select_ln74_14" [d4.cpp:74]   --->   Operation 806 'and' 'and_ln74_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 807 [1/1] (0.00ns)   --->   "%zext_ln75_7 = zext i1 %icmp_ln74_3" [d4.cpp:75]   --->   Operation 807 'zext' 'zext_ln75_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 808 [1/1] (0.79ns)   --->   "%sub_ln78_1 = sub i4 %sub_ln78, i4 %zext_ln75_7" [d4.cpp:78]   --->   Operation 808 'sub' 'sub_ln78_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 809 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_1" [d4.cpp:74]   --->   Operation 809 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 810 [1/1] (0.00ns)   --->   "%zext_ln74_10 = zext i32 %tmp_26" [d4.cpp:74]   --->   Operation 810 'zext' 'zext_ln74_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 811 '%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53'
ST_3 : Operation 811 [1/1] (2.10ns)   --->   "%mul_ln74_18 = mul i64 %zext_ln74_10, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 811 'mul' 'mul_ln74_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 812 [1/1] (0.00ns) (grouped into LUT with out node and_ln74_18)   --->   "%select_ln74_15 = select i1 %icmp_ln74_4, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 812 'select' 'select_ln74_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 813 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln74_18 = and i64 %mul_ln74_18, i64 %select_ln74_15" [d4.cpp:74]   --->   Operation 813 'and' 'and_ln74_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 814 [1/1] (0.00ns)   --->   "%zext_ln75_8 = zext i1 %icmp_ln74_4" [d4.cpp:75]   --->   Operation 814 'zext' 'zext_ln75_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 815 [1/1] (0.79ns)   --->   "%sub_ln78_2 = sub i4 %sub_ln78_1, i4 %zext_ln75_8" [d4.cpp:78]   --->   Operation 815 'sub' 'sub_ln78_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 816 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_2" [d4.cpp:74]   --->   Operation 816 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 817 [1/1] (0.00ns)   --->   "%zext_ln74_11 = zext i32 %tmp_28" [d4.cpp:74]   --->   Operation 817 'zext' 'zext_ln74_11' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 818 '%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53'
ST_3 : Operation 818 [1/1] (2.10ns)   --->   "%mul_ln74_19 = mul i64 %zext_ln74_11, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 818 'mul' 'mul_ln74_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 819 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_2" [d4.cpp:74]   --->   Operation 819 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 820 [1/1] (0.00ns)   --->   "%zext_ln74_12 = zext i32 %tmp_30" [d4.cpp:74]   --->   Operation 820 'zext' 'zext_ln74_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 821 '%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53'
ST_3 : Operation 821 [1/1] (2.10ns)   --->   "%mul_ln74_20 = mul i64 %zext_ln74_12, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 821 'mul' 'mul_ln74_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 822 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln78_2" [d4.cpp:74]   --->   Operation 822 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 823 [1/1] (0.00ns)   --->   "%zext_ln74_13 = zext i32 %tmp_32" [d4.cpp:74]   --->   Operation 823 'zext' 'zext_ln74_13' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 824 '%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53'
ST_3 : Operation 824 [1/1] (2.10ns)   --->   "%mul_ln74_21 = mul i64 %zext_ln74_13, i64 %zext_ln53" [d4.cpp:74]   --->   Operation 824 'mul' 'mul_ln74_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 825 [1/1] (0.48ns)   --->   "%tmp_51 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_13" [d4.cpp:74]   --->   Operation 825 'mux' 'tmp_51' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 826 [1/1] (0.00ns)   --->   "%zext_ln74_22 = zext i32 %tmp_51" [d4.cpp:74]   --->   Operation 826 'zext' 'zext_ln74_22' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 827 '%mul_ln74_37 = mul i64 %zext_ln74_22, i64 %zext_ln53_3'
ST_3 : Operation 827 [1/1] (2.10ns)   --->   "%mul_ln74_37 = mul i64 %zext_ln74_22, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 827 'mul' 'mul_ln74_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 828 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_9)   --->   "%select_ln74_23 = select i1 %icmp_ln74_5, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 828 'select' 'select_ln74_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 829 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_9)   --->   "%and_ln74_34 = and i64 %mul_ln74_37, i64 %select_ln74_23" [d4.cpp:74]   --->   Operation 829 'and' 'and_ln74_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 830 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_3" [d4.cpp:74]   --->   Operation 830 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 831 [1/1] (0.00ns)   --->   "%zext_ln74_23 = zext i32 %tmp_52" [d4.cpp:74]   --->   Operation 831 'zext' 'zext_ln74_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 832 '%mul_ln74_38 = mul i64 %zext_ln74_23, i64 %zext_ln53_3'
ST_3 : Operation 832 [1/1] (2.10ns)   --->   "%mul_ln74_38 = mul i64 %zext_ln74_23, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 832 'mul' 'mul_ln74_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 833 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_12)   --->   "%select_ln74_24 = select i1 %icmp_ln74_6, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 833 'select' 'select_ln74_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 834 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_12)   --->   "%and_ln74_35 = and i64 %mul_ln74_38, i64 %select_ln74_24" [d4.cpp:74]   --->   Operation 834 'and' 'and_ln74_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 835 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_4" [d4.cpp:74]   --->   Operation 835 'mux' 'tmp_54' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 836 [1/1] (0.00ns)   --->   "%zext_ln74_24 = zext i32 %tmp_54" [d4.cpp:74]   --->   Operation 836 'zext' 'zext_ln74_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 837 '%mul_ln74_39 = mul i64 %zext_ln74_24, i64 %zext_ln53_3'
ST_3 : Operation 837 [1/1] (2.10ns)   --->   "%mul_ln74_39 = mul i64 %zext_ln74_24, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 837 'mul' 'mul_ln74_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 838 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%select_ln74_25 = select i1 %icmp_ln74_7, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 838 'select' 'select_ln74_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 839 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%and_ln74_36 = and i64 %mul_ln74_39, i64 %select_ln74_25" [d4.cpp:74]   --->   Operation 839 'and' 'and_ln74_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 840 [1/1] (0.00ns)   --->   "%zext_ln75_16 = zext i1 %icmp_ln74_7" [d4.cpp:75]   --->   Operation 840 'zext' 'zext_ln75_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 841 [1/1] (0.79ns)   --->   "%sub_ln78_5 = sub i4 %sub_ln78_4, i4 %zext_ln75_16" [d4.cpp:78]   --->   Operation 841 'sub' 'sub_ln78_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 842 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 842 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 843 [1/1] (0.00ns)   --->   "%zext_ln74_25 = zext i32 %tmp_56" [d4.cpp:74]   --->   Operation 843 'zext' 'zext_ln74_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 844 '%mul_ln74_40 = mul i64 %zext_ln74_25, i64 %zext_ln53_3'
ST_3 : Operation 844 [1/1] (2.10ns)   --->   "%mul_ln74_40 = mul i64 %zext_ln74_25, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 844 'mul' 'mul_ln74_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 845 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln78_5" [d4.cpp:74]   --->   Operation 845 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 846 [1/1] (0.00ns)   --->   "%zext_ln74_26 = zext i32 %tmp_58" [d4.cpp:74]   --->   Operation 846 'zext' 'zext_ln74_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 847 '%mul_ln74_41 = mul i64 %zext_ln74_26, i64 %zext_ln53_3'
ST_3 : Operation 847 [1/1] (2.10ns)   --->   "%mul_ln74_41 = mul i64 %zext_ln74_26, i64 %zext_ln53_3" [d4.cpp:74]   --->   Operation 847 'mul' 'mul_ln74_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 848 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_5 = add i64 %add_ln83_4, i64 %add_ln83_1" [d4.cpp:83]   --->   Operation 848 'add' 'add_ln83_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 849 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_6 = add i64 %add94324_load, i64 %add_ln83_5" [d4.cpp:83]   --->   Operation 849 'add' 'add_ln83_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 850 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_16 = add i64 %add_ln83_15, i64 %add_ln83_10" [d4.cpp:83]   --->   Operation 850 'add' 'add_ln83_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 851 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln83_12 = add i64 %add94_145330_load, i64 %add_ln83_16" [d4.cpp:83]   --->   Operation 851 'add' 'add_ln83_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 852 [1/1] (0.48ns)   --->   "%tmp_76 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln86" [d4.cpp:74]   --->   Operation 852 'mux' 'tmp_76' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 853 [1/1] (0.00ns)   --->   "%zext_ln74_34 = zext i32 %tmp_76" [d4.cpp:74]   --->   Operation 853 'zext' 'zext_ln74_34' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 854 '%mul_ln74_55 = mul i64 %zext_ln74_34, i64 %zext_ln53_5'
ST_3 : Operation 854 [1/1] (2.10ns)   --->   "%mul_ln74_55 = mul i64 %zext_ln74_34, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 854 'mul' 'mul_ln74_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 855 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_9)   --->   "%select_ln74_31 = select i1 %icmp_ln74_8, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 855 'select' 'select_ln74_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 856 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_9)   --->   "%and_ln74_50 = and i64 %mul_ln74_55, i64 %select_ln74_31" [d4.cpp:74]   --->   Operation 856 'and' 'and_ln74_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 857 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_9 = add i64 %and_ln74_34, i64 %and_ln74_50" [d4.cpp:74]   --->   Operation 857 'add' 'add_ln74_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 858 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_10 = add i64 %add_ln74_9, i64 %and_ln74_17" [d4.cpp:74]   --->   Operation 858 'add' 'add_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 859 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_11 = add i64 %p_load76, i64 %add_ln74_10" [d4.cpp:74]   --->   Operation 859 'add' 'add_ln74_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 860 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_10 = add i64 %add_ln86_9, i64 %add_ln86_4" [d4.cpp:86]   --->   Operation 860 'add' 'add_ln86_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 861 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_11 = add i64 %add94_2130336_load, i64 %add_ln86_10" [d4.cpp:86]   --->   Operation 861 'add' 'add_ln86_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 862 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_14" [d4.cpp:74]   --->   Operation 862 'mux' 'tmp_77' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 863 [1/1] (0.00ns)   --->   "%zext_ln74_35 = zext i32 %tmp_77" [d4.cpp:74]   --->   Operation 863 'zext' 'zext_ln74_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 864 '%mul_ln74_56 = mul i64 %zext_ln74_35, i64 %zext_ln53_5'
ST_3 : Operation 864 [1/1] (2.10ns)   --->   "%mul_ln74_56 = mul i64 %zext_ln74_35, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 864 'mul' 'mul_ln74_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 865 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_12)   --->   "%select_ln74_32 = select i1 %icmp_ln74_9, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 865 'select' 'select_ln74_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 866 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_12)   --->   "%and_ln74_51 = and i64 %mul_ln74_56, i64 %select_ln74_32" [d4.cpp:74]   --->   Operation 866 'and' 'and_ln74_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 867 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_12 = add i64 %and_ln74_35, i64 %and_ln74_51" [d4.cpp:74]   --->   Operation 867 'add' 'add_ln74_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 868 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_13 = add i64 %add_ln74_12, i64 %and_ln74_18" [d4.cpp:74]   --->   Operation 868 'add' 'add_ln74_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 869 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_14 = add i64 %p_load74, i64 %add_ln74_13" [d4.cpp:74]   --->   Operation 869 'add' 'add_ln74_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 870 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_25 = add i64 %add_ln86_24, i64 %add_ln86_19" [d4.cpp:86]   --->   Operation 870 'add' 'add_ln86_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 871 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_13 = add i64 %add94_3342_load, i64 %add_ln86_25" [d4.cpp:86]   --->   Operation 871 'add' 'add_ln86_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 872 [1/1] (0.48ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_6" [d4.cpp:74]   --->   Operation 872 'mux' 'tmp_78' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 873 [1/1] (0.00ns)   --->   "%zext_ln74_36 = zext i32 %tmp_78" [d4.cpp:74]   --->   Operation 873 'zext' 'zext_ln74_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 874 '%mul_ln74_57 = mul i64 %zext_ln74_36, i64 %zext_ln53_5'
ST_3 : Operation 874 [1/1] (2.10ns)   --->   "%mul_ln74_57 = mul i64 %zext_ln74_36, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 874 'mul' 'mul_ln74_57' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%select_ln74_33 = select i1 %icmp_ln74_10, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 875 'select' 'select_ln74_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 876 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_15)   --->   "%and_ln74_52 = and i64 %mul_ln74_57, i64 %select_ln74_33" [d4.cpp:74]   --->   Operation 876 'and' 'and_ln74_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 877 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_15 = add i64 %and_ln74_36, i64 %and_ln74_52" [d4.cpp:74]   --->   Operation 877 'add' 'add_ln74_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 878 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_16 = add i64 %add_ln74_15, i64 %mul_ln74_19" [d4.cpp:74]   --->   Operation 878 'add' 'add_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 879 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_17 = add i64 %p_load72, i64 %add_ln74_16" [d4.cpp:74]   --->   Operation 879 'add' 'add_ln74_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 880 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_36 = add i64 %add_ln86_35, i64 %add_ln86_30" [d4.cpp:86]   --->   Operation 880 'add' 'add_ln86_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 881 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_14 = add i64 %add94_4348_load, i64 %add_ln86_36" [d4.cpp:86]   --->   Operation 881 'add' 'add_ln86_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 882 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_7" [d4.cpp:74]   --->   Operation 882 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 883 [1/1] (0.00ns)   --->   "%zext_ln74_37 = zext i32 %tmp_80" [d4.cpp:74]   --->   Operation 883 'zext' 'zext_ln74_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 884 '%mul_ln74_58 = mul i64 %zext_ln74_37, i64 %zext_ln53_5'
ST_3 : Operation 884 [1/1] (2.10ns)   --->   "%mul_ln74_58 = mul i64 %zext_ln74_37, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 884 'mul' 'mul_ln74_58' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 885 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_18)   --->   "%select_ln74_34 = select i1 %icmp_ln74_11, i64 18446744073709551615, i64 0" [d4.cpp:74]   --->   Operation 885 'select' 'select_ln74_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 886 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_18)   --->   "%and_ln74_53 = and i64 %mul_ln74_58, i64 %select_ln74_34" [d4.cpp:74]   --->   Operation 886 'and' 'and_ln74_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 887 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln74_18 = add i64 %mul_ln74_40, i64 %and_ln74_53" [d4.cpp:74]   --->   Operation 887 'add' 'add_ln74_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 888 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_19 = add i64 %add_ln74_18, i64 %mul_ln74_20" [d4.cpp:74]   --->   Operation 888 'add' 'add_ln74_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 889 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_20 = add i64 %p_load70, i64 %add_ln74_19" [d4.cpp:74]   --->   Operation 889 'add' 'add_ln74_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 890 [1/1] (0.00ns)   --->   "%zext_ln75_24 = zext i1 %icmp_ln74_11" [d4.cpp:75]   --->   Operation 890 'zext' 'zext_ln75_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 891 [1/1] (0.79ns)   --->   "%sub_ln78_8 = sub i4 %sub_ln78_7, i4 %zext_ln75_24" [d4.cpp:78]   --->   Operation 891 'sub' 'sub_ln78_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 892 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_47 = add i64 %add_ln86_46, i64 %add_ln86_41" [d4.cpp:86]   --->   Operation 892 'add' 'add_ln86_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 893 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_15 = add i64 %add94_5354_load, i64 %add_ln86_47" [d4.cpp:86]   --->   Operation 893 'add' 'add_ln86_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 894 [1/1] (0.48ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln78_8" [d4.cpp:74]   --->   Operation 894 'mux' 'tmp_82' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 895 [1/1] (0.00ns)   --->   "%zext_ln74_38 = zext i32 %tmp_82" [d4.cpp:74]   --->   Operation 895 'zext' 'zext_ln74_38' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 896 '%mul_ln74_59 = mul i64 %zext_ln74_38, i64 %zext_ln53_5'
ST_3 : Operation 896 [1/1] (2.10ns)   --->   "%mul_ln74_59 = mul i64 %zext_ln74_38, i64 %zext_ln53_5" [d4.cpp:74]   --->   Operation 896 'mul' 'mul_ln74_59' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 897 [1/1] (1.08ns)   --->   "%add_ln74_21 = add i64 %mul_ln74_41, i64 %mul_ln74_59" [d4.cpp:74]   --->   Operation 897 'add' 'add_ln74_21' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 898 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_22 = add i64 %add_ln74_21, i64 %mul_ln74_21" [d4.cpp:74]   --->   Operation 898 'add' 'add_ln74_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 899 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln74_23 = add i64 %p_load, i64 %add_ln74_22" [d4.cpp:74]   --->   Operation 899 'add' 'add_ln74_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 900 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_55 = add i64 %add_ln86_54, i64 %add_ln86_50" [d4.cpp:86]   --->   Operation 900 'add' 'add_ln86_55' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 901 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_56 = add i64 %add94_6360_load, i64 %add_ln86_55" [d4.cpp:86]   --->   Operation 901 'add' 'add_ln86_56' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 902 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_23, i64 %empty_41" [d4.cpp:42]   --->   Operation 902 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 903 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_20, i64 %empty_40" [d4.cpp:42]   --->   Operation 903 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 904 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_17, i64 %empty_39" [d4.cpp:42]   --->   Operation 904 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 905 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_14, i64 %empty_38" [d4.cpp:42]   --->   Operation 905 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 906 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln74_11, i64 %empty_37" [d4.cpp:42]   --->   Operation 906 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 907 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_56, i64 %add94_6360" [d4.cpp:42]   --->   Operation 907 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 908 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_15, i64 %add94_5354" [d4.cpp:42]   --->   Operation 908 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 909 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_14, i64 %add94_4348" [d4.cpp:42]   --->   Operation 909 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 910 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_13, i64 %add94_3342" [d4.cpp:42]   --->   Operation 910 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 911 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln86_11, i64 %add94_2130336" [d4.cpp:42]   --->   Operation 911 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 912 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln83_12, i64 %add94_145330" [d4.cpp:42]   --->   Operation 912 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 913 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %add_ln83_6, i64 %add94324" [d4.cpp:42]   --->   Operation 913 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 914 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body55" [d4.cpp:42]   --->   Operation 914 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.870ns
The critical path consists of the following:
	'alloca' operation ('i') [68]  (0.000 ns)
	'load' operation ('i', d4.cpp:74) on local variable 'i' [124]  (0.000 ns)
	'add' operation ('empty_42', d4.cpp:42) [164]  (0.797 ns)
	'icmp' operation ('icmp_ln63', d4.cpp:63) [187]  (0.789 ns)
	'sub' operation ('sub_ln78_24', d4.cpp:78) [198]  (0.548 ns)
	'sub' operation ('sub_ln78_15', d4.cpp:78) [219]  (0.673 ns)
	'sub' operation ('sub_ln78_16', d4.cpp:78) [241]  (0.673 ns)
	'sub' operation ('sub_ln78_17', d4.cpp:78) [261]  (0.797 ns)
	'sub' operation ('sub_ln78_9', d4.cpp:78) [282]  (0.797 ns)
	'sub' operation ('sub_ln78_10', d4.cpp:78) [303]  (0.797 ns)

 <State 2>: 7.282ns
The critical path consists of the following:
	'sub' operation ('sub_ln58_1', d4.cpp:58) [385]  (0.673 ns)
	'sub' operation ('sub_ln58_2', d4.cpp:58) [397]  (0.797 ns)
	'mux' operation ('tmp_33', d4.cpp:86) [403]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln86_5', d4.cpp:86) [406]  (2.103 ns)
	'and' operation ('and_ln86_11', d4.cpp:86) [408]  (0.000 ns)
	'add' operation ('add_ln86_49', d4.cpp:86) [932]  (1.085 ns)
	'add' operation ('add_ln86_50', d4.cpp:86) [933]  (0.819 ns)

 <State 3>: 7.037ns
The critical path consists of the following:
	'sub' operation ('sub_ln78_5', d4.cpp:78) [599]  (0.797 ns)
	'mux' operation ('tmp_58', d4.cpp:74) [622]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln74_41', d4.cpp:74) [624]  (2.103 ns)
	'add' operation ('add_ln74_21', d4.cpp:74) [922]  (1.085 ns)
	'add' operation ('add_ln74_22', d4.cpp:74) [923]  (0.000 ns)
	'add' operation ('add_ln74_23', d4.cpp:74) [924]  (0.819 ns)
	'store' operation ('store_ln42', d4.cpp:42) of variable 'add_ln74_23', d4.cpp:74 on local variable 'empty_41' [944]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
