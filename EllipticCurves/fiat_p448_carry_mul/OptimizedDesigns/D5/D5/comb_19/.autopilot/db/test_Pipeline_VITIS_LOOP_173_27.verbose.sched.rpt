

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_173_27'
================================================================
* Date:           Fri May 10 16:18:07 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_19 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.872 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_173_27  |        2|        2|         1|          1|          1|     2|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%add385_3185 = alloca i32 1"   --->   Operation 4 'alloca' 'add385_3185' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 6 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 7 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 8 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 9 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 10 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 11 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 12 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 13 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 14 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 15 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 16 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 17 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 18 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 19 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 20 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 21 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 22 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arr_56_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_56"   --->   Operation 23 'read' 'arr_56_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_56_read, i64 %add385_3185"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc386"   --->   Operation 27 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.87>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%i_4 = load i4 %i" [d5.cpp:173]   --->   Operation 28 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_4, i32 3" [d5.cpp:173]   --->   Operation 29 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln173 = br i1 %tmp, void %for.end391.exitStub, void %for.inc386.split" [d5.cpp:173]   --->   Operation 30 'br' 'br_ln173' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%add385_3185_load = load i64 %add385_3185" [d5.cpp:179]   --->   Operation 31 'load' 'add385_3185_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%k_load = load i4 %k" [d5.cpp:35]   --->   Operation 32 'load' 'k_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specpipeline_ln175 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_5" [d5.cpp:175]   --->   Operation 33 'specpipeline' 'specpipeline_ln175' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%speclooptripcount_ln35 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d5.cpp:35]   --->   Operation 34 'speclooptripcount' 'speclooptripcount_ln35' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%specloopname_ln173 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d5.cpp:173]   --->   Operation 35 'specloopname' 'specloopname_ln173' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln35 = trunc i4 %k_load" [d5.cpp:35]   --->   Operation 36 'trunc' 'trunc_ln35' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_4" [d5.cpp:179]   --->   Operation 37 'mux' 'tmp_s' <Predicate = (tmp)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln179 = zext i32 %tmp_s" [d5.cpp:179]   --->   Operation 38 'zext' 'zext_ln179' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.67ns)   --->   "%icmp_ln179 = icmp_eq  i3 %trunc_ln35, i3 4" [d5.cpp:179]   --->   Operation 39 'icmp' 'icmp_ln179' <Predicate = (tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.44ns)   --->   "%select_ln179 = select i1 %icmp_ln179, i32 %arg2_r_4_reload_read, i32 %arg2_r_reload_read" [d5.cpp:179]   --->   Operation 40 'select' 'select_ln179' <Predicate = (tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln179_1 = zext i32 %select_ln179" [d5.cpp:179]   --->   Operation 41 'zext' 'zext_ln179_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_4" [d5.cpp:179]   --->   Operation 42 'mux' 'tmp_24' <Predicate = (tmp)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln179_2 = zext i32 %tmp_24" [d5.cpp:179]   --->   Operation 43 'zext' 'zext_ln179_2' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.44ns)   --->   "%select_ln179_1 = select i1 %icmp_ln179, i32 %arg2_r_5_reload_read, i32 %arg2_r_1_reload_read" [d5.cpp:179]   --->   Operation 44 'select' 'select_ln179_1' <Predicate = (tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln179_3 = zext i32 %select_ln179_1" [d5.cpp:179]   --->   Operation 45 'zext' 'zext_ln179_3' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_4" [d5.cpp:179]   --->   Operation 46 'mux' 'tmp_25' <Predicate = (tmp)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln179_4 = zext i32 %tmp_25" [d5.cpp:179]   --->   Operation 47 'zext' 'zext_ln179_4' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.44ns)   --->   "%select_ln179_2 = select i1 %icmp_ln179, i32 %arg2_r_6_reload_read, i32 %arg2_r_2_reload_read" [d5.cpp:179]   --->   Operation 48 'select' 'select_ln179_2' <Predicate = (tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln179_5 = zext i32 %select_ln179_2" [d5.cpp:179]   --->   Operation 49 'zext' 'zext_ln179_5' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i4 %i_4" [d5.cpp:179]   --->   Operation 50 'mux' 'tmp_26' <Predicate = (tmp)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln179_6 = zext i32 %tmp_26" [d5.cpp:179]   --->   Operation 51 'zext' 'zext_ln179_6' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.79ns)   --->   "%add_ln179 = add i4 %k_load, i4 4" [d5.cpp:179]   --->   Operation 52 'add' 'add_ln179' <Predicate = (tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.44ns)   --->   "%select_ln179_3 = select i1 %icmp_ln179, i32 %arg2_r_7_reload_read, i32 %arg2_r_3_reload_read" [d5.cpp:179]   --->   Operation 53 'select' 'select_ln179_3' <Predicate = (tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln179_7 = zext i32 %select_ln179_3" [d5.cpp:179]   --->   Operation 54 'zext' 'zext_ln179_7' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 55 '%mul_ln179 = mul i64 %zext_ln179_7, i64 %zext_ln179_6'
ST_2 : Operation 55 [1/1] (2.10ns)   --->   "%mul_ln179 = mul i64 %zext_ln179_7, i64 %zext_ln179_6" [d5.cpp:179]   --->   Operation 55 'mul' 'mul_ln179' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 56 '%mul_ln179_1 = mul i64 %zext_ln179_3, i64 %zext_ln179_2'
ST_2 : Operation 56 [1/1] (2.10ns)   --->   "%mul_ln179_1 = mul i64 %zext_ln179_3, i64 %zext_ln179_2" [d5.cpp:179]   --->   Operation 56 'mul' 'mul_ln179_1' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 57 '%mul_ln179_2 = mul i64 %zext_ln179_5, i64 %zext_ln179_4'
ST_2 : Operation 57 [1/1] (2.10ns)   --->   "%mul_ln179_2 = mul i64 %zext_ln179_5, i64 %zext_ln179_4" [d5.cpp:179]   --->   Operation 57 'mul' 'mul_ln179_2' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 58 '%mul_ln179_3 = mul i64 %zext_ln179_1, i64 %zext_ln179'
ST_2 : Operation 58 [1/1] (2.10ns)   --->   "%mul_ln179_3 = mul i64 %zext_ln179_1, i64 %zext_ln179" [d5.cpp:179]   --->   Operation 58 'mul' 'mul_ln179_3' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.08ns)   --->   "%add_ln179_1 = add i64 %mul_ln179_3, i64 %mul_ln179_1" [d5.cpp:179]   --->   Operation 59 'add' 'add_ln179_1' <Predicate = (tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.08ns)   --->   "%add_ln179_2 = add i64 %mul_ln179_2, i64 %mul_ln179" [d5.cpp:179]   --->   Operation 60 'add' 'add_ln179_2' <Predicate = (tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln179_3 = add i64 %add_ln179_2, i64 %add_ln179_1" [d5.cpp:179]   --->   Operation 61 'add' 'add_ln179_3' <Predicate = (tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln179_4 = add i64 %add385_3185_load, i64 %add_ln179_3" [d5.cpp:179]   --->   Operation 62 'add' 'add_ln179_4' <Predicate = (tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 63 [1/1] (0.79ns)   --->   "%add_ln173 = add i4 %i_4, i4 12" [d5.cpp:173]   --->   Operation 63 'add' 'add_ln173' <Predicate = (tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln173 = store i4 %add_ln179, i4 %k" [d5.cpp:173]   --->   Operation 64 'store' 'store_ln173' <Predicate = (tmp)> <Delay = 0.42>
ST_2 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln173 = store i4 %add_ln173, i4 %i" [d5.cpp:173]   --->   Operation 65 'store' 'store_ln173' <Predicate = (tmp)> <Delay = 0.42>
ST_2 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln173 = store i64 %add_ln179_4, i64 %add385_3185" [d5.cpp:173]   --->   Operation 66 'store' 'store_ln173' <Predicate = (tmp)> <Delay = 0.42>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln173 = br void %for.inc386" [d5.cpp:173]   --->   Operation 67 'br' 'br_ln173' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%add385_3185_load_1 = load i64 %add385_3185"   --->   Operation 68 'load' 'add385_3185_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add385_3185_out, i64 %add385_3185_load_1"   --->   Operation 69 'write' 'write_ln0' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 70 'ret' 'ret_ln0' <Predicate = (!tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('k') [21]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'k' [39]  (0.427 ns)

 <State 2>: 6.872ns
The critical path consists of the following:
	'load' operation ('k_load', d5.cpp:35) on local variable 'k' [49]  (0.000 ns)
	'icmp' operation ('icmp_ln179', d5.cpp:179) [56]  (0.673 ns)
	'select' operation ('select_ln179_3', d5.cpp:179) [70]  (0.449 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln179', d5.cpp:179) [72]  (2.103 ns)
	'add' operation ('add_ln179_2', d5.cpp:179) [77]  (1.085 ns)
	'add' operation ('add_ln179_3', d5.cpp:179) [78]  (0.000 ns)
	'add' operation ('add_ln179_4', d5.cpp:179) [79]  (0.819 ns)
	'store' operation ('store_ln173', d5.cpp:173) of variable 'add_ln179_4', d5.cpp:179 on local variable 'add385_3185' [83]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
