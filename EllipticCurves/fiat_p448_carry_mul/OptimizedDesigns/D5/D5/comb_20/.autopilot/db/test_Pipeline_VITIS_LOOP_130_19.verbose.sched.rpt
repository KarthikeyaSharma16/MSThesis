

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_130_19'
================================================================
* Date:           Fri May 10 16:19:16 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_20 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.890 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_130_19  |        6|        6|         2|          1|          1|     6|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.81>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add289443 = alloca i32 1"   --->   Operation 5 'alloca' 'add289443' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add289_191444 = alloca i32 1"   --->   Operation 6 'alloca' 'add289_191444' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add289_1445 = alloca i32 1"   --->   Operation 7 'alloca' 'add289_1445' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add289_1_1446 = alloca i32 1"   --->   Operation 8 'alloca' 'add289_1_1446' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add289_2447 = alloca i32 1"   --->   Operation 9 'alloca' 'add289_2447' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add289_2_1448 = alloca i32 1"   --->   Operation 10 'alloca' 'add289_2_1448' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 12 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 13 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 14 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 15 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 16 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 17 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 18 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 19 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 20 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 21 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 22 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 23 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 24 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arr_52_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_52"   --->   Operation 25 'read' 'arr_52_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arr_53_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_53"   --->   Operation 26 'read' 'arr_53_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arr_54_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_54"   --->   Operation 27 'read' 'arr_54_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arr_55_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_55"   --->   Operation 28 'read' 'arr_55_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arr_56_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_56"   --->   Operation 29 'read' 'arr_56_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arr_57_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_57"   --->   Operation 30 'read' 'arr_57_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 31 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 6, i3 %i"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_57_read, i64 %add289_2_1448"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_56_read, i64 %add289_2447"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_55_read, i64 %add289_1_1446"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_54_read, i64 %add289_1445"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_53_read, i64 %add289_191444"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_52_read, i64 %add289443"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc297.2"   --->   Operation 39 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i_4 = load i3 %i" [d5.cpp:130]   --->   Operation 40 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.67ns)   --->   "%icmp_ln130 = icmp_eq  i3 %i_4, i3 0" [d5.cpp:130]   --->   Operation 41 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln130 = br i1 %icmp_ln130, void %for.inc297.2.split, void %VITIS_LOOP_151_23.exitStub" [d5.cpp:130]   --->   Operation 42 'br' 'br_ln130' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i3 %i_4" [d5.cpp:130]   --->   Operation 43 'zext' 'zext_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.79ns)   --->   "%empty = add i4 %zext_ln130, i4 9" [d5.cpp:130]   --->   Operation 44 'add' 'empty' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.67ns)   --->   "%tmp_67 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i3 %i_4" [d5.cpp:143]   --->   Operation 45 'mux' 'tmp_67' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.79ns)   --->   "%icmp_ln143 = icmp_eq  i4 %empty, i4 15" [d5.cpp:143]   --->   Operation 46 'icmp' 'icmp_ln143' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35)   --->   "%select_ln143_2 = select i1 %icmp_ln143, i3 6, i3 7" [d5.cpp:143]   --->   Operation 47 'select' 'select_ln143_2' <Predicate = (!icmp_ln130)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.79ns)   --->   "%icmp_ln143_1 = icmp_ugt  i4 %empty, i4 13" [d5.cpp:143]   --->   Operation 48 'icmp' 'icmp_ln143_1' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35)   --->   "%zext_ln35_12 = zext i1 %icmp_ln143_1" [d5.cpp:35]   --->   Operation 49 'zext' 'zext_ln35_12' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln35 = sub i3 %select_ln143_2, i3 %zext_ln35_12" [d5.cpp:35]   --->   Operation 50 'sub' 'sub_ln35' <Predicate = (!icmp_ln130)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.79ns)   --->   "%icmp_ln143_2 = icmp_ugt  i4 %empty, i4 12" [d5.cpp:143]   --->   Operation 51 'icmp' 'icmp_ln143_2' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln35_13 = zext i1 %icmp_ln143_2" [d5.cpp:35]   --->   Operation 52 'zext' 'zext_ln35_13' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.67ns)   --->   "%sub_ln35_18 = sub i3 %sub_ln35, i3 %zext_ln35_13" [d5.cpp:35]   --->   Operation 53 'sub' 'sub_ln35_18' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.79ns)   --->   "%icmp_ln143_3 = icmp_ugt  i4 %empty, i4 11" [d5.cpp:143]   --->   Operation 54 'icmp' 'icmp_ln143_3' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.79ns)   --->   "%icmp_ln143_4 = icmp_ugt  i4 %empty, i4 10" [d5.cpp:143]   --->   Operation 55 'icmp' 'icmp_ln143_4' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.67ns)   --->   "%add_ln130 = add i3 %i_4, i3 7" [d5.cpp:130]   --->   Operation 56 'add' 'add_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.42ns)   --->   "%store_ln130 = store i3 %add_ln130, i3 %i" [d5.cpp:130]   --->   Operation 57 'store' 'store_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.42>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%add289443_load_1 = load i64 %add289443"   --->   Operation 113 'load' 'add289443_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%add289_191444_load_1 = load i64 %add289_191444"   --->   Operation 114 'load' 'add289_191444_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%add289_1445_load_1 = load i64 %add289_1445"   --->   Operation 115 'load' 'add289_1445_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%add289_1_1446_load_1 = load i64 %add289_1_1446"   --->   Operation 116 'load' 'add289_1_1446_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%add289_2447_load_1 = load i64 %add289_2447"   --->   Operation 117 'load' 'add289_2447_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%add289_2_1448_load_1 = load i64 %add289_2_1448"   --->   Operation 118 'load' 'add289_2_1448_load_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_2_1448_out, i64 %add289_2_1448_load_1"   --->   Operation 119 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_2447_out, i64 %add289_2447_load_1"   --->   Operation 120 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_1_1446_out, i64 %add289_1_1446_load_1"   --->   Operation 121 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_1445_out, i64 %add289_1445_load_1"   --->   Operation 122 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_191444_out, i64 %add289_191444_load_1"   --->   Operation 123 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289443_out, i64 %add289443_load_1"   --->   Operation 124 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 125 'ret' 'ret_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.89>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%add289443_load = load i64 %add289443" [d5.cpp:143]   --->   Operation 58 'load' 'add289443_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%add289_191444_load = load i64 %add289_191444" [d5.cpp:143]   --->   Operation 59 'load' 'add289_191444_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%add289_1445_load = load i64 %add289_1445" [d5.cpp:143]   --->   Operation 60 'load' 'add289_1445_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%add289_1_1446_load = load i64 %add289_1_1446" [d5.cpp:143]   --->   Operation 61 'load' 'add289_1_1446_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%add289_2447_load = load i64 %add289_2447" [d5.cpp:143]   --->   Operation 62 'load' 'add289_2447_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%add289_2_1448_load = load i64 %add289_2_1448" [d5.cpp:143]   --->   Operation 63 'load' 'add289_2_1448_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%specpipeline_ln132 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_4" [d5.cpp:132]   --->   Operation 64 'specpipeline' 'specpipeline_ln132' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%speclooptripcount_ln130 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 6, i64 6, i64 6" [d5.cpp:130]   --->   Operation 65 'speclooptripcount' 'speclooptripcount_ln130' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%specloopname_ln130 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [d5.cpp:130]   --->   Operation 66 'specloopname' 'specloopname_ln130' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln143 = zext i32 %tmp_67" [d5.cpp:143]   --->   Operation 67 'zext' 'zext_ln143' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 68 '%mul_ln143 = mul i64 %zext_ln143, i64 %conv36_cast'
ST_2 : Operation 68 [1/1] (2.02ns)   --->   "%mul_ln143 = mul i64 %zext_ln143, i64 %conv36_cast" [d5.cpp:143]   --->   Operation 68 'mul' 'mul_ln143' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln143)   --->   "%select_ln143_1 = select i1 %icmp_ln143, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 69 'select' 'select_ln143_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln143)   --->   "%and_ln143 = and i64 %mul_ln143, i64 %select_ln143_1" [d5.cpp:143]   --->   Operation 70 'and' 'and_ln143' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln143 = add i64 %and_ln143, i64 %add289443_load" [d5.cpp:143]   --->   Operation 71 'add' 'add_ln143' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.44ns)   --->   "%select_ln143 = select i1 %icmp_ln143, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d5.cpp:143]   --->   Operation 72 'select' 'select_ln143' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln143_1 = zext i32 %select_ln143" [d5.cpp:143]   --->   Operation 73 'zext' 'zext_ln143_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 74 '%mul_ln143_1 = mul i64 %zext_ln143_1, i64 %zext_ln143'
ST_2 : Operation 74 [1/1] (2.02ns)   --->   "%mul_ln143_1 = mul i64 %zext_ln143_1, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 74 'mul' 'mul_ln143_1' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_1)   --->   "%select_ln143_3 = select i1 %icmp_ln143_1, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 75 'select' 'select_ln143_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_1)   --->   "%and_ln143_1 = and i64 %mul_ln143_1, i64 %select_ln143_3" [d5.cpp:143]   --->   Operation 76 'and' 'and_ln143_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln143_1 = add i64 %and_ln143_1, i64 %add289_191444_load" [d5.cpp:143]   --->   Operation 77 'add' 'add_ln143_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln143 = sext i3 %sub_ln35" [d5.cpp:143]   --->   Operation 78 'sext' 'sext_ln143' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.48ns)   --->   "%tmp_68 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143" [d5.cpp:143]   --->   Operation 79 'mux' 'tmp_68' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln143_2 = zext i32 %tmp_68" [d5.cpp:143]   --->   Operation 80 'zext' 'zext_ln143_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 81 '%mul_ln143_2 = mul i64 %zext_ln143_2, i64 %zext_ln143'
ST_2 : Operation 81 [1/1] (2.02ns)   --->   "%mul_ln143_2 = mul i64 %zext_ln143_2, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 81 'mul' 'mul_ln143_2' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_2)   --->   "%select_ln143_4 = select i1 %icmp_ln143_2, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 82 'select' 'select_ln143_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_2)   --->   "%and_ln143_2 = and i64 %mul_ln143_2, i64 %select_ln143_4" [d5.cpp:143]   --->   Operation 83 'and' 'and_ln143_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln143_2 = add i64 %and_ln143_2, i64 %add289_1445_load" [d5.cpp:143]   --->   Operation 84 'add' 'add_ln143_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln143_1 = sext i3 %sub_ln35_18" [d5.cpp:143]   --->   Operation 85 'sext' 'sext_ln143_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.48ns)   --->   "%tmp_69 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143_1" [d5.cpp:143]   --->   Operation 86 'mux' 'tmp_69' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln143_3 = zext i32 %tmp_69" [d5.cpp:143]   --->   Operation 87 'zext' 'zext_ln143_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 88 '%mul_ln143_3 = mul i64 %zext_ln143_3, i64 %zext_ln143'
ST_2 : Operation 88 [1/1] (2.02ns)   --->   "%mul_ln143_3 = mul i64 %zext_ln143_3, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 88 'mul' 'mul_ln143_3' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_3)   --->   "%select_ln143_5 = select i1 %icmp_ln143_3, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 89 'select' 'select_ln143_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_3)   --->   "%and_ln143_3 = and i64 %mul_ln143_3, i64 %select_ln143_5" [d5.cpp:143]   --->   Operation 90 'and' 'and_ln143_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln143_3 = add i64 %and_ln143_3, i64 %add289_1_1446_load" [d5.cpp:143]   --->   Operation 91 'add' 'add_ln143_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln144 = zext i1 %icmp_ln143_3" [d5.cpp:144]   --->   Operation 92 'zext' 'zext_ln144' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.67ns)   --->   "%sub_ln35_19 = sub i4 %sext_ln143_1, i4 %zext_ln144" [d5.cpp:35]   --->   Operation 93 'sub' 'sub_ln35_19' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.48ns)   --->   "%tmp_70 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_19" [d5.cpp:143]   --->   Operation 94 'mux' 'tmp_70' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln143_4 = zext i32 %tmp_70" [d5.cpp:143]   --->   Operation 95 'zext' 'zext_ln143_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 96 '%mul_ln143_4 = mul i64 %zext_ln143_4, i64 %zext_ln143'
ST_2 : Operation 96 [1/1] (2.02ns)   --->   "%mul_ln143_4 = mul i64 %zext_ln143_4, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 96 'mul' 'mul_ln143_4' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_4)   --->   "%select_ln143_6 = select i1 %icmp_ln143_4, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 97 'select' 'select_ln143_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln143_4)   --->   "%and_ln143_4 = and i64 %mul_ln143_4, i64 %select_ln143_6" [d5.cpp:143]   --->   Operation 98 'and' 'and_ln143_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln143_4 = add i64 %and_ln143_4, i64 %add289_2447_load" [d5.cpp:143]   --->   Operation 99 'add' 'add_ln143_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln144_1 = zext i1 %icmp_ln143_4" [d5.cpp:144]   --->   Operation 100 'zext' 'zext_ln144_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.79ns)   --->   "%sub_ln35_20 = sub i4 %sub_ln35_19, i4 %zext_ln144_1" [d5.cpp:35]   --->   Operation 101 'sub' 'sub_ln35_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.48ns)   --->   "%tmp_71 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_20" [d5.cpp:143]   --->   Operation 102 'mux' 'tmp_71' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln143_5 = zext i32 %tmp_71" [d5.cpp:143]   --->   Operation 103 'zext' 'zext_ln143_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.39ns)   --->   Input mux for Operation 104 '%mul_ln143_5 = mul i64 %zext_ln143_5, i64 %zext_ln143'
ST_2 : Operation 104 [1/1] (2.02ns)   --->   "%mul_ln143_5 = mul i64 %zext_ln143_5, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 104 'mul' 'mul_ln143_5' <Predicate = true> <Delay = 2.02> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (1.08ns)   --->   "%add_ln143_5 = add i64 %mul_ln143_5, i64 %add289_2_1448_load" [d5.cpp:143]   --->   Operation 105 'add' 'add_ln143_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143_5, i64 %add289_2_1448" [d5.cpp:130]   --->   Operation 106 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 107 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143_4, i64 %add289_2447" [d5.cpp:130]   --->   Operation 107 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 108 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143_3, i64 %add289_1_1446" [d5.cpp:130]   --->   Operation 108 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 109 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143_2, i64 %add289_1445" [d5.cpp:130]   --->   Operation 109 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 110 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143_1, i64 %add289_191444" [d5.cpp:130]   --->   Operation 110 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 111 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %add_ln143, i64 %add289443" [d5.cpp:130]   --->   Operation 111 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln130 = br void %for.inc297.2" [d5.cpp:130]   --->   Operation 112 'br' 'br_ln130' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.815ns
The critical path consists of the following:
	'alloca' operation ('i') [32]  (0.000 ns)
	'load' operation ('i', d5.cpp:130) on local variable 'i' [62]  (0.000 ns)
	'add' operation ('empty', d5.cpp:130) [76]  (0.797 ns)
	'icmp' operation ('icmp_ln143', d5.cpp:143) [79]  (0.797 ns)
	'select' operation ('select_ln143_2', d5.cpp:143) [84]  (0.000 ns)
	'sub' operation ('sub_ln35', d5.cpp:35) [93]  (0.548 ns)
	'sub' operation ('sub_ln35_18', d5.cpp:35) [103]  (0.673 ns)

 <State 2>: 6.890ns
The critical path consists of the following:
	'sub' operation ('sub_ln35_19', d5.cpp:35) [113]  (0.673 ns)
	'sub' operation ('sub_ln35_20', d5.cpp:35) [122]  (0.797 ns)
	'mux' operation ('tmp_71', d5.cpp:143) [123]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.394 ns)
'mul' operation ('mul_ln143_5', d5.cpp:143) [125]  (2.026 ns)
	'add' operation ('add_ln143_5', d5.cpp:143) [126]  (1.085 ns)
	'store' operation ('store_ln130', d5.cpp:130) of variable 'add_ln143_5', d5.cpp:143 on local variable 'add289_2_1448' [129]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
