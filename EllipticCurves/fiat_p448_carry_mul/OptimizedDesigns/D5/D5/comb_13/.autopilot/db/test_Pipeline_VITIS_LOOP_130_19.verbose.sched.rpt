

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_130_19'
================================================================
* Date:           Fri May 10 16:12:30 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_13 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.048 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_130_19  |        3|        3|         2|          1|          1|     3|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.09>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%arr = alloca i32 1"   --->   Operation 5 'alloca' 'arr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arr_76 = alloca i32 1"   --->   Operation 6 'alloca' 'arr_76' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arr_77 = alloca i32 1"   --->   Operation 7 'alloca' 'arr_77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr_78 = alloca i32 1"   --->   Operation 8 'alloca' 'arr_78' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_79 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_80 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_80' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 12 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 13 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 14 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 15 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 16 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 17 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 18 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 19 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 20 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 21 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 22 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 23 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 24 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%add212_1104265_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_1104265_reload"   --->   Operation 25 'read' 'add212_1104265_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%add212_2114266_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_2114266_reload"   --->   Operation 26 'read' 'add212_2114266_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%add212_3267_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_3267_reload"   --->   Operation 27 'read' 'add212_3267_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%add212_4268_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_4268_reload"   --->   Operation 28 'read' 'add212_4268_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%add212_5269_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_5269_reload"   --->   Operation 29 'read' 'add212_5269_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%add212_6270_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add212_6270_reload"   --->   Operation 30 'read' 'add212_6270_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 31 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 6, i3 %i"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_6270_reload_read, i64 %arr_80"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_5269_reload_read, i64 %arr_79"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_4268_reload_read, i64 %arr_78"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_3267_reload_read, i64 %arr_77"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_2114266_reload_read, i64 %arr_76"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add212_1104265_reload_read, i64 %arr"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc297.1.1"   --->   Operation 39 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i_4 = load i3 %i" [d5.cpp:130]   --->   Operation 40 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.67ns)   --->   "%icmp_ln130 = icmp_eq  i3 %i_4, i3 0" [d5.cpp:130]   --->   Operation 41 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln130 = br i1 %icmp_ln130, void %for.inc297.1.1.split, void %for.inc353.5.preheader.exitStub" [d5.cpp:130]   --->   Operation 42 'br' 'br_ln130' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%empty = or i3 %i_4, i3 1" [d5.cpp:130]   --->   Operation 43 'or' 'empty' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %empty" [d5.cpp:130]   --->   Operation 44 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.67ns)   --->   "%tmp_76 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 0, i32 %arg1_r_4_reload_read, i32 0, i32 %arg1_r_6_reload_read, i3 %i_4" [d5.cpp:143]   --->   Operation 45 'mux' 'tmp_76' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.79ns)   --->   "%icmp_ln143 = icmp_eq  i4 %tmp_s, i4 15" [d5.cpp:143]   --->   Operation 46 'icmp' 'icmp_ln143' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.79ns)   --->   "%icmp_ln143_1 = icmp_ugt  i4 %tmp_s, i4 13" [d5.cpp:143]   --->   Operation 47 'icmp' 'icmp_ln143_1' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.79ns)   --->   "%icmp_ln143_2 = icmp_ugt  i4 %tmp_s, i4 12" [d5.cpp:143]   --->   Operation 48 'icmp' 'icmp_ln143_2' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.79ns)   --->   "%icmp_ln143_3 = icmp_ugt  i4 %tmp_s, i4 11" [d5.cpp:143]   --->   Operation 49 'icmp' 'icmp_ln143_3' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_81 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %i_4" [d5.cpp:130]   --->   Operation 50 'bitconcatenate' 'tmp_81' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.67ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 0, i32 %arg1_r_3_reload_read, i32 0, i32 %arg1_r_5_reload_read, i3 %i_4" [d5.cpp:143]   --->   Operation 51 'mux' 'tmp_82' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.79ns)   --->   "%icmp_ln143_4 = icmp_eq  i4 %tmp_81, i4 14" [d5.cpp:143]   --->   Operation 52 'icmp' 'icmp_ln143_4' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.79ns)   --->   "%icmp_ln143_5 = icmp_ugt  i4 %tmp_81, i4 12" [d5.cpp:143]   --->   Operation 53 'icmp' 'icmp_ln143_5' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.79ns)   --->   "%icmp_ln143_6 = icmp_ugt  i4 %tmp_81, i4 11" [d5.cpp:143]   --->   Operation 54 'icmp' 'icmp_ln143_6' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.79ns)   --->   "%icmp_ln143_7 = icmp_ugt  i4 %tmp_81, i4 10" [d5.cpp:143]   --->   Operation 55 'icmp' 'icmp_ln143_7' <Predicate = (!icmp_ln130)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.67ns)   --->   "%add_ln130 = add i3 %i_4, i3 6" [d5.cpp:130]   --->   Operation 56 'add' 'add_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.42ns)   --->   "%store_ln130 = store i3 %add_ln130, i3 %i" [d5.cpp:130]   --->   Operation 57 'store' 'store_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.42>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%arr_load = load i64 %arr"   --->   Operation 150 'load' 'arr_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%arr_76_load = load i64 %arr_76"   --->   Operation 151 'load' 'arr_76_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%arr_77_load = load i64 %arr_77"   --->   Operation 152 'load' 'arr_77_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%arr_78_load = load i64 %arr_78"   --->   Operation 153 'load' 'arr_78_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%arr_79_load = load i64 %arr_79"   --->   Operation 154 'load' 'arr_79_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%arr_80_load = load i64 %arr_80"   --->   Operation 155 'load' 'arr_80_load' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_175_2262_out, i64 %arr_80_load"   --->   Operation 156 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_175_1261_out, i64 %arr_79_load"   --->   Operation 157 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_175260_out, i64 %arr_78_load"   --->   Operation 158 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_2259_out, i64 %arr_77_load"   --->   Operation 159 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289_191258_out, i64 %arr_76_load"   --->   Operation 160 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add289257_out, i64 %arr_load"   --->   Operation 161 'write' 'write_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 162 'ret' 'ret_ln0' <Predicate = (icmp_ln130)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.04>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%arr_load_4 = load i64 %arr" [d5.cpp:143]   --->   Operation 58 'load' 'arr_load_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%arr_76_load_1 = load i64 %arr_76" [d5.cpp:143]   --->   Operation 59 'load' 'arr_76_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%arr_77_load_1 = load i64 %arr_77" [d5.cpp:143]   --->   Operation 60 'load' 'arr_77_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%arr_78_load_1 = load i64 %arr_78" [d5.cpp:143]   --->   Operation 61 'load' 'arr_78_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%arr_79_load_1 = load i64 %arr_79" [d5.cpp:143]   --->   Operation 62 'load' 'arr_79_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%arr_80_load_1 = load i64 %arr_80" [d5.cpp:143]   --->   Operation 63 'load' 'arr_80_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%specpipeline_ln132 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_5" [d5.cpp:132]   --->   Operation 64 'specpipeline' 'specpipeline_ln132' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%speclooptripcount_ln130 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d5.cpp:130]   --->   Operation 65 'speclooptripcount' 'speclooptripcount_ln130' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%specloopname_ln130 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [d5.cpp:130]   --->   Operation 66 'specloopname' 'specloopname_ln130' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln143 = zext i32 %tmp_76" [d5.cpp:143]   --->   Operation 67 'zext' 'zext_ln143' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 68 '%mul_ln143 = mul i64 %zext_ln143, i64 %conv36_cast'
ST_2 : Operation 68 [1/1] (2.10ns)   --->   "%mul_ln143 = mul i64 %zext_ln143, i64 %conv36_cast" [d5.cpp:143]   --->   Operation 68 'mul' 'mul_ln143' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node arr_81)   --->   "%select_ln143_2 = select i1 %icmp_ln143, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 69 'select' 'select_ln143_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node arr_81)   --->   "%and_ln143 = and i64 %mul_ln143, i64 %select_ln143_2" [d5.cpp:143]   --->   Operation 70 'and' 'and_ln143' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_81 = add i64 %and_ln143, i64 %arr_load_4" [d5.cpp:143]   --->   Operation 71 'add' 'arr_81' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35_18)   --->   "%select_ln143_3 = select i1 %icmp_ln143, i3 6, i3 7" [d5.cpp:143]   --->   Operation 72 'select' 'select_ln143_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.44ns)   --->   "%select_ln143 = select i1 %icmp_ln143, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d5.cpp:143]   --->   Operation 73 'select' 'select_ln143' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln143_1 = zext i32 %select_ln143" [d5.cpp:143]   --->   Operation 74 'zext' 'zext_ln143_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35_18)   --->   "%zext_ln35 = zext i1 %icmp_ln143_1" [d5.cpp:35]   --->   Operation 75 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln35_18 = sub i3 %select_ln143_3, i3 %zext_ln35" [d5.cpp:35]   --->   Operation 76 'sub' 'sub_ln35_18' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln143 = sext i3 %sub_ln35_18" [d5.cpp:143]   --->   Operation 77 'sext' 'sext_ln143' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143" [d5.cpp:143]   --->   Operation 78 'mux' 'tmp_77' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln143_2 = zext i32 %tmp_77" [d5.cpp:143]   --->   Operation 79 'zext' 'zext_ln143_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln35_10 = zext i1 %icmp_ln143_2" [d5.cpp:35]   --->   Operation 80 'zext' 'zext_ln35_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.67ns)   --->   "%sub_ln35_19 = sub i3 %sub_ln35_18, i3 %zext_ln35_10" [d5.cpp:35]   --->   Operation 81 'sub' 'sub_ln35_19' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%sext_ln143_8 = sext i3 %sub_ln35_19" [d5.cpp:143]   --->   Operation 82 'sext' 'sext_ln143_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.48ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143_8" [d5.cpp:143]   --->   Operation 83 'mux' 'tmp_78' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln143_3 = zext i32 %tmp_78" [d5.cpp:143]   --->   Operation 84 'zext' 'zext_ln143_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln144 = zext i1 %icmp_ln143_3" [d5.cpp:144]   --->   Operation 85 'zext' 'zext_ln144' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.67ns)   --->   "%sub_ln35_20 = sub i4 %sext_ln143_8, i4 %zext_ln144" [d5.cpp:35]   --->   Operation 86 'sub' 'sub_ln35_20' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.48ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_20" [d5.cpp:143]   --->   Operation 87 'mux' 'tmp_79' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln143_4 = zext i32 %tmp_79" [d5.cpp:143]   --->   Operation 88 'zext' 'zext_ln143_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln35_20" [d5.cpp:143]   --->   Operation 89 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln143_5 = zext i32 %tmp_80" [d5.cpp:143]   --->   Operation 90 'zext' 'zext_ln143_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln143_6 = zext i32 %tmp_82" [d5.cpp:143]   --->   Operation 91 'zext' 'zext_ln143_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 92 '%mul_ln143_1 = mul i64 %zext_ln143_1, i64 %zext_ln143'
ST_2 : Operation 92 [1/1] (2.10ns)   --->   "%mul_ln143_1 = mul i64 %zext_ln143_1, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 92 'mul' 'mul_ln143_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_1)   --->   "%select_ln143_4 = select i1 %icmp_ln143_1, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 93 'select' 'select_ln143_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_1 = and i64 %mul_ln143_1, i64 %select_ln143_4" [d5.cpp:143]   --->   Operation 94 'and' 'and_ln143_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 95 '%mul_ln143_2 = mul i64 %zext_ln143_6, i64 %conv36_cast'
ST_2 : Operation 95 [1/1] (2.10ns)   --->   "%mul_ln143_2 = mul i64 %zext_ln143_6, i64 %conv36_cast" [d5.cpp:143]   --->   Operation 95 'mul' 'mul_ln143_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_2)   --->   "%select_ln143_5 = select i1 %icmp_ln143_4, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 96 'select' 'select_ln143_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_2 = and i64 %mul_ln143_2, i64 %select_ln143_5" [d5.cpp:143]   --->   Operation 97 'and' 'and_ln143_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln143 = add i64 %and_ln143_2, i64 %and_ln143_1" [d5.cpp:143]   --->   Operation 98 'add' 'add_ln143' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 99 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_82 = add i64 %arr_76_load_1, i64 %add_ln143" [d5.cpp:143]   --->   Operation 99 'add' 'arr_82' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35_21)   --->   "%select_ln143_6 = select i1 %icmp_ln143_4, i3 6, i3 7" [d5.cpp:143]   --->   Operation 100 'select' 'select_ln143_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.44ns)   --->   "%select_ln143_1 = select i1 %icmp_ln143_4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d5.cpp:143]   --->   Operation 101 'select' 'select_ln143_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln143_7 = zext i32 %select_ln143_1" [d5.cpp:143]   --->   Operation 102 'zext' 'zext_ln143_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 103 '%mul_ln143_3 = mul i64 %zext_ln143_2, i64 %zext_ln143'
ST_2 : Operation 103 [1/1] (2.10ns)   --->   "%mul_ln143_3 = mul i64 %zext_ln143_2, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 103 'mul' 'mul_ln143_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_3)   --->   "%select_ln143_7 = select i1 %icmp_ln143_2, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 104 'select' 'select_ln143_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_3 = and i64 %mul_ln143_3, i64 %select_ln143_7" [d5.cpp:143]   --->   Operation 105 'and' 'and_ln143_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 106 '%mul_ln143_4 = mul i64 %zext_ln143_7, i64 %zext_ln143_6'
ST_2 : Operation 106 [1/1] (2.10ns)   --->   "%mul_ln143_4 = mul i64 %zext_ln143_7, i64 %zext_ln143_6" [d5.cpp:143]   --->   Operation 106 'mul' 'mul_ln143_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_4)   --->   "%select_ln143_8 = select i1 %icmp_ln143_5, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 107 'select' 'select_ln143_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_4 = and i64 %mul_ln143_4, i64 %select_ln143_8" [d5.cpp:143]   --->   Operation 108 'and' 'and_ln143_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln143_2 = add i64 %and_ln143_4, i64 %and_ln143_3" [d5.cpp:143]   --->   Operation 109 'add' 'add_ln143_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 110 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_83 = add i64 %arr_77_load_1, i64 %add_ln143_2" [d5.cpp:143]   --->   Operation 110 'add' 'arr_83' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node sub_ln35_21)   --->   "%zext_ln35_11 = zext i1 %icmp_ln143_5" [d5.cpp:35]   --->   Operation 111 'zext' 'zext_ln35_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln35_21 = sub i3 %select_ln143_6, i3 %zext_ln35_11" [d5.cpp:35]   --->   Operation 112 'sub' 'sub_ln35_21' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%sext_ln143_9 = sext i3 %sub_ln35_21" [d5.cpp:143]   --->   Operation 113 'sext' 'sext_ln143_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143_9" [d5.cpp:143]   --->   Operation 114 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln143_8 = zext i32 %tmp_83" [d5.cpp:143]   --->   Operation 115 'zext' 'zext_ln143_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 116 '%mul_ln143_5 = mul i64 %zext_ln143_3, i64 %zext_ln143'
ST_2 : Operation 116 [1/1] (2.10ns)   --->   "%mul_ln143_5 = mul i64 %zext_ln143_3, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 116 'mul' 'mul_ln143_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_5)   --->   "%select_ln143_9 = select i1 %icmp_ln143_3, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 117 'select' 'select_ln143_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_5 = and i64 %mul_ln143_5, i64 %select_ln143_9" [d5.cpp:143]   --->   Operation 118 'and' 'and_ln143_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 119 '%mul_ln143_6 = mul i64 %zext_ln143_8, i64 %zext_ln143_6'
ST_2 : Operation 119 [1/1] (2.10ns)   --->   "%mul_ln143_6 = mul i64 %zext_ln143_8, i64 %zext_ln143_6" [d5.cpp:143]   --->   Operation 119 'mul' 'mul_ln143_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_6)   --->   "%select_ln143_10 = select i1 %icmp_ln143_6, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 120 'select' 'select_ln143_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_6 = and i64 %mul_ln143_6, i64 %select_ln143_10" [d5.cpp:143]   --->   Operation 121 'and' 'and_ln143_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln143_4 = add i64 %and_ln143_6, i64 %and_ln143_5" [d5.cpp:143]   --->   Operation 122 'add' 'add_ln143_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 123 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_84 = add i64 %arr_78_load_1, i64 %add_ln143_4" [d5.cpp:143]   --->   Operation 123 'add' 'arr_84' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln35_12 = zext i1 %icmp_ln143_6" [d5.cpp:35]   --->   Operation 124 'zext' 'zext_ln35_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.67ns)   --->   "%sub_ln35_22 = sub i3 %sub_ln35_21, i3 %zext_ln35_12" [d5.cpp:35]   --->   Operation 125 'sub' 'sub_ln35_22' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%sext_ln143_10 = sext i3 %sub_ln35_22" [d5.cpp:143]   --->   Operation 126 'sext' 'sext_ln143_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.48ns)   --->   "%tmp_84 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln143_10" [d5.cpp:143]   --->   Operation 127 'mux' 'tmp_84' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln143_9 = zext i32 %tmp_84" [d5.cpp:143]   --->   Operation 128 'zext' 'zext_ln143_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 129 '%mul_ln143_7 = mul i64 %zext_ln143_4, i64 %zext_ln143'
ST_2 : Operation 129 [1/1] (2.10ns)   --->   "%mul_ln143_7 = mul i64 %zext_ln143_4, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 129 'mul' 'mul_ln143_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 130 '%mul_ln143_8 = mul i64 %zext_ln143_9, i64 %zext_ln143_6'
ST_2 : Operation 130 [1/1] (2.10ns)   --->   "%mul_ln143_8 = mul i64 %zext_ln143_9, i64 %zext_ln143_6" [d5.cpp:143]   --->   Operation 130 'mul' 'mul_ln143_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln143_7)   --->   "%select_ln143_11 = select i1 %icmp_ln143_7, i64 18446744073709551615, i64 0" [d5.cpp:143]   --->   Operation 131 'select' 'select_ln143_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln143_7 = and i64 %mul_ln143_8, i64 %select_ln143_11" [d5.cpp:143]   --->   Operation 132 'and' 'and_ln143_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln143_6 = add i64 %and_ln143_7, i64 %mul_ln143_7" [d5.cpp:143]   --->   Operation 133 'add' 'add_ln143_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 134 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_85 = add i64 %arr_79_load_1, i64 %add_ln143_6" [d5.cpp:143]   --->   Operation 134 'add' 'arr_85' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln144_1 = zext i1 %icmp_ln143_7" [d5.cpp:144]   --->   Operation 135 'zext' 'zext_ln144_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.67ns)   --->   "%sub_ln35_23 = sub i4 %sext_ln143_10, i4 %zext_ln144_1" [d5.cpp:35]   --->   Operation 136 'sub' 'sub_ln35_23' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.48ns)   --->   "%tmp_85 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_23" [d5.cpp:143]   --->   Operation 137 'mux' 'tmp_85' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln143_10 = zext i32 %tmp_85" [d5.cpp:143]   --->   Operation 138 'zext' 'zext_ln143_10' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 139 '%mul_ln143_9 = mul i64 %zext_ln143_5, i64 %zext_ln143'
ST_2 : Operation 139 [1/1] (2.10ns)   --->   "%mul_ln143_9 = mul i64 %zext_ln143_5, i64 %zext_ln143" [d5.cpp:143]   --->   Operation 139 'mul' 'mul_ln143_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 140 '%mul_ln143_10 = mul i64 %zext_ln143_10, i64 %zext_ln143_6'
ST_2 : Operation 140 [1/1] (2.10ns)   --->   "%mul_ln143_10 = mul i64 %zext_ln143_10, i64 %zext_ln143_6" [d5.cpp:143]   --->   Operation 140 'mul' 'mul_ln143_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 141 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln143_8 = add i64 %mul_ln143_10, i64 %mul_ln143_9" [d5.cpp:143]   --->   Operation 141 'add' 'add_ln143_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 142 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_86 = add i64 %arr_80_load_1, i64 %add_ln143_8" [d5.cpp:143]   --->   Operation 142 'add' 'arr_86' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 143 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_86, i64 %arr_80" [d5.cpp:130]   --->   Operation 143 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 144 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_85, i64 %arr_79" [d5.cpp:130]   --->   Operation 144 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 145 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_84, i64 %arr_78" [d5.cpp:130]   --->   Operation 145 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 146 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_83, i64 %arr_77" [d5.cpp:130]   --->   Operation 146 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 147 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_82, i64 %arr_76" [d5.cpp:130]   --->   Operation 147 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 148 [1/1] (0.42ns)   --->   "%store_ln130 = store i64 %arr_81, i64 %arr" [d5.cpp:130]   --->   Operation 148 'store' 'store_ln130' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 149 [1/1] (0.00ns)   --->   "%br_ln130 = br void %for.inc297.1.1" [d5.cpp:130]   --->   Operation 149 'br' 'br_ln130' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.100ns
The critical path consists of the following:
	'alloca' operation ('i') [32]  (0.000 ns)
	'load' operation ('i', d5.cpp:130) on local variable 'i' [62]  (0.000 ns)
	'add' operation ('add_ln130', d5.cpp:130) [164]  (0.673 ns)
	'store' operation ('store_ln130', d5.cpp:130) of variable 'add_ln130', d5.cpp:130 on local variable 'i' [165]  (0.427 ns)

 <State 2>: 7.048ns
The critical path consists of the following:
	'select' operation ('select_ln143_3', d5.cpp:143) [84]  (0.000 ns)
	'sub' operation ('sub_ln35_18', d5.cpp:35) [89]  (0.548 ns)
	'sub' operation ('sub_ln35_19', d5.cpp:35) [95]  (0.673 ns)
	'sub' operation ('sub_ln35_20', d5.cpp:35) [101]  (0.673 ns)
	'mux' operation ('tmp_80', d5.cpp:143) [104]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.318 ns)
'mul' operation ('mul_ln143_9', d5.cpp:143) [160]  (2.102 ns)
	'add' operation ('add_ln143_8', d5.cpp:143) [162]  (0.000 ns)
	'add' operation ('arr', d5.cpp:143) [163]  (0.819 ns)
	'store' operation ('store_ln130', d5.cpp:130) of variable 'arr', d5.cpp:143 on local variable 'arr' [166]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
