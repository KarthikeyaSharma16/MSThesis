

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_77_9'
================================================================
* Date:           Fri May 10 16:14:40 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_15 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.015 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_77_9  |       16|       16|         3|          1|          1|    15|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arr_22 = alloca i32 1"   --->   Operation 6 'alloca' 'arr_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arr_23 = alloca i32 1"   --->   Operation 7 'alloca' 'arr_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr_24 = alloca i32 1"   --->   Operation 8 'alloca' 'arr_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_25 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_26 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_28 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_29 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_30 = alloca i32 1"   --->   Operation 13 'alloca' 'arr_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_31 = alloca i32 1"   --->   Operation 14 'alloca' 'arr_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arr_32 = alloca i32 1"   --->   Operation 15 'alloca' 'arr_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arr_33 = alloca i32 1"   --->   Operation 16 'alloca' 'arr_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arr_34 = alloca i32 1"   --->   Operation 17 'alloca' 'arr_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arr_35 = alloca i32 1"   --->   Operation 18 'alloca' 'arr_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_37 = alloca i32 1"   --->   Operation 19 'alloca' 'arr_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_38 = alloca i32 1"   --->   Operation 20 'alloca' 'arr_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 21 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 22 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 23 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 24 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 25 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 26 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 27 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 28 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 29 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 30 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 31 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 32 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 33 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 34 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 35 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 36 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 37 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 38 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 39 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 40 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 41 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 42 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 43 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 44 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 45 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 46 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 47 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 48 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 49 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 50 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 51 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 52 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arr_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr"   --->   Operation 53 'read' 'arr_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arr_1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1"   --->   Operation 54 'read' 'arr_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arr_2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_2"   --->   Operation 55 'read' 'arr_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arr_3_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_3"   --->   Operation 56 'read' 'arr_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arr_4_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_4"   --->   Operation 57 'read' 'arr_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arr_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_5"   --->   Operation 58 'read' 'arr_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arr_6_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_6"   --->   Operation 59 'read' 'arr_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 60 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_6_read, i64 %arr_38"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_5_read, i64 %arr_37"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_4_read, i64 %arr_35"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_3_read, i64 %arr_34"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_2_read, i64 %arr_33"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_read, i64 %arr_32"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_read, i64 %arr_31"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_30"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_6_read, i64 %arr_29"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_5_read, i64 %arr_28"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_4_read, i64 %arr_26"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_3_read, i64 %arr_25"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_2_read, i64 %arr_24"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_read, i64 %arr_23"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_read, i64 %arr_22"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc167.4"   --->   Operation 77 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.66>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [d5.cpp:77]   --->   Operation 78 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.79ns)   --->   "%icmp_ln77 = icmp_eq  i4 %i_2, i4 0" [d5.cpp:77]   --->   Operation 79 'icmp' 'icmp_ln77' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %icmp_ln77, void %for.inc167.4.split, void %for.inc213.2.6.preheader.exitStub" [d5.cpp:77]   --->   Operation 80 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%arr_22_load_1 = load i64 %arr_22" [d5.cpp:90]   --->   Operation 81 'load' 'arr_22_load_1' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%arr_23_load_1 = load i64 %arr_23" [d5.cpp:90]   --->   Operation 82 'load' 'arr_23_load_1' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i4 %i_2" [d5.cpp:77]   --->   Operation 83 'zext' 'zext_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.79ns)   --->   "%empty = add i5 %zext_ln77, i5 1" [d5.cpp:77]   --->   Operation 84 'add' 'empty' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.48ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_2" [d5.cpp:90]   --->   Operation 85 'mux' 'tmp' <Predicate = (!icmp_ln77)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i32 %tmp" [d5.cpp:90]   --->   Operation 86 'zext' 'zext_ln90' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d5.cpp:90]   --->   Operation 87 'bitselect' 'tmp_13' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 88 '%mul_ln90 = mul i64 %zext_ln90, i64 %conv36_cast'
ST_2 : Operation 88 [1/1] (2.10ns)   --->   "%mul_ln90 = mul i64 %zext_ln90, i64 %conv36_cast" [d5.cpp:90]   --->   Operation 88 'mul' 'mul_ln90' <Predicate = (!icmp_ln77)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node arr_39)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d5.cpp:90]   --->   Operation 89 'bitselect' 'tmp_14' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node arr_39)   --->   "%select_ln90_1 = select i1 %tmp_14, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 90 'select' 'select_ln90_1' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node arr_39)   --->   "%and_ln90 = and i64 %mul_ln90, i64 %select_ln90_1" [d5.cpp:90]   --->   Operation 91 'and' 'and_ln90' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_39 = add i64 %and_ln90, i64 %arr_22_load_1" [d5.cpp:90]   --->   Operation 92 'add' 'arr_39' <Predicate = (!icmp_ln77)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node k)   --->   "%select_ln90_2 = select i1 %tmp_13, i3 6, i3 7" [d5.cpp:90]   --->   Operation 93 'select' 'select_ln90_2' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.44ns)   --->   "%select_ln90 = select i1 %tmp_13, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d5.cpp:90]   --->   Operation 94 'select' 'select_ln90' <Predicate = (!icmp_ln77)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln90_1 = zext i32 %select_ln90" [d5.cpp:90]   --->   Operation 95 'zext' 'zext_ln90_1' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.78ns)   --->   "%icmp_ln90 = icmp_ugt  i5 %empty, i5 14" [d5.cpp:90]   --->   Operation 96 'icmp' 'icmp_ln90' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 97 '%mul_ln90_1 = mul i64 %zext_ln90_1, i64 %zext_ln90'
ST_2 : Operation 97 [1/1] (2.10ns)   --->   "%mul_ln90_1 = mul i64 %zext_ln90_1, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 97 'mul' 'mul_ln90_1' <Predicate = (!icmp_ln77)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node arr_40)   --->   "%select_ln90_3 = select i1 %icmp_ln90, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 98 'select' 'select_ln90_3' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node arr_40)   --->   "%and_ln90_1 = and i64 %mul_ln90_1, i64 %select_ln90_3" [d5.cpp:90]   --->   Operation 99 'and' 'and_ln90_1' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_40 = add i64 %and_ln90_1, i64 %arr_23_load_1" [d5.cpp:90]   --->   Operation 100 'add' 'arr_40' <Predicate = (!icmp_ln77)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node k)   --->   "%zext_ln35 = zext i1 %icmp_ln90" [d5.cpp:35]   --->   Operation 101 'zext' 'zext_ln35' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.54ns) (out node of the LUT)   --->   "%k = sub i3 %select_ln90_2, i3 %zext_ln35" [d5.cpp:35]   --->   Operation 102 'sub' 'k' <Predicate = (!icmp_ln77)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.78ns)   --->   "%icmp_ln90_1 = icmp_ugt  i5 %empty, i5 13" [d5.cpp:90]   --->   Operation 103 'icmp' 'icmp_ln90_1' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln91 = zext i1 %icmp_ln90_1" [d5.cpp:91]   --->   Operation 104 'zext' 'zext_ln91' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.67ns)   --->   "%k_1 = sub i3 %k, i3 %zext_ln91" [d5.cpp:91]   --->   Operation 105 'sub' 'k_1' <Predicate = (!icmp_ln77)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln35_1 = sext i3 %k_1" [d5.cpp:35]   --->   Operation 106 'sext' 'sext_ln35_1' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.78ns)   --->   "%icmp_ln90_2 = icmp_ugt  i5 %empty, i5 12" [d5.cpp:90]   --->   Operation 107 'icmp' 'icmp_ln90_2' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln91_1 = zext i1 %icmp_ln90_2" [d5.cpp:91]   --->   Operation 108 'zext' 'zext_ln91_1' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.67ns)   --->   "%sub_ln35_4 = sub i4 %sext_ln35_1, i4 %zext_ln91_1" [d5.cpp:35]   --->   Operation 109 'sub' 'sub_ln35_4' <Predicate = (!icmp_ln77)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.78ns)   --->   "%icmp_ln90_3 = icmp_ugt  i5 %empty, i5 11" [d5.cpp:90]   --->   Operation 110 'icmp' 'icmp_ln90_3' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln91_2 = zext i1 %icmp_ln90_3" [d5.cpp:91]   --->   Operation 111 'zext' 'zext_ln91_2' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.79ns)   --->   "%sub_ln35_5 = sub i4 %sub_ln35_4, i4 %zext_ln91_2" [d5.cpp:35]   --->   Operation 112 'sub' 'sub_ln35_5' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.78ns)   --->   "%icmp_ln90_4 = icmp_ugt  i5 %empty, i5 10" [d5.cpp:90]   --->   Operation 113 'icmp' 'icmp_ln90_4' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln91_3 = zext i1 %icmp_ln90_4" [d5.cpp:91]   --->   Operation 114 'zext' 'zext_ln91_3' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.79ns)   --->   "%sub_ln35_6 = sub i4 %sub_ln35_5, i4 %zext_ln91_3" [d5.cpp:35]   --->   Operation 115 'sub' 'sub_ln35_6' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.78ns)   --->   "%icmp_ln90_5 = icmp_ugt  i5 %empty, i5 9" [d5.cpp:90]   --->   Operation 116 'icmp' 'icmp_ln90_5' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln91_4 = zext i1 %icmp_ln90_5" [d5.cpp:91]   --->   Operation 117 'zext' 'zext_ln91_4' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.79ns)   --->   "%sub_ln35_7 = sub i4 %sub_ln35_6, i4 %zext_ln91_4" [d5.cpp:35]   --->   Operation 118 'sub' 'sub_ln35_7' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.78ns)   --->   "%icmp_ln90_6 = icmp_ugt  i5 %empty, i5 8" [d5.cpp:90]   --->   Operation 119 'icmp' 'icmp_ln90_6' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln91_5 = zext i1 %icmp_ln90_6" [d5.cpp:91]   --->   Operation 120 'zext' 'zext_ln91_5' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.79ns)   --->   "%sub_ln35_8 = sub i4 %sub_ln35_7, i4 %zext_ln91_5" [d5.cpp:35]   --->   Operation 121 'sub' 'sub_ln35_8' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty, i32 3, i32 4" [d5.cpp:90]   --->   Operation 122 'partselect' 'tmp_15' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.54ns)   --->   "%icmp_ln90_7 = icmp_ne  i2 %tmp_15, i2 0" [d5.cpp:90]   --->   Operation 123 'icmp' 'icmp_ln90_7' <Predicate = (!icmp_ln77)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.78ns)   --->   "%icmp_ln90_8 = icmp_ugt  i5 %empty, i5 6" [d5.cpp:90]   --->   Operation 124 'icmp' 'icmp_ln90_8' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.78ns)   --->   "%icmp_ln90_9 = icmp_ugt  i5 %empty, i5 5" [d5.cpp:90]   --->   Operation 125 'icmp' 'icmp_ln90_9' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.78ns)   --->   "%icmp_ln90_10 = icmp_ugt  i5 %empty, i5 4" [d5.cpp:90]   --->   Operation 126 'icmp' 'icmp_ln90_10' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_16 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty, i32 2, i32 4" [d5.cpp:90]   --->   Operation 127 'partselect' 'tmp_16' <Predicate = (!icmp_ln77)> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.67ns)   --->   "%icmp_ln90_11 = icmp_ne  i3 %tmp_16, i3 0" [d5.cpp:90]   --->   Operation 128 'icmp' 'icmp_ln90_11' <Predicate = (!icmp_ln77)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.78ns)   --->   "%icmp_ln90_12 = icmp_ugt  i5 %empty, i5 2" [d5.cpp:90]   --->   Operation 129 'icmp' 'icmp_ln90_12' <Predicate = (!icmp_ln77)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.79ns)   --->   "%add_ln77 = add i4 %i_2, i4 15" [d5.cpp:77]   --->   Operation 130 'add' 'add_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.42ns)   --->   "%store_ln77 = store i4 %add_ln77, i4 %i" [d5.cpp:77]   --->   Operation 131 'store' 'store_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.42>
ST_2 : Operation 132 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_40, i64 %arr_23" [d5.cpp:77]   --->   Operation 132 'store' 'store_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.42>
ST_2 : Operation 133 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_39, i64 %arr_22" [d5.cpp:77]   --->   Operation 133 'store' 'store_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.01>
ST_3 : Operation 134 [1/1] (0.00ns)   --->   "%arr_24_load_1 = load i64 %arr_24" [d5.cpp:90]   --->   Operation 134 'load' 'arr_24_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 135 [1/1] (0.00ns)   --->   "%arr_25_load_1 = load i64 %arr_25" [d5.cpp:90]   --->   Operation 135 'load' 'arr_25_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 136 [1/1] (0.00ns)   --->   "%arr_26_load_1 = load i64 %arr_26" [d5.cpp:90]   --->   Operation 136 'load' 'arr_26_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 137 [1/1] (0.00ns)   --->   "%arr_28_load_1 = load i64 %arr_28" [d5.cpp:90]   --->   Operation 137 'load' 'arr_28_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 138 [1/1] (0.00ns)   --->   "%arr_29_load_1 = load i64 %arr_29" [d5.cpp:90]   --->   Operation 138 'load' 'arr_29_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 139 [1/1] (0.00ns)   --->   "%arr_30_load_1 = load i64 %arr_30" [d5.cpp:90]   --->   Operation 139 'load' 'arr_30_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 140 [1/1] (0.00ns)   --->   "%arr_31_load_1 = load i64 %arr_31" [d5.cpp:90]   --->   Operation 140 'load' 'arr_31_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 141 [1/1] (0.00ns)   --->   "%arr_32_load_1 = load i64 %arr_32" [d5.cpp:90]   --->   Operation 141 'load' 'arr_32_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 142 [1/1] (0.00ns)   --->   "%arr_33_load_1 = load i64 %arr_33" [d5.cpp:90]   --->   Operation 142 'load' 'arr_33_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 143 [1/1] (0.00ns)   --->   "%sext_ln35 = sext i3 %k" [d5.cpp:35]   --->   Operation 143 'sext' 'sext_ln35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 144 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln35" [d5.cpp:90]   --->   Operation 144 'mux' 'tmp_2' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln90_2 = zext i32 %tmp_2" [d5.cpp:90]   --->   Operation 145 'zext' 'zext_ln90_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 146 '%mul_ln90_2 = mul i64 %zext_ln90_2, i64 %zext_ln90'
ST_3 : Operation 146 [1/1] (2.10ns)   --->   "%mul_ln90_2 = mul i64 %zext_ln90_2, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 146 'mul' 'mul_ln90_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node arr_41)   --->   "%select_ln90_4 = select i1 %icmp_ln90_1, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 147 'select' 'select_ln90_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node arr_41)   --->   "%and_ln90_2 = and i64 %mul_ln90_2, i64 %select_ln90_4" [d5.cpp:90]   --->   Operation 148 'and' 'and_ln90_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 149 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_41 = add i64 %and_ln90_2, i64 %arr_24_load_1" [d5.cpp:90]   --->   Operation 149 'add' 'arr_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 150 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln35_1" [d5.cpp:90]   --->   Operation 150 'mux' 'tmp_3' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln90_3 = zext i32 %tmp_3" [d5.cpp:90]   --->   Operation 151 'zext' 'zext_ln90_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 152 '%mul_ln90_3 = mul i64 %zext_ln90_3, i64 %zext_ln90'
ST_3 : Operation 152 [1/1] (2.10ns)   --->   "%mul_ln90_3 = mul i64 %zext_ln90_3, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 152 'mul' 'mul_ln90_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node arr_42)   --->   "%select_ln90_5 = select i1 %icmp_ln90_2, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 153 'select' 'select_ln90_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node arr_42)   --->   "%and_ln90_3 = and i64 %mul_ln90_3, i64 %select_ln90_5" [d5.cpp:90]   --->   Operation 154 'and' 'and_ln90_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 155 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_42 = add i64 %and_ln90_3, i64 %arr_25_load_1" [d5.cpp:90]   --->   Operation 155 'add' 'arr_42' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 156 [1/1] (0.48ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_4" [d5.cpp:90]   --->   Operation 156 'mux' 'tmp_4' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln90_4 = zext i32 %tmp_4" [d5.cpp:90]   --->   Operation 157 'zext' 'zext_ln90_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 158 '%mul_ln90_4 = mul i64 %zext_ln90_4, i64 %zext_ln90'
ST_3 : Operation 158 [1/1] (2.10ns)   --->   "%mul_ln90_4 = mul i64 %zext_ln90_4, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 158 'mul' 'mul_ln90_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node arr_43)   --->   "%select_ln90_6 = select i1 %icmp_ln90_3, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 159 'select' 'select_ln90_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node arr_43)   --->   "%and_ln90_4 = and i64 %mul_ln90_4, i64 %select_ln90_6" [d5.cpp:90]   --->   Operation 160 'and' 'and_ln90_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 161 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_43 = add i64 %and_ln90_4, i64 %arr_26_load_1" [d5.cpp:90]   --->   Operation 161 'add' 'arr_43' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 162 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_5" [d5.cpp:90]   --->   Operation 162 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln90_5 = zext i32 %tmp_5" [d5.cpp:90]   --->   Operation 163 'zext' 'zext_ln90_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 164 '%mul_ln90_5 = mul i64 %zext_ln90_5, i64 %zext_ln90'
ST_3 : Operation 164 [1/1] (2.10ns)   --->   "%mul_ln90_5 = mul i64 %zext_ln90_5, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 164 'mul' 'mul_ln90_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node arr_44)   --->   "%select_ln90_7 = select i1 %icmp_ln90_4, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 165 'select' 'select_ln90_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node arr_44)   --->   "%and_ln90_5 = and i64 %mul_ln90_5, i64 %select_ln90_7" [d5.cpp:90]   --->   Operation 166 'and' 'and_ln90_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 167 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_44 = add i64 %and_ln90_5, i64 %arr_28_load_1" [d5.cpp:90]   --->   Operation 167 'add' 'arr_44' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 168 [1/1] (0.48ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_6" [d5.cpp:90]   --->   Operation 168 'mux' 'tmp_6' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln90_6 = zext i32 %tmp_6" [d5.cpp:90]   --->   Operation 169 'zext' 'zext_ln90_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 170 '%mul_ln90_6 = mul i64 %zext_ln90_6, i64 %zext_ln90'
ST_3 : Operation 170 [1/1] (2.10ns)   --->   "%mul_ln90_6 = mul i64 %zext_ln90_6, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 170 'mul' 'mul_ln90_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node arr_45)   --->   "%select_ln90_8 = select i1 %icmp_ln90_5, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 171 'select' 'select_ln90_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node arr_45)   --->   "%and_ln90_6 = and i64 %mul_ln90_6, i64 %select_ln90_8" [d5.cpp:90]   --->   Operation 172 'and' 'and_ln90_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 173 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_45 = add i64 %and_ln90_6, i64 %arr_29_load_1" [d5.cpp:90]   --->   Operation 173 'add' 'arr_45' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 174 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_7" [d5.cpp:90]   --->   Operation 174 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln90_7 = zext i32 %tmp_7" [d5.cpp:90]   --->   Operation 175 'zext' 'zext_ln90_7' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 176 '%mul_ln90_7 = mul i64 %zext_ln90_7, i64 %zext_ln90'
ST_3 : Operation 176 [1/1] (2.10ns)   --->   "%mul_ln90_7 = mul i64 %zext_ln90_7, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 176 'mul' 'mul_ln90_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node arr_46)   --->   "%select_ln90_9 = select i1 %icmp_ln90_6, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 177 'select' 'select_ln90_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node arr_46)   --->   "%and_ln90_7 = and i64 %mul_ln90_7, i64 %select_ln90_9" [d5.cpp:90]   --->   Operation 178 'and' 'and_ln90_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 179 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_46 = add i64 %and_ln90_7, i64 %arr_30_load_1" [d5.cpp:90]   --->   Operation 179 'add' 'arr_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 180 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_8" [d5.cpp:90]   --->   Operation 180 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln90_8 = zext i32 %tmp_8" [d5.cpp:90]   --->   Operation 181 'zext' 'zext_ln90_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 182 '%mul_ln90_8 = mul i64 %zext_ln90_8, i64 %zext_ln90'
ST_3 : Operation 182 [1/1] (2.10ns)   --->   "%mul_ln90_8 = mul i64 %zext_ln90_8, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 182 'mul' 'mul_ln90_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node arr_47)   --->   "%select_ln90_10 = select i1 %icmp_ln90_7, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 183 'select' 'select_ln90_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node arr_47)   --->   "%and_ln90_8 = and i64 %mul_ln90_8, i64 %select_ln90_10" [d5.cpp:90]   --->   Operation 184 'and' 'and_ln90_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 185 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_47 = add i64 %and_ln90_8, i64 %arr_31_load_1" [d5.cpp:90]   --->   Operation 185 'add' 'arr_47' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln91_6 = zext i1 %icmp_ln90_7" [d5.cpp:91]   --->   Operation 186 'zext' 'zext_ln91_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 187 [1/1] (0.79ns)   --->   "%sub_ln35_9 = sub i4 %sub_ln35_8, i4 %zext_ln91_6" [d5.cpp:35]   --->   Operation 187 'sub' 'sub_ln35_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 188 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_9" [d5.cpp:90]   --->   Operation 188 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln90_9 = zext i32 %tmp_9" [d5.cpp:90]   --->   Operation 189 'zext' 'zext_ln90_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 190 '%mul_ln90_9 = mul i64 %zext_ln90_9, i64 %zext_ln90'
ST_3 : Operation 190 [1/1] (2.10ns)   --->   "%mul_ln90_9 = mul i64 %zext_ln90_9, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 190 'mul' 'mul_ln90_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node arr_48)   --->   "%select_ln90_11 = select i1 %icmp_ln90_8, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 191 'select' 'select_ln90_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node arr_48)   --->   "%and_ln90_9 = and i64 %mul_ln90_9, i64 %select_ln90_11" [d5.cpp:90]   --->   Operation 192 'and' 'and_ln90_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 193 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_48 = add i64 %and_ln90_9, i64 %arr_32_load_1" [d5.cpp:90]   --->   Operation 193 'add' 'arr_48' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln91_7 = zext i1 %icmp_ln90_8" [d5.cpp:91]   --->   Operation 194 'zext' 'zext_ln91_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 195 [1/1] (0.79ns)   --->   "%sub_ln35_10 = sub i4 %sub_ln35_9, i4 %zext_ln91_7" [d5.cpp:35]   --->   Operation 195 'sub' 'sub_ln35_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 196 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_10" [d5.cpp:90]   --->   Operation 196 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln90_10 = zext i32 %tmp_s" [d5.cpp:90]   --->   Operation 197 'zext' 'zext_ln90_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 198 '%mul_ln90_10 = mul i64 %zext_ln90_10, i64 %zext_ln90'
ST_3 : Operation 198 [1/1] (2.10ns)   --->   "%mul_ln90_10 = mul i64 %zext_ln90_10, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 198 'mul' 'mul_ln90_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node arr_49)   --->   "%select_ln90_12 = select i1 %icmp_ln90_9, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 199 'select' 'select_ln90_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node arr_49)   --->   "%and_ln90_10 = and i64 %mul_ln90_10, i64 %select_ln90_12" [d5.cpp:90]   --->   Operation 200 'and' 'and_ln90_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 201 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_49 = add i64 %and_ln90_10, i64 %arr_33_load_1" [d5.cpp:90]   --->   Operation 201 'add' 'arr_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln91_8 = zext i1 %icmp_ln90_9" [d5.cpp:91]   --->   Operation 202 'zext' 'zext_ln91_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 203 [1/1] (0.79ns)   --->   "%sub_ln35_11 = sub i4 %sub_ln35_10, i4 %zext_ln91_8" [d5.cpp:35]   --->   Operation 203 'sub' 'sub_ln35_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln91_9 = zext i1 %icmp_ln90_10" [d5.cpp:91]   --->   Operation 204 'zext' 'zext_ln91_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 205 [1/1] (0.79ns)   --->   "%sub_ln35 = sub i4 %sub_ln35_11, i4 %zext_ln91_9" [d5.cpp:35]   --->   Operation 205 'sub' 'sub_ln35' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 206 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_49, i64 %arr_33" [d5.cpp:77]   --->   Operation 206 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 207 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_48, i64 %arr_32" [d5.cpp:77]   --->   Operation 207 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 208 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_47, i64 %arr_31" [d5.cpp:77]   --->   Operation 208 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 209 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_46, i64 %arr_30" [d5.cpp:77]   --->   Operation 209 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 210 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_45, i64 %arr_29" [d5.cpp:77]   --->   Operation 210 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 211 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_44, i64 %arr_28" [d5.cpp:77]   --->   Operation 211 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 212 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_43, i64 %arr_26" [d5.cpp:77]   --->   Operation 212 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 213 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_42, i64 %arr_25" [d5.cpp:77]   --->   Operation 213 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 214 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_41, i64 %arr_24" [d5.cpp:77]   --->   Operation 214 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 253 [1/1] (0.00ns)   --->   "%arr_22_load = load i64 %arr_22"   --->   Operation 253 'load' 'arr_22_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 254 [1/1] (0.00ns)   --->   "%arr_23_load = load i64 %arr_23"   --->   Operation 254 'load' 'arr_23_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 255 [1/1] (0.00ns)   --->   "%arr_24_load = load i64 %arr_24"   --->   Operation 255 'load' 'arr_24_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 256 [1/1] (0.00ns)   --->   "%arr_25_load = load i64 %arr_25"   --->   Operation 256 'load' 'arr_25_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 257 [1/1] (0.00ns)   --->   "%arr_26_load = load i64 %arr_26"   --->   Operation 257 'load' 'arr_26_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 258 [1/1] (0.00ns)   --->   "%arr_28_load = load i64 %arr_28"   --->   Operation 258 'load' 'arr_28_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 259 [1/1] (0.00ns)   --->   "%arr_29_load = load i64 %arr_29"   --->   Operation 259 'load' 'arr_29_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 260 [1/1] (0.00ns)   --->   "%arr_30_load = load i64 %arr_30"   --->   Operation 260 'load' 'arr_30_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 261 [1/1] (0.00ns)   --->   "%arr_31_load = load i64 %arr_31"   --->   Operation 261 'load' 'arr_31_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 262 [1/1] (0.00ns)   --->   "%arr_32_load = load i64 %arr_32"   --->   Operation 262 'load' 'arr_32_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 263 [1/1] (0.00ns)   --->   "%arr_33_load = load i64 %arr_33"   --->   Operation 263 'load' 'arr_33_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 264 [1/1] (0.00ns)   --->   "%arr_34_load = load i64 %arr_34"   --->   Operation 264 'load' 'arr_34_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 265 [1/1] (0.00ns)   --->   "%arr_35_load = load i64 %arr_35"   --->   Operation 265 'load' 'arr_35_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 266 [1/1] (0.00ns)   --->   "%arr_37_load = load i64 %arr_37"   --->   Operation 266 'load' 'arr_37_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 267 [1/1] (0.00ns)   --->   "%arr_38_load = load i64 %arr_38"   --->   Operation 267 'load' 'arr_38_load' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 268 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_4_2354_out, i64 %arr_38_load"   --->   Operation 268 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 269 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_4_1353_out, i64 %arr_37_load"   --->   Operation 269 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 270 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_4352_out, i64 %arr_35_load"   --->   Operation 270 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 271 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_3_2351_out, i64 %arr_34_load"   --->   Operation 271 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 272 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_3_1350_out, i64 %arr_33_load"   --->   Operation 272 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 273 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_3349_out, i64 %arr_32_load"   --->   Operation 273 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 274 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_2_2348_out, i64 %arr_31_load"   --->   Operation 274 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 275 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_2_1347_out, i64 %arr_30_load"   --->   Operation 275 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 276 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_2346_out, i64 %arr_29_load"   --->   Operation 276 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 277 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_1_2345_out, i64 %arr_28_load"   --->   Operation 277 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 278 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_1_1344_out, i64 %arr_26_load"   --->   Operation 278 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 279 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_1343_out, i64 %arr_25_load"   --->   Operation 279 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 280 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_2152342_out, i64 %arr_24_load"   --->   Operation 280 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 281 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159_1138341_out, i64 %arr_23_load"   --->   Operation 281 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 282 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add159340_out, i64 %arr_22_load"   --->   Operation 282 'write' 'write_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_3 : Operation 283 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 283 'ret' 'ret_ln0' <Predicate = (icmp_ln77)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.01>
ST_4 : Operation 215 [1/1] (0.00ns)   --->   "%arr_34_load_1 = load i64 %arr_34" [d5.cpp:90]   --->   Operation 215 'load' 'arr_34_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 216 [1/1] (0.00ns)   --->   "%arr_35_load_1 = load i64 %arr_35" [d5.cpp:90]   --->   Operation 216 'load' 'arr_35_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 217 [1/1] (0.00ns)   --->   "%arr_37_load_1 = load i64 %arr_37" [d5.cpp:90]   --->   Operation 217 'load' 'arr_37_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 218 [1/1] (0.00ns)   --->   "%arr_38_load_1 = load i64 %arr_38" [d5.cpp:90]   --->   Operation 218 'load' 'arr_38_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 219 [1/1] (0.00ns)   --->   "%specpipeline_ln79 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_4" [d5.cpp:79]   --->   Operation 219 'specpipeline' 'specpipeline_ln79' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 220 [1/1] (0.00ns)   --->   "%speclooptripcount_ln77 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15" [d5.cpp:77]   --->   Operation 220 'speclooptripcount' 'speclooptripcount_ln77' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 221 [1/1] (0.00ns)   --->   "%specloopname_ln77 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [d5.cpp:77]   --->   Operation 221 'specloopname' 'specloopname_ln77' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 222 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_11" [d5.cpp:90]   --->   Operation 222 'mux' 'tmp_1' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln90_11 = zext i32 %tmp_1" [d5.cpp:90]   --->   Operation 223 'zext' 'zext_ln90_11' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 224 '%mul_ln90_11 = mul i64 %zext_ln90_11, i64 %zext_ln90'
ST_4 : Operation 224 [1/1] (2.10ns)   --->   "%mul_ln90_11 = mul i64 %zext_ln90_11, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 224 'mul' 'mul_ln90_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node arr_50)   --->   "%select_ln90_13 = select i1 %icmp_ln90_10, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 225 'select' 'select_ln90_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node arr_50)   --->   "%and_ln90_11 = and i64 %mul_ln90_11, i64 %select_ln90_13" [d5.cpp:90]   --->   Operation 226 'and' 'and_ln90_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 227 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_50 = add i64 %and_ln90_11, i64 %arr_34_load_1" [d5.cpp:90]   --->   Operation 227 'add' 'arr_50' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 228 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35" [d5.cpp:90]   --->   Operation 228 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln90_12 = zext i32 %tmp_10" [d5.cpp:90]   --->   Operation 229 'zext' 'zext_ln90_12' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 230 '%mul_ln90_12 = mul i64 %zext_ln90_12, i64 %zext_ln90'
ST_4 : Operation 230 [1/1] (2.10ns)   --->   "%mul_ln90_12 = mul i64 %zext_ln90_12, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 230 'mul' 'mul_ln90_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node arr_51)   --->   "%select_ln90_14 = select i1 %icmp_ln90_11, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 231 'select' 'select_ln90_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node arr_51)   --->   "%and_ln90_12 = and i64 %mul_ln90_12, i64 %select_ln90_14" [d5.cpp:90]   --->   Operation 232 'and' 'and_ln90_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 233 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_51 = add i64 %and_ln90_12, i64 %arr_35_load_1" [d5.cpp:90]   --->   Operation 233 'add' 'arr_51' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln91_10 = zext i1 %icmp_ln90_11" [d5.cpp:91]   --->   Operation 234 'zext' 'zext_ln91_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 235 [1/1] (0.79ns)   --->   "%sub_ln35_1 = sub i4 %sub_ln35, i4 %zext_ln91_10" [d5.cpp:35]   --->   Operation 235 'sub' 'sub_ln35_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 236 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_1" [d5.cpp:90]   --->   Operation 236 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 237 [1/1] (0.00ns)   --->   "%zext_ln90_13 = zext i32 %tmp_11" [d5.cpp:90]   --->   Operation 237 'zext' 'zext_ln90_13' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 238 '%mul_ln90_13 = mul i64 %zext_ln90_13, i64 %zext_ln90'
ST_4 : Operation 238 [1/1] (2.10ns)   --->   "%mul_ln90_13 = mul i64 %zext_ln90_13, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 238 'mul' 'mul_ln90_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node arr_52)   --->   "%select_ln90_15 = select i1 %icmp_ln90_12, i64 18446744073709551615, i64 0" [d5.cpp:90]   --->   Operation 239 'select' 'select_ln90_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node arr_52)   --->   "%and_ln90_13 = and i64 %mul_ln90_13, i64 %select_ln90_15" [d5.cpp:90]   --->   Operation 240 'and' 'and_ln90_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 241 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr_52 = add i64 %and_ln90_13, i64 %arr_37_load_1" [d5.cpp:90]   --->   Operation 241 'add' 'arr_52' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln91_11 = zext i1 %icmp_ln90_12" [d5.cpp:91]   --->   Operation 242 'zext' 'zext_ln91_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 243 [1/1] (0.79ns)   --->   "%sub_ln35_2 = sub i4 %sub_ln35_1, i4 %zext_ln91_11" [d5.cpp:35]   --->   Operation 243 'sub' 'sub_ln35_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 244 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln35_2" [d5.cpp:90]   --->   Operation 244 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln90_14 = zext i32 %tmp_12" [d5.cpp:90]   --->   Operation 245 'zext' 'zext_ln90_14' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 246 '%mul_ln90_14 = mul i64 %zext_ln90_14, i64 %zext_ln90'
ST_4 : Operation 246 [1/1] (2.10ns)   --->   "%mul_ln90_14 = mul i64 %zext_ln90_14, i64 %zext_ln90" [d5.cpp:90]   --->   Operation 246 'mul' 'mul_ln90_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 247 [1/1] (1.08ns)   --->   "%arr_53 = add i64 %mul_ln90_14, i64 %arr_38_load_1" [d5.cpp:90]   --->   Operation 247 'add' 'arr_53' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 248 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_53, i64 %arr_38" [d5.cpp:77]   --->   Operation 248 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 249 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_52, i64 %arr_37" [d5.cpp:77]   --->   Operation 249 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 250 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_51, i64 %arr_35" [d5.cpp:77]   --->   Operation 250 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 251 [1/1] (0.42ns)   --->   "%store_ln77 = store i64 %arr_50, i64 %arr_34" [d5.cpp:77]   --->   Operation 251 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 252 [1/1] (0.00ns)   --->   "%br_ln77 = br void %for.inc167.4" [d5.cpp:77]   --->   Operation 252 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [69]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [109]  (0.427 ns)

 <State 2>: 6.667ns
The critical path consists of the following:
	'load' operation ('i', d5.cpp:77) on local variable 'i' [127]  (0.000 ns)
	'add' operation ('empty', d5.cpp:77) [150]  (0.797 ns)
	'icmp' operation ('icmp_ln90', d5.cpp:90) [162]  (0.789 ns)
	'sub' operation ('k', d5.cpp:35) [168]  (0.548 ns)
	'sub' operation ('k', d5.cpp:91) [178]  (0.673 ns)
	'sub' operation ('sub_ln35_4', d5.cpp:35) [188]  (0.673 ns)
	'sub' operation ('sub_ln35_5', d5.cpp:35) [197]  (0.797 ns)
	'sub' operation ('sub_ln35_6', d5.cpp:35) [206]  (0.797 ns)
	'sub' operation ('sub_ln35_7', d5.cpp:35) [215]  (0.797 ns)
	'sub' operation ('sub_ln35_8', d5.cpp:35) [224]  (0.797 ns)

 <State 3>: 7.015ns
The critical path consists of the following:
	'sub' operation ('sub_ln35_9', d5.cpp:35) [234]  (0.797 ns)
	'sub' operation ('sub_ln35_10', d5.cpp:35) [243]  (0.797 ns)
	'mux' operation ('tmp_s', d5.cpp:90) [244]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln90_10', d5.cpp:90) [247]  (2.103 ns)
	'and' operation ('and_ln90_10', d5.cpp:90) [249]  (0.000 ns)
	'add' operation ('arr', d5.cpp:90) [250]  (1.085 ns)
	'store' operation ('store_ln77', d5.cpp:77) of variable 'arr', d5.cpp:90 on local variable 'arr' [291]  (0.427 ns)

 <State 4>: 7.015ns
The critical path consists of the following:
	'sub' operation ('sub_ln35_1', d5.cpp:35) [271]  (0.797 ns)
	'sub' operation ('sub_ln35_2', d5.cpp:35) [280]  (0.797 ns)
	'mux' operation ('tmp_12', d5.cpp:90) [281]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln90_14', d5.cpp:90) [283]  (2.103 ns)
	'add' operation ('arr', d5.cpp:90) [284]  (1.085 ns)
	'store' operation ('store_ln77', d5.cpp:77) of variable 'arr', d5.cpp:90 on local variable 'arr' [287]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
