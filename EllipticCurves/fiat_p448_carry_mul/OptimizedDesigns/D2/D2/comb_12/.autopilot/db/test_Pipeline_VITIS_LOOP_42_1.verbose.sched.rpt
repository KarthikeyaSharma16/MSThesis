

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_42_1'
================================================================
* Date:           Fri May 10 15:08:37 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_12 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.972 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_42_1  |        4|        4|         3|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k_s = alloca i32 1"   --->   Operation 6 'alloca' 'k_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr = alloca i32 1"   --->   Operation 8 'alloca' 'arr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_17 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_18 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_19 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_20 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_21 = alloca i32 1"   --->   Operation 13 'alloca' 'arr_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_22 = alloca i32 1"   --->   Operation 14 'alloca' 'arr_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arr_23 = alloca i32 1"   --->   Operation 15 'alloca' 'arr_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arr_24 = alloca i32 1"   --->   Operation 16 'alloca' 'arr_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arr_25 = alloca i32 1"   --->   Operation 17 'alloca' 'arr_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arr_26 = alloca i32 1"   --->   Operation 18 'alloca' 'arr_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_27 = alloca i32 1"   --->   Operation 19 'alloca' 'arr_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_28 = alloca i32 1"   --->   Operation 20 'alloca' 'arr_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_29 = alloca i32 1"   --->   Operation 21 'alloca' 'arr_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arr_30 = alloca i32 1"   --->   Operation 22 'alloca' 'arr_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arr_31 = alloca i32 1"   --->   Operation 23 'alloca' 'arr_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 24 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 25 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 26 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 27 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 28 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 29 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%conv60_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv60"   --->   Operation 30 'read' 'conv60_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 31 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 32 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 33 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 34 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 35 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 36 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 37 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 38 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 39 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 40 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 41 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 42 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 43 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 44 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 45 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 46 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 47 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 48 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 49 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 50 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 51 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 52 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 53 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 54 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 55 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 56 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 57 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv60_cast = zext i32 %conv60_read"   --->   Operation 58 'zext' 'conv60_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 59 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 60 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_31"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_30"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_29"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_28"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_27"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_26"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_25"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_24"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_23"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_22"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_21"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_20"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_19"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_18"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_17"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 8, i32 %k1"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %k_s"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body23"   --->   Operation 79 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.75>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [d2.cpp:65]   --->   Operation 80 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.79ns)   --->   "%icmp_ln42 = icmp_eq  i4 %i_2, i4 0" [d2.cpp:42]   --->   Operation 81 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body23.split_ifconv, void %for.body214.preheader.exitStub" [d2.cpp:42]   --->   Operation 82 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%k_load = load i32 %k_s" [d2.cpp:42]   --->   Operation 83 'load' 'k_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%k1_load = load i32 %k1" [d2.cpp:42]   --->   Operation 84 'load' 'k1_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%k_load_35 = load i4 %k" [d2.cpp:65]   --->   Operation 85 'load' 'k_load_35' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i4 %i_2" [d2.cpp:42]   --->   Operation 86 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i32 %k_load" [d2.cpp:42]   --->   Operation 87 'trunc' 'trunc_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln42_1 = trunc i32 %k1_load" [d2.cpp:42]   --->   Operation 88 'trunc' 'trunc_ln42_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_34 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d2.cpp:51]   --->   Operation 89 'bitselect' 'tmp_34' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 90 'mux' 'tmp_1' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i32 %tmp_1" [d2.cpp:59]   --->   Operation 91 'zext' 'zext_ln59' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (1.01ns)   --->   "%k1_1 = add i32 %k1_load, i32 1" [d2.cpp:51]   --->   Operation 92 'add' 'k1_1' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (1.01ns)   --->   "%k_1 = add i32 %k_load, i32 1" [d2.cpp:51]   --->   Operation 93 'add' 'k_1' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.44ns)   --->   "%k_2 = select i1 %tmp_34, i32 %k_1, i32 %k_load" [d2.cpp:51]   --->   Operation 94 'select' 'k_2' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.44ns)   --->   "%k1_2 = select i1 %tmp_34, i32 %k1_1, i32 %k1_load" [d2.cpp:51]   --->   Operation 95 'select' 'k1_2' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln53 = trunc i32 %k_2" [d2.cpp:53]   --->   Operation 96 'trunc' 'trunc_ln53' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln53_1 = trunc i32 %k1_2" [d2.cpp:53]   --->   Operation 97 'trunc' 'trunc_ln53_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.79ns)   --->   "%empty = add i5 %zext_ln42, i5 1" [d2.cpp:42]   --->   Operation 98 'add' 'empty' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.79ns)   --->   "%cmp69 = icmp_ugt  i4 %i_2, i4 8" [d2.cpp:65]   --->   Operation 99 'icmp' 'cmp69' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.79ns)   --->   "%empty_36 = add i5 %zext_ln42, i5 25" [d2.cpp:42]   --->   Operation 100 'add' 'empty_36' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.79ns)   --->   "%cmp138 = icmp_ugt  i4 %i_2, i4 6" [d2.cpp:65]   --->   Operation 101 'icmp' 'cmp138' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.32ns)   --->   Input mux for Operation 102 '%mul_ln59 = mul i64 %zext_ln59, i64 %conv60_cast'
ST_2 : Operation 102 [1/1] (2.09ns)   --->   "%mul_ln59 = mul i64 %zext_ln59, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 102 'mul' 'mul_ln59' <Predicate = (!icmp_ln42)> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_35 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d2.cpp:59]   --->   Operation 103 'bitselect' 'tmp_35' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node add_ln65)   --->   "%select_ln65 = select i1 %cmp138, i4 6, i4 7" [d2.cpp:65]   --->   Operation 104 'select' 'select_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln65 = add i4 %select_ln65, i4 %k_load_35" [d2.cpp:65]   --->   Operation 105 'add' 'add_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_1)   --->   "%tmp_36 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d2.cpp:65]   --->   Operation 106 'bitselect' 'tmp_36' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_1)   --->   "%select_ln65_5 = select i1 %tmp_36, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 107 'select' 'select_ln65_5' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_1 = and i64 %mul_ln59, i64 %select_ln65_5" [d2.cpp:65]   --->   Operation 108 'and' 'and_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_41)   --->   "%select_ln59_5 = select i1 %tmp_35, i3 6, i3 7" [d2.cpp:59]   --->   Operation 109 'select' 'select_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.78ns)   --->   "%icmp_ln59 = icmp_ugt  i5 %empty, i5 14" [d2.cpp:59]   --->   Operation 110 'icmp' 'icmp_ln59' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i1 %cmp138" [d2.cpp:64]   --->   Operation 111 'zext' 'zext_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.79ns)   --->   "%sub_ln65_26 = sub i4 %add_ln65, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 112 'sub' 'sub_ln65_26' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_41)   --->   "%zext_ln36 = zext i1 %icmp_ln59" [d2.cpp:36]   --->   Operation 113 'zext' 'zext_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_41 = sub i3 %select_ln59_5, i3 %zext_ln36" [d2.cpp:36]   --->   Operation 114 'sub' 'sub_ln36_41' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.78ns)   --->   "%icmp_ln59_1 = icmp_ugt  i5 %empty, i5 13" [d2.cpp:59]   --->   Operation 115 'icmp' 'icmp_ln59_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.79ns)   --->   "%sub_ln65_27 = sub i4 %sub_ln65_26, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 116 'sub' 'sub_ln65_27' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i1 %icmp_ln59_1" [d2.cpp:36]   --->   Operation 117 'zext' 'zext_ln36_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.67ns)   --->   "%sub_ln36_42 = sub i3 %sub_ln36_41, i3 %zext_ln36_1" [d2.cpp:36]   --->   Operation 118 'sub' 'sub_ln36_42' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln59_1 = sext i3 %sub_ln36_42" [d2.cpp:59]   --->   Operation 119 'sext' 'sext_ln59_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.78ns)   --->   "%icmp_ln59_2 = icmp_ugt  i5 %empty, i5 12" [d2.cpp:59]   --->   Operation 120 'icmp' 'icmp_ln59_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.79ns)   --->   "%sub_ln65 = sub i4 %sub_ln65_27, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 121 'sub' 'sub_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i1 %icmp_ln59_2" [d2.cpp:66]   --->   Operation 122 'zext' 'zext_ln66' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.67ns)   --->   "%sub_ln36_16 = sub i4 %sext_ln59_1, i4 %zext_ln66" [d2.cpp:36]   --->   Operation 123 'sub' 'sub_ln36_16' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.78ns)   --->   "%icmp_ln59_3 = icmp_ugt  i5 %empty, i5 11" [d2.cpp:59]   --->   Operation 124 'icmp' 'icmp_ln59_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln66_1 = zext i1 %icmp_ln59_3" [d2.cpp:66]   --->   Operation 125 'zext' 'zext_ln66_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.79ns)   --->   "%sub_ln36_17 = sub i4 %sub_ln36_16, i4 %zext_ln66_1" [d2.cpp:36]   --->   Operation 126 'sub' 'sub_ln36_17' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.78ns)   --->   "%icmp_ln59_4 = icmp_ugt  i5 %empty, i5 10" [d2.cpp:59]   --->   Operation 127 'icmp' 'icmp_ln59_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln66_2 = zext i1 %icmp_ln59_4" [d2.cpp:66]   --->   Operation 128 'zext' 'zext_ln66_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.79ns)   --->   "%sub_ln36_18 = sub i4 %sub_ln36_17, i4 %zext_ln66_2" [d2.cpp:36]   --->   Operation 129 'sub' 'sub_ln36_18' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.78ns)   --->   "%icmp_ln59_5 = icmp_ugt  i5 %empty, i5 9" [d2.cpp:59]   --->   Operation 130 'icmp' 'icmp_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln66_3 = zext i1 %icmp_ln59_5" [d2.cpp:66]   --->   Operation 131 'zext' 'zext_ln66_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.79ns)   --->   "%sub_ln36_19 = sub i4 %sub_ln36_18, i4 %zext_ln66_3" [d2.cpp:36]   --->   Operation 132 'sub' 'sub_ln36_19' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.78ns)   --->   "%icmp_ln65 = icmp_ugt  i5 %empty, i5 8" [d2.cpp:65]   --->   Operation 133 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_67 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_36, i32 3, i32 4" [d2.cpp:61]   --->   Operation 134 'partselect' 'tmp_67' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.54ns)   --->   "%icmp_ln61 = icmp_eq  i2 %tmp_67, i2 1" [d2.cpp:61]   --->   Operation 135 'icmp' 'icmp_ln61' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (0.28ns)   --->   "%and_ln61 = and i1 %icmp_ln61, i1 %cmp69" [d2.cpp:61]   --->   Operation 136 'and' 'and_ln61' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_28)   --->   "%select_ln65_22 = select i1 %and_ln61, i3 6, i3 7" [d2.cpp:65]   --->   Operation 137 'select' 'select_ln65_22' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_68 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty, i32 3, i32 4" [d2.cpp:65]   --->   Operation 138 'partselect' 'tmp_68' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.54ns)   --->   "%icmp_ln65_1 = icmp_ne  i2 %tmp_68, i2 0" [d2.cpp:65]   --->   Operation 139 'icmp' 'icmp_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.78ns)   --->   "%icmp_ln61_1 = icmp_sgt  i5 %empty_36, i5 6" [d2.cpp:61]   --->   Operation 140 'icmp' 'icmp_ln61_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 141 [1/1] (0.28ns)   --->   "%and_ln61_1 = and i1 %icmp_ln61_1, i1 %cmp69" [d2.cpp:61]   --->   Operation 141 'and' 'and_ln61_1' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_28)   --->   "%zext_ln65_60 = zext i1 %and_ln61_1" [d2.cpp:65]   --->   Operation 142 'zext' 'zext_ln65_60' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_28 = sub i3 %select_ln65_22, i3 %zext_ln65_60" [d2.cpp:65]   --->   Operation 143 'sub' 'sub_ln65_28' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.78ns)   --->   "%icmp_ln65_2 = icmp_ugt  i5 %empty, i5 6" [d2.cpp:65]   --->   Operation 144 'icmp' 'icmp_ln65_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.78ns)   --->   "%icmp_ln61_2 = icmp_sgt  i5 %empty_36, i5 5" [d2.cpp:61]   --->   Operation 145 'icmp' 'icmp_ln61_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.28ns)   --->   "%and_ln61_2 = and i1 %icmp_ln61_2, i1 %cmp69" [d2.cpp:61]   --->   Operation 146 'and' 'and_ln61_2' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln65_61 = zext i1 %and_ln61_2" [d2.cpp:65]   --->   Operation 147 'zext' 'zext_ln65_61' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 148 [1/1] (0.67ns)   --->   "%sub_ln65_29 = sub i3 %sub_ln65_28, i3 %zext_ln65_61" [d2.cpp:65]   --->   Operation 148 'sub' 'sub_ln65_29' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns)   --->   "%sext_ln65_1 = sext i3 %sub_ln65_29" [d2.cpp:65]   --->   Operation 149 'sext' 'sext_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 150 [1/1] (0.78ns)   --->   "%icmp_ln61_3 = icmp_sgt  i5 %empty_36, i5 4" [d2.cpp:61]   --->   Operation 150 'icmp' 'icmp_ln61_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.28ns)   --->   "%and_ln61_3 = and i1 %icmp_ln61_3, i1 %cmp69" [d2.cpp:61]   --->   Operation 151 'and' 'and_ln61_3' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i1 %and_ln61_3" [d2.cpp:62]   --->   Operation 152 'zext' 'zext_ln62' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 153 [1/1] (0.67ns)   --->   "%sub_ln65_3 = sub i4 %sext_ln65_1, i4 %zext_ln62" [d2.cpp:65]   --->   Operation 153 'sub' 'sub_ln65_3' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_69 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_36, i32 2, i32 4" [d2.cpp:61]   --->   Operation 154 'partselect' 'tmp_69' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 155 [1/1] (0.67ns)   --->   "%icmp_ln61_4 = icmp_sgt  i3 %tmp_69, i3 0" [d2.cpp:61]   --->   Operation 155 'icmp' 'icmp_ln61_4' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.78ns)   --->   "%icmp_ln61_5 = icmp_sgt  i5 %empty_36, i5 2" [d2.cpp:61]   --->   Operation 156 'icmp' 'icmp_ln61_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%tmp_70 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_36, i32 1, i32 4" [d2.cpp:61]   --->   Operation 157 'partselect' 'tmp_70' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.79ns)   --->   "%icmp_ln61_6 = icmp_sgt  i4 %tmp_70, i4 0" [d2.cpp:61]   --->   Operation 158 'icmp' 'icmp_ln61_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.79ns)   --->   "%add_ln51_1 = add i4 %i_2, i4 15" [d2.cpp:51]   --->   Operation 159 'add' 'add_ln51_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_71 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln51_1, i32 3" [d2.cpp:51]   --->   Operation 160 'bitselect' 'tmp_71' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 161 [1/1] (1.01ns)   --->   "%k1_3 = add i32 %k1_2, i32 1" [d2.cpp:51]   --->   Operation 161 'add' 'k1_3' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (1.01ns)   --->   "%k_3 = add i32 %k_2, i32 1" [d2.cpp:51]   --->   Operation 162 'add' 'k_3' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.44ns)   --->   "%k_4 = select i1 %tmp_71, i32 %k_3, i32 %k_2" [d2.cpp:51]   --->   Operation 163 'select' 'k_4' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.44ns)   --->   "%k1_4 = select i1 %tmp_71, i32 %k1_3, i32 %k1_2" [d2.cpp:51]   --->   Operation 164 'select' 'k1_4' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln53_2 = trunc i32 %k_4" [d2.cpp:53]   --->   Operation 165 'trunc' 'trunc_ln53_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (0.00ns)   --->   "%trunc_ln53_3 = trunc i32 %k1_4" [d2.cpp:53]   --->   Operation 166 'trunc' 'trunc_ln53_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 167 [1/1] (0.79ns)   --->   "%cmp69_1 = icmp_ugt  i4 %add_ln51_1, i4 8" [d2.cpp:51]   --->   Operation 167 'icmp' 'cmp69_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.35ns)   --->   "%empty_37 = xor i4 %i_2, i4 8" [d2.cpp:65]   --->   Operation 168 'xor' 'empty_37' <Predicate = (!icmp_ln42)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.79ns)   --->   "%cmp138_1 = icmp_ugt  i4 %add_ln51_1, i4 6" [d2.cpp:51]   --->   Operation 169 'icmp' 'cmp138_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%xor_ln64 = xor i4 %k_load_35, i4 8" [d2.cpp:64]   --->   Operation 170 'xor' 'xor_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%select_ln64 = select i1 %cmp138_1, i4 15, i4 0" [d2.cpp:64]   --->   Operation 171 'select' 'select_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36 = add i4 %xor_ln64, i4 %select_ln64" [d2.cpp:36]   --->   Operation 172 'add' 'add_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.79ns)   --->   "%icmp_ln59_6 = icmp_eq  i4 %i_2, i4 15" [d2.cpp:59]   --->   Operation 173 'icmp' 'icmp_ln59_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (0.28ns)   --->   "%and_ln59_7 = and i1 %icmp_ln59_6, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 174 'and' 'and_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.17ns)   --->   "%select_ln63_2 = select i1 %and_ln59_7, i3 6, i3 7" [d2.cpp:63]   --->   Operation 175 'select' 'select_ln63_2' <Predicate = (!icmp_ln42)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i1 %cmp138_1" [d2.cpp:64]   --->   Operation 176 'zext' 'zext_ln64_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 177 [1/1] (0.79ns)   --->   "%sub_ln65_30 = sub i4 %add_ln36, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 177 'sub' 'sub_ln65_30' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_43)   --->   "%select_ln59_6 = select i1 %icmp_ln59_6, i3 6, i3 7" [d2.cpp:59]   --->   Operation 178 'select' 'select_ln59_6' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.79ns)   --->   "%icmp_ln59_7 = icmp_ugt  i4 %i_2, i4 13" [d2.cpp:59]   --->   Operation 179 'icmp' 'icmp_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (0.28ns)   --->   "%and_ln59_8 = and i1 %icmp_ln59_7, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 180 'and' 'and_ln59_8' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln63_37 = zext i1 %and_ln59_8" [d2.cpp:63]   --->   Operation 181 'zext' 'zext_ln63_37' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 182 [1/1] (0.54ns)   --->   "%sub_ln63_14 = sub i3 %select_ln63_2, i3 %zext_ln63_37" [d2.cpp:63]   --->   Operation 182 'sub' 'sub_ln63_14' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.79ns)   --->   "%sub_ln65_31 = sub i4 %sub_ln65_30, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 183 'sub' 'sub_ln65_31' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_43)   --->   "%zext_ln36_2 = zext i1 %icmp_ln59_7" [d2.cpp:36]   --->   Operation 184 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 185 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_43 = sub i3 %select_ln59_6, i3 %zext_ln36_2" [d2.cpp:36]   --->   Operation 185 'sub' 'sub_ln36_43' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.79ns)   --->   "%icmp_ln59_8 = icmp_ugt  i4 %i_2, i4 12" [d2.cpp:59]   --->   Operation 186 'icmp' 'icmp_ln59_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 187 [1/1] (0.28ns)   --->   "%and_ln59_9 = and i1 %icmp_ln59_8, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 187 'and' 'and_ln59_9' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (0.79ns)   --->   "%sub_ln65_6 = sub i4 %sub_ln65_31, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 188 'sub' 'sub_ln65_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i1 %icmp_ln59_8" [d2.cpp:36]   --->   Operation 189 'zext' 'zext_ln36_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 190 [1/1] (0.67ns)   --->   "%sub_ln36_44 = sub i3 %sub_ln36_43, i3 %zext_ln36_3" [d2.cpp:36]   --->   Operation 190 'sub' 'sub_ln36_44' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns)   --->   "%sext_ln59_3 = sext i3 %sub_ln36_44" [d2.cpp:59]   --->   Operation 191 'sext' 'sext_ln59_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 192 [1/1] (0.79ns)   --->   "%icmp_ln59_9 = icmp_ugt  i4 %i_2, i4 11" [d2.cpp:59]   --->   Operation 192 'icmp' 'icmp_ln59_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln66_7 = zext i1 %icmp_ln59_9" [d2.cpp:66]   --->   Operation 193 'zext' 'zext_ln66_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 194 [1/1] (0.67ns)   --->   "%sub_ln36_20 = sub i4 %sext_ln59_3, i4 %zext_ln66_7" [d2.cpp:36]   --->   Operation 194 'sub' 'sub_ln36_20' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.79ns)   --->   "%icmp_ln59_10 = icmp_ugt  i4 %i_2, i4 10" [d2.cpp:59]   --->   Operation 195 'icmp' 'icmp_ln59_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln66_8 = zext i1 %icmp_ln59_10" [d2.cpp:66]   --->   Operation 196 'zext' 'zext_ln66_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 197 [1/1] (0.79ns)   --->   "%sub_ln36_21 = sub i4 %sub_ln36_20, i4 %zext_ln66_8" [d2.cpp:36]   --->   Operation 197 'sub' 'sub_ln36_21' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (0.79ns)   --->   "%icmp_ln59_11 = icmp_ugt  i4 %i_2, i4 9" [d2.cpp:59]   --->   Operation 198 'icmp' 'icmp_ln59_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln66_9 = zext i1 %icmp_ln59_11" [d2.cpp:66]   --->   Operation 199 'zext' 'zext_ln66_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 200 [1/1] (0.79ns)   --->   "%sub_ln36_22 = sub i4 %sub_ln36_21, i4 %zext_ln66_9" [d2.cpp:36]   --->   Operation 200 'sub' 'sub_ln36_22' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln66_10 = zext i1 %cmp69" [d2.cpp:66]   --->   Operation 201 'zext' 'zext_ln66_10' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 202 [1/1] (0.79ns)   --->   "%sub_ln36_23 = sub i4 %sub_ln36_22, i4 %zext_ln66_10" [d2.cpp:36]   --->   Operation 202 'sub' 'sub_ln36_23' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.00ns)   --->   "%tmp_72 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d2.cpp:65]   --->   Operation 203 'bitselect' 'tmp_72' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln65_69 = zext i1 %tmp_72" [d2.cpp:65]   --->   Operation 204 'zext' 'zext_ln65_69' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 205 [1/1] (0.79ns)   --->   "%sub_ln36_3 = sub i4 %sub_ln36_23, i4 %zext_ln65_69" [d2.cpp:36]   --->   Operation 205 'sub' 'sub_ln36_3' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 206 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln64" [d2.cpp:36]   --->   Operation 206 'sub' 'sub_ln36_4' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.79ns)   --->   "%icmp_ln61_7 = icmp_sgt  i4 %empty_37, i4 5" [d2.cpp:61]   --->   Operation 207 'icmp' 'icmp_ln61_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.28ns)   --->   "%and_ln61_7 = and i1 %icmp_ln61_7, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 208 'and' 'and_ln61_7' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln65_62 = zext i1 %and_ln61_7" [d2.cpp:65]   --->   Operation 209 'zext' 'zext_ln65_62' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 210 [1/1] (0.54ns)   --->   "%sub_ln65_32 = sub i3 %select_ln63_2, i3 %zext_ln65_62" [d2.cpp:65]   --->   Operation 210 'sub' 'sub_ln65_32' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 211 [1/1] (0.79ns)   --->   "%icmp_ln65_3 = icmp_ugt  i4 %i_2, i4 5" [d2.cpp:65]   --->   Operation 211 'icmp' 'icmp_ln65_3' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 212 [1/1] (0.79ns)   --->   "%icmp_ln61_8 = icmp_sgt  i4 %empty_37, i4 4" [d2.cpp:61]   --->   Operation 212 'icmp' 'icmp_ln61_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (0.28ns)   --->   "%and_ln61_8 = and i1 %icmp_ln61_8, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 213 'and' 'and_ln61_8' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln65_63 = zext i1 %and_ln61_8" [d2.cpp:65]   --->   Operation 214 'zext' 'zext_ln65_63' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 215 [1/1] (0.67ns)   --->   "%sub_ln65_9 = sub i3 %sub_ln65_32, i3 %zext_ln65_63" [d2.cpp:65]   --->   Operation 215 'sub' 'sub_ln65_9' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%sext_ln65_3 = sext i3 %sub_ln65_9" [d2.cpp:65]   --->   Operation 216 'sext' 'sext_ln65_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_73 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_37, i32 2, i32 3" [d2.cpp:61]   --->   Operation 217 'partselect' 'tmp_73' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 218 [1/1] (0.54ns)   --->   "%icmp_ln61_9 = icmp_eq  i2 %tmp_73, i2 1" [d2.cpp:61]   --->   Operation 218 'icmp' 'icmp_ln61_9' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 219 [1/1] (0.28ns)   --->   "%and_ln61_9 = and i1 %icmp_ln61_9, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 219 'and' 'and_ln61_9' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i1 %and_ln61_9" [d2.cpp:62]   --->   Operation 220 'zext' 'zext_ln62_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.67ns)   --->   "%sub_ln65_10 = sub i4 %sext_ln65_3, i4 %zext_ln62_3" [d2.cpp:65]   --->   Operation 221 'sub' 'sub_ln65_10' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 222 [1/1] (0.79ns)   --->   "%icmp_ln61_10 = icmp_sgt  i4 %empty_37, i4 2" [d2.cpp:61]   --->   Operation 222 'icmp' 'icmp_ln61_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 223 [1/1] (0.00ns)   --->   "%tmp_74 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_37, i32 1, i32 3" [d2.cpp:61]   --->   Operation 223 'partselect' 'tmp_74' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.67ns)   --->   "%icmp_ln61_11 = icmp_sgt  i3 %tmp_74, i3 0" [d2.cpp:61]   --->   Operation 224 'icmp' 'icmp_ln61_11' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 225 [1/1] (0.79ns)   --->   "%add_ln51_5 = add i5 %zext_ln42, i5 30" [d2.cpp:51]   --->   Operation 225 'add' 'add_ln51_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 226 [1/1] (0.00ns)   --->   "%tmp_75 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln51_5, i32 3, i32 4" [d2.cpp:51]   --->   Operation 226 'partselect' 'tmp_75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 227 [1/1] (0.54ns)   --->   "%icmp_ln51 = icmp_eq  i2 %tmp_75, i2 1" [d2.cpp:51]   --->   Operation 227 'icmp' 'icmp_ln51' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 228 [1/1] (1.01ns)   --->   "%k1_5 = add i32 %k1_4, i32 1" [d2.cpp:51]   --->   Operation 228 'add' 'k1_5' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 229 [1/1] (1.01ns)   --->   "%k_5 = add i32 %k_4, i32 1" [d2.cpp:51]   --->   Operation 229 'add' 'k_5' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 230 [1/1] (0.44ns)   --->   "%k_6 = select i1 %icmp_ln51, i32 %k_5, i32 %k_4" [d2.cpp:51]   --->   Operation 230 'select' 'k_6' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.44ns)   --->   "%k1_6 = select i1 %icmp_ln51, i32 %k1_5, i32 %k1_4" [d2.cpp:51]   --->   Operation 231 'select' 'k1_6' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 232 [1/1] (0.00ns)   --->   "%trunc_ln53_4 = trunc i32 %k_6" [d2.cpp:53]   --->   Operation 232 'trunc' 'trunc_ln53_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 233 [1/1] (0.00ns)   --->   "%trunc_ln53_5 = trunc i32 %k1_6" [d2.cpp:53]   --->   Operation 233 'trunc' 'trunc_ln53_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 234 [1/1] (0.78ns)   --->   "%cmp69_2 = icmp_sgt  i5 %add_ln51_5, i5 8" [d2.cpp:51]   --->   Operation 234 'icmp' 'cmp69_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 235 [1/1] (0.79ns)   --->   "%p_cast311 = add i4 %i_2, i4 7" [d2.cpp:65]   --->   Operation 235 'add' 'p_cast311' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 236 [1/1] (0.78ns)   --->   "%cmp138_2 = icmp_sgt  i5 %add_ln51_5, i5 6" [d2.cpp:51]   --->   Operation 236 'icmp' 'cmp138_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_1)   --->   "%select_ln36 = select i1 %cmp138_2, i4 8, i4 9" [d2.cpp:36]   --->   Operation 237 'select' 'select_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_1 = add i4 %select_ln36, i4 %k_load_35" [d2.cpp:36]   --->   Operation 238 'add' 'add_ln36_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln64_2 = zext i1 %cmp138_2" [d2.cpp:64]   --->   Operation 239 'zext' 'zext_ln64_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 240 [1/1] (0.79ns)   --->   "%sub_ln36_24 = sub i4 %add_ln36_1, i4 %zext_ln64_2" [d2.cpp:36]   --->   Operation 240 'sub' 'sub_ln36_24' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 241 [1/1] (0.79ns)   --->   "%icmp_ln59_12 = icmp_ugt  i4 %add_ln51_1, i4 13" [d2.cpp:59]   --->   Operation 241 'icmp' 'icmp_ln59_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.28ns)   --->   "%and_ln59_13 = and i1 %icmp_ln59_12, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 242 'and' 'and_ln59_13' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_6)   --->   "%select_ln63_4 = select i1 %and_ln59_13, i3 6, i3 7" [d2.cpp:63]   --->   Operation 243 'select' 'select_ln63_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.79ns)   --->   "%sub_ln65_33 = sub i4 %sub_ln36_24, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 244 'sub' 'sub_ln65_33' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_45)   --->   "%select_ln59_7 = select i1 %icmp_ln59_12, i3 6, i3 7" [d2.cpp:59]   --->   Operation 245 'select' 'select_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 246 [1/1] (0.79ns)   --->   "%icmp_ln59_13 = icmp_ugt  i4 %add_ln51_1, i4 12" [d2.cpp:59]   --->   Operation 246 'icmp' 'icmp_ln59_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.28ns)   --->   "%and_ln59_14 = and i1 %icmp_ln59_13, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 247 'and' 'and_ln59_14' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_6)   --->   "%zext_ln63_39 = zext i1 %and_ln59_14" [d2.cpp:63]   --->   Operation 248 'zext' 'zext_ln63_39' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 249 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_6 = sub i3 %select_ln63_4, i3 %zext_ln63_39" [d2.cpp:63]   --->   Operation 249 'sub' 'sub_ln63_6' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 250 [1/1] (0.79ns)   --->   "%sub_ln65_12 = sub i4 %sub_ln65_33, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 250 'sub' 'sub_ln65_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_45)   --->   "%zext_ln36_4 = zext i1 %icmp_ln59_13" [d2.cpp:36]   --->   Operation 251 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 252 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_45 = sub i3 %select_ln59_7, i3 %zext_ln36_4" [d2.cpp:36]   --->   Operation 252 'sub' 'sub_ln36_45' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 253 [1/1] (0.79ns)   --->   "%icmp_ln59_14 = icmp_ugt  i4 %add_ln51_1, i4 11" [d2.cpp:59]   --->   Operation 253 'icmp' 'icmp_ln59_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.28ns)   --->   "%and_ln59_15 = and i1 %icmp_ln59_14, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 254 'and' 'and_ln59_15' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i1 %icmp_ln59_14" [d2.cpp:36]   --->   Operation 255 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 256 [1/1] (0.67ns)   --->   "%sub_ln36_46 = sub i3 %sub_ln36_45, i3 %zext_ln36_5" [d2.cpp:36]   --->   Operation 256 'sub' 'sub_ln36_46' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.00ns)   --->   "%sext_ln59_5 = sext i3 %sub_ln36_46" [d2.cpp:59]   --->   Operation 257 'sext' 'sext_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 258 [1/1] (0.79ns)   --->   "%icmp_ln59_15 = icmp_ugt  i4 %add_ln51_1, i4 10" [d2.cpp:59]   --->   Operation 258 'icmp' 'icmp_ln59_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln66_12 = zext i1 %icmp_ln59_15" [d2.cpp:66]   --->   Operation 259 'zext' 'zext_ln66_12' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 260 [1/1] (0.67ns)   --->   "%sub_ln36_25 = sub i4 %sext_ln59_5, i4 %zext_ln66_12" [d2.cpp:36]   --->   Operation 260 'sub' 'sub_ln36_25' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 261 [1/1] (0.79ns)   --->   "%icmp_ln59_16 = icmp_ugt  i4 %add_ln51_1, i4 9" [d2.cpp:59]   --->   Operation 261 'icmp' 'icmp_ln59_16' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 262 [1/1] (0.00ns)   --->   "%zext_ln66_13 = zext i1 %icmp_ln59_16" [d2.cpp:66]   --->   Operation 262 'zext' 'zext_ln66_13' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 263 [1/1] (0.79ns)   --->   "%sub_ln36_26 = sub i4 %sub_ln36_25, i4 %zext_ln66_13" [d2.cpp:36]   --->   Operation 263 'sub' 'sub_ln36_26' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln66_14 = zext i1 %cmp69_1" [d2.cpp:66]   --->   Operation 264 'zext' 'zext_ln66_14' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 265 [1/1] (0.79ns)   --->   "%sub_ln36_27 = sub i4 %sub_ln36_26, i4 %zext_ln66_14" [d2.cpp:36]   --->   Operation 265 'sub' 'sub_ln36_27' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (0.00ns)   --->   "%tmp_106 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln51_1, i32 3" [d2.cpp:65]   --->   Operation 266 'bitselect' 'tmp_106' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln65_70 = zext i1 %tmp_106" [d2.cpp:65]   --->   Operation 267 'zext' 'zext_ln65_70' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 268 [1/1] (0.79ns)   --->   "%sub_ln36_28 = sub i4 %sub_ln36_27, i4 %zext_ln65_70" [d2.cpp:36]   --->   Operation 268 'sub' 'sub_ln36_28' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.79ns)   --->   "%icmp_ln61_12 = icmp_sgt  i4 %p_cast311, i4 5" [d2.cpp:61]   --->   Operation 269 'icmp' 'icmp_ln61_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.28ns)   --->   "%and_ln61_12 = and i1 %icmp_ln61_12, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 270 'and' 'and_ln61_12' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_15)   --->   "%select_ln65_64 = select i1 %and_ln61_12, i3 6, i3 7" [d2.cpp:65]   --->   Operation 271 'select' 'select_ln65_64' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (0.79ns)   --->   "%icmp_ln65_4 = icmp_ugt  i4 %add_ln51_1, i4 5" [d2.cpp:65]   --->   Operation 272 'icmp' 'icmp_ln65_4' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (0.79ns)   --->   "%icmp_ln61_13 = icmp_sgt  i4 %p_cast311, i4 4" [d2.cpp:61]   --->   Operation 273 'icmp' 'icmp_ln61_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 274 [1/1] (0.28ns)   --->   "%and_ln61_13 = and i1 %icmp_ln61_13, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 274 'and' 'and_ln61_13' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_15)   --->   "%zext_ln65_64 = zext i1 %and_ln61_13" [d2.cpp:65]   --->   Operation 275 'zext' 'zext_ln65_64' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 276 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_15 = sub i3 %select_ln65_64, i3 %zext_ln65_64" [d2.cpp:65]   --->   Operation 276 'sub' 'sub_ln65_15' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.79ns)   --->   "%icmp_ln65_5 = icmp_ugt  i4 %add_ln51_1, i4 4" [d2.cpp:65]   --->   Operation 277 'icmp' 'icmp_ln65_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.00ns)   --->   "%tmp_148 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %p_cast311, i32 2, i32 3" [d2.cpp:61]   --->   Operation 278 'partselect' 'tmp_148' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 279 [1/1] (0.54ns)   --->   "%icmp_ln61_14 = icmp_eq  i2 %tmp_148, i2 1" [d2.cpp:61]   --->   Operation 279 'icmp' 'icmp_ln61_14' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.28ns)   --->   "%and_ln61_14 = and i1 %icmp_ln61_14, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 280 'and' 'and_ln61_14' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 281 [1/1] (0.79ns)   --->   "%icmp_ln61_15 = icmp_sgt  i4 %p_cast311, i4 2" [d2.cpp:61]   --->   Operation 281 'icmp' 'icmp_ln61_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (0.00ns)   --->   "%tmp_149 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %p_cast311, i32 1, i32 3" [d2.cpp:61]   --->   Operation 282 'partselect' 'tmp_149' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 283 [1/1] (0.67ns)   --->   "%icmp_ln61_16 = icmp_sgt  i3 %tmp_149, i3 0" [d2.cpp:61]   --->   Operation 283 'icmp' 'icmp_ln61_16' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.79ns)   --->   "%add_ln51_9 = add i5 %zext_ln42, i5 29" [d2.cpp:51]   --->   Operation 284 'add' 'add_ln51_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%tmp_150 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln51_9, i32 3, i32 4" [d2.cpp:51]   --->   Operation 285 'partselect' 'tmp_150' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.54ns)   --->   "%icmp_ln51_1 = icmp_eq  i2 %tmp_150, i2 1" [d2.cpp:51]   --->   Operation 286 'icmp' 'icmp_ln51_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (1.01ns)   --->   "%k1_7 = add i32 %k1_6, i32 1" [d2.cpp:51]   --->   Operation 287 'add' 'k1_7' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 288 [1/1] (1.01ns)   --->   "%k_7 = add i32 %k_6, i32 1" [d2.cpp:51]   --->   Operation 288 'add' 'k_7' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 289 [1/1] (0.44ns)   --->   "%k_8 = select i1 %icmp_ln51_1, i32 %k_7, i32 %k_6" [d2.cpp:51]   --->   Operation 289 'select' 'k_8' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 290 [1/1] (0.44ns)   --->   "%k1_8 = select i1 %icmp_ln51_1, i32 %k1_7, i32 %k1_6" [d2.cpp:51]   --->   Operation 290 'select' 'k1_8' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln53_6 = trunc i32 %k_8" [d2.cpp:53]   --->   Operation 291 'trunc' 'trunc_ln53_6' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 292 [1/1] (0.00ns)   --->   "%trunc_ln53_7 = trunc i32 %k1_8" [d2.cpp:53]   --->   Operation 292 'trunc' 'trunc_ln53_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 293 [1/1] (0.78ns)   --->   "%cmp69_3 = icmp_sgt  i5 %add_ln51_9, i5 8" [d2.cpp:51]   --->   Operation 293 'icmp' 'cmp69_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.78ns)   --->   "%empty_38 = add i5 %zext_ln42, i5 22" [d2.cpp:42]   --->   Operation 294 'add' 'empty_38' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.78ns)   --->   "%cmp138_3 = icmp_sgt  i5 %add_ln51_9, i5 6" [d2.cpp:51]   --->   Operation 295 'icmp' 'cmp138_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_2)   --->   "%select_ln36_1 = select i1 %cmp138_3, i4 9, i4 10" [d2.cpp:36]   --->   Operation 296 'select' 'select_ln36_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_2 = add i4 %select_ln36_1, i4 %k_load_35" [d2.cpp:36]   --->   Operation 297 'add' 'add_ln36_2' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (0.00ns)   --->   "%zext_ln64_3 = zext i1 %cmp138_3" [d2.cpp:64]   --->   Operation 298 'zext' 'zext_ln64_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 299 [1/1] (0.79ns)   --->   "%sub_ln36_29 = sub i4 %add_ln36_2, i4 %zext_ln64_3" [d2.cpp:36]   --->   Operation 299 'sub' 'sub_ln36_29' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 300 [1/1] (0.79ns)   --->   "%sub_ln36_30 = sub i4 %sub_ln36_29, i4 %zext_ln64_3" [d2.cpp:36]   --->   Operation 300 'sub' 'sub_ln36_30' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 301 [1/1] (0.78ns)   --->   "%icmp_ln59_17 = icmp_sgt  i5 %add_ln51_5, i5 12" [d2.cpp:59]   --->   Operation 301 'icmp' 'icmp_ln59_17' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 302 [1/1] (0.79ns)   --->   "%sub_ln65_18 = sub i4 %sub_ln36_30, i4 %zext_ln64_3" [d2.cpp:65]   --->   Operation 302 'sub' 'sub_ln65_18' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_47)   --->   "%select_ln59_8 = select i1 %icmp_ln59_17, i3 6, i3 7" [d2.cpp:59]   --->   Operation 303 'select' 'select_ln59_8' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 304 [1/1] (0.78ns)   --->   "%icmp_ln59_18 = icmp_sgt  i5 %add_ln51_5, i5 11" [d2.cpp:59]   --->   Operation 304 'icmp' 'icmp_ln59_18' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_47)   --->   "%zext_ln36_6 = zext i1 %icmp_ln59_18" [d2.cpp:36]   --->   Operation 305 'zext' 'zext_ln36_6' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 306 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_47 = sub i3 %select_ln59_8, i3 %zext_ln36_6" [d2.cpp:36]   --->   Operation 306 'sub' 'sub_ln36_47' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 307 [1/1] (0.78ns)   --->   "%icmp_ln59_19 = icmp_sgt  i5 %add_ln51_5, i5 10" [d2.cpp:59]   --->   Operation 307 'icmp' 'icmp_ln59_19' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 308 [1/1] (0.00ns)   --->   "%zext_ln36_7 = zext i1 %icmp_ln59_19" [d2.cpp:36]   --->   Operation 308 'zext' 'zext_ln36_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 309 [1/1] (0.67ns)   --->   "%sub_ln36_48 = sub i3 %sub_ln36_47, i3 %zext_ln36_7" [d2.cpp:36]   --->   Operation 309 'sub' 'sub_ln36_48' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.00ns)   --->   "%sext_ln59_7 = sext i3 %sub_ln36_48" [d2.cpp:59]   --->   Operation 310 'sext' 'sext_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 311 [1/1] (0.78ns)   --->   "%icmp_ln59_20 = icmp_sgt  i5 %add_ln51_5, i5 9" [d2.cpp:59]   --->   Operation 311 'icmp' 'icmp_ln59_20' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln66_17 = zext i1 %icmp_ln59_20" [d2.cpp:66]   --->   Operation 312 'zext' 'zext_ln66_17' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 313 [1/1] (0.67ns)   --->   "%sub_ln36_31 = sub i4 %sext_ln59_7, i4 %zext_ln66_17" [d2.cpp:36]   --->   Operation 313 'sub' 'sub_ln36_31' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 314 [1/1] (0.00ns)   --->   "%zext_ln66_18 = zext i1 %cmp69_2" [d2.cpp:66]   --->   Operation 314 'zext' 'zext_ln66_18' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 315 [1/1] (0.79ns)   --->   "%sub_ln36_32 = sub i4 %sub_ln36_31, i4 %zext_ln66_18" [d2.cpp:36]   --->   Operation 315 'sub' 'sub_ln36_32' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 316 [1/1] (0.00ns)   --->   "%zext_ln66_19 = zext i1 %icmp_ln51" [d2.cpp:66]   --->   Operation 316 'zext' 'zext_ln66_19' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 317 [1/1] (0.79ns)   --->   "%sub_ln36_33 = sub i4 %sub_ln36_32, i4 %zext_ln66_19" [d2.cpp:36]   --->   Operation 317 'sub' 'sub_ln36_33' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 318 [1/1] (0.79ns)   --->   "%sub_ln36_34 = sub i4 %sub_ln36_33, i4 %zext_ln64_2" [d2.cpp:36]   --->   Operation 318 'sub' 'sub_ln36_34' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 319 [1/1] (0.78ns)   --->   "%icmp_ln65_6 = icmp_sgt  i5 %add_ln51_5, i5 5" [d2.cpp:65]   --->   Operation 319 'icmp' 'icmp_ln65_6' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln66_20 = zext i1 %icmp_ln65_6" [d2.cpp:66]   --->   Operation 320 'zext' 'zext_ln66_20' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 321 [1/1] (0.79ns)   --->   "%sub_ln36_9 = sub i4 %sub_ln36_34, i4 %zext_ln66_20" [d2.cpp:36]   --->   Operation 321 'sub' 'sub_ln36_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 322 [1/1] (0.78ns)   --->   "%icmp_ln61_17 = icmp_sgt  i5 %empty_38, i5 4" [d2.cpp:61]   --->   Operation 322 'icmp' 'icmp_ln61_17' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 323 [1/1] (0.28ns)   --->   "%and_ln61_17 = and i1 %icmp_ln61_17, i1 %cmp69_3" [d2.cpp:61]   --->   Operation 323 'and' 'and_ln61_17' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 324 [1/1] (0.78ns)   --->   "%icmp_ln65_7 = icmp_sgt  i5 %add_ln51_5, i5 4" [d2.cpp:65]   --->   Operation 324 'icmp' 'icmp_ln65_7' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns)   --->   "%tmp_151 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_38, i32 2, i32 4" [d2.cpp:61]   --->   Operation 325 'partselect' 'tmp_151' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 326 [1/1] (0.67ns)   --->   "%icmp_ln61_18 = icmp_sgt  i3 %tmp_151, i3 0" [d2.cpp:61]   --->   Operation 326 'icmp' 'icmp_ln61_18' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 327 [1/1] (0.28ns)   --->   "%and_ln61_18 = and i1 %icmp_ln61_18, i1 %cmp69_3" [d2.cpp:61]   --->   Operation 327 'and' 'and_ln61_18' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 328 [1/1] (0.00ns)   --->   "%tmp_152 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln51_5, i32 2, i32 4" [d2.cpp:65]   --->   Operation 328 'partselect' 'tmp_152' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 329 [1/1] (0.67ns)   --->   "%icmp_ln65_8 = icmp_sgt  i3 %tmp_152, i3 0" [d2.cpp:65]   --->   Operation 329 'icmp' 'icmp_ln65_8' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 330 [1/1] (0.78ns)   --->   "%icmp_ln61_19 = icmp_sgt  i5 %empty_38, i5 2" [d2.cpp:61]   --->   Operation 330 'icmp' 'icmp_ln61_19' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.00ns)   --->   "%tmp_153 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_38, i32 1, i32 4" [d2.cpp:61]   --->   Operation 331 'partselect' 'tmp_153' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 332 [1/1] (0.79ns)   --->   "%icmp_ln61_20 = icmp_sgt  i4 %tmp_153, i4 0" [d2.cpp:61]   --->   Operation 332 'icmp' 'icmp_ln61_20' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 333 [1/1] (0.79ns)   --->   "%add_ln48 = add i4 %k_load_35, i4 5" [d2.cpp:48]   --->   Operation 333 'add' 'add_ln48' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.79ns)   --->   "%add_ln51_13 = add i5 %zext_ln42, i5 28" [d2.cpp:51]   --->   Operation 334 'add' 'add_ln51_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 335 [1/1] (0.00ns)   --->   "%tmp_154 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln51_13, i32 3, i32 4" [d2.cpp:51]   --->   Operation 335 'partselect' 'tmp_154' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 336 [1/1] (0.54ns)   --->   "%icmp_ln51_2 = icmp_eq  i2 %tmp_154, i2 1" [d2.cpp:51]   --->   Operation 336 'icmp' 'icmp_ln51_2' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (1.01ns)   --->   "%k1_9 = add i32 %k1_8, i32 1" [d2.cpp:51]   --->   Operation 337 'add' 'k1_9' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (1.01ns)   --->   "%k_9 = add i32 %k_8, i32 1" [d2.cpp:51]   --->   Operation 338 'add' 'k_9' <Predicate = (!icmp_ln42)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 339 [1/1] (0.44ns)   --->   "%k_10 = select i1 %icmp_ln51_2, i32 %k_9, i32 %k_8" [d2.cpp:51]   --->   Operation 339 'select' 'k_10' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.44ns)   --->   "%k1_10 = select i1 %icmp_ln51_2, i32 %k1_9, i32 %k1_8" [d2.cpp:51]   --->   Operation 340 'select' 'k1_10' <Predicate = (!icmp_ln42)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 341 [1/1] (0.78ns)   --->   "%cmp69_4 = icmp_sgt  i5 %add_ln51_13, i5 8" [d2.cpp:51]   --->   Operation 341 'icmp' 'cmp69_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.78ns)   --->   "%empty_39 = add i5 %zext_ln42, i5 21" [d2.cpp:42]   --->   Operation 342 'add' 'empty_39' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 343 [1/1] (0.78ns)   --->   "%cmp138_4 = icmp_sgt  i5 %add_ln51_13, i5 6" [d2.cpp:51]   --->   Operation 343 'icmp' 'cmp138_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_3)   --->   "%select_ln36_2 = select i1 %cmp138_4, i4 10, i4 11" [d2.cpp:36]   --->   Operation 344 'select' 'select_ln36_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 345 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_3 = add i4 %select_ln36_2, i4 %k_load_35" [d2.cpp:36]   --->   Operation 345 'add' 'add_ln36_3' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln64_4 = zext i1 %cmp138_4" [d2.cpp:64]   --->   Operation 346 'zext' 'zext_ln64_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 347 [1/1] (0.79ns)   --->   "%sub_ln36_35 = sub i4 %add_ln36_3, i4 %zext_ln64_4" [d2.cpp:36]   --->   Operation 347 'sub' 'sub_ln36_35' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 348 [1/1] (0.79ns)   --->   "%sub_ln36_36 = sub i4 %sub_ln36_35, i4 %zext_ln64_4" [d2.cpp:36]   --->   Operation 348 'sub' 'sub_ln36_36' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 349 [1/1] (0.79ns)   --->   "%sub_ln36_12 = sub i4 %sub_ln36_36, i4 %zext_ln64_4" [d2.cpp:36]   --->   Operation 349 'sub' 'sub_ln36_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 350 [1/1] (0.78ns)   --->   "%icmp_ln59_21 = icmp_sgt  i5 %add_ln51_9, i5 11" [d2.cpp:59]   --->   Operation 350 'icmp' 'icmp_ln59_21' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 351 [1/1] (0.79ns)   --->   "%sub_ln65_23 = sub i4 %sub_ln36_12, i4 %zext_ln64_4" [d2.cpp:65]   --->   Operation 351 'sub' 'sub_ln65_23' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_49)   --->   "%select_ln59_9 = select i1 %icmp_ln59_21, i3 6, i3 7" [d2.cpp:59]   --->   Operation 352 'select' 'select_ln59_9' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 353 [1/1] (0.78ns)   --->   "%icmp_ln59_22 = icmp_sgt  i5 %add_ln51_9, i5 10" [d2.cpp:59]   --->   Operation 353 'icmp' 'icmp_ln59_22' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_49)   --->   "%zext_ln36_8 = zext i1 %icmp_ln59_22" [d2.cpp:36]   --->   Operation 354 'zext' 'zext_ln36_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 355 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_49 = sub i3 %select_ln59_9, i3 %zext_ln36_8" [d2.cpp:36]   --->   Operation 355 'sub' 'sub_ln36_49' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.78ns)   --->   "%icmp_ln59_23 = icmp_sgt  i5 %add_ln51_9, i5 9" [d2.cpp:59]   --->   Operation 356 'icmp' 'icmp_ln59_23' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 357 [1/1] (0.00ns)   --->   "%zext_ln36_9 = zext i1 %icmp_ln59_23" [d2.cpp:36]   --->   Operation 357 'zext' 'zext_ln36_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 358 [1/1] (0.67ns)   --->   "%sub_ln36_50 = sub i3 %sub_ln36_49, i3 %zext_ln36_9" [d2.cpp:36]   --->   Operation 358 'sub' 'sub_ln36_50' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.00ns)   --->   "%sext_ln65_8 = sext i3 %sub_ln36_50" [d2.cpp:65]   --->   Operation 359 'sext' 'sext_ln65_8' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 360 [1/1] (0.00ns)   --->   "%zext_ln66_23 = zext i1 %cmp69_3" [d2.cpp:66]   --->   Operation 360 'zext' 'zext_ln66_23' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 361 [1/1] (0.67ns)   --->   "%sub_ln36_37 = sub i4 %sext_ln65_8, i4 %zext_ln66_23" [d2.cpp:36]   --->   Operation 361 'sub' 'sub_ln36_37' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns)   --->   "%zext_ln66_24 = zext i1 %icmp_ln51_1" [d2.cpp:66]   --->   Operation 362 'zext' 'zext_ln66_24' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 363 [1/1] (0.79ns)   --->   "%sub_ln36_38 = sub i4 %sub_ln36_37, i4 %zext_ln66_24" [d2.cpp:36]   --->   Operation 363 'sub' 'sub_ln36_38' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.79ns)   --->   "%sub_ln36_39 = sub i4 %sub_ln36_38, i4 %zext_ln64_3" [d2.cpp:36]   --->   Operation 364 'sub' 'sub_ln36_39' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (0.78ns)   --->   "%icmp_ln65_9 = icmp_sgt  i5 %add_ln51_9, i5 5" [d2.cpp:65]   --->   Operation 365 'icmp' 'icmp_ln65_9' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 366 [1/1] (0.00ns)   --->   "%zext_ln66_25 = zext i1 %icmp_ln65_9" [d2.cpp:66]   --->   Operation 366 'zext' 'zext_ln66_25' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 367 [1/1] (0.79ns)   --->   "%sub_ln36_40 = sub i4 %sub_ln36_39, i4 %zext_ln66_25" [d2.cpp:36]   --->   Operation 367 'sub' 'sub_ln36_40' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 368 [1/1] (0.78ns)   --->   "%icmp_ln65_10 = icmp_sgt  i5 %add_ln51_9, i5 4" [d2.cpp:65]   --->   Operation 368 'icmp' 'icmp_ln65_10' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.00ns)   --->   "%zext_ln66_26 = zext i1 %icmp_ln65_10" [d2.cpp:66]   --->   Operation 369 'zext' 'zext_ln66_26' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 370 [1/1] (0.79ns)   --->   "%sub_ln36_13 = sub i4 %sub_ln36_40, i4 %zext_ln66_26" [d2.cpp:36]   --->   Operation 370 'sub' 'sub_ln36_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_155 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_39, i32 2, i32 4" [d2.cpp:61]   --->   Operation 371 'partselect' 'tmp_155' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 372 [1/1] (0.67ns)   --->   "%icmp_ln61_21 = icmp_sgt  i3 %tmp_155, i3 0" [d2.cpp:61]   --->   Operation 372 'icmp' 'icmp_ln61_21' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.28ns)   --->   "%and_ln61_21 = and i1 %icmp_ln61_21, i1 %cmp69_4" [d2.cpp:61]   --->   Operation 373 'and' 'and_ln61_21' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.00ns)   --->   "%tmp_156 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln51_9, i32 2, i32 4" [d2.cpp:65]   --->   Operation 374 'partselect' 'tmp_156' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 375 [1/1] (0.67ns)   --->   "%icmp_ln65_11 = icmp_sgt  i3 %tmp_156, i3 0" [d2.cpp:65]   --->   Operation 375 'icmp' 'icmp_ln65_11' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.78ns)   --->   "%icmp_ln61_22 = icmp_sgt  i5 %empty_39, i5 2" [d2.cpp:61]   --->   Operation 376 'icmp' 'icmp_ln61_22' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.78ns)   --->   "%icmp_ln65_12 = icmp_sgt  i5 %add_ln51_9, i5 2" [d2.cpp:65]   --->   Operation 377 'icmp' 'icmp_ln65_12' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 378 [1/1] (0.00ns)   --->   "%tmp_157 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_39, i32 1, i32 4" [d2.cpp:61]   --->   Operation 378 'partselect' 'tmp_157' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 379 [1/1] (0.79ns)   --->   "%icmp_ln61_23 = icmp_sgt  i4 %tmp_157, i4 0" [d2.cpp:61]   --->   Operation 379 'icmp' 'icmp_ln61_23' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 380 [1/1] (0.79ns)   --->   "%add_ln42 = add i4 %i_2, i4 11" [d2.cpp:42]   --->   Operation 380 'add' 'add_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln42, i4 %i" [d2.cpp:42]   --->   Operation 381 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 382 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln48, i4 %k" [d2.cpp:42]   --->   Operation 382 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 383 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %k1_10, i32 %k1" [d2.cpp:42]   --->   Operation 383 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_2 : Operation 384 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %k_10, i32 %k_s" [d2.cpp:42]   --->   Operation 384 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.27>
ST_3 : Operation 385 [1/1] (0.00ns)   --->   "%arr_24_load_1 = load i64 %arr_24" [d2.cpp:65]   --->   Operation 385 'load' 'arr_24_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 386 [1/1] (0.00ns)   --->   "%arr_25_load_1 = load i64 %arr_25" [d2.cpp:65]   --->   Operation 386 'load' 'arr_25_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 387 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42_1" [d2.cpp:51]   --->   Operation 387 'mux' 'tmp_2' <Predicate = (tmp_34)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 388 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i32 %tmp_2" [d2.cpp:51]   --->   Operation 388 'zext' 'zext_ln51' <Predicate = (tmp_34)> <Delay = 0.00>
ST_3 : Operation 389 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42" [d2.cpp:51]   --->   Operation 389 'mux' 'tmp_3' <Predicate = (tmp_34)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 390 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i32 %tmp_3" [d2.cpp:51]   --->   Operation 390 'zext' 'tmp_3_cast' <Predicate = (tmp_34)> <Delay = 0.00>
ST_3 : Operation 391 [1/1] (1.01ns)   --->   "%tmp = add i33 %tmp_3_cast, i33 %zext_ln51" [d2.cpp:51]   --->   Operation 391 'add' 'tmp' <Predicate = (tmp_34)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 392 [1/1] (0.00ns)   --->   "%tmp_cast = zext i33 %tmp" [d2.cpp:51]   --->   Operation 392 'zext' 'tmp_cast' <Predicate = (tmp_34)> <Delay = 0.00>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 393 '%tmp1 = mul i64 %tmp_cast, i64 %zext_ln59'
ST_3 : Operation 393 [1/1] (2.84ns)   --->   "%tmp1 = mul i64 %tmp_cast, i64 %zext_ln59" [d2.cpp:51]   --->   Operation 393 'mul' 'tmp1' <Predicate = (tmp_34)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 394 [1/1] (0.28ns)   --->   "%and_ln59 = and i1 %tmp_35, i1 %cmp69" [d2.cpp:59]   --->   Operation 394 'and' 'and_ln59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_12)   --->   "%select_ln63 = select i1 %and_ln59, i3 6, i3 7" [d2.cpp:63]   --->   Operation 395 'select' 'select_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 396 [1/1] (0.73ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %k_load_35" [d2.cpp:63]   --->   Operation 396 'mux' 'tmp_4' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 397 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i32 %tmp_4" [d2.cpp:63]   --->   Operation 397 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 398 '%mul_ln65 = mul i64 %zext_ln63, i64 %zext_ln59'
ST_3 : Operation 398 [1/1] (2.09ns)   --->   "%mul_ln65 = mul i64 %zext_ln63, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 398 'mul' 'mul_ln65' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 399 [1/1] (0.17ns)   --->   "%select_ln65_2 = select i1 %cmp138, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 399 'select' 'select_ln65_2' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 400 [1/1] (0.37ns)   --->   "%and_ln65 = and i64 %mul_ln65, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 400 'and' 'and_ln65' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_2)   --->   "%select_ln65_7 = select i1 %and_ln59, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 401 'select' 'select_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 402 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_2 = and i64 %mul_ln59, i64 %select_ln65_7" [d2.cpp:65]   --->   Operation 402 'and' 'and_ln65_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 403 [1/1] (0.44ns)   --->   "%select_ln59 = select i1 %and_ln59, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 403 'select' 'select_ln59' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i32 %select_ln59" [d2.cpp:59]   --->   Operation 404 'zext' 'zext_ln59_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 405 [1/1] (0.28ns)   --->   "%and_ln59_1 = and i1 %icmp_ln59, i1 %cmp69" [d2.cpp:59]   --->   Operation 405 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_12)   --->   "%zext_ln63_35 = zext i1 %and_ln59_1" [d2.cpp:63]   --->   Operation 406 'zext' 'zext_ln63_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 407 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_12 = sub i3 %select_ln63, i3 %zext_ln63_35" [d2.cpp:63]   --->   Operation 407 'sub' 'sub_ln63_12' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 408 [1/1] (0.00ns)   --->   "%sext_ln63_4 = sext i3 %sub_ln63_12" [d2.cpp:63]   --->   Operation 408 'sext' 'sext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 409 [1/1] (0.48ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln65" [d2.cpp:63]   --->   Operation 409 'mux' 'tmp_6' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 410 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i32 %tmp_6" [d2.cpp:63]   --->   Operation 410 'zext' 'zext_ln63_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 411 [1/1] (0.44ns)   --->   "%select_ln65_1 = select i1 %tmp_35, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 411 'select' 'select_ln65_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 412 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i32 %select_ln65_1" [d2.cpp:65]   --->   Operation 412 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 413 '%mul_ln65_1 = mul i64 %zext_ln65, i64 %zext_ln59'
ST_3 : Operation 413 [1/1] (2.09ns)   --->   "%mul_ln65_1 = mul i64 %zext_ln65, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 413 'mul' 'mul_ln65_1' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 414 '%mul_ln65_2 = mul i64 %zext_ln59_1, i64 %zext_ln59'
ST_3 : Operation 414 [1/1] (2.09ns)   --->   "%mul_ln65_2 = mul i64 %zext_ln59_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 414 'mul' 'mul_ln65_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 415 '%mul_ln65_3 = mul i64 %zext_ln63_1, i64 %zext_ln59'
ST_3 : Operation 415 [1/1] (2.09ns)   --->   "%mul_ln65_3 = mul i64 %zext_ln63_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 415 'mul' 'mul_ln65_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%select_ln65_9 = select i1 %icmp_ln59, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 416 'select' 'select_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 417 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%and_ln65_3 = and i64 %mul_ln65_1, i64 %select_ln65_9" [d2.cpp:65]   --->   Operation 417 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_4)   --->   "%select_ln65_10 = select i1 %and_ln59_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 418 'select' 'select_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 419 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_4 = and i64 %mul_ln65_2, i64 %select_ln65_10" [d2.cpp:65]   --->   Operation 419 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 420 [1/1] (0.37ns)   --->   "%and_ln65_5 = and i64 %mul_ln65_3, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 420 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 421 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i3 %sub_ln36_41" [d2.cpp:59]   --->   Operation 421 'sext' 'sext_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 422 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_4" [d2.cpp:59]   --->   Operation 422 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 423 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i32 %tmp_8" [d2.cpp:59]   --->   Operation 423 'zext' 'zext_ln59_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 424 [1/1] (0.28ns)   --->   "%and_ln59_2 = and i1 %icmp_ln59_1, i1 %cmp69" [d2.cpp:59]   --->   Operation 424 'and' 'and_ln59_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 425 [1/1] (0.00ns)   --->   "%zext_ln63_36 = zext i1 %and_ln59_2" [d2.cpp:63]   --->   Operation 425 'zext' 'zext_ln63_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 426 [1/1] (0.67ns)   --->   "%sub_ln63_13 = sub i3 %sub_ln63_12, i3 %zext_ln63_36" [d2.cpp:63]   --->   Operation 426 'sub' 'sub_ln63_13' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 427 [1/1] (0.00ns)   --->   "%sext_ln63_5 = sext i3 %sub_ln63_13" [d2.cpp:63]   --->   Operation 427 'sext' 'sext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 428 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_26" [d2.cpp:63]   --->   Operation 428 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 429 [1/1] (0.00ns)   --->   "%zext_ln63_2 = zext i32 %tmp_9" [d2.cpp:63]   --->   Operation 429 'zext' 'zext_ln63_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 430 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59" [d2.cpp:65]   --->   Operation 430 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 431 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i32 %tmp_s" [d2.cpp:65]   --->   Operation 431 'zext' 'zext_ln65_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 432 '%mul_ln65_4 = mul i64 %zext_ln65_1, i64 %zext_ln59'
ST_3 : Operation 432 [1/1] (2.09ns)   --->   "%mul_ln65_4 = mul i64 %zext_ln65_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 432 'mul' 'mul_ln65_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 433 '%mul_ln65_5 = mul i64 %zext_ln59_2, i64 %zext_ln59'
ST_3 : Operation 433 [1/1] (2.09ns)   --->   "%mul_ln65_5 = mul i64 %zext_ln59_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 433 'mul' 'mul_ln65_5' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 434 '%mul_ln65_6 = mul i64 %zext_ln63_2, i64 %zext_ln59'
ST_3 : Operation 434 [1/1] (2.09ns)   --->   "%mul_ln65_6 = mul i64 %zext_ln63_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 434 'mul' 'mul_ln65_6' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_6)   --->   "%select_ln65_11 = select i1 %icmp_ln59_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 435 'select' 'select_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 436 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_6 = and i64 %mul_ln65_4, i64 %select_ln65_11" [d2.cpp:65]   --->   Operation 436 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_7)   --->   "%select_ln65_12 = select i1 %and_ln59_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 437 'select' 'select_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 438 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_7 = and i64 %mul_ln65_5, i64 %select_ln65_12" [d2.cpp:65]   --->   Operation 438 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 439 [1/1] (0.37ns)   --->   "%and_ln65_8 = and i64 %mul_ln65_6, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 439 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 440 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_5" [d2.cpp:59]   --->   Operation 440 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 441 [1/1] (0.00ns)   --->   "%zext_ln59_3 = zext i32 %tmp_5" [d2.cpp:59]   --->   Operation 441 'zext' 'zext_ln59_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 442 [1/1] (0.28ns)   --->   "%and_ln59_3 = and i1 %icmp_ln59_2, i1 %cmp69" [d2.cpp:59]   --->   Operation 442 'and' 'and_ln59_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 443 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i1 %and_ln59_3" [d2.cpp:60]   --->   Operation 443 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 444 [1/1] (0.67ns)   --->   "%sub_ln63 = sub i4 %sext_ln63_5, i4 %zext_ln60" [d2.cpp:63]   --->   Operation 444 'sub' 'sub_ln63' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 445 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_27" [d2.cpp:63]   --->   Operation 445 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 446 [1/1] (0.00ns)   --->   "%zext_ln63_3 = zext i32 %tmp_7" [d2.cpp:63]   --->   Operation 446 'zext' 'zext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 447 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_1" [d2.cpp:65]   --->   Operation 447 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 448 [1/1] (0.00ns)   --->   "%zext_ln65_2 = zext i32 %tmp_10" [d2.cpp:65]   --->   Operation 448 'zext' 'zext_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 449 '%mul_ln65_7 = mul i64 %zext_ln65_2, i64 %zext_ln59'
ST_3 : Operation 449 [1/1] (2.09ns)   --->   "%mul_ln65_7 = mul i64 %zext_ln65_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 449 'mul' 'mul_ln65_7' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 450 '%mul_ln65_8 = mul i64 %zext_ln59_3, i64 %zext_ln59'
ST_3 : Operation 450 [1/1] (2.09ns)   --->   "%mul_ln65_8 = mul i64 %zext_ln59_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 450 'mul' 'mul_ln65_8' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 451 '%mul_ln65_9 = mul i64 %zext_ln63_3, i64 %zext_ln59'
ST_3 : Operation 451 [1/1] (2.09ns)   --->   "%mul_ln65_9 = mul i64 %zext_ln63_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 451 'mul' 'mul_ln65_9' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 452 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_27)   --->   "%select_ln65_13 = select i1 %icmp_ln59_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 452 'select' 'select_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_27)   --->   "%and_ln65_9 = and i64 %mul_ln65_7, i64 %select_ln65_13" [d2.cpp:65]   --->   Operation 453 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%select_ln65_14 = select i1 %and_ln59_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 454 'select' 'select_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 455 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_10 = and i64 %mul_ln65_8, i64 %select_ln65_14" [d2.cpp:65]   --->   Operation 455 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_27)   --->   "%and_ln65_11 = and i64 %mul_ln65_9, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 456 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 457 [1/1] (0.28ns)   --->   "%and_ln59_4 = and i1 %icmp_ln59_3, i1 %cmp69" [d2.cpp:59]   --->   Operation 457 'and' 'and_ln59_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 458 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i1 %and_ln59_4" [d2.cpp:60]   --->   Operation 458 'zext' 'zext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 459 [1/1] (0.79ns)   --->   "%sub_ln63_1 = sub i4 %sub_ln63, i4 %zext_ln60_1" [d2.cpp:63]   --->   Operation 459 'sub' 'sub_ln63_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 460 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65" [d2.cpp:63]   --->   Operation 460 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 461 [1/1] (0.00ns)   --->   "%zext_ln63_4 = zext i32 %tmp_12" [d2.cpp:63]   --->   Operation 461 'zext' 'zext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 462 [1/1] (0.79ns)   --->   "%sub_ln65_1 = sub i4 %sub_ln65, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 462 'sub' 'sub_ln65_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 463 [1/1] (0.48ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_16" [d2.cpp:65]   --->   Operation 463 'mux' 'tmp_13' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 464 [1/1] (0.00ns)   --->   "%zext_ln65_3 = zext i32 %tmp_13" [d2.cpp:65]   --->   Operation 464 'zext' 'zext_ln65_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 465 '%mul_ln65_10 = mul i64 %zext_ln65_3, i64 %zext_ln59'
ST_3 : Operation 465 [1/1] (2.09ns)   --->   "%mul_ln65_10 = mul i64 %zext_ln65_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 465 'mul' 'mul_ln65_10' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 466 '%mul_ln65_12 = mul i64 %zext_ln63_4, i64 %zext_ln59'
ST_3 : Operation 466 [1/1] (2.09ns)   --->   "%mul_ln65_12 = mul i64 %zext_ln63_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 466 'mul' 'mul_ln65_12' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 467 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%select_ln65_15 = select i1 %icmp_ln59_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 467 'select' 'select_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%and_ln65_12 = and i64 %mul_ln65_10, i64 %select_ln65_15" [d2.cpp:65]   --->   Operation 468 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 469 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%and_ln65_14 = and i64 %mul_ln65_12, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 469 'and' 'and_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 470 [1/1] (0.28ns)   --->   "%and_ln59_5 = and i1 %icmp_ln59_4, i1 %cmp69" [d2.cpp:59]   --->   Operation 470 'and' 'and_ln59_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 471 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_1" [d2.cpp:63]   --->   Operation 471 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 472 [1/1] (0.00ns)   --->   "%zext_ln63_5 = zext i32 %tmp_15" [d2.cpp:63]   --->   Operation 472 'zext' 'zext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 473 [1/1] (0.79ns)   --->   "%sub_ln65_2 = sub i4 %sub_ln65_1, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 473 'sub' 'sub_ln65_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 474 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_17" [d2.cpp:65]   --->   Operation 474 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 475 [1/1] (0.00ns)   --->   "%zext_ln65_4 = zext i32 %tmp_16" [d2.cpp:65]   --->   Operation 475 'zext' 'zext_ln65_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 476 '%mul_ln65_13 = mul i64 %zext_ln65_4, i64 %zext_ln59'
ST_3 : Operation 476 [1/1] (2.09ns)   --->   "%mul_ln65_13 = mul i64 %zext_ln65_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 476 'mul' 'mul_ln65_13' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 477 '%mul_ln65_15 = mul i64 %zext_ln63_5, i64 %zext_ln59'
ST_3 : Operation 477 [1/1] (2.09ns)   --->   "%mul_ln65_15 = mul i64 %zext_ln63_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 477 'mul' 'mul_ln65_15' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_16)   --->   "%select_ln65_17 = select i1 %icmp_ln59_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 478 'select' 'select_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_16)   --->   "%and_ln65_15 = and i64 %mul_ln65_13, i64 %select_ln65_17" [d2.cpp:65]   --->   Operation 479 'and' 'and_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 480 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_16)   --->   "%and_ln65_17 = and i64 %mul_ln65_15, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 480 'and' 'and_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 481 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_2" [d2.cpp:63]   --->   Operation 481 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 482 [1/1] (0.00ns)   --->   "%zext_ln63_6 = zext i32 %tmp_18" [d2.cpp:63]   --->   Operation 482 'zext' 'zext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 483 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_18" [d2.cpp:65]   --->   Operation 483 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 484 [1/1] (0.00ns)   --->   "%zext_ln65_5 = zext i32 %tmp_19" [d2.cpp:65]   --->   Operation 484 'zext' 'zext_ln65_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 485 '%mul_ln65_16 = mul i64 %zext_ln65_5, i64 %zext_ln59'
ST_3 : Operation 485 [1/1] (2.09ns)   --->   "%mul_ln65_16 = mul i64 %zext_ln65_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 485 'mul' 'mul_ln65_16' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 486 '%mul_ln65_18 = mul i64 %zext_ln63_6, i64 %zext_ln59'
ST_3 : Operation 486 [1/1] (2.09ns)   --->   "%mul_ln65_18 = mul i64 %zext_ln63_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 486 'mul' 'mul_ln65_18' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_31)   --->   "%select_ln65_19 = select i1 %icmp_ln59_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 487 'select' 'select_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_31)   --->   "%and_ln65_18 = and i64 %mul_ln65_16, i64 %select_ln65_19" [d2.cpp:65]   --->   Operation 488 'and' 'and_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 489 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_31)   --->   "%and_ln65_20 = and i64 %mul_ln65_18, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 489 'and' 'and_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 490 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_19" [d2.cpp:65]   --->   Operation 490 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 491 [1/1] (0.00ns)   --->   "%zext_ln65_6 = zext i32 %tmp_20" [d2.cpp:65]   --->   Operation 491 'zext' 'zext_ln65_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 492 '%mul_ln65_19 = mul i64 %zext_ln65_6, i64 %zext_ln59'
ST_3 : Operation 492 [1/1] (2.09ns)   --->   "%mul_ln65_19 = mul i64 %zext_ln65_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 492 'mul' 'mul_ln65_19' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 493 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%select_ln65_21 = select i1 %icmp_ln65, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 493 'select' 'select_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 494 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%and_ln65_21 = and i64 %mul_ln65_19, i64 %select_ln65_21" [d2.cpp:65]   --->   Operation 494 'and' 'and_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 495 [1/1] (0.00ns)   --->   "%zext_ln66_4 = zext i1 %icmp_ln65" [d2.cpp:66]   --->   Operation 495 'zext' 'zext_ln66_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 496 [1/1] (0.79ns)   --->   "%sub_ln36 = sub i4 %sub_ln36_19, i4 %zext_ln66_4" [d2.cpp:36]   --->   Operation 496 'sub' 'sub_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 497 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36" [d2.cpp:65]   --->   Operation 497 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 498 [1/1] (0.00ns)   --->   "%zext_ln65_7 = zext i32 %tmp_21" [d2.cpp:65]   --->   Operation 498 'zext' 'zext_ln65_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 499 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_22)   --->   "%select_ln65_23 = select i1 %and_ln61, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 499 'select' 'select_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 500 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_22 = and i64 %mul_ln59, i64 %select_ln65_23" [d2.cpp:65]   --->   Operation 500 'and' 'and_ln65_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 501 '%mul_ln65_20 = mul i64 %zext_ln65_7, i64 %zext_ln59'
ST_3 : Operation 501 [1/1] (2.09ns)   --->   "%mul_ln65_20 = mul i64 %zext_ln65_7, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 501 'mul' 'mul_ln65_20' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 502 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_23)   --->   "%select_ln65_24 = select i1 %icmp_ln65_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 502 'select' 'select_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 503 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_23 = and i64 %mul_ln65_20, i64 %select_ln65_24" [d2.cpp:65]   --->   Operation 503 'and' 'and_ln65_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 504 [1/1] (0.00ns)   --->   "%zext_ln66_5 = zext i1 %icmp_ln65_1" [d2.cpp:66]   --->   Operation 504 'zext' 'zext_ln66_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 505 [1/1] (0.79ns)   --->   "%sub_ln36_1 = sub i4 %sub_ln36, i4 %zext_ln66_5" [d2.cpp:36]   --->   Operation 505 'sub' 'sub_ln36_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 506 [1/1] (0.44ns)   --->   "%select_ln61 = select i1 %and_ln61, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 506 'select' 'select_ln61' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 507 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i32 %select_ln61" [d2.cpp:61]   --->   Operation 507 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 508 [1/1] (0.00ns)   --->   "%sext_ln65 = sext i3 %sub_ln65_28" [d2.cpp:65]   --->   Operation 508 'sext' 'sext_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 509 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_1" [d2.cpp:65]   --->   Operation 509 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 510 [1/1] (0.00ns)   --->   "%zext_ln65_8 = zext i32 %tmp_22" [d2.cpp:65]   --->   Operation 510 'zext' 'zext_ln65_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 511 '%mul_ln65_21 = mul i64 %zext_ln61, i64 %zext_ln59'
ST_3 : Operation 511 [1/1] (2.09ns)   --->   "%mul_ln65_21 = mul i64 %zext_ln61, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 511 'mul' 'mul_ln65_21' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 512 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_24)   --->   "%select_ln65_25 = select i1 %and_ln61_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 512 'select' 'select_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 513 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_24 = and i64 %mul_ln65_21, i64 %select_ln65_25" [d2.cpp:65]   --->   Operation 513 'and' 'and_ln65_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 514 '%mul_ln65_22 = mul i64 %zext_ln65_8, i64 %zext_ln59'
ST_3 : Operation 514 [1/1] (2.09ns)   --->   "%mul_ln65_22 = mul i64 %zext_ln65_8, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 514 'mul' 'mul_ln65_22' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 515 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_25)   --->   "%select_ln65_26 = select i1 %icmp_ln65_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 515 'select' 'select_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 516 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_25 = and i64 %mul_ln65_22, i64 %select_ln65_26" [d2.cpp:65]   --->   Operation 516 'and' 'and_ln65_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 517 [1/1] (0.00ns)   --->   "%zext_ln66_6 = zext i1 %icmp_ln65_2" [d2.cpp:66]   --->   Operation 517 'zext' 'zext_ln66_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 518 [1/1] (0.79ns)   --->   "%sub_ln36_2 = sub i4 %sub_ln36_1, i4 %zext_ln66_6" [d2.cpp:36]   --->   Operation 518 'sub' 'sub_ln36_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 519 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65" [d2.cpp:61]   --->   Operation 519 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 520 [1/1] (0.00ns)   --->   "%zext_ln61_1 = zext i32 %tmp_23" [d2.cpp:61]   --->   Operation 520 'zext' 'zext_ln61_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 521 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 521 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 522 [1/1] (0.00ns)   --->   "%zext_ln65_9 = zext i32 %tmp_24" [d2.cpp:65]   --->   Operation 522 'zext' 'zext_ln65_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 523 '%mul_ln65_23 = mul i64 %zext_ln61_1, i64 %zext_ln59'
ST_3 : Operation 523 [1/1] (2.09ns)   --->   "%mul_ln65_23 = mul i64 %zext_ln61_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 523 'mul' 'mul_ln65_23' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 524 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_26)   --->   "%select_ln65_27 = select i1 %and_ln61_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 524 'select' 'select_ln65_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 525 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_26 = and i64 %mul_ln65_23, i64 %select_ln65_27" [d2.cpp:65]   --->   Operation 525 'and' 'and_ln65_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 526 '%mul_ln65_24 = mul i64 %zext_ln65_9, i64 %zext_ln59'
ST_3 : Operation 526 [1/1] (2.09ns)   --->   "%mul_ln65_24 = mul i64 %zext_ln65_9, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 526 'mul' 'mul_ln65_24' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 527 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_1" [d2.cpp:61]   --->   Operation 527 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 528 [1/1] (0.00ns)   --->   "%zext_ln61_2 = zext i32 %tmp_25" [d2.cpp:61]   --->   Operation 528 'zext' 'zext_ln61_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 529 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 529 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 530 [1/1] (0.00ns)   --->   "%zext_ln65_10 = zext i32 %tmp_26" [d2.cpp:65]   --->   Operation 530 'zext' 'zext_ln65_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 531 '%mul_ln65_25 = mul i64 %zext_ln61_2, i64 %zext_ln59'
ST_3 : Operation 531 [1/1] (2.09ns)   --->   "%mul_ln65_25 = mul i64 %zext_ln61_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 531 'mul' 'mul_ln65_25' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 532 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_27)   --->   "%select_ln65_28 = select i1 %and_ln61_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 532 'select' 'select_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 533 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_27 = and i64 %mul_ln65_25, i64 %select_ln65_28" [d2.cpp:65]   --->   Operation 533 'and' 'and_ln65_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 534 '%mul_ln65_26 = mul i64 %zext_ln65_10, i64 %zext_ln59'
ST_3 : Operation 534 [1/1] (2.09ns)   --->   "%mul_ln65_26 = mul i64 %zext_ln65_10, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 534 'mul' 'mul_ln65_26' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 535 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_3" [d2.cpp:61]   --->   Operation 535 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 536 [1/1] (0.00ns)   --->   "%zext_ln61_3 = zext i32 %tmp_27" [d2.cpp:61]   --->   Operation 536 'zext' 'zext_ln61_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 537 [1/1] (0.28ns)   --->   "%and_ln61_4 = and i1 %icmp_ln61_4, i1 %cmp69" [d2.cpp:61]   --->   Operation 537 'and' 'and_ln61_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 538 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i1 %and_ln61_4" [d2.cpp:62]   --->   Operation 538 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 539 [1/1] (0.79ns)   --->   "%sub_ln65_4 = sub i4 %sub_ln65_3, i4 %zext_ln62_1" [d2.cpp:65]   --->   Operation 539 'sub' 'sub_ln65_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 540 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 540 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 541 [1/1] (0.00ns)   --->   "%zext_ln65_11 = zext i32 %tmp_28" [d2.cpp:65]   --->   Operation 541 'zext' 'zext_ln65_11' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 542 '%mul_ln65_27 = mul i64 %zext_ln61_3, i64 %zext_ln59'
ST_3 : Operation 542 [1/1] (2.09ns)   --->   "%mul_ln65_27 = mul i64 %zext_ln61_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 542 'mul' 'mul_ln65_27' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 543 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_28)   --->   "%select_ln65_29 = select i1 %and_ln61_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 543 'select' 'select_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 544 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_28 = and i64 %mul_ln65_27, i64 %select_ln65_29" [d2.cpp:65]   --->   Operation 544 'and' 'and_ln65_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 545 '%mul_ln65_28 = mul i64 %zext_ln65_11, i64 %zext_ln59'
ST_3 : Operation 545 [1/1] (2.09ns)   --->   "%mul_ln65_28 = mul i64 %zext_ln65_11, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 545 'mul' 'mul_ln65_28' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 546 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_4" [d2.cpp:61]   --->   Operation 546 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 547 [1/1] (0.00ns)   --->   "%zext_ln61_4 = zext i32 %tmp_29" [d2.cpp:61]   --->   Operation 547 'zext' 'zext_ln61_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 548 [1/1] (0.28ns)   --->   "%and_ln61_5 = and i1 %icmp_ln61_5, i1 %cmp69" [d2.cpp:61]   --->   Operation 548 'and' 'and_ln61_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 549 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i1 %and_ln61_5" [d2.cpp:62]   --->   Operation 549 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 550 [1/1] (0.79ns)   --->   "%sub_ln65_5 = sub i4 %sub_ln65_4, i4 %zext_ln62_2" [d2.cpp:65]   --->   Operation 550 'sub' 'sub_ln65_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 551 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 551 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 552 [1/1] (0.00ns)   --->   "%zext_ln65_12 = zext i32 %tmp_30" [d2.cpp:65]   --->   Operation 552 'zext' 'zext_ln65_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 553 '%mul_ln65_29 = mul i64 %zext_ln61_4, i64 %zext_ln59'
ST_3 : Operation 553 [1/1] (2.09ns)   --->   "%mul_ln65_29 = mul i64 %zext_ln61_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 553 'mul' 'mul_ln65_29' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 554 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_29)   --->   "%select_ln65_30 = select i1 %and_ln61_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 554 'select' 'select_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 555 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_29 = and i64 %mul_ln65_29, i64 %select_ln65_30" [d2.cpp:65]   --->   Operation 555 'and' 'and_ln65_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 556 '%mul_ln65_30 = mul i64 %zext_ln65_12, i64 %zext_ln59'
ST_3 : Operation 556 [1/1] (2.09ns)   --->   "%mul_ln65_30 = mul i64 %zext_ln65_12, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 556 'mul' 'mul_ln65_30' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 557 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_5" [d2.cpp:61]   --->   Operation 557 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 558 [1/1] (0.00ns)   --->   "%zext_ln61_5 = zext i32 %tmp_31" [d2.cpp:61]   --->   Operation 558 'zext' 'zext_ln61_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 559 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_30)   --->   "%and_ln61_6 = and i1 %icmp_ln61_6, i1 %cmp69" [d2.cpp:61]   --->   Operation 559 'and' 'and_ln61_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 560 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 560 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 561 [1/1] (0.00ns)   --->   "%zext_ln65_13 = zext i32 %tmp_32" [d2.cpp:65]   --->   Operation 561 'zext' 'zext_ln65_13' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 562 '%mul_ln65_31 = mul i64 %zext_ln61_5, i64 %zext_ln59'
ST_3 : Operation 562 [1/1] (2.09ns)   --->   "%mul_ln65_31 = mul i64 %zext_ln61_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 562 'mul' 'mul_ln65_31' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_30)   --->   "%select_ln65_31 = select i1 %and_ln61_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 563 'select' 'select_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 564 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_30 = and i64 %mul_ln65_31, i64 %select_ln65_31" [d2.cpp:65]   --->   Operation 564 'and' 'and_ln65_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 565 '%mul_ln65_32 = mul i64 %zext_ln65_13, i64 %zext_ln59'
ST_3 : Operation 565 [1/1] (2.09ns)   --->   "%mul_ln65_32 = mul i64 %zext_ln65_13, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 565 'mul' 'mul_ln65_32' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 566 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 566 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 567 [1/1] (0.00ns)   --->   "%zext_ln59_7 = zext i32 %tmp_33" [d2.cpp:59]   --->   Operation 567 'zext' 'zext_ln59_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 568 [1/1] (0.48ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_1" [d2.cpp:51]   --->   Operation 568 'mux' 'tmp_37' <Predicate = (tmp_71)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 569 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i32 %tmp_37" [d2.cpp:51]   --->   Operation 569 'zext' 'zext_ln51_1' <Predicate = (tmp_71)> <Delay = 0.00>
ST_3 : Operation 570 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53" [d2.cpp:51]   --->   Operation 570 'mux' 'tmp_38' <Predicate = (tmp_71)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 571 [1/1] (0.00ns)   --->   "%tmp_38_cast = zext i32 %tmp_38" [d2.cpp:51]   --->   Operation 571 'zext' 'tmp_38_cast' <Predicate = (tmp_71)> <Delay = 0.00>
ST_3 : Operation 572 [1/1] (1.01ns)   --->   "%tmp2 = add i33 %tmp_38_cast, i33 %zext_ln51_1" [d2.cpp:51]   --->   Operation 572 'add' 'tmp2' <Predicate = (tmp_71)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 573 [1/1] (0.00ns)   --->   "%tmp2_cast = zext i33 %tmp2" [d2.cpp:51]   --->   Operation 573 'zext' 'tmp2_cast' <Predicate = (tmp_71)> <Delay = 0.00>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 574 '%tmp3 = mul i64 %tmp2_cast, i64 %zext_ln59_7'
ST_3 : Operation 574 [1/1] (2.84ns)   --->   "%tmp3 = mul i64 %tmp2_cast, i64 %zext_ln59_7" [d2.cpp:51]   --->   Operation 574 'mul' 'tmp3' <Predicate = (tmp_71)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 575 [1/1] (0.73ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %k_load_35" [d2.cpp:63]   --->   Operation 575 'mux' 'tmp_39' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 576 [1/1] (0.00ns)   --->   "%zext_ln63_7 = zext i32 %tmp_39" [d2.cpp:63]   --->   Operation 576 'zext' 'zext_ln63_7' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 577 '%mul_ln63 = mul i64 %zext_ln63_7, i64 %zext_ln59_7'
ST_3 : Operation 577 [1/1] (2.09ns)   --->   "%mul_ln63 = mul i64 %zext_ln63_7, i64 %zext_ln59_7" [d2.cpp:63]   --->   Operation 577 'mul' 'mul_ln63' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 578 [1/1] (0.17ns)   --->   "%select_ln63_1 = select i1 %cmp138_1, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 578 'select' 'select_ln63_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 579 [1/1] (0.37ns)   --->   "%and_ln63 = and i64 %mul_ln63, i64 %select_ln63_1" [d2.cpp:63]   --->   Operation 579 'and' 'and_ln63' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 580 '%mul_ln59_1 = mul i64 %zext_ln59_7, i64 %conv60_cast'
ST_3 : Operation 580 [1/1] (2.09ns)   --->   "%mul_ln59_1 = mul i64 %zext_ln59_7, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 580 'mul' 'mul_ln59_1' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 581 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36" [d2.cpp:63]   --->   Operation 581 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 582 [1/1] (0.00ns)   --->   "%zext_ln63_8 = zext i32 %tmp_40" [d2.cpp:63]   --->   Operation 582 'zext' 'zext_ln63_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 583 '%mul_ln65_33 = mul i64 %zext_ln63_8, i64 %zext_ln59_7'
ST_3 : Operation 583 [1/1] (2.09ns)   --->   "%mul_ln65_33 = mul i64 %zext_ln63_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 583 'mul' 'mul_ln65_33' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 584 [1/1] (0.37ns)   --->   "%and_ln65_31 = and i64 %mul_ln65_33, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 584 'and' 'and_ln65_31' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 585 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%select_ln65_32 = select i1 %icmp_ln59_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 585 'select' 'select_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 586 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%and_ln65_32 = and i64 %mul_ln59_1, i64 %select_ln65_32" [d2.cpp:65]   --->   Operation 586 'and' 'and_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 587 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_33)   --->   "%select_ln65_33 = select i1 %and_ln59_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 587 'select' 'select_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 588 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_33 = and i64 %mul_ln59_1, i64 %select_ln65_33" [d2.cpp:65]   --->   Operation 588 'and' 'and_ln65_33' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 589 [1/1] (0.44ns)   --->   "%select_ln59_1 = select i1 %and_ln59_7, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 589 'select' 'select_ln59_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 590 [1/1] (0.00ns)   --->   "%zext_ln59_8 = zext i32 %select_ln59_1" [d2.cpp:59]   --->   Operation 590 'zext' 'zext_ln59_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 591 [1/1] (0.00ns)   --->   "%sext_ln63 = sext i3 %sub_ln63_14" [d2.cpp:63]   --->   Operation 591 'sext' 'sext_ln63' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 592 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_30" [d2.cpp:63]   --->   Operation 592 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 593 [1/1] (0.00ns)   --->   "%zext_ln63_9 = zext i32 %tmp_41" [d2.cpp:63]   --->   Operation 593 'zext' 'zext_ln63_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 594 [1/1] (0.44ns)   --->   "%select_ln65_3 = select i1 %icmp_ln59_6, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 594 'select' 'select_ln65_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 595 [1/1] (0.00ns)   --->   "%zext_ln65_14 = zext i32 %select_ln65_3" [d2.cpp:65]   --->   Operation 595 'zext' 'zext_ln65_14' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 596 '%mul_ln65_34 = mul i64 %zext_ln65_14, i64 %zext_ln59_7'
ST_3 : Operation 596 [1/1] (2.09ns)   --->   "%mul_ln65_34 = mul i64 %zext_ln65_14, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 596 'mul' 'mul_ln65_34' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 597 '%mul_ln65_35 = mul i64 %zext_ln59_8, i64 %zext_ln59_7'
ST_3 : Operation 597 [1/1] (2.09ns)   --->   "%mul_ln65_35 = mul i64 %zext_ln59_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 597 'mul' 'mul_ln65_35' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 598 '%mul_ln65_36 = mul i64 %zext_ln63_9, i64 %zext_ln59_7'
ST_3 : Operation 598 [1/1] (2.09ns)   --->   "%mul_ln65_36 = mul i64 %zext_ln63_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 598 'mul' 'mul_ln65_36' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 599 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_34)   --->   "%select_ln65_34 = select i1 %icmp_ln59_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 599 'select' 'select_ln65_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 600 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_34 = and i64 %mul_ln65_34, i64 %select_ln65_34" [d2.cpp:65]   --->   Operation 600 'and' 'and_ln65_34' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 601 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_35)   --->   "%select_ln65_35 = select i1 %and_ln59_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 601 'select' 'select_ln65_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 602 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_35 = and i64 %mul_ln65_35, i64 %select_ln65_35" [d2.cpp:65]   --->   Operation 602 'and' 'and_ln65_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 603 [1/1] (0.37ns)   --->   "%and_ln65_36 = and i64 %mul_ln65_36, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 603 'and' 'and_ln65_36' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 604 [1/1] (0.00ns)   --->   "%sext_ln59_2 = sext i3 %sub_ln36_43" [d2.cpp:59]   --->   Operation 604 'sext' 'sext_ln59_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 605 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63" [d2.cpp:59]   --->   Operation 605 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 606 [1/1] (0.00ns)   --->   "%zext_ln59_9 = zext i32 %tmp_42" [d2.cpp:59]   --->   Operation 606 'zext' 'zext_ln59_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 607 [1/1] (0.00ns)   --->   "%zext_ln63_38 = zext i1 %and_ln59_9" [d2.cpp:63]   --->   Operation 607 'zext' 'zext_ln63_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 608 [1/1] (0.67ns)   --->   "%sub_ln63_3 = sub i3 %sub_ln63_14, i3 %zext_ln63_38" [d2.cpp:63]   --->   Operation 608 'sub' 'sub_ln63_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 609 [1/1] (0.00ns)   --->   "%sext_ln63_6 = sext i3 %sub_ln63_3" [d2.cpp:63]   --->   Operation 609 'sext' 'sext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 610 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_31" [d2.cpp:63]   --->   Operation 610 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 611 [1/1] (0.00ns)   --->   "%zext_ln63_10 = zext i32 %tmp_43" [d2.cpp:63]   --->   Operation 611 'zext' 'zext_ln63_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 612 [1/1] (0.48ns)   --->   "%tmp_44 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_2" [d2.cpp:65]   --->   Operation 612 'mux' 'tmp_44' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 613 [1/1] (0.00ns)   --->   "%zext_ln65_15 = zext i32 %tmp_44" [d2.cpp:65]   --->   Operation 613 'zext' 'zext_ln65_15' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 614 '%mul_ln65_37 = mul i64 %zext_ln65_15, i64 %zext_ln59_7'
ST_3 : Operation 614 [1/1] (2.09ns)   --->   "%mul_ln65_37 = mul i64 %zext_ln65_15, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 614 'mul' 'mul_ln65_37' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 615 '%mul_ln65_38 = mul i64 %zext_ln59_9, i64 %zext_ln59_7'
ST_3 : Operation 615 [1/1] (2.09ns)   --->   "%mul_ln65_38 = mul i64 %zext_ln59_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 615 'mul' 'mul_ln65_38' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 616 '%mul_ln65_39 = mul i64 %zext_ln63_10, i64 %zext_ln59_7'
ST_3 : Operation 616 [1/1] (2.09ns)   --->   "%mul_ln65_39 = mul i64 %zext_ln63_10, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 616 'mul' 'mul_ln65_39' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 617 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_37)   --->   "%select_ln65_36 = select i1 %icmp_ln59_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 617 'select' 'select_ln65_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 618 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_37 = and i64 %mul_ln65_37, i64 %select_ln65_36" [d2.cpp:65]   --->   Operation 618 'and' 'and_ln65_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 619 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_38)   --->   "%select_ln65_37 = select i1 %and_ln59_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 619 'select' 'select_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 620 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_38 = and i64 %mul_ln65_38, i64 %select_ln65_37" [d2.cpp:65]   --->   Operation 620 'and' 'and_ln65_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 621 [1/1] (0.37ns)   --->   "%and_ln65_39 = and i64 %mul_ln65_39, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 621 'and' 'and_ln65_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 622 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_6" [d2.cpp:59]   --->   Operation 622 'mux' 'tmp_45' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 623 [1/1] (0.00ns)   --->   "%zext_ln59_10 = zext i32 %tmp_45" [d2.cpp:59]   --->   Operation 623 'zext' 'zext_ln59_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 624 [1/1] (0.28ns)   --->   "%and_ln59_10 = and i1 %icmp_ln59_9, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 624 'and' 'and_ln59_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 625 [1/1] (0.00ns)   --->   "%zext_ln60_3 = zext i1 %and_ln59_10" [d2.cpp:60]   --->   Operation 625 'zext' 'zext_ln60_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 626 [1/1] (0.67ns)   --->   "%sub_ln63_4 = sub i4 %sext_ln63_6, i4 %zext_ln60_3" [d2.cpp:63]   --->   Operation 626 'sub' 'sub_ln63_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 627 [1/1] (0.48ns)   --->   "%tmp_46 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_6" [d2.cpp:63]   --->   Operation 627 'mux' 'tmp_46' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 628 [1/1] (0.00ns)   --->   "%zext_ln63_11 = zext i32 %tmp_46" [d2.cpp:63]   --->   Operation 628 'zext' 'zext_ln63_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 629 [1/1] (0.79ns)   --->   "%sub_ln65_7 = sub i4 %sub_ln65_6, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 629 'sub' 'sub_ln65_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 630 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_3" [d2.cpp:65]   --->   Operation 630 'mux' 'tmp_47' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 631 [1/1] (0.00ns)   --->   "%zext_ln65_16 = zext i32 %tmp_47" [d2.cpp:65]   --->   Operation 631 'zext' 'zext_ln65_16' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 632 '%mul_ln65_40 = mul i64 %zext_ln65_16, i64 %zext_ln59_7'
ST_3 : Operation 632 [1/1] (2.09ns)   --->   "%mul_ln65_40 = mul i64 %zext_ln65_16, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 632 'mul' 'mul_ln65_40' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 633 '%mul_ln65_41 = mul i64 %zext_ln59_10, i64 %zext_ln59_7'
ST_3 : Operation 633 [1/1] (2.09ns)   --->   "%mul_ln65_41 = mul i64 %zext_ln59_10, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 633 'mul' 'mul_ln65_41' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 634 '%mul_ln65_42 = mul i64 %zext_ln63_11, i64 %zext_ln59_7'
ST_3 : Operation 634 [1/1] (2.09ns)   --->   "%mul_ln65_42 = mul i64 %zext_ln63_11, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 634 'mul' 'mul_ln65_42' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 635 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_4)   --->   "%select_ln65_38 = select i1 %icmp_ln59_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 635 'select' 'select_ln65_38' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 636 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_4)   --->   "%and_ln65_40 = and i64 %mul_ln65_40, i64 %select_ln65_38" [d2.cpp:65]   --->   Operation 636 'and' 'and_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_41)   --->   "%select_ln65_39 = select i1 %and_ln59_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 637 'select' 'select_ln65_39' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 638 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_41 = and i64 %mul_ln65_41, i64 %select_ln65_39" [d2.cpp:65]   --->   Operation 638 'and' 'and_ln65_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 639 [1/1] (0.37ns)   --->   "%and_ln65_42 = and i64 %mul_ln65_42, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 639 'and' 'and_ln65_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 640 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_4" [d2.cpp:59]   --->   Operation 640 'mux' 'tmp_48' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 641 [1/1] (0.00ns)   --->   "%zext_ln59_11 = zext i32 %tmp_48" [d2.cpp:59]   --->   Operation 641 'zext' 'zext_ln59_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 642 [1/1] (0.28ns)   --->   "%and_ln59_11 = and i1 %icmp_ln59_10, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 642 'and' 'and_ln59_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 643 [1/1] (0.00ns)   --->   "%zext_ln60_4 = zext i1 %and_ln59_11" [d2.cpp:60]   --->   Operation 643 'zext' 'zext_ln60_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 644 [1/1] (0.79ns)   --->   "%sub_ln63_5 = sub i4 %sub_ln63_4, i4 %zext_ln60_4" [d2.cpp:63]   --->   Operation 644 'sub' 'sub_ln63_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 645 [1/1] (0.48ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_7" [d2.cpp:63]   --->   Operation 645 'mux' 'tmp_49' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 646 [1/1] (0.00ns)   --->   "%zext_ln63_12 = zext i32 %tmp_49" [d2.cpp:63]   --->   Operation 646 'zext' 'zext_ln63_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 647 [1/1] (0.79ns)   --->   "%sub_ln65_8 = sub i4 %sub_ln65_7, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 647 'sub' 'sub_ln65_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 648 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_20" [d2.cpp:65]   --->   Operation 648 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 649 [1/1] (0.00ns)   --->   "%zext_ln65_17 = zext i32 %tmp_50" [d2.cpp:65]   --->   Operation 649 'zext' 'zext_ln65_17' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 650 '%mul_ln65_43 = mul i64 %zext_ln65_17, i64 %zext_ln59_7'
ST_3 : Operation 650 [1/1] (2.09ns)   --->   "%mul_ln65_43 = mul i64 %zext_ln65_17, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 650 'mul' 'mul_ln65_43' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 651 '%mul_ln65_44 = mul i64 %zext_ln59_11, i64 %zext_ln59_7'
ST_3 : Operation 651 [1/1] (2.09ns)   --->   "%mul_ln65_44 = mul i64 %zext_ln59_11, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 651 'mul' 'mul_ln65_44' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 652 '%mul_ln65_45 = mul i64 %zext_ln63_12, i64 %zext_ln59_7'
ST_3 : Operation 652 [1/1] (2.09ns)   --->   "%mul_ln65_45 = mul i64 %zext_ln63_12, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 652 'mul' 'mul_ln65_45' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_19)   --->   "%select_ln65_40 = select i1 %icmp_ln59_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 653 'select' 'select_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 654 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_19)   --->   "%and_ln65_43 = and i64 %mul_ln65_43, i64 %select_ln65_40" [d2.cpp:65]   --->   Operation 654 'and' 'and_ln65_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 655 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_44)   --->   "%select_ln65_41 = select i1 %and_ln59_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 655 'select' 'select_ln65_41' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 656 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_44 = and i64 %mul_ln65_44, i64 %select_ln65_41" [d2.cpp:65]   --->   Operation 656 'and' 'and_ln65_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 657 [1/1] (0.37ns)   --->   "%and_ln65_45 = and i64 %mul_ln65_45, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 657 'and' 'and_ln65_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 658 [1/1] (0.48ns)   --->   "%tmp_51 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_5" [d2.cpp:59]   --->   Operation 658 'mux' 'tmp_51' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 659 [1/1] (0.00ns)   --->   "%zext_ln59_12 = zext i32 %tmp_51" [d2.cpp:59]   --->   Operation 659 'zext' 'zext_ln59_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 660 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_47)   --->   "%and_ln59_12 = and i1 %icmp_ln59_11, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 660 'and' 'and_ln59_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 661 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_8" [d2.cpp:63]   --->   Operation 661 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 662 [1/1] (0.00ns)   --->   "%zext_ln63_13 = zext i32 %tmp_52" [d2.cpp:63]   --->   Operation 662 'zext' 'zext_ln63_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 663 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_21" [d2.cpp:65]   --->   Operation 663 'mux' 'tmp_53' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 664 [1/1] (0.00ns)   --->   "%zext_ln65_18 = zext i32 %tmp_53" [d2.cpp:65]   --->   Operation 664 'zext' 'zext_ln65_18' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 665 '%mul_ln65_46 = mul i64 %zext_ln65_18, i64 %zext_ln59_7'
ST_3 : Operation 665 [1/1] (2.09ns)   --->   "%mul_ln65_46 = mul i64 %zext_ln65_18, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 665 'mul' 'mul_ln65_46' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 666 '%mul_ln65_47 = mul i64 %zext_ln59_12, i64 %zext_ln59_7'
ST_3 : Operation 666 [1/1] (2.09ns)   --->   "%mul_ln65_47 = mul i64 %zext_ln59_12, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 666 'mul' 'mul_ln65_47' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 667 '%mul_ln65_48 = mul i64 %zext_ln63_13, i64 %zext_ln59_7'
ST_3 : Operation 667 [1/1] (2.09ns)   --->   "%mul_ln65_48 = mul i64 %zext_ln63_13, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 667 'mul' 'mul_ln65_48' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 668 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_34)   --->   "%select_ln65_42 = select i1 %icmp_ln59_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 668 'select' 'select_ln65_42' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 669 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_34)   --->   "%and_ln65_46 = and i64 %mul_ln65_46, i64 %select_ln65_42" [d2.cpp:65]   --->   Operation 669 'and' 'and_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 670 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_47)   --->   "%select_ln65_43 = select i1 %and_ln59_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 670 'select' 'select_ln65_43' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 671 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_47 = and i64 %mul_ln65_47, i64 %select_ln65_43" [d2.cpp:65]   --->   Operation 671 'and' 'and_ln65_47' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 672 [1/1] (0.37ns)   --->   "%and_ln65_48 = and i64 %mul_ln65_48, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 672 'and' 'and_ln65_48' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 673 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_22" [d2.cpp:65]   --->   Operation 673 'mux' 'tmp_54' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 674 [1/1] (0.00ns)   --->   "%zext_ln65_19 = zext i32 %tmp_54" [d2.cpp:65]   --->   Operation 674 'zext' 'zext_ln65_19' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 675 '%mul_ln65_49 = mul i64 %zext_ln65_19, i64 %zext_ln59_7'
ST_3 : Operation 675 [1/1] (2.09ns)   --->   "%mul_ln65_49 = mul i64 %zext_ln65_19, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 675 'mul' 'mul_ln65_49' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%select_ln65_44 = select i1 %cmp69, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 676 'select' 'select_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 677 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%and_ln65_49 = and i64 %mul_ln65_49, i64 %select_ln65_44" [d2.cpp:65]   --->   Operation 677 'and' 'and_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 678 [1/1] (0.48ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_23" [d2.cpp:65]   --->   Operation 678 'mux' 'tmp_55' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 679 [1/1] (0.00ns)   --->   "%zext_ln65_20 = zext i32 %tmp_55" [d2.cpp:65]   --->   Operation 679 'zext' 'zext_ln65_20' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 680 '%mul_ln65_50 = mul i64 %zext_ln65_20, i64 %zext_ln59_7'
ST_3 : Operation 680 [1/1] (2.09ns)   --->   "%mul_ln65_50 = mul i64 %zext_ln65_20, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 680 'mul' 'mul_ln65_50' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 681 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_50)   --->   "%select_ln65_45 = select i1 %tmp_72, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 681 'select' 'select_ln65_45' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 682 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_50 = and i64 %mul_ln65_50, i64 %select_ln65_45" [d2.cpp:65]   --->   Operation 682 'and' 'and_ln65_50' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 683 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d2.cpp:65]   --->   Operation 683 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 684 [1/1] (0.00ns)   --->   "%zext_ln65_21 = zext i32 %tmp_56" [d2.cpp:65]   --->   Operation 684 'zext' 'zext_ln65_21' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 685 '%mul_ln65_51 = mul i64 %zext_ln65_21, i64 %zext_ln59_7'
ST_3 : Operation 685 [1/1] (2.09ns)   --->   "%mul_ln65_51 = mul i64 %zext_ln65_21, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 685 'mul' 'mul_ln65_51' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 686 [1/1] (0.37ns)   --->   "%and_ln65_51 = and i64 %mul_ln65_51, i64 %select_ln65_2" [d2.cpp:65]   --->   Operation 686 'and' 'and_ln65_51' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 687 [1/1] (0.00ns)   --->   "%sext_ln65_2 = sext i3 %sub_ln65_32" [d2.cpp:65]   --->   Operation 687 'sext' 'sext_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 688 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d2.cpp:65]   --->   Operation 688 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 689 [1/1] (0.00ns)   --->   "%zext_ln65_22 = zext i32 %tmp_57" [d2.cpp:65]   --->   Operation 689 'zext' 'zext_ln65_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 690 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_65)   --->   "%select_ln65_46 = select i1 %and_ln61_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 690 'select' 'select_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 691 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_65)   --->   "%and_ln65_52 = and i64 %mul_ln65_35, i64 %select_ln65_46" [d2.cpp:65]   --->   Operation 691 'and' 'and_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 692 '%mul_ln65_52 = mul i64 %zext_ln65_22, i64 %zext_ln59_7'
ST_3 : Operation 692 [1/1] (2.09ns)   --->   "%mul_ln65_52 = mul i64 %zext_ln65_22, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 692 'mul' 'mul_ln65_52' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 693 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_65)   --->   "%select_ln65_47 = select i1 %icmp_ln65_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 693 'select' 'select_ln65_47' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_65)   --->   "%and_ln65_53 = and i64 %mul_ln65_52, i64 %select_ln65_47" [d2.cpp:65]   --->   Operation 694 'and' 'and_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 695 [1/1] (0.00ns)   --->   "%zext_ln66_11 = zext i1 %icmp_ln65_3" [d2.cpp:66]   --->   Operation 695 'zext' 'zext_ln66_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 696 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln66_11" [d2.cpp:36]   --->   Operation 696 'sub' 'sub_ln36_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 697 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_2" [d2.cpp:61]   --->   Operation 697 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 698 [1/1] (0.00ns)   --->   "%zext_ln61_6 = zext i32 %tmp_58" [d2.cpp:61]   --->   Operation 698 'zext' 'zext_ln61_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 699 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 699 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 700 [1/1] (0.00ns)   --->   "%zext_ln65_23 = zext i32 %tmp_59" [d2.cpp:65]   --->   Operation 700 'zext' 'zext_ln65_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 701 '%mul_ln65_53 = mul i64 %zext_ln61_6, i64 %zext_ln59_7'
ST_3 : Operation 701 [1/1] (2.09ns)   --->   "%mul_ln65_53 = mul i64 %zext_ln61_6, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 701 'mul' 'mul_ln65_53' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 702 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_73)   --->   "%select_ln65_48 = select i1 %and_ln61_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 702 'select' 'select_ln65_48' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_73)   --->   "%and_ln65_54 = and i64 %mul_ln65_53, i64 %select_ln65_48" [d2.cpp:65]   --->   Operation 703 'and' 'and_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 704 '%mul_ln65_54 = mul i64 %zext_ln65_23, i64 %zext_ln59_7'
ST_3 : Operation 704 [1/1] (2.09ns)   --->   "%mul_ln65_54 = mul i64 %zext_ln65_23, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 704 'mul' 'mul_ln65_54' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 705 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_3" [d2.cpp:61]   --->   Operation 705 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 706 [1/1] (0.00ns)   --->   "%zext_ln61_7 = zext i32 %tmp_60" [d2.cpp:61]   --->   Operation 706 'zext' 'zext_ln61_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 707 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 707 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 708 [1/1] (0.00ns)   --->   "%zext_ln65_24 = zext i32 %tmp_61" [d2.cpp:65]   --->   Operation 708 'zext' 'zext_ln65_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 709 '%mul_ln65_55 = mul i64 %zext_ln61_7, i64 %zext_ln59_7'
ST_3 : Operation 709 [1/1] (2.09ns)   --->   "%mul_ln65_55 = mul i64 %zext_ln61_7, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 709 'mul' 'mul_ln65_55' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 710 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_55)   --->   "%select_ln65_49 = select i1 %and_ln61_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 710 'select' 'select_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 711 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_55 = and i64 %mul_ln65_55, i64 %select_ln65_49" [d2.cpp:65]   --->   Operation 711 'and' 'and_ln65_55' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 712 '%mul_ln65_56 = mul i64 %zext_ln65_24, i64 %zext_ln59_7'
ST_3 : Operation 712 [1/1] (2.09ns)   --->   "%mul_ln65_56 = mul i64 %zext_ln65_24, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 712 'mul' 'mul_ln65_56' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 713 [1/1] (0.48ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_10" [d2.cpp:61]   --->   Operation 713 'mux' 'tmp_62' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 714 [1/1] (0.00ns)   --->   "%zext_ln61_8 = zext i32 %tmp_62" [d2.cpp:61]   --->   Operation 714 'zext' 'zext_ln61_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 715 [1/1] (0.28ns)   --->   "%and_ln61_10 = and i1 %icmp_ln61_10, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 715 'and' 'and_ln61_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 716 [1/1] (0.00ns)   --->   "%zext_ln62_4 = zext i1 %and_ln61_10" [d2.cpp:62]   --->   Operation 716 'zext' 'zext_ln62_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 717 [1/1] (0.79ns)   --->   "%sub_ln65_11 = sub i4 %sub_ln65_10, i4 %zext_ln62_4" [d2.cpp:65]   --->   Operation 717 'sub' 'sub_ln65_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 718 [1/1] (0.48ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 718 'mux' 'tmp_63' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 719 [1/1] (0.00ns)   --->   "%zext_ln65_25 = zext i32 %tmp_63" [d2.cpp:65]   --->   Operation 719 'zext' 'zext_ln65_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 720 '%mul_ln65_57 = mul i64 %zext_ln61_8, i64 %zext_ln59_7'
ST_3 : Operation 720 [1/1] (2.09ns)   --->   "%mul_ln65_57 = mul i64 %zext_ln61_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 720 'mul' 'mul_ln65_57' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 721 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_56)   --->   "%select_ln65_50 = select i1 %and_ln61_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 721 'select' 'select_ln65_50' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 722 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_56 = and i64 %mul_ln65_57, i64 %select_ln65_50" [d2.cpp:65]   --->   Operation 722 'and' 'and_ln65_56' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 723 '%mul_ln65_58 = mul i64 %zext_ln65_25, i64 %zext_ln59_7'
ST_3 : Operation 723 [1/1] (2.09ns)   --->   "%mul_ln65_58 = mul i64 %zext_ln65_25, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 723 'mul' 'mul_ln65_58' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 724 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_11" [d2.cpp:61]   --->   Operation 724 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 725 [1/1] (0.00ns)   --->   "%zext_ln61_9 = zext i32 %tmp_64" [d2.cpp:61]   --->   Operation 725 'zext' 'zext_ln61_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 726 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_57)   --->   "%and_ln61_11 = and i1 %icmp_ln61_11, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 726 'and' 'and_ln61_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 727 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 727 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 728 [1/1] (0.00ns)   --->   "%zext_ln65_26 = zext i32 %tmp_65" [d2.cpp:65]   --->   Operation 728 'zext' 'zext_ln65_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 729 '%mul_ln65_59 = mul i64 %zext_ln61_9, i64 %zext_ln59_7'
ST_3 : Operation 729 [1/1] (2.09ns)   --->   "%mul_ln65_59 = mul i64 %zext_ln61_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 729 'mul' 'mul_ln65_59' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 730 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_57)   --->   "%select_ln65_51 = select i1 %and_ln61_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 730 'select' 'select_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 731 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_57 = and i64 %mul_ln65_59, i64 %select_ln65_51" [d2.cpp:65]   --->   Operation 731 'and' 'and_ln65_57' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 732 '%mul_ln65_60 = mul i64 %zext_ln65_26, i64 %zext_ln59_7'
ST_3 : Operation 732 [1/1] (2.09ns)   --->   "%mul_ln65_60 = mul i64 %zext_ln65_26, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 732 'mul' 'mul_ln65_60' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 733 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 733 'mux' 'tmp_66' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 734 [1/1] (0.00ns)   --->   "%zext_ln59_13 = zext i32 %tmp_66" [d2.cpp:59]   --->   Operation 734 'zext' 'zext_ln59_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 735 [1/1] (0.48ns)   --->   "%tmp_76 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_3" [d2.cpp:51]   --->   Operation 735 'mux' 'tmp_76' <Predicate = (icmp_ln51)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 736 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i32 %tmp_76" [d2.cpp:51]   --->   Operation 736 'zext' 'zext_ln51_2' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 737 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_2" [d2.cpp:51]   --->   Operation 737 'mux' 'tmp_77' <Predicate = (icmp_ln51)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 738 [1/1] (0.00ns)   --->   "%tmp_77_cast = zext i32 %tmp_77" [d2.cpp:51]   --->   Operation 738 'zext' 'tmp_77_cast' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 739 [1/1] (1.01ns)   --->   "%tmp4 = add i33 %tmp_77_cast, i33 %zext_ln51_2" [d2.cpp:51]   --->   Operation 739 'add' 'tmp4' <Predicate = (icmp_ln51)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 740 [1/1] (0.00ns)   --->   "%tmp4_cast = zext i33 %tmp4" [d2.cpp:51]   --->   Operation 740 'zext' 'tmp4_cast' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 741 '%tmp5 = mul i64 %tmp4_cast, i64 %zext_ln59_13'
ST_3 : Operation 741 [1/1] (2.84ns)   --->   "%tmp5 = mul i64 %tmp4_cast, i64 %zext_ln59_13" [d2.cpp:51]   --->   Operation 741 'mul' 'tmp5' <Predicate = (icmp_ln51)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 742 [1/1] (0.73ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load_35" [d2.cpp:63]   --->   Operation 742 'mux' 'tmp_78' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 743 [1/1] (0.00ns)   --->   "%zext_ln63_14 = zext i32 %tmp_78" [d2.cpp:63]   --->   Operation 743 'zext' 'zext_ln63_14' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 744 '%mul_ln63_1 = mul i64 %zext_ln63_14, i64 %zext_ln59_13'
ST_3 : Operation 744 [1/1] (2.09ns)   --->   "%mul_ln63_1 = mul i64 %zext_ln63_14, i64 %zext_ln59_13" [d2.cpp:63]   --->   Operation 744 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 745 [1/1] (0.17ns)   --->   "%select_ln63_3 = select i1 %cmp138_2, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 745 'select' 'select_ln63_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 746 [1/1] (0.37ns)   --->   "%and_ln63_1 = and i64 %mul_ln63_1, i64 %select_ln63_3" [d2.cpp:63]   --->   Operation 746 'and' 'and_ln63_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 747 '%mul_ln59_2 = mul i64 %zext_ln59_13, i64 %conv60_cast'
ST_3 : Operation 747 [1/1] (2.09ns)   --->   "%mul_ln59_2 = mul i64 %zext_ln59_13, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 747 'mul' 'mul_ln59_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 748 [1/1] (0.48ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_1" [d2.cpp:63]   --->   Operation 748 'mux' 'tmp_79' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 749 [1/1] (0.00ns)   --->   "%zext_ln63_15 = zext i32 %tmp_79" [d2.cpp:63]   --->   Operation 749 'zext' 'zext_ln63_15' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 750 '%mul_ln63_2 = mul i64 %zext_ln63_15, i64 %zext_ln59_13'
ST_3 : Operation 750 [1/1] (2.09ns)   --->   "%mul_ln63_2 = mul i64 %zext_ln63_15, i64 %zext_ln59_13" [d2.cpp:63]   --->   Operation 750 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 751 [1/1] (0.37ns)   --->   "%and_ln63_2 = and i64 %mul_ln63_2, i64 %select_ln63_3" [d2.cpp:63]   --->   Operation 751 'and' 'and_ln63_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 752 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_24" [d2.cpp:63]   --->   Operation 752 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 753 [1/1] (0.00ns)   --->   "%zext_ln63_16 = zext i32 %tmp_80" [d2.cpp:63]   --->   Operation 753 'zext' 'zext_ln63_16' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 754 '%mul_ln65_61 = mul i64 %zext_ln63_16, i64 %zext_ln59_13'
ST_3 : Operation 754 [1/1] (2.09ns)   --->   "%mul_ln65_61 = mul i64 %zext_ln63_16, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 754 'mul' 'mul_ln65_61' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 755 [1/1] (0.37ns)   --->   "%and_ln65_58 = and i64 %mul_ln65_61, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 755 'and' 'and_ln65_58' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 756 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_20)   --->   "%select_ln65_52 = select i1 %icmp_ln59_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 756 'select' 'select_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 757 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_20)   --->   "%and_ln65_59 = and i64 %mul_ln59_2, i64 %select_ln65_52" [d2.cpp:65]   --->   Operation 757 'and' 'and_ln65_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 758 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_20)   --->   "%select_ln65_53 = select i1 %and_ln59_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 758 'select' 'select_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 759 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_20)   --->   "%and_ln65_60 = and i64 %mul_ln59_2, i64 %select_ln65_53" [d2.cpp:65]   --->   Operation 759 'and' 'and_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 760 [1/1] (0.44ns)   --->   "%select_ln59_2 = select i1 %and_ln59_13, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 760 'select' 'select_ln59_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 761 [1/1] (0.00ns)   --->   "%zext_ln59_14 = zext i32 %select_ln59_2" [d2.cpp:59]   --->   Operation 761 'zext' 'zext_ln59_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 762 [1/1] (0.00ns)   --->   "%sext_ln63_7 = sext i3 %sub_ln63_6" [d2.cpp:63]   --->   Operation 762 'sext' 'sext_ln63_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 763 [1/1] (0.48ns)   --->   "%tmp_81 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_33" [d2.cpp:63]   --->   Operation 763 'mux' 'tmp_81' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 764 [1/1] (0.00ns)   --->   "%zext_ln63_17 = zext i32 %tmp_81" [d2.cpp:63]   --->   Operation 764 'zext' 'zext_ln63_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 765 [1/1] (0.44ns)   --->   "%select_ln65_4 = select i1 %icmp_ln59_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 765 'select' 'select_ln65_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 766 [1/1] (0.00ns)   --->   "%zext_ln65_27 = zext i32 %select_ln65_4" [d2.cpp:65]   --->   Operation 766 'zext' 'zext_ln65_27' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 767 '%mul_ln65_62 = mul i64 %zext_ln65_27, i64 %zext_ln59_13'
ST_3 : Operation 767 [1/1] (2.09ns)   --->   "%mul_ln65_62 = mul i64 %zext_ln65_27, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 767 'mul' 'mul_ln65_62' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 768 '%mul_ln65_63 = mul i64 %zext_ln59_14, i64 %zext_ln59_13'
ST_3 : Operation 768 [1/1] (2.09ns)   --->   "%mul_ln65_63 = mul i64 %zext_ln59_14, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 768 'mul' 'mul_ln65_63' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 769 '%mul_ln65_64 = mul i64 %zext_ln63_17, i64 %zext_ln59_13'
ST_3 : Operation 769 [1/1] (2.09ns)   --->   "%mul_ln65_64 = mul i64 %zext_ln63_17, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 769 'mul' 'mul_ln65_64' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 770 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_32)   --->   "%select_ln65_54 = select i1 %icmp_ln59_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 770 'select' 'select_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_32)   --->   "%and_ln65_61 = and i64 %mul_ln65_62, i64 %select_ln65_54" [d2.cpp:65]   --->   Operation 771 'and' 'and_ln65_61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 772 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_62)   --->   "%select_ln65_55 = select i1 %and_ln59_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 772 'select' 'select_ln65_55' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 773 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_62 = and i64 %mul_ln65_63, i64 %select_ln65_55" [d2.cpp:65]   --->   Operation 773 'and' 'and_ln65_62' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 774 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_32)   --->   "%and_ln65_63 = and i64 %mul_ln65_64, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 774 'and' 'and_ln65_63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 775 [1/1] (0.00ns)   --->   "%sext_ln59_4 = sext i3 %sub_ln36_45" [d2.cpp:59]   --->   Operation 775 'sext' 'sext_ln59_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 776 [1/1] (0.48ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_7" [d2.cpp:59]   --->   Operation 776 'mux' 'tmp_82' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 777 [1/1] (0.00ns)   --->   "%zext_ln59_15 = zext i32 %tmp_82" [d2.cpp:59]   --->   Operation 777 'zext' 'zext_ln59_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 778 [1/1] (0.00ns)   --->   "%zext_ln63_40 = zext i1 %and_ln59_15" [d2.cpp:63]   --->   Operation 778 'zext' 'zext_ln63_40' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 779 [1/1] (0.67ns)   --->   "%sub_ln63_7 = sub i3 %sub_ln63_6, i3 %zext_ln63_40" [d2.cpp:63]   --->   Operation 779 'sub' 'sub_ln63_7' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 780 [1/1] (0.00ns)   --->   "%sext_ln63_8 = sext i3 %sub_ln63_7" [d2.cpp:63]   --->   Operation 780 'sext' 'sext_ln63_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 781 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_12" [d2.cpp:63]   --->   Operation 781 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 782 [1/1] (0.00ns)   --->   "%zext_ln63_18 = zext i32 %tmp_83" [d2.cpp:63]   --->   Operation 782 'zext' 'zext_ln63_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 783 [1/1] (0.79ns)   --->   "%sub_ln65_13 = sub i4 %sub_ln65_12, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 783 'sub' 'sub_ln65_13' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 784 [1/1] (0.48ns)   --->   "%tmp_84 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_4" [d2.cpp:65]   --->   Operation 784 'mux' 'tmp_84' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 785 [1/1] (0.00ns)   --->   "%zext_ln65_28 = zext i32 %tmp_84" [d2.cpp:65]   --->   Operation 785 'zext' 'zext_ln65_28' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 786 '%mul_ln65_65 = mul i64 %zext_ln65_28, i64 %zext_ln59_13'
ST_3 : Operation 786 [1/1] (2.09ns)   --->   "%mul_ln65_65 = mul i64 %zext_ln65_28, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 786 'mul' 'mul_ln65_65' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 787 '%mul_ln65_66 = mul i64 %zext_ln59_15, i64 %zext_ln59_13'
ST_3 : Operation 787 [1/1] (2.09ns)   --->   "%mul_ln65_66 = mul i64 %zext_ln59_15, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 787 'mul' 'mul_ln65_66' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 788 '%mul_ln65_67 = mul i64 %zext_ln63_18, i64 %zext_ln59_13'
ST_3 : Operation 788 [1/1] (2.09ns)   --->   "%mul_ln65_67 = mul i64 %zext_ln63_18, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 788 'mul' 'mul_ln65_67' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 789 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_7)   --->   "%select_ln65_56 = select i1 %icmp_ln59_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 789 'select' 'select_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 790 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_7)   --->   "%and_ln65_64 = and i64 %mul_ln65_65, i64 %select_ln65_56" [d2.cpp:65]   --->   Operation 790 'and' 'and_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 791 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_4)   --->   "%select_ln65_57 = select i1 %and_ln59_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 791 'select' 'select_ln65_57' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 792 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_4)   --->   "%and_ln65_65 = and i64 %mul_ln65_66, i64 %select_ln65_57" [d2.cpp:65]   --->   Operation 792 'and' 'and_ln65_65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 793 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_7)   --->   "%and_ln65_66 = and i64 %mul_ln65_67, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 793 'and' 'and_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 794 [1/1] (0.48ns)   --->   "%tmp_85 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_8" [d2.cpp:59]   --->   Operation 794 'mux' 'tmp_85' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 795 [1/1] (0.00ns)   --->   "%zext_ln59_16 = zext i32 %tmp_85" [d2.cpp:59]   --->   Operation 795 'zext' 'zext_ln59_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 796 [1/1] (0.28ns)   --->   "%and_ln59_16 = and i1 %icmp_ln59_15, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 796 'and' 'and_ln59_16' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 797 [1/1] (0.00ns)   --->   "%zext_ln60_5 = zext i1 %and_ln59_16" [d2.cpp:60]   --->   Operation 797 'zext' 'zext_ln60_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 798 [1/1] (0.67ns)   --->   "%sub_ln63_8 = sub i4 %sext_ln63_8, i4 %zext_ln60_5" [d2.cpp:63]   --->   Operation 798 'sub' 'sub_ln63_8' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 799 [1/1] (0.48ns)   --->   "%tmp_86 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_13" [d2.cpp:63]   --->   Operation 799 'mux' 'tmp_86' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 800 [1/1] (0.00ns)   --->   "%zext_ln63_19 = zext i32 %tmp_86" [d2.cpp:63]   --->   Operation 800 'zext' 'zext_ln63_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 801 [1/1] (0.79ns)   --->   "%sub_ln65_14 = sub i4 %sub_ln65_13, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 801 'sub' 'sub_ln65_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 802 [1/1] (0.48ns)   --->   "%tmp_87 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_5" [d2.cpp:65]   --->   Operation 802 'mux' 'tmp_87' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 803 [1/1] (0.00ns)   --->   "%zext_ln65_29 = zext i32 %tmp_87" [d2.cpp:65]   --->   Operation 803 'zext' 'zext_ln65_29' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 804 '%mul_ln65_68 = mul i64 %zext_ln65_29, i64 %zext_ln59_13'
ST_3 : Operation 804 [1/1] (2.09ns)   --->   "%mul_ln65_68 = mul i64 %zext_ln65_29, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 804 'mul' 'mul_ln65_68' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 805 '%mul_ln65_69 = mul i64 %zext_ln59_16, i64 %zext_ln59_13'
ST_3 : Operation 805 [1/1] (2.09ns)   --->   "%mul_ln65_69 = mul i64 %zext_ln59_16, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 805 'mul' 'mul_ln65_69' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 806 '%mul_ln65_70 = mul i64 %zext_ln63_19, i64 %zext_ln59_13'
ST_3 : Operation 806 [1/1] (2.09ns)   --->   "%mul_ln65_70 = mul i64 %zext_ln63_19, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 806 'mul' 'mul_ln65_70' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 807 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_22)   --->   "%select_ln65_58 = select i1 %icmp_ln59_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 807 'select' 'select_ln65_58' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 808 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_22)   --->   "%and_ln65_67 = and i64 %mul_ln65_68, i64 %select_ln65_58" [d2.cpp:65]   --->   Operation 808 'and' 'and_ln65_67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 809 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_19)   --->   "%select_ln65_59 = select i1 %and_ln59_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 809 'select' 'select_ln65_59' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 810 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_19)   --->   "%and_ln65_68 = and i64 %mul_ln65_69, i64 %select_ln65_59" [d2.cpp:65]   --->   Operation 810 'and' 'and_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 811 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_22)   --->   "%and_ln65_69 = and i64 %mul_ln65_70, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 811 'and' 'and_ln65_69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 812 [1/1] (0.48ns)   --->   "%tmp_88 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_8" [d2.cpp:59]   --->   Operation 812 'mux' 'tmp_88' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 813 [1/1] (0.00ns)   --->   "%zext_ln59_17 = zext i32 %tmp_88" [d2.cpp:59]   --->   Operation 813 'zext' 'zext_ln59_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 814 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_34)   --->   "%and_ln59_17 = and i1 %icmp_ln59_16, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 814 'and' 'and_ln59_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 815 [1/1] (0.48ns)   --->   "%tmp_89 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_14" [d2.cpp:63]   --->   Operation 815 'mux' 'tmp_89' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 816 [1/1] (0.00ns)   --->   "%zext_ln63_20 = zext i32 %tmp_89" [d2.cpp:63]   --->   Operation 816 'zext' 'zext_ln63_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 817 [1/1] (0.48ns)   --->   "%tmp_90 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_25" [d2.cpp:65]   --->   Operation 817 'mux' 'tmp_90' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 818 [1/1] (0.00ns)   --->   "%zext_ln65_30 = zext i32 %tmp_90" [d2.cpp:65]   --->   Operation 818 'zext' 'zext_ln65_30' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 819 '%mul_ln65_71 = mul i64 %zext_ln65_30, i64 %zext_ln59_13'
ST_3 : Operation 819 [1/1] (2.09ns)   --->   "%mul_ln65_71 = mul i64 %zext_ln65_30, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 819 'mul' 'mul_ln65_71' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 820 '%mul_ln65_72 = mul i64 %zext_ln59_17, i64 %zext_ln59_13'
ST_3 : Operation 820 [1/1] (2.09ns)   --->   "%mul_ln65_72 = mul i64 %zext_ln59_17, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 820 'mul' 'mul_ln65_72' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 821 '%mul_ln65_73 = mul i64 %zext_ln63_20, i64 %zext_ln59_13'
ST_3 : Operation 821 [1/1] (2.09ns)   --->   "%mul_ln65_73 = mul i64 %zext_ln63_20, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 821 'mul' 'mul_ln65_73' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 822 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_37)   --->   "%select_ln65_60 = select i1 %icmp_ln59_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 822 'select' 'select_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 823 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_37)   --->   "%and_ln65_70 = and i64 %mul_ln65_71, i64 %select_ln65_60" [d2.cpp:65]   --->   Operation 823 'and' 'and_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_34)   --->   "%select_ln65_61 = select i1 %and_ln59_17, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 824 'select' 'select_ln65_61' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_34)   --->   "%and_ln65_71 = and i64 %mul_ln65_72, i64 %select_ln65_61" [d2.cpp:65]   --->   Operation 825 'and' 'and_ln65_71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_37)   --->   "%and_ln65_72 = and i64 %mul_ln65_73, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 826 'and' 'and_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 827 [1/1] (0.48ns)   --->   "%tmp_91 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_26" [d2.cpp:65]   --->   Operation 827 'mux' 'tmp_91' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 828 [1/1] (0.00ns)   --->   "%zext_ln65_31 = zext i32 %tmp_91" [d2.cpp:65]   --->   Operation 828 'zext' 'zext_ln65_31' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 829 '%mul_ln65_74 = mul i64 %zext_ln65_31, i64 %zext_ln59_13'
ST_3 : Operation 829 [1/1] (2.09ns)   --->   "%mul_ln65_74 = mul i64 %zext_ln65_31, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 829 'mul' 'mul_ln65_74' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_73)   --->   "%select_ln65_62 = select i1 %cmp69_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 830 'select' 'select_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 831 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_73 = and i64 %mul_ln65_74, i64 %select_ln65_62" [d2.cpp:65]   --->   Operation 831 'and' 'and_ln65_73' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 832 [1/1] (0.48ns)   --->   "%tmp_92 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_27" [d2.cpp:65]   --->   Operation 832 'mux' 'tmp_92' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 833 [1/1] (0.00ns)   --->   "%zext_ln65_32 = zext i32 %tmp_92" [d2.cpp:65]   --->   Operation 833 'zext' 'zext_ln65_32' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 834 '%mul_ln65_75 = mul i64 %zext_ln65_32, i64 %zext_ln59_13'
ST_3 : Operation 834 [1/1] (2.09ns)   --->   "%mul_ln65_75 = mul i64 %zext_ln65_32, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 834 'mul' 'mul_ln65_75' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 835 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_74)   --->   "%select_ln65_63 = select i1 %tmp_106, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 835 'select' 'select_ln65_63' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 836 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_74 = and i64 %mul_ln65_75, i64 %select_ln65_63" [d2.cpp:65]   --->   Operation 836 'and' 'and_ln65_74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 837 [1/1] (0.48ns)   --->   "%tmp_93 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_28" [d2.cpp:65]   --->   Operation 837 'mux' 'tmp_93' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 838 [1/1] (0.00ns)   --->   "%zext_ln65_33 = zext i32 %tmp_93" [d2.cpp:65]   --->   Operation 838 'zext' 'zext_ln65_33' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 839 '%mul_ln65_76 = mul i64 %zext_ln65_33, i64 %zext_ln59_13'
ST_3 : Operation 839 [1/1] (2.09ns)   --->   "%mul_ln65_76 = mul i64 %zext_ln65_33, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 839 'mul' 'mul_ln65_76' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 840 [1/1] (0.37ns)   --->   "%and_ln65_75 = and i64 %mul_ln65_76, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 840 'and' 'and_ln65_75' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 841 [1/1] (0.79ns)   --->   "%sub_ln36_6 = sub i4 %sub_ln36_28, i4 %zext_ln64_1" [d2.cpp:36]   --->   Operation 841 'sub' 'sub_ln36_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 842 [1/1] (0.48ns)   --->   "%tmp_94 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_6" [d2.cpp:65]   --->   Operation 842 'mux' 'tmp_94' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 843 [1/1] (0.00ns)   --->   "%zext_ln65_34 = zext i32 %tmp_94" [d2.cpp:65]   --->   Operation 843 'zext' 'zext_ln65_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 844 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_76)   --->   "%select_ln65_65 = select i1 %and_ln61_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 844 'select' 'select_ln65_65' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 845 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_76 = and i64 %mul_ln59_2, i64 %select_ln65_65" [d2.cpp:65]   --->   Operation 845 'and' 'and_ln65_76' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 846 '%mul_ln65_77 = mul i64 %zext_ln65_34, i64 %zext_ln59_13'
ST_3 : Operation 846 [1/1] (2.09ns)   --->   "%mul_ln65_77 = mul i64 %zext_ln65_34, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 846 'mul' 'mul_ln65_77' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 847 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_77)   --->   "%select_ln65_66 = select i1 %icmp_ln65_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 847 'select' 'select_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 848 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_77 = and i64 %mul_ln65_77, i64 %select_ln65_66" [d2.cpp:65]   --->   Operation 848 'and' 'and_ln65_77' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 849 [1/1] (0.00ns)   --->   "%zext_ln66_15 = zext i1 %icmp_ln65_4" [d2.cpp:66]   --->   Operation 849 'zext' 'zext_ln66_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 850 [1/1] (0.79ns)   --->   "%sub_ln36_7 = sub i4 %sub_ln36_6, i4 %zext_ln66_15" [d2.cpp:36]   --->   Operation 850 'sub' 'sub_ln36_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 851 [1/1] (0.44ns)   --->   "%select_ln61_1 = select i1 %and_ln61_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 851 'select' 'select_ln61_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 852 [1/1] (0.00ns)   --->   "%zext_ln61_10 = zext i32 %select_ln61_1" [d2.cpp:61]   --->   Operation 852 'zext' 'zext_ln61_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 853 [1/1] (0.00ns)   --->   "%sext_ln65_4 = sext i3 %sub_ln65_15" [d2.cpp:65]   --->   Operation 853 'sext' 'sext_ln65_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 854 [1/1] (0.48ns)   --->   "%tmp_95 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_7" [d2.cpp:65]   --->   Operation 854 'mux' 'tmp_95' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 855 [1/1] (0.00ns)   --->   "%zext_ln65_35 = zext i32 %tmp_95" [d2.cpp:65]   --->   Operation 855 'zext' 'zext_ln65_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 856 '%mul_ln65_78 = mul i64 %zext_ln61_10, i64 %zext_ln59_13'
ST_3 : Operation 856 [1/1] (2.09ns)   --->   "%mul_ln65_78 = mul i64 %zext_ln61_10, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 856 'mul' 'mul_ln65_78' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 857 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_78)   --->   "%select_ln65_67 = select i1 %and_ln61_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 857 'select' 'select_ln65_67' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 858 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_78 = and i64 %mul_ln65_78, i64 %select_ln65_67" [d2.cpp:65]   --->   Operation 858 'and' 'and_ln65_78' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 859 '%mul_ln65_79 = mul i64 %zext_ln65_35, i64 %zext_ln59_13'
ST_3 : Operation 859 [1/1] (2.09ns)   --->   "%mul_ln65_79 = mul i64 %zext_ln65_35, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 859 'mul' 'mul_ln65_79' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 860 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_79)   --->   "%select_ln65_68 = select i1 %icmp_ln65_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 860 'select' 'select_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 861 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_79 = and i64 %mul_ln65_79, i64 %select_ln65_68" [d2.cpp:65]   --->   Operation 861 'and' 'and_ln65_79' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 862 [1/1] (0.00ns)   --->   "%zext_ln66_16 = zext i1 %icmp_ln65_5" [d2.cpp:66]   --->   Operation 862 'zext' 'zext_ln66_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 863 [1/1] (0.79ns)   --->   "%sub_ln36_8 = sub i4 %sub_ln36_7, i4 %zext_ln66_16" [d2.cpp:36]   --->   Operation 863 'sub' 'sub_ln36_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 864 [1/1] (0.48ns)   --->   "%tmp_96 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_4" [d2.cpp:61]   --->   Operation 864 'mux' 'tmp_96' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 865 [1/1] (0.00ns)   --->   "%zext_ln61_11 = zext i32 %tmp_96" [d2.cpp:61]   --->   Operation 865 'zext' 'zext_ln61_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 866 [1/1] (0.00ns)   --->   "%zext_ln65_65 = zext i1 %and_ln61_14" [d2.cpp:65]   --->   Operation 866 'zext' 'zext_ln65_65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 867 [1/1] (0.67ns)   --->   "%sub_ln65_16 = sub i3 %sub_ln65_15, i3 %zext_ln65_65" [d2.cpp:65]   --->   Operation 867 'sub' 'sub_ln65_16' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 868 [1/1] (0.00ns)   --->   "%sext_ln65_5 = sext i3 %sub_ln65_16" [d2.cpp:65]   --->   Operation 868 'sext' 'sext_ln65_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 869 [1/1] (0.48ns)   --->   "%tmp_97 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_8" [d2.cpp:65]   --->   Operation 869 'mux' 'tmp_97' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln65_36 = zext i32 %tmp_97" [d2.cpp:65]   --->   Operation 870 'zext' 'zext_ln65_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 871 '%mul_ln65_80 = mul i64 %zext_ln61_11, i64 %zext_ln59_13'
ST_3 : Operation 871 [1/1] (2.09ns)   --->   "%mul_ln65_80 = mul i64 %zext_ln61_11, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 871 'mul' 'mul_ln65_80' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 872 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_80)   --->   "%select_ln65_69 = select i1 %and_ln61_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 872 'select' 'select_ln65_69' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 873 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_80 = and i64 %mul_ln65_80, i64 %select_ln65_69" [d2.cpp:65]   --->   Operation 873 'and' 'and_ln65_80' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 874 '%mul_ln65_81 = mul i64 %zext_ln65_36, i64 %zext_ln59_13'
ST_3 : Operation 874 [1/1] (2.09ns)   --->   "%mul_ln65_81 = mul i64 %zext_ln65_36, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 874 'mul' 'mul_ln65_81' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 875 [1/1] (0.48ns)   --->   "%tmp_98 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_5" [d2.cpp:61]   --->   Operation 875 'mux' 'tmp_98' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln61_12 = zext i32 %tmp_98" [d2.cpp:61]   --->   Operation 876 'zext' 'zext_ln61_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 877 [1/1] (0.28ns)   --->   "%and_ln61_15 = and i1 %icmp_ln61_15, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 877 'and' 'and_ln61_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 878 [1/1] (0.00ns)   --->   "%zext_ln62_5 = zext i1 %and_ln61_15" [d2.cpp:62]   --->   Operation 878 'zext' 'zext_ln62_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 879 [1/1] (0.67ns)   --->   "%sub_ln65_17 = sub i4 %sext_ln65_5, i4 %zext_ln62_5" [d2.cpp:65]   --->   Operation 879 'sub' 'sub_ln65_17' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 880 [1/1] (0.48ns)   --->   "%tmp_99 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_8" [d2.cpp:65]   --->   Operation 880 'mux' 'tmp_99' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 881 [1/1] (0.00ns)   --->   "%zext_ln65_37 = zext i32 %tmp_99" [d2.cpp:65]   --->   Operation 881 'zext' 'zext_ln65_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 882 '%mul_ln65_82 = mul i64 %zext_ln61_12, i64 %zext_ln59_13'
ST_3 : Operation 882 [1/1] (2.09ns)   --->   "%mul_ln65_82 = mul i64 %zext_ln61_12, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 882 'mul' 'mul_ln65_82' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 883 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_81)   --->   "%select_ln65_70 = select i1 %and_ln61_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 883 'select' 'select_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 884 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_81 = and i64 %mul_ln65_82, i64 %select_ln65_70" [d2.cpp:65]   --->   Operation 884 'and' 'and_ln65_81' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 885 '%mul_ln65_83 = mul i64 %zext_ln65_37, i64 %zext_ln59_13'
ST_3 : Operation 885 [1/1] (2.09ns)   --->   "%mul_ln65_83 = mul i64 %zext_ln65_37, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 885 'mul' 'mul_ln65_83' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 886 [1/1] (0.48ns)   --->   "%tmp_100 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_17" [d2.cpp:61]   --->   Operation 886 'mux' 'tmp_100' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 887 [1/1] (0.00ns)   --->   "%zext_ln61_13 = zext i32 %tmp_100" [d2.cpp:61]   --->   Operation 887 'zext' 'zext_ln61_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 888 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_82)   --->   "%and_ln61_16 = and i1 %icmp_ln61_16, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 888 'and' 'and_ln61_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 889 [1/1] (0.48ns)   --->   "%tmp_101 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_8" [d2.cpp:65]   --->   Operation 889 'mux' 'tmp_101' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 890 [1/1] (0.00ns)   --->   "%zext_ln65_38 = zext i32 %tmp_101" [d2.cpp:65]   --->   Operation 890 'zext' 'zext_ln65_38' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 891 '%mul_ln65_84 = mul i64 %zext_ln61_13, i64 %zext_ln59_13'
ST_3 : Operation 891 [1/1] (2.09ns)   --->   "%mul_ln65_84 = mul i64 %zext_ln61_13, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 891 'mul' 'mul_ln65_84' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 892 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_82)   --->   "%select_ln65_71 = select i1 %and_ln61_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 892 'select' 'select_ln65_71' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 893 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_82 = and i64 %mul_ln65_84, i64 %select_ln65_71" [d2.cpp:65]   --->   Operation 893 'and' 'and_ln65_82' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 894 '%mul_ln65_85 = mul i64 %zext_ln65_38, i64 %zext_ln59_13'
ST_3 : Operation 894 [1/1] (2.09ns)   --->   "%mul_ln65_85 = mul i64 %zext_ln65_38, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 894 'mul' 'mul_ln65_85' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 895 [1/1] (0.48ns)   --->   "%tmp_102 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 895 'mux' 'tmp_102' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 896 [1/1] (0.00ns)   --->   "%zext_ln59_18 = zext i32 %tmp_102" [d2.cpp:59]   --->   Operation 896 'zext' 'zext_ln59_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 897 [1/1] (0.48ns)   --->   "%tmp_103 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_5" [d2.cpp:51]   --->   Operation 897 'mux' 'tmp_103' <Predicate = (icmp_ln51_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 898 [1/1] (0.00ns)   --->   "%zext_ln51_3 = zext i32 %tmp_103" [d2.cpp:51]   --->   Operation 898 'zext' 'zext_ln51_3' <Predicate = (icmp_ln51_1)> <Delay = 0.00>
ST_3 : Operation 899 [1/1] (0.48ns)   --->   "%tmp_104 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_4" [d2.cpp:51]   --->   Operation 899 'mux' 'tmp_104' <Predicate = (icmp_ln51_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 900 [1/1] (0.00ns)   --->   "%tmp_104_cast = zext i32 %tmp_104" [d2.cpp:51]   --->   Operation 900 'zext' 'tmp_104_cast' <Predicate = (icmp_ln51_1)> <Delay = 0.00>
ST_3 : Operation 901 [1/1] (1.01ns)   --->   "%tmp6 = add i33 %tmp_104_cast, i33 %zext_ln51_3" [d2.cpp:51]   --->   Operation 901 'add' 'tmp6' <Predicate = (icmp_ln51_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 902 [1/1] (0.00ns)   --->   "%tmp6_cast = zext i33 %tmp6" [d2.cpp:51]   --->   Operation 902 'zext' 'tmp6_cast' <Predicate = (icmp_ln51_1)> <Delay = 0.00>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 903 '%tmp7 = mul i64 %tmp6_cast, i64 %zext_ln59_18'
ST_3 : Operation 903 [1/1] (2.84ns)   --->   "%tmp7 = mul i64 %tmp6_cast, i64 %zext_ln59_18" [d2.cpp:51]   --->   Operation 903 'mul' 'tmp7' <Predicate = (icmp_ln51_1)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 904 [1/1] (0.73ns)   --->   "%tmp_105 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load_35" [d2.cpp:63]   --->   Operation 904 'mux' 'tmp_105' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 905 [1/1] (0.00ns)   --->   "%zext_ln63_21 = zext i32 %tmp_105" [d2.cpp:63]   --->   Operation 905 'zext' 'zext_ln63_21' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 906 '%mul_ln63_3 = mul i64 %zext_ln63_21, i64 %zext_ln59_18'
ST_3 : Operation 906 [1/1] (2.09ns)   --->   "%mul_ln63_3 = mul i64 %zext_ln63_21, i64 %zext_ln59_18" [d2.cpp:63]   --->   Operation 906 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 907 [1/1] (0.17ns)   --->   "%select_ln63_5 = select i1 %cmp138_3, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 907 'select' 'select_ln63_5' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_3)   --->   "%and_ln63_3 = and i64 %mul_ln63_3, i64 %select_ln63_5" [d2.cpp:63]   --->   Operation 908 'and' 'and_ln63_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 909 '%mul_ln59_3 = mul i64 %zext_ln59_18, i64 %conv60_cast'
ST_3 : Operation 909 [1/1] (2.09ns)   --->   "%mul_ln59_3 = mul i64 %zext_ln59_18, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 909 'mul' 'mul_ln59_3' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 910 [1/1] (0.48ns)   --->   "%tmp_107 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_2" [d2.cpp:63]   --->   Operation 910 'mux' 'tmp_107' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 911 [1/1] (0.00ns)   --->   "%zext_ln63_22 = zext i32 %tmp_107" [d2.cpp:63]   --->   Operation 911 'zext' 'zext_ln63_22' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 912 '%mul_ln63_4 = mul i64 %zext_ln63_22, i64 %zext_ln59_18'
ST_3 : Operation 912 [1/1] (2.09ns)   --->   "%mul_ln63_4 = mul i64 %zext_ln63_22, i64 %zext_ln59_18" [d2.cpp:63]   --->   Operation 912 'mul' 'mul_ln63_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 913 [1/1] (0.37ns)   --->   "%and_ln63_4 = and i64 %mul_ln63_4, i64 %select_ln63_5" [d2.cpp:63]   --->   Operation 913 'and' 'and_ln63_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 914 [1/1] (0.48ns)   --->   "%tmp_108 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_29" [d2.cpp:63]   --->   Operation 914 'mux' 'tmp_108' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 915 [1/1] (0.00ns)   --->   "%zext_ln63_23 = zext i32 %tmp_108" [d2.cpp:63]   --->   Operation 915 'zext' 'zext_ln63_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 916 '%mul_ln63_5 = mul i64 %zext_ln63_23, i64 %zext_ln59_18'
ST_3 : Operation 916 [1/1] (2.09ns)   --->   "%mul_ln63_5 = mul i64 %zext_ln63_23, i64 %zext_ln59_18" [d2.cpp:63]   --->   Operation 916 'mul' 'mul_ln63_5' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 917 [1/1] (0.37ns)   --->   "%and_ln63_5 = and i64 %mul_ln63_5, i64 %select_ln63_5" [d2.cpp:63]   --->   Operation 917 'and' 'and_ln63_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 918 [1/1] (0.28ns)   --->   "%and_ln59_18 = and i1 %icmp_ln59_17, i1 %cmp69_3" [d2.cpp:59]   --->   Operation 918 'and' 'and_ln59_18' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 919 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_9)   --->   "%select_ln63_6 = select i1 %and_ln59_18, i3 6, i3 7" [d2.cpp:63]   --->   Operation 919 'select' 'select_ln63_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 920 [1/1] (0.48ns)   --->   "%tmp_109 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_30" [d2.cpp:63]   --->   Operation 920 'mux' 'tmp_109' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 921 [1/1] (0.00ns)   --->   "%zext_ln63_24 = zext i32 %tmp_109" [d2.cpp:63]   --->   Operation 921 'zext' 'zext_ln63_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 922 '%mul_ln65_86 = mul i64 %zext_ln63_24, i64 %zext_ln59_18'
ST_3 : Operation 922 [1/1] (2.09ns)   --->   "%mul_ln65_86 = mul i64 %zext_ln63_24, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 922 'mul' 'mul_ln65_86' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 923 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_35)   --->   "%and_ln65_83 = and i64 %mul_ln65_86, i64 %select_ln63_5" [d2.cpp:65]   --->   Operation 923 'and' 'and_ln65_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_84)   --->   "%select_ln65_72 = select i1 %icmp_ln59_17, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 924 'select' 'select_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 925 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_84 = and i64 %mul_ln59_3, i64 %select_ln65_72" [d2.cpp:65]   --->   Operation 925 'and' 'and_ln65_84' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_85)   --->   "%select_ln65_73 = select i1 %and_ln59_18, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 926 'select' 'select_ln65_73' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 927 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_85 = and i64 %mul_ln59_3, i64 %select_ln65_73" [d2.cpp:65]   --->   Operation 927 'and' 'and_ln65_85' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 928 [1/1] (0.44ns)   --->   "%select_ln59_3 = select i1 %and_ln59_18, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 928 'select' 'select_ln59_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 929 [1/1] (0.00ns)   --->   "%zext_ln59_19 = zext i32 %select_ln59_3" [d2.cpp:59]   --->   Operation 929 'zext' 'zext_ln59_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 930 [1/1] (0.28ns)   --->   "%and_ln59_19 = and i1 %icmp_ln59_18, i1 %cmp69_3" [d2.cpp:59]   --->   Operation 930 'and' 'and_ln59_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 931 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_9)   --->   "%zext_ln63_41 = zext i1 %and_ln59_19" [d2.cpp:63]   --->   Operation 931 'zext' 'zext_ln63_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 932 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_9 = sub i3 %select_ln63_6, i3 %zext_ln63_41" [d2.cpp:63]   --->   Operation 932 'sub' 'sub_ln63_9' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 933 [1/1] (0.00ns)   --->   "%sext_ln63_9 = sext i3 %sub_ln63_9" [d2.cpp:63]   --->   Operation 933 'sext' 'sext_ln63_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 934 [1/1] (0.48ns)   --->   "%tmp_110 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_18" [d2.cpp:63]   --->   Operation 934 'mux' 'tmp_110' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 935 [1/1] (0.00ns)   --->   "%zext_ln63_25 = zext i32 %tmp_110" [d2.cpp:63]   --->   Operation 935 'zext' 'zext_ln63_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 936 [1/1] (0.79ns)   --->   "%sub_ln65_19 = sub i4 %sub_ln65_18, i4 %zext_ln64_3" [d2.cpp:65]   --->   Operation 936 'sub' 'sub_ln65_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 937 [1/1] (0.44ns)   --->   "%select_ln65_6 = select i1 %icmp_ln59_17, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 937 'select' 'select_ln65_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 938 [1/1] (0.00ns)   --->   "%zext_ln65_39 = zext i32 %select_ln65_6" [d2.cpp:65]   --->   Operation 938 'zext' 'zext_ln65_39' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 939 '%mul_ln65_87 = mul i64 %zext_ln65_39, i64 %zext_ln59_18'
ST_3 : Operation 939 [1/1] (2.09ns)   --->   "%mul_ln65_87 = mul i64 %zext_ln65_39, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 939 'mul' 'mul_ln65_87' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 940 '%mul_ln65_88 = mul i64 %zext_ln59_19, i64 %zext_ln59_18'
ST_3 : Operation 940 [1/1] (2.09ns)   --->   "%mul_ln65_88 = mul i64 %zext_ln59_19, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 940 'mul' 'mul_ln65_88' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 941 '%mul_ln65_89 = mul i64 %zext_ln63_25, i64 %zext_ln59_18'
ST_3 : Operation 941 [1/1] (2.09ns)   --->   "%mul_ln65_89 = mul i64 %zext_ln63_25, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 941 'mul' 'mul_ln65_89' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 942 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_86)   --->   "%select_ln65_74 = select i1 %icmp_ln59_18, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 942 'select' 'select_ln65_74' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 943 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_86 = and i64 %mul_ln65_87, i64 %select_ln65_74" [d2.cpp:65]   --->   Operation 943 'and' 'and_ln65_86' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 944 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_8)   --->   "%select_ln65_75 = select i1 %and_ln59_19, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 944 'select' 'select_ln65_75' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 945 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_8)   --->   "%and_ln65_87 = and i64 %mul_ln65_88, i64 %select_ln65_75" [d2.cpp:65]   --->   Operation 945 'and' 'and_ln65_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 946 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_8)   --->   "%and_ln65_88 = and i64 %mul_ln65_89, i64 %select_ln63_5" [d2.cpp:65]   --->   Operation 946 'and' 'and_ln65_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 947 [1/1] (0.00ns)   --->   "%sext_ln59_6 = sext i3 %sub_ln36_47" [d2.cpp:59]   --->   Operation 947 'sext' 'sext_ln59_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 948 [1/1] (0.48ns)   --->   "%tmp_111 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_9" [d2.cpp:59]   --->   Operation 948 'mux' 'tmp_111' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 949 [1/1] (0.00ns)   --->   "%zext_ln59_20 = zext i32 %tmp_111" [d2.cpp:59]   --->   Operation 949 'zext' 'zext_ln59_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 950 [1/1] (0.28ns)   --->   "%and_ln59_20 = and i1 %icmp_ln59_19, i1 %cmp69_3" [d2.cpp:59]   --->   Operation 950 'and' 'and_ln59_20' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 951 [1/1] (0.00ns)   --->   "%zext_ln63_42 = zext i1 %and_ln59_20" [d2.cpp:63]   --->   Operation 951 'zext' 'zext_ln63_42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 952 [1/1] (0.67ns)   --->   "%sub_ln63_10 = sub i3 %sub_ln63_9, i3 %zext_ln63_42" [d2.cpp:63]   --->   Operation 952 'sub' 'sub_ln63_10' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 953 [1/1] (0.00ns)   --->   "%sext_ln63_10 = sext i3 %sub_ln63_10" [d2.cpp:63]   --->   Operation 953 'sext' 'sext_ln63_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 954 [1/1] (0.48ns)   --->   "%tmp_112 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_19" [d2.cpp:63]   --->   Operation 954 'mux' 'tmp_112' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 955 [1/1] (0.00ns)   --->   "%zext_ln63_26 = zext i32 %tmp_112" [d2.cpp:63]   --->   Operation 955 'zext' 'zext_ln63_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 956 [1/1] (0.79ns)   --->   "%sub_ln65_20 = sub i4 %sub_ln65_19, i4 %zext_ln64_3" [d2.cpp:65]   --->   Operation 956 'sub' 'sub_ln65_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 957 [1/1] (0.48ns)   --->   "%tmp_113 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_6" [d2.cpp:65]   --->   Operation 957 'mux' 'tmp_113' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 958 [1/1] (0.00ns)   --->   "%zext_ln65_40 = zext i32 %tmp_113" [d2.cpp:65]   --->   Operation 958 'zext' 'zext_ln65_40' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 959 '%mul_ln65_90 = mul i64 %zext_ln65_40, i64 %zext_ln59_18'
ST_3 : Operation 959 [1/1] (2.09ns)   --->   "%mul_ln65_90 = mul i64 %zext_ln65_40, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 959 'mul' 'mul_ln65_90' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 960 '%mul_ln65_91 = mul i64 %zext_ln59_20, i64 %zext_ln59_18'
ST_3 : Operation 960 [1/1] (2.09ns)   --->   "%mul_ln65_91 = mul i64 %zext_ln59_20, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 960 'mul' 'mul_ln65_91' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 961 '%mul_ln65_92 = mul i64 %zext_ln63_26, i64 %zext_ln59_18'
ST_3 : Operation 961 [1/1] (2.09ns)   --->   "%mul_ln65_92 = mul i64 %zext_ln63_26, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 961 'mul' 'mul_ln65_92' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 962 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_89)   --->   "%select_ln65_76 = select i1 %icmp_ln59_19, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 962 'select' 'select_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 963 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_89 = and i64 %mul_ln65_90, i64 %select_ln65_76" [d2.cpp:65]   --->   Operation 963 'and' 'and_ln65_89' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 964 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_23)   --->   "%select_ln65_77 = select i1 %and_ln59_20, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 964 'select' 'select_ln65_77' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 965 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_23)   --->   "%and_ln65_90 = and i64 %mul_ln65_91, i64 %select_ln65_77" [d2.cpp:65]   --->   Operation 965 'and' 'and_ln65_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 966 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_23)   --->   "%and_ln65_91 = and i64 %mul_ln65_92, i64 %select_ln63_5" [d2.cpp:65]   --->   Operation 966 'and' 'and_ln65_91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 967 [1/1] (0.48ns)   --->   "%tmp_114 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_10" [d2.cpp:59]   --->   Operation 967 'mux' 'tmp_114' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 968 [1/1] (0.00ns)   --->   "%zext_ln59_21 = zext i32 %tmp_114" [d2.cpp:59]   --->   Operation 968 'zext' 'zext_ln59_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 969 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln59_21 = and i1 %icmp_ln59_20, i1 %cmp69_3" [d2.cpp:59]   --->   Operation 969 'and' 'and_ln59_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 970 [1/1] (0.48ns)   --->   "%tmp_115 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_20" [d2.cpp:63]   --->   Operation 970 'mux' 'tmp_115' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 971 [1/1] (0.00ns)   --->   "%zext_ln63_27 = zext i32 %tmp_115" [d2.cpp:63]   --->   Operation 971 'zext' 'zext_ln63_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 972 [1/1] (0.48ns)   --->   "%tmp_116 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_7" [d2.cpp:65]   --->   Operation 972 'mux' 'tmp_116' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 973 [1/1] (0.00ns)   --->   "%zext_ln65_41 = zext i32 %tmp_116" [d2.cpp:65]   --->   Operation 973 'zext' 'zext_ln65_41' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 974 '%mul_ln65_93 = mul i64 %zext_ln65_41, i64 %zext_ln59_18'
ST_3 : Operation 974 [1/1] (2.09ns)   --->   "%mul_ln65_93 = mul i64 %zext_ln65_41, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 974 'mul' 'mul_ln65_93' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 975 '%mul_ln65_94 = mul i64 %zext_ln59_21, i64 %zext_ln59_18'
ST_3 : Operation 975 [1/1] (2.09ns)   --->   "%mul_ln65_94 = mul i64 %zext_ln59_21, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 975 'mul' 'mul_ln65_94' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 976 '%mul_ln65_95 = mul i64 %zext_ln63_27, i64 %zext_ln59_18'
ST_3 : Operation 976 [1/1] (2.09ns)   --->   "%mul_ln65_95 = mul i64 %zext_ln63_27, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 976 'mul' 'mul_ln65_95' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 977 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_92)   --->   "%select_ln65_78 = select i1 %icmp_ln59_20, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 977 'select' 'select_ln65_78' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 978 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_92 = and i64 %mul_ln65_93, i64 %select_ln65_78" [d2.cpp:65]   --->   Operation 978 'and' 'and_ln65_92' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 979 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%select_ln65_79 = select i1 %and_ln59_21, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 979 'select' 'select_ln65_79' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 980 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln65_93 = and i64 %mul_ln65_94, i64 %select_ln65_79" [d2.cpp:65]   --->   Operation 980 'and' 'and_ln65_93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 981 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln65_94 = and i64 %mul_ln65_95, i64 %select_ln63_5" [d2.cpp:65]   --->   Operation 981 'and' 'and_ln65_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 982 [1/1] (0.48ns)   --->   "%tmp_117 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_31" [d2.cpp:65]   --->   Operation 982 'mux' 'tmp_117' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 983 [1/1] (0.00ns)   --->   "%zext_ln65_42 = zext i32 %tmp_117" [d2.cpp:65]   --->   Operation 983 'zext' 'zext_ln65_42' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 984 '%mul_ln65_96 = mul i64 %zext_ln65_42, i64 %zext_ln59_18'
ST_3 : Operation 984 [1/1] (2.09ns)   --->   "%mul_ln65_96 = mul i64 %zext_ln65_42, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 984 'mul' 'mul_ln65_96' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 985 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_95)   --->   "%select_ln65_80 = select i1 %cmp69_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 985 'select' 'select_ln65_80' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 986 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_95 = and i64 %mul_ln65_96, i64 %select_ln65_80" [d2.cpp:65]   --->   Operation 986 'and' 'and_ln65_95' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 987 [1/1] (0.48ns)   --->   "%tmp_118 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_32" [d2.cpp:65]   --->   Operation 987 'mux' 'tmp_118' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 988 [1/1] (0.00ns)   --->   "%zext_ln65_43 = zext i32 %tmp_118" [d2.cpp:65]   --->   Operation 988 'zext' 'zext_ln65_43' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 989 '%mul_ln65_97 = mul i64 %zext_ln65_43, i64 %zext_ln59_18'
ST_3 : Operation 989 [1/1] (2.09ns)   --->   "%mul_ln65_97 = mul i64 %zext_ln65_43, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 989 'mul' 'mul_ln65_97' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 990 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_96)   --->   "%select_ln65_81 = select i1 %icmp_ln51, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 990 'select' 'select_ln65_81' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 991 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_96 = and i64 %mul_ln65_97, i64 %select_ln65_81" [d2.cpp:65]   --->   Operation 991 'and' 'and_ln65_96' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 992 [1/1] (0.48ns)   --->   "%tmp_119 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_33" [d2.cpp:65]   --->   Operation 992 'mux' 'tmp_119' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 993 [1/1] (0.00ns)   --->   "%zext_ln65_44 = zext i32 %tmp_119" [d2.cpp:65]   --->   Operation 993 'zext' 'zext_ln65_44' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 994 '%mul_ln65_98 = mul i64 %zext_ln65_44, i64 %zext_ln59_18'
ST_3 : Operation 994 [1/1] (2.09ns)   --->   "%mul_ln65_98 = mul i64 %zext_ln65_44, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 994 'mul' 'mul_ln65_98' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 995 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_60)   --->   "%and_ln65_97 = and i64 %mul_ln65_98, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 995 'and' 'and_ln65_97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 996 [1/1] (0.48ns)   --->   "%tmp_120 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_34" [d2.cpp:65]   --->   Operation 996 'mux' 'tmp_120' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 997 [1/1] (0.00ns)   --->   "%zext_ln65_45 = zext i32 %tmp_120" [d2.cpp:65]   --->   Operation 997 'zext' 'zext_ln65_45' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 998 '%mul_ln65_99 = mul i64 %zext_ln65_45, i64 %zext_ln59_18'
ST_3 : Operation 998 [1/1] (2.09ns)   --->   "%mul_ln65_99 = mul i64 %zext_ln65_45, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 998 'mul' 'mul_ln65_99' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 999 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_68)   --->   "%select_ln65_82 = select i1 %icmp_ln65_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 999 'select' 'select_ln65_82' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1000 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_68)   --->   "%and_ln65_98 = and i64 %mul_ln65_99, i64 %select_ln65_82" [d2.cpp:65]   --->   Operation 1000 'and' 'and_ln65_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1001 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_21)   --->   "%select_ln65_83 = select i1 %and_ln61_17, i3 6, i3 7" [d2.cpp:65]   --->   Operation 1001 'select' 'select_ln65_83' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1002 [1/1] (0.48ns)   --->   "%tmp_121 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_9" [d2.cpp:65]   --->   Operation 1002 'mux' 'tmp_121' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1003 [1/1] (0.00ns)   --->   "%zext_ln65_46 = zext i32 %tmp_121" [d2.cpp:65]   --->   Operation 1003 'zext' 'zext_ln65_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1004 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_99)   --->   "%select_ln65_84 = select i1 %and_ln61_17, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1004 'select' 'select_ln65_84' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1005 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_99 = and i64 %mul_ln59_3, i64 %select_ln65_84" [d2.cpp:65]   --->   Operation 1005 'and' 'and_ln65_99' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1006 '%mul_ln65_100 = mul i64 %zext_ln65_46, i64 %zext_ln59_18'
ST_3 : Operation 1006 [1/1] (2.09ns)   --->   "%mul_ln65_100 = mul i64 %zext_ln65_46, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1006 'mul' 'mul_ln65_100' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1007 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_100)   --->   "%select_ln65_85 = select i1 %icmp_ln65_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1007 'select' 'select_ln65_85' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1008 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_100 = and i64 %mul_ln65_100, i64 %select_ln65_85" [d2.cpp:65]   --->   Operation 1008 'and' 'and_ln65_100' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1009 [1/1] (0.00ns)   --->   "%zext_ln66_21 = zext i1 %icmp_ln65_7" [d2.cpp:66]   --->   Operation 1009 'zext' 'zext_ln66_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1010 [1/1] (0.79ns)   --->   "%sub_ln36_10 = sub i4 %sub_ln36_9, i4 %zext_ln66_21" [d2.cpp:36]   --->   Operation 1010 'sub' 'sub_ln36_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1011 [1/1] (0.44ns)   --->   "%select_ln61_2 = select i1 %and_ln61_17, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 1011 'select' 'select_ln61_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1012 [1/1] (0.00ns)   --->   "%zext_ln61_14 = zext i32 %select_ln61_2" [d2.cpp:61]   --->   Operation 1012 'zext' 'zext_ln61_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1013 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_21)   --->   "%zext_ln65_66 = zext i1 %and_ln61_18" [d2.cpp:65]   --->   Operation 1013 'zext' 'zext_ln65_66' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1014 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_21 = sub i3 %select_ln65_83, i3 %zext_ln65_66" [d2.cpp:65]   --->   Operation 1014 'sub' 'sub_ln65_21' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1015 [1/1] (0.00ns)   --->   "%sext_ln65_6 = sext i3 %sub_ln65_21" [d2.cpp:65]   --->   Operation 1015 'sext' 'sext_ln65_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1016 [1/1] (0.48ns)   --->   "%tmp_122 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_10" [d2.cpp:65]   --->   Operation 1016 'mux' 'tmp_122' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1017 [1/1] (0.00ns)   --->   "%zext_ln65_47 = zext i32 %tmp_122" [d2.cpp:65]   --->   Operation 1017 'zext' 'zext_ln65_47' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1018 '%mul_ln65_101 = mul i64 %zext_ln61_14, i64 %zext_ln59_18'
ST_3 : Operation 1018 [1/1] (2.09ns)   --->   "%mul_ln65_101 = mul i64 %zext_ln61_14, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1018 'mul' 'mul_ln65_101' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1019 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_101)   --->   "%select_ln65_86 = select i1 %and_ln61_18, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1019 'select' 'select_ln65_86' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1020 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_101 = and i64 %mul_ln65_101, i64 %select_ln65_86" [d2.cpp:65]   --->   Operation 1020 'and' 'and_ln65_101' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1021 '%mul_ln65_102 = mul i64 %zext_ln65_47, i64 %zext_ln59_18'
ST_3 : Operation 1021 [1/1] (2.09ns)   --->   "%mul_ln65_102 = mul i64 %zext_ln65_47, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1021 'mul' 'mul_ln65_102' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1022 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_102)   --->   "%select_ln65_87 = select i1 %icmp_ln65_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1022 'select' 'select_ln65_87' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1023 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_102 = and i64 %mul_ln65_102, i64 %select_ln65_87" [d2.cpp:65]   --->   Operation 1023 'and' 'and_ln65_102' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1024 [1/1] (0.00ns)   --->   "%zext_ln66_22 = zext i1 %icmp_ln65_8" [d2.cpp:66]   --->   Operation 1024 'zext' 'zext_ln66_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1025 [1/1] (0.79ns)   --->   "%sub_ln36_11 = sub i4 %sub_ln36_10, i4 %zext_ln66_22" [d2.cpp:36]   --->   Operation 1025 'sub' 'sub_ln36_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1026 [1/1] (0.48ns)   --->   "%tmp_123 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_6" [d2.cpp:61]   --->   Operation 1026 'mux' 'tmp_123' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1027 [1/1] (0.00ns)   --->   "%zext_ln61_15 = zext i32 %tmp_123" [d2.cpp:61]   --->   Operation 1027 'zext' 'zext_ln61_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1028 [1/1] (0.28ns)   --->   "%and_ln61_19 = and i1 %icmp_ln61_19, i1 %cmp69_3" [d2.cpp:61]   --->   Operation 1028 'and' 'and_ln61_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1029 [1/1] (0.00ns)   --->   "%zext_ln65_67 = zext i1 %and_ln61_19" [d2.cpp:65]   --->   Operation 1029 'zext' 'zext_ln65_67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1030 [1/1] (0.67ns)   --->   "%sub_ln65_22 = sub i3 %sub_ln65_21, i3 %zext_ln65_67" [d2.cpp:65]   --->   Operation 1030 'sub' 'sub_ln65_22' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1031 [1/1] (0.00ns)   --->   "%sext_ln65_7 = sext i3 %sub_ln65_22" [d2.cpp:65]   --->   Operation 1031 'sext' 'sext_ln65_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1032 [1/1] (0.48ns)   --->   "%tmp_124 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_11" [d2.cpp:65]   --->   Operation 1032 'mux' 'tmp_124' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1033 [1/1] (0.00ns)   --->   "%zext_ln65_48 = zext i32 %tmp_124" [d2.cpp:65]   --->   Operation 1033 'zext' 'zext_ln65_48' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1034 '%mul_ln65_103 = mul i64 %zext_ln61_15, i64 %zext_ln59_18'
ST_3 : Operation 1034 [1/1] (2.09ns)   --->   "%mul_ln65_103 = mul i64 %zext_ln61_15, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1034 'mul' 'mul_ln65_103' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1035 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_103)   --->   "%select_ln65_88 = select i1 %and_ln61_19, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1035 'select' 'select_ln65_88' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1036 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_103 = and i64 %mul_ln65_103, i64 %select_ln65_88" [d2.cpp:65]   --->   Operation 1036 'and' 'and_ln65_103' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1037 '%mul_ln65_104 = mul i64 %zext_ln65_48, i64 %zext_ln59_18'
ST_3 : Operation 1037 [1/1] (2.09ns)   --->   "%mul_ln65_104 = mul i64 %zext_ln65_48, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1037 'mul' 'mul_ln65_104' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1038 [1/1] (0.48ns)   --->   "%tmp_125 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_7" [d2.cpp:61]   --->   Operation 1038 'mux' 'tmp_125' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1039 [1/1] (0.00ns)   --->   "%zext_ln61_16 = zext i32 %tmp_125" [d2.cpp:61]   --->   Operation 1039 'zext' 'zext_ln61_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1040 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_104)   --->   "%and_ln61_20 = and i1 %icmp_ln61_20, i1 %cmp69_3" [d2.cpp:61]   --->   Operation 1040 'and' 'and_ln61_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1041 [1/1] (0.48ns)   --->   "%tmp_126 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_11" [d2.cpp:65]   --->   Operation 1041 'mux' 'tmp_126' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1042 [1/1] (0.00ns)   --->   "%zext_ln65_49 = zext i32 %tmp_126" [d2.cpp:65]   --->   Operation 1042 'zext' 'zext_ln65_49' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1043 '%mul_ln65_105 = mul i64 %zext_ln61_16, i64 %zext_ln59_18'
ST_3 : Operation 1043 [1/1] (2.09ns)   --->   "%mul_ln65_105 = mul i64 %zext_ln61_16, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1043 'mul' 'mul_ln65_105' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1044 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_104)   --->   "%select_ln65_89 = select i1 %and_ln61_20, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1044 'select' 'select_ln65_89' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1045 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_104 = and i64 %mul_ln65_105, i64 %select_ln65_89" [d2.cpp:65]   --->   Operation 1045 'and' 'and_ln65_104' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1046 '%mul_ln65_106 = mul i64 %zext_ln65_49, i64 %zext_ln59_18'
ST_3 : Operation 1046 [1/1] (2.09ns)   --->   "%mul_ln65_106 = mul i64 %zext_ln65_49, i64 %zext_ln59_18" [d2.cpp:65]   --->   Operation 1046 'mul' 'mul_ln65_106' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1047 [1/1] (0.48ns)   --->   "%tmp_127 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 1047 'mux' 'tmp_127' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1048 [1/1] (0.00ns)   --->   "%zext_ln59_22 = zext i32 %tmp_127" [d2.cpp:59]   --->   Operation 1048 'zext' 'zext_ln59_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1049 [1/1] (0.48ns)   --->   "%tmp_128 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_7" [d2.cpp:51]   --->   Operation 1049 'mux' 'tmp_128' <Predicate = (icmp_ln51_2)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1050 [1/1] (0.00ns)   --->   "%zext_ln51_4 = zext i32 %tmp_128" [d2.cpp:51]   --->   Operation 1050 'zext' 'zext_ln51_4' <Predicate = (icmp_ln51_2)> <Delay = 0.00>
ST_3 : Operation 1051 [1/1] (0.48ns)   --->   "%tmp_129 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_6" [d2.cpp:51]   --->   Operation 1051 'mux' 'tmp_129' <Predicate = (icmp_ln51_2)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1052 [1/1] (0.00ns)   --->   "%tmp_129_cast = zext i32 %tmp_129" [d2.cpp:51]   --->   Operation 1052 'zext' 'tmp_129_cast' <Predicate = (icmp_ln51_2)> <Delay = 0.00>
ST_3 : Operation 1053 [1/1] (1.01ns)   --->   "%tmp8 = add i33 %tmp_129_cast, i33 %zext_ln51_4" [d2.cpp:51]   --->   Operation 1053 'add' 'tmp8' <Predicate = (icmp_ln51_2)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1054 [1/1] (0.00ns)   --->   "%tmp8_cast = zext i33 %tmp8" [d2.cpp:51]   --->   Operation 1054 'zext' 'tmp8_cast' <Predicate = (icmp_ln51_2)> <Delay = 0.00>
ST_3 : [1/1] (0.57ns)   --->   Input mux for Operation 1055 '%tmp9 = mul i64 %tmp8_cast, i64 %zext_ln59_22'
ST_3 : Operation 1055 [1/1] (2.84ns)   --->   "%tmp9 = mul i64 %tmp8_cast, i64 %zext_ln59_22" [d2.cpp:51]   --->   Operation 1055 'mul' 'tmp9' <Predicate = (icmp_ln51_2)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1056 [1/1] (0.73ns)   --->   "%tmp_130 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load_35" [d2.cpp:63]   --->   Operation 1056 'mux' 'tmp_130' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1057 [1/1] (0.00ns)   --->   "%zext_ln63_28 = zext i32 %tmp_130" [d2.cpp:63]   --->   Operation 1057 'zext' 'zext_ln63_28' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1058 '%mul_ln63_6 = mul i64 %zext_ln63_28, i64 %zext_ln59_22'
ST_3 : Operation 1058 [1/1] (2.09ns)   --->   "%mul_ln63_6 = mul i64 %zext_ln63_28, i64 %zext_ln59_22" [d2.cpp:63]   --->   Operation 1058 'mul' 'mul_ln63_6' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1059 [1/1] (0.17ns)   --->   "%select_ln63_7 = select i1 %cmp138_4, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 1059 'select' 'select_ln63_7' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1060 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_3)   --->   "%and_ln63_6 = and i64 %mul_ln63_6, i64 %select_ln63_7" [d2.cpp:63]   --->   Operation 1060 'and' 'and_ln63_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1061 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63 = add i64 %and_ln65_2, i64 %and_ln65" [d2.cpp:63]   --->   Operation 1061 'add' 'add_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1062 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_1 = add i64 %add_ln63, i64 %and_ln65_1" [d2.cpp:63]   --->   Operation 1062 'add' 'add_ln63_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1063 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_2 = add i64 %and_ln63, i64 %and_ln63_1" [d2.cpp:63]   --->   Operation 1063 'add' 'add_ln63_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1064 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_3 = add i64 %and_ln63_3, i64 %and_ln63_6" [d2.cpp:63]   --->   Operation 1064 'add' 'add_ln63_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1065 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_4 = add i64 %add_ln63_3, i64 %add_ln63_2" [d2.cpp:63]   --->   Operation 1065 'add' 'add_ln63_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1066 '%mul_ln59_4 = mul i64 %zext_ln59_22, i64 %conv60_cast'
ST_3 : Operation 1066 [1/1] (2.09ns)   --->   "%mul_ln59_4 = mul i64 %zext_ln59_22, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 1066 'mul' 'mul_ln59_4' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1067 [1/1] (0.48ns)   --->   "%tmp_131 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_3" [d2.cpp:63]   --->   Operation 1067 'mux' 'tmp_131' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1068 [1/1] (0.00ns)   --->   "%zext_ln63_29 = zext i32 %tmp_131" [d2.cpp:63]   --->   Operation 1068 'zext' 'zext_ln63_29' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1069 '%mul_ln63_7 = mul i64 %zext_ln63_29, i64 %zext_ln59_22'
ST_3 : Operation 1069 [1/1] (2.09ns)   --->   "%mul_ln63_7 = mul i64 %zext_ln63_29, i64 %zext_ln59_22" [d2.cpp:63]   --->   Operation 1069 'mul' 'mul_ln63_7' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1070 [1/1] (0.37ns)   --->   "%and_ln63_7 = and i64 %mul_ln63_7, i64 %select_ln63_7" [d2.cpp:63]   --->   Operation 1070 'and' 'and_ln63_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1071 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_7 = add i64 %and_ln65_4, i64 %and_ln65_5" [d2.cpp:63]   --->   Operation 1071 'add' 'add_ln63_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1072 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_8 = add i64 %and_ln65_3, i64 %and_ln65_32" [d2.cpp:63]   --->   Operation 1072 'add' 'add_ln63_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1073 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_9 = add i64 %add_ln63_8, i64 %add_ln63_7" [d2.cpp:63]   --->   Operation 1073 'add' 'add_ln63_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1074 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_10 = add i64 %and_ln65_33, i64 %and_ln65_31" [d2.cpp:63]   --->   Operation 1074 'add' 'add_ln63_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1075 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_11 = add i64 %and_ln63_4, i64 %and_ln63_7" [d2.cpp:63]   --->   Operation 1075 'add' 'add_ln63_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1076 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_12 = add i64 %add_ln63_11, i64 %and_ln63_2" [d2.cpp:63]   --->   Operation 1076 'add' 'add_ln63_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1077 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_13 = add i64 %add_ln63_12, i64 %add_ln63_10" [d2.cpp:63]   --->   Operation 1077 'add' 'add_ln63_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1078 [1/1] (0.48ns)   --->   "%tmp_132 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_35" [d2.cpp:63]   --->   Operation 1078 'mux' 'tmp_132' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1079 [1/1] (0.00ns)   --->   "%zext_ln63_30 = zext i32 %tmp_132" [d2.cpp:63]   --->   Operation 1079 'zext' 'zext_ln63_30' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1080 '%mul_ln63_8 = mul i64 %zext_ln63_30, i64 %zext_ln59_22'
ST_3 : Operation 1080 [1/1] (2.09ns)   --->   "%mul_ln63_8 = mul i64 %zext_ln63_30, i64 %zext_ln59_22" [d2.cpp:63]   --->   Operation 1080 'mul' 'mul_ln63_8' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1081 [1/1] (0.37ns)   --->   "%and_ln63_8 = and i64 %mul_ln63_8, i64 %select_ln63_7" [d2.cpp:63]   --->   Operation 1081 'and' 'and_ln63_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1082 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_16 = add i64 %and_ln65_7, i64 %and_ln65_8" [d2.cpp:63]   --->   Operation 1082 'add' 'add_ln63_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1083 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_17 = add i64 %and_ln65_35, i64 %and_ln65_36" [d2.cpp:63]   --->   Operation 1083 'add' 'add_ln63_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1084 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_18 = add i64 %add_ln63_17, i64 %and_ln65_6" [d2.cpp:63]   --->   Operation 1084 'add' 'add_ln63_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1085 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_19 = add i64 %add_ln63_18, i64 %add_ln63_16" [d2.cpp:63]   --->   Operation 1085 'add' 'add_ln63_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1086 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_20 = add i64 %and_ln65_59, i64 %and_ln65_60" [d2.cpp:63]   --->   Operation 1086 'add' 'add_ln63_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1087 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_21 = add i64 %add_ln63_20, i64 %and_ln65_34" [d2.cpp:63]   --->   Operation 1087 'add' 'add_ln63_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1088 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_22 = add i64 %and_ln63_5, i64 %and_ln63_8" [d2.cpp:63]   --->   Operation 1088 'add' 'add_ln63_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1089 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_23 = add i64 %add_ln63_22, i64 %and_ln65_58" [d2.cpp:63]   --->   Operation 1089 'add' 'add_ln63_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1090 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_24 = add i64 %add_ln63_23, i64 %add_ln63_21" [d2.cpp:63]   --->   Operation 1090 'add' 'add_ln63_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1091 [1/1] (0.48ns)   --->   "%tmp_133 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_36" [d2.cpp:63]   --->   Operation 1091 'mux' 'tmp_133' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1092 [1/1] (0.00ns)   --->   "%zext_ln63_31 = zext i32 %tmp_133" [d2.cpp:63]   --->   Operation 1092 'zext' 'zext_ln63_31' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1093 '%mul_ln63_9 = mul i64 %zext_ln63_31, i64 %zext_ln59_22'
ST_3 : Operation 1093 [1/1] (2.09ns)   --->   "%mul_ln63_9 = mul i64 %zext_ln63_31, i64 %zext_ln59_22" [d2.cpp:63]   --->   Operation 1093 'mul' 'mul_ln63_9' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1094 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_35)   --->   "%and_ln63_9 = and i64 %mul_ln63_9, i64 %select_ln63_7" [d2.cpp:63]   --->   Operation 1094 'and' 'and_ln63_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1095 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_27 = add i64 %and_ln65_11, i64 %and_ln65_9" [d2.cpp:63]   --->   Operation 1095 'add' 'add_ln63_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1096 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_28 = add i64 %add_ln63_27, i64 %and_ln65_10" [d2.cpp:63]   --->   Operation 1096 'add' 'add_ln63_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1097 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_29 = add i64 %and_ln65_39, i64 %and_ln65_37" [d2.cpp:63]   --->   Operation 1097 'add' 'add_ln63_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1098 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_30 = add i64 %add_ln63_29, i64 %and_ln65_38" [d2.cpp:63]   --->   Operation 1098 'add' 'add_ln63_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1099 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_31 = add i64 %add_ln63_30, i64 %add_ln63_28" [d2.cpp:63]   --->   Operation 1099 'add' 'add_ln63_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1100 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_32 = add i64 %and_ln65_63, i64 %and_ln65_61" [d2.cpp:63]   --->   Operation 1100 'add' 'add_ln63_32' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1101 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_34 = add i64 %and_ln65_84, i64 %and_ln65_85" [d2.cpp:63]   --->   Operation 1101 'add' 'add_ln63_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1102 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_35 = add i64 %and_ln65_83, i64 %and_ln63_9" [d2.cpp:63]   --->   Operation 1102 'add' 'add_ln63_35' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1103 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_36 = add i64 %add_ln63_35, i64 %add_ln63_34" [d2.cpp:63]   --->   Operation 1103 'add' 'add_ln63_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1104 [1/1] (0.28ns)   --->   "%and_ln59_22 = and i1 %icmp_ln59_21, i1 %cmp69_4" [d2.cpp:59]   --->   Operation 1104 'and' 'and_ln59_22' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1105 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_11)   --->   "%select_ln63_8 = select i1 %and_ln59_22, i3 6, i3 7" [d2.cpp:63]   --->   Operation 1105 'select' 'select_ln63_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1106 [1/1] (0.48ns)   --->   "%tmp_134 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_12" [d2.cpp:63]   --->   Operation 1106 'mux' 'tmp_134' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1107 [1/1] (0.00ns)   --->   "%zext_ln63_32 = zext i32 %tmp_134" [d2.cpp:63]   --->   Operation 1107 'zext' 'zext_ln63_32' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1108 '%mul_ln65_107 = mul i64 %zext_ln63_32, i64 %zext_ln59_22'
ST_3 : Operation 1108 [1/1] (2.09ns)   --->   "%mul_ln65_107 = mul i64 %zext_ln63_32, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1108 'mul' 'mul_ln65_107' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1109 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%and_ln65_105 = and i64 %mul_ln65_107, i64 %select_ln63_7" [d2.cpp:65]   --->   Operation 1109 'and' 'and_ln65_105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1110 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_106)   --->   "%select_ln65_90 = select i1 %icmp_ln59_21, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1110 'select' 'select_ln65_90' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1111 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_106 = and i64 %mul_ln59_4, i64 %select_ln65_90" [d2.cpp:65]   --->   Operation 1111 'and' 'and_ln65_106' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1112 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%select_ln65_91 = select i1 %and_ln59_22, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1112 'select' 'select_ln65_91' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1113 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%and_ln65_107 = and i64 %mul_ln59_4, i64 %select_ln65_91" [d2.cpp:65]   --->   Operation 1113 'and' 'and_ln65_107' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1114 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_1 = add i64 %and_ln65_14, i64 %and_ln65_12" [d2.cpp:65]   --->   Operation 1114 'add' 'add_ln65_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1115 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_3 = add i64 %and_ln65_41, i64 %and_ln65_42" [d2.cpp:65]   --->   Operation 1115 'add' 'add_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1116 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_4 = add i64 %and_ln65_40, i64 %and_ln65_65" [d2.cpp:65]   --->   Operation 1116 'add' 'add_ln65_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1117 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_5 = add i64 %add_ln65_4, i64 %add_ln65_3" [d2.cpp:65]   --->   Operation 1117 'add' 'add_ln65_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1118 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_7 = add i64 %and_ln65_66, i64 %and_ln65_64" [d2.cpp:65]   --->   Operation 1118 'add' 'add_ln65_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1119 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_8 = add i64 %and_ln65_87, i64 %and_ln65_88" [d2.cpp:65]   --->   Operation 1119 'add' 'add_ln65_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1120 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_10 = add i64 %and_ln65_86, i64 %and_ln65_106" [d2.cpp:65]   --->   Operation 1120 'add' 'add_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1121 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_11 = add i64 %and_ln65_107, i64 %and_ln65_105" [d2.cpp:65]   --->   Operation 1121 'add' 'add_ln65_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1122 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_12 = add i64 %add_ln65_11, i64 %add_ln65_10" [d2.cpp:65]   --->   Operation 1122 'add' 'add_ln65_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1123 [1/1] (0.44ns)   --->   "%select_ln59_4 = select i1 %and_ln59_22, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 1123 'select' 'select_ln59_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1124 [1/1] (0.00ns)   --->   "%zext_ln59_23 = zext i32 %select_ln59_4" [d2.cpp:59]   --->   Operation 1124 'zext' 'zext_ln59_23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1125 [1/1] (0.28ns)   --->   "%and_ln59_23 = and i1 %icmp_ln59_22, i1 %cmp69_4" [d2.cpp:59]   --->   Operation 1125 'and' 'and_ln59_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1126 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_11)   --->   "%zext_ln63_43 = zext i1 %and_ln59_23" [d2.cpp:63]   --->   Operation 1126 'zext' 'zext_ln63_43' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1127 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_11 = sub i3 %select_ln63_8, i3 %zext_ln63_43" [d2.cpp:63]   --->   Operation 1127 'sub' 'sub_ln63_11' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1128 [1/1] (0.00ns)   --->   "%sext_ln63_11 = sext i3 %sub_ln63_11" [d2.cpp:63]   --->   Operation 1128 'sext' 'sext_ln63_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1129 [1/1] (0.48ns)   --->   "%tmp_135 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_23" [d2.cpp:63]   --->   Operation 1129 'mux' 'tmp_135' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1130 [1/1] (0.00ns)   --->   "%zext_ln63_33 = zext i32 %tmp_135" [d2.cpp:63]   --->   Operation 1130 'zext' 'zext_ln63_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1131 [1/1] (0.79ns)   --->   "%sub_ln65_24 = sub i4 %sub_ln65_23, i4 %zext_ln64_4" [d2.cpp:65]   --->   Operation 1131 'sub' 'sub_ln65_24' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1132 [1/1] (0.44ns)   --->   "%select_ln65_8 = select i1 %icmp_ln59_21, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 1132 'select' 'select_ln65_8' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1133 [1/1] (0.00ns)   --->   "%zext_ln65_50 = zext i32 %select_ln65_8" [d2.cpp:65]   --->   Operation 1133 'zext' 'zext_ln65_50' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1134 '%mul_ln65_108 = mul i64 %zext_ln65_50, i64 %zext_ln59_22'
ST_3 : Operation 1134 [1/1] (2.09ns)   --->   "%mul_ln65_108 = mul i64 %zext_ln65_50, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1134 'mul' 'mul_ln65_108' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1135 '%mul_ln65_109 = mul i64 %zext_ln59_23, i64 %zext_ln59_22'
ST_3 : Operation 1135 [1/1] (2.09ns)   --->   "%mul_ln65_109 = mul i64 %zext_ln59_23, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1135 'mul' 'mul_ln65_109' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1136 '%mul_ln65_110 = mul i64 %zext_ln63_33, i64 %zext_ln59_22'
ST_3 : Operation 1136 [1/1] (2.09ns)   --->   "%mul_ln65_110 = mul i64 %zext_ln63_33, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1136 'mul' 'mul_ln65_110' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1137 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_26)   --->   "%select_ln65_92 = select i1 %icmp_ln59_22, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1137 'select' 'select_ln65_92' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1138 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_26)   --->   "%and_ln65_108 = and i64 %mul_ln65_108, i64 %select_ln65_92" [d2.cpp:65]   --->   Operation 1138 'and' 'and_ln65_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1139 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_109)   --->   "%select_ln65_93 = select i1 %and_ln59_23, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1139 'select' 'select_ln65_93' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1140 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_109 = and i64 %mul_ln65_109, i64 %select_ln65_93" [d2.cpp:65]   --->   Operation 1140 'and' 'and_ln65_109' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1141 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_26)   --->   "%and_ln65_110 = and i64 %mul_ln65_110, i64 %select_ln63_7" [d2.cpp:65]   --->   Operation 1141 'and' 'and_ln65_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1142 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_16 = add i64 %and_ln65_17, i64 %and_ln65_15" [d2.cpp:65]   --->   Operation 1142 'add' 'add_ln65_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1143 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_18 = add i64 %and_ln65_44, i64 %and_ln65_45" [d2.cpp:65]   --->   Operation 1143 'add' 'add_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1144 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_19 = add i64 %and_ln65_43, i64 %and_ln65_68" [d2.cpp:65]   --->   Operation 1144 'add' 'add_ln65_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1145 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_20 = add i64 %add_ln65_19, i64 %add_ln65_18" [d2.cpp:65]   --->   Operation 1145 'add' 'add_ln65_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1146 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_22 = add i64 %and_ln65_69, i64 %and_ln65_67" [d2.cpp:65]   --->   Operation 1146 'add' 'add_ln65_22' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1147 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_23 = add i64 %and_ln65_90, i64 %and_ln65_91" [d2.cpp:65]   --->   Operation 1147 'add' 'add_ln65_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1148 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_25 = add i64 %and_ln65_89, i64 %and_ln65_109" [d2.cpp:65]   --->   Operation 1148 'add' 'add_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1149 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_26 = add i64 %and_ln65_110, i64 %and_ln65_108" [d2.cpp:65]   --->   Operation 1149 'add' 'add_ln65_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1150 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_27 = add i64 %add_ln65_26, i64 %add_ln65_25" [d2.cpp:65]   --->   Operation 1150 'add' 'add_ln65_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1151 [1/1] (0.00ns)   --->   "%sext_ln59_8 = sext i3 %sub_ln36_49" [d2.cpp:59]   --->   Operation 1151 'sext' 'sext_ln59_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1152 [1/1] (0.48ns)   --->   "%tmp_136 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_11" [d2.cpp:59]   --->   Operation 1152 'mux' 'tmp_136' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1153 [1/1] (0.00ns)   --->   "%zext_ln59_24 = zext i32 %tmp_136" [d2.cpp:59]   --->   Operation 1153 'zext' 'zext_ln59_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1154 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_112)   --->   "%and_ln59_24 = and i1 %icmp_ln59_23, i1 %cmp69_4" [d2.cpp:59]   --->   Operation 1154 'and' 'and_ln59_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1155 [1/1] (0.48ns)   --->   "%tmp_137 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_24" [d2.cpp:63]   --->   Operation 1155 'mux' 'tmp_137' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1156 [1/1] (0.00ns)   --->   "%zext_ln63_34 = zext i32 %tmp_137" [d2.cpp:63]   --->   Operation 1156 'zext' 'zext_ln63_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1157 [1/1] (0.48ns)   --->   "%tmp_138 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_8" [d2.cpp:65]   --->   Operation 1157 'mux' 'tmp_138' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1158 [1/1] (0.00ns)   --->   "%zext_ln65_51 = zext i32 %tmp_138" [d2.cpp:65]   --->   Operation 1158 'zext' 'zext_ln65_51' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1159 '%mul_ln65_111 = mul i64 %zext_ln65_51, i64 %zext_ln59_22'
ST_3 : Operation 1159 [1/1] (2.09ns)   --->   "%mul_ln65_111 = mul i64 %zext_ln65_51, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1159 'mul' 'mul_ln65_111' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1160 '%mul_ln65_112 = mul i64 %zext_ln59_24, i64 %zext_ln59_22'
ST_3 : Operation 1160 [1/1] (2.09ns)   --->   "%mul_ln65_112 = mul i64 %zext_ln59_24, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1160 'mul' 'mul_ln65_112' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1161 '%mul_ln65_113 = mul i64 %zext_ln63_34, i64 %zext_ln59_22'
ST_3 : Operation 1161 [1/1] (2.09ns)   --->   "%mul_ln65_113 = mul i64 %zext_ln63_34, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1161 'mul' 'mul_ln65_113' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1162 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_41)   --->   "%select_ln65_94 = select i1 %icmp_ln59_23, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1162 'select' 'select_ln65_94' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1163 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_41)   --->   "%and_ln65_111 = and i64 %mul_ln65_111, i64 %select_ln65_94" [d2.cpp:65]   --->   Operation 1163 'and' 'and_ln65_111' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1164 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_112)   --->   "%select_ln65_95 = select i1 %and_ln59_24, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1164 'select' 'select_ln65_95' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1165 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_112 = and i64 %mul_ln65_112, i64 %select_ln65_95" [d2.cpp:65]   --->   Operation 1165 'and' 'and_ln65_112' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1166 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_41)   --->   "%and_ln65_113 = and i64 %mul_ln65_113, i64 %select_ln63_7" [d2.cpp:65]   --->   Operation 1166 'and' 'and_ln65_113' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1167 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_31 = add i64 %and_ln65_20, i64 %and_ln65_18" [d2.cpp:65]   --->   Operation 1167 'add' 'add_ln65_31' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1168 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_33 = add i64 %and_ln65_47, i64 %and_ln65_48" [d2.cpp:65]   --->   Operation 1168 'add' 'add_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1169 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_34 = add i64 %and_ln65_46, i64 %and_ln65_71" [d2.cpp:65]   --->   Operation 1169 'add' 'add_ln65_34' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1170 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_35 = add i64 %add_ln65_34, i64 %add_ln65_33" [d2.cpp:65]   --->   Operation 1170 'add' 'add_ln65_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1171 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_37 = add i64 %and_ln65_72, i64 %and_ln65_70" [d2.cpp:65]   --->   Operation 1171 'add' 'add_ln65_37' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1172 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_38 = add i64 %and_ln65_93, i64 %and_ln65_94" [d2.cpp:65]   --->   Operation 1172 'add' 'add_ln65_38' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1173 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_40 = add i64 %and_ln65_92, i64 %and_ln65_112" [d2.cpp:65]   --->   Operation 1173 'add' 'add_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1174 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_41 = add i64 %and_ln65_113, i64 %and_ln65_111" [d2.cpp:65]   --->   Operation 1174 'add' 'add_ln65_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1175 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_42 = add i64 %add_ln65_41, i64 %add_ln65_40" [d2.cpp:65]   --->   Operation 1175 'add' 'add_ln65_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1176 [1/1] (0.48ns)   --->   "%tmp_139 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_8" [d2.cpp:65]   --->   Operation 1176 'mux' 'tmp_139' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1177 [1/1] (0.00ns)   --->   "%zext_ln65_52 = zext i32 %tmp_139" [d2.cpp:65]   --->   Operation 1177 'zext' 'zext_ln65_52' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1178 '%mul_ln65_114 = mul i64 %zext_ln65_52, i64 %zext_ln59_22'
ST_3 : Operation 1178 [1/1] (2.09ns)   --->   "%mul_ln65_114 = mul i64 %zext_ln65_52, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1178 'mul' 'mul_ln65_114' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1179 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_114)   --->   "%select_ln65_96 = select i1 %cmp69_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1179 'select' 'select_ln65_96' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1180 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_114 = and i64 %mul_ln65_114, i64 %select_ln65_96" [d2.cpp:65]   --->   Operation 1180 'and' 'and_ln65_114' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1181 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_46 = add i64 %and_ln65_21, i64 %and_ln65_49" [d2.cpp:65]   --->   Operation 1181 'add' 'add_ln65_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1182 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_47 = add i64 %and_ln65_95, i64 %and_ln65_114" [d2.cpp:65]   --->   Operation 1182 'add' 'add_ln65_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1183 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_48 = add i64 %add_ln65_47, i64 %and_ln65_73" [d2.cpp:65]   --->   Operation 1183 'add' 'add_ln65_48' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_49 = add i64 %add_ln65_48, i64 %add_ln65_46" [d2.cpp:65]   --->   Operation 1184 'add' 'add_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1185 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_40 = add i64 %arr_24_load_1, i64 %add_ln65_49" [d2.cpp:65]   --->   Operation 1185 'add' 'arr_40' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1186 [1/1] (0.48ns)   --->   "%tmp_140 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_37" [d2.cpp:65]   --->   Operation 1186 'mux' 'tmp_140' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1187 [1/1] (0.00ns)   --->   "%zext_ln65_53 = zext i32 %tmp_140" [d2.cpp:65]   --->   Operation 1187 'zext' 'zext_ln65_53' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1188 '%mul_ln65_115 = mul i64 %zext_ln65_53, i64 %zext_ln59_22'
ST_3 : Operation 1188 [1/1] (2.09ns)   --->   "%mul_ln65_115 = mul i64 %zext_ln65_53, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1188 'mul' 'mul_ln65_115' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1189 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_115)   --->   "%select_ln65_97 = select i1 %icmp_ln51_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1189 'select' 'select_ln65_97' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1190 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_115 = and i64 %mul_ln65_115, i64 %select_ln65_97" [d2.cpp:65]   --->   Operation 1190 'and' 'and_ln65_115' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_51 = add i64 %and_ln65_23, i64 %and_ln65_50" [d2.cpp:65]   --->   Operation 1191 'add' 'add_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1192 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_52 = add i64 %add_ln65_51, i64 %and_ln65_22" [d2.cpp:65]   --->   Operation 1192 'add' 'add_ln65_52' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1193 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_53 = add i64 %and_ln65_96, i64 %and_ln65_115" [d2.cpp:65]   --->   Operation 1193 'add' 'add_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1194 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_54 = add i64 %add_ln65_53, i64 %and_ln65_74" [d2.cpp:65]   --->   Operation 1194 'add' 'add_ln65_54' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1195 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_55 = add i64 %add_ln65_54, i64 %add_ln65_52" [d2.cpp:65]   --->   Operation 1195 'add' 'add_ln65_55' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1196 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_41 = add i64 %arr_25_load_1, i64 %add_ln65_55" [d2.cpp:65]   --->   Operation 1196 'add' 'arr_41' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1197 [1/1] (0.48ns)   --->   "%tmp_141 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_38" [d2.cpp:65]   --->   Operation 1197 'mux' 'tmp_141' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1198 [1/1] (0.00ns)   --->   "%zext_ln65_54 = zext i32 %tmp_141" [d2.cpp:65]   --->   Operation 1198 'zext' 'zext_ln65_54' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1199 '%mul_ln65_116 = mul i64 %zext_ln65_54, i64 %zext_ln59_22'
ST_3 : Operation 1199 [1/1] (2.09ns)   --->   "%mul_ln65_116 = mul i64 %zext_ln65_54, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1199 'mul' 'mul_ln65_116' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1200 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_60)   --->   "%and_ln65_116 = and i64 %mul_ln65_116, i64 %select_ln63_5" [d2.cpp:65]   --->   Operation 1200 'and' 'and_ln65_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_57 = add i64 %and_ln65_25, i64 %and_ln65_33" [d2.cpp:65]   --->   Operation 1201 'add' 'add_ln65_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1202 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_58 = add i64 %add_ln65_57, i64 %and_ln65_24" [d2.cpp:65]   --->   Operation 1202 'add' 'add_ln65_58' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1203 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_59 = add i64 %and_ln65_51, i64 %and_ln65_75" [d2.cpp:65]   --->   Operation 1203 'add' 'add_ln65_59' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1204 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_60 = add i64 %and_ln65_97, i64 %and_ln65_116" [d2.cpp:65]   --->   Operation 1204 'add' 'add_ln65_60' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1205 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_61 = add i64 %add_ln65_60, i64 %add_ln65_59" [d2.cpp:65]   --->   Operation 1205 'add' 'add_ln65_61' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1206 [1/1] (0.48ns)   --->   "%tmp_142 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_39" [d2.cpp:65]   --->   Operation 1206 'mux' 'tmp_142' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1207 [1/1] (0.00ns)   --->   "%zext_ln65_55 = zext i32 %tmp_142" [d2.cpp:65]   --->   Operation 1207 'zext' 'zext_ln65_55' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1208 '%mul_ln65_117 = mul i64 %zext_ln65_55, i64 %zext_ln59_22'
ST_3 : Operation 1208 [1/1] (2.09ns)   --->   "%mul_ln65_117 = mul i64 %zext_ln65_55, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1208 'mul' 'mul_ln65_117' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1209 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_68)   --->   "%select_ln65_98 = select i1 %icmp_ln65_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1209 'select' 'select_ln65_98' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1210 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_68)   --->   "%and_ln65_117 = and i64 %mul_ln65_117, i64 %select_ln65_98" [d2.cpp:65]   --->   Operation 1210 'and' 'and_ln65_117' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_64 = add i64 %and_ln65_26, i64 %mul_ln65_24" [d2.cpp:65]   --->   Operation 1211 'add' 'add_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1212 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_65 = add i64 %and_ln65_52, i64 %and_ln65_53" [d2.cpp:65]   --->   Operation 1212 'add' 'add_ln65_65' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1213 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_66 = add i64 %add_ln65_65, i64 %add_ln65_64" [d2.cpp:65]   --->   Operation 1213 'add' 'add_ln65_66' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1214 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_67 = add i64 %and_ln65_76, i64 %and_ln65_77" [d2.cpp:65]   --->   Operation 1214 'add' 'add_ln65_67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1215 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_68 = add i64 %and_ln65_98, i64 %and_ln65_117" [d2.cpp:65]   --->   Operation 1215 'add' 'add_ln65_68' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1216 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_69 = add i64 %add_ln65_68, i64 %add_ln65_67" [d2.cpp:65]   --->   Operation 1216 'add' 'add_ln65_69' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1217 [1/1] (0.48ns)   --->   "%tmp_143 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_40" [d2.cpp:65]   --->   Operation 1217 'mux' 'tmp_143' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1218 [1/1] (0.00ns)   --->   "%zext_ln65_56 = zext i32 %tmp_143" [d2.cpp:65]   --->   Operation 1218 'zext' 'zext_ln65_56' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1219 '%mul_ln65_118 = mul i64 %zext_ln65_56, i64 %zext_ln59_22'
ST_3 : Operation 1219 [1/1] (2.09ns)   --->   "%mul_ln65_118 = mul i64 %zext_ln65_56, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1219 'mul' 'mul_ln65_118' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1220 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_118)   --->   "%select_ln65_99 = select i1 %icmp_ln65_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1220 'select' 'select_ln65_99' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1221 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_118 = and i64 %mul_ln65_118, i64 %select_ln65_99" [d2.cpp:65]   --->   Operation 1221 'and' 'and_ln65_118' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1222 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_72 = add i64 %and_ln65_27, i64 %mul_ln65_26" [d2.cpp:65]   --->   Operation 1222 'add' 'add_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1223 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_73 = add i64 %and_ln65_54, i64 %mul_ln65_54" [d2.cpp:65]   --->   Operation 1223 'add' 'add_ln65_73' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1224 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_74 = add i64 %add_ln65_73, i64 %add_ln65_72" [d2.cpp:65]   --->   Operation 1224 'add' 'add_ln65_74' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1225 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_75 = add i64 %and_ln65_78, i64 %and_ln65_79" [d2.cpp:65]   --->   Operation 1225 'add' 'add_ln65_75' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1226 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_76 = add i64 %and_ln65_100, i64 %and_ln65_118" [d2.cpp:65]   --->   Operation 1226 'add' 'add_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1227 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_77 = add i64 %add_ln65_76, i64 %and_ln65_99" [d2.cpp:65]   --->   Operation 1227 'add' 'add_ln65_77' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1228 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_78 = add i64 %add_ln65_77, i64 %add_ln65_75" [d2.cpp:65]   --->   Operation 1228 'add' 'add_ln65_78' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1229 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_25)   --->   "%select_ln65_100 = select i1 %and_ln61_21, i3 6, i3 7" [d2.cpp:65]   --->   Operation 1229 'select' 'select_ln65_100' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1230 [1/1] (0.48ns)   --->   "%tmp_144 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_13" [d2.cpp:65]   --->   Operation 1230 'mux' 'tmp_144' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1231 [1/1] (0.00ns)   --->   "%zext_ln65_57 = zext i32 %tmp_144" [d2.cpp:65]   --->   Operation 1231 'zext' 'zext_ln65_57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1232 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_119)   --->   "%select_ln65_101 = select i1 %and_ln61_21, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1232 'select' 'select_ln65_101' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1233 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_119 = and i64 %mul_ln59_4, i64 %select_ln65_101" [d2.cpp:65]   --->   Operation 1233 'and' 'and_ln65_119' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1234 '%mul_ln65_119 = mul i64 %zext_ln65_57, i64 %zext_ln59_22'
ST_3 : Operation 1234 [1/1] (2.09ns)   --->   "%mul_ln65_119 = mul i64 %zext_ln65_57, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1234 'mul' 'mul_ln65_119' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1235 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_120)   --->   "%select_ln65_102 = select i1 %icmp_ln65_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1235 'select' 'select_ln65_102' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1236 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_120 = and i64 %mul_ln65_119, i64 %select_ln65_102" [d2.cpp:65]   --->   Operation 1236 'and' 'and_ln65_120' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1237 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_81 = add i64 %and_ln65_28, i64 %mul_ln65_28" [d2.cpp:65]   --->   Operation 1237 'add' 'add_ln65_81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_82 = add i64 %mul_ln65_56, i64 %and_ln65_80" [d2.cpp:65]   --->   Operation 1238 'add' 'add_ln65_82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1239 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_83 = add i64 %add_ln65_82, i64 %and_ln65_55" [d2.cpp:65]   --->   Operation 1239 'add' 'add_ln65_83' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1240 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_84 = add i64 %add_ln65_83, i64 %add_ln65_81" [d2.cpp:65]   --->   Operation 1240 'add' 'add_ln65_84' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1241 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_85 = add i64 %mul_ln65_81, i64 %and_ln65_101" [d2.cpp:65]   --->   Operation 1241 'add' 'add_ln65_85' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1242 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_86 = add i64 %and_ln65_119, i64 %and_ln65_120" [d2.cpp:65]   --->   Operation 1242 'add' 'add_ln65_86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1243 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_87 = add i64 %add_ln65_86, i64 %and_ln65_102" [d2.cpp:65]   --->   Operation 1243 'add' 'add_ln65_87' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1244 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_88 = add i64 %add_ln65_87, i64 %add_ln65_85" [d2.cpp:65]   --->   Operation 1244 'add' 'add_ln65_88' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1245 [1/1] (0.00ns)   --->   "%zext_ln66_27 = zext i1 %icmp_ln65_11" [d2.cpp:66]   --->   Operation 1245 'zext' 'zext_ln66_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1246 [1/1] (0.79ns)   --->   "%sub_ln36_14 = sub i4 %sub_ln36_13, i4 %zext_ln66_27" [d2.cpp:36]   --->   Operation 1246 'sub' 'sub_ln36_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1247 [1/1] (0.44ns)   --->   "%select_ln61_3 = select i1 %and_ln61_21, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 1247 'select' 'select_ln61_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1248 [1/1] (0.00ns)   --->   "%zext_ln61_17 = zext i32 %select_ln61_3" [d2.cpp:61]   --->   Operation 1248 'zext' 'zext_ln61_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1249 [1/1] (0.28ns)   --->   "%and_ln61_22 = and i1 %icmp_ln61_22, i1 %cmp69_4" [d2.cpp:61]   --->   Operation 1249 'and' 'and_ln61_22' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1250 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_25)   --->   "%zext_ln65_68 = zext i1 %and_ln61_22" [d2.cpp:65]   --->   Operation 1250 'zext' 'zext_ln65_68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1251 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_25 = sub i3 %select_ln65_100, i3 %zext_ln65_68" [d2.cpp:65]   --->   Operation 1251 'sub' 'sub_ln65_25' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1252 [1/1] (0.00ns)   --->   "%sext_ln65_9 = sext i3 %sub_ln65_25" [d2.cpp:65]   --->   Operation 1252 'sext' 'sext_ln65_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1253 [1/1] (0.48ns)   --->   "%tmp_145 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_14" [d2.cpp:65]   --->   Operation 1253 'mux' 'tmp_145' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1254 [1/1] (0.00ns)   --->   "%zext_ln65_58 = zext i32 %tmp_145" [d2.cpp:65]   --->   Operation 1254 'zext' 'zext_ln65_58' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1255 '%mul_ln65_120 = mul i64 %zext_ln61_17, i64 %zext_ln59_22'
ST_3 : Operation 1255 [1/1] (2.09ns)   --->   "%mul_ln65_120 = mul i64 %zext_ln61_17, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1255 'mul' 'mul_ln65_120' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1256 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_121)   --->   "%select_ln65_103 = select i1 %and_ln61_22, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1256 'select' 'select_ln65_103' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1257 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_121 = and i64 %mul_ln65_120, i64 %select_ln65_103" [d2.cpp:65]   --->   Operation 1257 'and' 'and_ln65_121' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1258 '%mul_ln65_121 = mul i64 %zext_ln65_58, i64 %zext_ln59_22'
ST_3 : Operation 1258 [1/1] (2.09ns)   --->   "%mul_ln65_121 = mul i64 %zext_ln65_58, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1258 'mul' 'mul_ln65_121' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1259 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_122)   --->   "%select_ln65_104 = select i1 %icmp_ln65_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1259 'select' 'select_ln65_104' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1260 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_122 = and i64 %mul_ln65_121, i64 %select_ln65_104" [d2.cpp:65]   --->   Operation 1260 'and' 'and_ln65_122' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1261 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_91 = add i64 %and_ln65_29, i64 %mul_ln65_30" [d2.cpp:65]   --->   Operation 1261 'add' 'add_ln65_91' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1262 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_92 = add i64 %mul_ln65_58, i64 %and_ln65_81" [d2.cpp:65]   --->   Operation 1262 'add' 'add_ln65_92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1263 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_93 = add i64 %add_ln65_92, i64 %and_ln65_56" [d2.cpp:65]   --->   Operation 1263 'add' 'add_ln65_93' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1264 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_94 = add i64 %add_ln65_93, i64 %add_ln65_91" [d2.cpp:65]   --->   Operation 1264 'add' 'add_ln65_94' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1265 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_95 = add i64 %mul_ln65_83, i64 %and_ln65_103" [d2.cpp:65]   --->   Operation 1265 'add' 'add_ln65_95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1266 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_96 = add i64 %and_ln65_121, i64 %and_ln65_122" [d2.cpp:65]   --->   Operation 1266 'add' 'add_ln65_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1267 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_97 = add i64 %add_ln65_96, i64 %mul_ln65_104" [d2.cpp:65]   --->   Operation 1267 'add' 'add_ln65_97' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1268 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_98 = add i64 %add_ln65_97, i64 %add_ln65_95" [d2.cpp:65]   --->   Operation 1268 'add' 'add_ln65_98' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1269 [1/1] (0.00ns)   --->   "%zext_ln66_28 = zext i1 %icmp_ln65_12" [d2.cpp:66]   --->   Operation 1269 'zext' 'zext_ln66_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1270 [1/1] (0.79ns)   --->   "%sub_ln36_15 = sub i4 %sub_ln36_14, i4 %zext_ln66_28" [d2.cpp:36]   --->   Operation 1270 'sub' 'sub_ln36_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1271 [1/1] (0.48ns)   --->   "%tmp_146 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_9" [d2.cpp:61]   --->   Operation 1271 'mux' 'tmp_146' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1272 [1/1] (0.00ns)   --->   "%zext_ln61_18 = zext i32 %tmp_146" [d2.cpp:61]   --->   Operation 1272 'zext' 'zext_ln61_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 1273 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_123)   --->   "%and_ln61_23 = and i1 %icmp_ln61_23, i1 %cmp69_4" [d2.cpp:61]   --->   Operation 1273 'and' 'and_ln61_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1274 [1/1] (0.48ns)   --->   "%tmp_147 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_15" [d2.cpp:65]   --->   Operation 1274 'mux' 'tmp_147' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1275 [1/1] (0.00ns)   --->   "%zext_ln65_59 = zext i32 %tmp_147" [d2.cpp:65]   --->   Operation 1275 'zext' 'zext_ln65_59' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1276 '%mul_ln65_122 = mul i64 %zext_ln61_18, i64 %zext_ln59_22'
ST_3 : Operation 1276 [1/1] (2.09ns)   --->   "%mul_ln65_122 = mul i64 %zext_ln61_18, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1276 'mul' 'mul_ln65_122' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1277 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_123)   --->   "%select_ln65_105 = select i1 %and_ln61_23, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1277 'select' 'select_ln65_105' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 1278 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_123 = and i64 %mul_ln65_122, i64 %select_ln65_105" [d2.cpp:65]   --->   Operation 1278 'and' 'and_ln65_123' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.32ns)   --->   Input mux for Operation 1279 '%mul_ln65_123 = mul i64 %zext_ln65_59, i64 %zext_ln59_22'
ST_3 : Operation 1279 [1/1] (2.09ns)   --->   "%mul_ln65_123 = mul i64 %zext_ln65_59, i64 %zext_ln59_22" [d2.cpp:65]   --->   Operation 1279 'mul' 'mul_ln65_123' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 1280 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_101 = add i64 %and_ln65_30, i64 %mul_ln65_32" [d2.cpp:65]   --->   Operation 1280 'add' 'add_ln65_101' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1281 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_102 = add i64 %mul_ln65_60, i64 %and_ln65_82" [d2.cpp:65]   --->   Operation 1281 'add' 'add_ln65_102' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1282 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_103 = add i64 %add_ln65_102, i64 %and_ln65_57" [d2.cpp:65]   --->   Operation 1282 'add' 'add_ln65_103' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1283 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_104 = add i64 %add_ln65_103, i64 %add_ln65_101" [d2.cpp:65]   --->   Operation 1283 'add' 'add_ln65_104' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1284 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_105 = add i64 %mul_ln65_85, i64 %and_ln65_104" [d2.cpp:65]   --->   Operation 1284 'add' 'add_ln65_105' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1285 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_106 = add i64 %and_ln65_123, i64 %mul_ln65_123" [d2.cpp:65]   --->   Operation 1285 'add' 'add_ln65_106' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1286 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_107 = add i64 %add_ln65_106, i64 %mul_ln65_106" [d2.cpp:65]   --->   Operation 1286 'add' 'add_ln65_107' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1287 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_108 = add i64 %add_ln65_107, i64 %add_ln65_105" [d2.cpp:65]   --->   Operation 1287 'add' 'add_ln65_108' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 1288 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_41, i64 %arr_25" [d2.cpp:42]   --->   Operation 1288 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1289 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_40, i64 %arr_24" [d2.cpp:42]   --->   Operation 1289 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 1390 [1/1] (0.00ns)   --->   "%arr_load = load i64 %arr"   --->   Operation 1390 'load' 'arr_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1391 [1/1] (0.00ns)   --->   "%arr_17_load = load i64 %arr_17"   --->   Operation 1391 'load' 'arr_17_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1392 [1/1] (0.00ns)   --->   "%arr_18_load = load i64 %arr_18"   --->   Operation 1392 'load' 'arr_18_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1393 [1/1] (0.00ns)   --->   "%arr_19_load = load i64 %arr_19"   --->   Operation 1393 'load' 'arr_19_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1394 [1/1] (0.00ns)   --->   "%arr_20_load = load i64 %arr_20"   --->   Operation 1394 'load' 'arr_20_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1395 [1/1] (0.00ns)   --->   "%arr_21_load = load i64 %arr_21"   --->   Operation 1395 'load' 'arr_21_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1396 [1/1] (0.00ns)   --->   "%arr_22_load = load i64 %arr_22"   --->   Operation 1396 'load' 'arr_22_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1397 [1/1] (0.00ns)   --->   "%arr_23_load = load i64 %arr_23"   --->   Operation 1397 'load' 'arr_23_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1398 [1/1] (0.00ns)   --->   "%arr_24_load = load i64 %arr_24"   --->   Operation 1398 'load' 'arr_24_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1399 [1/1] (0.00ns)   --->   "%arr_25_load = load i64 %arr_25"   --->   Operation 1399 'load' 'arr_25_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1400 [1/1] (0.00ns)   --->   "%arr_26_load = load i64 %arr_26"   --->   Operation 1400 'load' 'arr_26_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1401 [1/1] (0.00ns)   --->   "%arr_27_load = load i64 %arr_27"   --->   Operation 1401 'load' 'arr_27_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1402 [1/1] (0.00ns)   --->   "%arr_28_load = load i64 %arr_28"   --->   Operation 1402 'load' 'arr_28_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1403 [1/1] (0.00ns)   --->   "%arr_29_load = load i64 %arr_29"   --->   Operation 1403 'load' 'arr_29_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1404 [1/1] (0.00ns)   --->   "%arr_30_load = load i64 %arr_30"   --->   Operation 1404 'load' 'arr_30_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1405 [1/1] (0.00ns)   --->   "%arr_31_load = load i64 %arr_31"   --->   Operation 1405 'load' 'arr_31_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1406 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_4_21073_out, i64 %arr_31_load"   --->   Operation 1406 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1407 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_4_11071_out, i64 %arr_30_load"   --->   Operation 1407 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1408 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_41069_out, i64 %arr_29_load"   --->   Operation 1408 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1409 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_3_21067_out, i64 %arr_28_load"   --->   Operation 1409 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1410 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_3_11065_out, i64 %arr_27_load"   --->   Operation 1410 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1411 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_31063_out, i64 %arr_26_load"   --->   Operation 1411 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1412 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_2_21061_out, i64 %arr_25_load"   --->   Operation 1412 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1413 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_2_11059_out, i64 %arr_24_load"   --->   Operation 1413 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1414 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_21057_out, i64 %arr_23_load"   --->   Operation 1414 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1415 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_1_21055_out, i64 %arr_22_load"   --->   Operation 1415 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1416 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_1_11053_out, i64 %arr_21_load"   --->   Operation 1416 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1417 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_11051_out, i64 %arr_20_load"   --->   Operation 1417 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1418 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_21571049_out, i64 %arr_19_load"   --->   Operation 1418 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1419 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_4_1901047_out, i64 %arr_18_load"   --->   Operation 1419 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1420 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add175_41045_out, i64 %arr_17_load"   --->   Operation 1420 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1421 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add441044_out, i64 %arr_load"   --->   Operation 1421 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_3 : Operation 1422 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 1422 'ret' 'ret_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.97>
ST_4 : Operation 1290 [1/1] (0.00ns)   --->   "%arr_load_1 = load i64 %arr" [d2.cpp:51]   --->   Operation 1290 'load' 'arr_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1291 [1/1] (0.00ns)   --->   "%arr_17_load_1 = load i64 %arr_17" [d2.cpp:63]   --->   Operation 1291 'load' 'arr_17_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1292 [1/1] (0.00ns)   --->   "%arr_18_load_1 = load i64 %arr_18" [d2.cpp:63]   --->   Operation 1292 'load' 'arr_18_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1293 [1/1] (0.00ns)   --->   "%arr_19_load_1 = load i64 %arr_19" [d2.cpp:63]   --->   Operation 1293 'load' 'arr_19_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1294 [1/1] (0.00ns)   --->   "%arr_20_load_1 = load i64 %arr_20" [d2.cpp:63]   --->   Operation 1294 'load' 'arr_20_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1295 [1/1] (0.00ns)   --->   "%arr_21_load_1 = load i64 %arr_21" [d2.cpp:65]   --->   Operation 1295 'load' 'arr_21_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1296 [1/1] (0.00ns)   --->   "%arr_22_load_1 = load i64 %arr_22" [d2.cpp:65]   --->   Operation 1296 'load' 'arr_22_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1297 [1/1] (0.00ns)   --->   "%arr_23_load_1 = load i64 %arr_23" [d2.cpp:65]   --->   Operation 1297 'load' 'arr_23_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1298 [1/1] (0.00ns)   --->   "%arr_26_load_1 = load i64 %arr_26" [d2.cpp:65]   --->   Operation 1298 'load' 'arr_26_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1299 [1/1] (0.00ns)   --->   "%arr_27_load_1 = load i64 %arr_27" [d2.cpp:65]   --->   Operation 1299 'load' 'arr_27_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1300 [1/1] (0.00ns)   --->   "%arr_28_load_1 = load i64 %arr_28" [d2.cpp:65]   --->   Operation 1300 'load' 'arr_28_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1301 [1/1] (0.00ns)   --->   "%arr_29_load_1 = load i64 %arr_29" [d2.cpp:65]   --->   Operation 1301 'load' 'arr_29_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1302 [1/1] (0.00ns)   --->   "%arr_30_load_1 = load i64 %arr_30" [d2.cpp:65]   --->   Operation 1302 'load' 'arr_30_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1303 [1/1] (0.00ns)   --->   "%arr_31_load_1 = load i64 %arr_31" [d2.cpp:65]   --->   Operation 1303 'load' 'arr_31_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1304 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d2.cpp:44]   --->   Operation 1304 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1305 [1/1] (0.00ns)   --->   "%speclooptripcount_ln42 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d2.cpp:42]   --->   Operation 1305 'speclooptripcount' 'speclooptripcount_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1306 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d2.cpp:42]   --->   Operation 1306 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1307 [1/1] (1.08ns)   --->   "%add_ln51 = add i64 %tmp1, i64 %arr_load_1" [d2.cpp:51]   --->   Operation 1307 'add' 'add_ln51' <Predicate = (tmp_34)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1308 [1/1] (0.42ns)   --->   "%select_ln51 = select i1 %tmp_34, i64 %add_ln51, i64 %arr_load_1" [d2.cpp:51]   --->   Operation 1308 'select' 'select_ln51' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1309 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63" [d2.cpp:59]   --->   Operation 1309 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1310 [1/1] (0.00ns)   --->   "%zext_ln59_4 = zext i32 %tmp_11" [d2.cpp:59]   --->   Operation 1310 'zext' 'zext_ln59_4' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.32ns)   --->   Input mux for Operation 1311 '%mul_ln65_11 = mul i64 %zext_ln59_4, i64 %zext_ln59'
ST_4 : Operation 1311 [1/1] (2.09ns)   --->   "%mul_ln65_11 = mul i64 %zext_ln59_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 1311 'mul' 'mul_ln65_11' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1312 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_13)   --->   "%select_ln65_16 = select i1 %and_ln59_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1312 'select' 'select_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1313 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_13 = and i64 %mul_ln65_11, i64 %select_ln65_16" [d2.cpp:65]   --->   Operation 1313 'and' 'and_ln65_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1314 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_1" [d2.cpp:59]   --->   Operation 1314 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1315 [1/1] (0.00ns)   --->   "%zext_ln59_5 = zext i32 %tmp_14" [d2.cpp:59]   --->   Operation 1315 'zext' 'zext_ln59_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1316 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i1 %and_ln59_5" [d2.cpp:60]   --->   Operation 1316 'zext' 'zext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1317 [1/1] (0.79ns)   --->   "%sub_ln63_2 = sub i4 %sub_ln63_1, i4 %zext_ln60_2" [d2.cpp:63]   --->   Operation 1317 'sub' 'sub_ln63_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : [1/1] (1.32ns)   --->   Input mux for Operation 1318 '%mul_ln65_14 = mul i64 %zext_ln59_5, i64 %zext_ln59'
ST_4 : Operation 1318 [1/1] (2.09ns)   --->   "%mul_ln65_14 = mul i64 %zext_ln59_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 1318 'mul' 'mul_ln65_14' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1319 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_16)   --->   "%select_ln65_18 = select i1 %and_ln59_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1319 'select' 'select_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1320 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_16 = and i64 %mul_ln65_14, i64 %select_ln65_18" [d2.cpp:65]   --->   Operation 1320 'and' 'and_ln65_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1321 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_2" [d2.cpp:59]   --->   Operation 1321 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1322 [1/1] (0.00ns)   --->   "%zext_ln59_6 = zext i32 %tmp_17" [d2.cpp:59]   --->   Operation 1322 'zext' 'zext_ln59_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 1323 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_19)   --->   "%and_ln59_6 = and i1 %icmp_ln59_5, i1 %cmp69" [d2.cpp:59]   --->   Operation 1323 'and' 'and_ln59_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : [1/1] (1.32ns)   --->   Input mux for Operation 1324 '%mul_ln65_17 = mul i64 %zext_ln59_6, i64 %zext_ln59'
ST_4 : Operation 1324 [1/1] (2.09ns)   --->   "%mul_ln65_17 = mul i64 %zext_ln59_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 1324 'mul' 'mul_ln65_17' <Predicate = true> <Delay = 2.09> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1325 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_19)   --->   "%select_ln65_20 = select i1 %and_ln59_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 1325 'select' 'select_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1326 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_19 = and i64 %mul_ln65_17, i64 %select_ln65_20" [d2.cpp:65]   --->   Operation 1326 'and' 'and_ln65_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1327 [1/1] (1.08ns)   --->   "%add_ln51_4 = add i64 %tmp3, i64 %select_ln51" [d2.cpp:51]   --->   Operation 1327 'add' 'add_ln51_4' <Predicate = (tmp_71)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1328 [1/1] (0.42ns)   --->   "%select_ln51_3 = select i1 %tmp_71, i64 %add_ln51_4, i64 %select_ln51" [d2.cpp:51]   --->   Operation 1328 'select' 'select_ln51_3' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1329 [1/1] (1.08ns)   --->   "%add_ln51_8 = add i64 %tmp5, i64 %select_ln51_3" [d2.cpp:51]   --->   Operation 1329 'add' 'add_ln51_8' <Predicate = (icmp_ln51)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1330 [1/1] (0.42ns)   --->   "%select_ln51_6 = select i1 %icmp_ln51, i64 %add_ln51_8, i64 %select_ln51_3" [d2.cpp:51]   --->   Operation 1330 'select' 'select_ln51_6' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1331 [1/1] (1.08ns)   --->   "%add_ln51_12 = add i64 %tmp7, i64 %select_ln51_6" [d2.cpp:51]   --->   Operation 1331 'add' 'add_ln51_12' <Predicate = (icmp_ln51_1)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1332 [1/1] (0.42ns)   --->   "%select_ln51_9 = select i1 %icmp_ln51_1, i64 %add_ln51_12, i64 %select_ln51_6" [d2.cpp:51]   --->   Operation 1332 'select' 'select_ln51_9' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1333 [1/1] (1.08ns)   --->   "%add_ln51_16 = add i64 %tmp9, i64 %select_ln51_9" [d2.cpp:51]   --->   Operation 1333 'add' 'add_ln51_16' <Predicate = (icmp_ln51_2)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 1334 [1/1] (0.42ns)   --->   "%arr_32 = select i1 %icmp_ln51_2, i64 %add_ln51_16, i64 %select_ln51_9" [d2.cpp:51]   --->   Operation 1334 'select' 'arr_32' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 1335 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_5 = add i64 %add_ln63_4, i64 %add_ln63_1" [d2.cpp:63]   --->   Operation 1335 'add' 'add_ln63_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1336 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_33 = add i64 %arr_17_load_1, i64 %add_ln63_5" [d2.cpp:63]   --->   Operation 1336 'add' 'arr_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1337 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_14 = add i64 %add_ln63_13, i64 %add_ln63_9" [d2.cpp:63]   --->   Operation 1337 'add' 'add_ln63_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1338 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_34 = add i64 %arr_18_load_1, i64 %add_ln63_14" [d2.cpp:63]   --->   Operation 1338 'add' 'arr_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_25 = add i64 %add_ln63_24, i64 %add_ln63_19" [d2.cpp:63]   --->   Operation 1339 'add' 'add_ln63_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1340 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_35 = add i64 %arr_19_load_1, i64 %add_ln63_25" [d2.cpp:63]   --->   Operation 1340 'add' 'arr_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1341 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_33 = add i64 %add_ln63_32, i64 %and_ln65_62" [d2.cpp:63]   --->   Operation 1341 'add' 'add_ln63_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1342 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_37 = add i64 %add_ln63_36, i64 %add_ln63_33" [d2.cpp:63]   --->   Operation 1342 'add' 'add_ln63_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_38 = add i64 %add_ln63_37, i64 %add_ln63_31" [d2.cpp:63]   --->   Operation 1343 'add' 'add_ln63_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1344 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_36 = add i64 %arr_20_load_1, i64 %add_ln63_38" [d2.cpp:63]   --->   Operation 1344 'add' 'arr_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1345 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_2 = add i64 %add_ln65_1, i64 %and_ln65_13" [d2.cpp:65]   --->   Operation 1345 'add' 'add_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1346 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_6 = add i64 %add_ln65_5, i64 %add_ln65_2" [d2.cpp:65]   --->   Operation 1346 'add' 'add_ln65_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1347 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_9 = add i64 %add_ln65_8, i64 %add_ln65_7" [d2.cpp:65]   --->   Operation 1347 'add' 'add_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1348 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_13 = add i64 %add_ln65_12, i64 %add_ln65_9" [d2.cpp:65]   --->   Operation 1348 'add' 'add_ln65_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1349 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_14 = add i64 %add_ln65_13, i64 %add_ln65_6" [d2.cpp:65]   --->   Operation 1349 'add' 'add_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1350 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_37 = add i64 %arr_21_load_1, i64 %add_ln65_14" [d2.cpp:65]   --->   Operation 1350 'add' 'arr_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1351 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_17 = add i64 %add_ln65_16, i64 %and_ln65_16" [d2.cpp:65]   --->   Operation 1351 'add' 'add_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1352 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_21 = add i64 %add_ln65_20, i64 %add_ln65_17" [d2.cpp:65]   --->   Operation 1352 'add' 'add_ln65_21' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1353 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_24 = add i64 %add_ln65_23, i64 %add_ln65_22" [d2.cpp:65]   --->   Operation 1353 'add' 'add_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1354 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_28 = add i64 %add_ln65_27, i64 %add_ln65_24" [d2.cpp:65]   --->   Operation 1354 'add' 'add_ln65_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1355 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_29 = add i64 %add_ln65_28, i64 %add_ln65_21" [d2.cpp:65]   --->   Operation 1355 'add' 'add_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1356 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_38 = add i64 %arr_22_load_1, i64 %add_ln65_29" [d2.cpp:65]   --->   Operation 1356 'add' 'arr_38' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1357 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_32 = add i64 %add_ln65_31, i64 %and_ln65_19" [d2.cpp:65]   --->   Operation 1357 'add' 'add_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1358 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_36 = add i64 %add_ln65_35, i64 %add_ln65_32" [d2.cpp:65]   --->   Operation 1358 'add' 'add_ln65_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1359 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_39 = add i64 %add_ln65_38, i64 %add_ln65_37" [d2.cpp:65]   --->   Operation 1359 'add' 'add_ln65_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1360 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_43 = add i64 %add_ln65_42, i64 %add_ln65_39" [d2.cpp:65]   --->   Operation 1360 'add' 'add_ln65_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1361 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_44 = add i64 %add_ln65_43, i64 %add_ln65_36" [d2.cpp:65]   --->   Operation 1361 'add' 'add_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1362 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_39 = add i64 %arr_23_load_1, i64 %add_ln65_44" [d2.cpp:65]   --->   Operation 1362 'add' 'arr_39' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1363 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_62 = add i64 %add_ln65_61, i64 %add_ln65_58" [d2.cpp:65]   --->   Operation 1363 'add' 'add_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1364 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_42 = add i64 %arr_26_load_1, i64 %add_ln65_62" [d2.cpp:65]   --->   Operation 1364 'add' 'arr_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1365 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_70 = add i64 %add_ln65_69, i64 %add_ln65_66" [d2.cpp:65]   --->   Operation 1365 'add' 'add_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1366 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_43 = add i64 %arr_27_load_1, i64 %add_ln65_70" [d2.cpp:65]   --->   Operation 1366 'add' 'arr_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_79 = add i64 %add_ln65_78, i64 %add_ln65_74" [d2.cpp:65]   --->   Operation 1367 'add' 'add_ln65_79' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1368 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_44 = add i64 %arr_28_load_1, i64 %add_ln65_79" [d2.cpp:65]   --->   Operation 1368 'add' 'arr_44' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1369 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_89 = add i64 %add_ln65_88, i64 %add_ln65_84" [d2.cpp:65]   --->   Operation 1369 'add' 'add_ln65_89' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1370 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_45 = add i64 %arr_29_load_1, i64 %add_ln65_89" [d2.cpp:65]   --->   Operation 1370 'add' 'arr_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1371 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_99 = add i64 %add_ln65_98, i64 %add_ln65_94" [d2.cpp:65]   --->   Operation 1371 'add' 'add_ln65_99' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1372 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_46 = add i64 %arr_30_load_1, i64 %add_ln65_99" [d2.cpp:65]   --->   Operation 1372 'add' 'arr_46' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1373 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_109 = add i64 %add_ln65_108, i64 %add_ln65_104" [d2.cpp:65]   --->   Operation 1373 'add' 'add_ln65_109' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1374 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_47 = add i64 %arr_31_load_1, i64 %add_ln65_109" [d2.cpp:65]   --->   Operation 1374 'add' 'arr_47' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 1375 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_47, i64 %arr_31" [d2.cpp:42]   --->   Operation 1375 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1376 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_46, i64 %arr_30" [d2.cpp:42]   --->   Operation 1376 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1377 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_45, i64 %arr_29" [d2.cpp:42]   --->   Operation 1377 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1378 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_44, i64 %arr_28" [d2.cpp:42]   --->   Operation 1378 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1379 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_43, i64 %arr_27" [d2.cpp:42]   --->   Operation 1379 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1380 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_42, i64 %arr_26" [d2.cpp:42]   --->   Operation 1380 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1381 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_39, i64 %arr_23" [d2.cpp:42]   --->   Operation 1381 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1382 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_38, i64 %arr_22" [d2.cpp:42]   --->   Operation 1382 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1383 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_37, i64 %arr_21" [d2.cpp:42]   --->   Operation 1383 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1384 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_36, i64 %arr_20" [d2.cpp:42]   --->   Operation 1384 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1385 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_35, i64 %arr_19" [d2.cpp:42]   --->   Operation 1385 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1386 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_34, i64 %arr_18" [d2.cpp:42]   --->   Operation 1386 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1387 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_33, i64 %arr_17" [d2.cpp:42]   --->   Operation 1387 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1388 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_32, i64 %arr" [d2.cpp:42]   --->   Operation 1388 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 1389 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body23" [d2.cpp:42]   --->   Operation 1389 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [68]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [102]  (0.427 ns)

 <State 2>: 7.752ns
The critical path consists of the following:
	'load' operation ('k1_load', d2.cpp:42) on local variable 'k1' [129]  (0.000 ns)
	'add' operation ('k1', d2.cpp:51) [156]  (1.016 ns)
	'select' operation ('k1', d2.cpp:51) [168]  (0.449 ns)
	'add' operation ('k1', d2.cpp:51) [426]  (1.016 ns)
	'select' operation ('k1', d2.cpp:51) [438]  (0.449 ns)
	'add' operation ('k1', d2.cpp:51) [662]  (1.016 ns)
	'select' operation ('k1', d2.cpp:51) [674]  (0.449 ns)
	'add' operation ('k1', d2.cpp:51) [885]  (1.016 ns)
	'select' operation ('k1', d2.cpp:51) [897]  (0.449 ns)
	'add' operation ('k1', d2.cpp:51) [1089]  (1.016 ns)
	'select' operation ('k1', d2.cpp:51) [1101]  (0.449 ns)
	'store' operation ('store_ln42', d2.cpp:42) of variable 'k1', d2.cpp:51 on local variable 'k1' [1432]  (0.427 ns)

 <State 3>: 7.271ns
The critical path consists of the following:
	'sub' operation ('sub_ln65_16', d2.cpp:65) [849]  (0.673 ns)
	'sub' operation ('sub_ln65_17', d2.cpp:65) [862]  (0.673 ns)
	'mux' operation ('tmp_100', d2.cpp:61) [869]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.321 ns)
'mul' operation ('mul_ln65_84', d2.cpp:65) [876]  (2.099 ns)
	'and' operation ('and_ln65_82', d2.cpp:65) [878]  (0.379 ns)
	'add' operation ('add_ln65_102', d2.cpp:65) [1404]  (0.000 ns)
	'add' operation ('add_ln65_103', d2.cpp:65) [1405]  (0.819 ns)
	'add' operation ('add_ln65_104', d2.cpp:65) [1406]  (0.819 ns)

 <State 4>: 7.972ns
The critical path consists of the following:
	'load' operation ('arr_load_1', d2.cpp:51) on local variable 'arr' [130]  (0.000 ns)
	'add' operation ('add_ln51', d2.cpp:51) [165]  (1.085 ns)
	'select' operation ('select_ln51', d2.cpp:51) [166]  (0.424 ns)
	'add' operation ('add_ln51_4', d2.cpp:51) [435]  (1.085 ns)
	'select' operation ('select_ln51_3', d2.cpp:51) [436]  (0.424 ns)
	'add' operation ('add_ln51_8', d2.cpp:51) [671]  (1.085 ns)
	'select' operation ('select_ln51_6', d2.cpp:51) [672]  (0.424 ns)
	'add' operation ('add_ln51_12', d2.cpp:51) [894]  (1.085 ns)
	'select' operation ('select_ln51_9', d2.cpp:51) [895]  (0.424 ns)
	'add' operation ('add_ln51_16', d2.cpp:51) [1098]  (1.085 ns)
	'select' operation ('arr', d2.cpp:51) [1099]  (0.424 ns)
	'store' operation ('store_ln42', d2.cpp:42) of variable 'arr', d2.cpp:51 on local variable 'arr' [1431]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
