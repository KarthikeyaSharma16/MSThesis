

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_42_1'
================================================================
* Date:           Fri May 10 15:20:23 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_27 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.287 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_42_1  |        6|        6|         3|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.66>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k_s = alloca i32 1"   --->   Operation 6 'alloca' 'k_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr = alloca i32 1"   --->   Operation 8 'alloca' 'arr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_17 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_18 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_19 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_20 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_21 = alloca i32 1"   --->   Operation 13 'alloca' 'arr_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_22 = alloca i32 1"   --->   Operation 14 'alloca' 'arr_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arr_23 = alloca i32 1"   --->   Operation 15 'alloca' 'arr_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arr_24 = alloca i32 1"   --->   Operation 16 'alloca' 'arr_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arr_25 = alloca i32 1"   --->   Operation 17 'alloca' 'arr_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arr_26 = alloca i32 1"   --->   Operation 18 'alloca' 'arr_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_27 = alloca i32 1"   --->   Operation 19 'alloca' 'arr_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_28 = alloca i32 1"   --->   Operation 20 'alloca' 'arr_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_29 = alloca i32 1"   --->   Operation 21 'alloca' 'arr_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arr_30 = alloca i32 1"   --->   Operation 22 'alloca' 'arr_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arr_31 = alloca i32 1"   --->   Operation 23 'alloca' 'arr_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 24 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 25 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 26 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 27 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%conv60_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv60"   --->   Operation 28 'read' 'conv60_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 29 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 30 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 31 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 32 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 33 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 34 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 35 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 36 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 37 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 38 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 39 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 40 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 41 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 42 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 43 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 44 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 45 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 46 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 47 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 48 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 49 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 50 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 51 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 52 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 53 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 54 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 55 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 56 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 57 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%conv60_cast = zext i32 %conv60_read"   --->   Operation 58 'zext' 'conv60_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 59 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 60 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 61 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_31"   --->   Operation 61 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_30"   --->   Operation 62 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_29"   --->   Operation 63 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_28"   --->   Operation 64 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_27"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_26"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_25"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_24"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_23"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_22"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_21"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_20"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_19"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_18"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_17"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 8, i32 %k1"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %k_s"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body23"   --->   Operation 79 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [d2.cpp:65]   --->   Operation 80 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%icmp_ln42 = icmp_eq  i4 %i_2, i4 0" [d2.cpp:42]   --->   Operation 81 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body23.split_ifconv, void %for.body214.preheader.exitStub" [d2.cpp:42]   --->   Operation 82 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%k_load_37 = load i4 %k" [d2.cpp:65]   --->   Operation 83 'load' 'k_load_37' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i4 %i_2" [d2.cpp:42]   --->   Operation 84 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_34 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d2.cpp:51]   --->   Operation 85 'bitselect' 'tmp_34' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 86 'mux' 'tmp_1' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i32 %tmp_1" [d2.cpp:59]   --->   Operation 87 'zext' 'zext_ln59' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%empty = add i5 %zext_ln42, i5 1" [d2.cpp:42]   --->   Operation 88 'add' 'empty' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.79ns)   --->   "%cmp69 = icmp_ugt  i4 %i_2, i4 8" [d2.cpp:65]   --->   Operation 89 'icmp' 'cmp69' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.79ns)   --->   "%empty_38 = add i5 %zext_ln42, i5 25" [d2.cpp:42]   --->   Operation 90 'add' 'empty_38' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%cmp138 = icmp_ugt  i4 %i_2, i4 6" [d2.cpp:65]   --->   Operation 91 'icmp' 'cmp138' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.31ns)   --->   Input mux for Operation 92 '%mul_ln59 = mul i64 %zext_ln59, i64 %conv60_cast'
ST_1 : Operation 92 [1/1] (2.10ns)   --->   "%mul_ln59 = mul i64 %zext_ln59, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 92 'mul' 'mul_ln59' <Predicate = (!icmp_ln42)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_35 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d2.cpp:59]   --->   Operation 93 'bitselect' 'tmp_35' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.28ns)   --->   "%and_ln59 = and i1 %tmp_35, i1 %cmp69" [d2.cpp:59]   --->   Operation 94 'and' 'and_ln59' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node add_ln65)   --->   "%select_ln65_1 = select i1 %cmp138, i4 6, i4 7" [d2.cpp:65]   --->   Operation 95 'select' 'select_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln65 = add i4 %select_ln65_1, i4 %k_load_37" [d2.cpp:65]   --->   Operation 96 'add' 'add_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node add_ln63)   --->   "%tmp_36 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d2.cpp:65]   --->   Operation 97 'bitselect' 'tmp_36' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln63)   --->   "%select_ln65_5 = select i1 %tmp_36, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 98 'select' 'select_ln65_5' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node add_ln63)   --->   "%and_ln65_1 = and i64 %mul_ln59, i64 %select_ln65_5" [d2.cpp:65]   --->   Operation 99 'and' 'and_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln63)   --->   "%select_ln65_6 = select i1 %and_ln59, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 100 'select' 'select_ln65_6' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln63)   --->   "%and_ln65_2 = and i64 %mul_ln59, i64 %select_ln65_6" [d2.cpp:65]   --->   Operation 101 'and' 'and_ln65_2' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_31)   --->   "%select_ln59_3 = select i1 %tmp_35, i3 6, i3 7" [d2.cpp:59]   --->   Operation 102 'select' 'select_ln59_3' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.78ns)   --->   "%icmp_ln59 = icmp_ugt  i5 %empty, i5 14" [d2.cpp:59]   --->   Operation 103 'icmp' 'icmp_ln59' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i1 %cmp138" [d2.cpp:64]   --->   Operation 104 'zext' 'zext_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.79ns)   --->   "%sub_ln65_18 = sub i4 %add_ln65, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 105 'sub' 'sub_ln65_18' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_31)   --->   "%zext_ln36 = zext i1 %icmp_ln59" [d2.cpp:36]   --->   Operation 106 'zext' 'zext_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_31 = sub i3 %select_ln59_3, i3 %zext_ln36" [d2.cpp:36]   --->   Operation 107 'sub' 'sub_ln36_31' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.78ns)   --->   "%icmp_ln59_1 = icmp_ugt  i5 %empty, i5 13" [d2.cpp:59]   --->   Operation 108 'icmp' 'icmp_ln59_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i1 %icmp_ln59_1" [d2.cpp:36]   --->   Operation 109 'zext' 'zext_ln36_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.67ns)   --->   "%sub_ln36_22 = sub i3 %sub_ln36_31, i3 %zext_ln36_1" [d2.cpp:36]   --->   Operation 110 'sub' 'sub_ln36_22' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%sext_ln59_1 = sext i3 %sub_ln36_22" [d2.cpp:59]   --->   Operation 111 'sext' 'sext_ln59_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.78ns)   --->   "%icmp_ln59_2 = icmp_ugt  i5 %empty, i5 12" [d2.cpp:59]   --->   Operation 112 'icmp' 'icmp_ln59_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i1 %icmp_ln59_2" [d2.cpp:66]   --->   Operation 113 'zext' 'zext_ln66' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.67ns)   --->   "%sub_ln36_23 = sub i4 %sext_ln59_1, i4 %zext_ln66" [d2.cpp:36]   --->   Operation 114 'sub' 'sub_ln36_23' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.78ns)   --->   "%icmp_ln59_3 = icmp_ugt  i5 %empty, i5 11" [d2.cpp:59]   --->   Operation 115 'icmp' 'icmp_ln59_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln66_1 = zext i1 %icmp_ln59_3" [d2.cpp:66]   --->   Operation 116 'zext' 'zext_ln66_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.79ns)   --->   "%sub_ln36_24 = sub i4 %sub_ln36_23, i4 %zext_ln66_1" [d2.cpp:36]   --->   Operation 117 'sub' 'sub_ln36_24' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.78ns)   --->   "%icmp_ln59_4 = icmp_ugt  i5 %empty, i5 10" [d2.cpp:59]   --->   Operation 118 'icmp' 'icmp_ln59_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln66_2 = zext i1 %icmp_ln59_4" [d2.cpp:66]   --->   Operation 119 'zext' 'zext_ln66_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.79ns)   --->   "%sub_ln36_9 = sub i4 %sub_ln36_24, i4 %zext_ln66_2" [d2.cpp:36]   --->   Operation 120 'sub' 'sub_ln36_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 121 [1/1] (0.78ns)   --->   "%icmp_ln59_5 = icmp_ugt  i5 %empty, i5 9" [d2.cpp:59]   --->   Operation 121 'icmp' 'icmp_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln66_3 = zext i1 %icmp_ln59_5" [d2.cpp:66]   --->   Operation 122 'zext' 'zext_ln66_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.79ns)   --->   "%sub_ln36_10 = sub i4 %sub_ln36_9, i4 %zext_ln66_3" [d2.cpp:36]   --->   Operation 123 'sub' 'sub_ln36_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.78ns)   --->   "%icmp_ln65 = icmp_ugt  i5 %empty, i5 8" [d2.cpp:65]   --->   Operation 124 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln66_4 = zext i1 %icmp_ln65" [d2.cpp:66]   --->   Operation 125 'zext' 'zext_ln66_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.79ns)   --->   "%sub_ln36_11 = sub i4 %sub_ln36_10, i4 %zext_ln66_4" [d2.cpp:36]   --->   Operation 126 'sub' 'sub_ln36_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_67 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_38, i32 3, i32 4" [d2.cpp:61]   --->   Operation 127 'partselect' 'tmp_67' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.54ns)   --->   "%icmp_ln61 = icmp_eq  i2 %tmp_67, i2 1" [d2.cpp:61]   --->   Operation 128 'icmp' 'icmp_ln61' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_68 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty, i32 3, i32 4" [d2.cpp:65]   --->   Operation 129 'partselect' 'tmp_68' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.54ns)   --->   "%icmp_ln65_1 = icmp_ne  i2 %tmp_68, i2 0" [d2.cpp:65]   --->   Operation 130 'icmp' 'icmp_ln65_1' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 131 [1/1] (0.78ns)   --->   "%icmp_ln61_1 = icmp_sgt  i5 %empty_38, i5 6" [d2.cpp:61]   --->   Operation 131 'icmp' 'icmp_ln61_1' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.78ns)   --->   "%icmp_ln65_2 = icmp_ugt  i5 %empty, i5 6" [d2.cpp:65]   --->   Operation 132 'icmp' 'icmp_ln65_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 133 [1/1] (0.78ns)   --->   "%icmp_ln61_2 = icmp_sgt  i5 %empty_38, i5 5" [d2.cpp:61]   --->   Operation 133 'icmp' 'icmp_ln61_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.28ns)   --->   "%and_ln61_2 = and i1 %icmp_ln61_2, i1 %cmp69" [d2.cpp:61]   --->   Operation 134 'and' 'and_ln61_2' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 135 [1/1] (0.78ns)   --->   "%icmp_ln65_3 = icmp_ugt  i5 %empty, i5 5" [d2.cpp:65]   --->   Operation 135 'icmp' 'icmp_ln65_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 136 [1/1] (0.78ns)   --->   "%icmp_ln61_3 = icmp_sgt  i5 %empty_38, i5 4" [d2.cpp:61]   --->   Operation 136 'icmp' 'icmp_ln61_3' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 137 [1/1] (0.78ns)   --->   "%icmp_ln65_4 = icmp_ugt  i5 %empty, i5 4" [d2.cpp:65]   --->   Operation 137 'icmp' 'icmp_ln65_4' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_69 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_38, i32 2, i32 4" [d2.cpp:61]   --->   Operation 138 'partselect' 'tmp_69' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.67ns)   --->   "%icmp_ln61_4 = icmp_sgt  i3 %tmp_69, i3 0" [d2.cpp:61]   --->   Operation 139 'icmp' 'icmp_ln61_4' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.78ns)   --->   "%icmp_ln61_5 = icmp_sgt  i5 %empty_38, i5 2" [d2.cpp:61]   --->   Operation 140 'icmp' 'icmp_ln61_5' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_70 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %empty_38, i32 1, i32 4" [d2.cpp:61]   --->   Operation 141 'partselect' 'tmp_70' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.79ns)   --->   "%icmp_ln61_6 = icmp_sgt  i4 %tmp_70, i4 0" [d2.cpp:61]   --->   Operation 142 'icmp' 'icmp_ln61_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 143 [1/1] (0.79ns)   --->   "%add_ln51_1 = add i4 %i_2, i4 15" [d2.cpp:51]   --->   Operation 143 'add' 'add_ln51_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_71 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln51_1, i32 3" [d2.cpp:51]   --->   Operation 144 'bitselect' 'tmp_71' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 145 'mux' 'tmp_33' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.79ns)   --->   "%cmp69_1 = icmp_ugt  i4 %add_ln51_1, i4 8" [d2.cpp:51]   --->   Operation 146 'icmp' 'cmp69_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.79ns)   --->   "%cmp138_1 = icmp_ugt  i4 %add_ln51_1, i4 6" [d2.cpp:51]   --->   Operation 147 'icmp' 'cmp138_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%xor_ln64 = xor i4 %k_load_37, i4 8" [d2.cpp:64]   --->   Operation 148 'xor' 'xor_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%select_ln64 = select i1 %cmp138_1, i4 15, i4 0" [d2.cpp:64]   --->   Operation 149 'select' 'select_ln64' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36 = add i4 %xor_ln64, i4 %select_ln64" [d2.cpp:36]   --->   Operation 150 'add' 'add_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.79ns)   --->   "%icmp_ln59_6 = icmp_eq  i4 %i_2, i4 15" [d2.cpp:59]   --->   Operation 151 'icmp' 'icmp_ln59_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.28ns)   --->   "%and_ln59_7 = and i1 %icmp_ln59_6, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 152 'and' 'and_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 153 [1/1] (0.17ns)   --->   "%select_ln63_2 = select i1 %and_ln59_7, i3 6, i3 7" [d2.cpp:63]   --->   Operation 153 'select' 'select_ln63_2' <Predicate = (!icmp_ln42)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i1 %cmp138_1" [d2.cpp:64]   --->   Operation 154 'zext' 'zext_ln64_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.79ns)   --->   "%sub_ln65_22 = sub i4 %add_ln36, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 155 'sub' 'sub_ln65_22' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_32)   --->   "%select_ln59_4 = select i1 %icmp_ln59_6, i3 6, i3 7" [d2.cpp:59]   --->   Operation 156 'select' 'select_ln59_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 157 [1/1] (0.79ns)   --->   "%icmp_ln59_7 = icmp_ugt  i4 %i_2, i4 13" [d2.cpp:59]   --->   Operation 157 'icmp' 'icmp_ln59_7' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.28ns)   --->   "%and_ln59_8 = and i1 %icmp_ln59_7, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 158 'and' 'and_ln59_8' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln63_23 = zext i1 %and_ln59_8" [d2.cpp:63]   --->   Operation 159 'zext' 'zext_ln63_23' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.54ns)   --->   "%sub_ln63_11 = sub i3 %select_ln63_2, i3 %zext_ln63_23" [d2.cpp:63]   --->   Operation 160 'sub' 'sub_ln63_11' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (0.79ns)   --->   "%sub_ln65_23 = sub i4 %sub_ln65_22, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 161 'sub' 'sub_ln65_23' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_32)   --->   "%zext_ln36_2 = zext i1 %icmp_ln59_7" [d2.cpp:36]   --->   Operation 162 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_32 = sub i3 %select_ln59_4, i3 %zext_ln36_2" [d2.cpp:36]   --->   Operation 163 'sub' 'sub_ln36_32' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.79ns)   --->   "%icmp_ln59_8 = icmp_ugt  i4 %i_2, i4 12" [d2.cpp:59]   --->   Operation 164 'icmp' 'icmp_ln59_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 165 [1/1] (0.28ns)   --->   "%and_ln59_9 = and i1 %icmp_ln59_8, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 165 'and' 'and_ln59_9' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 166 [1/1] (0.79ns)   --->   "%sub_ln65_6 = sub i4 %sub_ln65_23, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 166 'sub' 'sub_ln65_6' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i1 %icmp_ln59_8" [d2.cpp:36]   --->   Operation 167 'zext' 'zext_ln36_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.67ns)   --->   "%sub_ln36_25 = sub i3 %sub_ln36_32, i3 %zext_ln36_3" [d2.cpp:36]   --->   Operation 168 'sub' 'sub_ln36_25' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%sext_ln59_3 = sext i3 %sub_ln36_25" [d2.cpp:59]   --->   Operation 169 'sext' 'sext_ln59_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.79ns)   --->   "%icmp_ln59_9 = icmp_ugt  i4 %i_2, i4 11" [d2.cpp:59]   --->   Operation 170 'icmp' 'icmp_ln59_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln66_9 = zext i1 %icmp_ln59_9" [d2.cpp:66]   --->   Operation 171 'zext' 'zext_ln66_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.67ns)   --->   "%sub_ln36_26 = sub i4 %sext_ln59_3, i4 %zext_ln66_9" [d2.cpp:36]   --->   Operation 172 'sub' 'sub_ln36_26' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.79ns)   --->   "%icmp_ln59_10 = icmp_ugt  i4 %i_2, i4 10" [d2.cpp:59]   --->   Operation 173 'icmp' 'icmp_ln59_10' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln66_10 = zext i1 %icmp_ln59_10" [d2.cpp:66]   --->   Operation 174 'zext' 'zext_ln66_10' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.79ns)   --->   "%sub_ln36_27 = sub i4 %sub_ln36_26, i4 %zext_ln66_10" [d2.cpp:36]   --->   Operation 175 'sub' 'sub_ln36_27' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.79ns)   --->   "%icmp_ln59_11 = icmp_ugt  i4 %i_2, i4 9" [d2.cpp:59]   --->   Operation 176 'icmp' 'icmp_ln59_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln66_11 = zext i1 %icmp_ln59_11" [d2.cpp:66]   --->   Operation 177 'zext' 'zext_ln66_11' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.79ns)   --->   "%sub_ln36_13 = sub i4 %sub_ln36_27, i4 %zext_ln66_11" [d2.cpp:36]   --->   Operation 178 'sub' 'sub_ln36_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln66_12 = zext i1 %cmp69" [d2.cpp:66]   --->   Operation 179 'zext' 'zext_ln66_12' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.79ns)   --->   "%sub_ln36_14 = sub i4 %sub_ln36_13, i4 %zext_ln66_12" [d2.cpp:36]   --->   Operation 180 'sub' 'sub_ln36_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 181 [1/1] (0.79ns)   --->   "%add_ln48 = add i4 %k_load_37, i4 3" [d2.cpp:48]   --->   Operation 181 'add' 'add_ln48' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 182 [1/1] (0.79ns)   --->   "%add_ln51_5 = add i5 %zext_ln42, i5 30" [d2.cpp:51]   --->   Operation 182 'add' 'add_ln51_5' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_76 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln51_5, i32 3, i32 4" [d2.cpp:51]   --->   Operation 183 'partselect' 'tmp_76' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.54ns)   --->   "%icmp_ln51 = icmp_eq  i2 %tmp_76, i2 1" [d2.cpp:51]   --->   Operation 184 'icmp' 'icmp_ln51' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 185 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_2" [d2.cpp:59]   --->   Operation 185 'mux' 'tmp_66' <Predicate = (!icmp_ln42)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 186 [1/1] (0.78ns)   --->   "%cmp69_2 = icmp_sgt  i5 %add_ln51_5, i5 8" [d2.cpp:51]   --->   Operation 186 'icmp' 'cmp69_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 187 [1/1] (0.78ns)   --->   "%cmp138_2 = icmp_sgt  i5 %add_ln51_5, i5 6" [d2.cpp:51]   --->   Operation 187 'icmp' 'cmp138_2' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63 = add i64 %and_ln65_1, i64 %and_ln65_2" [d2.cpp:63]   --->   Operation 188 'add' 'add_ln63' <Predicate = (!icmp_ln42)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_1)   --->   "%select_ln36 = select i1 %cmp138_2, i4 8, i4 9" [d2.cpp:36]   --->   Operation 189 'select' 'select_ln36' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 190 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_1 = add i4 %select_ln36, i4 %k_load_37" [d2.cpp:36]   --->   Operation 190 'add' 'add_ln36_1' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln64_2 = zext i1 %cmp138_2" [d2.cpp:64]   --->   Operation 191 'zext' 'zext_ln64_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.79ns)   --->   "%sub_ln36_17 = sub i4 %add_ln36_1, i4 %zext_ln64_2" [d2.cpp:36]   --->   Operation 192 'sub' 'sub_ln36_17' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 193 [1/1] (0.79ns)   --->   "%icmp_ln59_12 = icmp_ugt  i4 %add_ln51_1, i4 13" [d2.cpp:59]   --->   Operation 193 'icmp' 'icmp_ln59_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 194 [1/1] (0.28ns)   --->   "%and_ln59_13 = and i1 %icmp_ln59_12, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 194 'and' 'and_ln59_13' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_6)   --->   "%select_ln63_4 = select i1 %and_ln59_13, i3 6, i3 7" [d2.cpp:63]   --->   Operation 195 'select' 'select_ln63_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 196 [1/1] (0.79ns)   --->   "%sub_ln65_25 = sub i4 %sub_ln36_17, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 196 'sub' 'sub_ln65_25' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_33)   --->   "%select_ln59_5 = select i1 %icmp_ln59_12, i3 6, i3 7" [d2.cpp:59]   --->   Operation 197 'select' 'select_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.79ns)   --->   "%icmp_ln59_13 = icmp_ugt  i4 %add_ln51_1, i4 12" [d2.cpp:59]   --->   Operation 198 'icmp' 'icmp_ln59_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 199 [1/1] (0.28ns)   --->   "%and_ln59_14 = and i1 %icmp_ln59_13, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 199 'and' 'and_ln59_14' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_6)   --->   "%zext_ln63_25 = zext i1 %and_ln59_14" [d2.cpp:63]   --->   Operation 200 'zext' 'zext_ln63_25' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_6 = sub i3 %select_ln63_4, i3 %zext_ln63_25" [d2.cpp:63]   --->   Operation 201 'sub' 'sub_ln63_6' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.79ns)   --->   "%sub_ln65_12 = sub i4 %sub_ln65_25, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 202 'sub' 'sub_ln65_12' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_33)   --->   "%zext_ln36_4 = zext i1 %icmp_ln59_13" [d2.cpp:36]   --->   Operation 203 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 204 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_33 = sub i3 %select_ln59_5, i3 %zext_ln36_4" [d2.cpp:36]   --->   Operation 204 'sub' 'sub_ln36_33' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 205 [1/1] (0.79ns)   --->   "%icmp_ln59_14 = icmp_ugt  i4 %add_ln51_1, i4 11" [d2.cpp:59]   --->   Operation 205 'icmp' 'icmp_ln59_14' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.28ns)   --->   "%and_ln59_15 = and i1 %icmp_ln59_14, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 206 'and' 'and_ln59_15' <Predicate = (!icmp_ln42)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (0.79ns)   --->   "%sub_ln65_13 = sub i4 %sub_ln65_12, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 207 'sub' 'sub_ln65_13' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i1 %icmp_ln59_14" [d2.cpp:36]   --->   Operation 208 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 209 [1/1] (0.67ns)   --->   "%sub_ln36_28 = sub i3 %sub_ln36_33, i3 %zext_ln36_5" [d2.cpp:36]   --->   Operation 209 'sub' 'sub_ln36_28' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.00ns)   --->   "%sext_ln59_5 = sext i3 %sub_ln36_28" [d2.cpp:59]   --->   Operation 210 'sext' 'sext_ln59_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (0.79ns)   --->   "%icmp_ln59_15 = icmp_ugt  i4 %add_ln51_1, i4 10" [d2.cpp:59]   --->   Operation 211 'icmp' 'icmp_ln59_15' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln66_16 = zext i1 %icmp_ln59_15" [d2.cpp:66]   --->   Operation 212 'zext' 'zext_ln66_16' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 213 [1/1] (0.67ns)   --->   "%sub_ln36_29 = sub i4 %sext_ln59_5, i4 %zext_ln66_16" [d2.cpp:36]   --->   Operation 213 'sub' 'sub_ln36_29' <Predicate = (!icmp_ln42)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.79ns)   --->   "%icmp_ln59_16 = icmp_ugt  i4 %add_ln51_1, i4 9" [d2.cpp:59]   --->   Operation 214 'icmp' 'icmp_ln59_16' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln66_17 = zext i1 %icmp_ln59_16" [d2.cpp:66]   --->   Operation 215 'zext' 'zext_ln66_17' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.79ns)   --->   "%sub_ln36_30 = sub i4 %sub_ln36_29, i4 %zext_ln66_17" [d2.cpp:36]   --->   Operation 216 'sub' 'sub_ln36_30' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (0.00ns)   --->   "%zext_ln66_18 = zext i1 %cmp69_1" [d2.cpp:66]   --->   Operation 217 'zext' 'zext_ln66_18' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 218 [1/1] (0.79ns)   --->   "%sub_ln36_18 = sub i4 %sub_ln36_30, i4 %zext_ln66_18" [d2.cpp:36]   --->   Operation 218 'sub' 'sub_ln36_18' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 219 [1/1] (0.00ns)   --->   "%tmp_94 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln51_1, i32 3" [d2.cpp:65]   --->   Operation 219 'bitselect' 'tmp_94' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 220 [1/1] (0.79ns)   --->   "%icmp_ln65_8 = icmp_ugt  i4 %add_ln51_1, i4 5" [d2.cpp:65]   --->   Operation 220 'icmp' 'icmp_ln65_8' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 221 [1/1] (0.79ns)   --->   "%icmp_ln65_9 = icmp_ugt  i4 %add_ln51_1, i4 4" [d2.cpp:65]   --->   Operation 221 'icmp' 'icmp_ln65_9' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 222 [1/1] (0.00ns)   --->   "%tmp_101 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln51_1, i32 2, i32 3" [d2.cpp:65]   --->   Operation 222 'partselect' 'tmp_101' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (0.54ns)   --->   "%icmp_ln65_10 = icmp_ne  i2 %tmp_101, i2 0" [d2.cpp:65]   --->   Operation 223 'icmp' 'icmp_ln65_10' <Predicate = (!icmp_ln42)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 224 [1/1] (0.79ns)   --->   "%icmp_ln65_11 = icmp_ugt  i4 %add_ln51_1, i4 2" [d2.cpp:65]   --->   Operation 224 'icmp' 'icmp_ln65_11' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 225 [1/1] (0.79ns)   --->   "%add_ln42 = add i4 %i_2, i4 13" [d2.cpp:42]   --->   Operation 225 'add' 'add_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 226 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln42, i4 %i" [d2.cpp:42]   --->   Operation 226 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>
ST_1 : Operation 227 [1/1] (0.42ns)   --->   "%store_ln42 = store i4 %add_ln48, i4 %k" [d2.cpp:42]   --->   Operation 227 'store' 'store_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.28>
ST_2 : Operation 228 [1/1] (0.00ns)   --->   "%k_load = load i32 %k_s" [d2.cpp:42]   --->   Operation 228 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 229 [1/1] (0.00ns)   --->   "%k1_load = load i32 %k1" [d2.cpp:42]   --->   Operation 229 'load' 'k1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 230 [1/1] (0.00ns)   --->   "%arr_load_1 = load i64 %arr" [d2.cpp:63]   --->   Operation 230 'load' 'arr_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%arr_23_load_1 = load i64 %arr_23" [d2.cpp:65]   --->   Operation 231 'load' 'arr_23_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (0.00ns)   --->   "%arr_24_load_1 = load i64 %arr_24" [d2.cpp:65]   --->   Operation 232 'load' 'arr_24_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 233 [1/1] (0.00ns)   --->   "%arr_25_load_1 = load i64 %arr_25" [d2.cpp:65]   --->   Operation 233 'load' 'arr_25_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i32 %k_load" [d2.cpp:42]   --->   Operation 234 'trunc' 'trunc_ln42' <Predicate = (tmp_34)> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln42_1 = trunc i32 %k1_load" [d2.cpp:42]   --->   Operation 235 'trunc' 'trunc_ln42_1' <Predicate = (tmp_34)> <Delay = 0.00>
ST_2 : Operation 236 [1/1] (1.01ns)   --->   "%k1_1 = add i32 %k1_load, i32 1" [d2.cpp:51]   --->   Operation 236 'add' 'k1_1' <Predicate = (tmp_34)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42_1" [d2.cpp:51]   --->   Operation 237 'mux' 'tmp_2' <Predicate = (tmp_34)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i32 %tmp_2" [d2.cpp:51]   --->   Operation 238 'zext' 'zext_ln51' <Predicate = (tmp_34)> <Delay = 0.00>
ST_2 : Operation 239 [1/1] (1.01ns)   --->   "%k_1 = add i32 %k_load, i32 1" [d2.cpp:51]   --->   Operation 239 'add' 'k_1' <Predicate = (tmp_34)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 240 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln42" [d2.cpp:51]   --->   Operation 240 'mux' 'tmp_3' <Predicate = (tmp_34)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 241 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i32 %tmp_3" [d2.cpp:51]   --->   Operation 241 'zext' 'tmp_3_cast' <Predicate = (tmp_34)> <Delay = 0.00>
ST_2 : Operation 242 [1/1] (1.01ns)   --->   "%tmp = add i33 %tmp_3_cast, i33 %zext_ln51" [d2.cpp:51]   --->   Operation 242 'add' 'tmp' <Predicate = (tmp_34)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 243 [1/1] (0.00ns)   --->   "%tmp_cast = zext i33 %tmp" [d2.cpp:51]   --->   Operation 243 'zext' 'tmp_cast' <Predicate = (tmp_34)> <Delay = 0.00>
ST_2 : [1/1] (0.47ns)   --->   Input mux for Operation 244 '%tmp1 = mul i64 %tmp_cast, i64 %zext_ln59'
ST_2 : Operation 244 [1/1] (2.93ns)   --->   "%tmp1 = mul i64 %tmp_cast, i64 %zext_ln59" [d2.cpp:51]   --->   Operation 244 'mul' 'tmp1' <Predicate = (tmp_34)> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 245 [1/1] (0.44ns)   --->   "%k_2 = select i1 %tmp_34, i32 %k_1, i32 %k_load" [d2.cpp:51]   --->   Operation 245 'select' 'k_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 246 [1/1] (0.44ns)   --->   "%k1_2 = select i1 %tmp_34, i32 %k1_1, i32 %k1_load" [d2.cpp:51]   --->   Operation 246 'select' 'k1_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.00ns)   --->   "%trunc_ln53 = trunc i32 %k_2" [d2.cpp:53]   --->   Operation 247 'trunc' 'trunc_ln53' <Predicate = (tmp_71)> <Delay = 0.00>
ST_2 : Operation 248 [1/1] (0.00ns)   --->   "%trunc_ln53_1 = trunc i32 %k1_2" [d2.cpp:53]   --->   Operation 248 'trunc' 'trunc_ln53_1' <Predicate = (tmp_71)> <Delay = 0.00>
ST_2 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_9)   --->   "%select_ln63 = select i1 %and_ln59, i3 6, i3 7" [d2.cpp:63]   --->   Operation 249 'select' 'select_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 250 [1/1] (0.66ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load_37" [d2.cpp:63]   --->   Operation 250 'mux' 'tmp_4' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i32 %tmp_4" [d2.cpp:63]   --->   Operation 251 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 252 '%mul_ln65 = mul i64 %zext_ln63, i64 %zext_ln59'
ST_2 : Operation 252 [1/1] (2.10ns)   --->   "%mul_ln65 = mul i64 %zext_ln63, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 252 'mul' 'mul_ln65' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 253 [1/1] (0.17ns)   --->   "%select_ln65_3 = select i1 %cmp138, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 253 'select' 'select_ln65_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.37ns)   --->   "%and_ln65 = and i64 %mul_ln65, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 254 'and' 'and_ln65' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 255 [1/1] (0.28ns)   --->   "%and_ln59_1 = and i1 %icmp_ln59, i1 %cmp69" [d2.cpp:59]   --->   Operation 255 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node sub_ln63_9)   --->   "%zext_ln63_21 = zext i1 %and_ln59_1" [d2.cpp:63]   --->   Operation 256 'zext' 'zext_ln63_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 257 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln63_9 = sub i3 %select_ln63, i3 %zext_ln63_21" [d2.cpp:63]   --->   Operation 257 'sub' 'sub_ln63_9' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 258 [1/1] (0.00ns)   --->   "%sext_ln63_2 = sext i3 %sub_ln63_9" [d2.cpp:63]   --->   Operation 258 'sext' 'sext_ln63_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 259 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i3 %sub_ln36_31" [d2.cpp:59]   --->   Operation 259 'sext' 'sext_ln59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 260 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_2" [d2.cpp:59]   --->   Operation 260 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i32 %tmp_8" [d2.cpp:59]   --->   Operation 261 'zext' 'zext_ln59_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 262 [1/1] (0.28ns)   --->   "%and_ln59_2 = and i1 %icmp_ln59_1, i1 %cmp69" [d2.cpp:59]   --->   Operation 262 'and' 'and_ln59_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 263 [1/1] (0.00ns)   --->   "%zext_ln63_22 = zext i1 %and_ln59_2" [d2.cpp:63]   --->   Operation 263 'zext' 'zext_ln63_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 264 [1/1] (0.67ns)   --->   "%sub_ln63_10 = sub i3 %sub_ln63_9, i3 %zext_ln63_22" [d2.cpp:63]   --->   Operation 264 'sub' 'sub_ln63_10' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 265 [1/1] (0.00ns)   --->   "%sext_ln63_3 = sext i3 %sub_ln63_10" [d2.cpp:63]   --->   Operation 265 'sext' 'sext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 266 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_18" [d2.cpp:63]   --->   Operation 266 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln63_2 = zext i32 %tmp_9" [d2.cpp:63]   --->   Operation 267 'zext' 'zext_ln63_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 268 [1/1] (0.79ns)   --->   "%sub_ln65_19 = sub i4 %sub_ln65_18, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 268 'sub' 'sub_ln65_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59" [d2.cpp:65]   --->   Operation 269 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i32 %tmp_s" [d2.cpp:65]   --->   Operation 270 'zext' 'zext_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 271 '%mul_ln65_4 = mul i64 %zext_ln65_1, i64 %zext_ln59'
ST_2 : Operation 271 [1/1] (2.10ns)   --->   "%mul_ln65_4 = mul i64 %zext_ln65_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 271 'mul' 'mul_ln65_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 272 '%mul_ln65_5 = mul i64 %zext_ln59_2, i64 %zext_ln59'
ST_2 : Operation 272 [1/1] (2.10ns)   --->   "%mul_ln65_5 = mul i64 %zext_ln59_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 272 'mul' 'mul_ln65_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 273 '%mul_ln65_6 = mul i64 %zext_ln63_2, i64 %zext_ln59'
ST_2 : Operation 273 [1/1] (2.10ns)   --->   "%mul_ln65_6 = mul i64 %zext_ln63_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 273 'mul' 'mul_ln65_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_2)   --->   "%select_ln65_9 = select i1 %icmp_ln59_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 274 'select' 'select_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_2)   --->   "%and_ln65_6 = and i64 %mul_ln65_4, i64 %select_ln65_9" [d2.cpp:65]   --->   Operation 275 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_7)   --->   "%select_ln65_10 = select i1 %and_ln59_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 276 'select' 'select_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_7 = and i64 %mul_ln65_5, i64 %select_ln65_10" [d2.cpp:65]   --->   Operation 277 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.37ns)   --->   "%and_ln65_8 = and i64 %mul_ln65_6, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 278 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 279 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_3" [d2.cpp:59]   --->   Operation 279 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln59_3 = zext i32 %tmp_5" [d2.cpp:59]   --->   Operation 280 'zext' 'zext_ln59_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 281 [1/1] (0.28ns)   --->   "%and_ln59_3 = and i1 %icmp_ln59_2, i1 %cmp69" [d2.cpp:59]   --->   Operation 281 'and' 'and_ln59_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i1 %and_ln59_3" [d2.cpp:60]   --->   Operation 282 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 283 [1/1] (0.67ns)   --->   "%sub_ln63 = sub i4 %sext_ln63_3, i4 %zext_ln60" [d2.cpp:63]   --->   Operation 283 'sub' 'sub_ln63' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_19" [d2.cpp:63]   --->   Operation 284 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln63_3 = zext i32 %tmp_7" [d2.cpp:63]   --->   Operation 285 'zext' 'zext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.79ns)   --->   "%sub_ln65 = sub i4 %sub_ln65_19, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 286 'sub' 'sub_ln65' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_1" [d2.cpp:65]   --->   Operation 287 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 288 [1/1] (0.00ns)   --->   "%zext_ln65_2 = zext i32 %tmp_10" [d2.cpp:65]   --->   Operation 288 'zext' 'zext_ln65_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 289 '%mul_ln65_7 = mul i64 %zext_ln65_2, i64 %zext_ln59'
ST_2 : Operation 289 [1/1] (2.10ns)   --->   "%mul_ln65_7 = mul i64 %zext_ln65_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 289 'mul' 'mul_ln65_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 290 '%mul_ln65_8 = mul i64 %zext_ln59_3, i64 %zext_ln59'
ST_2 : Operation 290 [1/1] (2.10ns)   --->   "%mul_ln65_8 = mul i64 %zext_ln59_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 290 'mul' 'mul_ln65_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 291 '%mul_ln65_9 = mul i64 %zext_ln63_3, i64 %zext_ln59'
ST_2 : Operation 291 [1/1] (2.10ns)   --->   "%mul_ln65_9 = mul i64 %zext_ln63_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 291 'mul' 'mul_ln65_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%select_ln65_11 = select i1 %icmp_ln59_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 292 'select' 'select_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%and_ln65_9 = and i64 %mul_ln65_7, i64 %select_ln65_11" [d2.cpp:65]   --->   Operation 293 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%select_ln65_12 = select i1 %and_ln59_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 294 'select' 'select_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_10 = and i64 %mul_ln65_8, i64 %select_ln65_12" [d2.cpp:65]   --->   Operation 295 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.37ns)   --->   "%and_ln65_11 = and i64 %mul_ln65_9, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 296 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63" [d2.cpp:59]   --->   Operation 297 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (0.00ns)   --->   "%zext_ln59_4 = zext i32 %tmp_11" [d2.cpp:59]   --->   Operation 298 'zext' 'zext_ln59_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 299 [1/1] (0.28ns)   --->   "%and_ln59_4 = and i1 %icmp_ln59_3, i1 %cmp69" [d2.cpp:59]   --->   Operation 299 'and' 'and_ln59_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 300 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i1 %and_ln59_4" [d2.cpp:60]   --->   Operation 300 'zext' 'zext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 301 [1/1] (0.79ns)   --->   "%sub_ln63_1 = sub i4 %sub_ln63, i4 %zext_ln60_1" [d2.cpp:63]   --->   Operation 301 'sub' 'sub_ln63_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 302 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65" [d2.cpp:63]   --->   Operation 302 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln63_4 = zext i32 %tmp_12" [d2.cpp:63]   --->   Operation 303 'zext' 'zext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 304 [1/1] (0.79ns)   --->   "%sub_ln65_1 = sub i4 %sub_ln65, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 304 'sub' 'sub_ln65_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 305 [1/1] (0.48ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_23" [d2.cpp:65]   --->   Operation 305 'mux' 'tmp_13' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln65_3 = zext i32 %tmp_13" [d2.cpp:65]   --->   Operation 306 'zext' 'zext_ln65_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 307 '%mul_ln65_10 = mul i64 %zext_ln65_3, i64 %zext_ln59'
ST_2 : Operation 307 [1/1] (2.10ns)   --->   "%mul_ln65_10 = mul i64 %zext_ln65_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 307 'mul' 'mul_ln65_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 308 '%mul_ln65_11 = mul i64 %zext_ln59_4, i64 %zext_ln59'
ST_2 : Operation 308 [1/1] (2.10ns)   --->   "%mul_ln65_11 = mul i64 %zext_ln59_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 308 'mul' 'mul_ln65_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 309 '%mul_ln65_12 = mul i64 %zext_ln63_4, i64 %zext_ln59'
ST_2 : Operation 309 [1/1] (2.10ns)   --->   "%mul_ln65_12 = mul i64 %zext_ln63_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 309 'mul' 'mul_ln65_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_20)   --->   "%select_ln65_13 = select i1 %icmp_ln59_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 310 'select' 'select_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 311 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_20)   --->   "%and_ln65_12 = and i64 %mul_ln65_10, i64 %select_ln65_13" [d2.cpp:65]   --->   Operation 311 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_13)   --->   "%select_ln65_14 = select i1 %and_ln59_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 312 'select' 'select_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 313 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_13 = and i64 %mul_ln65_11, i64 %select_ln65_14" [d2.cpp:65]   --->   Operation 313 'and' 'and_ln65_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 314 [1/1] (0.37ns)   --->   "%and_ln65_14 = and i64 %mul_ln65_12, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 314 'and' 'and_ln65_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 315 [1/1] (0.28ns)   --->   "%and_ln59_5 = and i1 %icmp_ln59_4, i1 %cmp69" [d2.cpp:59]   --->   Operation 315 'and' 'and_ln59_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 316 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_24" [d2.cpp:65]   --->   Operation 316 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 317 [1/1] (0.00ns)   --->   "%zext_ln65_4 = zext i32 %tmp_16" [d2.cpp:65]   --->   Operation 317 'zext' 'zext_ln65_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 318 '%mul_ln65_13 = mul i64 %zext_ln65_4, i64 %zext_ln59'
ST_2 : Operation 318 [1/1] (2.10ns)   --->   "%mul_ln65_13 = mul i64 %zext_ln65_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 318 'mul' 'mul_ln65_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_29)   --->   "%select_ln65_15 = select i1 %icmp_ln59_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 319 'select' 'select_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 320 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_29)   --->   "%and_ln65_15 = and i64 %mul_ln65_13, i64 %select_ln65_15" [d2.cpp:65]   --->   Operation 320 'and' 'and_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 321 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_9" [d2.cpp:65]   --->   Operation 321 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 322 [1/1] (0.00ns)   --->   "%zext_ln65_5 = zext i32 %tmp_19" [d2.cpp:65]   --->   Operation 322 'zext' 'zext_ln65_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 323 '%mul_ln65_16 = mul i64 %zext_ln65_5, i64 %zext_ln59'
ST_2 : Operation 323 [1/1] (2.10ns)   --->   "%mul_ln65_16 = mul i64 %zext_ln65_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 323 'mul' 'mul_ln65_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%select_ln65_17 = select i1 %icmp_ln59_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 324 'select' 'select_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln65_18 = and i64 %mul_ln65_16, i64 %select_ln65_17" [d2.cpp:65]   --->   Operation 325 'and' 'and_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 326 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_10" [d2.cpp:65]   --->   Operation 326 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 327 [1/1] (0.00ns)   --->   "%zext_ln65_6 = zext i32 %tmp_20" [d2.cpp:65]   --->   Operation 327 'zext' 'zext_ln65_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 328 '%mul_ln65_19 = mul i64 %zext_ln65_6, i64 %zext_ln59'
ST_2 : Operation 328 [1/1] (2.10ns)   --->   "%mul_ln65_19 = mul i64 %zext_ln65_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 328 'mul' 'mul_ln65_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_21)   --->   "%select_ln65_19 = select i1 %icmp_ln65, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 329 'select' 'select_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 330 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_21 = and i64 %mul_ln65_19, i64 %select_ln65_19" [d2.cpp:65]   --->   Operation 330 'and' 'and_ln65_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.28ns)   --->   "%and_ln61 = and i1 %icmp_ln61, i1 %cmp69" [d2.cpp:61]   --->   Operation 331 'and' 'and_ln61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_20)   --->   "%select_ln65_20 = select i1 %and_ln61, i3 6, i3 7" [d2.cpp:65]   --->   Operation 332 'select' 'select_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 333 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_11" [d2.cpp:65]   --->   Operation 333 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.00ns)   --->   "%zext_ln65_7 = zext i32 %tmp_21" [d2.cpp:65]   --->   Operation 334 'zext' 'zext_ln65_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 335 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_49)   --->   "%select_ln65_21 = select i1 %and_ln61, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 335 'select' 'select_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 336 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_49)   --->   "%and_ln65_22 = and i64 %mul_ln59, i64 %select_ln65_21" [d2.cpp:65]   --->   Operation 336 'and' 'and_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 337 '%mul_ln65_20 = mul i64 %zext_ln65_7, i64 %zext_ln59'
ST_2 : Operation 337 [1/1] (2.10ns)   --->   "%mul_ln65_20 = mul i64 %zext_ln65_7, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 337 'mul' 'mul_ln65_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_49)   --->   "%select_ln65_22 = select i1 %icmp_ln65_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 338 'select' 'select_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_49)   --->   "%and_ln65_23 = and i64 %mul_ln65_20, i64 %select_ln65_22" [d2.cpp:65]   --->   Operation 339 'and' 'and_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.00ns)   --->   "%zext_ln66_5 = zext i1 %icmp_ln65_1" [d2.cpp:66]   --->   Operation 340 'zext' 'zext_ln66_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 341 [1/1] (0.79ns)   --->   "%sub_ln36_12 = sub i4 %sub_ln36_11, i4 %zext_ln66_5" [d2.cpp:36]   --->   Operation 341 'sub' 'sub_ln36_12' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.44ns)   --->   "%select_ln61 = select i1 %and_ln61, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 342 'select' 'select_ln61' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 343 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i32 %select_ln61" [d2.cpp:61]   --->   Operation 343 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 344 [1/1] (0.28ns)   --->   "%and_ln61_1 = and i1 %icmp_ln61_1, i1 %cmp69" [d2.cpp:61]   --->   Operation 344 'and' 'and_ln61_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_20)   --->   "%zext_ln65_39 = zext i1 %and_ln61_1" [d2.cpp:65]   --->   Operation 345 'zext' 'zext_ln65_39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 346 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_20 = sub i3 %select_ln65_20, i3 %zext_ln65_39" [d2.cpp:65]   --->   Operation 346 'sub' 'sub_ln65_20' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 347 [1/1] (0.00ns)   --->   "%sext_ln65 = sext i3 %sub_ln65_20" [d2.cpp:65]   --->   Operation 347 'sext' 'sext_ln65' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 348 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_12" [d2.cpp:65]   --->   Operation 348 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 349 [1/1] (0.00ns)   --->   "%zext_ln65_8 = zext i32 %tmp_22" [d2.cpp:65]   --->   Operation 349 'zext' 'zext_ln65_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 350 '%mul_ln65_21 = mul i64 %zext_ln61, i64 %zext_ln59'
ST_2 : Operation 350 [1/1] (2.10ns)   --->   "%mul_ln65_21 = mul i64 %zext_ln61, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 350 'mul' 'mul_ln65_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 351 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_53)   --->   "%select_ln65_23 = select i1 %and_ln61_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 351 'select' 'select_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_53)   --->   "%and_ln65_24 = and i64 %mul_ln65_21, i64 %select_ln65_23" [d2.cpp:65]   --->   Operation 352 'and' 'and_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 353 '%mul_ln65_22 = mul i64 %zext_ln65_8, i64 %zext_ln59'
ST_2 : Operation 353 [1/1] (2.10ns)   --->   "%mul_ln65_22 = mul i64 %zext_ln65_8, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 353 'mul' 'mul_ln65_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_53)   --->   "%select_ln65_24 = select i1 %icmp_ln65_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 354 'select' 'select_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_53)   --->   "%and_ln65_25 = and i64 %mul_ln65_22, i64 %select_ln65_24" [d2.cpp:65]   --->   Operation 355 'and' 'and_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns)   --->   "%zext_ln66_6 = zext i1 %icmp_ln65_2" [d2.cpp:66]   --->   Operation 356 'zext' 'zext_ln66_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 357 [1/1] (0.79ns)   --->   "%sub_ln36 = sub i4 %sub_ln36_12, i4 %zext_ln66_6" [d2.cpp:36]   --->   Operation 357 'sub' 'sub_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 358 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65" [d2.cpp:61]   --->   Operation 358 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.00ns)   --->   "%zext_ln61_1 = zext i32 %tmp_23" [d2.cpp:61]   --->   Operation 359 'zext' 'zext_ln61_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 360 [1/1] (0.00ns)   --->   "%zext_ln65_40 = zext i1 %and_ln61_2" [d2.cpp:65]   --->   Operation 360 'zext' 'zext_ln65_40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 361 [1/1] (0.67ns)   --->   "%sub_ln65_21 = sub i3 %sub_ln65_20, i3 %zext_ln65_40" [d2.cpp:65]   --->   Operation 361 'sub' 'sub_ln65_21' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns)   --->   "%sext_ln65_1 = sext i3 %sub_ln65_21" [d2.cpp:65]   --->   Operation 362 'sext' 'sext_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 363 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36" [d2.cpp:65]   --->   Operation 363 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.00ns)   --->   "%zext_ln65_9 = zext i32 %tmp_24" [d2.cpp:65]   --->   Operation 364 'zext' 'zext_ln65_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 365 '%mul_ln65_23 = mul i64 %zext_ln61_1, i64 %zext_ln59'
ST_2 : Operation 365 [1/1] (2.10ns)   --->   "%mul_ln65_23 = mul i64 %zext_ln61_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 365 'mul' 'mul_ln65_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_26)   --->   "%select_ln65_25 = select i1 %and_ln61_2, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 366 'select' 'select_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 367 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_26 = and i64 %mul_ln65_23, i64 %select_ln65_25" [d2.cpp:65]   --->   Operation 367 'and' 'and_ln65_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 368 '%mul_ln65_24 = mul i64 %zext_ln65_9, i64 %zext_ln59'
ST_2 : Operation 368 [1/1] (2.10ns)   --->   "%mul_ln65_24 = mul i64 %zext_ln65_9, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 368 'mul' 'mul_ln65_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_27)   --->   "%select_ln65_26 = select i1 %icmp_ln65_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 369 'select' 'select_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 370 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_27 = and i64 %mul_ln65_24, i64 %select_ln65_26" [d2.cpp:65]   --->   Operation 370 'and' 'and_ln65_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 371 [1/1] (0.00ns)   --->   "%zext_ln66_7 = zext i1 %icmp_ln65_3" [d2.cpp:66]   --->   Operation 371 'zext' 'zext_ln66_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 372 [1/1] (0.79ns)   --->   "%sub_ln36_1 = sub i4 %sub_ln36, i4 %zext_ln66_7" [d2.cpp:36]   --->   Operation 372 'sub' 'sub_ln36_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.28ns)   --->   "%and_ln61_3 = and i1 %icmp_ln61_3, i1 %cmp69" [d2.cpp:61]   --->   Operation 373 'and' 'and_ln61_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i1 %and_ln61_3" [d2.cpp:62]   --->   Operation 374 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 375 [1/1] (0.67ns)   --->   "%sub_ln65_3 = sub i4 %sext_ln65_1, i4 %zext_ln62" [d2.cpp:65]   --->   Operation 375 'sub' 'sub_ln65_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.28ns)   --->   "%and_ln61_4 = and i1 %icmp_ln61_4, i1 %cmp69" [d2.cpp:61]   --->   Operation 376 'and' 'and_ln61_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i1 %and_ln61_4" [d2.cpp:62]   --->   Operation 377 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 378 [1/1] (0.79ns)   --->   "%sub_ln65_4 = sub i4 %sub_ln65_3, i4 %zext_ln62_1" [d2.cpp:65]   --->   Operation 378 'sub' 'sub_ln65_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 379 [1/1] (0.28ns)   --->   "%and_ln61_5 = and i1 %icmp_ln61_5, i1 %cmp69" [d2.cpp:61]   --->   Operation 379 'and' 'and_ln61_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 380 [1/1] (0.00ns)   --->   "%zext_ln59_7 = zext i32 %tmp_33" [d2.cpp:59]   --->   Operation 380 'zext' 'zext_ln59_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 381 [1/1] (1.01ns)   --->   "%k1_3 = add i32 %k1_2, i32 1" [d2.cpp:51]   --->   Operation 381 'add' 'k1_3' <Predicate = (tmp_71)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 382 [1/1] (0.48ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_1" [d2.cpp:51]   --->   Operation 382 'mux' 'tmp_37' <Predicate = (tmp_71)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i32 %tmp_37" [d2.cpp:51]   --->   Operation 383 'zext' 'zext_ln51_1' <Predicate = (tmp_71)> <Delay = 0.00>
ST_2 : Operation 384 [1/1] (1.01ns)   --->   "%k_3 = add i32 %k_2, i32 1" [d2.cpp:51]   --->   Operation 384 'add' 'k_3' <Predicate = (tmp_71)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 385 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53" [d2.cpp:51]   --->   Operation 385 'mux' 'tmp_38' <Predicate = (tmp_71)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.00ns)   --->   "%tmp_38_cast = zext i32 %tmp_38" [d2.cpp:51]   --->   Operation 386 'zext' 'tmp_38_cast' <Predicate = (tmp_71)> <Delay = 0.00>
ST_2 : Operation 387 [1/1] (1.01ns)   --->   "%tmp2 = add i33 %tmp_38_cast, i33 %zext_ln51_1" [d2.cpp:51]   --->   Operation 387 'add' 'tmp2' <Predicate = (tmp_71)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 388 [1/1] (0.00ns)   --->   "%tmp2_cast = zext i33 %tmp2" [d2.cpp:51]   --->   Operation 388 'zext' 'tmp2_cast' <Predicate = (tmp_71)> <Delay = 0.00>
ST_2 : [1/1] (0.47ns)   --->   Input mux for Operation 389 '%tmp3 = mul i64 %tmp2_cast, i64 %zext_ln59_7'
ST_2 : Operation 389 [1/1] (2.93ns)   --->   "%tmp3 = mul i64 %tmp2_cast, i64 %zext_ln59_7" [d2.cpp:51]   --->   Operation 389 'mul' 'tmp3' <Predicate = (tmp_71)> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.44ns)   --->   "%k_4 = select i1 %tmp_71, i32 %k_3, i32 %k_2" [d2.cpp:51]   --->   Operation 390 'select' 'k_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 391 [1/1] (0.44ns)   --->   "%k1_4 = select i1 %tmp_71, i32 %k1_3, i32 %k1_2" [d2.cpp:51]   --->   Operation 391 'select' 'k1_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.00ns)   --->   "%trunc_ln53_2 = trunc i32 %k_4" [d2.cpp:53]   --->   Operation 392 'trunc' 'trunc_ln53_2' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_2 : Operation 393 [1/1] (0.00ns)   --->   "%trunc_ln53_3 = trunc i32 %k1_4" [d2.cpp:53]   --->   Operation 393 'trunc' 'trunc_ln53_3' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_2 : Operation 394 [1/1] (0.35ns)   --->   "%empty_39 = xor i4 %i_2, i4 8" [d2.cpp:65]   --->   Operation 394 'xor' 'empty_39' <Predicate = true> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.66ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load_37" [d2.cpp:63]   --->   Operation 395 'mux' 'tmp_39' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 396 [1/1] (0.00ns)   --->   "%zext_ln63_7 = zext i32 %tmp_39" [d2.cpp:63]   --->   Operation 396 'zext' 'zext_ln63_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 397 '%mul_ln63 = mul i64 %zext_ln63_7, i64 %zext_ln59_7'
ST_2 : Operation 397 [1/1] (2.10ns)   --->   "%mul_ln63 = mul i64 %zext_ln63_7, i64 %zext_ln59_7" [d2.cpp:63]   --->   Operation 397 'mul' 'mul_ln63' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 398 [1/1] (0.17ns)   --->   "%select_ln63_1 = select i1 %cmp138_1, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 398 'select' 'select_ln63_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 399 [1/1] (0.37ns)   --->   "%and_ln63 = and i64 %mul_ln63, i64 %select_ln63_1" [d2.cpp:63]   --->   Operation 399 'and' 'and_ln63' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 400 '%mul_ln59_1 = mul i64 %zext_ln59_7, i64 %conv60_cast'
ST_2 : Operation 400 [1/1] (2.10ns)   --->   "%mul_ln59_1 = mul i64 %zext_ln59_7, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 400 'mul' 'mul_ln59_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 401 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36" [d2.cpp:63]   --->   Operation 401 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln63_8 = zext i32 %tmp_40" [d2.cpp:63]   --->   Operation 402 'zext' 'zext_ln63_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 403 '%mul_ln65_33 = mul i64 %zext_ln63_8, i64 %zext_ln59_7'
ST_2 : Operation 403 [1/1] (2.10ns)   --->   "%mul_ln65_33 = mul i64 %zext_ln63_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 403 'mul' 'mul_ln65_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 404 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%and_ln65_33 = and i64 %mul_ln65_33, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 404 'and' 'and_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_34)   --->   "%select_ln65_32 = select i1 %icmp_ln59_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 405 'select' 'select_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 406 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_34 = and i64 %mul_ln59_1, i64 %select_ln65_32" [d2.cpp:65]   --->   Operation 406 'and' 'and_ln65_34' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_35)   --->   "%select_ln65_33 = select i1 %and_ln59_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 407 'select' 'select_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 408 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_35 = and i64 %mul_ln59_1, i64 %select_ln65_33" [d2.cpp:65]   --->   Operation 408 'and' 'and_ln65_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 409 [1/1] (0.44ns)   --->   "%select_ln59_1 = select i1 %and_ln59_7, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 409 'select' 'select_ln59_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.00ns)   --->   "%zext_ln59_8 = zext i32 %select_ln59_1" [d2.cpp:59]   --->   Operation 410 'zext' 'zext_ln59_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 411 [1/1] (0.00ns)   --->   "%sext_ln63 = sext i3 %sub_ln63_11" [d2.cpp:63]   --->   Operation 411 'sext' 'sext_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 412 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_22" [d2.cpp:63]   --->   Operation 412 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 413 [1/1] (0.00ns)   --->   "%zext_ln63_9 = zext i32 %tmp_41" [d2.cpp:63]   --->   Operation 413 'zext' 'zext_ln63_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 414 [1/1] (0.44ns)   --->   "%select_ln65_2 = select i1 %icmp_ln59_6, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 414 'select' 'select_ln65_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 415 [1/1] (0.00ns)   --->   "%zext_ln65_14 = zext i32 %select_ln65_2" [d2.cpp:65]   --->   Operation 415 'zext' 'zext_ln65_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 416 '%mul_ln65_34 = mul i64 %zext_ln65_14, i64 %zext_ln59_7'
ST_2 : Operation 416 [1/1] (2.10ns)   --->   "%mul_ln65_34 = mul i64 %zext_ln65_14, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 416 'mul' 'mul_ln65_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 417 '%mul_ln65_35 = mul i64 %zext_ln59_8, i64 %zext_ln59_7'
ST_2 : Operation 417 [1/1] (2.10ns)   --->   "%mul_ln65_35 = mul i64 %zext_ln59_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 417 'mul' 'mul_ln65_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 418 '%mul_ln65_36 = mul i64 %zext_ln63_9, i64 %zext_ln59_7'
ST_2 : Operation 418 [1/1] (2.10ns)   --->   "%mul_ln65_36 = mul i64 %zext_ln63_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 418 'mul' 'mul_ln65_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 419 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_36)   --->   "%select_ln65_34 = select i1 %icmp_ln59_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 419 'select' 'select_ln65_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 420 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_36 = and i64 %mul_ln65_34, i64 %select_ln65_34" [d2.cpp:65]   --->   Operation 420 'and' 'and_ln65_36' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_2)   --->   "%select_ln65_35 = select i1 %and_ln59_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 421 'select' 'select_ln65_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_2)   --->   "%and_ln65_37 = and i64 %mul_ln65_35, i64 %select_ln65_35" [d2.cpp:65]   --->   Operation 422 'and' 'and_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 423 [1/1] (0.37ns)   --->   "%and_ln65_38 = and i64 %mul_ln65_36, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 423 'and' 'and_ln65_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 424 [1/1] (0.00ns)   --->   "%sext_ln59_2 = sext i3 %sub_ln36_32" [d2.cpp:59]   --->   Operation 424 'sext' 'sext_ln59_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 425 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63" [d2.cpp:59]   --->   Operation 425 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 426 [1/1] (0.00ns)   --->   "%zext_ln59_9 = zext i32 %tmp_42" [d2.cpp:59]   --->   Operation 426 'zext' 'zext_ln59_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 427 [1/1] (0.00ns)   --->   "%zext_ln63_24 = zext i1 %and_ln59_9" [d2.cpp:63]   --->   Operation 427 'zext' 'zext_ln63_24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 428 [1/1] (0.67ns)   --->   "%sub_ln63_3 = sub i3 %sub_ln63_11, i3 %zext_ln63_24" [d2.cpp:63]   --->   Operation 428 'sub' 'sub_ln63_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 429 [1/1] (0.00ns)   --->   "%sext_ln63_4 = sext i3 %sub_ln63_3" [d2.cpp:63]   --->   Operation 429 'sext' 'sext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 430 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_23" [d2.cpp:63]   --->   Operation 430 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 431 [1/1] (0.00ns)   --->   "%zext_ln63_10 = zext i32 %tmp_43" [d2.cpp:63]   --->   Operation 431 'zext' 'zext_ln63_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 432 [1/1] (0.48ns)   --->   "%tmp_44 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_2" [d2.cpp:65]   --->   Operation 432 'mux' 'tmp_44' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 433 [1/1] (0.00ns)   --->   "%zext_ln65_15 = zext i32 %tmp_44" [d2.cpp:65]   --->   Operation 433 'zext' 'zext_ln65_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 434 '%mul_ln65_37 = mul i64 %zext_ln65_15, i64 %zext_ln59_7'
ST_2 : Operation 434 [1/1] (2.10ns)   --->   "%mul_ln65_37 = mul i64 %zext_ln65_15, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 434 'mul' 'mul_ln65_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 435 '%mul_ln65_38 = mul i64 %zext_ln59_9, i64 %zext_ln59_7'
ST_2 : Operation 435 [1/1] (2.10ns)   --->   "%mul_ln65_38 = mul i64 %zext_ln59_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 435 'mul' 'mul_ln65_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 436 '%mul_ln65_39 = mul i64 %zext_ln63_10, i64 %zext_ln59_7'
ST_2 : Operation 436 [1/1] (2.10ns)   --->   "%mul_ln65_39 = mul i64 %zext_ln63_10, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 436 'mul' 'mul_ln65_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_39)   --->   "%select_ln65_36 = select i1 %icmp_ln59_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 437 'select' 'select_ln65_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 438 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_39 = and i64 %mul_ln65_37, i64 %select_ln65_36" [d2.cpp:65]   --->   Operation 438 'and' 'and_ln65_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 439 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%select_ln65_37 = select i1 %and_ln59_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 439 'select' 'select_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 440 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_11)   --->   "%and_ln65_40 = and i64 %mul_ln65_38, i64 %select_ln65_37" [d2.cpp:65]   --->   Operation 440 'and' 'and_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 441 [1/1] (0.37ns)   --->   "%and_ln65_41 = and i64 %mul_ln65_39, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 441 'and' 'and_ln65_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 442 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_4" [d2.cpp:59]   --->   Operation 442 'mux' 'tmp_45' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 443 [1/1] (0.00ns)   --->   "%zext_ln59_10 = zext i32 %tmp_45" [d2.cpp:59]   --->   Operation 443 'zext' 'zext_ln59_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 444 [1/1] (0.28ns)   --->   "%and_ln59_10 = and i1 %icmp_ln59_9, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 444 'and' 'and_ln59_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 445 [1/1] (0.00ns)   --->   "%zext_ln60_3 = zext i1 %and_ln59_10" [d2.cpp:60]   --->   Operation 445 'zext' 'zext_ln60_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 446 [1/1] (0.67ns)   --->   "%sub_ln63_4 = sub i4 %sext_ln63_4, i4 %zext_ln60_3" [d2.cpp:63]   --->   Operation 446 'sub' 'sub_ln63_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 447 [1/1] (0.48ns)   --->   "%tmp_46 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_6" [d2.cpp:63]   --->   Operation 447 'mux' 'tmp_46' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 448 [1/1] (0.00ns)   --->   "%zext_ln63_11 = zext i32 %tmp_46" [d2.cpp:63]   --->   Operation 448 'zext' 'zext_ln63_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 449 [1/1] (0.79ns)   --->   "%sub_ln65_7 = sub i4 %sub_ln65_6, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 449 'sub' 'sub_ln65_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 450 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_3" [d2.cpp:65]   --->   Operation 450 'mux' 'tmp_47' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 451 [1/1] (0.00ns)   --->   "%zext_ln65_16 = zext i32 %tmp_47" [d2.cpp:65]   --->   Operation 451 'zext' 'zext_ln65_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 452 '%mul_ln65_40 = mul i64 %zext_ln65_16, i64 %zext_ln59_7'
ST_2 : Operation 452 [1/1] (2.10ns)   --->   "%mul_ln65_40 = mul i64 %zext_ln65_16, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 452 'mul' 'mul_ln65_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 453 '%mul_ln65_41 = mul i64 %zext_ln59_10, i64 %zext_ln59_7'
ST_2 : Operation 453 [1/1] (2.10ns)   --->   "%mul_ln65_41 = mul i64 %zext_ln59_10, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 453 'mul' 'mul_ln65_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 454 '%mul_ln65_42 = mul i64 %zext_ln63_11, i64 %zext_ln59_7'
ST_2 : Operation 454 [1/1] (2.10ns)   --->   "%mul_ln65_42 = mul i64 %zext_ln63_11, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 454 'mul' 'mul_ln65_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 455 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_42)   --->   "%select_ln65_38 = select i1 %icmp_ln59_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 455 'select' 'select_ln65_38' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 456 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_42 = and i64 %mul_ln65_40, i64 %select_ln65_38" [d2.cpp:65]   --->   Operation 456 'and' 'and_ln65_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 457 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_20)   --->   "%select_ln65_39 = select i1 %and_ln59_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 457 'select' 'select_ln65_39' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_20)   --->   "%and_ln65_43 = and i64 %mul_ln65_41, i64 %select_ln65_39" [d2.cpp:65]   --->   Operation 458 'and' 'and_ln65_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 459 [1/1] (0.37ns)   --->   "%and_ln65_44 = and i64 %mul_ln65_42, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 459 'and' 'and_ln65_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 460 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_4" [d2.cpp:59]   --->   Operation 460 'mux' 'tmp_48' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 461 [1/1] (0.00ns)   --->   "%zext_ln59_11 = zext i32 %tmp_48" [d2.cpp:59]   --->   Operation 461 'zext' 'zext_ln59_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 462 [1/1] (0.28ns)   --->   "%and_ln59_11 = and i1 %icmp_ln59_10, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 462 'and' 'and_ln59_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 463 [1/1] (0.00ns)   --->   "%zext_ln60_4 = zext i1 %and_ln59_11" [d2.cpp:60]   --->   Operation 463 'zext' 'zext_ln60_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 464 [1/1] (0.79ns)   --->   "%sub_ln63_5 = sub i4 %sub_ln63_4, i4 %zext_ln60_4" [d2.cpp:63]   --->   Operation 464 'sub' 'sub_ln63_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 465 [1/1] (0.48ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_7" [d2.cpp:63]   --->   Operation 465 'mux' 'tmp_49' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 466 [1/1] (0.00ns)   --->   "%zext_ln63_12 = zext i32 %tmp_49" [d2.cpp:63]   --->   Operation 466 'zext' 'zext_ln63_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 467 [1/1] (0.79ns)   --->   "%sub_ln65_8 = sub i4 %sub_ln65_7, i4 %zext_ln64_1" [d2.cpp:65]   --->   Operation 467 'sub' 'sub_ln65_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 468 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_26" [d2.cpp:65]   --->   Operation 468 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 469 [1/1] (0.00ns)   --->   "%zext_ln65_17 = zext i32 %tmp_50" [d2.cpp:65]   --->   Operation 469 'zext' 'zext_ln65_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 470 '%mul_ln65_43 = mul i64 %zext_ln65_17, i64 %zext_ln59_7'
ST_2 : Operation 470 [1/1] (2.10ns)   --->   "%mul_ln65_43 = mul i64 %zext_ln65_17, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 470 'mul' 'mul_ln65_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 471 '%mul_ln65_44 = mul i64 %zext_ln59_11, i64 %zext_ln59_7'
ST_2 : Operation 471 [1/1] (2.10ns)   --->   "%mul_ln65_44 = mul i64 %zext_ln59_11, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 471 'mul' 'mul_ln65_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 472 '%mul_ln65_45 = mul i64 %zext_ln63_12, i64 %zext_ln59_7'
ST_2 : Operation 472 [1/1] (2.10ns)   --->   "%mul_ln65_45 = mul i64 %zext_ln63_12, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 472 'mul' 'mul_ln65_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 473 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_45)   --->   "%select_ln65_40 = select i1 %icmp_ln59_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 473 'select' 'select_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 474 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_45 = and i64 %mul_ln65_43, i64 %select_ln65_40" [d2.cpp:65]   --->   Operation 474 'and' 'and_ln65_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_29)   --->   "%select_ln65_41 = select i1 %and_ln59_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 475 'select' 'select_ln65_41' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_29)   --->   "%and_ln65_46 = and i64 %mul_ln65_44, i64 %select_ln65_41" [d2.cpp:65]   --->   Operation 476 'and' 'and_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 477 [1/1] (0.37ns)   --->   "%and_ln65_47 = and i64 %mul_ln65_45, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 477 'and' 'and_ln65_47' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 478 [1/1] (0.48ns)   --->   "%tmp_51 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_5" [d2.cpp:59]   --->   Operation 478 'mux' 'tmp_51' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 479 [1/1] (0.00ns)   --->   "%zext_ln59_12 = zext i32 %tmp_51" [d2.cpp:59]   --->   Operation 479 'zext' 'zext_ln59_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 480 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln59_12 = and i1 %icmp_ln59_11, i1 %cmp69_1" [d2.cpp:59]   --->   Operation 480 'and' 'and_ln59_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 481 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_8" [d2.cpp:63]   --->   Operation 481 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 482 [1/1] (0.00ns)   --->   "%zext_ln63_13 = zext i32 %tmp_52" [d2.cpp:63]   --->   Operation 482 'zext' 'zext_ln63_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 483 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_27" [d2.cpp:65]   --->   Operation 483 'mux' 'tmp_53' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 484 [1/1] (0.00ns)   --->   "%zext_ln65_18 = zext i32 %tmp_53" [d2.cpp:65]   --->   Operation 484 'zext' 'zext_ln65_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 485 '%mul_ln65_46 = mul i64 %zext_ln65_18, i64 %zext_ln59_7'
ST_2 : Operation 485 [1/1] (2.10ns)   --->   "%mul_ln65_46 = mul i64 %zext_ln65_18, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 485 'mul' 'mul_ln65_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 486 '%mul_ln65_47 = mul i64 %zext_ln59_12, i64 %zext_ln59_7'
ST_2 : Operation 486 [1/1] (2.10ns)   --->   "%mul_ln65_47 = mul i64 %zext_ln59_12, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 486 'mul' 'mul_ln65_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 487 '%mul_ln65_48 = mul i64 %zext_ln63_13, i64 %zext_ln59_7'
ST_2 : Operation 487 [1/1] (2.10ns)   --->   "%mul_ln65_48 = mul i64 %zext_ln63_13, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 487 'mul' 'mul_ln65_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_48)   --->   "%select_ln65_42 = select i1 %icmp_ln59_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 488 'select' 'select_ln65_42' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 489 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_48 = and i64 %mul_ln65_46, i64 %select_ln65_42" [d2.cpp:65]   --->   Operation 489 'and' 'and_ln65_48' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 490 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%select_ln65_43 = select i1 %and_ln59_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 490 'select' 'select_ln65_43' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_38)   --->   "%and_ln65_49 = and i64 %mul_ln65_47, i64 %select_ln65_43" [d2.cpp:65]   --->   Operation 491 'and' 'and_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 492 [1/1] (0.37ns)   --->   "%and_ln65_50 = and i64 %mul_ln65_48, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 492 'and' 'and_ln65_50' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 493 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_13" [d2.cpp:65]   --->   Operation 493 'mux' 'tmp_54' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 494 [1/1] (0.00ns)   --->   "%zext_ln65_19 = zext i32 %tmp_54" [d2.cpp:65]   --->   Operation 494 'zext' 'zext_ln65_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 495 '%mul_ln65_49 = mul i64 %zext_ln65_19, i64 %zext_ln59_7'
ST_2 : Operation 495 [1/1] (2.10ns)   --->   "%mul_ln65_49 = mul i64 %zext_ln65_19, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 495 'mul' 'mul_ln65_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%select_ln65_44 = select i1 %cmp69, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 496 'select' 'select_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%and_ln65_51 = and i64 %mul_ln65_49, i64 %select_ln65_44" [d2.cpp:65]   --->   Operation 497 'and' 'and_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 498 [1/1] (0.48ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_14" [d2.cpp:65]   --->   Operation 498 'mux' 'tmp_55' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 499 [1/1] (0.00ns)   --->   "%zext_ln65_20 = zext i32 %tmp_55" [d2.cpp:65]   --->   Operation 499 'zext' 'zext_ln65_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 500 '%mul_ln65_50 = mul i64 %zext_ln65_20, i64 %zext_ln59_7'
ST_2 : Operation 500 [1/1] (2.10ns)   --->   "%mul_ln65_50 = mul i64 %zext_ln65_20, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 500 'mul' 'mul_ln65_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 501 [1/1] (0.00ns)   --->   "%tmp_72 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d2.cpp:65]   --->   Operation 501 'bitselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 502 [1/1] (0.00ns)   --->   "%zext_ln65_45 = zext i1 %tmp_72" [d2.cpp:65]   --->   Operation 502 'zext' 'zext_ln65_45' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_50)   --->   "%select_ln65_45 = select i1 %tmp_72, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 503 'select' 'select_ln65_45' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_50)   --->   "%and_ln65_52 = and i64 %mul_ln65_50, i64 %select_ln65_45" [d2.cpp:65]   --->   Operation 504 'and' 'and_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 505 [1/1] (0.79ns)   --->   "%sub_ln36_15 = sub i4 %sub_ln36_14, i4 %zext_ln65_45" [d2.cpp:36]   --->   Operation 505 'sub' 'sub_ln36_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 506 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_15" [d2.cpp:65]   --->   Operation 506 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 507 [1/1] (0.00ns)   --->   "%zext_ln65_21 = zext i32 %tmp_56" [d2.cpp:65]   --->   Operation 507 'zext' 'zext_ln65_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 508 '%mul_ln65_51 = mul i64 %zext_ln65_21, i64 %zext_ln59_7'
ST_2 : Operation 508 [1/1] (2.10ns)   --->   "%mul_ln65_51 = mul i64 %zext_ln65_21, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 508 'mul' 'mul_ln65_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 509 [1/1] (0.37ns)   --->   "%and_ln65_53 = and i64 %mul_ln65_51, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 509 'and' 'and_ln65_53' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 510 [1/1] (0.79ns)   --->   "%sub_ln36_16 = sub i4 %sub_ln36_15, i4 %zext_ln64" [d2.cpp:36]   --->   Operation 510 'sub' 'sub_ln36_16' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 511 [1/1] (0.79ns)   --->   "%icmp_ln61_7 = icmp_sgt  i4 %empty_39, i4 5" [d2.cpp:61]   --->   Operation 511 'icmp' 'icmp_ln61_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 512 [1/1] (0.28ns)   --->   "%and_ln61_7 = and i1 %icmp_ln61_7, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 512 'and' 'and_ln61_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 513 [1/1] (0.00ns)   --->   "%zext_ln65_41 = zext i1 %and_ln61_7" [d2.cpp:65]   --->   Operation 513 'zext' 'zext_ln65_41' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 514 [1/1] (0.54ns)   --->   "%sub_ln65_24 = sub i3 %select_ln63_2, i3 %zext_ln65_41" [d2.cpp:65]   --->   Operation 514 'sub' 'sub_ln65_24' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 515 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_16" [d2.cpp:65]   --->   Operation 515 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 516 [1/1] (0.00ns)   --->   "%zext_ln65_22 = zext i32 %tmp_57" [d2.cpp:65]   --->   Operation 516 'zext' 'zext_ln65_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 517 [1/1] (0.79ns)   --->   "%icmp_ln65_5 = icmp_ugt  i4 %i_2, i4 5" [d2.cpp:65]   --->   Operation 517 'icmp' 'icmp_ln65_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_54)   --->   "%select_ln65_46 = select i1 %and_ln61_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 518 'select' 'select_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 519 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_54 = and i64 %mul_ln65_35, i64 %select_ln65_46" [d2.cpp:65]   --->   Operation 519 'and' 'and_ln65_54' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 520 '%mul_ln65_52 = mul i64 %zext_ln65_22, i64 %zext_ln59_7'
ST_2 : Operation 520 [1/1] (2.10ns)   --->   "%mul_ln65_52 = mul i64 %zext_ln65_22, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 520 'mul' 'mul_ln65_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_55)   --->   "%select_ln65_47 = select i1 %icmp_ln65_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 521 'select' 'select_ln65_47' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 522 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_55 = and i64 %mul_ln65_52, i64 %select_ln65_47" [d2.cpp:65]   --->   Operation 522 'and' 'and_ln65_55' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 523 [1/1] (0.00ns)   --->   "%zext_ln66_13 = zext i1 %icmp_ln65_5" [d2.cpp:66]   --->   Operation 523 'zext' 'zext_ln66_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 524 [1/1] (0.79ns)   --->   "%sub_ln36_3 = sub i4 %sub_ln36_16, i4 %zext_ln66_13" [d2.cpp:36]   --->   Operation 524 'sub' 'sub_ln36_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 525 [1/1] (0.79ns)   --->   "%icmp_ln61_8 = icmp_sgt  i4 %empty_39, i4 4" [d2.cpp:61]   --->   Operation 525 'icmp' 'icmp_ln61_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 526 [1/1] (0.28ns)   --->   "%and_ln61_8 = and i1 %icmp_ln61_8, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 526 'and' 'and_ln61_8' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 527 [1/1] (0.00ns)   --->   "%zext_ln65_42 = zext i1 %and_ln61_8" [d2.cpp:65]   --->   Operation 527 'zext' 'zext_ln65_42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 528 [1/1] (0.67ns)   --->   "%sub_ln65_9 = sub i3 %sub_ln65_24, i3 %zext_ln65_42" [d2.cpp:65]   --->   Operation 528 'sub' 'sub_ln65_9' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 529 [1/1] (0.00ns)   --->   "%sext_ln65_3 = sext i3 %sub_ln65_9" [d2.cpp:65]   --->   Operation 529 'sext' 'sext_ln65_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 530 [1/1] (0.79ns)   --->   "%icmp_ln65_6 = icmp_ugt  i4 %i_2, i4 4" [d2.cpp:65]   --->   Operation 530 'icmp' 'icmp_ln65_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 531 [1/1] (0.00ns)   --->   "%zext_ln66_14 = zext i1 %icmp_ln65_6" [d2.cpp:66]   --->   Operation 531 'zext' 'zext_ln66_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 532 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln66_14" [d2.cpp:36]   --->   Operation 532 'sub' 'sub_ln36_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 533 [1/1] (0.00ns)   --->   "%tmp_73 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_39, i32 2, i32 3" [d2.cpp:61]   --->   Operation 533 'partselect' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 534 [1/1] (0.54ns)   --->   "%icmp_ln61_9 = icmp_eq  i2 %tmp_73, i2 1" [d2.cpp:61]   --->   Operation 534 'icmp' 'icmp_ln61_9' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 535 [1/1] (0.28ns)   --->   "%and_ln61_9 = and i1 %icmp_ln61_9, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 535 'and' 'and_ln61_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 536 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i1 %and_ln61_9" [d2.cpp:62]   --->   Operation 536 'zext' 'zext_ln62_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 537 [1/1] (0.67ns)   --->   "%sub_ln65_10 = sub i4 %sext_ln65_3, i4 %zext_ln62_3" [d2.cpp:65]   --->   Operation 537 'sub' 'sub_ln65_10' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 538 [1/1] (0.00ns)   --->   "%tmp_74 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i_2, i32 2, i32 3" [d2.cpp:65]   --->   Operation 538 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 539 [1/1] (0.54ns)   --->   "%icmp_ln65_7 = icmp_ne  i2 %tmp_74, i2 0" [d2.cpp:65]   --->   Operation 539 'icmp' 'icmp_ln65_7' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 540 [1/1] (0.79ns)   --->   "%icmp_ln61_10 = icmp_sgt  i4 %empty_39, i4 2" [d2.cpp:61]   --->   Operation 540 'icmp' 'icmp_ln61_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 541 [1/1] (0.28ns)   --->   "%and_ln61_10 = and i1 %icmp_ln61_10, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 541 'and' 'and_ln61_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 542 [1/1] (0.00ns)   --->   "%tmp_75 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_39, i32 1, i32 3" [d2.cpp:61]   --->   Operation 542 'partselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 543 [1/1] (0.67ns)   --->   "%icmp_ln61_11 = icmp_sgt  i3 %tmp_75, i3 0" [d2.cpp:61]   --->   Operation 543 'icmp' 'icmp_ln61_11' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 544 [1/1] (0.00ns)   --->   "%zext_ln59_13 = zext i32 %tmp_66" [d2.cpp:59]   --->   Operation 544 'zext' 'zext_ln59_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 545 [1/1] (1.01ns)   --->   "%k1_5 = add i32 %k1_4, i32 1" [d2.cpp:51]   --->   Operation 545 'add' 'k1_5' <Predicate = (icmp_ln51)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 546 [1/1] (1.01ns)   --->   "%k_5 = add i32 %k_4, i32 1" [d2.cpp:51]   --->   Operation 546 'add' 'k_5' <Predicate = (icmp_ln51)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 547 [1/1] (0.44ns)   --->   "%k_6 = select i1 %icmp_ln51, i32 %k_5, i32 %k_4" [d2.cpp:51]   --->   Operation 547 'select' 'k_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 548 [1/1] (0.44ns)   --->   "%k1_6 = select i1 %icmp_ln51, i32 %k1_5, i32 %k1_4" [d2.cpp:51]   --->   Operation 548 'select' 'k1_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 549 [1/1] (0.79ns)   --->   "%p_cast262 = add i4 %i_2, i4 7" [d2.cpp:65]   --->   Operation 549 'add' 'p_cast262' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 550 [1/1] (0.66ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load_37" [d2.cpp:63]   --->   Operation 550 'mux' 'tmp_79' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 551 [1/1] (0.00ns)   --->   "%zext_ln63_14 = zext i32 %tmp_79" [d2.cpp:63]   --->   Operation 551 'zext' 'zext_ln63_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 552 '%mul_ln63_1 = mul i64 %zext_ln63_14, i64 %zext_ln59_13'
ST_2 : Operation 552 [1/1] (2.10ns)   --->   "%mul_ln63_1 = mul i64 %zext_ln63_14, i64 %zext_ln59_13" [d2.cpp:63]   --->   Operation 552 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 553 [1/1] (0.17ns)   --->   "%select_ln63_3 = select i1 %cmp138_2, i64 18446744073709551615, i64 0" [d2.cpp:63]   --->   Operation 553 'select' 'select_ln63_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 554 [1/1] (0.37ns)   --->   "%and_ln63_1 = and i64 %mul_ln63_1, i64 %select_ln63_3" [d2.cpp:63]   --->   Operation 554 'and' 'and_ln63_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 555 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_1 = add i64 %and_ln63, i64 %and_ln63_1" [d2.cpp:63]   --->   Operation 555 'add' 'add_ln63_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 556 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_2 = add i64 %add_ln63_1, i64 %and_ln65" [d2.cpp:63]   --->   Operation 556 'add' 'add_ln63_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 557 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_3 = add i64 %add_ln63_2, i64 %add_ln63" [d2.cpp:63]   --->   Operation 557 'add' 'add_ln63_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 558 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_33 = add i64 %arr_load_1, i64 %add_ln63_3" [d2.cpp:63]   --->   Operation 558 'add' 'arr_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 559 '%mul_ln59_2 = mul i64 %zext_ln59_13, i64 %conv60_cast'
ST_2 : Operation 559 [1/1] (2.10ns)   --->   "%mul_ln59_2 = mul i64 %zext_ln59_13, i64 %conv60_cast" [d2.cpp:59]   --->   Operation 559 'mul' 'mul_ln59_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 560 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_1" [d2.cpp:63]   --->   Operation 560 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 561 [1/1] (0.00ns)   --->   "%zext_ln63_15 = zext i32 %tmp_80" [d2.cpp:63]   --->   Operation 561 'zext' 'zext_ln63_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 562 '%mul_ln63_2 = mul i64 %zext_ln63_15, i64 %zext_ln59_13'
ST_2 : Operation 562 [1/1] (2.10ns)   --->   "%mul_ln63_2 = mul i64 %zext_ln63_15, i64 %zext_ln59_13" [d2.cpp:63]   --->   Operation 562 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_8)   --->   "%and_ln63_2 = and i64 %mul_ln63_2, i64 %select_ln63_3" [d2.cpp:63]   --->   Operation 563 'and' 'and_ln63_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 564 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_7 = add i64 %and_ln65_34, i64 %and_ln65_35" [d2.cpp:63]   --->   Operation 564 'add' 'add_ln63_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 565 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln63_8 = add i64 %and_ln65_33, i64 %and_ln63_2" [d2.cpp:63]   --->   Operation 565 'add' 'add_ln63_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 566 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_9 = add i64 %add_ln63_8, i64 %add_ln63_7" [d2.cpp:63]   --->   Operation 566 'add' 'add_ln63_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 567 [1/1] (0.48ns)   --->   "%tmp_81 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_17" [d2.cpp:63]   --->   Operation 567 'mux' 'tmp_81' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 568 [1/1] (0.00ns)   --->   "%zext_ln63_16 = zext i32 %tmp_81" [d2.cpp:63]   --->   Operation 568 'zext' 'zext_ln63_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 569 '%mul_ln65_61 = mul i64 %zext_ln63_16, i64 %zext_ln59_13'
ST_2 : Operation 569 [1/1] (2.10ns)   --->   "%mul_ln65_61 = mul i64 %zext_ln63_16, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 569 'mul' 'mul_ln65_61' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 570 [1/1] (0.37ns)   --->   "%and_ln65_62 = and i64 %mul_ln65_61, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 570 'and' 'and_ln65_62' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 571 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_63)   --->   "%select_ln65_54 = select i1 %icmp_ln59_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 571 'select' 'select_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 572 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_63 = and i64 %mul_ln59_2, i64 %select_ln65_54" [d2.cpp:65]   --->   Operation 572 'and' 'and_ln65_63' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 573 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_64)   --->   "%select_ln65_55 = select i1 %and_ln59_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 573 'select' 'select_ln65_55' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 574 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_64 = and i64 %mul_ln59_2, i64 %select_ln65_55" [d2.cpp:65]   --->   Operation 574 'and' 'and_ln65_64' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 575 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_1 = add i64 %and_ln65_7, i64 %and_ln65_8" [d2.cpp:65]   --->   Operation 575 'add' 'add_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 576 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_2 = add i64 %and_ln65_6, i64 %and_ln65_37" [d2.cpp:65]   --->   Operation 576 'add' 'add_ln65_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 577 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_3 = add i64 %add_ln65_2, i64 %add_ln65_1" [d2.cpp:65]   --->   Operation 577 'add' 'add_ln65_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 578 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_4 = add i64 %and_ln65_38, i64 %and_ln65_36" [d2.cpp:65]   --->   Operation 578 'add' 'add_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 579 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_5 = add i64 %and_ln65_64, i64 %and_ln65_62" [d2.cpp:65]   --->   Operation 579 'add' 'add_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 580 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_6 = add i64 %add_ln65_5, i64 %and_ln65_63" [d2.cpp:65]   --->   Operation 580 'add' 'add_ln65_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 581 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_7 = add i64 %add_ln65_6, i64 %add_ln65_4" [d2.cpp:65]   --->   Operation 581 'add' 'add_ln65_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 582 [1/1] (0.44ns)   --->   "%select_ln59_2 = select i1 %and_ln59_13, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 582 'select' 'select_ln59_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 583 [1/1] (0.00ns)   --->   "%zext_ln59_14 = zext i32 %select_ln59_2" [d2.cpp:59]   --->   Operation 583 'zext' 'zext_ln59_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 584 [1/1] (0.00ns)   --->   "%sext_ln63_5 = sext i3 %sub_ln63_6" [d2.cpp:63]   --->   Operation 584 'sext' 'sext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 585 [1/1] (0.48ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_25" [d2.cpp:63]   --->   Operation 585 'mux' 'tmp_82' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 586 [1/1] (0.00ns)   --->   "%zext_ln63_17 = zext i32 %tmp_82" [d2.cpp:63]   --->   Operation 586 'zext' 'zext_ln63_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 587 [1/1] (0.44ns)   --->   "%select_ln65_4 = select i1 %icmp_ln59_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 587 'select' 'select_ln65_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 588 [1/1] (0.00ns)   --->   "%zext_ln65_27 = zext i32 %select_ln65_4" [d2.cpp:65]   --->   Operation 588 'zext' 'zext_ln65_27' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 589 '%mul_ln65_62 = mul i64 %zext_ln65_27, i64 %zext_ln59_13'
ST_2 : Operation 589 [1/1] (2.10ns)   --->   "%mul_ln65_62 = mul i64 %zext_ln65_27, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 589 'mul' 'mul_ln65_62' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 590 '%mul_ln65_63 = mul i64 %zext_ln59_14, i64 %zext_ln59_13'
ST_2 : Operation 590 [1/1] (2.10ns)   --->   "%mul_ln65_63 = mul i64 %zext_ln59_14, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 590 'mul' 'mul_ln65_63' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 591 '%mul_ln65_64 = mul i64 %zext_ln63_17, i64 %zext_ln59_13'
ST_2 : Operation 591 [1/1] (2.10ns)   --->   "%mul_ln65_64 = mul i64 %zext_ln63_17, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 591 'mul' 'mul_ln65_64' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 592 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_65)   --->   "%select_ln65_56 = select i1 %icmp_ln59_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 592 'select' 'select_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 593 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_65 = and i64 %mul_ln65_62, i64 %select_ln65_56" [d2.cpp:65]   --->   Operation 593 'and' 'and_ln65_65' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 594 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_66)   --->   "%select_ln65_57 = select i1 %and_ln59_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 594 'select' 'select_ln65_57' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 595 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_66 = and i64 %mul_ln65_63, i64 %select_ln65_57" [d2.cpp:65]   --->   Operation 595 'and' 'and_ln65_66' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 596 [1/1] (0.37ns)   --->   "%and_ln65_67 = and i64 %mul_ln65_64, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 596 'and' 'and_ln65_67' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 597 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_10 = add i64 %and_ln65_10, i64 %and_ln65_11" [d2.cpp:65]   --->   Operation 597 'add' 'add_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 598 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_11 = add i64 %and_ln65_9, i64 %and_ln65_40" [d2.cpp:65]   --->   Operation 598 'add' 'add_ln65_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 599 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_12 = add i64 %add_ln65_11, i64 %add_ln65_10" [d2.cpp:65]   --->   Operation 599 'add' 'add_ln65_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 600 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_13 = add i64 %and_ln65_41, i64 %and_ln65_39" [d2.cpp:65]   --->   Operation 600 'add' 'add_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 601 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_14 = add i64 %and_ln65_67, i64 %and_ln65_65" [d2.cpp:65]   --->   Operation 601 'add' 'add_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 602 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_15 = add i64 %add_ln65_14, i64 %and_ln65_66" [d2.cpp:65]   --->   Operation 602 'add' 'add_ln65_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 603 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_16 = add i64 %add_ln65_15, i64 %add_ln65_13" [d2.cpp:65]   --->   Operation 603 'add' 'add_ln65_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 604 [1/1] (0.00ns)   --->   "%sext_ln59_4 = sext i3 %sub_ln36_33" [d2.cpp:59]   --->   Operation 604 'sext' 'sext_ln59_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 605 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_5" [d2.cpp:59]   --->   Operation 605 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 606 [1/1] (0.00ns)   --->   "%zext_ln59_15 = zext i32 %tmp_83" [d2.cpp:59]   --->   Operation 606 'zext' 'zext_ln59_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 607 [1/1] (0.00ns)   --->   "%zext_ln63_26 = zext i1 %and_ln59_15" [d2.cpp:63]   --->   Operation 607 'zext' 'zext_ln63_26' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 608 [1/1] (0.67ns)   --->   "%sub_ln63_7 = sub i3 %sub_ln63_6, i3 %zext_ln63_26" [d2.cpp:63]   --->   Operation 608 'sub' 'sub_ln63_7' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 609 [1/1] (0.00ns)   --->   "%sext_ln63_6 = sext i3 %sub_ln63_7" [d2.cpp:63]   --->   Operation 609 'sext' 'sext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 610 [1/1] (0.48ns)   --->   "%tmp_84 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_12" [d2.cpp:63]   --->   Operation 610 'mux' 'tmp_84' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 611 [1/1] (0.00ns)   --->   "%zext_ln63_18 = zext i32 %tmp_84" [d2.cpp:63]   --->   Operation 611 'zext' 'zext_ln63_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 612 [1/1] (0.48ns)   --->   "%tmp_85 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_4" [d2.cpp:65]   --->   Operation 612 'mux' 'tmp_85' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 613 [1/1] (0.00ns)   --->   "%zext_ln65_28 = zext i32 %tmp_85" [d2.cpp:65]   --->   Operation 613 'zext' 'zext_ln65_28' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 614 '%mul_ln65_65 = mul i64 %zext_ln65_28, i64 %zext_ln59_13'
ST_2 : Operation 614 [1/1] (2.10ns)   --->   "%mul_ln65_65 = mul i64 %zext_ln65_28, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 614 'mul' 'mul_ln65_65' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 615 '%mul_ln65_66 = mul i64 %zext_ln59_15, i64 %zext_ln59_13'
ST_2 : Operation 615 [1/1] (2.10ns)   --->   "%mul_ln65_66 = mul i64 %zext_ln59_15, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 615 'mul' 'mul_ln65_66' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 616 '%mul_ln65_67 = mul i64 %zext_ln63_18, i64 %zext_ln59_13'
ST_2 : Operation 616 [1/1] (2.10ns)   --->   "%mul_ln65_67 = mul i64 %zext_ln63_18, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 616 'mul' 'mul_ln65_67' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 617 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_68)   --->   "%select_ln65_58 = select i1 %icmp_ln59_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 617 'select' 'select_ln65_58' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 618 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_68 = and i64 %mul_ln65_65, i64 %select_ln65_58" [d2.cpp:65]   --->   Operation 618 'and' 'and_ln65_68' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 619 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_69)   --->   "%select_ln65_59 = select i1 %and_ln59_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 619 'select' 'select_ln65_59' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 620 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_69 = and i64 %mul_ln65_66, i64 %select_ln65_59" [d2.cpp:65]   --->   Operation 620 'and' 'and_ln65_69' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 621 [1/1] (0.37ns)   --->   "%and_ln65_70 = and i64 %mul_ln65_67, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 621 'and' 'and_ln65_70' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 622 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_19 = add i64 %and_ln65_13, i64 %and_ln65_14" [d2.cpp:65]   --->   Operation 622 'add' 'add_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 623 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_20 = add i64 %and_ln65_12, i64 %and_ln65_43" [d2.cpp:65]   --->   Operation 623 'add' 'add_ln65_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 624 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_21 = add i64 %add_ln65_20, i64 %add_ln65_19" [d2.cpp:65]   --->   Operation 624 'add' 'add_ln65_21' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 625 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_22 = add i64 %and_ln65_44, i64 %and_ln65_42" [d2.cpp:65]   --->   Operation 625 'add' 'add_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 626 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_23 = add i64 %and_ln65_70, i64 %and_ln65_68" [d2.cpp:65]   --->   Operation 626 'add' 'add_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 627 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_24 = add i64 %add_ln65_23, i64 %and_ln65_69" [d2.cpp:65]   --->   Operation 627 'add' 'add_ln65_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 628 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_25 = add i64 %add_ln65_24, i64 %add_ln65_22" [d2.cpp:65]   --->   Operation 628 'add' 'add_ln65_25' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 629 [1/1] (0.48ns)   --->   "%tmp_86 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln63_6" [d2.cpp:59]   --->   Operation 629 'mux' 'tmp_86' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 630 [1/1] (0.00ns)   --->   "%zext_ln59_16 = zext i32 %tmp_86" [d2.cpp:59]   --->   Operation 630 'zext' 'zext_ln59_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 631 [1/1] (0.28ns)   --->   "%and_ln59_16 = and i1 %icmp_ln59_15, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 631 'and' 'and_ln59_16' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 632 [1/1] (0.00ns)   --->   "%zext_ln60_5 = zext i1 %and_ln59_16" [d2.cpp:60]   --->   Operation 632 'zext' 'zext_ln60_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 633 [1/1] (0.67ns)   --->   "%sub_ln63_8 = sub i4 %sext_ln63_6, i4 %zext_ln60_5" [d2.cpp:63]   --->   Operation 633 'sub' 'sub_ln63_8' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 634 [1/1] (0.48ns)   --->   "%tmp_87 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_13" [d2.cpp:63]   --->   Operation 634 'mux' 'tmp_87' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 635 [1/1] (0.00ns)   --->   "%zext_ln63_19 = zext i32 %tmp_87" [d2.cpp:63]   --->   Operation 635 'zext' 'zext_ln63_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 636 [1/1] (0.79ns)   --->   "%sub_ln65_14 = sub i4 %sub_ln65_13, i4 %zext_ln64_2" [d2.cpp:65]   --->   Operation 636 'sub' 'sub_ln65_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 637 [1/1] (0.48ns)   --->   "%tmp_88 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln59_5" [d2.cpp:65]   --->   Operation 637 'mux' 'tmp_88' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 638 [1/1] (0.00ns)   --->   "%zext_ln65_29 = zext i32 %tmp_88" [d2.cpp:65]   --->   Operation 638 'zext' 'zext_ln65_29' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 639 '%mul_ln65_68 = mul i64 %zext_ln65_29, i64 %zext_ln59_13'
ST_2 : Operation 639 [1/1] (2.10ns)   --->   "%mul_ln65_68 = mul i64 %zext_ln65_29, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 639 'mul' 'mul_ln65_68' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 640 '%mul_ln65_69 = mul i64 %zext_ln59_16, i64 %zext_ln59_13'
ST_2 : Operation 640 [1/1] (2.10ns)   --->   "%mul_ln65_69 = mul i64 %zext_ln59_16, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 640 'mul' 'mul_ln65_69' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 641 '%mul_ln65_70 = mul i64 %zext_ln63_19, i64 %zext_ln59_13'
ST_2 : Operation 641 [1/1] (2.10ns)   --->   "%mul_ln65_70 = mul i64 %zext_ln63_19, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 641 'mul' 'mul_ln65_70' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 642 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_71)   --->   "%select_ln65_60 = select i1 %icmp_ln59_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 642 'select' 'select_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 643 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_71 = and i64 %mul_ln65_68, i64 %select_ln65_60" [d2.cpp:65]   --->   Operation 643 'and' 'and_ln65_71' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 644 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_72)   --->   "%select_ln65_61 = select i1 %and_ln59_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 644 'select' 'select_ln65_61' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 645 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_72 = and i64 %mul_ln65_69, i64 %select_ln65_61" [d2.cpp:65]   --->   Operation 645 'and' 'and_ln65_72' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 646 [1/1] (0.37ns)   --->   "%and_ln65_73 = and i64 %mul_ln65_70, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 646 'and' 'and_ln65_73' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 647 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_29 = add i64 %and_ln65_15, i64 %and_ln65_46" [d2.cpp:65]   --->   Operation 647 'add' 'add_ln65_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_31 = add i64 %and_ln65_47, i64 %and_ln65_45" [d2.cpp:65]   --->   Operation 648 'add' 'add_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 649 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_32 = add i64 %and_ln65_73, i64 %and_ln65_71" [d2.cpp:65]   --->   Operation 649 'add' 'add_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 650 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_33 = add i64 %add_ln65_32, i64 %and_ln65_72" [d2.cpp:65]   --->   Operation 650 'add' 'add_ln65_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 651 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_34 = add i64 %add_ln65_33, i64 %add_ln65_31" [d2.cpp:65]   --->   Operation 651 'add' 'add_ln65_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 652 [1/1] (0.48ns)   --->   "%tmp_89 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_8" [d2.cpp:59]   --->   Operation 652 'mux' 'tmp_89' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 653 [1/1] (0.00ns)   --->   "%zext_ln59_17 = zext i32 %tmp_89" [d2.cpp:59]   --->   Operation 653 'zext' 'zext_ln59_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 654 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_75)   --->   "%and_ln59_17 = and i1 %icmp_ln59_16, i1 %cmp69_2" [d2.cpp:59]   --->   Operation 654 'and' 'and_ln59_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 655 [1/1] (0.48ns)   --->   "%tmp_90 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_14" [d2.cpp:63]   --->   Operation 655 'mux' 'tmp_90' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 656 [1/1] (0.00ns)   --->   "%zext_ln63_20 = zext i32 %tmp_90" [d2.cpp:63]   --->   Operation 656 'zext' 'zext_ln63_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 657 [1/1] (0.48ns)   --->   "%tmp_91 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_29" [d2.cpp:65]   --->   Operation 657 'mux' 'tmp_91' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 658 [1/1] (0.00ns)   --->   "%zext_ln65_30 = zext i32 %tmp_91" [d2.cpp:65]   --->   Operation 658 'zext' 'zext_ln65_30' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 659 '%mul_ln65_71 = mul i64 %zext_ln65_30, i64 %zext_ln59_13'
ST_2 : Operation 659 [1/1] (2.10ns)   --->   "%mul_ln65_71 = mul i64 %zext_ln65_30, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 659 'mul' 'mul_ln65_71' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 660 '%mul_ln65_72 = mul i64 %zext_ln59_17, i64 %zext_ln59_13'
ST_2 : Operation 660 [1/1] (2.10ns)   --->   "%mul_ln65_72 = mul i64 %zext_ln59_17, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 660 'mul' 'mul_ln65_72' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 661 '%mul_ln65_73 = mul i64 %zext_ln63_20, i64 %zext_ln59_13'
ST_2 : Operation 661 [1/1] (2.10ns)   --->   "%mul_ln65_73 = mul i64 %zext_ln63_20, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 661 'mul' 'mul_ln65_73' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 662 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_74)   --->   "%select_ln65_62 = select i1 %icmp_ln59_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 662 'select' 'select_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 663 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_74 = and i64 %mul_ln65_71, i64 %select_ln65_62" [d2.cpp:65]   --->   Operation 663 'and' 'and_ln65_74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 664 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_75)   --->   "%select_ln65_63 = select i1 %and_ln59_17, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 664 'select' 'select_ln65_63' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 665 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_75 = and i64 %mul_ln65_72, i64 %select_ln65_63" [d2.cpp:65]   --->   Operation 665 'and' 'and_ln65_75' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 666 [1/1] (0.37ns)   --->   "%and_ln65_76 = and i64 %mul_ln65_73, i64 %select_ln63_3" [d2.cpp:65]   --->   Operation 666 'and' 'and_ln65_76' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 667 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_38 = add i64 %and_ln65_18, i64 %and_ln65_49" [d2.cpp:65]   --->   Operation 667 'add' 'add_ln65_38' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 668 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_40 = add i64 %and_ln65_50, i64 %and_ln65_48" [d2.cpp:65]   --->   Operation 668 'add' 'add_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 669 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_41 = add i64 %and_ln65_76, i64 %and_ln65_74" [d2.cpp:65]   --->   Operation 669 'add' 'add_ln65_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 670 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_42 = add i64 %add_ln65_41, i64 %and_ln65_75" [d2.cpp:65]   --->   Operation 670 'add' 'add_ln65_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 671 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_43 = add i64 %add_ln65_42, i64 %add_ln65_40" [d2.cpp:65]   --->   Operation 671 'add' 'add_ln65_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 672 [1/1] (0.48ns)   --->   "%tmp_92 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_30" [d2.cpp:65]   --->   Operation 672 'mux' 'tmp_92' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 673 [1/1] (0.00ns)   --->   "%zext_ln65_31 = zext i32 %tmp_92" [d2.cpp:65]   --->   Operation 673 'zext' 'zext_ln65_31' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 674 '%mul_ln65_74 = mul i64 %zext_ln65_31, i64 %zext_ln59_13'
ST_2 : Operation 674 [1/1] (2.10ns)   --->   "%mul_ln65_74 = mul i64 %zext_ln65_31, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 674 'mul' 'mul_ln65_74' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 675 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%select_ln65_64 = select i1 %cmp69_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 675 'select' 'select_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_46)   --->   "%and_ln65_77 = and i64 %mul_ln65_74, i64 %select_ln65_64" [d2.cpp:65]   --->   Operation 676 'and' 'and_ln65_77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 677 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_46 = add i64 %and_ln65_51, i64 %and_ln65_77" [d2.cpp:65]   --->   Operation 677 'add' 'add_ln65_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 678 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_47 = add i64 %add_ln65_46, i64 %and_ln65_21" [d2.cpp:65]   --->   Operation 678 'add' 'add_ln65_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 679 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_40 = add i64 %arr_23_load_1, i64 %add_ln65_47" [d2.cpp:65]   --->   Operation 679 'add' 'arr_40' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 680 [1/1] (0.48ns)   --->   "%tmp_93 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_18" [d2.cpp:65]   --->   Operation 680 'mux' 'tmp_93' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 681 [1/1] (0.00ns)   --->   "%zext_ln65_32 = zext i32 %tmp_93" [d2.cpp:65]   --->   Operation 681 'zext' 'zext_ln65_32' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 682 '%mul_ln65_75 = mul i64 %zext_ln65_32, i64 %zext_ln59_13'
ST_2 : Operation 682 [1/1] (2.10ns)   --->   "%mul_ln65_75 = mul i64 %zext_ln65_32, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 682 'mul' 'mul_ln65_75' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 683 [1/1] (0.00ns)   --->   "%zext_ln65_46 = zext i1 %tmp_94" [d2.cpp:65]   --->   Operation 683 'zext' 'zext_ln65_46' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 684 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_50)   --->   "%select_ln65_65 = select i1 %tmp_94, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 684 'select' 'select_ln65_65' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 685 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_50)   --->   "%and_ln65_78 = and i64 %mul_ln65_75, i64 %select_ln65_65" [d2.cpp:65]   --->   Operation 685 'and' 'and_ln65_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 686 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_49 = add i64 %and_ln65_22, i64 %and_ln65_23" [d2.cpp:65]   --->   Operation 686 'add' 'add_ln65_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 687 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_50 = add i64 %and_ln65_52, i64 %and_ln65_78" [d2.cpp:65]   --->   Operation 687 'add' 'add_ln65_50' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 688 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_51 = add i64 %add_ln65_50, i64 %add_ln65_49" [d2.cpp:65]   --->   Operation 688 'add' 'add_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 689 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_41 = add i64 %arr_24_load_1, i64 %add_ln65_51" [d2.cpp:65]   --->   Operation 689 'add' 'arr_41' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 690 [1/1] (0.79ns)   --->   "%sub_ln36_19 = sub i4 %sub_ln36_18, i4 %zext_ln65_46" [d2.cpp:36]   --->   Operation 690 'sub' 'sub_ln36_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 691 [1/1] (0.48ns)   --->   "%tmp_95 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_19" [d2.cpp:65]   --->   Operation 691 'mux' 'tmp_95' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 692 [1/1] (0.00ns)   --->   "%zext_ln65_33 = zext i32 %tmp_95" [d2.cpp:65]   --->   Operation 692 'zext' 'zext_ln65_33' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 693 '%mul_ln65_76 = mul i64 %zext_ln65_33, i64 %zext_ln59_13'
ST_2 : Operation 693 [1/1] (2.10ns)   --->   "%mul_ln65_76 = mul i64 %zext_ln65_33, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 693 'mul' 'mul_ln65_76' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 694 [1/1] (0.37ns)   --->   "%and_ln65_79 = and i64 %mul_ln65_76, i64 %select_ln63_1" [d2.cpp:65]   --->   Operation 694 'and' 'and_ln65_79' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 695 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln65_53 = add i64 %and_ln65_24, i64 %and_ln65_25" [d2.cpp:65]   --->   Operation 695 'add' 'add_ln65_53' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 696 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_54 = add i64 %and_ln65_53, i64 %and_ln65_79" [d2.cpp:65]   --->   Operation 696 'add' 'add_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 697 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_55 = add i64 %add_ln65_54, i64 %and_ln65_35" [d2.cpp:65]   --->   Operation 697 'add' 'add_ln65_55' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 698 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_56 = add i64 %add_ln65_55, i64 %add_ln65_53" [d2.cpp:65]   --->   Operation 698 'add' 'add_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 699 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_42 = add i64 %arr_25_load_1, i64 %add_ln65_56" [d2.cpp:65]   --->   Operation 699 'add' 'arr_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 700 [1/1] (0.79ns)   --->   "%sub_ln36_20 = sub i4 %sub_ln36_19, i4 %zext_ln64_1" [d2.cpp:36]   --->   Operation 700 'sub' 'sub_ln36_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 701 [1/1] (0.79ns)   --->   "%icmp_ln61_12 = icmp_sgt  i4 %p_cast262, i4 5" [d2.cpp:61]   --->   Operation 701 'icmp' 'icmp_ln61_12' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 702 [1/1] (0.28ns)   --->   "%and_ln61_12 = and i1 %icmp_ln61_12, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 702 'and' 'and_ln61_12' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_15)   --->   "%select_ln65_66 = select i1 %and_ln61_12, i3 6, i3 7" [d2.cpp:65]   --->   Operation 703 'select' 'select_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 704 [1/1] (0.48ns)   --->   "%tmp_96 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_20" [d2.cpp:65]   --->   Operation 704 'mux' 'tmp_96' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 705 [1/1] (0.00ns)   --->   "%zext_ln65_34 = zext i32 %tmp_96" [d2.cpp:65]   --->   Operation 705 'zext' 'zext_ln65_34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_80)   --->   "%select_ln65_67 = select i1 %and_ln61_12, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 706 'select' 'select_ln65_67' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 707 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_80 = and i64 %mul_ln59_2, i64 %select_ln65_67" [d2.cpp:65]   --->   Operation 707 'and' 'and_ln65_80' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 708 '%mul_ln65_77 = mul i64 %zext_ln65_34, i64 %zext_ln59_13'
ST_2 : Operation 708 [1/1] (2.10ns)   --->   "%mul_ln65_77 = mul i64 %zext_ln65_34, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 708 'mul' 'mul_ln65_77' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 709 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_81)   --->   "%select_ln65_68 = select i1 %icmp_ln65_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 709 'select' 'select_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 710 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_81 = and i64 %mul_ln65_77, i64 %select_ln65_68" [d2.cpp:65]   --->   Operation 710 'and' 'and_ln65_81' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 711 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_58 = add i64 %and_ln65_27, i64 %and_ln65_54" [d2.cpp:65]   --->   Operation 711 'add' 'add_ln65_58' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 712 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_59 = add i64 %add_ln65_58, i64 %and_ln65_26" [d2.cpp:65]   --->   Operation 712 'add' 'add_ln65_59' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 713 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_60 = add i64 %and_ln65_80, i64 %and_ln65_81" [d2.cpp:65]   --->   Operation 713 'add' 'add_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 714 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_61 = add i64 %add_ln65_60, i64 %and_ln65_55" [d2.cpp:65]   --->   Operation 714 'add' 'add_ln65_61' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 715 [1/1] (0.00ns)   --->   "%zext_ln66_19 = zext i1 %icmp_ln65_8" [d2.cpp:66]   --->   Operation 715 'zext' 'zext_ln66_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 716 [1/1] (0.79ns)   --->   "%sub_ln36_21 = sub i4 %sub_ln36_20, i4 %zext_ln66_19" [d2.cpp:36]   --->   Operation 716 'sub' 'sub_ln36_21' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 717 [1/1] (0.79ns)   --->   "%icmp_ln61_13 = icmp_sgt  i4 %p_cast262, i4 4" [d2.cpp:61]   --->   Operation 717 'icmp' 'icmp_ln61_13' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 718 [1/1] (0.28ns)   --->   "%and_ln61_13 = and i1 %icmp_ln61_13, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 718 'and' 'and_ln61_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 719 [1/1] (0.00ns) (grouped into LUT with out node sub_ln65_15)   --->   "%zext_ln65_43 = zext i1 %and_ln61_13" [d2.cpp:65]   --->   Operation 719 'zext' 'zext_ln65_43' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 720 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln65_15 = sub i3 %select_ln65_66, i3 %zext_ln65_43" [d2.cpp:65]   --->   Operation 720 'sub' 'sub_ln65_15' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 721 [1/1] (0.00ns)   --->   "%zext_ln66_20 = zext i1 %icmp_ln65_9" [d2.cpp:66]   --->   Operation 721 'zext' 'zext_ln66_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 722 [1/1] (0.79ns)   --->   "%sub_ln36_6 = sub i4 %sub_ln36_21, i4 %zext_ln66_20" [d2.cpp:36]   --->   Operation 722 'sub' 'sub_ln36_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 723 [1/1] (0.00ns)   --->   "%tmp_99 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %p_cast262, i32 2, i32 3" [d2.cpp:61]   --->   Operation 723 'partselect' 'tmp_99' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 724 [1/1] (0.54ns)   --->   "%icmp_ln61_14 = icmp_eq  i2 %tmp_99, i2 1" [d2.cpp:61]   --->   Operation 724 'icmp' 'icmp_ln61_14' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 725 [1/1] (0.28ns)   --->   "%and_ln61_14 = and i1 %icmp_ln61_14, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 725 'and' 'and_ln61_14' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 726 [1/1] (0.00ns)   --->   "%zext_ln65_44 = zext i1 %and_ln61_14" [d2.cpp:65]   --->   Operation 726 'zext' 'zext_ln65_44' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 727 [1/1] (0.67ns)   --->   "%sub_ln65_16 = sub i3 %sub_ln65_15, i3 %zext_ln65_44" [d2.cpp:65]   --->   Operation 727 'sub' 'sub_ln65_16' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 728 [1/1] (0.00ns)   --->   "%zext_ln66_21 = zext i1 %icmp_ln65_10" [d2.cpp:66]   --->   Operation 728 'zext' 'zext_ln66_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 729 [1/1] (0.79ns)   --->   "%sub_ln36_7 = sub i4 %sub_ln36_6, i4 %zext_ln66_21" [d2.cpp:36]   --->   Operation 729 'sub' 'sub_ln36_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 730 [1/1] (0.79ns)   --->   "%icmp_ln61_15 = icmp_sgt  i4 %p_cast262, i4 2" [d2.cpp:61]   --->   Operation 730 'icmp' 'icmp_ln61_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 731 [1/1] (0.28ns)   --->   "%and_ln61_15 = and i1 %icmp_ln61_15, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 731 'and' 'and_ln61_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 732 [1/1] (0.00ns)   --->   "%tmp_105 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %p_cast262, i32 1, i32 3" [d2.cpp:61]   --->   Operation 732 'partselect' 'tmp_105' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 733 [1/1] (0.67ns)   --->   "%icmp_ln61_16 = icmp_sgt  i3 %tmp_105, i3 0" [d2.cpp:61]   --->   Operation 733 'icmp' 'icmp_ln61_16' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 734 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_42, i64 %arr_25" [d2.cpp:42]   --->   Operation 734 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 735 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_41, i64 %arr_24" [d2.cpp:42]   --->   Operation 735 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 736 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_40, i64 %arr_23" [d2.cpp:42]   --->   Operation 736 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 737 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_33, i64 %arr" [d2.cpp:42]   --->   Operation 737 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 738 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %k1_6, i32 %k1" [d2.cpp:42]   --->   Operation 738 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 739 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %k_6, i32 %k_s" [d2.cpp:42]   --->   Operation 739 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 987 [1/1] (0.00ns)   --->   "%arr_load = load i64 %arr"   --->   Operation 987 'load' 'arr_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 988 [1/1] (0.00ns)   --->   "%arr_17_load = load i64 %arr_17"   --->   Operation 988 'load' 'arr_17_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 989 [1/1] (0.00ns)   --->   "%arr_18_load = load i64 %arr_18"   --->   Operation 989 'load' 'arr_18_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 990 [1/1] (0.00ns)   --->   "%arr_19_load = load i64 %arr_19"   --->   Operation 990 'load' 'arr_19_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 991 [1/1] (0.00ns)   --->   "%arr_20_load = load i64 %arr_20"   --->   Operation 991 'load' 'arr_20_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 992 [1/1] (0.00ns)   --->   "%arr_21_load = load i64 %arr_21"   --->   Operation 992 'load' 'arr_21_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 993 [1/1] (0.00ns)   --->   "%arr_22_load = load i64 %arr_22"   --->   Operation 993 'load' 'arr_22_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 994 [1/1] (0.00ns)   --->   "%arr_23_load = load i64 %arr_23"   --->   Operation 994 'load' 'arr_23_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 995 [1/1] (0.00ns)   --->   "%arr_24_load = load i64 %arr_24"   --->   Operation 995 'load' 'arr_24_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 996 [1/1] (0.00ns)   --->   "%arr_25_load = load i64 %arr_25"   --->   Operation 996 'load' 'arr_25_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 997 [1/1] (0.00ns)   --->   "%arr_26_load = load i64 %arr_26"   --->   Operation 997 'load' 'arr_26_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 998 [1/1] (0.00ns)   --->   "%arr_27_load = load i64 %arr_27"   --->   Operation 998 'load' 'arr_27_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 999 [1/1] (0.00ns)   --->   "%arr_28_load = load i64 %arr_28"   --->   Operation 999 'load' 'arr_28_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1000 [1/1] (0.00ns)   --->   "%arr_29_load = load i64 %arr_29"   --->   Operation 1000 'load' 'arr_29_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1001 [1/1] (0.00ns)   --->   "%arr_30_load = load i64 %arr_30"   --->   Operation 1001 'load' 'arr_30_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1002 [1/1] (0.00ns)   --->   "%arr_31_load = load i64 %arr_31"   --->   Operation 1002 'load' 'arr_31_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1003 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add44799_out, i64 %arr_31_load"   --->   Operation 1003 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1004 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_4_2795_out, i64 %arr_30_load"   --->   Operation 1004 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1005 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_4_1794_out, i64 %arr_29_load"   --->   Operation 1005 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1006 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_4793_out, i64 %arr_28_load"   --->   Operation 1006 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1007 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_3_2792_out, i64 %arr_27_load"   --->   Operation 1007 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1008 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_3_1791_out, i64 %arr_26_load"   --->   Operation 1008 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1009 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_3790_out, i64 %arr_25_load"   --->   Operation 1009 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1010 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_2539_2789_out, i64 %arr_24_load"   --->   Operation 1010 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1011 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_2539_1788_out, i64 %arr_23_load"   --->   Operation 1011 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1012 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_2539787_out, i64 %arr_22_load"   --->   Operation 1012 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1013 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_1474_2786_out, i64 %arr_21_load"   --->   Operation 1013 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1014 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_1474_1785_out, i64 %arr_20_load"   --->   Operation 1014 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1015 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_1474784_out, i64 %arr_19_load"   --->   Operation 1015 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1016 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_2683783_out, i64 %arr_18_load"   --->   Operation 1016 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1017 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75_1616782_out, i64 %arr_17_load"   --->   Operation 1017 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1018 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add75781_out, i64 %arr_load"   --->   Operation 1018 'write' 'write_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 1019 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 1019 'ret' 'ret_ln0' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.15>
ST_3 : Operation 740 [1/1] (0.00ns)   --->   "%arr_17_load_1 = load i64 %arr_17" [d2.cpp:63]   --->   Operation 740 'load' 'arr_17_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 741 [1/1] (0.00ns)   --->   "%arr_18_load_1 = load i64 %arr_18" [d2.cpp:65]   --->   Operation 741 'load' 'arr_18_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 742 [1/1] (0.00ns)   --->   "%arr_19_load_1 = load i64 %arr_19" [d2.cpp:65]   --->   Operation 742 'load' 'arr_19_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 743 [1/1] (0.00ns)   --->   "%arr_20_load_1 = load i64 %arr_20" [d2.cpp:65]   --->   Operation 743 'load' 'arr_20_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 744 [1/1] (0.00ns)   --->   "%arr_21_load_1 = load i64 %arr_21" [d2.cpp:65]   --->   Operation 744 'load' 'arr_21_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 745 [1/1] (0.00ns)   --->   "%arr_22_load_1 = load i64 %arr_22" [d2.cpp:65]   --->   Operation 745 'load' 'arr_22_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 746 [1/1] (0.00ns)   --->   "%arr_26_load_1 = load i64 %arr_26" [d2.cpp:65]   --->   Operation 746 'load' 'arr_26_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 747 [1/1] (0.00ns)   --->   "%arr_27_load_1 = load i64 %arr_27" [d2.cpp:65]   --->   Operation 747 'load' 'arr_27_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 748 [1/1] (0.00ns)   --->   "%arr_28_load_1 = load i64 %arr_28" [d2.cpp:65]   --->   Operation 748 'load' 'arr_28_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 749 [1/1] (0.00ns)   --->   "%arr_29_load_1 = load i64 %arr_29" [d2.cpp:65]   --->   Operation 749 'load' 'arr_29_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 750 [1/1] (0.00ns)   --->   "%arr_30_load_1 = load i64 %arr_30" [d2.cpp:65]   --->   Operation 750 'load' 'arr_30_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 751 [1/1] (0.00ns)   --->   "%arr_31_load_1 = load i64 %arr_31" [d2.cpp:51]   --->   Operation 751 'load' 'arr_31_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 752 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d2.cpp:44]   --->   Operation 752 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 753 [1/1] (0.00ns)   --->   "%speclooptripcount_ln42 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d2.cpp:42]   --->   Operation 753 'speclooptripcount' 'speclooptripcount_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 754 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d2.cpp:42]   --->   Operation 754 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 755 [1/1] (1.08ns)   --->   "%add_ln51 = add i64 %tmp1, i64 %arr_31_load_1" [d2.cpp:51]   --->   Operation 755 'add' 'add_ln51' <Predicate = (tmp_34)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 756 [1/1] (0.42ns)   --->   "%select_ln51 = select i1 %tmp_34, i64 %add_ln51, i64 %arr_31_load_1" [d2.cpp:51]   --->   Operation 756 'select' 'select_ln51' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 757 [1/1] (0.44ns)   --->   "%select_ln59 = select i1 %and_ln59, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:59]   --->   Operation 757 'select' 'select_ln59' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 758 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i32 %select_ln59" [d2.cpp:59]   --->   Operation 758 'zext' 'zext_ln59_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 759 [1/1] (0.48ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln65" [d2.cpp:63]   --->   Operation 759 'mux' 'tmp_6' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 760 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i32 %tmp_6" [d2.cpp:63]   --->   Operation 760 'zext' 'zext_ln63_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 761 [1/1] (0.44ns)   --->   "%select_ln65 = select i1 %tmp_35, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:65]   --->   Operation 761 'select' 'select_ln65' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 762 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i32 %select_ln65" [d2.cpp:65]   --->   Operation 762 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 763 '%mul_ln65_1 = mul i64 %zext_ln65, i64 %zext_ln59'
ST_3 : Operation 763 [1/1] (2.10ns)   --->   "%mul_ln65_1 = mul i64 %zext_ln65, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 763 'mul' 'mul_ln65_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 764 '%mul_ln65_2 = mul i64 %zext_ln59_1, i64 %zext_ln59'
ST_3 : Operation 764 [1/1] (2.10ns)   --->   "%mul_ln65_2 = mul i64 %zext_ln59_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 764 'mul' 'mul_ln65_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 765 '%mul_ln65_3 = mul i64 %zext_ln63_1, i64 %zext_ln59'
ST_3 : Operation 765 [1/1] (2.10ns)   --->   "%mul_ln65_3 = mul i64 %zext_ln63_1, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 765 'mul' 'mul_ln65_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 766 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_3)   --->   "%select_ln65_7 = select i1 %icmp_ln59, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 766 'select' 'select_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 767 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_3 = and i64 %mul_ln65_1, i64 %select_ln65_7" [d2.cpp:65]   --->   Operation 767 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 768 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_4)   --->   "%select_ln65_8 = select i1 %and_ln59_1, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 768 'select' 'select_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 769 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_4 = and i64 %mul_ln65_2, i64 %select_ln65_8" [d2.cpp:65]   --->   Operation 769 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 770 [1/1] (0.37ns)   --->   "%and_ln65_5 = and i64 %mul_ln65_3, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 770 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 771 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_1" [d2.cpp:59]   --->   Operation 771 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 772 [1/1] (0.00ns)   --->   "%zext_ln59_5 = zext i32 %tmp_14" [d2.cpp:59]   --->   Operation 772 'zext' 'zext_ln59_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 773 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i1 %and_ln59_5" [d2.cpp:60]   --->   Operation 773 'zext' 'zext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 774 [1/1] (0.79ns)   --->   "%sub_ln63_2 = sub i4 %sub_ln63_1, i4 %zext_ln60_2" [d2.cpp:63]   --->   Operation 774 'sub' 'sub_ln63_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 775 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_1" [d2.cpp:63]   --->   Operation 775 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 776 [1/1] (0.00ns)   --->   "%zext_ln63_5 = zext i32 %tmp_15" [d2.cpp:63]   --->   Operation 776 'zext' 'zext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 777 [1/1] (0.79ns)   --->   "%sub_ln65_2 = sub i4 %sub_ln65_1, i4 %zext_ln64" [d2.cpp:65]   --->   Operation 777 'sub' 'sub_ln65_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 778 '%mul_ln65_14 = mul i64 %zext_ln59_5, i64 %zext_ln59'
ST_3 : Operation 778 [1/1] (2.10ns)   --->   "%mul_ln65_14 = mul i64 %zext_ln59_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 778 'mul' 'mul_ln65_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 779 '%mul_ln65_15 = mul i64 %zext_ln63_5, i64 %zext_ln59'
ST_3 : Operation 779 [1/1] (2.10ns)   --->   "%mul_ln65_15 = mul i64 %zext_ln63_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 779 'mul' 'mul_ln65_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 780 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_16)   --->   "%select_ln65_16 = select i1 %and_ln59_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 780 'select' 'select_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 781 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_16 = and i64 %mul_ln65_14, i64 %select_ln65_16" [d2.cpp:65]   --->   Operation 781 'and' 'and_ln65_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 782 [1/1] (0.37ns)   --->   "%and_ln65_17 = and i64 %mul_ln65_15, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 782 'and' 'and_ln65_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 783 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln63_2" [d2.cpp:59]   --->   Operation 783 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 784 [1/1] (0.00ns)   --->   "%zext_ln59_6 = zext i32 %tmp_17" [d2.cpp:59]   --->   Operation 784 'zext' 'zext_ln59_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 785 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_19)   --->   "%and_ln59_6 = and i1 %icmp_ln59_5, i1 %cmp69" [d2.cpp:59]   --->   Operation 785 'and' 'and_ln59_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 786 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_2" [d2.cpp:63]   --->   Operation 786 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 787 [1/1] (0.00ns)   --->   "%zext_ln63_6 = zext i32 %tmp_18" [d2.cpp:63]   --->   Operation 787 'zext' 'zext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 788 '%mul_ln65_17 = mul i64 %zext_ln59_6, i64 %zext_ln59'
ST_3 : Operation 788 [1/1] (2.10ns)   --->   "%mul_ln65_17 = mul i64 %zext_ln59_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 788 'mul' 'mul_ln65_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 789 '%mul_ln65_18 = mul i64 %zext_ln63_6, i64 %zext_ln59'
ST_3 : Operation 789 [1/1] (2.10ns)   --->   "%mul_ln65_18 = mul i64 %zext_ln63_6, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 789 'mul' 'mul_ln65_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 790 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_19)   --->   "%select_ln65_18 = select i1 %and_ln59_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 790 'select' 'select_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 791 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_19 = and i64 %mul_ln65_17, i64 %select_ln65_18" [d2.cpp:65]   --->   Operation 791 'and' 'and_ln65_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 792 [1/1] (0.37ns)   --->   "%and_ln65_20 = and i64 %mul_ln65_18, i64 %select_ln65_3" [d2.cpp:65]   --->   Operation 792 'and' 'and_ln65_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 793 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_1" [d2.cpp:61]   --->   Operation 793 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 794 [1/1] (0.00ns)   --->   "%zext_ln61_2 = zext i32 %tmp_25" [d2.cpp:61]   --->   Operation 794 'zext' 'zext_ln61_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 795 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_1" [d2.cpp:65]   --->   Operation 795 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 796 [1/1] (0.00ns)   --->   "%zext_ln65_10 = zext i32 %tmp_26" [d2.cpp:65]   --->   Operation 796 'zext' 'zext_ln65_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 797 '%mul_ln65_25 = mul i64 %zext_ln61_2, i64 %zext_ln59'
ST_3 : Operation 797 [1/1] (2.10ns)   --->   "%mul_ln65_25 = mul i64 %zext_ln61_2, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 797 'mul' 'mul_ln65_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 798 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_28)   --->   "%select_ln65_27 = select i1 %and_ln61_3, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 798 'select' 'select_ln65_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 799 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_28 = and i64 %mul_ln65_25, i64 %select_ln65_27" [d2.cpp:65]   --->   Operation 799 'and' 'and_ln65_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 800 '%mul_ln65_26 = mul i64 %zext_ln65_10, i64 %zext_ln59'
ST_3 : Operation 800 [1/1] (2.10ns)   --->   "%mul_ln65_26 = mul i64 %zext_ln65_10, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 800 'mul' 'mul_ln65_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 801 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_29)   --->   "%select_ln65_28 = select i1 %icmp_ln65_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 801 'select' 'select_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 802 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_29 = and i64 %mul_ln65_26, i64 %select_ln65_28" [d2.cpp:65]   --->   Operation 802 'and' 'and_ln65_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 803 [1/1] (0.00ns)   --->   "%zext_ln66_8 = zext i1 %icmp_ln65_4" [d2.cpp:66]   --->   Operation 803 'zext' 'zext_ln66_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 804 [1/1] (0.79ns)   --->   "%sub_ln36_2 = sub i4 %sub_ln36_1, i4 %zext_ln66_8" [d2.cpp:36]   --->   Operation 804 'sub' 'sub_ln36_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 805 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_3" [d2.cpp:61]   --->   Operation 805 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 806 [1/1] (0.00ns)   --->   "%zext_ln61_3 = zext i32 %tmp_27" [d2.cpp:61]   --->   Operation 806 'zext' 'zext_ln61_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 807 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 807 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 808 [1/1] (0.00ns)   --->   "%zext_ln65_11 = zext i32 %tmp_28" [d2.cpp:65]   --->   Operation 808 'zext' 'zext_ln65_11' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 809 '%mul_ln65_27 = mul i64 %zext_ln61_3, i64 %zext_ln59'
ST_3 : Operation 809 [1/1] (2.10ns)   --->   "%mul_ln65_27 = mul i64 %zext_ln61_3, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 809 'mul' 'mul_ln65_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 810 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_30)   --->   "%select_ln65_29 = select i1 %and_ln61_4, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 810 'select' 'select_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 811 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_30 = and i64 %mul_ln65_27, i64 %select_ln65_29" [d2.cpp:65]   --->   Operation 811 'and' 'and_ln65_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 812 '%mul_ln65_28 = mul i64 %zext_ln65_11, i64 %zext_ln59'
ST_3 : Operation 812 [1/1] (2.10ns)   --->   "%mul_ln65_28 = mul i64 %zext_ln65_11, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 812 'mul' 'mul_ln65_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 813 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_4" [d2.cpp:61]   --->   Operation 813 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 814 [1/1] (0.00ns)   --->   "%zext_ln61_4 = zext i32 %tmp_29" [d2.cpp:61]   --->   Operation 814 'zext' 'zext_ln61_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 815 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i1 %and_ln61_5" [d2.cpp:62]   --->   Operation 815 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 816 [1/1] (0.79ns)   --->   "%sub_ln65_5 = sub i4 %sub_ln65_4, i4 %zext_ln62_2" [d2.cpp:65]   --->   Operation 816 'sub' 'sub_ln65_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 817 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 817 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 818 [1/1] (0.00ns)   --->   "%zext_ln65_12 = zext i32 %tmp_30" [d2.cpp:65]   --->   Operation 818 'zext' 'zext_ln65_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 819 '%mul_ln65_29 = mul i64 %zext_ln61_4, i64 %zext_ln59'
ST_3 : Operation 819 [1/1] (2.10ns)   --->   "%mul_ln65_29 = mul i64 %zext_ln61_4, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 819 'mul' 'mul_ln65_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 820 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_31)   --->   "%select_ln65_30 = select i1 %and_ln61_5, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 820 'select' 'select_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 821 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_31 = and i64 %mul_ln65_29, i64 %select_ln65_30" [d2.cpp:65]   --->   Operation 821 'and' 'and_ln65_31' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 822 '%mul_ln65_30 = mul i64 %zext_ln65_12, i64 %zext_ln59'
ST_3 : Operation 822 [1/1] (2.10ns)   --->   "%mul_ln65_30 = mul i64 %zext_ln65_12, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 822 'mul' 'mul_ln65_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 823 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_5" [d2.cpp:61]   --->   Operation 823 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 824 [1/1] (0.00ns)   --->   "%zext_ln61_5 = zext i32 %tmp_31" [d2.cpp:61]   --->   Operation 824 'zext' 'zext_ln61_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_32)   --->   "%and_ln61_6 = and i1 %icmp_ln61_6, i1 %cmp69" [d2.cpp:61]   --->   Operation 825 'and' 'and_ln61_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 826 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_2" [d2.cpp:65]   --->   Operation 826 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 827 [1/1] (0.00ns)   --->   "%zext_ln65_13 = zext i32 %tmp_32" [d2.cpp:65]   --->   Operation 827 'zext' 'zext_ln65_13' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 828 '%mul_ln65_31 = mul i64 %zext_ln61_5, i64 %zext_ln59'
ST_3 : Operation 828 [1/1] (2.10ns)   --->   "%mul_ln65_31 = mul i64 %zext_ln61_5, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 828 'mul' 'mul_ln65_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 829 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_32)   --->   "%select_ln65_31 = select i1 %and_ln61_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 829 'select' 'select_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 830 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_32 = and i64 %mul_ln65_31, i64 %select_ln65_31" [d2.cpp:65]   --->   Operation 830 'and' 'and_ln65_32' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 831 '%mul_ln65_32 = mul i64 %zext_ln65_13, i64 %zext_ln59'
ST_3 : Operation 831 [1/1] (2.10ns)   --->   "%mul_ln65_32 = mul i64 %zext_ln65_13, i64 %zext_ln59" [d2.cpp:65]   --->   Operation 831 'mul' 'mul_ln65_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 832 [1/1] (1.08ns)   --->   "%add_ln51_4 = add i64 %tmp3, i64 %select_ln51" [d2.cpp:51]   --->   Operation 832 'add' 'add_ln51_4' <Predicate = (tmp_71)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 833 [1/1] (0.42ns)   --->   "%select_ln51_3 = select i1 %tmp_71, i64 %add_ln51_4, i64 %select_ln51" [d2.cpp:51]   --->   Operation 833 'select' 'select_ln51_3' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 834 [1/1] (0.00ns)   --->   "%sext_ln65_2 = sext i3 %sub_ln65_24" [d2.cpp:65]   --->   Operation 834 'sext' 'sext_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 835 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_2" [d2.cpp:61]   --->   Operation 835 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 836 [1/1] (0.00ns)   --->   "%zext_ln61_6 = zext i32 %tmp_58" [d2.cpp:61]   --->   Operation 836 'zext' 'zext_ln61_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 837 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d2.cpp:65]   --->   Operation 837 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 838 [1/1] (0.00ns)   --->   "%zext_ln65_23 = zext i32 %tmp_59" [d2.cpp:65]   --->   Operation 838 'zext' 'zext_ln65_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 839 '%mul_ln65_53 = mul i64 %zext_ln61_6, i64 %zext_ln59_7'
ST_3 : Operation 839 [1/1] (2.10ns)   --->   "%mul_ln65_53 = mul i64 %zext_ln61_6, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 839 'mul' 'mul_ln65_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 840 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_56)   --->   "%select_ln65_48 = select i1 %and_ln61_8, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 840 'select' 'select_ln65_48' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 841 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_56 = and i64 %mul_ln65_53, i64 %select_ln65_48" [d2.cpp:65]   --->   Operation 841 'and' 'and_ln65_56' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 842 '%mul_ln65_54 = mul i64 %zext_ln65_23, i64 %zext_ln59_7'
ST_3 : Operation 842 [1/1] (2.10ns)   --->   "%mul_ln65_54 = mul i64 %zext_ln65_23, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 842 'mul' 'mul_ln65_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 843 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_57)   --->   "%select_ln65_49 = select i1 %icmp_ln65_6, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 843 'select' 'select_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 844 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_57 = and i64 %mul_ln65_54, i64 %select_ln65_49" [d2.cpp:65]   --->   Operation 844 'and' 'and_ln65_57' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 845 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_3" [d2.cpp:61]   --->   Operation 845 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 846 [1/1] (0.00ns)   --->   "%zext_ln61_7 = zext i32 %tmp_60" [d2.cpp:61]   --->   Operation 846 'zext' 'zext_ln61_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 847 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d2.cpp:65]   --->   Operation 847 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 848 [1/1] (0.00ns)   --->   "%zext_ln65_24 = zext i32 %tmp_61" [d2.cpp:65]   --->   Operation 848 'zext' 'zext_ln65_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 849 '%mul_ln65_55 = mul i64 %zext_ln61_7, i64 %zext_ln59_7'
ST_3 : Operation 849 [1/1] (2.10ns)   --->   "%mul_ln65_55 = mul i64 %zext_ln61_7, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 849 'mul' 'mul_ln65_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 850 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_58)   --->   "%select_ln65_50 = select i1 %and_ln61_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 850 'select' 'select_ln65_50' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 851 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_58 = and i64 %mul_ln65_55, i64 %select_ln65_50" [d2.cpp:65]   --->   Operation 851 'and' 'and_ln65_58' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 852 '%mul_ln65_56 = mul i64 %zext_ln65_24, i64 %zext_ln59_7'
ST_3 : Operation 852 [1/1] (2.10ns)   --->   "%mul_ln65_56 = mul i64 %zext_ln65_24, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 852 'mul' 'mul_ln65_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 853 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_59)   --->   "%select_ln65_51 = select i1 %icmp_ln65_7, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 853 'select' 'select_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 854 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_59 = and i64 %mul_ln65_56, i64 %select_ln65_51" [d2.cpp:65]   --->   Operation 854 'and' 'and_ln65_59' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 855 [1/1] (0.00ns)   --->   "%zext_ln66_15 = zext i1 %icmp_ln65_7" [d2.cpp:66]   --->   Operation 855 'zext' 'zext_ln66_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 856 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln66_15" [d2.cpp:36]   --->   Operation 856 'sub' 'sub_ln36_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 857 [1/1] (0.48ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_10" [d2.cpp:61]   --->   Operation 857 'mux' 'tmp_62' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 858 [1/1] (0.00ns)   --->   "%zext_ln61_8 = zext i32 %tmp_62" [d2.cpp:61]   --->   Operation 858 'zext' 'zext_ln61_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 859 [1/1] (0.00ns)   --->   "%zext_ln62_4 = zext i1 %and_ln61_10" [d2.cpp:62]   --->   Operation 859 'zext' 'zext_ln62_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 860 [1/1] (0.79ns)   --->   "%sub_ln65_11 = sub i4 %sub_ln65_10, i4 %zext_ln62_4" [d2.cpp:65]   --->   Operation 860 'sub' 'sub_ln65_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 861 [1/1] (0.48ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 861 'mux' 'tmp_63' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 862 [1/1] (0.00ns)   --->   "%zext_ln65_25 = zext i32 %tmp_63" [d2.cpp:65]   --->   Operation 862 'zext' 'zext_ln65_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 863 '%mul_ln65_57 = mul i64 %zext_ln61_8, i64 %zext_ln59_7'
ST_3 : Operation 863 [1/1] (2.10ns)   --->   "%mul_ln65_57 = mul i64 %zext_ln61_8, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 863 'mul' 'mul_ln65_57' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 864 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_60)   --->   "%select_ln65_52 = select i1 %and_ln61_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 864 'select' 'select_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 865 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_60 = and i64 %mul_ln65_57, i64 %select_ln65_52" [d2.cpp:65]   --->   Operation 865 'and' 'and_ln65_60' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 866 '%mul_ln65_58 = mul i64 %zext_ln65_25, i64 %zext_ln59_7'
ST_3 : Operation 866 [1/1] (2.10ns)   --->   "%mul_ln65_58 = mul i64 %zext_ln65_25, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 866 'mul' 'mul_ln65_58' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 867 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_11" [d2.cpp:61]   --->   Operation 867 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 868 [1/1] (0.00ns)   --->   "%zext_ln61_9 = zext i32 %tmp_64" [d2.cpp:61]   --->   Operation 868 'zext' 'zext_ln61_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 869 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_61)   --->   "%and_ln61_11 = and i1 %icmp_ln61_11, i1 %cmp69_1" [d2.cpp:61]   --->   Operation 869 'and' 'and_ln61_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 870 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_5" [d2.cpp:65]   --->   Operation 870 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 871 [1/1] (0.00ns)   --->   "%zext_ln65_26 = zext i32 %tmp_65" [d2.cpp:65]   --->   Operation 871 'zext' 'zext_ln65_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 872 '%mul_ln65_59 = mul i64 %zext_ln61_9, i64 %zext_ln59_7'
ST_3 : Operation 872 [1/1] (2.10ns)   --->   "%mul_ln65_59 = mul i64 %zext_ln61_9, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 872 'mul' 'mul_ln65_59' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 873 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_61)   --->   "%select_ln65_53 = select i1 %and_ln61_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 873 'select' 'select_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 874 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_61 = and i64 %mul_ln65_59, i64 %select_ln65_53" [d2.cpp:65]   --->   Operation 874 'and' 'and_ln65_61' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 875 '%mul_ln65_60 = mul i64 %zext_ln65_26, i64 %zext_ln59_7'
ST_3 : Operation 875 [1/1] (2.10ns)   --->   "%mul_ln65_60 = mul i64 %zext_ln65_26, i64 %zext_ln59_7" [d2.cpp:65]   --->   Operation 875 'mul' 'mul_ln65_60' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 876 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_3" [d2.cpp:51]   --->   Operation 876 'mux' 'tmp_77' <Predicate = (icmp_ln51)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 877 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i32 %tmp_77" [d2.cpp:51]   --->   Operation 877 'zext' 'zext_ln51_2' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 878 [1/1] (0.48ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln53_2" [d2.cpp:51]   --->   Operation 878 'mux' 'tmp_78' <Predicate = (icmp_ln51)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 879 [1/1] (0.00ns)   --->   "%tmp_87_cast = zext i32 %tmp_78" [d2.cpp:51]   --->   Operation 879 'zext' 'tmp_87_cast' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 880 [1/1] (1.01ns)   --->   "%tmp4 = add i33 %tmp_87_cast, i33 %zext_ln51_2" [d2.cpp:51]   --->   Operation 880 'add' 'tmp4' <Predicate = (icmp_ln51)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 881 [1/1] (0.00ns)   --->   "%tmp4_cast = zext i33 %tmp4" [d2.cpp:51]   --->   Operation 881 'zext' 'tmp4_cast' <Predicate = (icmp_ln51)> <Delay = 0.00>
ST_3 : [1/1] (0.47ns)   --->   Input mux for Operation 882 '%tmp5 = mul i64 %tmp4_cast, i64 %zext_ln59_13'
ST_3 : Operation 882 [1/1] (2.93ns)   --->   "%tmp5 = mul i64 %tmp4_cast, i64 %zext_ln59_13" [d2.cpp:51]   --->   Operation 882 'mul' 'tmp5' <Predicate = (icmp_ln51)> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 883 [1/1] (1.08ns)   --->   "%add_ln51_8 = add i64 %tmp5, i64 %select_ln51_3" [d2.cpp:51]   --->   Operation 883 'add' 'add_ln51_8' <Predicate = (icmp_ln51)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 884 [1/1] (0.42ns)   --->   "%arr_32 = select i1 %icmp_ln51, i64 %add_ln51_8, i64 %select_ln51_3" [d2.cpp:51]   --->   Operation 884 'select' 'arr_32' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 885 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_5 = add i64 %and_ln65_5, i64 %and_ln65_3" [d2.cpp:63]   --->   Operation 885 'add' 'add_ln63_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 886 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_6 = add i64 %add_ln63_5, i64 %and_ln65_4" [d2.cpp:63]   --->   Operation 886 'add' 'add_ln63_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 887 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_10 = add i64 %add_ln63_9, i64 %add_ln63_6" [d2.cpp:63]   --->   Operation 887 'add' 'add_ln63_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 888 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_34 = add i64 %arr_17_load_1, i64 %add_ln63_10" [d2.cpp:63]   --->   Operation 888 'add' 'arr_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 889 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_8 = add i64 %add_ln65_7, i64 %add_ln65_3" [d2.cpp:65]   --->   Operation 889 'add' 'add_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 890 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_35 = add i64 %arr_18_load_1, i64 %add_ln65_8" [d2.cpp:65]   --->   Operation 890 'add' 'arr_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 891 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_17 = add i64 %add_ln65_16, i64 %add_ln65_12" [d2.cpp:65]   --->   Operation 891 'add' 'add_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 892 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_36 = add i64 %arr_19_load_1, i64 %add_ln65_17" [d2.cpp:65]   --->   Operation 892 'add' 'arr_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 893 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_26 = add i64 %add_ln65_25, i64 %add_ln65_21" [d2.cpp:65]   --->   Operation 893 'add' 'add_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 894 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_37 = add i64 %arr_20_load_1, i64 %add_ln65_26" [d2.cpp:65]   --->   Operation 894 'add' 'arr_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 895 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_28 = add i64 %and_ln65_16, i64 %and_ln65_17" [d2.cpp:65]   --->   Operation 895 'add' 'add_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 896 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_30 = add i64 %add_ln65_29, i64 %add_ln65_28" [d2.cpp:65]   --->   Operation 896 'add' 'add_ln65_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 897 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_35 = add i64 %add_ln65_34, i64 %add_ln65_30" [d2.cpp:65]   --->   Operation 897 'add' 'add_ln65_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 898 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_38 = add i64 %arr_21_load_1, i64 %add_ln65_35" [d2.cpp:65]   --->   Operation 898 'add' 'arr_38' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 899 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_37 = add i64 %and_ln65_19, i64 %and_ln65_20" [d2.cpp:65]   --->   Operation 899 'add' 'add_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 900 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_39 = add i64 %add_ln65_38, i64 %add_ln65_37" [d2.cpp:65]   --->   Operation 900 'add' 'add_ln65_39' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 901 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_44 = add i64 %add_ln65_43, i64 %add_ln65_39" [d2.cpp:65]   --->   Operation 901 'add' 'add_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 902 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_39 = add i64 %arr_22_load_1, i64 %add_ln65_44" [d2.cpp:65]   --->   Operation 902 'add' 'arr_39' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 903 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_62 = add i64 %add_ln65_61, i64 %add_ln65_59" [d2.cpp:65]   --->   Operation 903 'add' 'add_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 904 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_43 = add i64 %arr_26_load_1, i64 %add_ln65_62" [d2.cpp:65]   --->   Operation 904 'add' 'arr_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 905 [1/1] (0.44ns)   --->   "%select_ln61_1 = select i1 %and_ln61_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:61]   --->   Operation 905 'select' 'select_ln61_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 906 [1/1] (0.00ns)   --->   "%zext_ln61_10 = zext i32 %select_ln61_1" [d2.cpp:61]   --->   Operation 906 'zext' 'zext_ln61_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 907 [1/1] (0.00ns)   --->   "%sext_ln65_4 = sext i3 %sub_ln65_15" [d2.cpp:65]   --->   Operation 907 'sext' 'sext_ln65_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 908 [1/1] (0.48ns)   --->   "%tmp_97 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_21" [d2.cpp:65]   --->   Operation 908 'mux' 'tmp_97' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 909 [1/1] (0.00ns)   --->   "%zext_ln65_35 = zext i32 %tmp_97" [d2.cpp:65]   --->   Operation 909 'zext' 'zext_ln65_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 910 '%mul_ln65_78 = mul i64 %zext_ln61_10, i64 %zext_ln59_13'
ST_3 : Operation 910 [1/1] (2.10ns)   --->   "%mul_ln65_78 = mul i64 %zext_ln61_10, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 910 'mul' 'mul_ln65_78' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 911 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_82)   --->   "%select_ln65_69 = select i1 %and_ln61_13, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 911 'select' 'select_ln65_69' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 912 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_82 = and i64 %mul_ln65_78, i64 %select_ln65_69" [d2.cpp:65]   --->   Operation 912 'and' 'and_ln65_82' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 913 '%mul_ln65_79 = mul i64 %zext_ln65_35, i64 %zext_ln59_13'
ST_3 : Operation 913 [1/1] (2.10ns)   --->   "%mul_ln65_79 = mul i64 %zext_ln65_35, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 913 'mul' 'mul_ln65_79' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 914 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_83)   --->   "%select_ln65_70 = select i1 %icmp_ln65_9, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 914 'select' 'select_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 915 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_83 = and i64 %mul_ln65_79, i64 %select_ln65_70" [d2.cpp:65]   --->   Operation 915 'and' 'and_ln65_83' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 916 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_64 = add i64 %and_ln65_29, i64 %and_ln65_56" [d2.cpp:65]   --->   Operation 916 'add' 'add_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 917 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_65 = add i64 %add_ln65_64, i64 %and_ln65_28" [d2.cpp:65]   --->   Operation 917 'add' 'add_ln65_65' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 918 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_66 = add i64 %and_ln65_82, i64 %and_ln65_83" [d2.cpp:65]   --->   Operation 918 'add' 'add_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 919 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_67 = add i64 %add_ln65_66, i64 %and_ln65_57" [d2.cpp:65]   --->   Operation 919 'add' 'add_ln65_67' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 920 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_68 = add i64 %add_ln65_67, i64 %add_ln65_65" [d2.cpp:65]   --->   Operation 920 'add' 'add_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 921 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_44 = add i64 %arr_27_load_1, i64 %add_ln65_68" [d2.cpp:65]   --->   Operation 921 'add' 'arr_44' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 922 [1/1] (0.48ns)   --->   "%tmp_98 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_4" [d2.cpp:61]   --->   Operation 922 'mux' 'tmp_98' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 923 [1/1] (0.00ns)   --->   "%zext_ln61_11 = zext i32 %tmp_98" [d2.cpp:61]   --->   Operation 923 'zext' 'zext_ln61_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 924 [1/1] (0.00ns)   --->   "%sext_ln65_5 = sext i3 %sub_ln65_16" [d2.cpp:65]   --->   Operation 924 'sext' 'sext_ln65_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 925 [1/1] (0.48ns)   --->   "%tmp_100 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_6" [d2.cpp:65]   --->   Operation 925 'mux' 'tmp_100' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 926 [1/1] (0.00ns)   --->   "%zext_ln65_36 = zext i32 %tmp_100" [d2.cpp:65]   --->   Operation 926 'zext' 'zext_ln65_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 927 '%mul_ln65_80 = mul i64 %zext_ln61_11, i64 %zext_ln59_13'
ST_3 : Operation 927 [1/1] (2.10ns)   --->   "%mul_ln65_80 = mul i64 %zext_ln61_11, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 927 'mul' 'mul_ln65_80' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 928 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_84)   --->   "%select_ln65_71 = select i1 %and_ln61_14, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 928 'select' 'select_ln65_71' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 929 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_84 = and i64 %mul_ln65_80, i64 %select_ln65_71" [d2.cpp:65]   --->   Operation 929 'and' 'and_ln65_84' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 930 '%mul_ln65_81 = mul i64 %zext_ln65_36, i64 %zext_ln59_13'
ST_3 : Operation 930 [1/1] (2.10ns)   --->   "%mul_ln65_81 = mul i64 %zext_ln65_36, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 930 'mul' 'mul_ln65_81' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 931 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_85)   --->   "%select_ln65_72 = select i1 %icmp_ln65_10, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 931 'select' 'select_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 932 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_85 = and i64 %mul_ln65_81, i64 %select_ln65_72" [d2.cpp:65]   --->   Operation 932 'and' 'and_ln65_85' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 933 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_70 = add i64 %mul_ln65_28, i64 %and_ln65_58" [d2.cpp:65]   --->   Operation 933 'add' 'add_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 934 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_71 = add i64 %add_ln65_70, i64 %and_ln65_30" [d2.cpp:65]   --->   Operation 934 'add' 'add_ln65_71' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 935 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_72 = add i64 %and_ln65_84, i64 %and_ln65_85" [d2.cpp:65]   --->   Operation 935 'add' 'add_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 936 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_73 = add i64 %add_ln65_72, i64 %and_ln65_59" [d2.cpp:65]   --->   Operation 936 'add' 'add_ln65_73' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 937 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_74 = add i64 %add_ln65_73, i64 %add_ln65_71" [d2.cpp:65]   --->   Operation 937 'add' 'add_ln65_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 938 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_45 = add i64 %arr_28_load_1, i64 %add_ln65_74" [d2.cpp:65]   --->   Operation 938 'add' 'arr_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 939 [1/1] (0.48ns)   --->   "%tmp_102 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln65_5" [d2.cpp:61]   --->   Operation 939 'mux' 'tmp_102' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 940 [1/1] (0.00ns)   --->   "%zext_ln61_12 = zext i32 %tmp_102" [d2.cpp:61]   --->   Operation 940 'zext' 'zext_ln61_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 941 [1/1] (0.00ns)   --->   "%zext_ln62_5 = zext i1 %and_ln61_15" [d2.cpp:62]   --->   Operation 941 'zext' 'zext_ln62_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 942 [1/1] (0.67ns)   --->   "%sub_ln65_17 = sub i4 %sext_ln65_5, i4 %zext_ln62_5" [d2.cpp:65]   --->   Operation 942 'sub' 'sub_ln65_17' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 943 [1/1] (0.48ns)   --->   "%tmp_103 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_7" [d2.cpp:65]   --->   Operation 943 'mux' 'tmp_103' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 944 [1/1] (0.00ns)   --->   "%zext_ln65_37 = zext i32 %tmp_103" [d2.cpp:65]   --->   Operation 944 'zext' 'zext_ln65_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 945 '%mul_ln65_82 = mul i64 %zext_ln61_12, i64 %zext_ln59_13'
ST_3 : Operation 945 [1/1] (2.10ns)   --->   "%mul_ln65_82 = mul i64 %zext_ln61_12, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 945 'mul' 'mul_ln65_82' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 946 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_86)   --->   "%select_ln65_73 = select i1 %and_ln61_15, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 946 'select' 'select_ln65_73' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 947 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_86 = and i64 %mul_ln65_82, i64 %select_ln65_73" [d2.cpp:65]   --->   Operation 947 'and' 'and_ln65_86' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 948 '%mul_ln65_83 = mul i64 %zext_ln65_37, i64 %zext_ln59_13'
ST_3 : Operation 948 [1/1] (2.10ns)   --->   "%mul_ln65_83 = mul i64 %zext_ln65_37, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 948 'mul' 'mul_ln65_83' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 949 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_87)   --->   "%select_ln65_74 = select i1 %icmp_ln65_11, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 949 'select' 'select_ln65_74' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 950 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_87 = and i64 %mul_ln65_83, i64 %select_ln65_74" [d2.cpp:65]   --->   Operation 950 'and' 'and_ln65_87' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 951 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_76 = add i64 %mul_ln65_30, i64 %and_ln65_60" [d2.cpp:65]   --->   Operation 951 'add' 'add_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 952 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_77 = add i64 %add_ln65_76, i64 %and_ln65_31" [d2.cpp:65]   --->   Operation 952 'add' 'add_ln65_77' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 953 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_78 = add i64 %and_ln65_86, i64 %and_ln65_87" [d2.cpp:65]   --->   Operation 953 'add' 'add_ln65_78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 954 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_79 = add i64 %add_ln65_78, i64 %mul_ln65_58" [d2.cpp:65]   --->   Operation 954 'add' 'add_ln65_79' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 955 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_80 = add i64 %add_ln65_79, i64 %add_ln65_77" [d2.cpp:65]   --->   Operation 955 'add' 'add_ln65_80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 956 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_46 = add i64 %arr_29_load_1, i64 %add_ln65_80" [d2.cpp:65]   --->   Operation 956 'add' 'arr_46' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 957 [1/1] (0.00ns)   --->   "%zext_ln66_22 = zext i1 %icmp_ln65_11" [d2.cpp:66]   --->   Operation 957 'zext' 'zext_ln66_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 958 [1/1] (0.79ns)   --->   "%sub_ln36_8 = sub i4 %sub_ln36_7, i4 %zext_ln66_22" [d2.cpp:36]   --->   Operation 958 'sub' 'sub_ln36_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 959 [1/1] (0.48ns)   --->   "%tmp_104 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln65_17" [d2.cpp:61]   --->   Operation 959 'mux' 'tmp_104' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 960 [1/1] (0.00ns)   --->   "%zext_ln61_13 = zext i32 %tmp_104" [d2.cpp:61]   --->   Operation 960 'zext' 'zext_ln61_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 961 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_88)   --->   "%and_ln61_16 = and i1 %icmp_ln61_16, i1 %cmp69_2" [d2.cpp:61]   --->   Operation 961 'and' 'and_ln61_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 962 [1/1] (0.48ns)   --->   "%tmp_106 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_8" [d2.cpp:65]   --->   Operation 962 'mux' 'tmp_106' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 963 [1/1] (0.00ns)   --->   "%zext_ln65_38 = zext i32 %tmp_106" [d2.cpp:65]   --->   Operation 963 'zext' 'zext_ln65_38' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 964 '%mul_ln65_84 = mul i64 %zext_ln61_13, i64 %zext_ln59_13'
ST_3 : Operation 964 [1/1] (2.10ns)   --->   "%mul_ln65_84 = mul i64 %zext_ln61_13, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 964 'mul' 'mul_ln65_84' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 965 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_88)   --->   "%select_ln65_75 = select i1 %and_ln61_16, i64 18446744073709551615, i64 0" [d2.cpp:65]   --->   Operation 965 'select' 'select_ln65_75' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 966 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln65_88 = and i64 %mul_ln65_84, i64 %select_ln65_75" [d2.cpp:65]   --->   Operation 966 'and' 'and_ln65_88' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 967 '%mul_ln65_85 = mul i64 %zext_ln65_38, i64 %zext_ln59_13'
ST_3 : Operation 967 [1/1] (2.10ns)   --->   "%mul_ln65_85 = mul i64 %zext_ln65_38, i64 %zext_ln59_13" [d2.cpp:65]   --->   Operation 967 'mul' 'mul_ln65_85' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 968 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_82 = add i64 %mul_ln65_32, i64 %and_ln65_61" [d2.cpp:65]   --->   Operation 968 'add' 'add_ln65_82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 969 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_83 = add i64 %add_ln65_82, i64 %and_ln65_32" [d2.cpp:65]   --->   Operation 969 'add' 'add_ln65_83' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 970 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_84 = add i64 %and_ln65_88, i64 %mul_ln65_85" [d2.cpp:65]   --->   Operation 970 'add' 'add_ln65_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 971 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln65_85 = add i64 %add_ln65_84, i64 %mul_ln65_60" [d2.cpp:65]   --->   Operation 971 'add' 'add_ln65_85' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 972 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_86 = add i64 %add_ln65_85, i64 %add_ln65_83" [d2.cpp:65]   --->   Operation 972 'add' 'add_ln65_86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 973 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_47 = add i64 %arr_30_load_1, i64 %add_ln65_86" [d2.cpp:65]   --->   Operation 973 'add' 'arr_47' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 974 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_32, i64 %arr_31" [d2.cpp:42]   --->   Operation 974 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 975 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_47, i64 %arr_30" [d2.cpp:42]   --->   Operation 975 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 976 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_46, i64 %arr_29" [d2.cpp:42]   --->   Operation 976 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 977 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_45, i64 %arr_28" [d2.cpp:42]   --->   Operation 977 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 978 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_44, i64 %arr_27" [d2.cpp:42]   --->   Operation 978 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 979 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_43, i64 %arr_26" [d2.cpp:42]   --->   Operation 979 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 980 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_39, i64 %arr_22" [d2.cpp:42]   --->   Operation 980 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 981 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_38, i64 %arr_21" [d2.cpp:42]   --->   Operation 981 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 982 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_37, i64 %arr_20" [d2.cpp:42]   --->   Operation 982 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 983 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_36, i64 %arr_19" [d2.cpp:42]   --->   Operation 983 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 984 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_35, i64 %arr_18" [d2.cpp:42]   --->   Operation 984 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 985 [1/1] (0.42ns)   --->   "%store_ln42 = store i64 %arr_34, i64 %arr_17" [d2.cpp:42]   --->   Operation 985 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 986 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body23" [d2.cpp:42]   --->   Operation 986 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.667ns
The critical path consists of the following:
	'alloca' operation ('i') [68]  (0.000 ns)
	'load' operation ('i', d2.cpp:65) on local variable 'i' [124]  (0.000 ns)
	'add' operation ('empty', d2.cpp:42) [171]  (0.797 ns)
	'icmp' operation ('icmp_ln59', d2.cpp:59) [194]  (0.789 ns)
	'sub' operation ('sub_ln36_31', d2.cpp:36) [214]  (0.548 ns)
	'sub' operation ('sub_ln36_22', d2.cpp:36) [237]  (0.673 ns)
	'sub' operation ('sub_ln36_23', d2.cpp:36) [259]  (0.673 ns)
	'sub' operation ('sub_ln36_24', d2.cpp:36) [280]  (0.797 ns)
	'sub' operation ('sub_ln36_9', d2.cpp:36) [301]  (0.797 ns)
	'sub' operation ('sub_ln36_10', d2.cpp:36) [319]  (0.797 ns)
	'sub' operation ('sub_ln36_11', d2.cpp:36) [327]  (0.797 ns)

 <State 2>: 7.287ns
The critical path consists of the following:
	'and' operation ('and_ln59_1', d2.cpp:59) [195]  (0.287 ns)
	'sub' operation ('sub_ln63_9', d2.cpp:63) [197]  (0.548 ns)
	'sub' operation ('sub_ln63_10', d2.cpp:63) [221]  (0.673 ns)
	'sub' operation ('sub_ln63', d2.cpp:63) [244]  (0.673 ns)
	'mux' operation ('tmp_11', d2.cpp:59) [260]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln65_11', d2.cpp:65) [272]  (2.103 ns)
	'and' operation ('and_ln65_13', d2.cpp:65) [277]  (0.379 ns)
	'add' operation ('add_ln65_19', d2.cpp:65) [800]  (0.000 ns)
	'add' operation ('add_ln65_21', d2.cpp:65) [802]  (0.819 ns)

 <State 3>: 7.150ns
The critical path consists of the following:
	'sub' operation ('sub_ln65_5', d2.cpp:65) [414]  (0.797 ns)
	'mux' operation ('tmp_31', d2.cpp:61) [421]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln65_31', d2.cpp:65) [428]  (2.103 ns)
	'and' operation ('and_ln65_32', d2.cpp:65) [430]  (0.379 ns)
	'add' operation ('add_ln65_83', d2.cpp:65) [1005]  (0.819 ns)
	'add' operation ('add_ln65_86', d2.cpp:65) [1008]  (0.000 ns)
	'add' operation ('arr', d2.cpp:65) [1009]  (0.819 ns)
	'store' operation ('store_ln42', d2.cpp:42) of variable 'arr', d2.cpp:65 on local variable 'arr' [1014]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
