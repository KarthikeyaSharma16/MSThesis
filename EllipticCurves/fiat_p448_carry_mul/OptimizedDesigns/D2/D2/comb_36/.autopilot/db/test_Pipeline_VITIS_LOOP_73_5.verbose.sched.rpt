

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_73_5'
================================================================
* Date:           Fri May 10 15:28:24 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_36 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.095 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_73_5  |        3|        3|         2|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.14>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add239332 = alloca i32 1"   --->   Operation 5 'alloca' 'add239332' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add239_1141334 = alloca i32 1"   --->   Operation 6 'alloca' 'add239_1141334' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add239_2173336 = alloca i32 1"   --->   Operation 7 'alloca' 'add239_2173336' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add239_1108338 = alloca i32 1"   --->   Operation 8 'alloca' 'add239_1108338' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add239_1108_1340 = alloca i32 1"   --->   Operation 9 'alloca' 'add239_1108_1340' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add239_1108_2342 = alloca i32 1"   --->   Operation 10 'alloca' 'add239_1108_2342' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add239_2344 = alloca i32 1"   --->   Operation 11 'alloca' 'add239_2344' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 12 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 13 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 14 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 15 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%conv60_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv60"   --->   Operation 16 'read' 'conv60_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 17 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 18 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 19 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 20 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 21 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 22 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 23 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 24 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 25 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 26 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 27 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 28 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 29 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 30 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 31 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 32 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 33 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 34 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 35 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 36 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add75355_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75355_reload"   --->   Operation 37 'read' 'add75355_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add75_1204356_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_1204356_reload"   --->   Operation 38 'read' 'add75_1204356_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add75_2271357_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_2271357_reload"   --->   Operation 39 'read' 'add75_2271357_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add75_1358_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_1358_reload"   --->   Operation 40 'read' 'add75_1358_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add75_1_1359_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_1_1359_reload"   --->   Operation 41 'read' 'add75_1_1359_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add75_1_2360_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_1_2360_reload"   --->   Operation 42 'read' 'add75_1_2360_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add75_2361_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add75_2361_reload"   --->   Operation 43 'read' 'add75_2361_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%conv60_cast = zext i32 %conv60_read"   --->   Operation 44 'zext' 'conv60_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 14, i4 %i"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_2361_reload_read, i64 %add239_2344"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_1_2360_reload_read, i64 %add239_1108_2342"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_1_1359_reload_read, i64 %add239_1108_1340"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_1358_reload_read, i64 %add239_1108338"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_2271357_reload_read, i64 %add239_2173336"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75_1204356_reload_read, i64 %add239_1141334"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add75355_reload_read, i64 %add239332"   --->   Operation 52 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body214"   --->   Operation 53 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d2.cpp:73]   --->   Operation 54 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.79ns)   --->   "%icmp_ln73 = icmp_ugt  i4 %i_1, i4 8" [d2.cpp:73]   --->   Operation 55 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %icmp_ln73, void %for.end286.exitStub, void %for.body214.split" [d2.cpp:73]   --->   Operation 56 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.79ns)   --->   "%empty = add i4 %i_1, i4 9" [d2.cpp:73]   --->   Operation 57 'add' 'empty' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i4 %empty" [d2.cpp:86]   --->   Operation 58 'trunc' 'trunc_ln86' <Predicate = (icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.54ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 0, i32 %arg1_r_4_reload_read, i32 0, i32 %arg1_r_6_reload_read, i4 %i_1" [d2.cpp:87]   --->   Operation 59 'mux' 'tmp_6' <Predicate = (icmp_ln73)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.67ns)   --->   "%icmp_ln87 = icmp_eq  i3 %trunc_ln86, i3 7" [d2.cpp:87]   --->   Operation 60 'icmp' 'icmp_ln87' <Predicate = (icmp_ln73)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node sub_ln83_1)   --->   "%select_ln87_2 = select i1 %icmp_ln87, i3 6, i3 7" [d2.cpp:87]   --->   Operation 61 'select' 'select_ln87_2' <Predicate = (icmp_ln73)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.79ns)   --->   "%icmp_ln87_1 = icmp_sgt  i4 %empty, i4 5" [d2.cpp:87]   --->   Operation 62 'icmp' 'icmp_ln87_1' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node sub_ln83_1)   --->   "%zext_ln83 = zext i1 %icmp_ln87_1" [d2.cpp:83]   --->   Operation 63 'zext' 'zext_ln83' <Predicate = (icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln83_1 = sub i3 %select_ln87_2, i3 %zext_ln83" [d2.cpp:83]   --->   Operation 64 'sub' 'sub_ln83_1' <Predicate = (icmp_ln73)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.79ns)   --->   "%icmp_ln87_2 = icmp_sgt  i4 %empty, i4 4" [d2.cpp:87]   --->   Operation 65 'icmp' 'icmp_ln87_2' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty, i32 2, i32 3" [d2.cpp:87]   --->   Operation 66 'partselect' 'tmp' <Predicate = (icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.54ns)   --->   "%icmp_ln87_3 = icmp_eq  i2 %tmp, i2 1" [d2.cpp:87]   --->   Operation 67 'icmp' 'icmp_ln87_3' <Predicate = (icmp_ln73)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.35ns)   --->   "%empty_36 = xor i4 %i_1, i4 8" [d2.cpp:73]   --->   Operation 68 'xor' 'empty_36' <Predicate = (icmp_ln73)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.79ns)   --->   "%icmp_ln87_4 = icmp_eq  i4 %i_1, i4 14" [d2.cpp:87]   --->   Operation 69 'icmp' 'icmp_ln87_4' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node sub_ln83_4)   --->   "%select_ln87_7 = select i1 %icmp_ln87_4, i3 6, i3 7" [d2.cpp:87]   --->   Operation 70 'select' 'select_ln87_7' <Predicate = (icmp_ln73)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.79ns)   --->   "%icmp_ln87_5 = icmp_sgt  i4 %empty_36, i4 4" [d2.cpp:87]   --->   Operation 71 'icmp' 'icmp_ln87_5' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node sub_ln83_4)   --->   "%zext_ln83_2 = zext i1 %icmp_ln87_5" [d2.cpp:83]   --->   Operation 72 'zext' 'zext_ln83_2' <Predicate = (icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln83_4 = sub i3 %select_ln87_7, i3 %zext_ln83_2" [d2.cpp:83]   --->   Operation 73 'sub' 'sub_ln83_4' <Predicate = (icmp_ln73)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_36, i32 2, i32 3" [d2.cpp:87]   --->   Operation 74 'partselect' 'tmp_20' <Predicate = (icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.54ns)   --->   "%icmp_ln87_6 = icmp_eq  i2 %tmp_20, i2 1" [d2.cpp:87]   --->   Operation 75 'icmp' 'icmp_ln87_6' <Predicate = (icmp_ln73)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.79ns)   --->   "%icmp_ln87_7 = icmp_sgt  i4 %empty_36, i4 2" [d2.cpp:87]   --->   Operation 76 'icmp' 'icmp_ln87_7' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%add_ln73 = add i4 %i_1, i4 14" [d2.cpp:73]   --->   Operation 77 'add' 'add_ln73' <Predicate = (icmp_ln73)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln73 = store i4 %add_ln73, i4 %i" [d2.cpp:73]   --->   Operation 78 'store' 'store_ln73' <Predicate = (icmp_ln73)> <Delay = 0.42>
ST_1 : Operation 248 [1/1] (0.00ns)   --->   "%add239332_load_1 = load i64 %add239332"   --->   Operation 248 'load' 'add239332_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 249 [1/1] (0.00ns)   --->   "%add239_1141334_load_1 = load i64 %add239_1141334"   --->   Operation 249 'load' 'add239_1141334_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 250 [1/1] (0.00ns)   --->   "%add239_2173336_load_1 = load i64 %add239_2173336"   --->   Operation 250 'load' 'add239_2173336_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 251 [1/1] (0.00ns)   --->   "%add239_1108338_load_1 = load i64 %add239_1108338"   --->   Operation 251 'load' 'add239_1108338_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 252 [1/1] (0.00ns)   --->   "%add239_1108_1340_load_1 = load i64 %add239_1108_1340"   --->   Operation 252 'load' 'add239_1108_1340_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 253 [1/1] (0.00ns)   --->   "%add239_1108_2342_load_1 = load i64 %add239_1108_2342"   --->   Operation 253 'load' 'add239_1108_2342_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 254 [1/1] (0.00ns)   --->   "%add239_2344_load_1 = load i64 %add239_2344"   --->   Operation 254 'load' 'add239_2344_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 255 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_2344_out, i64 %add239_2344_load_1"   --->   Operation 255 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 256 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_1108_2342_out, i64 %add239_1108_2342_load_1"   --->   Operation 256 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 257 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_1108_1340_out, i64 %add239_1108_1340_load_1"   --->   Operation 257 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 258 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_1108338_out, i64 %add239_1108338_load_1"   --->   Operation 258 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 259 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_2173336_out, i64 %add239_2173336_load_1"   --->   Operation 259 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 260 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239_1141334_out, i64 %add239_1141334_load_1"   --->   Operation 260 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 261 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add239332_out, i64 %add239332_load_1"   --->   Operation 261 'write' 'write_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 262 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 262 'ret' 'ret_ln0' <Predicate = (!icmp_ln73)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.09>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%add239332_load = load i64 %add239332" [d2.cpp:86]   --->   Operation 79 'load' 'add239332_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%add239_1141334_load = load i64 %add239_1141334" [d2.cpp:86]   --->   Operation 80 'load' 'add239_1141334_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%add239_2173336_load = load i64 %add239_2173336" [d2.cpp:87]   --->   Operation 81 'load' 'add239_2173336_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%add239_1108338_load = load i64 %add239_1108338" [d2.cpp:87]   --->   Operation 82 'load' 'add239_1108338_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%add239_1108_1340_load = load i64 %add239_1108_1340" [d2.cpp:87]   --->   Operation 83 'load' 'add239_1108_1340_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%add239_1108_2342_load = load i64 %add239_1108_2342" [d2.cpp:87]   --->   Operation 84 'load' 'add239_1108_2342_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%add239_2344_load = load i64 %add239_2344" [d2.cpp:87]   --->   Operation 85 'load' 'add239_2344_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%specpipeline_ln75 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d2.cpp:75]   --->   Operation 86 'specpipeline' 'specpipeline_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%speclooptripcount_ln73 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d2.cpp:73]   --->   Operation 87 'speclooptripcount' 'speclooptripcount_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln73 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [d2.cpp:73]   --->   Operation 88 'specloopname' 'specloopname_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i4 %i_1" [d2.cpp:73]   --->   Operation 89 'trunc' 'trunc_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.54ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_10_reload_read, i32 0, i32 %arg1_r_12_reload_read, i32 0, i32 %arg1_r_14_reload_read, i4 %i_1" [d2.cpp:86]   --->   Operation 90 'mux' 'tmp_s' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i32 %tmp_s" [d2.cpp:86]   --->   Operation 91 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.12ns)   --->   "%xor_ln86 = xor i3 %trunc_ln73, i3 7" [d2.cpp:86]   --->   Operation 92 'xor' 'xor_ln86' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.62ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.6i32.i3, i32 0, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 %arg2_r_4_reload_read, i3 %xor_ln86" [d2.cpp:86]   --->   Operation 93 'mux' 'tmp_1' <Predicate = true> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln86_1 = zext i32 %tmp_1" [d2.cpp:86]   --->   Operation 94 'zext' 'zext_ln86_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.67ns)   --->   "%sub_ln86 = sub i3 6, i3 %trunc_ln73" [d2.cpp:86]   --->   Operation 95 'sub' 'sub_ln86' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.57ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.5i32.i3, i32 %arg2_r_15_reload_read, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i3 %sub_ln86" [d2.cpp:86]   --->   Operation 96 'mux' 'tmp_2' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i32 %tmp_2" [d2.cpp:86]   --->   Operation 97 'zext' 'zext_ln86_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.79ns)   --->   "%icmp_ln86 = icmp_ne  i4 %i_1, i4 14" [d2.cpp:86]   --->   Operation 98 'icmp' 'icmp_ln86' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.79ns)   --->   "%sub_ln86_1 = sub i4 13, i4 %i_1" [d2.cpp:86]   --->   Operation 99 'sub' 'sub_ln86_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_14_reload_read, i4 %sub_ln86_1" [d2.cpp:86]   --->   Operation 100 'mux' 'tmp_3' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln86_3 = zext i32 %tmp_3" [d2.cpp:86]   --->   Operation 101 'zext' 'zext_ln86_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.79ns)   --->   "%icmp_ln86_1 = icmp_ult  i4 %i_1, i4 13" [d2.cpp:86]   --->   Operation 102 'icmp' 'icmp_ln86_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.79ns)   --->   "%sub_ln86_2 = sub i4 12, i4 %i_1" [d2.cpp:86]   --->   Operation 103 'sub' 'sub_ln86_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.54ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_15_reload_read, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i4 %sub_ln86_2" [d2.cpp:86]   --->   Operation 104 'mux' 'tmp_4' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln86_4 = zext i32 %tmp_4" [d2.cpp:86]   --->   Operation 105 'zext' 'zext_ln86_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.79ns)   --->   "%icmp_ln86_2 = icmp_ult  i4 %i_1, i4 12" [d2.cpp:86]   --->   Operation 106 'icmp' 'icmp_ln86_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.79ns)   --->   "%sub_ln86_3 = sub i4 11, i4 %i_1" [d2.cpp:86]   --->   Operation 107 'sub' 'sub_ln86_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 0, i32 %arg2_r_14_reload_read, i4 %sub_ln86_3" [d2.cpp:86]   --->   Operation 108 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln86_5 = zext i32 %tmp_5" [d2.cpp:86]   --->   Operation 109 'zext' 'zext_ln86_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.79ns)   --->   "%icmp_ln86_3 = icmp_ult  i4 %i_1, i4 11" [d2.cpp:86]   --->   Operation 110 'icmp' 'icmp_ln86_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.79ns)   --->   "%sub_ln83 = sub i4 10, i4 %i_1" [d2.cpp:83]   --->   Operation 111 'sub' 'sub_ln83' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i32 %tmp_6" [d2.cpp:87]   --->   Operation 112 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.44ns)   --->   "%select_ln87 = select i1 %icmp_ln87, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:87]   --->   Operation 113 'select' 'select_ln87' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln87_1 = zext i32 %select_ln87" [d2.cpp:87]   --->   Operation 114 'zext' 'zext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln87_14 = sext i3 %sub_ln83_1" [d2.cpp:87]   --->   Operation 115 'sext' 'sext_ln87_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln87_14" [d2.cpp:87]   --->   Operation 116 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln87_2 = zext i32 %tmp_7" [d2.cpp:87]   --->   Operation 117 'zext' 'zext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i1 %icmp_ln87_2" [d2.cpp:83]   --->   Operation 118 'zext' 'zext_ln83_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.67ns)   --->   "%sub_ln83_2 = sub i3 %sub_ln83_1, i3 %zext_ln83_1" [d2.cpp:83]   --->   Operation 119 'sub' 'sub_ln83_2' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln87_15 = sext i3 %sub_ln83_2" [d2.cpp:87]   --->   Operation 120 'sext' 'sext_ln87_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln87_15" [d2.cpp:87]   --->   Operation 121 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln87_3 = zext i32 %tmp_8" [d2.cpp:87]   --->   Operation 122 'zext' 'zext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i1 %icmp_ln87_3" [d2.cpp:88]   --->   Operation 123 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.67ns)   --->   "%sub_ln83_3 = sub i4 %sext_ln87_15, i4 %zext_ln88" [d2.cpp:83]   --->   Operation 124 'sub' 'sub_ln83_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln83_3" [d2.cpp:87]   --->   Operation 125 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln87_4 = zext i32 %tmp_9" [d2.cpp:87]   --->   Operation 126 'zext' 'zext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln83_3" [d2.cpp:87]   --->   Operation 127 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln87_5 = zext i32 %tmp_10" [d2.cpp:87]   --->   Operation 128 'zext' 'zext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.79ns)   --->   "%empty_35 = add i4 %i_1, i4 15" [d2.cpp:73]   --->   Operation 129 'add' 'empty_35' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.54ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_9_reload_read, i32 0, i32 %arg1_r_11_reload_read, i32 0, i32 %arg1_r_13_reload_read, i4 %i_1" [d2.cpp:86]   --->   Operation 130 'mux' 'tmp_11' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln86_6 = zext i32 %tmp_11" [d2.cpp:86]   --->   Operation 131 'zext' 'zext_ln86_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.62ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.6i32.i3, i32 0, i32 %arg2_r_15_reload_read, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i3 %xor_ln86" [d2.cpp:86]   --->   Operation 132 'mux' 'tmp_12' <Predicate = true> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln86_7 = zext i32 %tmp_12" [d2.cpp:86]   --->   Operation 133 'zext' 'zext_ln86_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 134 '%mul_ln86 = mul i64 %zext_ln86_1, i64 %zext_ln86'
ST_2 : Operation 134 [1/1] (2.10ns)   --->   "%mul_ln86 = mul i64 %zext_ln86_1, i64 %zext_ln86" [d2.cpp:86]   --->   Operation 134 'mul' 'mul_ln86' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 135 '%mul_ln86_1 = mul i64 %zext_ln86_7, i64 %zext_ln86_6'
ST_2 : Operation 135 [1/1] (2.10ns)   --->   "%mul_ln86_1 = mul i64 %zext_ln86_7, i64 %zext_ln86_6" [d2.cpp:86]   --->   Operation 135 'mul' 'mul_ln86_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86 = add i64 %mul_ln86_1, i64 %mul_ln86" [d2.cpp:86]   --->   Operation 136 'add' 'add_ln86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 137 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_1 = add i64 %add239332_load, i64 %add_ln86" [d2.cpp:86]   --->   Operation 137 'add' 'add_ln86_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 138 [1/1] (0.57ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.5i32.i3, i32 %arg2_r_14_reload_read, i32 0, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i3 %sub_ln86" [d2.cpp:86]   --->   Operation 138 'mux' 'tmp_13' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln86_8 = zext i32 %tmp_13" [d2.cpp:86]   --->   Operation 139 'zext' 'zext_ln86_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 140 '%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86'
ST_2 : Operation 140 [1/1] (2.10ns)   --->   "%mul_ln86_2 = mul i64 %zext_ln86_2, i64 %zext_ln86" [d2.cpp:86]   --->   Operation 140 'mul' 'mul_ln86_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 141 '%mul_ln86_3 = mul i64 %zext_ln87, i64 %conv60_cast'
ST_2 : Operation 141 [1/1] (2.10ns)   --->   "%mul_ln86_3 = mul i64 %zext_ln87, i64 %conv60_cast" [d2.cpp:86]   --->   Operation 141 'mul' 'mul_ln86_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node and_ln86)   --->   "%select_ln86 = select i1 %icmp_ln86, i64 18446744073709551615, i64 0" [d2.cpp:86]   --->   Operation 142 'select' 'select_ln86' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln86 = and i64 %mul_ln86_2, i64 %select_ln86" [d2.cpp:86]   --->   Operation 143 'and' 'and_ln86' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_2)   --->   "%select_ln86_1 = select i1 %icmp_ln87, i64 18446744073709551615, i64 0" [d2.cpp:86]   --->   Operation 144 'select' 'select_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_2)   --->   "%and_ln86_1 = and i64 %mul_ln86_3, i64 %select_ln86_1" [d2.cpp:86]   --->   Operation 145 'and' 'and_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 146 '%mul_ln86_4 = mul i64 %zext_ln86_8, i64 %zext_ln86_6'
ST_2 : Operation 146 [1/1] (2.10ns)   --->   "%mul_ln86_4 = mul i64 %zext_ln86_8, i64 %zext_ln86_6" [d2.cpp:86]   --->   Operation 146 'mul' 'mul_ln86_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln86_2 = add i64 %and_ln86_1, i64 %mul_ln86_4" [d2.cpp:86]   --->   Operation 147 'add' 'add_ln86_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86_3 = add i64 %add_ln86_2, i64 %and_ln86" [d2.cpp:86]   --->   Operation 148 'add' 'add_ln86_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 149 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln86_4 = add i64 %add239_1141334_load, i64 %add_ln86_3" [d2.cpp:86]   --->   Operation 149 'add' 'add_ln86_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 150 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_15_reload_read, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i4 %sub_ln86_1" [d2.cpp:86]   --->   Operation 150 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln86_9 = zext i32 %tmp_14" [d2.cpp:86]   --->   Operation 151 'zext' 'zext_ln86_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 152 [1/1] (0.79ns)   --->   "%icmp_ln86_4 = icmp_ult  i4 %empty_35, i4 13" [d2.cpp:86]   --->   Operation 152 'icmp' 'icmp_ln86_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (0.54ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_14_reload_read, i32 0, i32 %arg2_r_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i4 %sub_ln86_2" [d2.cpp:86]   --->   Operation 153 'mux' 'tmp_15' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln86_10 = zext i32 %tmp_15" [d2.cpp:86]   --->   Operation 154 'zext' 'zext_ln86_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 155 [1/1] (0.79ns)   --->   "%icmp_ln86_5 = icmp_ult  i4 %empty_35, i4 12" [d2.cpp:86]   --->   Operation 155 'icmp' 'icmp_ln86_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_15_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 0, i32 %arg2_r_13_reload_read, i4 %sub_ln86_3" [d2.cpp:86]   --->   Operation 156 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln86_11 = zext i32 %tmp_16" [d2.cpp:86]   --->   Operation 157 'zext' 'zext_ln86_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.79ns)   --->   "%icmp_ln86_6 = icmp_ult  i4 %empty_35, i4 11" [d2.cpp:86]   --->   Operation 158 'icmp' 'icmp_ln86_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.54ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_14_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 0, i32 %arg2_r_12_reload_read, i4 %sub_ln83" [d2.cpp:86]   --->   Operation 159 'mux' 'tmp_17' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln86_12 = zext i32 %tmp_17" [d2.cpp:86]   --->   Operation 160 'zext' 'zext_ln86_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 161 [1/1] (0.79ns)   --->   "%icmp_ln86_7 = icmp_ult  i4 %empty_35, i4 10" [d2.cpp:86]   --->   Operation 161 'icmp' 'icmp_ln86_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (0.54ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 0, i32 %arg1_r_3_reload_read, i32 0, i32 %arg1_r_5_reload_read, i4 %i_1" [d2.cpp:87]   --->   Operation 162 'mux' 'tmp_18' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln87_6 = zext i32 %tmp_18" [d2.cpp:87]   --->   Operation 163 'zext' 'zext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 164 '%mul_ln87 = mul i64 %zext_ln87_6, i64 %conv60_cast'
ST_2 : Operation 164 [1/1] (2.10ns)   --->   "%mul_ln87 = mul i64 %zext_ln87_6, i64 %conv60_cast" [d2.cpp:87]   --->   Operation 164 'mul' 'mul_ln87' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%select_ln87_3 = select i1 %icmp_ln87_4, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 165 'select' 'select_ln87_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%and_ln87 = and i64 %mul_ln87, i64 %select_ln87_3" [d2.cpp:87]   --->   Operation 166 'and' 'and_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 167 '%mul_ln87_1 = mul i64 %zext_ln87_1, i64 %zext_ln87'
ST_2 : Operation 167 [1/1] (2.10ns)   --->   "%mul_ln87_1 = mul i64 %zext_ln87_1, i64 %zext_ln87" [d2.cpp:87]   --->   Operation 167 'mul' 'mul_ln87_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 168 '%mul_ln87_2 = mul i64 %zext_ln86_9, i64 %zext_ln86_6'
ST_2 : Operation 168 [1/1] (2.10ns)   --->   "%mul_ln87_2 = mul i64 %zext_ln86_9, i64 %zext_ln86_6" [d2.cpp:87]   --->   Operation 168 'mul' 'mul_ln87_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 169 '%mul_ln87_3 = mul i64 %zext_ln86_3, i64 %zext_ln86'
ST_2 : Operation 169 [1/1] (2.10ns)   --->   "%mul_ln87_3 = mul i64 %zext_ln86_3, i64 %zext_ln86" [d2.cpp:87]   --->   Operation 169 'mul' 'mul_ln87_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln87)   --->   "%select_ln87_4 = select i1 %icmp_ln87_1, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 170 'select' 'select_ln87_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln87)   --->   "%and_ln87_1 = and i64 %mul_ln87_1, i64 %select_ln87_4" [d2.cpp:87]   --->   Operation 171 'and' 'and_ln87_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%select_ln87_5 = select i1 %icmp_ln86_4, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 172 'select' 'select_ln87_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%and_ln87_2 = and i64 %mul_ln87_2, i64 %select_ln87_5" [d2.cpp:87]   --->   Operation 173 'and' 'and_ln87_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node add_ln87)   --->   "%select_ln87_6 = select i1 %icmp_ln86_1, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 174 'select' 'select_ln87_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node add_ln87)   --->   "%and_ln87_3 = and i64 %mul_ln87_3, i64 %select_ln87_6" [d2.cpp:87]   --->   Operation 175 'and' 'and_ln87_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87 = add i64 %and_ln87_3, i64 %and_ln87_1" [d2.cpp:87]   --->   Operation 176 'add' 'add_ln87' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 177 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_1 = add i64 %and_ln87_2, i64 %and_ln87" [d2.cpp:87]   --->   Operation 177 'add' 'add_ln87_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_2 = add i64 %add_ln87_1, i64 %add_ln87" [d2.cpp:87]   --->   Operation 178 'add' 'add_ln87_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 179 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln87_3 = add i64 %add239_2173336_load, i64 %add_ln87_2" [d2.cpp:87]   --->   Operation 179 'add' 'add_ln87_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 180 [1/1] (0.44ns)   --->   "%select_ln87_1 = select i1 %icmp_ln87_4, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d2.cpp:87]   --->   Operation 180 'select' 'select_ln87_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln87_7 = zext i32 %select_ln87_1" [d2.cpp:87]   --->   Operation 181 'zext' 'zext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 182 '%mul_ln87_4 = mul i64 %zext_ln87_7, i64 %zext_ln87_6'
ST_2 : Operation 182 [1/1] (2.10ns)   --->   "%mul_ln87_4 = mul i64 %zext_ln87_7, i64 %zext_ln87_6" [d2.cpp:87]   --->   Operation 182 'mul' 'mul_ln87_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_5)   --->   "%select_ln87_8 = select i1 %icmp_ln87_5, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 183 'select' 'select_ln87_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_5)   --->   "%and_ln87_4 = and i64 %mul_ln87_4, i64 %select_ln87_8" [d2.cpp:87]   --->   Operation 184 'and' 'and_ln87_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 185 '%mul_ln87_5 = mul i64 %zext_ln87_2, i64 %zext_ln87'
ST_2 : Operation 185 [1/1] (2.10ns)   --->   "%mul_ln87_5 = mul i64 %zext_ln87_2, i64 %zext_ln87" [d2.cpp:87]   --->   Operation 185 'mul' 'mul_ln87_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 186 '%mul_ln87_6 = mul i64 %zext_ln86_10, i64 %zext_ln86_6'
ST_2 : Operation 186 [1/1] (2.10ns)   --->   "%mul_ln87_6 = mul i64 %zext_ln86_10, i64 %zext_ln86_6" [d2.cpp:87]   --->   Operation 186 'mul' 'mul_ln87_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 187 '%mul_ln87_7 = mul i64 %zext_ln86_4, i64 %zext_ln86'
ST_2 : Operation 187 [1/1] (2.10ns)   --->   "%mul_ln87_7 = mul i64 %zext_ln86_4, i64 %zext_ln86" [d2.cpp:87]   --->   Operation 187 'mul' 'mul_ln87_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_4)   --->   "%select_ln87_9 = select i1 %icmp_ln87_2, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 188 'select' 'select_ln87_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_4)   --->   "%and_ln87_5 = and i64 %mul_ln87_5, i64 %select_ln87_9" [d2.cpp:87]   --->   Operation 189 'and' 'and_ln87_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_5)   --->   "%select_ln87_10 = select i1 %icmp_ln86_5, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 190 'select' 'select_ln87_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_5)   --->   "%and_ln87_6 = and i64 %mul_ln87_6, i64 %select_ln87_10" [d2.cpp:87]   --->   Operation 191 'and' 'and_ln87_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_4)   --->   "%select_ln87_11 = select i1 %icmp_ln86_2, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 192 'select' 'select_ln87_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_4)   --->   "%and_ln87_7 = and i64 %mul_ln87_7, i64 %select_ln87_11" [d2.cpp:87]   --->   Operation 193 'and' 'and_ln87_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 194 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_4 = add i64 %and_ln87_7, i64 %and_ln87_5" [d2.cpp:87]   --->   Operation 194 'add' 'add_ln87_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_5 = add i64 %and_ln87_6, i64 %and_ln87_4" [d2.cpp:87]   --->   Operation 195 'add' 'add_ln87_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_6 = add i64 %add_ln87_5, i64 %add_ln87_4" [d2.cpp:87]   --->   Operation 196 'add' 'add_ln87_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 197 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln87_7 = add i64 %add239_1108338_load, i64 %add_ln87_6" [d2.cpp:87]   --->   Operation 197 'add' 'add_ln87_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 198 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i3 %sub_ln83_4" [d2.cpp:87]   --->   Operation 198 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 199 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln87" [d2.cpp:87]   --->   Operation 199 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln87_8 = zext i32 %tmp_19" [d2.cpp:87]   --->   Operation 200 'zext' 'zext_ln87_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 201 '%mul_ln87_8 = mul i64 %zext_ln87_8, i64 %zext_ln87_6'
ST_2 : Operation 201 [1/1] (2.10ns)   --->   "%mul_ln87_8 = mul i64 %zext_ln87_8, i64 %zext_ln87_6" [d2.cpp:87]   --->   Operation 201 'mul' 'mul_ln87_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_9)   --->   "%select_ln87_12 = select i1 %icmp_ln87_6, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 202 'select' 'select_ln87_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_9)   --->   "%and_ln87_8 = and i64 %mul_ln87_8, i64 %select_ln87_12" [d2.cpp:87]   --->   Operation 203 'and' 'and_ln87_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 204 '%mul_ln87_9 = mul i64 %zext_ln87_3, i64 %zext_ln87'
ST_2 : Operation 204 [1/1] (2.10ns)   --->   "%mul_ln87_9 = mul i64 %zext_ln87_3, i64 %zext_ln87" [d2.cpp:87]   --->   Operation 204 'mul' 'mul_ln87_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 205 '%mul_ln87_10 = mul i64 %zext_ln86_11, i64 %zext_ln86_6'
ST_2 : Operation 205 [1/1] (2.10ns)   --->   "%mul_ln87_10 = mul i64 %zext_ln86_11, i64 %zext_ln86_6" [d2.cpp:87]   --->   Operation 205 'mul' 'mul_ln87_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 206 '%mul_ln87_11 = mul i64 %zext_ln86_5, i64 %zext_ln86'
ST_2 : Operation 206 [1/1] (2.10ns)   --->   "%mul_ln87_11 = mul i64 %zext_ln86_5, i64 %zext_ln86" [d2.cpp:87]   --->   Operation 206 'mul' 'mul_ln87_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_8)   --->   "%select_ln87_13 = select i1 %icmp_ln87_3, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 207 'select' 'select_ln87_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_8)   --->   "%and_ln87_9 = and i64 %mul_ln87_9, i64 %select_ln87_13" [d2.cpp:87]   --->   Operation 208 'and' 'and_ln87_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_9)   --->   "%select_ln87_14 = select i1 %icmp_ln86_6, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 209 'select' 'select_ln87_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_9)   --->   "%and_ln87_10 = and i64 %mul_ln87_10, i64 %select_ln87_14" [d2.cpp:87]   --->   Operation 210 'and' 'and_ln87_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_8)   --->   "%select_ln87_15 = select i1 %icmp_ln86_3, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 211 'select' 'select_ln87_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_8)   --->   "%and_ln87_11 = and i64 %mul_ln87_11, i64 %select_ln87_15" [d2.cpp:87]   --->   Operation 212 'and' 'and_ln87_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_8 = add i64 %and_ln87_11, i64 %and_ln87_9" [d2.cpp:87]   --->   Operation 213 'add' 'add_ln87_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_9 = add i64 %and_ln87_10, i64 %and_ln87_8" [d2.cpp:87]   --->   Operation 214 'add' 'add_ln87_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_10 = add i64 %add_ln87_9, i64 %add_ln87_8" [d2.cpp:87]   --->   Operation 215 'add' 'add_ln87_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 216 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln87_11 = add i64 %add239_1108_1340_load, i64 %add_ln87_10" [d2.cpp:87]   --->   Operation 216 'add' 'add_ln87_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 217 [1/1] (0.00ns)   --->   "%zext_ln83_3 = zext i1 %icmp_ln87_6" [d2.cpp:83]   --->   Operation 217 'zext' 'zext_ln83_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 218 [1/1] (0.67ns)   --->   "%sub_ln83_5 = sub i3 %sub_ln83_4, i3 %zext_ln83_3" [d2.cpp:83]   --->   Operation 218 'sub' 'sub_ln83_5' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 219 [1/1] (0.00ns)   --->   "%sext_ln87_16 = sext i3 %sub_ln83_5" [d2.cpp:87]   --->   Operation 219 'sext' 'sext_ln87_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 220 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln87_16" [d2.cpp:87]   --->   Operation 220 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln87_9 = zext i32 %tmp_21" [d2.cpp:87]   --->   Operation 221 'zext' 'zext_ln87_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 222 '%mul_ln87_12 = mul i64 %zext_ln87_9, i64 %zext_ln87_6'
ST_2 : Operation 222 [1/1] (2.10ns)   --->   "%mul_ln87_12 = mul i64 %zext_ln87_9, i64 %zext_ln87_6" [d2.cpp:87]   --->   Operation 222 'mul' 'mul_ln87_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 223 '%mul_ln87_13 = mul i64 %zext_ln86_12, i64 %zext_ln86_6'
ST_2 : Operation 223 [1/1] (2.10ns)   --->   "%mul_ln87_13 = mul i64 %zext_ln86_12, i64 %zext_ln86_6" [d2.cpp:87]   --->   Operation 223 'mul' 'mul_ln87_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_12)   --->   "%select_ln87_16 = select i1 %icmp_ln87_7, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 224 'select' 'select_ln87_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_12)   --->   "%and_ln87_12 = and i64 %mul_ln87_12, i64 %select_ln87_16" [d2.cpp:87]   --->   Operation 225 'and' 'and_ln87_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_12)   --->   "%select_ln87_17 = select i1 %icmp_ln86_7, i64 18446744073709551615, i64 0" [d2.cpp:87]   --->   Operation 226 'select' 'select_ln87_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_12)   --->   "%and_ln87_13 = and i64 %mul_ln87_13, i64 %select_ln87_17" [d2.cpp:87]   --->   Operation 227 'and' 'and_ln87_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 228 '%mul_ln87_14 = mul i64 %zext_ln87_4, i64 %zext_ln87'
ST_2 : Operation 228 [1/1] (2.10ns)   --->   "%mul_ln87_14 = mul i64 %zext_ln87_4, i64 %zext_ln87" [d2.cpp:87]   --->   Operation 228 'mul' 'mul_ln87_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 229 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln87_12 = add i64 %and_ln87_13, i64 %and_ln87_12" [d2.cpp:87]   --->   Operation 229 'add' 'add_ln87_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 230 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_13 = add i64 %add_ln87_12, i64 %mul_ln87_14" [d2.cpp:87]   --->   Operation 230 'add' 'add_ln87_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 231 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln87_14 = add i64 %add239_1108_2342_load, i64 %add_ln87_13" [d2.cpp:87]   --->   Operation 231 'add' 'add_ln87_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 232 [1/1] (0.00ns)   --->   "%zext_ln88_1 = zext i1 %icmp_ln87_7" [d2.cpp:88]   --->   Operation 232 'zext' 'zext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 233 [1/1] (0.67ns)   --->   "%sub_ln83_6 = sub i4 %sext_ln87_16, i4 %zext_ln88_1" [d2.cpp:83]   --->   Operation 233 'sub' 'sub_ln83_6' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln83_6" [d2.cpp:87]   --->   Operation 234 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln87_10 = zext i32 %tmp_22" [d2.cpp:87]   --->   Operation 235 'zext' 'zext_ln87_10' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 236 '%mul_ln87_15 = mul i64 %zext_ln87_5, i64 %zext_ln87'
ST_2 : Operation 236 [1/1] (2.10ns)   --->   "%mul_ln87_15 = mul i64 %zext_ln87_5, i64 %zext_ln87" [d2.cpp:87]   --->   Operation 236 'mul' 'mul_ln87_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 237 '%mul_ln87_16 = mul i64 %zext_ln87_10, i64 %zext_ln87_6'
ST_2 : Operation 237 [1/1] (2.10ns)   --->   "%mul_ln87_16 = mul i64 %zext_ln87_10, i64 %zext_ln87_6" [d2.cpp:87]   --->   Operation 237 'mul' 'mul_ln87_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_15 = add i64 %mul_ln87_16, i64 %mul_ln87_15" [d2.cpp:87]   --->   Operation 238 'add' 'add_ln87_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 239 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln87_16 = add i64 %add239_2344_load, i64 %add_ln87_15" [d2.cpp:87]   --->   Operation 239 'add' 'add_ln87_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 240 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln87_16, i64 %add239_2344" [d2.cpp:73]   --->   Operation 240 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 241 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln87_14, i64 %add239_1108_2342" [d2.cpp:73]   --->   Operation 241 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 242 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln87_11, i64 %add239_1108_1340" [d2.cpp:73]   --->   Operation 242 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 243 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln87_7, i64 %add239_1108338" [d2.cpp:73]   --->   Operation 243 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 244 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln87_3, i64 %add239_2173336" [d2.cpp:73]   --->   Operation 244 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 245 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln86_4, i64 %add239_1141334" [d2.cpp:73]   --->   Operation 245 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 246 [1/1] (0.42ns)   --->   "%store_ln73 = store i64 %add_ln86_1, i64 %add239332" [d2.cpp:73]   --->   Operation 246 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 247 [1/1] (0.00ns)   --->   "%br_ln73 = br void %for.body214" [d2.cpp:73]   --->   Operation 247 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.142ns
The critical path consists of the following:
	'alloca' operation ('i') [46]  (0.000 ns)
	'load' operation ('i', d2.cpp:73) on local variable 'i' [89]  (0.000 ns)
	'add' operation ('empty', d2.cpp:73) [104]  (0.797 ns)
	'icmp' operation ('icmp_ln87_1', d2.cpp:87) [134]  (0.797 ns)
	'sub' operation ('sub_ln83_1', d2.cpp:83) [136]  (0.548 ns)

 <State 2>: 7.095ns
The critical path consists of the following:
	'sub' operation ('sub_ln83', d2.cpp:83) [127]  (0.797 ns)
	'mux' operation ('tmp_17', d2.cpp:86) [185]  (0.547 ns)
	multiplexor before operation 'mul' with delay (1.316 ns)
'mul' operation ('mul_ln87_13', d2.cpp:87) [257]  (2.104 ns)
	'and' operation ('and_ln87_13', d2.cpp:87) [261]  (0.000 ns)
	'add' operation ('add_ln87_12', d2.cpp:87) [263]  (1.085 ns)
	'add' operation ('add_ln87_13', d2.cpp:87) [264]  (0.000 ns)
	'add' operation ('add_ln87_14', d2.cpp:87) [265]  (0.819 ns)
	'store' operation ('store_ln73', d2.cpp:73) of variable 'add_ln87_14', d2.cpp:87 on local variable 'add239_1108_2342' [277]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
