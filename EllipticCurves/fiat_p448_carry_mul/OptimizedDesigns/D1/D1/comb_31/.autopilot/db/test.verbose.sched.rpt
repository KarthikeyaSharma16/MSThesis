

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Fri May 10 15:22:56 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_31 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      105|      105|  1.050 us|  1.050 us|  106|  106|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 35 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 36 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 37 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add169871_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add169871_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add169_1872_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add169_1872_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add169_2873_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add169_2873_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add169_3874_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add169_3874_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add169_4875_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add169_4875_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add169_5876_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add169_5876_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add169_6877_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add169_6877_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%p_loc16 = alloca i64 1"   --->   Operation 45 'alloca' 'p_loc16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_loc15 = alloca i64 1"   --->   Operation 46 'alloca' 'p_loc15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%p_loc14 = alloca i64 1"   --->   Operation 47 'alloca' 'p_loc14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_loc13 = alloca i64 1"   --->   Operation 48 'alloca' 'p_loc13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%p_loc12 = alloca i64 1"   --->   Operation 49 'alloca' 'p_loc12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%p_loc11 = alloca i64 1"   --->   Operation 50 'alloca' 'p_loc11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%p_loc10 = alloca i64 1"   --->   Operation 51 'alloca' 'p_loc10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_loc = alloca i64 1"   --->   Operation 52 'alloca' 'p_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%add138894_loc = alloca i64 1"   --->   Operation 53 'alloca' 'add138894_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg2_r_9_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg2_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arg2_r_10_loc = alloca i64 1"   --->   Operation 64 'alloca' 'arg2_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%arg2_r_11_loc = alloca i64 1"   --->   Operation 65 'alloca' 'arg2_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%arg2_r_12_loc = alloca i64 1"   --->   Operation 66 'alloca' 'arg2_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg2_r_13_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg2_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg2_r_14_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg2_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg2_r_15_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg2_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_9_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg1_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg1_r_10_loc = alloca i64 1"   --->   Operation 80 'alloca' 'arg1_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%arg1_r_11_loc = alloca i64 1"   --->   Operation 81 'alloca' 'arg1_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%arg1_r_12_loc = alloca i64 1"   --->   Operation 82 'alloca' 'arg1_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%arg1_r_13_loc = alloca i64 1"   --->   Operation 83 'alloca' 'arg1_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_14_loc = alloca i64 1"   --->   Operation 84 'alloca' 'arg1_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%arg1_r_15_loc = alloca i64 1"   --->   Operation 85 'alloca' 'arg1_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln24_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg1_read, i32 2, i32 63" [d1.cpp:24]   --->   Operation 86 'partselect' 'trunc_ln24_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg2_read, i32 2, i32 63" [d1.cpp:31]   --->   Operation 87 'partselect' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln149_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out1_read, i32 2, i32 63" [d1.cpp:149]   --->   Operation 88 'partselect' 'trunc_ln149_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i62 %trunc_ln24_1" [d1.cpp:24]   --->   Operation 89 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln24" [d1.cpp:24]   --->   Operation 90 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 91 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 92 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 92 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 93 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 93 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 94 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 94 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 95 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 95 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 96 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 96 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 97 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 97 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 98 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 98 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 99 [2/2] (0.00ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 99 'call' 'call_ln24' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.21>
ST_11 : Operation 100 [1/2] (1.21ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 100 'call' 'call_ln24' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i62 %trunc_ln31_1" [d1.cpp:31]   --->   Operation 101 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i32 %mem, i64 %sext_ln31" [d1.cpp:31]   --->   Operation 102 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 103 [8/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 103 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 104 [7/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 104 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 105 [6/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 105 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 106 [5/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 106 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 107 [4/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 107 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 108 [3/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 108 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 109 [2/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 109 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 110 [1/8] (7.30ns)   --->   "%empty_41 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 110 'readreq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 111 [2/2] (0.00ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 111 'call' 'call_ln31' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.21>
ST_21 : Operation 112 [1/2] (1.21ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 112 'call' 'call_ln31' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 4.50>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%arg1_r_15_loc_load = load i32 %arg1_r_15_loc"   --->   Operation 113 'load' 'arg1_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%arg1_r_9_loc_load = load i32 %arg1_r_9_loc"   --->   Operation 114 'load' 'arg1_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%arg2_r_15_loc_load = load i32 %arg2_r_15_loc"   --->   Operation 115 'load' 'arg2_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%arg2_r_9_loc_load = load i32 %arg2_r_9_loc"   --->   Operation 116 'load' 'arg2_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 117 [1/1] (0.00ns)   --->   "%conv36 = zext i32 %arg2_r_15_loc_load"   --->   Operation 117 'zext' 'conv36' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i32 %arg1_r_15_loc_load" [d1.cpp:50]   --->   Operation 118 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 119 '%arr = mul i64 %conv36, i64 %zext_ln50'
ST_22 : Operation 119 [1/1] (2.10ns)   --->   "%arr = mul i64 %conv36, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 119 'mul' 'arr' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i32 %arg2_r_9_loc_load" [d1.cpp:50]   --->   Operation 120 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 121 '%mul_ln50_6 = mul i64 %zext_ln50_6, i64 %zext_ln50'
ST_22 : Operation 121 [1/1] (2.10ns)   --->   "%mul_ln50_6 = mul i64 %zext_ln50_6, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 121 'mul' 'mul_ln50_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln50_12 = zext i32 %arg1_r_9_loc_load" [d1.cpp:50]   --->   Operation 122 'zext' 'zext_ln50_12' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 123 '%mul_ln50_27 = mul i64 %conv36, i64 %zext_ln50_12'
ST_22 : Operation 123 [1/1] (2.10ns)   --->   "%mul_ln50_27 = mul i64 %conv36, i64 %zext_ln50_12" [d1.cpp:50]   --->   Operation 123 'mul' 'mul_ln50_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 124 [1/1] (1.08ns)   --->   "%add_ln50_18 = add i64 %mul_ln50_6, i64 %mul_ln50_27" [d1.cpp:50]   --->   Operation 124 'add' 'add_ln50_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 5.75>
ST_23 : Operation 125 [1/1] (0.00ns)   --->   "%arg1_r_14_loc_load = load i32 %arg1_r_14_loc"   --->   Operation 125 'load' 'arg1_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 126 [1/1] (0.00ns)   --->   "%arg1_r_13_loc_load = load i32 %arg1_r_13_loc"   --->   Operation 126 'load' 'arg1_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 127 [1/1] (0.00ns)   --->   "%arg1_r_12_loc_load = load i32 %arg1_r_12_loc"   --->   Operation 127 'load' 'arg1_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 128 [1/1] (0.00ns)   --->   "%arg1_r_11_loc_load = load i32 %arg1_r_11_loc"   --->   Operation 128 'load' 'arg1_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 129 [1/1] (0.00ns)   --->   "%arg1_r_10_loc_load = load i32 %arg1_r_10_loc"   --->   Operation 129 'load' 'arg1_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 130 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i32 %arg1_r_8_loc"   --->   Operation 130 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 131 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i32 %arg1_r_7_loc"   --->   Operation 131 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 132 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i32 %arg1_r_6_loc"   --->   Operation 132 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 133 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i32 %arg1_r_5_loc"   --->   Operation 133 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 134 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i32 %arg1_r_4_loc"   --->   Operation 134 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 135 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i32 %arg1_r_3_loc"   --->   Operation 135 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 136 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i32 %arg1_r_2_loc"   --->   Operation 136 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 137 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i32 %arg1_r_1_loc"   --->   Operation 137 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 138 [1/1] (0.00ns)   --->   "%arg2_r_14_loc_load = load i32 %arg2_r_14_loc"   --->   Operation 138 'load' 'arg2_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 139 [1/1] (0.00ns)   --->   "%arg2_r_13_loc_load = load i32 %arg2_r_13_loc"   --->   Operation 139 'load' 'arg2_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 140 [1/1] (0.00ns)   --->   "%arg2_r_12_loc_load = load i32 %arg2_r_12_loc"   --->   Operation 140 'load' 'arg2_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 141 [1/1] (0.00ns)   --->   "%arg2_r_11_loc_load = load i32 %arg2_r_11_loc"   --->   Operation 141 'load' 'arg2_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 142 [1/1] (0.00ns)   --->   "%arg2_r_10_loc_load = load i32 %arg2_r_10_loc"   --->   Operation 142 'load' 'arg2_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 143 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i32 %arg2_r_8_loc"   --->   Operation 143 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 144 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i32 %arg2_r_7_loc"   --->   Operation 144 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 145 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i32 %arg2_r_6_loc"   --->   Operation 145 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 146 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i32 %arg2_r_5_loc"   --->   Operation 146 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 147 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i32 %arg2_r_4_loc"   --->   Operation 147 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 148 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i32 %arg2_r_3_loc"   --->   Operation 148 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 149 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i32 %arg2_r_2_loc"   --->   Operation 149 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 150 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i32 %arg2_r_1_loc"   --->   Operation 150 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 151 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i32 %arg2_r_loc"   --->   Operation 151 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i32 %arg2_r_14_loc_load" [d1.cpp:50]   --->   Operation 152 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 153 '%mul_ln50_1 = mul i64 %zext_ln50_1, i64 %zext_ln50'
ST_23 : Operation 153 [1/1] (2.10ns)   --->   "%mul_ln50_1 = mul i64 %zext_ln50_1, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 153 'mul' 'mul_ln50_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i32 %arg2_r_13_loc_load" [d1.cpp:50]   --->   Operation 154 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 155 '%mul_ln50_2 = mul i64 %zext_ln50_2, i64 %zext_ln50'
ST_23 : Operation 155 [1/1] (2.10ns)   --->   "%mul_ln50_2 = mul i64 %zext_ln50_2, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 155 'mul' 'mul_ln50_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i32 %arg2_r_12_loc_load" [d1.cpp:50]   --->   Operation 156 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 157 '%mul_ln50_3 = mul i64 %zext_ln50_3, i64 %zext_ln50'
ST_23 : Operation 157 [1/1] (2.10ns)   --->   "%mul_ln50_3 = mul i64 %zext_ln50_3, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 157 'mul' 'mul_ln50_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i32 %arg2_r_11_loc_load" [d1.cpp:50]   --->   Operation 158 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 159 '%mul_ln50_4 = mul i64 %zext_ln50_4, i64 %zext_ln50'
ST_23 : Operation 159 [1/1] (2.10ns)   --->   "%mul_ln50_4 = mul i64 %zext_ln50_4, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 159 'mul' 'mul_ln50_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i32 %arg2_r_10_loc_load" [d1.cpp:50]   --->   Operation 160 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 161 '%mul_ln50_5 = mul i64 %zext_ln50_5, i64 %zext_ln50'
ST_23 : Operation 161 [1/1] (2.10ns)   --->   "%mul_ln50_5 = mul i64 %zext_ln50_5, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 161 'mul' 'mul_ln50_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i32 %arg1_r_14_loc_load" [d1.cpp:50]   --->   Operation 162 'zext' 'zext_ln50_7' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 163 '%mul_ln50_7 = mul i64 %conv36, i64 %zext_ln50_7'
ST_23 : Operation 163 [1/1] (2.10ns)   --->   "%mul_ln50_7 = mul i64 %conv36, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 163 'mul' 'mul_ln50_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 164 [1/1] (1.08ns)   --->   "%arr_1 = add i64 %mul_ln50_7, i64 %mul_ln50_1" [d1.cpp:50]   --->   Operation 164 'add' 'arr_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 165 '%mul_ln50_8 = mul i64 %zext_ln50_1, i64 %zext_ln50_7'
ST_23 : Operation 165 [1/1] (2.10ns)   --->   "%mul_ln50_8 = mul i64 %zext_ln50_1, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 165 'mul' 'mul_ln50_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 166 '%mul_ln50_9 = mul i64 %zext_ln50_2, i64 %zext_ln50_7'
ST_23 : Operation 166 [1/1] (2.10ns)   --->   "%mul_ln50_9 = mul i64 %zext_ln50_2, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 166 'mul' 'mul_ln50_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 167 '%mul_ln50_10 = mul i64 %zext_ln50_3, i64 %zext_ln50_7'
ST_23 : Operation 167 [1/1] (2.10ns)   --->   "%mul_ln50_10 = mul i64 %zext_ln50_3, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 167 'mul' 'mul_ln50_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 168 '%mul_ln50_11 = mul i64 %zext_ln50_4, i64 %zext_ln50_7'
ST_23 : Operation 168 [1/1] (2.10ns)   --->   "%mul_ln50_11 = mul i64 %zext_ln50_4, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 168 'mul' 'mul_ln50_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 169 '%mul_ln50_12 = mul i64 %zext_ln50_5, i64 %zext_ln50_7'
ST_23 : Operation 169 [1/1] (2.10ns)   --->   "%mul_ln50_12 = mul i64 %zext_ln50_5, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 169 'mul' 'mul_ln50_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i32 %arg1_r_13_loc_load" [d1.cpp:50]   --->   Operation 170 'zext' 'zext_ln50_8' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 171 '%mul_ln50_13 = mul i64 %conv36, i64 %zext_ln50_8'
ST_23 : Operation 171 [1/1] (2.10ns)   --->   "%mul_ln50_13 = mul i64 %conv36, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 171 'mul' 'mul_ln50_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 172 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_1 = add i64 %mul_ln50_2, i64 %mul_ln50_13" [d1.cpp:50]   --->   Operation 172 'add' 'add_ln50_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 173 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_2 = add i64 %add_ln50_1, i64 %mul_ln50_8" [d1.cpp:50]   --->   Operation 173 'add' 'arr_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 174 '%mul_ln50_14 = mul i64 %zext_ln50_1, i64 %zext_ln50_8'
ST_23 : Operation 174 [1/1] (2.10ns)   --->   "%mul_ln50_14 = mul i64 %zext_ln50_1, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 174 'mul' 'mul_ln50_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 175 '%mul_ln50_15 = mul i64 %zext_ln50_2, i64 %zext_ln50_8'
ST_23 : Operation 175 [1/1] (2.10ns)   --->   "%mul_ln50_15 = mul i64 %zext_ln50_2, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 175 'mul' 'mul_ln50_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 176 '%mul_ln50_16 = mul i64 %zext_ln50_3, i64 %zext_ln50_8'
ST_23 : Operation 176 [1/1] (2.10ns)   --->   "%mul_ln50_16 = mul i64 %zext_ln50_3, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 176 'mul' 'mul_ln50_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 177 '%mul_ln50_17 = mul i64 %zext_ln50_4, i64 %zext_ln50_8'
ST_23 : Operation 177 [1/1] (2.10ns)   --->   "%mul_ln50_17 = mul i64 %zext_ln50_4, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 177 'mul' 'mul_ln50_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i32 %arg1_r_12_loc_load" [d1.cpp:50]   --->   Operation 178 'zext' 'zext_ln50_9' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 179 '%mul_ln50_18 = mul i64 %conv36, i64 %zext_ln50_9'
ST_23 : Operation 179 [1/1] (2.10ns)   --->   "%mul_ln50_18 = mul i64 %conv36, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 179 'mul' 'mul_ln50_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 180 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_3 = add i64 %mul_ln50_3, i64 %mul_ln50_14" [d1.cpp:50]   --->   Operation 180 'add' 'add_ln50_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 181 [1/1] (1.08ns)   --->   "%add_ln50_4 = add i64 %mul_ln50_9, i64 %mul_ln50_18" [d1.cpp:50]   --->   Operation 181 'add' 'add_ln50_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 182 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_3 = add i64 %add_ln50_4, i64 %add_ln50_3" [d1.cpp:50]   --->   Operation 182 'add' 'arr_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 183 '%mul_ln50_19 = mul i64 %zext_ln50_1, i64 %zext_ln50_9'
ST_23 : Operation 183 [1/1] (2.10ns)   --->   "%mul_ln50_19 = mul i64 %zext_ln50_1, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 183 'mul' 'mul_ln50_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 184 '%mul_ln50_20 = mul i64 %zext_ln50_2, i64 %zext_ln50_9'
ST_23 : Operation 184 [1/1] (2.10ns)   --->   "%mul_ln50_20 = mul i64 %zext_ln50_2, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 184 'mul' 'mul_ln50_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 185 '%mul_ln50_21 = mul i64 %zext_ln50_3, i64 %zext_ln50_9'
ST_23 : Operation 185 [1/1] (2.10ns)   --->   "%mul_ln50_21 = mul i64 %zext_ln50_3, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 185 'mul' 'mul_ln50_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln50_10 = zext i32 %arg1_r_11_loc_load" [d1.cpp:50]   --->   Operation 186 'zext' 'zext_ln50_10' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 187 '%mul_ln50_22 = mul i64 %conv36, i64 %zext_ln50_10'
ST_23 : Operation 187 [1/1] (2.10ns)   --->   "%mul_ln50_22 = mul i64 %conv36, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 187 'mul' 'mul_ln50_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 188 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_6 = add i64 %mul_ln50_15, i64 %mul_ln50_19" [d1.cpp:50]   --->   Operation 188 'add' 'add_ln50_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 189 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_7 = add i64 %mul_ln50_10, i64 %mul_ln50_22" [d1.cpp:50]   --->   Operation 189 'add' 'add_ln50_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 190 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_8 = add i64 %add_ln50_7, i64 %mul_ln50_4" [d1.cpp:50]   --->   Operation 190 'add' 'add_ln50_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 191 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_4 = add i64 %add_ln50_8, i64 %add_ln50_6" [d1.cpp:50]   --->   Operation 191 'add' 'arr_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 192 '%mul_ln50_23 = mul i64 %zext_ln50_1, i64 %zext_ln50_10'
ST_23 : Operation 192 [1/1] (2.10ns)   --->   "%mul_ln50_23 = mul i64 %zext_ln50_1, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 192 'mul' 'mul_ln50_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 193 '%mul_ln50_24 = mul i64 %zext_ln50_2, i64 %zext_ln50_10'
ST_23 : Operation 193 [1/1] (2.10ns)   --->   "%mul_ln50_24 = mul i64 %zext_ln50_2, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 193 'mul' 'mul_ln50_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln50_11 = zext i32 %arg1_r_10_loc_load" [d1.cpp:50]   --->   Operation 194 'zext' 'zext_ln50_11' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 195 '%mul_ln50_25 = mul i64 %conv36, i64 %zext_ln50_11'
ST_23 : Operation 195 [1/1] (2.10ns)   --->   "%mul_ln50_25 = mul i64 %conv36, i64 %zext_ln50_11" [d1.cpp:50]   --->   Operation 195 'mul' 'mul_ln50_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 196 [1/1] (1.08ns)   --->   "%add_ln50_10 = add i64 %mul_ln50_23, i64 %mul_ln50_16" [d1.cpp:50]   --->   Operation 196 'add' 'add_ln50_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 197 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_11 = add i64 %add_ln50_10, i64 %mul_ln50_20" [d1.cpp:50]   --->   Operation 197 'add' 'add_ln50_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 198 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_12 = add i64 %mul_ln50_11, i64 %mul_ln50_25" [d1.cpp:50]   --->   Operation 198 'add' 'add_ln50_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 199 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_13 = add i64 %add_ln50_12, i64 %mul_ln50_5" [d1.cpp:50]   --->   Operation 199 'add' 'add_ln50_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 200 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_5 = add i64 %add_ln50_13, i64 %add_ln50_11" [d1.cpp:50]   --->   Operation 200 'add' 'arr_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 201 '%mul_ln50_26 = mul i64 %zext_ln50_1, i64 %zext_ln50_11'
ST_23 : Operation 201 [1/1] (2.10ns)   --->   "%mul_ln50_26 = mul i64 %zext_ln50_1, i64 %zext_ln50_11" [d1.cpp:50]   --->   Operation 201 'mul' 'mul_ln50_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 202 [1/1] (1.08ns)   --->   "%add_ln50_15 = add i64 %mul_ln50_26, i64 %mul_ln50_21" [d1.cpp:50]   --->   Operation 202 'add' 'add_ln50_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 203 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_16 = add i64 %add_ln50_15, i64 %mul_ln50_24" [d1.cpp:50]   --->   Operation 203 'add' 'add_ln50_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 204 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_17 = add i64 %mul_ln50_12, i64 %mul_ln50_17" [d1.cpp:50]   --->   Operation 204 'add' 'add_ln50_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 205 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_19 = add i64 %add_ln50_18, i64 %add_ln50_17" [d1.cpp:50]   --->   Operation 205 'add' 'add_ln50_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 206 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_6 = add i64 %add_ln50_19, i64 %add_ln50_16" [d1.cpp:50]   --->   Operation 206 'add' 'arr_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 207 [2/2] (0.42ns)   --->   "%call_ln50 = call void @test_Pipeline_VITIS_LOOP_62_5, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg1_r_7_loc_load, i32 %arg1_r_8_loc_load, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg1_r_15_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_6_loc_load, i32 %arg2_r_7_loc_load, i32 %arg2_r_8_loc_load, i32 %arg2_r_9_loc_load, i32 %arg2_r_10_loc_load, i32 %arg2_r_11_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_15_loc_load, i64 %add138894_loc, i64 %p_loc, i64 %p_loc10, i64 %p_loc11, i64 %p_loc12, i64 %p_loc13, i64 %p_loc14, i64 %p_loc15, i64 %p_loc16, i64 %add169_6877_loc, i64 %add169_5876_loc, i64 %add169_4875_loc, i64 %add169_3874_loc, i64 %add169_2873_loc, i64 %add169_1872_loc, i64 %add169871_loc" [d1.cpp:50]   --->   Operation 207 'call' 'call_ln50' <Predicate = true> <Delay = 0.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 5.59>
ST_24 : Operation 208 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i32 %arg1_r_loc"   --->   Operation 208 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln50_13 = zext i32 %arg2_r_15_loc_load" [d1.cpp:50]   --->   Operation 209 'zext' 'zext_ln50_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 210 [1/1] (0.00ns)   --->   "%zext_ln50_14 = zext i32 %arg2_r_14_loc_load" [d1.cpp:50]   --->   Operation 210 'zext' 'zext_ln50_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln50_15 = zext i32 %arg2_r_13_loc_load" [d1.cpp:50]   --->   Operation 211 'zext' 'zext_ln50_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln50_16 = zext i32 %arg2_r_12_loc_load" [d1.cpp:50]   --->   Operation 212 'zext' 'zext_ln50_16' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 213 [1/2] (0.00ns)   --->   "%call_ln50 = call void @test_Pipeline_VITIS_LOOP_62_5, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg1_r_7_loc_load, i32 %arg1_r_8_loc_load, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg1_r_15_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_6_loc_load, i32 %arg2_r_7_loc_load, i32 %arg2_r_8_loc_load, i32 %arg2_r_9_loc_load, i32 %arg2_r_10_loc_load, i32 %arg2_r_11_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_15_loc_load, i64 %add138894_loc, i64 %p_loc, i64 %p_loc10, i64 %p_loc11, i64 %p_loc12, i64 %p_loc13, i64 %p_loc14, i64 %p_loc15, i64 %p_loc16, i64 %add169_6877_loc, i64 %add169_5876_loc, i64 %add169_4875_loc, i64 %add169_3874_loc, i64 %add169_2873_loc, i64 %add169_1872_loc, i64 %add169871_loc" [d1.cpp:50]   --->   Operation 213 'call' 'call_ln50' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln103 = zext i32 %arg2_r_loc_load" [d1.cpp:103]   --->   Operation 214 'zext' 'zext_ln103' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i32 %arg1_r_6_loc_load" [d1.cpp:106]   --->   Operation 215 'zext' 'zext_ln106' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 216 '%mul_ln106 = mul i64 %zext_ln50_4, i64 %zext_ln106'
ST_24 : Operation 216 [1/1] (2.10ns)   --->   "%mul_ln106 = mul i64 %zext_ln50_4, i64 %zext_ln106" [d1.cpp:106]   --->   Operation 216 'mul' 'mul_ln106' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 217 '%mul_ln106_1 = mul i64 %zext_ln50_5, i64 %zext_ln106'
ST_24 : Operation 217 [1/1] (2.10ns)   --->   "%mul_ln106_1 = mul i64 %zext_ln50_5, i64 %zext_ln106" [d1.cpp:106]   --->   Operation 217 'mul' 'mul_ln106_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln106_1 = zext i32 %arg1_r_5_loc_load" [d1.cpp:106]   --->   Operation 218 'zext' 'zext_ln106_1' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 219 '%mul_ln106_2 = mul i64 %zext_ln50_3, i64 %zext_ln106_1'
ST_24 : Operation 219 [1/1] (2.10ns)   --->   "%mul_ln106_2 = mul i64 %zext_ln50_3, i64 %zext_ln106_1" [d1.cpp:106]   --->   Operation 219 'mul' 'mul_ln106_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 220 '%mul_ln106_3 = mul i64 %zext_ln50_4, i64 %zext_ln106_1'
ST_24 : Operation 220 [1/1] (2.10ns)   --->   "%mul_ln106_3 = mul i64 %zext_ln50_4, i64 %zext_ln106_1" [d1.cpp:106]   --->   Operation 220 'mul' 'mul_ln106_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln106_2 = zext i32 %arg1_r_4_loc_load" [d1.cpp:106]   --->   Operation 221 'zext' 'zext_ln106_2' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 222 '%mul_ln106_5 = mul i64 %zext_ln50_2, i64 %zext_ln106_2'
ST_24 : Operation 222 [1/1] (2.10ns)   --->   "%mul_ln106_5 = mul i64 %zext_ln50_2, i64 %zext_ln106_2" [d1.cpp:106]   --->   Operation 222 'mul' 'mul_ln106_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 223 '%mul_ln106_6 = mul i64 %zext_ln50_3, i64 %zext_ln106_2'
ST_24 : Operation 223 [1/1] (2.10ns)   --->   "%mul_ln106_6 = mul i64 %zext_ln50_3, i64 %zext_ln106_2" [d1.cpp:106]   --->   Operation 223 'mul' 'mul_ln106_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 224 [1/1] (0.00ns)   --->   "%zext_ln106_3 = zext i32 %arg1_r_3_loc_load" [d1.cpp:106]   --->   Operation 224 'zext' 'zext_ln106_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 225 '%mul_ln106_8 = mul i64 %zext_ln50_1, i64 %zext_ln106_3'
ST_24 : Operation 225 [1/1] (2.10ns)   --->   "%mul_ln106_8 = mul i64 %zext_ln50_1, i64 %zext_ln106_3" [d1.cpp:106]   --->   Operation 225 'mul' 'mul_ln106_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 226 '%mul_ln106_9 = mul i64 %zext_ln50_2, i64 %zext_ln106_3'
ST_24 : Operation 226 [1/1] (2.10ns)   --->   "%mul_ln106_9 = mul i64 %zext_ln50_2, i64 %zext_ln106_3" [d1.cpp:106]   --->   Operation 226 'mul' 'mul_ln106_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln106_4 = zext i32 %arg1_r_2_loc_load" [d1.cpp:106]   --->   Operation 227 'zext' 'zext_ln106_4' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 228 '%mul_ln106_10 = mul i64 %conv36, i64 %zext_ln106_4'
ST_24 : Operation 228 [1/1] (2.10ns)   --->   "%mul_ln106_10 = mul i64 %conv36, i64 %zext_ln106_4" [d1.cpp:106]   --->   Operation 228 'mul' 'mul_ln106_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 229 '%mul_ln106_11 = mul i64 %zext_ln50_1, i64 %zext_ln106_4'
ST_24 : Operation 229 [1/1] (2.10ns)   --->   "%mul_ln106_11 = mul i64 %zext_ln50_1, i64 %zext_ln106_4" [d1.cpp:106]   --->   Operation 229 'mul' 'mul_ln106_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln106_5 = zext i32 %arg1_r_1_loc_load" [d1.cpp:106]   --->   Operation 230 'zext' 'zext_ln106_5' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 231 '%mul_ln106_12 = mul i64 %conv36, i64 %zext_ln106_5'
ST_24 : Operation 231 [1/1] (2.10ns)   --->   "%mul_ln106_12 = mul i64 %conv36, i64 %zext_ln106_5" [d1.cpp:106]   --->   Operation 231 'mul' 'mul_ln106_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 232 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106 = add i64 %mul_ln106_11, i64 %mul_ln106_6" [d1.cpp:106]   --->   Operation 232 'add' 'add_ln106' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 233 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln106_1 = add i64 %add_ln106, i64 %mul_ln106_9" [d1.cpp:106]   --->   Operation 233 'add' 'add_ln106_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 234 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106_2 = add i64 %mul_ln106_3, i64 %mul_ln106_12" [d1.cpp:106]   --->   Operation 234 'add' 'add_ln106_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 235 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln106_3 = add i64 %add_ln106_2, i64 %mul_ln106_1" [d1.cpp:106]   --->   Operation 235 'add' 'add_ln106_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln106 = trunc i64 %add_ln106_1" [d1.cpp:106]   --->   Operation 236 'trunc' 'trunc_ln106' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 237 [1/1] (0.00ns)   --->   "%trunc_ln106_1 = trunc i64 %add_ln106_3" [d1.cpp:106]   --->   Operation 237 'trunc' 'trunc_ln106_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln103_1 = zext i32 %arg1_r_8_loc_load" [d1.cpp:103]   --->   Operation 238 'zext' 'zext_ln103_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln106_6 = zext i32 %arg1_r_loc_load" [d1.cpp:106]   --->   Operation 239 'zext' 'zext_ln106_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 240 '%mul_ln106_13 = mul i64 %conv36, i64 %zext_ln106_6'
ST_24 : Operation 240 [1/1] (2.10ns)   --->   "%mul_ln106_13 = mul i64 %conv36, i64 %zext_ln106_6" [d1.cpp:106]   --->   Operation 240 'mul' 'mul_ln106_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 241 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i32 %arg1_r_7_loc_load" [d1.cpp:114]   --->   Operation 241 'zext' 'zext_ln114' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i32 %arg2_r_6_loc_load" [d1.cpp:114]   --->   Operation 242 'zext' 'zext_ln114_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 243 [1/1] (0.00ns)   --->   "%zext_ln114_4 = zext i32 %arg2_r_6_loc_load" [d1.cpp:114]   --->   Operation 243 'zext' 'zext_ln114_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln114_2 = zext i32 %arg2_r_7_loc_load" [d1.cpp:114]   --->   Operation 244 'zext' 'zext_ln114_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln114_5 = zext i32 %arg2_r_7_loc_load" [d1.cpp:114]   --->   Operation 245 'zext' 'zext_ln114_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 246 [1/1] (0.00ns)   --->   "%zext_ln114_3 = zext i32 %arg2_r_8_loc_load" [d1.cpp:114]   --->   Operation 246 'zext' 'zext_ln114_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln115 = zext i32 %arg2_r_5_loc_load" [d1.cpp:115]   --->   Operation 247 'zext' 'zext_ln115' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 248 [1/1] (0.00ns)   --->   "%zext_ln115_1 = zext i32 %arg2_r_5_loc_load" [d1.cpp:115]   --->   Operation 248 'zext' 'zext_ln115_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 249 [1/1] (1.01ns)   --->   "%tmp16 = add i33 %zext_ln50_13, i33 %zext_ln114_5" [d1.cpp:50]   --->   Operation 249 'add' 'tmp16' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i32 %arg2_r_4_loc_load" [d1.cpp:116]   --->   Operation 250 'zext' 'zext_ln116' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln116_1 = zext i32 %arg2_r_4_loc_load" [d1.cpp:116]   --->   Operation 251 'zext' 'zext_ln116_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 252 [1/1] (1.01ns)   --->   "%tmp18 = add i33 %zext_ln50_14, i33 %zext_ln114_4" [d1.cpp:50]   --->   Operation 252 'add' 'tmp18' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i32 %arg2_r_3_loc_load" [d1.cpp:117]   --->   Operation 253 'zext' 'zext_ln117' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 254 [1/1] (1.01ns)   --->   "%tmp22 = add i33 %zext_ln50_15, i33 %zext_ln115_1" [d1.cpp:50]   --->   Operation 254 'add' 'tmp22' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln118 = zext i32 %arg2_r_2_loc_load" [d1.cpp:118]   --->   Operation 255 'zext' 'zext_ln118' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 256 [1/1] (1.01ns)   --->   "%tmp28 = add i33 %zext_ln50_16, i33 %zext_ln116_1" [d1.cpp:50]   --->   Operation 256 'add' 'tmp28' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 257 [1/1] (0.00ns)   --->   "%zext_ln119 = zext i32 %arg2_r_1_loc_load" [d1.cpp:119]   --->   Operation 257 'zext' 'zext_ln119' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 258 '%mul_ln119 = mul i64 %zext_ln119, i64 %zext_ln103_1'
ST_24 : Operation 258 [1/1] (2.10ns)   --->   "%mul_ln119 = mul i64 %zext_ln119, i64 %zext_ln103_1" [d1.cpp:119]   --->   Operation 258 'mul' 'mul_ln119' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 259 '%mul_ln119_1 = mul i64 %zext_ln118, i64 %zext_ln114'
ST_24 : Operation 259 [1/1] (2.10ns)   --->   "%mul_ln119_1 = mul i64 %zext_ln118, i64 %zext_ln114" [d1.cpp:119]   --->   Operation 259 'mul' 'mul_ln119_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 260 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln119_1 = add i64 %mul_ln106_8, i64 %mul_ln106_2" [d1.cpp:119]   --->   Operation 260 'add' 'add_ln119_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 261 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln119_2 = add i64 %add_ln119_1, i64 %mul_ln106_5" [d1.cpp:119]   --->   Operation 261 'add' 'add_ln119_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 262 [1/1] (1.08ns)   --->   "%add_ln119_3 = add i64 %mul_ln119_1, i64 %mul_ln106" [d1.cpp:119]   --->   Operation 262 'add' 'add_ln119_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 263 [1/1] (1.08ns)   --->   "%add_ln119_4 = add i64 %mul_ln119, i64 %mul_ln106_10" [d1.cpp:119]   --->   Operation 263 'add' 'add_ln119_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 264 [1/1] (0.00ns)   --->   "%trunc_ln119 = trunc i64 %add_ln119_3" [d1.cpp:119]   --->   Operation 264 'trunc' 'trunc_ln119' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln119_1 = trunc i64 %add_ln119_4" [d1.cpp:119]   --->   Operation 265 'trunc' 'trunc_ln119_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 266 [1/1] (1.08ns)   --->   "%add_ln119_5 = add i64 %add_ln119_4, i64 %add_ln119_3" [d1.cpp:119]   --->   Operation 266 'add' 'add_ln119_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 267 [1/1] (0.00ns)   --->   "%trunc_ln119_2 = trunc i64 %add_ln119_2" [d1.cpp:119]   --->   Operation 267 'trunc' 'trunc_ln119_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 268 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln119_6 = add i28 %trunc_ln119_1, i28 %trunc_ln119" [d1.cpp:119]   --->   Operation 268 'add' 'add_ln119_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 269 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln119_7 = add i28 %add_ln119_6, i28 %trunc_ln119_2" [d1.cpp:119]   --->   Operation 269 'add' 'add_ln119_7' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 270 '%mul_ln120 = mul i64 %zext_ln50_1, i64 %zext_ln106_5'
ST_24 : Operation 270 [1/1] (2.10ns)   --->   "%mul_ln120 = mul i64 %zext_ln50_1, i64 %zext_ln106_5" [d1.cpp:120]   --->   Operation 270 'mul' 'mul_ln120' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 271 '%mul_ln120_1 = mul i64 %zext_ln50_2, i64 %zext_ln106_4'
ST_24 : Operation 271 [1/1] (2.10ns)   --->   "%mul_ln120_1 = mul i64 %zext_ln50_2, i64 %zext_ln106_4" [d1.cpp:120]   --->   Operation 271 'mul' 'mul_ln120_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 272 '%mul_ln120_2 = mul i64 %zext_ln50_3, i64 %zext_ln106_3'
ST_24 : Operation 272 [1/1] (2.10ns)   --->   "%mul_ln120_2 = mul i64 %zext_ln50_3, i64 %zext_ln106_3" [d1.cpp:120]   --->   Operation 272 'mul' 'mul_ln120_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 273 '%mul_ln120_3 = mul i64 %zext_ln50_4, i64 %zext_ln106_2'
ST_24 : Operation 273 [1/1] (2.10ns)   --->   "%mul_ln120_3 = mul i64 %zext_ln50_4, i64 %zext_ln106_2" [d1.cpp:120]   --->   Operation 273 'mul' 'mul_ln120_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 274 '%mul_ln120_4 = mul i64 %zext_ln114_3, i64 %zext_ln114'
ST_24 : Operation 274 [1/1] (2.10ns)   --->   "%mul_ln120_4 = mul i64 %zext_ln114_3, i64 %zext_ln114" [d1.cpp:120]   --->   Operation 274 'mul' 'mul_ln120_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 275 '%mul_ln120_5 = mul i64 %zext_ln50_6, i64 %zext_ln106'
ST_24 : Operation 275 [1/1] (2.10ns)   --->   "%mul_ln120_5 = mul i64 %zext_ln50_6, i64 %zext_ln106" [d1.cpp:120]   --->   Operation 275 'mul' 'mul_ln120_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 276 '%mul_ln120_6 = mul i64 %zext_ln50_5, i64 %zext_ln106_1'
ST_24 : Operation 276 [1/1] (2.10ns)   --->   "%mul_ln120_6 = mul i64 %zext_ln50_5, i64 %zext_ln106_1" [d1.cpp:120]   --->   Operation 276 'mul' 'mul_ln120_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 277 [1/1] (1.08ns)   --->   "%add_ln120 = add i64 %mul_ln120_1, i64 %mul_ln120" [d1.cpp:120]   --->   Operation 277 'add' 'add_ln120' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 278 [1/1] (1.08ns)   --->   "%add_ln120_1 = add i64 %mul_ln120_2, i64 %mul_ln120_3" [d1.cpp:120]   --->   Operation 278 'add' 'add_ln120_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 279 [1/1] (0.00ns)   --->   "%trunc_ln120 = trunc i64 %add_ln120" [d1.cpp:120]   --->   Operation 279 'trunc' 'trunc_ln120' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 280 [1/1] (0.00ns)   --->   "%trunc_ln120_1 = trunc i64 %add_ln120_1" [d1.cpp:120]   --->   Operation 280 'trunc' 'trunc_ln120_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 281 [1/1] (1.08ns)   --->   "%add_ln120_2 = add i64 %add_ln120_1, i64 %add_ln120" [d1.cpp:120]   --->   Operation 281 'add' 'add_ln120_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 282 [1/1] (1.08ns)   --->   "%add_ln120_3 = add i64 %mul_ln120_5, i64 %mul_ln120_6" [d1.cpp:120]   --->   Operation 282 'add' 'add_ln120_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 283 [1/1] (1.08ns)   --->   "%add_ln120_4 = add i64 %mul_ln120_4, i64 %mul_ln106_13" [d1.cpp:120]   --->   Operation 283 'add' 'add_ln120_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 284 [1/1] (0.00ns)   --->   "%trunc_ln120_2 = trunc i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 284 'trunc' 'trunc_ln120_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 285 [1/1] (0.00ns)   --->   "%trunc_ln120_3 = trunc i64 %add_ln120_4" [d1.cpp:120]   --->   Operation 285 'trunc' 'trunc_ln120_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 286 [1/1] (1.08ns)   --->   "%add_ln120_5 = add i64 %add_ln120_4, i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 286 'add' 'add_ln120_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 287 [1/1] (0.97ns)   --->   "%add_ln120_7 = add i28 %trunc_ln120_1, i28 %trunc_ln120" [d1.cpp:120]   --->   Operation 287 'add' 'add_ln120_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 288 [1/1] (0.97ns)   --->   "%add_ln120_8 = add i28 %trunc_ln120_3, i28 %trunc_ln120_2" [d1.cpp:120]   --->   Operation 288 'add' 'add_ln120_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 289 '%mul_ln121 = mul i64 %zext_ln114_2, i64 %zext_ln106_6'
ST_24 : Operation 289 [1/1] (2.10ns)   --->   "%mul_ln121 = mul i64 %zext_ln114_2, i64 %zext_ln106_6" [d1.cpp:121]   --->   Operation 289 'mul' 'mul_ln121' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 290 '%mul_ln121_1 = mul i64 %zext_ln114_1, i64 %zext_ln106_5'
ST_24 : Operation 290 [1/1] (2.10ns)   --->   "%mul_ln121_1 = mul i64 %zext_ln114_1, i64 %zext_ln106_5" [d1.cpp:121]   --->   Operation 290 'mul' 'mul_ln121_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 291 '%mul_ln121_2 = mul i64 %zext_ln115, i64 %zext_ln106_4'
ST_24 : Operation 291 [1/1] (2.10ns)   --->   "%mul_ln121_2 = mul i64 %zext_ln115, i64 %zext_ln106_4" [d1.cpp:121]   --->   Operation 291 'mul' 'mul_ln121_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 292 '%mul_ln121_3 = mul i64 %zext_ln116, i64 %zext_ln106_3'
ST_24 : Operation 292 [1/1] (2.10ns)   --->   "%mul_ln121_3 = mul i64 %zext_ln116, i64 %zext_ln106_3" [d1.cpp:121]   --->   Operation 292 'mul' 'mul_ln121_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 293 '%mul_ln121_4 = mul i64 %zext_ln117, i64 %zext_ln106_2'
ST_24 : Operation 293 [1/1] (2.10ns)   --->   "%mul_ln121_4 = mul i64 %zext_ln117, i64 %zext_ln106_2" [d1.cpp:121]   --->   Operation 293 'mul' 'mul_ln121_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 294 '%mul_ln121_5 = mul i64 %zext_ln118, i64 %zext_ln106_1'
ST_24 : Operation 294 [1/1] (2.10ns)   --->   "%mul_ln121_5 = mul i64 %zext_ln118, i64 %zext_ln106_1" [d1.cpp:121]   --->   Operation 294 'mul' 'mul_ln121_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 295 '%mul_ln121_6 = mul i64 %zext_ln103, i64 %zext_ln114'
ST_24 : Operation 295 [1/1] (2.10ns)   --->   "%mul_ln121_6 = mul i64 %zext_ln103, i64 %zext_ln114" [d1.cpp:121]   --->   Operation 295 'mul' 'mul_ln121_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 296 '%mul_ln121_7 = mul i64 %zext_ln119, i64 %zext_ln106'
ST_24 : Operation 296 [1/1] (2.10ns)   --->   "%mul_ln121_7 = mul i64 %zext_ln119, i64 %zext_ln106" [d1.cpp:121]   --->   Operation 296 'mul' 'mul_ln121_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 297 [1/1] (1.08ns)   --->   "%add_ln121 = add i64 %mul_ln121_2, i64 %mul_ln121_1" [d1.cpp:121]   --->   Operation 297 'add' 'add_ln121' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 298 [1/1] (1.08ns)   --->   "%add_ln121_1 = add i64 %mul_ln121_3, i64 %mul_ln121_4" [d1.cpp:121]   --->   Operation 298 'add' 'add_ln121_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 299 [1/1] (0.00ns)   --->   "%trunc_ln121 = trunc i64 %add_ln121" [d1.cpp:121]   --->   Operation 299 'trunc' 'trunc_ln121' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 300 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = trunc i64 %add_ln121_1" [d1.cpp:121]   --->   Operation 300 'trunc' 'trunc_ln121_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 301 [1/1] (1.08ns)   --->   "%add_ln121_2 = add i64 %add_ln121_1, i64 %add_ln121" [d1.cpp:121]   --->   Operation 301 'add' 'add_ln121_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 302 [1/1] (1.08ns)   --->   "%add_ln121_3 = add i64 %mul_ln121_7, i64 %mul_ln121_5" [d1.cpp:121]   --->   Operation 302 'add' 'add_ln121_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 303 [1/1] (1.08ns)   --->   "%add_ln121_4 = add i64 %mul_ln121_6, i64 %mul_ln121" [d1.cpp:121]   --->   Operation 303 'add' 'add_ln121_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 304 [1/1] (0.00ns)   --->   "%trunc_ln121_2 = trunc i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 304 'trunc' 'trunc_ln121_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 305 [1/1] (0.00ns)   --->   "%trunc_ln121_3 = trunc i64 %add_ln121_4" [d1.cpp:121]   --->   Operation 305 'trunc' 'trunc_ln121_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 306 [1/1] (1.08ns)   --->   "%add_ln121_5 = add i64 %add_ln121_4, i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 306 'add' 'add_ln121_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 307 [1/1] (0.97ns)   --->   "%add_ln121_7 = add i28 %trunc_ln121_1, i28 %trunc_ln121" [d1.cpp:121]   --->   Operation 307 'add' 'add_ln121_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 308 [1/1] (0.97ns)   --->   "%add_ln121_8 = add i28 %trunc_ln121_3, i28 %trunc_ln121_2" [d1.cpp:121]   --->   Operation 308 'add' 'add_ln121_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 309 '%mul_ln126 = mul i64 %zext_ln118, i64 %zext_ln106_6'
ST_24 : Operation 309 [1/1] (2.10ns)   --->   "%mul_ln126 = mul i64 %zext_ln118, i64 %zext_ln106_6" [d1.cpp:126]   --->   Operation 309 'mul' 'mul_ln126' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 310 '%mul_ln126_1 = mul i64 %zext_ln119, i64 %zext_ln106_5'
ST_24 : Operation 310 [1/1] (2.10ns)   --->   "%mul_ln126_1 = mul i64 %zext_ln119, i64 %zext_ln106_5" [d1.cpp:126]   --->   Operation 310 'mul' 'mul_ln126_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 311 '%mul_ln126_2 = mul i64 %zext_ln103, i64 %zext_ln106_4'
ST_24 : Operation 311 [1/1] (2.10ns)   --->   "%mul_ln126_2 = mul i64 %zext_ln103, i64 %zext_ln106_4" [d1.cpp:126]   --->   Operation 311 'mul' 'mul_ln126_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 312 '%mul_ln127 = mul i64 %zext_ln103, i64 %zext_ln106_5'
ST_24 : Operation 312 [1/1] (2.10ns)   --->   "%mul_ln127 = mul i64 %zext_ln103, i64 %zext_ln106_5" [d1.cpp:127]   --->   Operation 312 'mul' 'mul_ln127' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 313 '%mul_ln127_1 = mul i64 %zext_ln119, i64 %zext_ln106_6'
ST_24 : Operation 313 [1/1] (2.10ns)   --->   "%mul_ln127_1 = mul i64 %zext_ln119, i64 %zext_ln106_6" [d1.cpp:127]   --->   Operation 313 'mul' 'mul_ln127_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 314 '%mul_ln128 = mul i64 %zext_ln103, i64 %zext_ln106_6'
ST_24 : Operation 314 [1/1] (2.10ns)   --->   "%mul_ln128 = mul i64 %zext_ln103, i64 %zext_ln106_6" [d1.cpp:128]   --->   Operation 314 'mul' 'mul_ln128' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 315 '%mul_ln130 = mul i64 %zext_ln114_3, i64 %zext_ln106_6'
ST_24 : Operation 315 [1/1] (2.10ns)   --->   "%mul_ln130 = mul i64 %zext_ln114_3, i64 %zext_ln106_6" [d1.cpp:130]   --->   Operation 315 'mul' 'mul_ln130' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 316 [1/1] (0.00ns)   --->   "%zext_ln130_1 = zext i64 %mul_ln130" [d1.cpp:130]   --->   Operation 316 'zext' 'zext_ln130_1' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 317 '%mul_ln130_1 = mul i64 %zext_ln114_2, i64 %zext_ln106_5'
ST_24 : Operation 317 [1/1] (2.10ns)   --->   "%mul_ln130_1 = mul i64 %zext_ln114_2, i64 %zext_ln106_5" [d1.cpp:130]   --->   Operation 317 'mul' 'mul_ln130_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 318 [1/1] (0.00ns)   --->   "%zext_ln130_2 = zext i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 318 'zext' 'zext_ln130_2' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 319 '%mul_ln130_2 = mul i64 %zext_ln114_1, i64 %zext_ln106_4'
ST_24 : Operation 319 [1/1] (2.10ns)   --->   "%mul_ln130_2 = mul i64 %zext_ln114_1, i64 %zext_ln106_4" [d1.cpp:130]   --->   Operation 319 'mul' 'mul_ln130_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln130_3 = zext i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 320 'zext' 'zext_ln130_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 321 '%mul_ln130_3 = mul i64 %zext_ln115, i64 %zext_ln106_3'
ST_24 : Operation 321 [1/1] (2.10ns)   --->   "%mul_ln130_3 = mul i64 %zext_ln115, i64 %zext_ln106_3" [d1.cpp:130]   --->   Operation 321 'mul' 'mul_ln130_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 322 [1/1] (0.00ns)   --->   "%zext_ln130_4 = zext i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 322 'zext' 'zext_ln130_4' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 323 '%mul_ln130_4 = mul i64 %zext_ln116, i64 %zext_ln106_2'
ST_24 : Operation 323 [1/1] (2.10ns)   --->   "%mul_ln130_4 = mul i64 %zext_ln116, i64 %zext_ln106_2" [d1.cpp:130]   --->   Operation 323 'mul' 'mul_ln130_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 324 [1/1] (0.00ns)   --->   "%zext_ln130_5 = zext i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 324 'zext' 'zext_ln130_5' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 325 '%mul_ln130_5 = mul i64 %zext_ln117, i64 %zext_ln106_1'
ST_24 : Operation 325 [1/1] (2.10ns)   --->   "%mul_ln130_5 = mul i64 %zext_ln117, i64 %zext_ln106_1" [d1.cpp:130]   --->   Operation 325 'mul' 'mul_ln130_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 326 [1/1] (0.00ns)   --->   "%zext_ln130_6 = zext i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 326 'zext' 'zext_ln130_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 327 '%mul_ln130_6 = mul i64 %zext_ln118, i64 %zext_ln106'
ST_24 : Operation 327 [1/1] (2.10ns)   --->   "%mul_ln130_6 = mul i64 %zext_ln118, i64 %zext_ln106" [d1.cpp:130]   --->   Operation 327 'mul' 'mul_ln130_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 328 [1/1] (0.00ns)   --->   "%zext_ln130_7 = zext i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 328 'zext' 'zext_ln130_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 329 '%mul_ln130_7 = mul i64 %zext_ln119, i64 %zext_ln114'
ST_24 : Operation 329 [1/1] (2.10ns)   --->   "%mul_ln130_7 = mul i64 %zext_ln119, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 329 'mul' 'mul_ln130_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 330 [1/1] (0.00ns)   --->   "%zext_ln130_8 = zext i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 330 'zext' 'zext_ln130_8' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 331 '%mul_ln130_8 = mul i64 %zext_ln103, i64 %zext_ln103_1'
ST_24 : Operation 331 [1/1] (2.10ns)   --->   "%mul_ln130_8 = mul i64 %zext_ln103, i64 %zext_ln103_1" [d1.cpp:130]   --->   Operation 331 'mul' 'mul_ln130_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 332 [1/1] (0.00ns)   --->   "%zext_ln130_9 = zext i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 332 'zext' 'zext_ln130_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 333 [1/1] (0.00ns)   --->   "%trunc_ln130_2 = trunc i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 333 'trunc' 'trunc_ln130_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 334 [1/1] (0.00ns)   --->   "%trunc_ln130_4 = trunc i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 334 'trunc' 'trunc_ln130_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln130_5 = trunc i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 335 'trunc' 'trunc_ln130_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln130_6 = trunc i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 336 'trunc' 'trunc_ln130_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 337 [1/1] (0.00ns)   --->   "%trunc_ln130_7 = trunc i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 337 'trunc' 'trunc_ln130_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln130_8 = trunc i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 338 'trunc' 'trunc_ln130_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 339 [1/1] (0.00ns)   --->   "%trunc_ln130_9 = trunc i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 339 'trunc' 'trunc_ln130_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 340 [1/1] (0.00ns)   --->   "%trunc_ln130_10 = trunc i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 340 'trunc' 'trunc_ln130_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 341 [1/1] (0.00ns)   --->   "%trunc_ln130_11 = trunc i64 %mul_ln130" [d1.cpp:130]   --->   Operation 341 'trunc' 'trunc_ln130_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 342 [1/1] (1.08ns)   --->   "%add_ln130_2 = add i65 %zext_ln130_9, i65 %zext_ln130_7" [d1.cpp:130]   --->   Operation 342 'add' 'add_ln130_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 343 [1/1] (0.00ns)   --->   "%zext_ln130_12 = zext i65 %add_ln130_2" [d1.cpp:130]   --->   Operation 343 'zext' 'zext_ln130_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 344 [1/1] (1.09ns)   --->   "%add_ln130_3 = add i66 %zext_ln130_12, i66 %zext_ln130_8" [d1.cpp:130]   --->   Operation 344 'add' 'add_ln130_3' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 345 [1/1] (1.08ns)   --->   "%add_ln130_4 = add i65 %zext_ln130_5, i65 %zext_ln130_4" [d1.cpp:130]   --->   Operation 345 'add' 'add_ln130_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln130_14 = zext i65 %add_ln130_4" [d1.cpp:130]   --->   Operation 346 'zext' 'zext_ln130_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 347 [1/1] (1.09ns)   --->   "%add_ln130_5 = add i66 %zext_ln130_14, i66 %zext_ln130_6" [d1.cpp:130]   --->   Operation 347 'add' 'add_ln130_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 348 [1/1] (1.08ns)   --->   "%add_ln130_7 = add i65 %zext_ln130_2, i65 %zext_ln130_1" [d1.cpp:130]   --->   Operation 348 'add' 'add_ln130_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 349 [1/1] (0.00ns)   --->   "%zext_ln130_17 = zext i65 %add_ln130_7" [d1.cpp:130]   --->   Operation 349 'zext' 'zext_ln130_17' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 350 [1/1] (1.09ns)   --->   "%add_ln130_8 = add i66 %zext_ln130_17, i66 %zext_ln130_3" [d1.cpp:130]   --->   Operation 350 'add' 'add_ln130_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 351 [1/1] (1.08ns)   --->   "%add_ln127 = add i64 %mul_ln127_1, i64 %mul_ln127" [d1.cpp:127]   --->   Operation 351 'add' 'add_ln127' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 352 [1/1] (0.00ns)   --->   "%trunc_ln127_1 = trunc i64 %add_ln127" [d1.cpp:127]   --->   Operation 352 'trunc' 'trunc_ln127_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 353 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126 = add i64 %mul_ln126_2, i64 %mul_ln126" [d1.cpp:126]   --->   Operation 353 'add' 'add_ln126' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 354 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_1 = add i64 %add_ln126, i64 %mul_ln126_1" [d1.cpp:126]   --->   Operation 354 'add' 'add_ln126_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 355 [1/1] (0.00ns)   --->   "%trunc_ln126_1 = trunc i64 %add_ln126_1" [d1.cpp:126]   --->   Operation 355 'trunc' 'trunc_ln126_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 356 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_4 = add i28 %trunc_ln130_11, i28 %trunc_ln130_10" [d1.cpp:138]   --->   Operation 356 'add' 'add_ln138_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 357 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_5 = add i28 %add_ln138_4, i28 %trunc_ln130_9" [d1.cpp:138]   --->   Operation 357 'add' 'add_ln138_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 358 [1/1] (0.97ns)   --->   "%add_ln138_7 = add i28 %trunc_ln130_5, i28 %trunc_ln130_2" [d1.cpp:138]   --->   Operation 358 'add' 'add_ln138_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.28>
ST_25 : Operation 359 [1/1] (0.00ns)   --->   "%add138894_loc_load = load i64 %add138894_loc"   --->   Operation 359 'load' 'add138894_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 360 [1/1] (0.00ns)   --->   "%p_loc_load = load i64 %p_loc"   --->   Operation 360 'load' 'p_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 361 [1/1] (0.00ns)   --->   "%p_loc10_load = load i64 %p_loc10"   --->   Operation 361 'load' 'p_loc10_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 362 [1/1] (0.00ns)   --->   "%p_loc11_load = load i64 %p_loc11"   --->   Operation 362 'load' 'p_loc11_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 363 [1/1] (0.00ns)   --->   "%p_loc12_load = load i64 %p_loc12"   --->   Operation 363 'load' 'p_loc12_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 364 [1/1] (0.00ns)   --->   "%p_loc16_load = load i64 %p_loc16"   --->   Operation 364 'load' 'p_loc16_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 365 [1/1] (0.00ns)   --->   "%add169_6877_loc_load = load i64 %add169_6877_loc"   --->   Operation 365 'load' 'add169_6877_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 366 [1/1] (0.00ns)   --->   "%add169_5876_loc_load = load i64 %add169_5876_loc"   --->   Operation 366 'load' 'add169_5876_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 367 [1/1] (0.00ns)   --->   "%add169_4875_loc_load = load i64 %add169_4875_loc"   --->   Operation 367 'load' 'add169_4875_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 368 [1/1] (0.00ns)   --->   "%add169_3874_loc_load = load i64 %add169_3874_loc"   --->   Operation 368 'load' 'add169_3874_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 369 '%mul_ln103 = mul i64 %zext_ln103, i64 %zext_ln50_7'
ST_25 : Operation 369 [1/1] (2.10ns)   --->   "%mul_ln103 = mul i64 %zext_ln103, i64 %zext_ln50_7" [d1.cpp:103]   --->   Operation 369 'mul' 'mul_ln103' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 370 '%mul_ln106_4 = mul i64 %zext_ln50_1, i64 %zext_ln106_2'
ST_25 : Operation 370 [1/1] (2.10ns)   --->   "%mul_ln106_4 = mul i64 %zext_ln50_1, i64 %zext_ln106_2" [d1.cpp:106]   --->   Operation 370 'mul' 'mul_ln106_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 371 '%mul_ln106_7 = mul i64 %conv36, i64 %zext_ln106_3'
ST_25 : Operation 371 [1/1] (2.10ns)   --->   "%mul_ln106_7 = mul i64 %conv36, i64 %zext_ln106_3" [d1.cpp:106]   --->   Operation 371 'mul' 'mul_ln106_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 372 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106_4 = add i64 %add_ln106_3, i64 %add_ln106_1" [d1.cpp:106]   --->   Operation 372 'add' 'add_ln106_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 373 [1/1] (0.00ns)   --->   "%trunc_ln106_2 = trunc i64 %add169_6877_loc_load" [d1.cpp:106]   --->   Operation 373 'trunc' 'trunc_ln106_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 374 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106_5 = add i28 %trunc_ln106_1, i28 %trunc_ln106" [d1.cpp:106]   --->   Operation 374 'add' 'add_ln106_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 375 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_7 = add i64 %add_ln106_4, i64 %add169_6877_loc_load" [d1.cpp:106]   --->   Operation 375 'add' 'arr_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 376 '%mul_ln114 = mul i64 %zext_ln50_6, i64 %zext_ln106_1'
ST_25 : Operation 376 [1/1] (2.10ns)   --->   "%mul_ln114 = mul i64 %zext_ln50_6, i64 %zext_ln106_1" [d1.cpp:114]   --->   Operation 376 'mul' 'mul_ln114' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 377 '%mul_ln114_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_2'
ST_25 : Operation 377 [1/1] (2.10ns)   --->   "%mul_ln114_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_2" [d1.cpp:114]   --->   Operation 377 'mul' 'mul_ln114_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 378 '%mul_ln114_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_3'
ST_25 : Operation 378 [1/1] (2.10ns)   --->   "%mul_ln114_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_3" [d1.cpp:114]   --->   Operation 378 'mul' 'mul_ln114_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 379 '%mul_ln114_3 = mul i64 %zext_ln50_3, i64 %zext_ln106_4'
ST_25 : Operation 379 [1/1] (2.10ns)   --->   "%mul_ln114_3 = mul i64 %zext_ln50_3, i64 %zext_ln106_4" [d1.cpp:114]   --->   Operation 379 'mul' 'mul_ln114_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 380 '%mul_ln114_4 = mul i64 %zext_ln50_2, i64 %zext_ln106_5'
ST_25 : Operation 380 [1/1] (2.10ns)   --->   "%mul_ln114_4 = mul i64 %zext_ln50_2, i64 %zext_ln106_5" [d1.cpp:114]   --->   Operation 380 'mul' 'mul_ln114_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 381 '%mul_ln114_5 = mul i64 %zext_ln50_1, i64 %zext_ln106_6'
ST_25 : Operation 381 [1/1] (2.10ns)   --->   "%mul_ln114_5 = mul i64 %zext_ln50_1, i64 %zext_ln106_6" [d1.cpp:114]   --->   Operation 381 'mul' 'mul_ln114_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 382 '%mul_ln115 = mul i64 %zext_ln50_6, i64 %zext_ln106_2'
ST_25 : Operation 382 [1/1] (2.10ns)   --->   "%mul_ln115 = mul i64 %zext_ln50_6, i64 %zext_ln106_2" [d1.cpp:115]   --->   Operation 382 'mul' 'mul_ln115' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 383 '%mul_ln115_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_3'
ST_25 : Operation 383 [1/1] (2.10ns)   --->   "%mul_ln115_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_3" [d1.cpp:115]   --->   Operation 383 'mul' 'mul_ln115_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 384 '%mul_ln115_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_4'
ST_25 : Operation 384 [1/1] (2.10ns)   --->   "%mul_ln115_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_4" [d1.cpp:115]   --->   Operation 384 'mul' 'mul_ln115_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 385 '%mul_ln115_3 = mul i64 %zext_ln50_3, i64 %zext_ln106_5'
ST_25 : Operation 385 [1/1] (2.10ns)   --->   "%mul_ln115_3 = mul i64 %zext_ln50_3, i64 %zext_ln106_5" [d1.cpp:115]   --->   Operation 385 'mul' 'mul_ln115_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 386 '%mul_ln115_4 = mul i64 %zext_ln50_2, i64 %zext_ln106_6'
ST_25 : Operation 386 [1/1] (2.10ns)   --->   "%mul_ln115_4 = mul i64 %zext_ln50_2, i64 %zext_ln106_6" [d1.cpp:115]   --->   Operation 386 'mul' 'mul_ln115_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 387 '%mul_ln116 = mul i64 %zext_ln50_6, i64 %zext_ln106_3'
ST_25 : Operation 387 [1/1] (2.10ns)   --->   "%mul_ln116 = mul i64 %zext_ln50_6, i64 %zext_ln106_3" [d1.cpp:116]   --->   Operation 387 'mul' 'mul_ln116' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 388 '%mul_ln116_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_4'
ST_25 : Operation 388 [1/1] (2.10ns)   --->   "%mul_ln116_1 = mul i64 %zext_ln50_5, i64 %zext_ln106_4" [d1.cpp:116]   --->   Operation 388 'mul' 'mul_ln116_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 389 '%mul_ln116_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_5'
ST_25 : Operation 389 [1/1] (2.10ns)   --->   "%mul_ln116_2 = mul i64 %zext_ln50_4, i64 %zext_ln106_5" [d1.cpp:116]   --->   Operation 389 'mul' 'mul_ln116_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 390 '%mul_ln114_6 = mul i64 %zext_ln114_1, i64 %zext_ln103_1'
ST_25 : Operation 390 [1/1] (2.10ns)   --->   "%mul_ln114_6 = mul i64 %zext_ln114_1, i64 %zext_ln103_1" [d1.cpp:114]   --->   Operation 390 'mul' 'mul_ln114_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 391 '%mul_ln115_5 = mul i64 %zext_ln114_1, i64 %zext_ln114'
ST_25 : Operation 391 [1/1] (2.10ns)   --->   "%mul_ln115_5 = mul i64 %zext_ln114_1, i64 %zext_ln114" [d1.cpp:115]   --->   Operation 391 'mul' 'mul_ln115_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 392 '%mul_ln114_7 = mul i64 %zext_ln114_2, i64 %zext_ln114'
ST_25 : Operation 392 [1/1] (2.10ns)   --->   "%mul_ln114_7 = mul i64 %zext_ln114_2, i64 %zext_ln114" [d1.cpp:114]   --->   Operation 392 'mul' 'mul_ln114_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 393 '%mul_ln114_8 = mul i64 %zext_ln114_3, i64 %zext_ln106'
ST_25 : Operation 393 [1/1] (2.10ns)   --->   "%mul_ln114_8 = mul i64 %zext_ln114_3, i64 %zext_ln106" [d1.cpp:114]   --->   Operation 393 'mul' 'mul_ln114_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 394 '%mul_ln115_6 = mul i64 %zext_ln114_3, i64 %zext_ln106_1'
ST_25 : Operation 394 [1/1] (2.10ns)   --->   "%mul_ln115_6 = mul i64 %zext_ln114_3, i64 %zext_ln106_1" [d1.cpp:115]   --->   Operation 394 'mul' 'mul_ln115_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 395 '%mul_ln116_3 = mul i64 %zext_ln114_3, i64 %zext_ln106_2'
ST_25 : Operation 395 [1/1] (2.10ns)   --->   "%mul_ln116_3 = mul i64 %zext_ln114_3, i64 %zext_ln106_2" [d1.cpp:116]   --->   Operation 395 'mul' 'mul_ln116_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 396 '%mul_ln117 = mul i64 %zext_ln114_3, i64 %zext_ln106_3'
ST_25 : Operation 396 [1/1] (2.10ns)   --->   "%mul_ln117 = mul i64 %zext_ln114_3, i64 %zext_ln106_3" [d1.cpp:117]   --->   Operation 396 'mul' 'mul_ln117' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 397 '%mul_ln115_7 = mul i64 %zext_ln115, i64 %zext_ln103_1'
ST_25 : Operation 397 [1/1] (2.10ns)   --->   "%mul_ln115_7 = mul i64 %zext_ln115, i64 %zext_ln103_1" [d1.cpp:115]   --->   Operation 397 'mul' 'mul_ln115_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 398 [1/1] (0.00ns)   --->   "%tmp16_cast = zext i33 %tmp16" [d1.cpp:50]   --->   Operation 398 'zext' 'tmp16_cast' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 399 '%tmp17 = mul i64 %tmp16_cast, i64 %zext_ln106'
ST_25 : Operation 399 [1/1] (2.64ns)   --->   "%tmp17 = mul i64 %tmp16_cast, i64 %zext_ln106" [d1.cpp:50]   --->   Operation 399 'mul' 'tmp17' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 400 '%mul_ln116_4 = mul i64 %zext_ln115, i64 %zext_ln114'
ST_25 : Operation 400 [1/1] (2.10ns)   --->   "%mul_ln116_4 = mul i64 %zext_ln115, i64 %zext_ln114" [d1.cpp:116]   --->   Operation 400 'mul' 'mul_ln116_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 401 '%mul_ln116_5 = mul i64 %zext_ln116, i64 %zext_ln103_1'
ST_25 : Operation 401 [1/1] (2.10ns)   --->   "%mul_ln116_5 = mul i64 %zext_ln116, i64 %zext_ln103_1" [d1.cpp:116]   --->   Operation 401 'mul' 'mul_ln116_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 402 [1/1] (0.00ns)   --->   "%tmp18_cast = zext i33 %tmp18" [d1.cpp:50]   --->   Operation 402 'zext' 'tmp18_cast' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 403 '%tmp19 = mul i64 %tmp18_cast, i64 %zext_ln106'
ST_25 : Operation 403 [1/1] (2.64ns)   --->   "%tmp19 = mul i64 %tmp18_cast, i64 %zext_ln106" [d1.cpp:50]   --->   Operation 403 'mul' 'tmp19' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 404 '%tmp21 = mul i64 %tmp16_cast, i64 %zext_ln106_1'
ST_25 : Operation 404 [1/1] (2.64ns)   --->   "%tmp21 = mul i64 %tmp16_cast, i64 %zext_ln106_1" [d1.cpp:50]   --->   Operation 404 'mul' 'tmp21' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 405 [1/1] (1.08ns)   --->   "%add_ln116 = add i64 %mul_ln116_2, i64 %tmp19" [d1.cpp:116]   --->   Operation 405 'add' 'add_ln116' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 406 [1/1] (1.08ns)   --->   "%add_ln116_1 = add i64 %mul_ln116_1, i64 %mul_ln116" [d1.cpp:116]   --->   Operation 406 'add' 'add_ln116_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln116 = trunc i64 %add_ln116" [d1.cpp:116]   --->   Operation 407 'trunc' 'trunc_ln116' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 408 [1/1] (0.00ns)   --->   "%trunc_ln116_1 = trunc i64 %add_ln116_1" [d1.cpp:116]   --->   Operation 408 'trunc' 'trunc_ln116_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 409 [1/1] (1.08ns)   --->   "%add_ln116_2 = add i64 %add_ln116_1, i64 %add_ln116" [d1.cpp:116]   --->   Operation 409 'add' 'add_ln116_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 410 [1/1] (1.08ns)   --->   "%add_ln116_3 = add i64 %mul_ln116_4, i64 %mul_ln116_3" [d1.cpp:116]   --->   Operation 410 'add' 'add_ln116_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 411 [1/1] (1.08ns)   --->   "%add_ln116_4 = add i64 %mul_ln116_5, i64 %tmp21" [d1.cpp:116]   --->   Operation 411 'add' 'add_ln116_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 412 [1/1] (0.00ns)   --->   "%trunc_ln116_2 = trunc i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 412 'trunc' 'trunc_ln116_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 413 [1/1] (0.00ns)   --->   "%trunc_ln116_3 = trunc i64 %add_ln116_4" [d1.cpp:116]   --->   Operation 413 'trunc' 'trunc_ln116_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 414 [1/1] (1.08ns)   --->   "%add_ln116_5 = add i64 %add_ln116_4, i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 414 'add' 'add_ln116_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 415 [1/1] (0.97ns)   --->   "%add_ln116_8 = add i28 %trunc_ln116_3, i28 %trunc_ln116_2" [d1.cpp:116]   --->   Operation 415 'add' 'add_ln116_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 416 '%mul_ln117_1 = mul i64 %zext_ln116, i64 %zext_ln114'
ST_25 : Operation 416 [1/1] (2.10ns)   --->   "%mul_ln117_1 = mul i64 %zext_ln116, i64 %zext_ln114" [d1.cpp:117]   --->   Operation 416 'mul' 'mul_ln117_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 417 '%mul_ln117_2 = mul i64 %zext_ln117, i64 %zext_ln103_1'
ST_25 : Operation 417 [1/1] (2.10ns)   --->   "%mul_ln117_2 = mul i64 %zext_ln117, i64 %zext_ln103_1" [d1.cpp:117]   --->   Operation 417 'mul' 'mul_ln117_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 418 [1/1] (0.00ns)   --->   "%tmp22_cast = zext i33 %tmp22" [d1.cpp:50]   --->   Operation 418 'zext' 'tmp22_cast' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 419 '%tmp23 = mul i64 %tmp22_cast, i64 %zext_ln106'
ST_25 : Operation 419 [1/1] (2.64ns)   --->   "%tmp23 = mul i64 %tmp22_cast, i64 %zext_ln106" [d1.cpp:50]   --->   Operation 419 'mul' 'tmp23' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 420 '%tmp25 = mul i64 %tmp18_cast, i64 %zext_ln106_1'
ST_25 : Operation 420 [1/1] (2.64ns)   --->   "%tmp25 = mul i64 %tmp18_cast, i64 %zext_ln106_1" [d1.cpp:50]   --->   Operation 420 'mul' 'tmp25' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 421 '%tmp27 = mul i64 %tmp16_cast, i64 %zext_ln106_2'
ST_25 : Operation 421 [1/1] (2.64ns)   --->   "%tmp27 = mul i64 %tmp16_cast, i64 %zext_ln106_2" [d1.cpp:50]   --->   Operation 421 'mul' 'tmp27' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 422 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117 = add i64 %tmp25, i64 %mul_ln117" [d1.cpp:117]   --->   Operation 422 'add' 'add_ln117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 423 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_1 = add i64 %add_ln117, i64 %tmp23" [d1.cpp:117]   --->   Operation 423 'add' 'add_ln117_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 424 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_2 = add i64 %mul_ln117_1, i64 %tmp27" [d1.cpp:117]   --->   Operation 424 'add' 'add_ln117_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 425 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_3 = add i64 %add_ln117_2, i64 %mul_ln117_2" [d1.cpp:117]   --->   Operation 425 'add' 'add_ln117_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 426 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 426 'trunc' 'trunc_ln117' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 427 [1/1] (0.00ns)   --->   "%trunc_ln117_1 = trunc i64 %add_ln117_3" [d1.cpp:117]   --->   Operation 427 'trunc' 'trunc_ln117_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 428 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_4 = add i64 %add_ln117_3, i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 428 'add' 'add_ln117_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 429 [1/1] (0.00ns)   --->   "%trunc_ln117_2 = trunc i64 %add169_3874_loc_load" [d1.cpp:117]   --->   Operation 429 'trunc' 'trunc_ln117_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 430 [1/1] (0.97ns)   --->   "%add_ln117_5 = add i28 %trunc_ln117_1, i28 %trunc_ln117" [d1.cpp:117]   --->   Operation 430 'add' 'add_ln117_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 431 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_9 = add i64 %add_ln117_4, i64 %add169_3874_loc_load" [d1.cpp:117]   --->   Operation 431 'add' 'arr_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 432 '%mul_ln118 = mul i64 %zext_ln117, i64 %zext_ln114'
ST_25 : Operation 432 [1/1] (2.10ns)   --->   "%mul_ln118 = mul i64 %zext_ln117, i64 %zext_ln114" [d1.cpp:118]   --->   Operation 432 'mul' 'mul_ln118' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 433 '%mul_ln118_1 = mul i64 %zext_ln118, i64 %zext_ln103_1'
ST_25 : Operation 433 [1/1] (2.10ns)   --->   "%mul_ln118_1 = mul i64 %zext_ln118, i64 %zext_ln103_1" [d1.cpp:118]   --->   Operation 433 'mul' 'mul_ln118_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 434 [1/1] (0.00ns)   --->   "%tmp28_cast = zext i33 %tmp28" [d1.cpp:50]   --->   Operation 434 'zext' 'tmp28_cast' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 435 '%tmp29 = mul i64 %tmp28_cast, i64 %zext_ln106'
ST_25 : Operation 435 [1/1] (2.64ns)   --->   "%tmp29 = mul i64 %tmp28_cast, i64 %zext_ln106" [d1.cpp:50]   --->   Operation 435 'mul' 'tmp29' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (0.77ns)   --->   Input mux for Operation 436 '%tmp31 = mul i64 %tmp22_cast, i64 %zext_ln106_1'
ST_25 : Operation 436 [1/1] (2.64ns)   --->   "%tmp31 = mul i64 %tmp22_cast, i64 %zext_ln106_1" [d1.cpp:50]   --->   Operation 436 'mul' 'tmp31' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 437 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118 = add i64 %mul_ln106_4, i64 %tmp29" [d1.cpp:118]   --->   Operation 437 'add' 'add_ln118' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 438 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln118_1 = add i64 %add_ln118, i64 %tmp31" [d1.cpp:118]   --->   Operation 438 'add' 'add_ln118_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 439 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_3 = add i64 %mul_ln118, i64 %mul_ln106_7" [d1.cpp:118]   --->   Operation 439 'add' 'add_ln118_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 440 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln118_4 = add i64 %add_ln118_3, i64 %mul_ln118_1" [d1.cpp:118]   --->   Operation 440 'add' 'add_ln118_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 441 [1/1] (0.00ns)   --->   "%trunc_ln118 = trunc i64 %add_ln118_1" [d1.cpp:118]   --->   Operation 441 'trunc' 'trunc_ln118' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 442 [1/1] (0.00ns)   --->   "%trunc_ln118_1 = trunc i64 %add_ln118_4" [d1.cpp:118]   --->   Operation 442 'trunc' 'trunc_ln118_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 443 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_2 = add i64 %add_ln118_4, i64 %add_ln118_1" [d1.cpp:118]   --->   Operation 443 'add' 'add_ln118_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 444 [1/1] (0.00ns)   --->   "%trunc_ln118_2 = trunc i64 %add169_4875_loc_load" [d1.cpp:118]   --->   Operation 444 'trunc' 'trunc_ln118_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 445 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_10 = add i64 %add_ln118_2, i64 %add169_4875_loc_load" [d1.cpp:118]   --->   Operation 445 'add' 'arr_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 446 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln119 = add i64 %add_ln119_5, i64 %add_ln119_2" [d1.cpp:119]   --->   Operation 446 'add' 'add_ln119' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 447 [1/1] (0.00ns)   --->   "%trunc_ln119_3 = trunc i64 %add169_5876_loc_load" [d1.cpp:119]   --->   Operation 447 'trunc' 'trunc_ln119_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 448 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_11 = add i64 %add_ln119, i64 %add169_5876_loc_load" [d1.cpp:119]   --->   Operation 448 'add' 'arr_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 449 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_6 = add i64 %add_ln120_5, i64 %add_ln120_2" [d1.cpp:120]   --->   Operation 449 'add' 'add_ln120_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 450 [1/1] (0.00ns)   --->   "%trunc_ln120_4 = trunc i64 %add138894_loc_load" [d1.cpp:120]   --->   Operation 450 'trunc' 'trunc_ln120_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 451 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_9 = add i28 %add_ln120_8, i28 %add_ln120_7" [d1.cpp:120]   --->   Operation 451 'add' 'add_ln120_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 452 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_12 = add i64 %add_ln120_6, i64 %add138894_loc_load" [d1.cpp:120]   --->   Operation 452 'add' 'arr_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 453 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_6 = add i64 %add_ln121_5, i64 %add_ln121_2" [d1.cpp:121]   --->   Operation 453 'add' 'add_ln121_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 454 [1/1] (0.00ns)   --->   "%trunc_ln121_4 = trunc i64 %p_loc16_load" [d1.cpp:121]   --->   Operation 454 'trunc' 'trunc_ln121_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 455 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_9 = add i28 %add_ln121_8, i28 %add_ln121_7" [d1.cpp:121]   --->   Operation 455 'add' 'add_ln121_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 456 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_13 = add i64 %add_ln121_6, i64 %p_loc16_load" [d1.cpp:121]   --->   Operation 456 'add' 'arr_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 457 '%mul_ln122 = mul i64 %zext_ln114_1, i64 %zext_ln106_6'
ST_25 : Operation 457 [1/1] (2.10ns)   --->   "%mul_ln122 = mul i64 %zext_ln114_1, i64 %zext_ln106_6" [d1.cpp:122]   --->   Operation 457 'mul' 'mul_ln122' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 458 '%mul_ln122_1 = mul i64 %zext_ln115, i64 %zext_ln106_5'
ST_25 : Operation 458 [1/1] (2.10ns)   --->   "%mul_ln122_1 = mul i64 %zext_ln115, i64 %zext_ln106_5" [d1.cpp:122]   --->   Operation 458 'mul' 'mul_ln122_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 459 '%mul_ln122_2 = mul i64 %zext_ln116, i64 %zext_ln106_4'
ST_25 : Operation 459 [1/1] (2.10ns)   --->   "%mul_ln122_2 = mul i64 %zext_ln116, i64 %zext_ln106_4" [d1.cpp:122]   --->   Operation 459 'mul' 'mul_ln122_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 460 '%mul_ln122_3 = mul i64 %zext_ln117, i64 %zext_ln106_3'
ST_25 : Operation 460 [1/1] (2.10ns)   --->   "%mul_ln122_3 = mul i64 %zext_ln117, i64 %zext_ln106_3" [d1.cpp:122]   --->   Operation 460 'mul' 'mul_ln122_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 461 '%mul_ln122_4 = mul i64 %zext_ln118, i64 %zext_ln106_2'
ST_25 : Operation 461 [1/1] (2.10ns)   --->   "%mul_ln122_4 = mul i64 %zext_ln118, i64 %zext_ln106_2" [d1.cpp:122]   --->   Operation 461 'mul' 'mul_ln122_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 462 '%mul_ln122_5 = mul i64 %zext_ln119, i64 %zext_ln106_1'
ST_25 : Operation 462 [1/1] (2.10ns)   --->   "%mul_ln122_5 = mul i64 %zext_ln119, i64 %zext_ln106_1" [d1.cpp:122]   --->   Operation 462 'mul' 'mul_ln122_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 463 '%mul_ln122_6 = mul i64 %zext_ln103, i64 %zext_ln106'
ST_25 : Operation 463 [1/1] (2.10ns)   --->   "%mul_ln122_6 = mul i64 %zext_ln103, i64 %zext_ln106" [d1.cpp:122]   --->   Operation 463 'mul' 'mul_ln122_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 464 '%mul_ln123 = mul i64 %zext_ln115, i64 %zext_ln106_6'
ST_25 : Operation 464 [1/1] (2.10ns)   --->   "%mul_ln123 = mul i64 %zext_ln115, i64 %zext_ln106_6" [d1.cpp:123]   --->   Operation 464 'mul' 'mul_ln123' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 465 '%mul_ln123_1 = mul i64 %zext_ln116, i64 %zext_ln106_5'
ST_25 : Operation 465 [1/1] (2.10ns)   --->   "%mul_ln123_1 = mul i64 %zext_ln116, i64 %zext_ln106_5" [d1.cpp:123]   --->   Operation 465 'mul' 'mul_ln123_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 466 '%mul_ln123_2 = mul i64 %zext_ln117, i64 %zext_ln106_4'
ST_25 : Operation 466 [1/1] (2.10ns)   --->   "%mul_ln123_2 = mul i64 %zext_ln117, i64 %zext_ln106_4" [d1.cpp:123]   --->   Operation 466 'mul' 'mul_ln123_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 467 '%mul_ln123_3 = mul i64 %zext_ln118, i64 %zext_ln106_3'
ST_25 : Operation 467 [1/1] (2.10ns)   --->   "%mul_ln123_3 = mul i64 %zext_ln118, i64 %zext_ln106_3" [d1.cpp:123]   --->   Operation 467 'mul' 'mul_ln123_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 468 '%mul_ln123_4 = mul i64 %zext_ln119, i64 %zext_ln106_2'
ST_25 : Operation 468 [1/1] (2.10ns)   --->   "%mul_ln123_4 = mul i64 %zext_ln119, i64 %zext_ln106_2" [d1.cpp:123]   --->   Operation 468 'mul' 'mul_ln123_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 469 '%mul_ln123_5 = mul i64 %zext_ln103, i64 %zext_ln106_1'
ST_25 : Operation 469 [1/1] (2.10ns)   --->   "%mul_ln123_5 = mul i64 %zext_ln103, i64 %zext_ln106_1" [d1.cpp:123]   --->   Operation 469 'mul' 'mul_ln123_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 470 '%mul_ln124 = mul i64 %zext_ln116, i64 %zext_ln106_6'
ST_25 : Operation 470 [1/1] (2.10ns)   --->   "%mul_ln124 = mul i64 %zext_ln116, i64 %zext_ln106_6" [d1.cpp:124]   --->   Operation 470 'mul' 'mul_ln124' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 471 '%mul_ln124_1 = mul i64 %zext_ln117, i64 %zext_ln106_5'
ST_25 : Operation 471 [1/1] (2.10ns)   --->   "%mul_ln124_1 = mul i64 %zext_ln117, i64 %zext_ln106_5" [d1.cpp:124]   --->   Operation 471 'mul' 'mul_ln124_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 472 '%mul_ln124_2 = mul i64 %zext_ln118, i64 %zext_ln106_4'
ST_25 : Operation 472 [1/1] (2.10ns)   --->   "%mul_ln124_2 = mul i64 %zext_ln118, i64 %zext_ln106_4" [d1.cpp:124]   --->   Operation 472 'mul' 'mul_ln124_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 473 '%mul_ln124_3 = mul i64 %zext_ln119, i64 %zext_ln106_3'
ST_25 : Operation 473 [1/1] (2.10ns)   --->   "%mul_ln124_3 = mul i64 %zext_ln119, i64 %zext_ln106_3" [d1.cpp:124]   --->   Operation 473 'mul' 'mul_ln124_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 474 '%mul_ln124_4 = mul i64 %zext_ln103, i64 %zext_ln106_2'
ST_25 : Operation 474 [1/1] (2.10ns)   --->   "%mul_ln124_4 = mul i64 %zext_ln103, i64 %zext_ln106_2" [d1.cpp:124]   --->   Operation 474 'mul' 'mul_ln124_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 475 '%mul_ln125 = mul i64 %zext_ln117, i64 %zext_ln106_6'
ST_25 : Operation 475 [1/1] (2.10ns)   --->   "%mul_ln125 = mul i64 %zext_ln117, i64 %zext_ln106_6" [d1.cpp:125]   --->   Operation 475 'mul' 'mul_ln125' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 476 '%mul_ln125_1 = mul i64 %zext_ln118, i64 %zext_ln106_5'
ST_25 : Operation 476 [1/1] (2.10ns)   --->   "%mul_ln125_1 = mul i64 %zext_ln118, i64 %zext_ln106_5" [d1.cpp:125]   --->   Operation 476 'mul' 'mul_ln125_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 477 '%mul_ln125_2 = mul i64 %zext_ln103, i64 %zext_ln106_3'
ST_25 : Operation 477 [1/1] (2.10ns)   --->   "%mul_ln125_2 = mul i64 %zext_ln103, i64 %zext_ln106_3" [d1.cpp:125]   --->   Operation 477 'mul' 'mul_ln125_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 478 '%mul_ln125_3 = mul i64 %zext_ln119, i64 %zext_ln106_4'
ST_25 : Operation 478 [1/1] (2.10ns)   --->   "%mul_ln125_3 = mul i64 %zext_ln119, i64 %zext_ln106_4" [d1.cpp:125]   --->   Operation 478 'mul' 'mul_ln125_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 479 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_12, i32 28, i32 63" [d1.cpp:130]   --->   Operation 479 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 480 [1/1] (0.00ns)   --->   "%zext_ln130_64 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 480 'zext' 'zext_ln130_64' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 481 [1/1] (1.08ns)   --->   "%arr_15 = add i64 %p_loc_load, i64 %mul_ln128" [d1.cpp:128]   --->   Operation 481 'add' 'arr_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 482 [1/1] (0.00ns)   --->   "%trunc_ln130_1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_12, i32 28, i32 55" [d1.cpp:130]   --->   Operation 482 'partselect' 'trunc_ln130_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 483 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i64 %arr_15" [d1.cpp:130]   --->   Operation 483 'trunc' 'trunc_ln130' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 484 [1/1] (1.08ns)   --->   "%add_ln130 = add i64 %arr_15, i64 %zext_ln130_64" [d1.cpp:130]   --->   Operation 484 'add' 'add_ln130' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 485 [1/1] (0.97ns)   --->   "%add_ln130_1 = add i28 %trunc_ln130, i28 %trunc_ln130_1" [d1.cpp:130]   --->   Operation 485 'add' 'add_ln130_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 486 [1/1] (0.00ns)   --->   "%trunc_ln130_3 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_13, i32 28, i32 63" [d1.cpp:130]   --->   Operation 486 'partselect' 'trunc_ln130_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 487 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i36 %trunc_ln130_3" [d1.cpp:130]   --->   Operation 487 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 488 [1/1] (0.00ns)   --->   "%zext_ln130_10 = zext i64 %arr_7" [d1.cpp:130]   --->   Operation 488 'zext' 'zext_ln130_10' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 489 [1/1] (0.00ns)   --->   "%zext_ln130_11 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 489 'zext' 'zext_ln130_11' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 490 [1/1] (0.00ns)   --->   "%trunc_ln130_s = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_13, i32 28, i32 55" [d1.cpp:130]   --->   Operation 490 'partselect' 'trunc_ln130_s' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 491 [1/1] (0.00ns)   --->   "%zext_ln130_13 = zext i66 %add_ln130_3" [d1.cpp:130]   --->   Operation 491 'zext' 'zext_ln130_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 492 [1/1] (0.00ns)   --->   "%zext_ln130_15 = zext i66 %add_ln130_5" [d1.cpp:130]   --->   Operation 492 'zext' 'zext_ln130_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 493 [1/1] (1.10ns)   --->   "%add_ln130_41 = add i66 %add_ln130_5, i66 %add_ln130_3" [d1.cpp:130]   --->   Operation 493 'add' 'add_ln130_41' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 494 [1/1] (1.10ns)   --->   "%add_ln130_6 = add i67 %zext_ln130_15, i67 %zext_ln130_13" [d1.cpp:130]   --->   Operation 494 'add' 'add_ln130_6' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 495 [1/1] (0.00ns)   --->   "%trunc_ln130_12 = trunc i66 %add_ln130_41" [d1.cpp:130]   --->   Operation 495 'trunc' 'trunc_ln130_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 496 [1/1] (0.00ns)   --->   "%zext_ln130_16 = zext i67 %add_ln130_6" [d1.cpp:130]   --->   Operation 496 'zext' 'zext_ln130_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 497 [1/1] (0.00ns)   --->   "%zext_ln130_18 = zext i66 %add_ln130_8" [d1.cpp:130]   --->   Operation 497 'zext' 'zext_ln130_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 498 [1/1] (1.02ns)   --->   "%add_ln130_9 = add i37 %zext_ln130, i37 %zext_ln130_11" [d1.cpp:130]   --->   Operation 498 'add' 'add_ln130_9' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 499 [1/1] (0.00ns)   --->   "%zext_ln130_19 = zext i37 %add_ln130_9" [d1.cpp:130]   --->   Operation 499 'zext' 'zext_ln130_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 500 [1/1] (1.08ns)   --->   "%add_ln130_10 = add i65 %zext_ln130_19, i65 %zext_ln130_10" [d1.cpp:130]   --->   Operation 500 'add' 'add_ln130_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 501 [1/1] (0.00ns)   --->   "%zext_ln130_20 = zext i65 %add_ln130_10" [d1.cpp:130]   --->   Operation 501 'zext' 'zext_ln130_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 502 [1/1] (1.10ns)   --->   "%add_ln130_12 = add i67 %zext_ln130_20, i67 %zext_ln130_18" [d1.cpp:130]   --->   Operation 502 'add' 'add_ln130_12' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 503 [1/1] (0.00ns)   --->   "%trunc_ln130_14 = trunc i67 %add_ln130_12" [d1.cpp:130]   --->   Operation 503 'trunc' 'trunc_ln130_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 504 [1/1] (0.00ns)   --->   "%zext_ln130_21 = zext i67 %add_ln130_12" [d1.cpp:130]   --->   Operation 504 'zext' 'zext_ln130_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 505 [1/1] (1.09ns)   --->   "%add_ln130_35 = add i56 %trunc_ln130_14, i56 %trunc_ln130_12" [d1.cpp:130]   --->   Operation 505 'add' 'add_ln130_35' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 506 [1/1] (1.10ns)   --->   "%add_ln130_11 = add i68 %zext_ln130_21, i68 %zext_ln130_16" [d1.cpp:130]   --->   Operation 506 'add' 'add_ln130_11' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 507 [1/1] (0.00ns)   --->   "%trunc_ln130_13 = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_11, i32 28, i32 67" [d1.cpp:130]   --->   Operation 507 'partselect' 'trunc_ln130_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 508 [1/1] (0.00ns)   --->   "%zext_ln130_22 = zext i40 %trunc_ln130_13" [d1.cpp:130]   --->   Operation 508 'zext' 'zext_ln130_22' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 509 '%mul_ln130_9 = mul i64 %zext_ln50_6, i64 %zext_ln106_6'
ST_25 : Operation 509 [1/1] (2.10ns)   --->   "%mul_ln130_9 = mul i64 %zext_ln50_6, i64 %zext_ln106_6" [d1.cpp:130]   --->   Operation 509 'mul' 'mul_ln130_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 510 '%mul_ln130_10 = mul i64 %zext_ln114_3, i64 %zext_ln106_5'
ST_25 : Operation 510 [1/1] (2.10ns)   --->   "%mul_ln130_10 = mul i64 %zext_ln114_3, i64 %zext_ln106_5" [d1.cpp:130]   --->   Operation 510 'mul' 'mul_ln130_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 511 [1/1] (0.00ns)   --->   "%zext_ln130_24 = zext i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 511 'zext' 'zext_ln130_24' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 512 '%mul_ln130_11 = mul i64 %zext_ln114_2, i64 %zext_ln106_4'
ST_25 : Operation 512 [1/1] (2.10ns)   --->   "%mul_ln130_11 = mul i64 %zext_ln114_2, i64 %zext_ln106_4" [d1.cpp:130]   --->   Operation 512 'mul' 'mul_ln130_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 513 [1/1] (0.00ns)   --->   "%zext_ln130_25 = zext i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 513 'zext' 'zext_ln130_25' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 514 '%mul_ln130_12 = mul i64 %zext_ln114_1, i64 %zext_ln106_3'
ST_25 : Operation 514 [1/1] (2.10ns)   --->   "%mul_ln130_12 = mul i64 %zext_ln114_1, i64 %zext_ln106_3" [d1.cpp:130]   --->   Operation 514 'mul' 'mul_ln130_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln130_26 = zext i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 515 'zext' 'zext_ln130_26' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 516 '%mul_ln130_13 = mul i64 %zext_ln115, i64 %zext_ln106_2'
ST_25 : Operation 516 [1/1] (2.10ns)   --->   "%mul_ln130_13 = mul i64 %zext_ln115, i64 %zext_ln106_2" [d1.cpp:130]   --->   Operation 516 'mul' 'mul_ln130_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 517 [1/1] (0.00ns)   --->   "%zext_ln130_27 = zext i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 517 'zext' 'zext_ln130_27' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 518 '%mul_ln130_14 = mul i64 %zext_ln116, i64 %zext_ln106_1'
ST_25 : Operation 518 [1/1] (2.10ns)   --->   "%mul_ln130_14 = mul i64 %zext_ln116, i64 %zext_ln106_1" [d1.cpp:130]   --->   Operation 518 'mul' 'mul_ln130_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 519 [1/1] (0.00ns)   --->   "%zext_ln130_28 = zext i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 519 'zext' 'zext_ln130_28' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 520 '%mul_ln130_15 = mul i64 %zext_ln117, i64 %zext_ln106'
ST_25 : Operation 520 [1/1] (2.10ns)   --->   "%mul_ln130_15 = mul i64 %zext_ln117, i64 %zext_ln106" [d1.cpp:130]   --->   Operation 520 'mul' 'mul_ln130_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 521 [1/1] (0.00ns)   --->   "%zext_ln130_29 = zext i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 521 'zext' 'zext_ln130_29' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 522 [1/1] (0.00ns)   --->   "%zext_ln130_30 = zext i64 %arr_11" [d1.cpp:130]   --->   Operation 522 'zext' 'zext_ln130_30' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 523 [1/1] (0.00ns)   --->   "%trunc_ln130_15 = trunc i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 523 'trunc' 'trunc_ln130_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 524 [1/1] (0.00ns)   --->   "%trunc_ln130_16 = trunc i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 524 'trunc' 'trunc_ln130_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 525 [1/1] (0.00ns)   --->   "%trunc_ln130_17 = trunc i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 525 'trunc' 'trunc_ln130_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 526 [1/1] (0.00ns)   --->   "%trunc_ln130_18 = trunc i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 526 'trunc' 'trunc_ln130_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 527 [1/1] (0.00ns)   --->   "%trunc_ln130_19 = trunc i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 527 'trunc' 'trunc_ln130_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 528 [1/1] (0.00ns)   --->   "%trunc_ln130_20 = trunc i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 528 'trunc' 'trunc_ln130_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 529 [1/1] (0.00ns)   --->   "%trunc_ln130_23 = trunc i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 529 'trunc' 'trunc_ln130_23' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 530 [1/1] (0.00ns)   --->   "%trunc_ln130_21 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_35, i32 28, i32 55" [d1.cpp:130]   --->   Operation 530 'partselect' 'trunc_ln130_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 531 [1/1] (1.08ns)   --->   "%add_ln130_13 = add i65 %zext_ln130_28, i65 %zext_ln130_29" [d1.cpp:130]   --->   Operation 531 'add' 'add_ln130_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 532 [1/1] (0.00ns)   --->   "%zext_ln130_31 = zext i65 %add_ln130_13" [d1.cpp:130]   --->   Operation 532 'zext' 'zext_ln130_31' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 533 [1/1] (1.08ns)   --->   "%add_ln130_14 = add i65 %zext_ln130_27, i65 %zext_ln130_26" [d1.cpp:130]   --->   Operation 533 'add' 'add_ln130_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 534 [1/1] (0.00ns)   --->   "%zext_ln130_32 = zext i65 %add_ln130_14" [d1.cpp:130]   --->   Operation 534 'zext' 'zext_ln130_32' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 535 [1/1] (1.09ns)   --->   "%add_ln130_15 = add i66 %zext_ln130_32, i66 %zext_ln130_31" [d1.cpp:130]   --->   Operation 535 'add' 'add_ln130_15' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 536 [1/1] (1.08ns)   --->   "%add_ln130_16 = add i65 %zext_ln130_25, i65 %zext_ln130_24" [d1.cpp:130]   --->   Operation 536 'add' 'add_ln130_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 537 [1/1] (1.08ns)   --->   "%add_ln130_17 = add i65 %zext_ln130_30, i65 %zext_ln130_22" [d1.cpp:130]   --->   Operation 537 'add' 'add_ln130_17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 538 '%mul_ln130_16 = mul i64 %zext_ln50_5, i64 %zext_ln106_6'
ST_25 : Operation 538 [1/1] (2.10ns)   --->   "%mul_ln130_16 = mul i64 %zext_ln50_5, i64 %zext_ln106_6" [d1.cpp:130]   --->   Operation 538 'mul' 'mul_ln130_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 539 [1/1] (0.00ns)   --->   "%zext_ln130_39 = zext i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 539 'zext' 'zext_ln130_39' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 540 '%mul_ln130_17 = mul i64 %zext_ln50_6, i64 %zext_ln106_5'
ST_25 : Operation 540 [1/1] (2.10ns)   --->   "%mul_ln130_17 = mul i64 %zext_ln50_6, i64 %zext_ln106_5" [d1.cpp:130]   --->   Operation 540 'mul' 'mul_ln130_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 541 [1/1] (0.00ns)   --->   "%zext_ln130_40 = zext i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 541 'zext' 'zext_ln130_40' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 542 '%mul_ln130_18 = mul i64 %zext_ln114_3, i64 %zext_ln106_4'
ST_25 : Operation 542 [1/1] (2.10ns)   --->   "%mul_ln130_18 = mul i64 %zext_ln114_3, i64 %zext_ln106_4" [d1.cpp:130]   --->   Operation 542 'mul' 'mul_ln130_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 543 [1/1] (0.00ns)   --->   "%zext_ln130_41 = zext i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 543 'zext' 'zext_ln130_41' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 544 '%mul_ln130_19 = mul i64 %zext_ln114_2, i64 %zext_ln106_3'
ST_25 : Operation 544 [1/1] (2.10ns)   --->   "%mul_ln130_19 = mul i64 %zext_ln114_2, i64 %zext_ln106_3" [d1.cpp:130]   --->   Operation 544 'mul' 'mul_ln130_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 545 [1/1] (0.00ns)   --->   "%zext_ln130_42 = zext i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 545 'zext' 'zext_ln130_42' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 546 '%mul_ln130_20 = mul i64 %zext_ln114_1, i64 %zext_ln106_2'
ST_25 : Operation 546 [1/1] (2.10ns)   --->   "%mul_ln130_20 = mul i64 %zext_ln114_1, i64 %zext_ln106_2" [d1.cpp:130]   --->   Operation 546 'mul' 'mul_ln130_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 547 [1/1] (0.00ns)   --->   "%zext_ln130_43 = zext i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 547 'zext' 'zext_ln130_43' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 548 [1/1] (0.00ns)   --->   "%trunc_ln130_24 = trunc i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 548 'trunc' 'trunc_ln130_24' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 549 [1/1] (0.00ns)   --->   "%trunc_ln130_25 = trunc i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 549 'trunc' 'trunc_ln130_25' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 550 [1/1] (0.00ns)   --->   "%trunc_ln130_26 = trunc i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 550 'trunc' 'trunc_ln130_26' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 551 [1/1] (0.00ns)   --->   "%trunc_ln130_27 = trunc i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 551 'trunc' 'trunc_ln130_27' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 552 [1/1] (0.00ns)   --->   "%trunc_ln130_30 = trunc i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 552 'trunc' 'trunc_ln130_30' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 553 [1/1] (1.08ns)   --->   "%add_ln130_21 = add i65 %zext_ln130_43, i65 %zext_ln130_41" [d1.cpp:130]   --->   Operation 553 'add' 'add_ln130_21' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 554 [1/1] (0.00ns)   --->   "%zext_ln130_45 = zext i65 %add_ln130_21" [d1.cpp:130]   --->   Operation 554 'zext' 'zext_ln130_45' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 555 [1/1] (1.09ns)   --->   "%add_ln130_22 = add i66 %zext_ln130_45, i66 %zext_ln130_42" [d1.cpp:130]   --->   Operation 555 'add' 'add_ln130_22' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 556 [1/1] (0.00ns)   --->   "%trunc_ln130_31 = trunc i66 %add_ln130_22" [d1.cpp:130]   --->   Operation 556 'trunc' 'trunc_ln130_31' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 557 [1/1] (1.08ns)   --->   "%add_ln130_23 = add i65 %zext_ln130_40, i65 %zext_ln130_39" [d1.cpp:130]   --->   Operation 557 'add' 'add_ln130_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 558 '%mul_ln130_21 = mul i64 %zext_ln50_4, i64 %zext_ln106_6'
ST_25 : Operation 558 [1/1] (2.10ns)   --->   "%mul_ln130_21 = mul i64 %zext_ln50_4, i64 %zext_ln106_6" [d1.cpp:130]   --->   Operation 558 'mul' 'mul_ln130_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 559 '%mul_ln130_22 = mul i64 %zext_ln50_5, i64 %zext_ln106_5'
ST_25 : Operation 559 [1/1] (2.10ns)   --->   "%mul_ln130_22 = mul i64 %zext_ln50_5, i64 %zext_ln106_5" [d1.cpp:130]   --->   Operation 559 'mul' 'mul_ln130_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 560 [1/1] (0.00ns)   --->   "%zext_ln130_52 = zext i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 560 'zext' 'zext_ln130_52' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 561 '%mul_ln130_23 = mul i64 %zext_ln50_6, i64 %zext_ln106_4'
ST_25 : Operation 561 [1/1] (2.10ns)   --->   "%mul_ln130_23 = mul i64 %zext_ln50_6, i64 %zext_ln106_4" [d1.cpp:130]   --->   Operation 561 'mul' 'mul_ln130_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 562 [1/1] (0.00ns)   --->   "%zext_ln130_53 = zext i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 562 'zext' 'zext_ln130_53' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 563 [1/1] (0.00ns)   --->   "%trunc_ln130_35 = trunc i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 563 'trunc' 'trunc_ln130_35' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 564 [1/1] (0.00ns)   --->   "%trunc_ln130_40 = trunc i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 564 'trunc' 'trunc_ln130_40' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 565 [1/1] (0.00ns)   --->   "%trunc_ln130_41 = trunc i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 565 'trunc' 'trunc_ln130_41' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 566 [1/1] (1.08ns)   --->   "%add_ln130_27 = add i65 %zext_ln130_52, i65 %zext_ln130_53" [d1.cpp:130]   --->   Operation 566 'add' 'add_ln130_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 567 '%mul_ln130_24 = mul i64 %zext_ln50_3, i64 %zext_ln106_6'
ST_25 : Operation 567 [1/1] (2.10ns)   --->   "%mul_ln130_24 = mul i64 %zext_ln50_3, i64 %zext_ln106_6" [d1.cpp:130]   --->   Operation 567 'mul' 'mul_ln130_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 568 [1/1] (0.00ns)   --->   "%trunc_ln130_42 = trunc i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 568 'trunc' 'trunc_ln130_42' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 569 [1/1] (1.08ns)   --->   "%add_ln115 = add i64 %mul_ln115_3, i64 %mul_ln115_4" [d1.cpp:115]   --->   Operation 569 'add' 'add_ln115' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 570 [1/1] (1.08ns)   --->   "%add_ln115_1 = add i64 %mul_ln115_2, i64 %mul_ln115_1" [d1.cpp:115]   --->   Operation 570 'add' 'add_ln115_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 571 [1/1] (0.00ns)   --->   "%trunc_ln115 = trunc i64 %add_ln115" [d1.cpp:115]   --->   Operation 571 'trunc' 'trunc_ln115' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 572 [1/1] (0.00ns)   --->   "%trunc_ln115_1 = trunc i64 %add_ln115_1" [d1.cpp:115]   --->   Operation 572 'trunc' 'trunc_ln115_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 573 [1/1] (1.08ns)   --->   "%add_ln115_2 = add i64 %add_ln115_1, i64 %add_ln115" [d1.cpp:115]   --->   Operation 573 'add' 'add_ln115_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 574 [1/1] (1.08ns)   --->   "%add_ln115_3 = add i64 %mul_ln115_7, i64 %mul_ln115_5" [d1.cpp:115]   --->   Operation 574 'add' 'add_ln115_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 575 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_4 = add i64 %mul_ln115_6, i64 %tmp17" [d1.cpp:115]   --->   Operation 575 'add' 'add_ln115_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 576 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln115_5 = add i64 %add_ln115_4, i64 %mul_ln115" [d1.cpp:115]   --->   Operation 576 'add' 'add_ln115_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 577 [1/1] (0.00ns)   --->   "%trunc_ln115_2 = trunc i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 577 'trunc' 'trunc_ln115_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 578 [1/1] (0.00ns)   --->   "%trunc_ln115_3 = trunc i64 %add_ln115_5" [d1.cpp:115]   --->   Operation 578 'trunc' 'trunc_ln115_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 579 [1/1] (1.08ns)   --->   "%add_ln115_6 = add i64 %add_ln115_5, i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 579 'add' 'add_ln115_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 580 [1/1] (0.97ns)   --->   "%add_ln115_8 = add i28 %trunc_ln115_1, i28 %trunc_ln115" [d1.cpp:115]   --->   Operation 580 'add' 'add_ln115_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 581 [1/1] (0.97ns)   --->   "%add_ln115_9 = add i28 %trunc_ln115_3, i28 %trunc_ln115_2" [d1.cpp:115]   --->   Operation 581 'add' 'add_ln115_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 582 [1/1] (1.08ns)   --->   "%add_ln114 = add i64 %mul_ln114_3, i64 %mul_ln114_4" [d1.cpp:114]   --->   Operation 582 'add' 'add_ln114' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 583 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_1 = add i64 %mul_ln114_1, i64 %mul_ln114" [d1.cpp:114]   --->   Operation 583 'add' 'add_ln114_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 584 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln114_2 = add i64 %add_ln114_1, i64 %mul_ln114_2" [d1.cpp:114]   --->   Operation 584 'add' 'add_ln114_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 585 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i64 %add_ln114" [d1.cpp:114]   --->   Operation 585 'trunc' 'trunc_ln114' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 586 [1/1] (0.00ns)   --->   "%trunc_ln114_1 = trunc i64 %add_ln114_2" [d1.cpp:114]   --->   Operation 586 'trunc' 'trunc_ln114_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 587 [1/1] (1.08ns)   --->   "%add_ln114_3 = add i64 %add_ln114_2, i64 %add_ln114" [d1.cpp:114]   --->   Operation 587 'add' 'add_ln114_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 588 [1/1] (1.08ns)   --->   "%add_ln114_4 = add i64 %mul_ln103, i64 %mul_ln114_6" [d1.cpp:114]   --->   Operation 588 'add' 'add_ln114_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 589 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_5 = add i64 %mul_ln114_7, i64 %mul_ln114_5" [d1.cpp:114]   --->   Operation 589 'add' 'add_ln114_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 590 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln114_6 = add i64 %add_ln114_5, i64 %mul_ln114_8" [d1.cpp:114]   --->   Operation 590 'add' 'add_ln114_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 591 [1/1] (0.00ns)   --->   "%trunc_ln114_2 = trunc i64 %add_ln114_4" [d1.cpp:114]   --->   Operation 591 'trunc' 'trunc_ln114_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 592 [1/1] (0.00ns)   --->   "%trunc_ln114_3 = trunc i64 %add_ln114_6" [d1.cpp:114]   --->   Operation 592 'trunc' 'trunc_ln114_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 593 [1/1] (1.08ns)   --->   "%add_ln114_8 = add i64 %add_ln114_6, i64 %add_ln114_4" [d1.cpp:114]   --->   Operation 593 'add' 'add_ln114_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 594 [1/1] (0.97ns)   --->   "%add_ln114_9 = add i28 %trunc_ln114_1, i28 %trunc_ln114" [d1.cpp:114]   --->   Operation 594 'add' 'add_ln114_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 595 [1/1] (0.97ns)   --->   "%add_ln114_10 = add i28 %trunc_ln114_3, i28 %trunc_ln114_2" [d1.cpp:114]   --->   Operation 595 'add' 'add_ln114_10' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 596 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln130_39 = add i28 %add_ln120_9, i28 %trunc_ln120_4" [d1.cpp:130]   --->   Operation 596 'add' 'add_ln130_39' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 597 [1/1] (0.00ns)   --->   "%lshr_ln131_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130, i32 28, i32 63" [d1.cpp:131]   --->   Operation 597 'partselect' 'lshr_ln131_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 598 [1/1] (0.00ns)   --->   "%zext_ln131_3 = zext i36 %lshr_ln131_1" [d1.cpp:131]   --->   Operation 598 'zext' 'zext_ln131_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 599 [1/1] (0.00ns)   --->   "%trunc_ln127 = trunc i64 %p_loc10_load" [d1.cpp:127]   --->   Operation 599 'trunc' 'trunc_ln127' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 600 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130, i32 28, i32 55" [d1.cpp:131]   --->   Operation 600 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 601 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln131_2 = add i64 %p_loc10_load, i64 %zext_ln131_3" [d1.cpp:131]   --->   Operation 601 'add' 'add_ln131_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 602 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln131_1 = add i64 %add_ln131_2, i64 %add_ln127" [d1.cpp:131]   --->   Operation 602 'add' 'add_ln131_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln131_4 = add i28 %trunc_ln127, i28 %trunc_ln" [d1.cpp:131]   --->   Operation 603 'add' 'add_ln131_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 604 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln131_3 = add i28 %add_ln131_4, i28 %trunc_ln127_1" [d1.cpp:131]   --->   Operation 604 'add' 'add_ln131_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 605 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 63" [d1.cpp:132]   --->   Operation 605 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 606 [1/1] (0.00ns)   --->   "%zext_ln132 = zext i36 %lshr_ln2" [d1.cpp:132]   --->   Operation 606 'zext' 'zext_ln132' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 607 [1/1] (0.00ns)   --->   "%trunc_ln126 = trunc i64 %p_loc11_load" [d1.cpp:126]   --->   Operation 607 'trunc' 'trunc_ln126' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 608 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 55" [d1.cpp:132]   --->   Operation 608 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 609 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln132_1 = add i64 %p_loc11_load, i64 %zext_ln132" [d1.cpp:132]   --->   Operation 609 'add' 'add_ln132_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 610 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln132 = add i64 %add_ln132_1, i64 %add_ln126_1" [d1.cpp:132]   --->   Operation 610 'add' 'add_ln132' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 611 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln132_2 = add i28 %trunc_ln126, i28 %trunc_ln1" [d1.cpp:132]   --->   Operation 611 'add' 'add_ln132_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 612 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_2 = add i28 %add_ln132_2, i28 %trunc_ln126_1" [d1.cpp:132]   --->   Operation 612 'add' 'out1_w_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 613 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln132, i32 28, i32 63" [d1.cpp:133]   --->   Operation 613 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 614 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i36 %lshr_ln3" [d1.cpp:133]   --->   Operation 614 'zext' 'zext_ln133' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 615 [1/1] (1.08ns)   --->   "%add_ln125 = add i64 %mul_ln125_2, i64 %mul_ln125_1" [d1.cpp:125]   --->   Operation 615 'add' 'add_ln125' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 616 [1/1] (1.08ns)   --->   "%add_ln125_1 = add i64 %mul_ln125_3, i64 %mul_ln125" [d1.cpp:125]   --->   Operation 616 'add' 'add_ln125_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 617 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i64 %add_ln125" [d1.cpp:125]   --->   Operation 617 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 618 [1/1] (0.00ns)   --->   "%trunc_ln125_1 = trunc i64 %add_ln125_1" [d1.cpp:125]   --->   Operation 618 'trunc' 'trunc_ln125_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 619 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_2 = add i64 %add_ln125_1, i64 %add_ln125" [d1.cpp:125]   --->   Operation 619 'add' 'add_ln125_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 620 [1/1] (0.00ns)   --->   "%trunc_ln125_2 = trunc i64 %p_loc12_load" [d1.cpp:125]   --->   Operation 620 'trunc' 'trunc_ln125_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 621 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_3 = add i28 %trunc_ln125_1, i28 %trunc_ln125" [d1.cpp:125]   --->   Operation 621 'add' 'add_ln125_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 622 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln132, i32 28, i32 55" [d1.cpp:133]   --->   Operation 622 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 623 [1/1] (1.08ns)   --->   "%add_ln133_1 = add i64 %p_loc12_load, i64 %zext_ln133" [d1.cpp:133]   --->   Operation 623 'add' 'add_ln133_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 624 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln133 = add i64 %add_ln133_1, i64 %add_ln125_2" [d1.cpp:133]   --->   Operation 624 'add' 'add_ln133' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 625 [1/1] (0.97ns)   --->   "%add_ln133_2 = add i28 %trunc_ln125_2, i28 %trunc_ln2" [d1.cpp:133]   --->   Operation 625 'add' 'add_ln133_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 626 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i28 %add_ln133_2, i28 %add_ln125_3" [d1.cpp:133]   --->   Operation 626 'add' 'out1_w_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 627 [1/1] (0.00ns)   --->   "%lshr_ln4 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln133, i32 28, i32 63" [d1.cpp:134]   --->   Operation 627 'partselect' 'lshr_ln4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 628 [1/1] (1.08ns)   --->   "%add_ln124 = add i64 %mul_ln124_2, i64 %mul_ln124_1" [d1.cpp:124]   --->   Operation 628 'add' 'add_ln124' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 629 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_1 = add i64 %mul_ln124_3, i64 %mul_ln124" [d1.cpp:124]   --->   Operation 629 'add' 'add_ln124_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 630 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_2 = add i64 %add_ln124_1, i64 %mul_ln124_4" [d1.cpp:124]   --->   Operation 630 'add' 'add_ln124_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 631 [1/1] (0.00ns)   --->   "%trunc_ln124 = trunc i64 %add_ln124" [d1.cpp:124]   --->   Operation 631 'trunc' 'trunc_ln124' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 632 [1/1] (0.00ns)   --->   "%trunc_ln124_1 = trunc i64 %add_ln124_2" [d1.cpp:124]   --->   Operation 632 'trunc' 'trunc_ln124_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 633 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln133, i32 28, i32 55" [d1.cpp:134]   --->   Operation 633 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 634 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123 = add i64 %mul_ln123_1, i64 %mul_ln123_3" [d1.cpp:123]   --->   Operation 634 'add' 'add_ln123' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 635 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_1 = add i64 %add_ln123, i64 %mul_ln123_2" [d1.cpp:123]   --->   Operation 635 'add' 'add_ln123_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 636 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_2 = add i64 %mul_ln123_4, i64 %mul_ln123" [d1.cpp:123]   --->   Operation 636 'add' 'add_ln123_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 637 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_3 = add i64 %add_ln123_2, i64 %mul_ln123_5" [d1.cpp:123]   --->   Operation 637 'add' 'add_ln123_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 638 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i64 %add_ln123_1" [d1.cpp:123]   --->   Operation 638 'trunc' 'trunc_ln123' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 639 [1/1] (0.00ns)   --->   "%trunc_ln123_1 = trunc i64 %add_ln123_3" [d1.cpp:123]   --->   Operation 639 'trunc' 'trunc_ln123_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 640 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122 = add i64 %mul_ln122_1, i64 %mul_ln122_3" [d1.cpp:122]   --->   Operation 640 'add' 'add_ln122' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 641 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln122_1 = add i64 %add_ln122, i64 %mul_ln122_2" [d1.cpp:122]   --->   Operation 641 'add' 'add_ln122_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 642 [1/1] (1.08ns)   --->   "%add_ln122_2 = add i64 %mul_ln122_5, i64 %mul_ln122_4" [d1.cpp:122]   --->   Operation 642 'add' 'add_ln122_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 643 [1/1] (1.08ns)   --->   "%add_ln122_3 = add i64 %mul_ln122_6, i64 %mul_ln122" [d1.cpp:122]   --->   Operation 643 'add' 'add_ln122_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 644 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i64 %add_ln122_2" [d1.cpp:122]   --->   Operation 644 'trunc' 'trunc_ln122' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 645 [1/1] (0.00ns)   --->   "%trunc_ln122_1 = trunc i64 %add_ln122_3" [d1.cpp:122]   --->   Operation 645 'trunc' 'trunc_ln122_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 646 [1/1] (1.08ns)   --->   "%add_ln122_4 = add i64 %add_ln122_3, i64 %add_ln122_2" [d1.cpp:122]   --->   Operation 646 'add' 'add_ln122_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 647 [1/1] (0.00ns)   --->   "%trunc_ln122_2 = trunc i64 %add_ln122_1" [d1.cpp:122]   --->   Operation 647 'trunc' 'trunc_ln122_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 648 [1/1] (0.97ns)   --->   "%add_ln122_6 = add i28 %trunc_ln122_1, i28 %trunc_ln122" [d1.cpp:122]   --->   Operation 648 'add' 'add_ln122_6' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 649 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln137 = add i28 %add_ln121_9, i28 %trunc_ln121_4" [d1.cpp:137]   --->   Operation 649 'add' 'add_ln137' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 650 [1/1] (0.97ns)   --->   "%add_ln138_1 = add i28 %trunc_ln130_s, i28 %trunc_ln106_2" [d1.cpp:138]   --->   Operation 650 'add' 'add_ln138_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 651 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_2 = add i28 %add_ln138_1, i28 %add_ln106_5" [d1.cpp:138]   --->   Operation 651 'add' 'add_ln138_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 652 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_6 = add i28 %add_ln138_5, i28 %add_ln138_2" [d1.cpp:138]   --->   Operation 652 'add' 'add_ln138_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 653 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_8 = add i28 %add_ln138_7, i28 %trunc_ln130_4" [d1.cpp:138]   --->   Operation 653 'add' 'add_ln138_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 654 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_9 = add i28 %trunc_ln130_6, i28 %trunc_ln130_8" [d1.cpp:138]   --->   Operation 654 'add' 'add_ln138_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 655 [1/1] (0.97ns)   --->   "%add_ln138_10 = add i28 %trunc_ln130_7, i28 %trunc_ln130_1" [d1.cpp:138]   --->   Operation 655 'add' 'add_ln138_10' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 656 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_11 = add i28 %add_ln138_10, i28 %add_ln138_9" [d1.cpp:138]   --->   Operation 656 'add' 'add_ln138_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 657 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_12 = add i28 %add_ln138_11, i28 %add_ln138_8" [d1.cpp:138]   --->   Operation 657 'add' 'add_ln138_12' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 658 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_3 = add i28 %add_ln138_12, i28 %add_ln138_6" [d1.cpp:138]   --->   Operation 658 'add' 'add_ln138_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 659 [1/1] (0.97ns)   --->   "%add_ln139_3 = add i28 %trunc_ln130_16, i28 %trunc_ln130_15" [d1.cpp:139]   --->   Operation 659 'add' 'add_ln139_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 660 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_4 = add i28 %trunc_ln130_18, i28 %trunc_ln130_19" [d1.cpp:139]   --->   Operation 660 'add' 'add_ln139_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 661 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_5 = add i28 %add_ln139_4, i28 %trunc_ln130_17" [d1.cpp:139]   --->   Operation 661 'add' 'add_ln139_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 662 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_6 = add i28 %add_ln139_5, i28 %add_ln139_3" [d1.cpp:139]   --->   Operation 662 'add' 'add_ln139_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 663 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_7 = add i28 %trunc_ln130_20, i28 %trunc_ln130_23" [d1.cpp:139]   --->   Operation 663 'add' 'add_ln139_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 664 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_8 = add i28 %add_ln119_7, i28 %trunc_ln130_21" [d1.cpp:139]   --->   Operation 664 'add' 'add_ln139_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 665 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_9 = add i28 %add_ln139_8, i28 %trunc_ln119_3" [d1.cpp:139]   --->   Operation 665 'add' 'add_ln139_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 666 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_10 = add i28 %add_ln139_9, i28 %add_ln139_7" [d1.cpp:139]   --->   Operation 666 'add' 'add_ln139_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 667 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_2 = add i28 %add_ln139_10, i28 %add_ln139_6" [d1.cpp:139]   --->   Operation 667 'add' 'add_ln139_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 668 [1/1] (0.97ns)   --->   "%add_ln140 = add i28 %trunc_ln130_25, i28 %trunc_ln130_24" [d1.cpp:140]   --->   Operation 668 'add' 'add_ln140' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 669 [1/1] (0.97ns)   --->   "%add_ln140_1 = add i28 %trunc_ln130_26, i28 %trunc_ln130_27" [d1.cpp:140]   --->   Operation 669 'add' 'add_ln140_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 670 [1/1] (0.97ns)   --->   "%add_ln141 = add i28 %trunc_ln130_35, i28 %trunc_ln130_41" [d1.cpp:141]   --->   Operation 670 'add' 'add_ln141' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.29>
ST_26 : Operation 671 [1/1] (0.00ns)   --->   "%p_loc13_load = load i64 %p_loc13"   --->   Operation 671 'load' 'p_loc13_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 672 [1/1] (0.00ns)   --->   "%p_loc14_load = load i64 %p_loc14"   --->   Operation 672 'load' 'p_loc14_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 673 [1/1] (0.00ns)   --->   "%p_loc15_load = load i64 %p_loc15"   --->   Operation 673 'load' 'p_loc15_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 674 [1/1] (0.00ns)   --->   "%add169_2873_loc_load = load i64 %add169_2873_loc"   --->   Operation 674 'load' 'add169_2873_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 675 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_7 = add i28 %trunc_ln116_1, i28 %trunc_ln116" [d1.cpp:116]   --->   Operation 675 'add' 'add_ln116_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 676 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_6 = add i64 %add_ln116_5, i64 %add_ln116_2" [d1.cpp:116]   --->   Operation 676 'add' 'add_ln116_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 677 [1/1] (0.00ns)   --->   "%trunc_ln116_4 = trunc i64 %add169_2873_loc_load" [d1.cpp:116]   --->   Operation 677 'trunc' 'trunc_ln116_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 678 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln116_9 = add i28 %add_ln116_8, i28 %add_ln116_7" [d1.cpp:116]   --->   Operation 678 'add' 'add_ln116_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 679 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_8 = add i64 %add_ln116_6, i64 %add169_2873_loc_load" [d1.cpp:116]   --->   Operation 679 'add' 'arr_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 680 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_5 = add i28 %trunc_ln118_1, i28 %trunc_ln118" [d1.cpp:118]   --->   Operation 680 'add' 'add_ln118_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 681 [1/1] (0.00ns)   --->   "%zext_ln130_23 = zext i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 681 'zext' 'zext_ln130_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 682 [1/1] (0.00ns)   --->   "%zext_ln130_33 = zext i66 %add_ln130_15" [d1.cpp:130]   --->   Operation 682 'zext' 'zext_ln130_33' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 683 [1/1] (0.00ns)   --->   "%zext_ln130_34 = zext i65 %add_ln130_16" [d1.cpp:130]   --->   Operation 683 'zext' 'zext_ln130_34' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 684 [1/1] (0.00ns)   --->   "%zext_ln130_35 = zext i65 %add_ln130_17" [d1.cpp:130]   --->   Operation 684 'zext' 'zext_ln130_35' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 685 [1/1] (1.09ns)   --->   "%add_ln130_18 = add i66 %zext_ln130_35, i66 %zext_ln130_23" [d1.cpp:130]   --->   Operation 685 'add' 'add_ln130_18' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 686 [1/1] (0.00ns)   --->   "%zext_ln130_36 = zext i66 %add_ln130_18" [d1.cpp:130]   --->   Operation 686 'zext' 'zext_ln130_36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 687 [1/1] (1.10ns)   --->   "%add_ln130_20 = add i67 %zext_ln130_36, i67 %zext_ln130_34" [d1.cpp:130]   --->   Operation 687 'add' 'add_ln130_20' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 688 [1/1] (0.00ns)   --->   "%zext_ln130_37 = zext i67 %add_ln130_20" [d1.cpp:130]   --->   Operation 688 'zext' 'zext_ln130_37' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 689 [1/1] (1.10ns)   --->   "%add_ln130_19 = add i68 %zext_ln130_37, i68 %zext_ln130_33" [d1.cpp:130]   --->   Operation 689 'add' 'add_ln130_19' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 690 [1/1] (0.00ns)   --->   "%trunc_ln130_22 = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 67" [d1.cpp:130]   --->   Operation 690 'partselect' 'trunc_ln130_22' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 691 [1/1] (0.00ns)   --->   "%zext_ln130_38 = zext i40 %trunc_ln130_22" [d1.cpp:130]   --->   Operation 691 'zext' 'zext_ln130_38' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 692 [1/1] (0.00ns)   --->   "%zext_ln130_44 = zext i64 %arr_10" [d1.cpp:130]   --->   Operation 692 'zext' 'zext_ln130_44' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 693 [1/1] (0.00ns)   --->   "%trunc_ln130_28 = partselect i28 @_ssdm_op_PartSelect.i28.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 55" [d1.cpp:130]   --->   Operation 693 'partselect' 'trunc_ln130_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 694 [1/1] (0.00ns)   --->   "%zext_ln130_46 = zext i66 %add_ln130_22" [d1.cpp:130]   --->   Operation 694 'zext' 'zext_ln130_46' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 695 [1/1] (0.00ns)   --->   "%zext_ln130_47 = zext i65 %add_ln130_23" [d1.cpp:130]   --->   Operation 695 'zext' 'zext_ln130_47' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 696 [1/1] (1.08ns)   --->   "%add_ln130_24 = add i65 %zext_ln130_44, i65 %zext_ln130_38" [d1.cpp:130]   --->   Operation 696 'add' 'add_ln130_24' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 697 [1/1] (0.00ns)   --->   "%zext_ln130_48 = zext i65 %add_ln130_24" [d1.cpp:130]   --->   Operation 697 'zext' 'zext_ln130_48' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 698 [1/1] (1.09ns)   --->   "%add_ln130_42 = add i65 %add_ln130_24, i65 %add_ln130_23" [d1.cpp:130]   --->   Operation 698 'add' 'add_ln130_42' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 699 [1/1] (1.09ns)   --->   "%add_ln130_26 = add i66 %zext_ln130_48, i66 %zext_ln130_47" [d1.cpp:130]   --->   Operation 699 'add' 'add_ln130_26' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 700 [1/1] (0.00ns)   --->   "%trunc_ln130_32 = trunc i65 %add_ln130_42" [d1.cpp:130]   --->   Operation 700 'trunc' 'trunc_ln130_32' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 701 [1/1] (0.00ns)   --->   "%zext_ln130_49 = zext i66 %add_ln130_26" [d1.cpp:130]   --->   Operation 701 'zext' 'zext_ln130_49' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 702 [1/1] (1.09ns)   --->   "%add_ln130_40 = add i56 %trunc_ln130_32, i56 %trunc_ln130_31" [d1.cpp:130]   --->   Operation 702 'add' 'add_ln130_40' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 703 [1/1] (1.10ns)   --->   "%add_ln130_25 = add i67 %zext_ln130_49, i67 %zext_ln130_46" [d1.cpp:130]   --->   Operation 703 'add' 'add_ln130_25' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 704 [1/1] (0.00ns)   --->   "%trunc_ln130_29 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_25, i32 28, i32 66" [d1.cpp:130]   --->   Operation 704 'partselect' 'trunc_ln130_29' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 705 [1/1] (0.00ns)   --->   "%trunc_ln130_33 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_40, i32 28, i32 55" [d1.cpp:130]   --->   Operation 705 'partselect' 'trunc_ln130_33' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 706 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i36 %lshr_ln4" [d1.cpp:134]   --->   Operation 706 'zext' 'zext_ln134' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 707 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_3 = add i64 %add_ln124_2, i64 %add_ln124" [d1.cpp:124]   --->   Operation 707 'add' 'add_ln124_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 708 [1/1] (0.00ns)   --->   "%trunc_ln124_2 = trunc i64 %p_loc13_load" [d1.cpp:124]   --->   Operation 708 'trunc' 'trunc_ln124_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 709 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_4 = add i28 %trunc_ln124_1, i28 %trunc_ln124" [d1.cpp:124]   --->   Operation 709 'add' 'add_ln124_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 710 [1/1] (1.08ns)   --->   "%add_ln134_1 = add i64 %p_loc13_load, i64 %zext_ln134" [d1.cpp:134]   --->   Operation 710 'add' 'add_ln134_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 711 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln134 = add i64 %add_ln134_1, i64 %add_ln124_3" [d1.cpp:134]   --->   Operation 711 'add' 'add_ln134' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 712 [1/1] (0.97ns)   --->   "%add_ln134_2 = add i28 %trunc_ln124_2, i28 %trunc_ln3" [d1.cpp:134]   --->   Operation 712 'add' 'add_ln134_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 713 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i28 %add_ln134_2, i28 %add_ln124_4" [d1.cpp:134]   --->   Operation 713 'add' 'out1_w_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 714 [1/1] (0.00ns)   --->   "%lshr_ln5 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln134, i32 28, i32 63" [d1.cpp:135]   --->   Operation 714 'partselect' 'lshr_ln5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 715 [1/1] (0.00ns)   --->   "%zext_ln135 = zext i36 %lshr_ln5" [d1.cpp:135]   --->   Operation 715 'zext' 'zext_ln135' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 716 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_4 = add i64 %add_ln123_3, i64 %add_ln123_1" [d1.cpp:123]   --->   Operation 716 'add' 'add_ln123_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 717 [1/1] (0.00ns)   --->   "%trunc_ln123_2 = trunc i64 %p_loc14_load" [d1.cpp:123]   --->   Operation 717 'trunc' 'trunc_ln123_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 718 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_5 = add i28 %trunc_ln123_1, i28 %trunc_ln123" [d1.cpp:123]   --->   Operation 718 'add' 'add_ln123_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 719 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln134, i32 28, i32 55" [d1.cpp:135]   --->   Operation 719 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 720 [1/1] (1.08ns)   --->   "%add_ln135_1 = add i64 %p_loc14_load, i64 %zext_ln135" [d1.cpp:135]   --->   Operation 720 'add' 'add_ln135_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 721 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln135 = add i64 %add_ln135_1, i64 %add_ln123_4" [d1.cpp:135]   --->   Operation 721 'add' 'add_ln135' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 722 [1/1] (0.97ns)   --->   "%add_ln135_2 = add i28 %trunc_ln123_2, i28 %trunc_ln4" [d1.cpp:135]   --->   Operation 722 'add' 'add_ln135_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 723 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i28 %add_ln135_2, i28 %add_ln123_5" [d1.cpp:135]   --->   Operation 723 'add' 'out1_w_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 724 [1/1] (0.00ns)   --->   "%lshr_ln6 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln135, i32 28, i32 63" [d1.cpp:136]   --->   Operation 724 'partselect' 'lshr_ln6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 725 [1/1] (0.00ns)   --->   "%zext_ln136 = zext i36 %lshr_ln6" [d1.cpp:136]   --->   Operation 725 'zext' 'zext_ln136' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 726 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_5 = add i64 %add_ln122_4, i64 %add_ln122_1" [d1.cpp:122]   --->   Operation 726 'add' 'add_ln122_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 727 [1/1] (0.00ns)   --->   "%trunc_ln122_3 = trunc i64 %p_loc15_load" [d1.cpp:122]   --->   Operation 727 'trunc' 'trunc_ln122_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 728 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_7 = add i28 %add_ln122_6, i28 %trunc_ln122_2" [d1.cpp:122]   --->   Operation 728 'add' 'add_ln122_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 729 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln135, i32 28, i32 55" [d1.cpp:136]   --->   Operation 729 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 730 [1/1] (1.08ns)   --->   "%add_ln136_1 = add i64 %p_loc15_load, i64 %zext_ln136" [d1.cpp:136]   --->   Operation 730 'add' 'add_ln136_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 731 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln136 = add i64 %add_ln136_1, i64 %add_ln122_5" [d1.cpp:136]   --->   Operation 731 'add' 'add_ln136' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 732 [1/1] (0.97ns)   --->   "%add_ln136_2 = add i28 %trunc_ln122_3, i28 %trunc_ln5" [d1.cpp:136]   --->   Operation 732 'add' 'add_ln136_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 733 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i28 %add_ln136_2, i28 %add_ln122_7" [d1.cpp:136]   --->   Operation 733 'add' 'out1_w_6' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 734 [1/1] (0.00ns)   --->   "%trunc_ln137_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln136, i32 28, i32 63" [d1.cpp:137]   --->   Operation 734 'partselect' 'trunc_ln137_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 735 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i36 %trunc_ln137_1" [d1.cpp:137]   --->   Operation 735 'zext' 'zext_ln137' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 736 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln136, i32 28, i32 55" [d1.cpp:137]   --->   Operation 736 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 737 [1/1] (0.97ns)   --->   "%out1_w_7 = add i28 %trunc_ln6, i28 %add_ln137" [d1.cpp:137]   --->   Operation 737 'add' 'out1_w_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 738 [1/1] (0.00ns)   --->   "%zext_ln138 = zext i28 %add_ln137" [d1.cpp:138]   --->   Operation 738 'zext' 'zext_ln138' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 739 [1/1] (1.02ns)   --->   "%add_ln138 = add i37 %zext_ln137, i37 %zext_ln138" [d1.cpp:138]   --->   Operation 739 'add' 'add_ln138' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 740 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln138, i32 28, i32 36" [d1.cpp:138]   --->   Operation 740 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 741 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_2 = add i28 %add_ln140_1, i28 %add_ln140" [d1.cpp:140]   --->   Operation 741 'add' 'add_ln140_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 742 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_3 = add i28 %trunc_ln130_30, i28 %trunc_ln118_2" [d1.cpp:140]   --->   Operation 742 'add' 'add_ln140_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 743 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_4 = add i28 %add_ln118_5, i28 %trunc_ln130_28" [d1.cpp:140]   --->   Operation 743 'add' 'add_ln140_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 744 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_5 = add i28 %add_ln140_4, i28 %add_ln140_3" [d1.cpp:140]   --->   Operation 744 'add' 'add_ln140_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 745 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_10 = add i28 %add_ln140_5, i28 %add_ln140_2" [d1.cpp:140]   --->   Operation 745 'add' 'out1_w_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 746 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_2 = add i28 %add_ln117_5, i28 %trunc_ln130_33" [d1.cpp:141]   --->   Operation 746 'add' 'add_ln141_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 747 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln141_3 = add i28 %add_ln141_2, i28 %trunc_ln117_2" [d1.cpp:141]   --->   Operation 747 'add' 'add_ln141_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 748 [1/1] (0.00ns)   --->   "%add169_1872_loc_load = load i64 %add169_1872_loc"   --->   Operation 748 'load' 'add169_1872_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 749 [1/1] (0.00ns)   --->   "%zext_ln130_50 = zext i39 %trunc_ln130_29" [d1.cpp:130]   --->   Operation 749 'zext' 'zext_ln130_50' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 750 [1/1] (0.00ns)   --->   "%zext_ln130_51 = zext i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 750 'zext' 'zext_ln130_51' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 751 [1/1] (0.00ns)   --->   "%zext_ln130_54 = zext i64 %arr_9" [d1.cpp:130]   --->   Operation 751 'zext' 'zext_ln130_54' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 752 [1/1] (0.00ns)   --->   "%zext_ln130_55 = zext i65 %add_ln130_27" [d1.cpp:130]   --->   Operation 752 'zext' 'zext_ln130_55' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 753 [1/1] (1.08ns)   --->   "%add_ln130_28 = add i65 %zext_ln130_54, i65 %zext_ln130_50" [d1.cpp:130]   --->   Operation 753 'add' 'add_ln130_28' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 754 [1/1] (0.00ns)   --->   "%zext_ln130_56 = zext i65 %add_ln130_28" [d1.cpp:130]   --->   Operation 754 'zext' 'zext_ln130_56' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 755 [1/1] (1.09ns)   --->   "%add_ln130_30 = add i66 %zext_ln130_56, i66 %zext_ln130_51" [d1.cpp:130]   --->   Operation 755 'add' 'add_ln130_30' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 756 [1/1] (0.00ns)   --->   "%zext_ln130_57 = zext i66 %add_ln130_30" [d1.cpp:130]   --->   Operation 756 'zext' 'zext_ln130_57' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 757 [1/1] (1.10ns)   --->   "%add_ln130_29 = add i67 %zext_ln130_57, i67 %zext_ln130_55" [d1.cpp:130]   --->   Operation 757 'add' 'add_ln130_29' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 758 [1/1] (0.00ns)   --->   "%trunc_ln130_34 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 66" [d1.cpp:130]   --->   Operation 758 'partselect' 'trunc_ln130_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 759 [1/1] (0.00ns)   --->   "%zext_ln130_58 = zext i39 %trunc_ln130_34" [d1.cpp:130]   --->   Operation 759 'zext' 'zext_ln130_58' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 760 [1/1] (0.00ns)   --->   "%zext_ln130_59 = zext i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 760 'zext' 'zext_ln130_59' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 761 [1/1] (0.00ns)   --->   "%zext_ln130_60 = zext i64 %arr_8" [d1.cpp:130]   --->   Operation 761 'zext' 'zext_ln130_60' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 762 [1/1] (0.00ns)   --->   "%trunc_ln130_36 = partselect i28 @_ssdm_op_PartSelect.i28.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 55" [d1.cpp:130]   --->   Operation 762 'partselect' 'trunc_ln130_36' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 763 [1/1] (1.08ns)   --->   "%add_ln130_36 = add i65 %zext_ln130_59, i65 %zext_ln130_58" [d1.cpp:130]   --->   Operation 763 'add' 'add_ln130_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 764 [1/1] (0.00ns)   --->   "%zext_ln130_61 = zext i65 %add_ln130_36" [d1.cpp:130]   --->   Operation 764 'zext' 'zext_ln130_61' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 765 [1/1] (1.09ns)   --->   "%add_ln130_31 = add i66 %zext_ln130_61, i66 %zext_ln130_60" [d1.cpp:130]   --->   Operation 765 'add' 'add_ln130_31' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 766 [1/1] (0.00ns)   --->   "%tmp_s = partselect i38 @_ssdm_op_PartSelect.i38.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 65" [d1.cpp:130]   --->   Operation 766 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 767 [1/1] (0.00ns)   --->   "%zext_ln130_65 = zext i38 %tmp_s" [d1.cpp:130]   --->   Operation 767 'zext' 'zext_ln130_65' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 768 [1/1] (0.00ns)   --->   "%trunc_ln115_4 = trunc i64 %add169_1872_loc_load" [d1.cpp:115]   --->   Operation 768 'trunc' 'trunc_ln115_4' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 769 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_10 = add i28 %add_ln115_9, i28 %add_ln115_8" [d1.cpp:115]   --->   Operation 769 'add' 'add_ln115_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 770 [1/1] (0.00ns)   --->   "%trunc_ln130_37 = partselect i28 @_ssdm_op_PartSelect.i28.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 55" [d1.cpp:130]   --->   Operation 770 'partselect' 'trunc_ln130_37' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 771 [1/1] (1.08ns)   --->   "%add_ln130_37 = add i64 %add169_1872_loc_load, i64 %zext_ln130_65" [d1.cpp:130]   --->   Operation 771 'add' 'add_ln130_37' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 772 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_1 = add i28 %add_ln141, i28 %trunc_ln130_40" [d1.cpp:141]   --->   Operation 772 'add' 'add_ln141_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 773 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_11 = add i28 %add_ln141_3, i28 %add_ln141_1" [d1.cpp:141]   --->   Operation 773 'add' 'out1_w_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 774 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln142 = add i28 %add_ln116_9, i28 %trunc_ln116_4" [d1.cpp:142]   --->   Operation 774 'add' 'add_ln142' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 775 [1/1] (0.97ns)   --->   "%add_ln142_1 = add i28 %trunc_ln130_42, i28 %trunc_ln130_36" [d1.cpp:142]   --->   Operation 775 'add' 'add_ln142_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 776 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_12 = add i28 %add_ln142_1, i28 %add_ln142" [d1.cpp:142]   --->   Operation 776 'add' 'out1_w_12' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 777 [1/1] (0.97ns)   --->   "%add_ln143 = add i28 %trunc_ln115_4, i28 %trunc_ln130_37" [d1.cpp:143]   --->   Operation 777 'add' 'add_ln143' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 778 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_13 = add i28 %add_ln143, i28 %add_ln115_10" [d1.cpp:143]   --->   Operation 778 'add' 'out1_w_13' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 779 [1/1] (0.00ns)   --->   "%sext_ln149 = sext i62 %trunc_ln149_1" [d1.cpp:149]   --->   Operation 779 'sext' 'sext_ln149' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 780 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i32 %mem, i64 %sext_ln149" [d1.cpp:149]   --->   Operation 780 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 781 [1/1] (7.30ns)   --->   "%empty_42 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %mem_addr_2, i32 16" [d1.cpp:149]   --->   Operation 781 'writereq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 6.18>
ST_28 : Operation 782 [1/1] (0.00ns)   --->   "%add169871_loc_load = load i64 %add169871_loc"   --->   Operation 782 'load' 'add169871_loc_load' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 783 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_7 = add i64 %add_ln115_6, i64 %add_ln115_2" [d1.cpp:115]   --->   Operation 783 'add' 'add_ln115_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 784 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_32 = add i64 %add_ln130_37, i64 %add_ln115_7" [d1.cpp:130]   --->   Operation 784 'add' 'add_ln130_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 785 [1/1] (0.00ns)   --->   "%lshr_ln130_7 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 63" [d1.cpp:130]   --->   Operation 785 'partselect' 'lshr_ln130_7' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 786 [1/1] (0.00ns)   --->   "%zext_ln130_66 = zext i36 %lshr_ln130_7" [d1.cpp:130]   --->   Operation 786 'zext' 'zext_ln130_66' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 787 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_7 = add i64 %add_ln114_8, i64 %add_ln114_3" [d1.cpp:114]   --->   Operation 787 'add' 'add_ln114_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 788 [1/1] (0.00ns)   --->   "%trunc_ln114_4 = trunc i64 %add169871_loc_load" [d1.cpp:114]   --->   Operation 788 'trunc' 'trunc_ln114_4' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 789 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_11 = add i28 %add_ln114_10, i28 %add_ln114_9" [d1.cpp:114]   --->   Operation 789 'add' 'add_ln114_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 790 [1/1] (0.00ns)   --->   "%trunc_ln130_38 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 55" [d1.cpp:130]   --->   Operation 790 'partselect' 'trunc_ln130_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 791 [1/1] (1.08ns)   --->   "%add_ln130_38 = add i64 %add169871_loc_load, i64 %zext_ln130_66" [d1.cpp:130]   --->   Operation 791 'add' 'add_ln130_38' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 792 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_33 = add i64 %add_ln130_38, i64 %add_ln114_7" [d1.cpp:130]   --->   Operation 792 'add' 'add_ln130_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 793 [1/1] (0.00ns)   --->   "%trunc_ln130_39 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 63" [d1.cpp:130]   --->   Operation 793 'partselect' 'trunc_ln130_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 794 [1/1] (0.00ns)   --->   "%zext_ln130_62 = zext i36 %trunc_ln130_39" [d1.cpp:130]   --->   Operation 794 'zext' 'zext_ln130_62' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 795 [1/1] (0.00ns)   --->   "%zext_ln130_63 = zext i28 %add_ln130_39" [d1.cpp:130]   --->   Operation 795 'zext' 'zext_ln130_63' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 796 [1/1] (1.02ns)   --->   "%add_ln130_34 = add i37 %zext_ln130_62, i37 %zext_ln130_63" [d1.cpp:130]   --->   Operation 796 'add' 'add_ln130_34' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 797 [1/1] (0.00ns)   --->   "%tmp_23 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln130_34, i32 28, i32 36" [d1.cpp:130]   --->   Operation 797 'partselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 798 [1/1] (0.00ns)   --->   "%zext_ln130_67 = zext i9 %tmp_23" [d1.cpp:130]   --->   Operation 798 'zext' 'zext_ln130_67' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 799 [1/1] (0.00ns)   --->   "%zext_ln130_68 = zext i9 %tmp_23" [d1.cpp:130]   --->   Operation 799 'zext' 'zext_ln130_68' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 800 [1/1] (0.97ns)   --->   "%out1_w = add i28 %zext_ln130_68, i28 %add_ln130_1" [d1.cpp:130]   --->   Operation 800 'add' 'out1_w' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 801 [1/1] (0.00ns)   --->   "%zext_ln131 = zext i28 %add_ln130_1" [d1.cpp:131]   --->   Operation 801 'zext' 'zext_ln131' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 802 [1/1] (0.97ns)   --->   "%add_ln131 = add i29 %zext_ln130_67, i29 %zext_ln131" [d1.cpp:131]   --->   Operation 802 'add' 'add_ln131' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 803 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln131, i32 28" [d1.cpp:131]   --->   Operation 803 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 804 [1/1] (0.00ns)   --->   "%zext_ln131_1 = zext i1 %tmp" [d1.cpp:131]   --->   Operation 804 'zext' 'zext_ln131_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 805 [1/1] (0.00ns)   --->   "%zext_ln131_2 = zext i28 %add_ln131_3" [d1.cpp:131]   --->   Operation 805 'zext' 'zext_ln131_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 806 [1/1] (0.97ns)   --->   "%out1_w_1 = add i29 %zext_ln131_2, i29 %zext_ln131_1" [d1.cpp:131]   --->   Operation 806 'add' 'out1_w_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 807 [1/1] (0.00ns)   --->   "%zext_ln138_1 = zext i9 %tmp_24" [d1.cpp:138]   --->   Operation 807 'zext' 'zext_ln138_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 808 [1/1] (0.00ns)   --->   "%zext_ln138_2 = zext i9 %tmp_24" [d1.cpp:138]   --->   Operation 808 'zext' 'zext_ln138_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 809 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_13 = add i28 %add_ln138_3, i28 %zext_ln130_68" [d1.cpp:138]   --->   Operation 809 'add' 'add_ln138_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 810 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i28 %add_ln138_13, i28 %zext_ln138_2" [d1.cpp:138]   --->   Operation 810 'add' 'out1_w_8' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 811 [1/1] (0.00ns)   --->   "%zext_ln139 = zext i28 %add_ln138_3" [d1.cpp:139]   --->   Operation 811 'zext' 'zext_ln139' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 812 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139 = add i29 %zext_ln139, i29 %zext_ln130_67" [d1.cpp:139]   --->   Operation 812 'add' 'add_ln139' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 813 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_1 = add i29 %add_ln139, i29 %zext_ln138_1" [d1.cpp:139]   --->   Operation 813 'add' 'add_ln139_1' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 814 [1/1] (0.00ns)   --->   "%tmp_28 = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln139_1, i32 28" [d1.cpp:139]   --->   Operation 814 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 815 [1/1] (0.00ns)   --->   "%zext_ln139_1 = zext i1 %tmp_28" [d1.cpp:139]   --->   Operation 815 'zext' 'zext_ln139_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 816 [1/1] (0.00ns)   --->   "%zext_ln139_2 = zext i28 %add_ln139_2" [d1.cpp:139]   --->   Operation 816 'zext' 'zext_ln139_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 817 [1/1] (0.97ns)   --->   "%out1_w_9 = add i29 %zext_ln139_2, i29 %zext_ln139_1" [d1.cpp:139]   --->   Operation 817 'add' 'out1_w_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 818 [1/1] (0.97ns)   --->   "%add_ln144 = add i28 %trunc_ln114_4, i28 %trunc_ln130_38" [d1.cpp:144]   --->   Operation 818 'add' 'add_ln144' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 819 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_14 = add i28 %add_ln144, i28 %add_ln114_11" [d1.cpp:144]   --->   Operation 819 'add' 'out1_w_14' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 820 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 55" [d1.cpp:145]   --->   Operation 820 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 821 [1/1] (0.97ns)   --->   "%out1_w_15 = add i28 %trunc_ln7, i28 %add_ln130_39" [d1.cpp:145]   --->   Operation 821 'add' 'out1_w_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 822 [2/2] (0.48ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 822 'call' 'call_ln149' <Predicate = true> <Delay = 0.48> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 0.00>
ST_29 : Operation 823 [1/2] (0.00ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 823 'call' 'call_ln149' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 824 [5/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 824 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 825 [4/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 825 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 826 [3/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 826 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 827 [2/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 827 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 828 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d1.cpp:3]   --->   Operation 828 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 829 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 16, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 829 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 830 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 830 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 831 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 831 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 832 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 832 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 833 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 833 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 834 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 834 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 835 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 835 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 836 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 836 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 837 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 837 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 838 [1/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 838 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 839 [1/1] (0.00ns)   --->   "%ret_ln153 = ret" [d1.cpp:153]   --->   Operation 839 'ret' 'ret_ln153' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d1.cpp:24) [68]  (0.000 ns)
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [69]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln24', d1.cpp:24) to 'test_Pipeline_ARRAY_1_READ' [70]  (1.216 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d1.cpp:31) [89]  (0.000 ns)
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_41', d1.cpp:31) on port 'mem' (d1.cpp:31) [90]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln31', d1.cpp:31) to 'test_Pipeline_ARRAY_2_READ' [91]  (1.216 ns)

 <State 22>: 4.505ns
The critical path consists of the following:
	'load' operation ('arg1_r_15_loc_load') on local variable 'arg1_r_15_loc' [71]  (0.000 ns)
	multiplexor before operation 'mul' with delay (1.316 ns)
'mul' operation ('mul_ln50_6', d1.cpp:50) [126]  (2.104 ns)
	'add' operation ('add_ln50_18', d1.cpp:50) [172]  (1.085 ns)

 <State 23>: 5.751ns
The critical path consists of the following:
	'load' operation ('arg1_r_14_loc_load') on local variable 'arg1_r_14_loc' [72]  (0.000 ns)
	multiplexor before operation 'mul' with delay (1.316 ns)
'mul' operation ('mul_ln50_9', d1.cpp:50) [131]  (2.104 ns)
	'add' operation ('add_ln50_4', d1.cpp:50) [146]  (1.085 ns)
	'add' operation ('arr', d1.cpp:50) [147]  (0.819 ns)
	'call' operation ('call_ln50', d1.cpp:50) to 'test_Pipeline_VITIS_LOOP_62_5' [175]  (0.427 ns)

 <State 24>: 5.598ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (1.316 ns)
'mul' operation ('mul_ln130_8', d1.cpp:130) [434]  (2.104 ns)
	'add' operation ('add_ln130_2', d1.cpp:130) [448]  (1.085 ns)
	'add' operation ('add_ln130_3', d1.cpp:130) [450]  (1.093 ns)

 <State 25>: 7.285ns
The critical path consists of the following:
	'load' operation ('add138894_loc_load') on local variable 'add138894_loc' [176]  (0.000 ns)
	'add' operation ('arr', d1.cpp:120) [356]  (0.819 ns)
	'add' operation ('add_ln130_9', d1.cpp:130) [464]  (1.025 ns)
	'add' operation ('add_ln130_10', d1.cpp:130) [466]  (1.085 ns)
	'add' operation ('add_ln130_12', d1.cpp:130) [468]  (1.100 ns)
	'add' operation ('add_ln130_35', d1.cpp:130) [471]  (1.096 ns)
	'add' operation ('add_ln139_8', d1.cpp:139) [754]  (0.000 ns)
	'add' operation ('add_ln139_9', d1.cpp:139) [755]  (0.720 ns)
	'add' operation ('add_ln139_10', d1.cpp:139) [756]  (0.720 ns)
	'add' operation ('add_ln139_2', d1.cpp:139) [757]  (0.720 ns)

 <State 26>: 7.295ns
The critical path consists of the following:
	'add' operation ('add_ln130_18', d1.cpp:130) [508]  (1.093 ns)
	'add' operation ('add_ln130_20', d1.cpp:130) [510]  (1.100 ns)
	'add' operation ('add_ln130_19', d1.cpp:130) [512]  (1.108 ns)
	'add' operation ('add_ln130_24', d1.cpp:130) [539]  (1.085 ns)
	'add' operation ('add_ln130_42', d1.cpp:130) [541]  (1.093 ns)
	'add' operation ('add_ln130_40', d1.cpp:130) [545]  (1.096 ns)
	'add' operation ('add_ln141_2', d1.cpp:141) [769]  (0.000 ns)
	'add' operation ('add_ln141_3', d1.cpp:141) [770]  (0.720 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d1.cpp:149) [783]  (0.000 ns)
	bus request operation ('empty_42', d1.cpp:149) on port 'mem' (d1.cpp:149) [784]  (7.300 ns)

 <State 28>: 6.188ns
The critical path consists of the following:
	'add' operation ('add_ln115_7', d1.cpp:115) [592]  (0.000 ns)
	'add' operation ('add_ln130_32', d1.cpp:130) [597]  (0.819 ns)
	'add' operation ('add_ln130_38', d1.cpp:130) [618]  (1.085 ns)
	'add' operation ('add_ln130_33', d1.cpp:130) [619]  (0.819 ns)
	'add' operation ('add_ln130_34', d1.cpp:130) [624]  (1.025 ns)
	'add' operation ('add_ln131', d1.cpp:131) [630]  (0.975 ns)
	'add' operation ('out1_w', d1.cpp:131) [644]  (0.975 ns)
	'call' operation ('call_ln149', d1.cpp:149) to 'test_Pipeline_ARRAY_WRITE' [785]  (0.489 ns)

 <State 29>: 0.000ns
The critical path consists of the following:

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', d1.cpp:153) on port 'mem' (d1.cpp:153) [786]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', d1.cpp:153) on port 'mem' (d1.cpp:153) [786]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', d1.cpp:153) on port 'mem' (d1.cpp:153) [786]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', d1.cpp:153) on port 'mem' (d1.cpp:153) [786]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', d1.cpp:153) on port 'mem' (d1.cpp:153) [786]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
