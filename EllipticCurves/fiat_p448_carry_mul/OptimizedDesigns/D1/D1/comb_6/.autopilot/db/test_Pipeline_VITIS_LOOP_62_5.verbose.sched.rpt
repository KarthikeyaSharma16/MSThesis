

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_62_5'
================================================================
* Date:           Fri May 10 15:03:58 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_6 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.972 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_62_5  |        4|        4|         3|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k_s = alloca i32 1"   --->   Operation 6 'alloca' 'k_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add169813 = alloca i32 1"   --->   Operation 8 'alloca' 'add169813' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add169_1620814 = alloca i32 1"   --->   Operation 9 'alloca' 'add169_1620814' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add169_2648815 = alloca i32 1"   --->   Operation 10 'alloca' 'add169_2648815' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add169_3676816 = alloca i32 1"   --->   Operation 11 'alloca' 'add169_3676816' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add169_4704817 = alloca i32 1"   --->   Operation 12 'alloca' 'add169_4704817' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add169_5818 = alloca i32 1"   --->   Operation 13 'alloca' 'add169_5818' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add169_6819 = alloca i32 1"   --->   Operation 14 'alloca' 'add169_6819' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 15 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_35 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_36 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 18 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 19 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 20 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_40 = alloca i32 1"   --->   Operation 21 'alloca' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_41 = alloca i32 1"   --->   Operation 22 'alloca' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%add138840 = alloca i32 1"   --->   Operation 23 'alloca' 'add138840' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 24 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 25 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 26 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 27 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 28 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 29 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 30 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 31 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 32 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 33 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 34 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 35 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 36 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 37 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 38 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 39 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 40 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 41 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 42 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 43 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 44 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 45 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 46 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 47 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 48 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 49 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 50 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 51 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 52 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 53 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 54 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 55 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 56 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 57 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%add47820_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47820_reload"   --->   Operation 58 'read' 'add47820_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add47_1821_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_1821_reload"   --->   Operation 59 'read' 'add47_1821_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add47_2822_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_2822_reload"   --->   Operation 60 'read' 'add47_2822_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add47_3823_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_3823_reload"   --->   Operation 61 'read' 'add47_3823_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add47_4824_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_4824_reload"   --->   Operation 62 'read' 'add47_4824_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add47_5825_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_5825_reload"   --->   Operation 63 'read' 'add47_5825_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add47_6826_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_6826_reload"   --->   Operation 64 'read' 'add47_6826_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add47_8828_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_8828_reload"   --->   Operation 65 'read' 'add47_8828_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add47_9829_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_9829_reload"   --->   Operation 66 'read' 'add47_9829_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%add47_10830_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_10830_reload"   --->   Operation 67 'read' 'add47_10830_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%add47_11831_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_11831_reload"   --->   Operation 68 'read' 'add47_11831_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%add47_12832_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_12832_reload"   --->   Operation 69 'read' 'add47_12832_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%add47_13833_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_13833_reload"   --->   Operation 70 'read' 'add47_13833_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%add47_14834_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_14834_reload"   --->   Operation 71 'read' 'add47_14834_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 72 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add138840"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_14834_reload_read, i64 %empty_41"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_13833_reload_read, i64 %empty_40"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_12832_reload_read, i64 %empty_39"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_11831_reload_read, i64 %empty_38"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_10830_reload_read, i64 %empty_37"   --->   Operation 80 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 81 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_9829_reload_read, i64 %empty_36"   --->   Operation 81 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_8828_reload_read, i64 %empty_35"   --->   Operation 82 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 83 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_6826_reload_read, i64 %add169_6819"   --->   Operation 84 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_5825_reload_read, i64 %add169_5818"   --->   Operation 85 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_4824_reload_read, i64 %add169_4704817"   --->   Operation 86 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 87 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_3823_reload_read, i64 %add169_3676816"   --->   Operation 87 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 88 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_2822_reload_read, i64 %add169_2648815"   --->   Operation 88 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 89 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_1821_reload_read, i64 %add169_1620814"   --->   Operation 89 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 90 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47820_reload_read, i64 %add169813"   --->   Operation 90 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 91 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 8, i32 %k1"   --->   Operation 91 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %k_s"   --->   Operation 92 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body113"   --->   Operation 93 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.75>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d1.cpp:80]   --->   Operation 94 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.79ns)   --->   "%icmp_ln62 = icmp_eq  i4 %i_1, i4 0" [d1.cpp:62]   --->   Operation 95 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln62 = br i1 %icmp_ln62, void %for.body113.split_ifconv, void %for.end303.exitStub" [d1.cpp:62]   --->   Operation 96 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%k_load = load i32 %k_s" [d1.cpp:62]   --->   Operation 97 'load' 'k_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%k1_load = load i32 %k1" [d1.cpp:62]   --->   Operation 98 'load' 'k1_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%k_load_42 = load i4 %k" [d1.cpp:80]   --->   Operation 99 'load' 'k_load_42' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i4 %i_1" [d1.cpp:62]   --->   Operation 100 'zext' 'zext_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i32 %k_load" [d1.cpp:62]   --->   Operation 101 'trunc' 'trunc_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i32 %k1_load" [d1.cpp:62]   --->   Operation 102 'trunc' 'trunc_ln62_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d1.cpp:70]   --->   Operation 103 'bitselect' 'tmp_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 104 'mux' 'tmp_s' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i32 %tmp_s" [d1.cpp:78]   --->   Operation 105 'zext' 'zext_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (1.01ns)   --->   "%k1_1 = add i32 %k1_load, i32 1" [d1.cpp:70]   --->   Operation 106 'add' 'k1_1' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (1.01ns)   --->   "%k_1 = add i32 %k_load, i32 1" [d1.cpp:70]   --->   Operation 107 'add' 'k_1' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.44ns)   --->   "%k_2 = select i1 %tmp_1, i32 %k_1, i32 %k_load" [d1.cpp:70]   --->   Operation 108 'select' 'k_2' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.44ns)   --->   "%k1_2 = select i1 %tmp_1, i32 %k1_1, i32 %k1_load" [d1.cpp:70]   --->   Operation 109 'select' 'k1_2' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%trunc_ln72 = trunc i32 %k_2" [d1.cpp:72]   --->   Operation 110 'trunc' 'trunc_ln72' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln72_1 = trunc i32 %k1_2" [d1.cpp:72]   --->   Operation 111 'trunc' 'trunc_ln72_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.79ns)   --->   "%cmp159 = icmp_ugt  i4 %i_1, i4 6" [d1.cpp:80]   --->   Operation 112 'icmp' 'cmp159' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.79ns)   --->   "%empty_43 = add i5 %zext_ln62, i5 1" [d1.cpp:62]   --->   Operation 113 'add' 'empty_43' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node add_ln80)   --->   "%select_ln80_5 = select i1 %cmp159, i4 6, i4 7" [d1.cpp:80]   --->   Operation 114 'select' 'select_ln80_5' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln80 = add i4 %select_ln80_5, i4 %k_load_42" [d1.cpp:80]   --->   Operation 115 'add' 'add_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_43, i32 4" [d1.cpp:80]   --->   Operation 116 'bitselect' 'tmp_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 117 '%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast'
ST_2 : Operation 117 [1/1] (2.10ns)   --->   "%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 117 'mul' 'mul_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_1)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_43, i32 4" [d1.cpp:80]   --->   Operation 118 'bitselect' 'tmp_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_1)   --->   "%select_ln80_7 = select i1 %tmp_6, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 119 'select' 'select_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_1 = and i64 %mul_ln80_1, i64 %select_ln80_7" [d1.cpp:80]   --->   Operation 120 'and' 'and_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36)   --->   "%select_ln78 = select i1 %tmp_5, i3 6, i3 7" [d1.cpp:78]   --->   Operation 121 'select' 'select_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i1 %cmp159" [d1.cpp:79]   --->   Operation 122 'zext' 'zext_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.79ns)   --->   "%sub_ln80_14 = sub i4 %add_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 123 'sub' 'sub_ln80_14' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.78ns)   --->   "%icmp_ln80 = icmp_ugt  i5 %empty_43, i5 14" [d1.cpp:80]   --->   Operation 124 'icmp' 'icmp_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36)   --->   "%zext_ln36 = zext i1 %icmp_ln80" [d1.cpp:36]   --->   Operation 125 'zext' 'zext_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36 = sub i3 %select_ln78, i3 %zext_ln36" [d1.cpp:36]   --->   Operation 126 'sub' 'sub_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.79ns)   --->   "%sub_ln80_15 = sub i4 %sub_ln80_14, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 127 'sub' 'sub_ln80_15' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.78ns)   --->   "%icmp_ln80_1 = icmp_ugt  i5 %empty_43, i5 13" [d1.cpp:80]   --->   Operation 128 'icmp' 'icmp_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i1 %icmp_ln80_1" [d1.cpp:36]   --->   Operation 129 'zext' 'zext_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.67ns)   --->   "%sub_ln36_1 = sub i3 %sub_ln36, i3 %zext_ln36_1" [d1.cpp:36]   --->   Operation 130 'sub' 'sub_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%sext_ln78_5 = sext i3 %sub_ln36_1" [d1.cpp:78]   --->   Operation 131 'sext' 'sext_ln78_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.79ns)   --->   "%sub_ln80 = sub i4 %sub_ln80_15, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 132 'sub' 'sub_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.78ns)   --->   "%icmp_ln80_2 = icmp_ugt  i5 %empty_43, i5 12" [d1.cpp:80]   --->   Operation 133 'icmp' 'icmp_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i1 %icmp_ln80_2" [d1.cpp:81]   --->   Operation 134 'zext' 'zext_ln81' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.67ns)   --->   "%sub_ln36_2 = sub i4 %sext_ln78_5, i4 %zext_ln81" [d1.cpp:36]   --->   Operation 135 'sub' 'sub_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (0.78ns)   --->   "%icmp_ln80_3 = icmp_ugt  i5 %empty_43, i5 11" [d1.cpp:80]   --->   Operation 136 'icmp' 'icmp_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i1 %icmp_ln80_3" [d1.cpp:81]   --->   Operation 137 'zext' 'zext_ln81_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.79ns)   --->   "%sub_ln36_3 = sub i4 %sub_ln36_2, i4 %zext_ln81_1" [d1.cpp:36]   --->   Operation 138 'sub' 'sub_ln36_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln80_4 = icmp_ugt  i5 %empty_43, i5 10" [d1.cpp:80]   --->   Operation 139 'icmp' 'icmp_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln81_2 = zext i1 %icmp_ln80_4" [d1.cpp:81]   --->   Operation 140 'zext' 'zext_ln81_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln81_2" [d1.cpp:36]   --->   Operation 141 'sub' 'sub_ln36_4' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.78ns)   --->   "%icmp_ln80_5 = icmp_ugt  i5 %empty_43, i5 9" [d1.cpp:80]   --->   Operation 142 'icmp' 'icmp_ln80_5' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln81_3 = zext i1 %icmp_ln80_5" [d1.cpp:81]   --->   Operation 143 'zext' 'zext_ln81_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 144 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln81_3" [d1.cpp:36]   --->   Operation 144 'sub' 'sub_ln36_5' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.78ns)   --->   "%icmp_ln80_6 = icmp_ugt  i5 %empty_43, i5 8" [d1.cpp:80]   --->   Operation 145 'icmp' 'icmp_ln80_6' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln81_4 = zext i1 %icmp_ln80_6" [d1.cpp:81]   --->   Operation 146 'zext' 'zext_ln81_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.79ns)   --->   "%sub_ln36_6 = sub i4 %sub_ln36_5, i4 %zext_ln81_4" [d1.cpp:36]   --->   Operation 147 'sub' 'sub_ln36_6' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_43, i32 3, i32 4" [d1.cpp:80]   --->   Operation 148 'partselect' 'tmp_20' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 149 [1/1] (0.54ns)   --->   "%icmp_ln80_7 = icmp_ne  i2 %tmp_20, i2 0" [d1.cpp:80]   --->   Operation 149 'icmp' 'icmp_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.78ns)   --->   "%icmp_ln80_8 = icmp_ugt  i5 %empty_43, i5 6" [d1.cpp:80]   --->   Operation 150 'icmp' 'icmp_ln80_8' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.79ns)   --->   "%add_ln70_1 = add i4 %i_1, i4 15" [d1.cpp:70]   --->   Operation 151 'add' 'add_ln70_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_27 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln70_1, i32 3" [d1.cpp:70]   --->   Operation 152 'bitselect' 'tmp_27' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 153 [1/1] (1.01ns)   --->   "%k1_3 = add i32 %k1_2, i32 1" [d1.cpp:70]   --->   Operation 153 'add' 'k1_3' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (1.01ns)   --->   "%k_3 = add i32 %k_2, i32 1" [d1.cpp:70]   --->   Operation 154 'add' 'k_3' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 155 [1/1] (0.44ns)   --->   "%k_4 = select i1 %tmp_27, i32 %k_3, i32 %k_2" [d1.cpp:70]   --->   Operation 155 'select' 'k_4' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.44ns)   --->   "%k1_4 = select i1 %tmp_27, i32 %k1_3, i32 %k1_2" [d1.cpp:70]   --->   Operation 156 'select' 'k1_4' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln72_2 = trunc i32 %k_4" [d1.cpp:72]   --->   Operation 157 'trunc' 'trunc_ln72_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.00ns)   --->   "%trunc_ln72_3 = trunc i32 %k1_4" [d1.cpp:72]   --->   Operation 158 'trunc' 'trunc_ln72_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 159 [1/1] (0.79ns)   --->   "%cmp159_1 = icmp_ugt  i4 %add_ln70_1, i4 6" [d1.cpp:70]   --->   Operation 159 'icmp' 'cmp159_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%xor_ln79 = xor i4 %k_load_42, i4 8" [d1.cpp:79]   --->   Operation 160 'xor' 'xor_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%select_ln79 = select i1 %cmp159_1, i4 15, i4 0" [d1.cpp:79]   --->   Operation 161 'select' 'select_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36 = add i4 %xor_ln79, i4 %select_ln79" [d1.cpp:36]   --->   Operation 162 'add' 'add_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i1 %cmp159_1" [d1.cpp:79]   --->   Operation 163 'zext' 'zext_ln79_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 164 [1/1] (0.79ns)   --->   "%sub_ln80_16 = sub i4 %add_ln36, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 164 'sub' 'sub_ln80_16' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 165 [1/1] (0.79ns)   --->   "%icmp_ln80_9 = icmp_eq  i4 %i_1, i4 15" [d1.cpp:80]   --->   Operation 165 'icmp' 'icmp_ln80_9' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_22)   --->   "%select_ln78_2 = select i1 %icmp_ln80_9, i3 6, i3 7" [d1.cpp:78]   --->   Operation 166 'select' 'select_ln78_2' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (0.79ns)   --->   "%sub_ln80_17 = sub i4 %sub_ln80_16, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 167 'sub' 'sub_ln80_17' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.79ns)   --->   "%icmp_ln80_10 = icmp_ugt  i4 %i_1, i4 13" [d1.cpp:80]   --->   Operation 168 'icmp' 'icmp_ln80_10' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_22)   --->   "%zext_ln36_2 = zext i1 %icmp_ln80_10" [d1.cpp:36]   --->   Operation 169 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 170 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_22 = sub i3 %select_ln78_2, i3 %zext_ln36_2" [d1.cpp:36]   --->   Operation 170 'sub' 'sub_ln36_22' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.79ns)   --->   "%sub_ln80_3 = sub i4 %sub_ln80_17, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 171 'sub' 'sub_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.79ns)   --->   "%icmp_ln80_11 = icmp_ugt  i4 %i_1, i4 12" [d1.cpp:80]   --->   Operation 172 'icmp' 'icmp_ln80_11' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i1 %icmp_ln80_11" [d1.cpp:36]   --->   Operation 173 'zext' 'zext_ln36_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 174 [1/1] (0.67ns)   --->   "%sub_ln36_23 = sub i3 %sub_ln36_22, i3 %zext_ln36_3" [d1.cpp:36]   --->   Operation 174 'sub' 'sub_ln36_23' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.00ns)   --->   "%sext_ln78_6 = sext i3 %sub_ln36_23" [d1.cpp:78]   --->   Operation 175 'sext' 'sext_ln78_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 176 [1/1] (0.79ns)   --->   "%sub_ln80_4 = sub i4 %sub_ln80_3, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 176 'sub' 'sub_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 177 [1/1] (0.79ns)   --->   "%icmp_ln80_12 = icmp_ugt  i4 %i_1, i4 11" [d1.cpp:80]   --->   Operation 177 'icmp' 'icmp_ln80_12' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln81_7 = zext i1 %icmp_ln80_12" [d1.cpp:81]   --->   Operation 178 'zext' 'zext_ln81_7' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 179 [1/1] (0.67ns)   --->   "%sub_ln36_24 = sub i4 %sext_ln78_6, i4 %zext_ln81_7" [d1.cpp:36]   --->   Operation 179 'sub' 'sub_ln36_24' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (0.79ns)   --->   "%icmp_ln80_13 = icmp_ugt  i4 %i_1, i4 10" [d1.cpp:80]   --->   Operation 180 'icmp' 'icmp_ln80_13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln81_8 = zext i1 %icmp_ln80_13" [d1.cpp:81]   --->   Operation 181 'zext' 'zext_ln81_8' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 182 [1/1] (0.79ns)   --->   "%sub_ln36_25 = sub i4 %sub_ln36_24, i4 %zext_ln81_8" [d1.cpp:36]   --->   Operation 182 'sub' 'sub_ln36_25' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.79ns)   --->   "%icmp_ln80_14 = icmp_ugt  i4 %i_1, i4 9" [d1.cpp:80]   --->   Operation 183 'icmp' 'icmp_ln80_14' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln81_9 = zext i1 %icmp_ln80_14" [d1.cpp:81]   --->   Operation 184 'zext' 'zext_ln81_9' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 185 [1/1] (0.79ns)   --->   "%sub_ln36_26 = sub i4 %sub_ln36_25, i4 %zext_ln81_9" [d1.cpp:36]   --->   Operation 185 'sub' 'sub_ln36_26' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.79ns)   --->   "%icmp_ln80_15 = icmp_ugt  i4 %i_1, i4 8" [d1.cpp:80]   --->   Operation 186 'icmp' 'icmp_ln80_15' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln81_10 = zext i1 %icmp_ln80_15" [d1.cpp:81]   --->   Operation 187 'zext' 'zext_ln81_10' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 188 [1/1] (0.79ns)   --->   "%sub_ln36_27 = sub i4 %sub_ln36_26, i4 %zext_ln81_10" [d1.cpp:36]   --->   Operation 188 'sub' 'sub_ln36_27' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (0.79ns)   --->   "%add_ln70_5 = add i5 %zext_ln62, i5 30" [d1.cpp:70]   --->   Operation 189 'add' 'add_ln70_5' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (0.00ns)   --->   "%tmp_51 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln70_5, i32 3, i32 4" [d1.cpp:70]   --->   Operation 190 'partselect' 'tmp_51' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 191 [1/1] (0.54ns)   --->   "%icmp_ln70 = icmp_eq  i2 %tmp_51, i2 1" [d1.cpp:70]   --->   Operation 191 'icmp' 'icmp_ln70' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 192 [1/1] (1.01ns)   --->   "%k1_5 = add i32 %k1_4, i32 1" [d1.cpp:70]   --->   Operation 192 'add' 'k1_5' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (1.01ns)   --->   "%k_5 = add i32 %k_4, i32 1" [d1.cpp:70]   --->   Operation 193 'add' 'k_5' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 194 [1/1] (0.44ns)   --->   "%k_6 = select i1 %icmp_ln70, i32 %k_5, i32 %k_4" [d1.cpp:70]   --->   Operation 194 'select' 'k_6' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.44ns)   --->   "%k1_6 = select i1 %icmp_ln70, i32 %k1_5, i32 %k1_4" [d1.cpp:70]   --->   Operation 195 'select' 'k1_6' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln72_4 = trunc i32 %k_6" [d1.cpp:72]   --->   Operation 196 'trunc' 'trunc_ln72_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 197 [1/1] (0.00ns)   --->   "%trunc_ln72_5 = trunc i32 %k1_6" [d1.cpp:72]   --->   Operation 197 'trunc' 'trunc_ln72_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 198 [1/1] (0.78ns)   --->   "%cmp159_2 = icmp_sgt  i5 %add_ln70_5, i5 6" [d1.cpp:70]   --->   Operation 198 'icmp' 'cmp159_2' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_1)   --->   "%select_ln36 = select i1 %cmp159_2, i4 8, i4 9" [d1.cpp:36]   --->   Operation 199 'select' 'select_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_1 = add i4 %select_ln36, i4 %k_load_42" [d1.cpp:36]   --->   Operation 200 'add' 'add_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i1 %cmp159_2" [d1.cpp:79]   --->   Operation 201 'zext' 'zext_ln79_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 202 [1/1] (0.79ns)   --->   "%sub_ln80_18 = sub i4 %add_ln36_1, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 202 'sub' 'sub_ln80_18' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.79ns)   --->   "%sub_ln80_19 = sub i4 %sub_ln80_18, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 203 'sub' 'sub_ln80_19' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 204 [1/1] (0.79ns)   --->   "%icmp_ln80_17 = icmp_ugt  i4 %add_ln70_1, i4 13" [d1.cpp:80]   --->   Operation 204 'icmp' 'icmp_ln80_17' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_28)   --->   "%select_ln78_4 = select i1 %icmp_ln80_17, i3 6, i3 7" [d1.cpp:78]   --->   Operation 205 'select' 'select_ln78_4' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 206 [1/1] (0.79ns)   --->   "%sub_ln80_6 = sub i4 %sub_ln80_19, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 206 'sub' 'sub_ln80_6' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.79ns)   --->   "%icmp_ln80_18 = icmp_ugt  i4 %add_ln70_1, i4 12" [d1.cpp:80]   --->   Operation 207 'icmp' 'icmp_ln80_18' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_28)   --->   "%zext_ln36_4 = zext i1 %icmp_ln80_18" [d1.cpp:36]   --->   Operation 208 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 209 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_28 = sub i3 %select_ln78_4, i3 %zext_ln36_4" [d1.cpp:36]   --->   Operation 209 'sub' 'sub_ln36_28' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.79ns)   --->   "%sub_ln80_7 = sub i4 %sub_ln80_6, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 210 'sub' 'sub_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 211 [1/1] (0.79ns)   --->   "%icmp_ln80_19 = icmp_ugt  i4 %add_ln70_1, i4 11" [d1.cpp:80]   --->   Operation 211 'icmp' 'icmp_ln80_19' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i1 %icmp_ln80_19" [d1.cpp:36]   --->   Operation 212 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 213 [1/1] (0.67ns)   --->   "%sub_ln36_29 = sub i3 %sub_ln36_28, i3 %zext_ln36_5" [d1.cpp:36]   --->   Operation 213 'sub' 'sub_ln36_29' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (0.00ns)   --->   "%sext_ln78_8 = sext i3 %sub_ln36_29" [d1.cpp:78]   --->   Operation 214 'sext' 'sext_ln78_8' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 215 [1/1] (0.79ns)   --->   "%icmp_ln80_20 = icmp_ugt  i4 %add_ln70_1, i4 10" [d1.cpp:80]   --->   Operation 215 'icmp' 'icmp_ln80_20' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln81_12 = zext i1 %icmp_ln80_20" [d1.cpp:81]   --->   Operation 216 'zext' 'zext_ln81_12' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 217 [1/1] (0.67ns)   --->   "%sub_ln36_30 = sub i4 %sext_ln78_8, i4 %zext_ln81_12" [d1.cpp:36]   --->   Operation 217 'sub' 'sub_ln36_30' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 218 [1/1] (0.79ns)   --->   "%icmp_ln80_21 = icmp_ugt  i4 %add_ln70_1, i4 9" [d1.cpp:80]   --->   Operation 218 'icmp' 'icmp_ln80_21' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln81_13 = zext i1 %icmp_ln80_21" [d1.cpp:81]   --->   Operation 219 'zext' 'zext_ln81_13' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 220 [1/1] (0.79ns)   --->   "%sub_ln36_31 = sub i4 %sub_ln36_30, i4 %zext_ln81_13" [d1.cpp:36]   --->   Operation 220 'sub' 'sub_ln36_31' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 221 [1/1] (0.79ns)   --->   "%icmp_ln80_22 = icmp_ugt  i4 %add_ln70_1, i4 8" [d1.cpp:80]   --->   Operation 221 'icmp' 'icmp_ln80_22' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 222 [1/1] (0.00ns)   --->   "%zext_ln81_14 = zext i1 %icmp_ln80_22" [d1.cpp:81]   --->   Operation 222 'zext' 'zext_ln81_14' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 223 [1/1] (0.79ns)   --->   "%sub_ln36_32 = sub i4 %sub_ln36_31, i4 %zext_ln81_14" [d1.cpp:36]   --->   Operation 223 'sub' 'sub_ln36_32' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 224 [1/1] (0.00ns)   --->   "%tmp_67 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln70_1, i32 3" [d1.cpp:80]   --->   Operation 224 'bitselect' 'tmp_67' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 225 [1/1] (0.79ns)   --->   "%icmp_ln80_23 = icmp_ugt  i4 %add_ln70_1, i4 5" [d1.cpp:80]   --->   Operation 225 'icmp' 'icmp_ln80_23' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 226 [1/1] (0.79ns)   --->   "%icmp_ln80_24 = icmp_ugt  i4 %add_ln70_1, i4 4" [d1.cpp:80]   --->   Operation 226 'icmp' 'icmp_ln80_24' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.79ns)   --->   "%add_ln70_9 = add i5 %zext_ln62, i5 29" [d1.cpp:70]   --->   Operation 227 'add' 'add_ln70_9' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 228 [1/1] (0.00ns)   --->   "%tmp_74 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln70_9, i32 3, i32 4" [d1.cpp:70]   --->   Operation 228 'partselect' 'tmp_74' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 229 [1/1] (0.54ns)   --->   "%icmp_ln70_1 = icmp_eq  i2 %tmp_74, i2 1" [d1.cpp:70]   --->   Operation 229 'icmp' 'icmp_ln70_1' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 230 [1/1] (1.01ns)   --->   "%k1_7 = add i32 %k1_6, i32 1" [d1.cpp:70]   --->   Operation 230 'add' 'k1_7' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (1.01ns)   --->   "%k_7 = add i32 %k_6, i32 1" [d1.cpp:70]   --->   Operation 231 'add' 'k_7' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 232 [1/1] (0.44ns)   --->   "%k_8 = select i1 %icmp_ln70_1, i32 %k_7, i32 %k_6" [d1.cpp:70]   --->   Operation 232 'select' 'k_8' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.44ns)   --->   "%k1_8 = select i1 %icmp_ln70_1, i32 %k1_7, i32 %k1_6" [d1.cpp:70]   --->   Operation 233 'select' 'k1_8' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln72_6 = trunc i32 %k_8" [d1.cpp:72]   --->   Operation 234 'trunc' 'trunc_ln72_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln72_7 = trunc i32 %k1_8" [d1.cpp:72]   --->   Operation 235 'trunc' 'trunc_ln72_7' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 236 [1/1] (0.78ns)   --->   "%cmp159_3 = icmp_sgt  i5 %add_ln70_9, i5 6" [d1.cpp:70]   --->   Operation 236 'icmp' 'cmp159_3' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_2)   --->   "%select_ln36_1 = select i1 %cmp159_3, i4 9, i4 10" [d1.cpp:36]   --->   Operation 237 'select' 'select_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_2 = add i4 %select_ln36_1, i4 %k_load_42" [d1.cpp:36]   --->   Operation 238 'add' 'add_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln79_3 = zext i1 %cmp159_3" [d1.cpp:79]   --->   Operation 239 'zext' 'zext_ln79_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 240 [1/1] (0.79ns)   --->   "%sub_ln80_20 = sub i4 %add_ln36_2, i4 %zext_ln79_3" [d1.cpp:80]   --->   Operation 240 'sub' 'sub_ln80_20' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 241 [1/1] (0.79ns)   --->   "%sub_ln36_34 = sub i4 %sub_ln80_20, i4 %zext_ln79_3" [d1.cpp:36]   --->   Operation 241 'sub' 'sub_ln36_34' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.79ns)   --->   "%sub_ln80_9 = sub i4 %sub_ln36_34, i4 %zext_ln79_3" [d1.cpp:80]   --->   Operation 242 'sub' 'sub_ln80_9' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 243 [1/1] (0.78ns)   --->   "%icmp_ln80_25 = icmp_sgt  i5 %add_ln70_5, i5 12" [d1.cpp:80]   --->   Operation 243 'icmp' 'icmp_ln80_25' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_35)   --->   "%select_ln78_6 = select i1 %icmp_ln80_25, i3 6, i3 7" [d1.cpp:78]   --->   Operation 244 'select' 'select_ln78_6' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 245 [1/1] (0.78ns)   --->   "%icmp_ln80_26 = icmp_sgt  i5 %add_ln70_5, i5 11" [d1.cpp:80]   --->   Operation 245 'icmp' 'icmp_ln80_26' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_35)   --->   "%zext_ln36_6 = zext i1 %icmp_ln80_26" [d1.cpp:36]   --->   Operation 246 'zext' 'zext_ln36_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 247 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_35 = sub i3 %select_ln78_6, i3 %zext_ln36_6" [d1.cpp:36]   --->   Operation 247 'sub' 'sub_ln36_35' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 248 [1/1] (0.78ns)   --->   "%icmp_ln80_27 = icmp_sgt  i5 %add_ln70_5, i5 10" [d1.cpp:80]   --->   Operation 248 'icmp' 'icmp_ln80_27' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln36_7 = zext i1 %icmp_ln80_27" [d1.cpp:36]   --->   Operation 249 'zext' 'zext_ln36_7' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 250 [1/1] (0.67ns)   --->   "%sub_ln36_36 = sub i3 %sub_ln36_35, i3 %zext_ln36_7" [d1.cpp:36]   --->   Operation 250 'sub' 'sub_ln36_36' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 251 [1/1] (0.00ns)   --->   "%sext_ln78_10 = sext i3 %sub_ln36_36" [d1.cpp:78]   --->   Operation 251 'sext' 'sext_ln78_10' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 252 [1/1] (0.78ns)   --->   "%icmp_ln80_28 = icmp_sgt  i5 %add_ln70_5, i5 9" [d1.cpp:80]   --->   Operation 252 'icmp' 'icmp_ln80_28' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln81_17 = zext i1 %icmp_ln80_28" [d1.cpp:81]   --->   Operation 253 'zext' 'zext_ln81_17' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 254 [1/1] (0.67ns)   --->   "%sub_ln36_37 = sub i4 %sext_ln78_10, i4 %zext_ln81_17" [d1.cpp:36]   --->   Operation 254 'sub' 'sub_ln36_37' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 255 [1/1] (0.78ns)   --->   "%icmp_ln80_29 = icmp_sgt  i5 %add_ln70_5, i5 8" [d1.cpp:80]   --->   Operation 255 'icmp' 'icmp_ln80_29' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 256 [1/1] (0.00ns)   --->   "%zext_ln81_18 = zext i1 %icmp_ln80_29" [d1.cpp:81]   --->   Operation 256 'zext' 'zext_ln81_18' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 257 [1/1] (0.79ns)   --->   "%sub_ln36_38 = sub i4 %sub_ln36_37, i4 %zext_ln81_18" [d1.cpp:36]   --->   Operation 257 'sub' 'sub_ln36_38' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 258 [1/1] (0.78ns)   --->   "%icmp_ln80_30 = icmp_sgt  i5 %add_ln70_5, i5 5" [d1.cpp:80]   --->   Operation 258 'icmp' 'icmp_ln80_30' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 259 [1/1] (0.78ns)   --->   "%icmp_ln80_31 = icmp_sgt  i5 %add_ln70_5, i5 4" [d1.cpp:80]   --->   Operation 259 'icmp' 'icmp_ln80_31' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 260 [1/1] (0.00ns)   --->   "%tmp_93 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln70_5, i32 2, i32 4" [d1.cpp:80]   --->   Operation 260 'partselect' 'tmp_93' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 261 [1/1] (0.67ns)   --->   "%icmp_ln80_32 = icmp_sgt  i3 %tmp_93, i3 0" [d1.cpp:80]   --->   Operation 261 'icmp' 'icmp_ln80_32' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 262 [1/1] (0.79ns)   --->   "%add_ln68 = add i4 %k_load_42, i4 5" [d1.cpp:68]   --->   Operation 262 'add' 'add_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 263 [1/1] (0.79ns)   --->   "%add_ln70_13 = add i5 %zext_ln62, i5 28" [d1.cpp:70]   --->   Operation 263 'add' 'add_ln70_13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_96 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln70_13, i32 3, i32 4" [d1.cpp:70]   --->   Operation 264 'partselect' 'tmp_96' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 265 [1/1] (0.54ns)   --->   "%icmp_ln70_2 = icmp_eq  i2 %tmp_96, i2 1" [d1.cpp:70]   --->   Operation 265 'icmp' 'icmp_ln70_2' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (1.01ns)   --->   "%k1_9 = add i32 %k1_8, i32 1" [d1.cpp:70]   --->   Operation 266 'add' 'k1_9' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 267 [1/1] (1.01ns)   --->   "%k_9 = add i32 %k_8, i32 1" [d1.cpp:70]   --->   Operation 267 'add' 'k_9' <Predicate = (!icmp_ln62)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.44ns)   --->   "%k_10 = select i1 %icmp_ln70_2, i32 %k_9, i32 %k_8" [d1.cpp:70]   --->   Operation 268 'select' 'k_10' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.44ns)   --->   "%k1_10 = select i1 %icmp_ln70_2, i32 %k1_9, i32 %k1_8" [d1.cpp:70]   --->   Operation 269 'select' 'k1_10' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.78ns)   --->   "%cmp159_4 = icmp_sgt  i5 %add_ln70_13, i5 6" [d1.cpp:70]   --->   Operation 270 'icmp' 'cmp159_4' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_3)   --->   "%select_ln36_2 = select i1 %cmp159_4, i4 10, i4 11" [d1.cpp:36]   --->   Operation 271 'select' 'select_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_3 = add i4 %select_ln36_2, i4 %k_load_42" [d1.cpp:36]   --->   Operation 272 'add' 'add_ln36_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln79_4 = zext i1 %cmp159_4" [d1.cpp:79]   --->   Operation 273 'zext' 'zext_ln79_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 274 [1/1] (0.79ns)   --->   "%sub_ln80_21 = sub i4 %add_ln36_3, i4 %zext_ln79_4" [d1.cpp:80]   --->   Operation 274 'sub' 'sub_ln80_21' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.79ns)   --->   "%sub_ln36_41 = sub i4 %sub_ln80_21, i4 %zext_ln79_4" [d1.cpp:36]   --->   Operation 275 'sub' 'sub_ln36_41' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 276 [1/1] (0.79ns)   --->   "%sub_ln36_18 = sub i4 %sub_ln36_41, i4 %zext_ln79_4" [d1.cpp:36]   --->   Operation 276 'sub' 'sub_ln36_18' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.79ns)   --->   "%sub_ln80_12 = sub i4 %sub_ln36_18, i4 %zext_ln79_4" [d1.cpp:80]   --->   Operation 277 'sub' 'sub_ln80_12' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.78ns)   --->   "%icmp_ln80_33 = icmp_sgt  i5 %add_ln70_9, i5 11" [d1.cpp:80]   --->   Operation 278 'icmp' 'icmp_ln80_33' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_42)   --->   "%select_ln78_8 = select i1 %icmp_ln80_33, i3 6, i3 7" [d1.cpp:78]   --->   Operation 279 'select' 'select_ln78_8' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.78ns)   --->   "%icmp_ln80_34 = icmp_sgt  i5 %add_ln70_9, i5 10" [d1.cpp:80]   --->   Operation 280 'icmp' 'icmp_ln80_34' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_42)   --->   "%zext_ln36_8 = zext i1 %icmp_ln80_34" [d1.cpp:36]   --->   Operation 281 'zext' 'zext_ln36_8' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 282 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_42 = sub i3 %select_ln78_8, i3 %zext_ln36_8" [d1.cpp:36]   --->   Operation 282 'sub' 'sub_ln36_42' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 283 [1/1] (0.78ns)   --->   "%icmp_ln80_35 = icmp_sgt  i5 %add_ln70_9, i5 9" [d1.cpp:80]   --->   Operation 283 'icmp' 'icmp_ln80_35' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.00ns)   --->   "%zext_ln36_9 = zext i1 %icmp_ln80_35" [d1.cpp:36]   --->   Operation 284 'zext' 'zext_ln36_9' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 285 [1/1] (0.67ns)   --->   "%sub_ln36_43 = sub i3 %sub_ln36_42, i3 %zext_ln36_9" [d1.cpp:36]   --->   Operation 285 'sub' 'sub_ln36_43' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 286 [1/1] (0.00ns)   --->   "%sext_ln80 = sext i3 %sub_ln36_43" [d1.cpp:80]   --->   Operation 286 'sext' 'sext_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 287 [1/1] (0.78ns)   --->   "%icmp_ln80_36 = icmp_sgt  i5 %add_ln70_9, i5 8" [d1.cpp:80]   --->   Operation 287 'icmp' 'icmp_ln80_36' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 288 [1/1] (0.00ns)   --->   "%zext_ln81_23 = zext i1 %icmp_ln80_36" [d1.cpp:81]   --->   Operation 288 'zext' 'zext_ln81_23' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 289 [1/1] (0.67ns)   --->   "%sub_ln36_44 = sub i4 %sext_ln80, i4 %zext_ln81_23" [d1.cpp:36]   --->   Operation 289 'sub' 'sub_ln36_44' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 290 [1/1] (0.78ns)   --->   "%icmp_ln80_37 = icmp_sgt  i5 %add_ln70_9, i5 5" [d1.cpp:80]   --->   Operation 290 'icmp' 'icmp_ln80_37' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 291 [1/1] (0.78ns)   --->   "%icmp_ln80_38 = icmp_sgt  i5 %add_ln70_9, i5 4" [d1.cpp:80]   --->   Operation 291 'icmp' 'icmp_ln80_38' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 292 [1/1] (0.00ns)   --->   "%tmp_114 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %add_ln70_9, i32 2, i32 4" [d1.cpp:80]   --->   Operation 292 'partselect' 'tmp_114' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 293 [1/1] (0.67ns)   --->   "%icmp_ln80_39 = icmp_sgt  i3 %tmp_114, i3 0" [d1.cpp:80]   --->   Operation 293 'icmp' 'icmp_ln80_39' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.78ns)   --->   "%icmp_ln80_40 = icmp_sgt  i5 %add_ln70_9, i5 2" [d1.cpp:80]   --->   Operation 294 'icmp' 'icmp_ln80_40' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.79ns)   --->   "%add_ln62 = add i4 %i_1, i4 11" [d1.cpp:62]   --->   Operation 295 'add' 'add_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln62, i4 %i" [d1.cpp:62]   --->   Operation 296 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 297 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln68, i4 %k" [d1.cpp:62]   --->   Operation 297 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 298 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k1_10, i32 %k1" [d1.cpp:62]   --->   Operation 298 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 299 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k_10, i32 %k_s" [d1.cpp:62]   --->   Operation 299 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.15>
ST_3 : Operation 300 [1/1] (0.00ns)   --->   "%add169813_load = load i64 %add169813" [d1.cpp:78]   --->   Operation 300 'load' 'add169813_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 301 [1/1] (0.00ns)   --->   "%p_load108 = load i64 %empty" [d1.cpp:80]   --->   Operation 301 'load' 'p_load108' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 302 [1/1] (0.00ns)   --->   "%p_load106 = load i64 %empty_35" [d1.cpp:80]   --->   Operation 302 'load' 'p_load106' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 303 [1/1] (0.00ns)   --->   "%p_load104 = load i64 %empty_36" [d1.cpp:80]   --->   Operation 303 'load' 'p_load104' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 304 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62_1" [d1.cpp:70]   --->   Operation 304 'mux' 'tmp_2' <Predicate = (tmp_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 305 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %tmp_2" [d1.cpp:70]   --->   Operation 305 'zext' 'zext_ln70' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 306 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62" [d1.cpp:70]   --->   Operation 306 'mux' 'tmp_3' <Predicate = (tmp_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 307 [1/1] (0.00ns)   --->   "%tmp_13_cast = zext i32 %tmp_3" [d1.cpp:70]   --->   Operation 307 'zext' 'tmp_13_cast' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 308 [1/1] (1.01ns)   --->   "%tmp = add i33 %tmp_13_cast, i33 %zext_ln70" [d1.cpp:70]   --->   Operation 308 'add' 'tmp' <Predicate = (tmp_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 309 [1/1] (0.00ns)   --->   "%tmp_cast = zext i33 %tmp" [d1.cpp:70]   --->   Operation 309 'zext' 'tmp_cast' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : [1/1] (0.66ns)   --->   Input mux for Operation 310 '%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78'
ST_3 : Operation 310 [1/1] (2.75ns)   --->   "%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78" [d1.cpp:70]   --->   Operation 310 'mul' 'tmp15' <Predicate = (tmp_1)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 311 [1/1] (0.73ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i4 %k_load_42" [d1.cpp:78]   --->   Operation 311 'mux' 'tmp_4' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i32 %tmp_4" [d1.cpp:78]   --->   Operation 312 'zext' 'zext_ln78_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 313 '%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78'
ST_3 : Operation 313 [1/1] (2.10ns)   --->   "%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 313 'mul' 'mul_ln80' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 314 [1/1] (0.17ns)   --->   "%select_ln80_6 = select i1 %cmp159, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 314 'select' 'select_ln80_6' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 315 [1/1] (0.37ns)   --->   "%and_ln80 = and i64 %mul_ln80, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 315 'and' 'and_ln80' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 316 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln80" [d1.cpp:78]   --->   Operation 316 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 317 [1/1] (0.00ns)   --->   "%zext_ln78_2 = zext i32 %tmp_7" [d1.cpp:78]   --->   Operation 317 'zext' 'zext_ln78_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 318 [1/1] (0.44ns)   --->   "%select_ln80 = select i1 %tmp_5, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 318 'select' 'select_ln80' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 319 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %select_ln80" [d1.cpp:80]   --->   Operation 319 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 320 '%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78'
ST_3 : Operation 320 [1/1] (2.10ns)   --->   "%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 320 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 321 [1/1] (0.37ns)   --->   "%and_ln80_2 = and i64 %mul_ln80_2, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 321 'and' 'and_ln80_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 322 '%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78'
ST_3 : Operation 322 [1/1] (2.10ns)   --->   "%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 322 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_3)   --->   "%select_ln80_8 = select i1 %icmp_ln80, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 323 'select' 'select_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 324 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_3 = and i64 %mul_ln80_3, i64 %select_ln80_8" [d1.cpp:80]   --->   Operation 324 'and' 'and_ln80_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 325 [1/1] (0.00ns)   --->   "%sext_ln78_4 = sext i3 %sub_ln36" [d1.cpp:78]   --->   Operation 325 'sext' 'sext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 326 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_14" [d1.cpp:78]   --->   Operation 326 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 327 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i32 %tmp_8" [d1.cpp:78]   --->   Operation 327 'zext' 'zext_ln78_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 328 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_4" [d1.cpp:80]   --->   Operation 328 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i32 %tmp_9" [d1.cpp:80]   --->   Operation 329 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 330 '%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78'
ST_3 : Operation 330 [1/1] (2.10ns)   --->   "%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 330 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 331 [1/1] (0.37ns)   --->   "%and_ln80_4 = and i64 %mul_ln80_4, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 331 'and' 'and_ln80_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 332 '%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78'
ST_3 : Operation 332 [1/1] (2.10ns)   --->   "%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 332 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_5)   --->   "%select_ln80_9 = select i1 %icmp_ln80_1, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 333 'select' 'select_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 334 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_5 = and i64 %mul_ln80_5, i64 %select_ln80_9" [d1.cpp:80]   --->   Operation 334 'and' 'and_ln80_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 335 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_15" [d1.cpp:78]   --->   Operation 335 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 336 [1/1] (0.00ns)   --->   "%zext_ln78_4 = zext i32 %tmp_10" [d1.cpp:78]   --->   Operation 336 'zext' 'zext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 337 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_5" [d1.cpp:80]   --->   Operation 337 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 338 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i32 %tmp_11" [d1.cpp:80]   --->   Operation 338 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 339 '%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78'
ST_3 : Operation 339 [1/1] (2.10ns)   --->   "%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 339 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 340 [1/1] (0.37ns)   --->   "%and_ln80_6 = and i64 %mul_ln80_6, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 340 'and' 'and_ln80_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 341 '%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78'
ST_3 : Operation 341 [1/1] (2.10ns)   --->   "%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 341 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_7)   --->   "%select_ln80_10 = select i1 %icmp_ln80_2, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 342 'select' 'select_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 343 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_7 = and i64 %mul_ln80_7, i64 %select_ln80_10" [d1.cpp:80]   --->   Operation 343 'and' 'and_ln80_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 344 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80" [d1.cpp:78]   --->   Operation 344 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 345 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i32 %tmp_12" [d1.cpp:78]   --->   Operation 345 'zext' 'zext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 346 [1/1] (0.79ns)   --->   "%sub_ln80_1 = sub i4 %sub_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 346 'sub' 'sub_ln80_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 347 [1/1] (0.48ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d1.cpp:80]   --->   Operation 347 'mux' 'tmp_13' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i32 %tmp_13" [d1.cpp:80]   --->   Operation 348 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 349 '%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78'
ST_3 : Operation 349 [1/1] (2.10ns)   --->   "%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 349 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 350 [1/1] (0.37ns)   --->   "%and_ln80_8 = and i64 %mul_ln80_8, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 350 'and' 'and_ln80_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 351 '%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78'
ST_3 : Operation 351 [1/1] (2.10ns)   --->   "%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 351 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_9)   --->   "%select_ln80_11 = select i1 %icmp_ln80_3, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 352 'select' 'select_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 353 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_9 = and i64 %mul_ln80_9, i64 %select_ln80_11" [d1.cpp:80]   --->   Operation 353 'and' 'and_ln80_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 354 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_1" [d1.cpp:78]   --->   Operation 354 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 355 [1/1] (0.00ns)   --->   "%zext_ln78_6 = zext i32 %tmp_14" [d1.cpp:78]   --->   Operation 355 'zext' 'zext_ln78_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 356 [1/1] (0.79ns)   --->   "%sub_ln80_2 = sub i4 %sub_ln80_1, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 356 'sub' 'sub_ln80_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 357 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d1.cpp:80]   --->   Operation 357 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 358 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i32 %tmp_15" [d1.cpp:80]   --->   Operation 358 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 359 '%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78'
ST_3 : Operation 359 [1/1] (2.10ns)   --->   "%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 359 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 360 [1/1] (0.37ns)   --->   "%and_ln80_10 = and i64 %mul_ln80_10, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 360 'and' 'and_ln80_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 361 '%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78'
ST_3 : Operation 361 [1/1] (2.10ns)   --->   "%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 361 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_11)   --->   "%select_ln80_12 = select i1 %icmp_ln80_4, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 362 'select' 'select_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 363 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_11 = and i64 %mul_ln80_11, i64 %select_ln80_12" [d1.cpp:80]   --->   Operation 363 'and' 'and_ln80_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 364 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_2" [d1.cpp:78]   --->   Operation 364 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 365 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i32 %tmp_16" [d1.cpp:78]   --->   Operation 365 'zext' 'zext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 366 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d1.cpp:80]   --->   Operation 366 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 367 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i32 %tmp_17" [d1.cpp:80]   --->   Operation 367 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 368 '%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78'
ST_3 : Operation 368 [1/1] (2.10ns)   --->   "%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 368 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 369 [1/1] (0.37ns)   --->   "%and_ln80_12 = and i64 %mul_ln80_12, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 369 'and' 'and_ln80_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 370 '%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78'
ST_3 : Operation 370 [1/1] (2.10ns)   --->   "%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 370 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_13)   --->   "%select_ln80_13 = select i1 %icmp_ln80_5, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 371 'select' 'select_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 372 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_13 = and i64 %mul_ln80_13, i64 %select_ln80_13" [d1.cpp:80]   --->   Operation 372 'and' 'and_ln80_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 373 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d1.cpp:80]   --->   Operation 373 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 374 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i32 %tmp_18" [d1.cpp:80]   --->   Operation 374 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 375 '%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78'
ST_3 : Operation 375 [1/1] (2.10ns)   --->   "%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 375 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%select_ln80_14 = select i1 %icmp_ln80_6, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 376 'select' 'select_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%and_ln80_14 = and i64 %mul_ln80_14, i64 %select_ln80_14" [d1.cpp:80]   --->   Operation 377 'and' 'and_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 378 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_6" [d1.cpp:80]   --->   Operation 378 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 379 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i32 %tmp_19" [d1.cpp:80]   --->   Operation 379 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 380 '%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78'
ST_3 : Operation 380 [1/1] (2.10ns)   --->   "%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 380 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_36)   --->   "%select_ln80_15 = select i1 %icmp_ln80_7, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 381 'select' 'select_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_36)   --->   "%and_ln80_15 = and i64 %mul_ln80_15, i64 %select_ln80_15" [d1.cpp:80]   --->   Operation 382 'and' 'and_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln81_5 = zext i1 %icmp_ln80_7" [d1.cpp:81]   --->   Operation 383 'zext' 'zext_ln81_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 384 [1/1] (0.79ns)   --->   "%sub_ln36_7 = sub i4 %sub_ln36_6, i4 %zext_ln81_5" [d1.cpp:36]   --->   Operation 384 'sub' 'sub_ln36_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 385 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_7" [d1.cpp:80]   --->   Operation 385 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i32 %tmp_21" [d1.cpp:80]   --->   Operation 386 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 387 '%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78'
ST_3 : Operation 387 [1/1] (2.10ns)   --->   "%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 387 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_41)   --->   "%select_ln80_16 = select i1 %icmp_ln80_8, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 388 'select' 'select_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_41)   --->   "%and_ln80_16 = and i64 %mul_ln80_16, i64 %select_ln80_16" [d1.cpp:80]   --->   Operation 389 'and' 'and_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 390 [1/1] (0.00ns)   --->   "%zext_ln81_6 = zext i1 %icmp_ln80_8" [d1.cpp:81]   --->   Operation 390 'zext' 'zext_ln81_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 391 [1/1] (0.79ns)   --->   "%sub_ln36_8 = sub i4 %sub_ln36_7, i4 %zext_ln81_6" [d1.cpp:36]   --->   Operation 391 'sub' 'sub_ln36_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 392 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 392 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 393 [1/1] (0.00ns)   --->   "%zext_ln78_8 = zext i32 %tmp_28" [d1.cpp:78]   --->   Operation 393 'zext' 'zext_ln78_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 394 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_1" [d1.cpp:70]   --->   Operation 394 'mux' 'tmp_29' <Predicate = (tmp_27)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 395 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i32 %tmp_29" [d1.cpp:70]   --->   Operation 395 'zext' 'zext_ln70_1' <Predicate = (tmp_27)> <Delay = 0.00>
ST_3 : Operation 396 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72" [d1.cpp:70]   --->   Operation 396 'mux' 'tmp_30' <Predicate = (tmp_27)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 397 [1/1] (0.00ns)   --->   "%tmp_36_cast = zext i32 %tmp_30" [d1.cpp:70]   --->   Operation 397 'zext' 'tmp_36_cast' <Predicate = (tmp_27)> <Delay = 0.00>
ST_3 : Operation 398 [1/1] (1.01ns)   --->   "%tmp32 = add i33 %tmp_36_cast, i33 %zext_ln70_1" [d1.cpp:70]   --->   Operation 398 'add' 'tmp32' <Predicate = (tmp_27)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 399 [1/1] (0.00ns)   --->   "%tmp32_cast = zext i33 %tmp32" [d1.cpp:70]   --->   Operation 399 'zext' 'tmp32_cast' <Predicate = (tmp_27)> <Delay = 0.00>
ST_3 : [1/1] (0.66ns)   --->   Input mux for Operation 400 '%tmp33 = mul i64 %tmp32_cast, i64 %zext_ln78_8'
ST_3 : Operation 400 [1/1] (2.75ns)   --->   "%tmp33 = mul i64 %tmp32_cast, i64 %zext_ln78_8" [d1.cpp:70]   --->   Operation 400 'mul' 'tmp33' <Predicate = (tmp_27)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 401 [1/1] (0.73ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i4 %k_load_42" [d1.cpp:78]   --->   Operation 401 'mux' 'tmp_31' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln78_9 = zext i32 %tmp_31" [d1.cpp:78]   --->   Operation 402 'zext' 'zext_ln78_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 403 '%mul_ln78 = mul i64 %zext_ln78_9, i64 %zext_ln78_8'
ST_3 : Operation 403 [1/1] (2.10ns)   --->   "%mul_ln78 = mul i64 %zext_ln78_9, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 403 'mul' 'mul_ln78' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 404 [1/1] (0.17ns)   --->   "%select_ln78_1 = select i1 %cmp159_1, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 404 'select' 'select_ln78_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 405 [1/1] (0.37ns)   --->   "%and_ln78 = and i64 %mul_ln78, i64 %select_ln78_1" [d1.cpp:78]   --->   Operation 405 'and' 'and_ln78' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 406 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36" [d1.cpp:78]   --->   Operation 406 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 407 [1/1] (0.00ns)   --->   "%zext_ln78_10 = zext i32 %tmp_32" [d1.cpp:78]   --->   Operation 407 'zext' 'zext_ln78_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 408 '%mul_ln80_22 = mul i64 %zext_ln78_10, i64 %zext_ln78_8'
ST_3 : Operation 408 [1/1] (2.10ns)   --->   "%mul_ln80_22 = mul i64 %zext_ln78_10, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 408 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 409 [1/1] (0.37ns)   --->   "%and_ln80_17 = and i64 %mul_ln80_22, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 409 'and' 'and_ln80_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 410 '%mul_ln80_23 = mul i64 %zext_ln78_8, i64 %conv36_cast'
ST_3 : Operation 410 [1/1] (2.10ns)   --->   "%mul_ln80_23 = mul i64 %zext_ln78_8, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 410 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_18)   --->   "%select_ln80_17 = select i1 %icmp_ln80_9, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 411 'select' 'select_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 412 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_18 = and i64 %mul_ln80_23, i64 %select_ln80_17" [d1.cpp:80]   --->   Operation 412 'and' 'and_ln80_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 413 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_16" [d1.cpp:78]   --->   Operation 413 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 414 [1/1] (0.00ns)   --->   "%zext_ln78_11 = zext i32 %tmp_33" [d1.cpp:78]   --->   Operation 414 'zext' 'zext_ln78_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 415 [1/1] (0.44ns)   --->   "%select_ln80_1 = select i1 %icmp_ln80_9, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 415 'select' 'select_ln80_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 416 [1/1] (0.00ns)   --->   "%zext_ln80_14 = zext i32 %select_ln80_1" [d1.cpp:80]   --->   Operation 416 'zext' 'zext_ln80_14' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 417 '%mul_ln80_24 = mul i64 %zext_ln78_11, i64 %zext_ln78_8'
ST_3 : Operation 417 [1/1] (2.10ns)   --->   "%mul_ln80_24 = mul i64 %zext_ln78_11, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 417 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_16)   --->   "%and_ln80_19 = and i64 %mul_ln80_24, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 418 'and' 'and_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 419 '%mul_ln80_25 = mul i64 %zext_ln80_14, i64 %zext_ln78_8'
ST_3 : Operation 419 [1/1] (2.10ns)   --->   "%mul_ln80_25 = mul i64 %zext_ln80_14, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 419 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 420 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_16)   --->   "%select_ln80_18 = select i1 %icmp_ln80_10, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 420 'select' 'select_ln80_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_16)   --->   "%and_ln80_20 = and i64 %mul_ln80_25, i64 %select_ln80_18" [d1.cpp:80]   --->   Operation 421 'and' 'and_ln80_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 422 [1/1] (0.00ns)   --->   "%sext_ln78 = sext i3 %sub_ln36_22" [d1.cpp:78]   --->   Operation 422 'sext' 'sext_ln78' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 423 [1/1] (0.48ns)   --->   "%tmp_34 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_17" [d1.cpp:78]   --->   Operation 423 'mux' 'tmp_34' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 424 [1/1] (0.00ns)   --->   "%zext_ln78_12 = zext i32 %tmp_34" [d1.cpp:78]   --->   Operation 424 'zext' 'zext_ln78_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 425 [1/1] (0.48ns)   --->   "%tmp_35 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78" [d1.cpp:80]   --->   Operation 425 'mux' 'tmp_35' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 426 [1/1] (0.00ns)   --->   "%zext_ln80_15 = zext i32 %tmp_35" [d1.cpp:80]   --->   Operation 426 'zext' 'zext_ln80_15' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 427 '%mul_ln80_26 = mul i64 %zext_ln78_12, i64 %zext_ln78_8'
ST_3 : Operation 427 [1/1] (2.10ns)   --->   "%mul_ln80_26 = mul i64 %zext_ln78_12, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 427 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_23)   --->   "%and_ln80_21 = and i64 %mul_ln80_26, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 428 'and' 'and_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 429 '%mul_ln80_27 = mul i64 %zext_ln80_15, i64 %zext_ln78_8'
ST_3 : Operation 429 [1/1] (2.10ns)   --->   "%mul_ln80_27 = mul i64 %zext_ln80_15, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 429 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_23)   --->   "%select_ln80_19 = select i1 %icmp_ln80_11, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 430 'select' 'select_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_23)   --->   "%and_ln80_22 = and i64 %mul_ln80_27, i64 %select_ln80_19" [d1.cpp:80]   --->   Operation 431 'and' 'and_ln80_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 432 [1/1] (0.48ns)   --->   "%tmp_36 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_3" [d1.cpp:78]   --->   Operation 432 'mux' 'tmp_36' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 433 [1/1] (0.00ns)   --->   "%zext_ln78_13 = zext i32 %tmp_36" [d1.cpp:78]   --->   Operation 433 'zext' 'zext_ln78_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 434 [1/1] (0.48ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_6" [d1.cpp:80]   --->   Operation 434 'mux' 'tmp_37' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 435 [1/1] (0.00ns)   --->   "%zext_ln80_16 = zext i32 %tmp_37" [d1.cpp:80]   --->   Operation 435 'zext' 'zext_ln80_16' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 436 '%mul_ln80_28 = mul i64 %zext_ln78_13, i64 %zext_ln78_8'
ST_3 : Operation 436 [1/1] (2.10ns)   --->   "%mul_ln80_28 = mul i64 %zext_ln78_13, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 436 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 437 [1/1] (0.37ns)   --->   "%and_ln80_23 = and i64 %mul_ln80_28, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 437 'and' 'and_ln80_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 438 '%mul_ln80_29 = mul i64 %zext_ln80_16, i64 %zext_ln78_8'
ST_3 : Operation 438 [1/1] (2.10ns)   --->   "%mul_ln80_29 = mul i64 %zext_ln80_16, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 438 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 439 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_24)   --->   "%select_ln80_20 = select i1 %icmp_ln80_12, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 439 'select' 'select_ln80_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 440 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_24 = and i64 %mul_ln80_29, i64 %select_ln80_20" [d1.cpp:80]   --->   Operation 440 'and' 'and_ln80_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 441 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_4" [d1.cpp:78]   --->   Operation 441 'mux' 'tmp_38' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 442 [1/1] (0.00ns)   --->   "%zext_ln78_14 = zext i32 %tmp_38" [d1.cpp:78]   --->   Operation 442 'zext' 'zext_ln78_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 443 [1/1] (0.79ns)   --->   "%sub_ln80_5 = sub i4 %sub_ln80_4, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 443 'sub' 'sub_ln80_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 444 [1/1] (0.48ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_24" [d1.cpp:80]   --->   Operation 444 'mux' 'tmp_39' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 445 [1/1] (0.00ns)   --->   "%zext_ln80_17 = zext i32 %tmp_39" [d1.cpp:80]   --->   Operation 445 'zext' 'zext_ln80_17' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 446 '%mul_ln80_30 = mul i64 %zext_ln78_14, i64 %zext_ln78_8'
ST_3 : Operation 446 [1/1] (2.10ns)   --->   "%mul_ln80_30 = mul i64 %zext_ln78_14, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 446 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 447 [1/1] (0.37ns)   --->   "%and_ln80_25 = and i64 %mul_ln80_30, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 447 'and' 'and_ln80_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 448 '%mul_ln80_31 = mul i64 %zext_ln80_17, i64 %zext_ln78_8'
ST_3 : Operation 448 [1/1] (2.10ns)   --->   "%mul_ln80_31 = mul i64 %zext_ln80_17, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 448 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_26)   --->   "%select_ln80_21 = select i1 %icmp_ln80_13, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 449 'select' 'select_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 450 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_26 = and i64 %mul_ln80_31, i64 %select_ln80_21" [d1.cpp:80]   --->   Operation 450 'and' 'and_ln80_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 451 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_5" [d1.cpp:78]   --->   Operation 451 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 452 [1/1] (0.00ns)   --->   "%zext_ln78_15 = zext i32 %tmp_40" [d1.cpp:78]   --->   Operation 452 'zext' 'zext_ln78_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 453 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_25" [d1.cpp:80]   --->   Operation 453 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 454 [1/1] (0.00ns)   --->   "%zext_ln80_18 = zext i32 %tmp_41" [d1.cpp:80]   --->   Operation 454 'zext' 'zext_ln80_18' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 455 '%mul_ln80_32 = mul i64 %zext_ln78_15, i64 %zext_ln78_8'
ST_3 : Operation 455 [1/1] (2.10ns)   --->   "%mul_ln80_32 = mul i64 %zext_ln78_15, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 455 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 456 [1/1] (0.37ns)   --->   "%and_ln80_27 = and i64 %mul_ln80_32, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 456 'and' 'and_ln80_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 457 '%mul_ln80_33 = mul i64 %zext_ln80_18, i64 %zext_ln78_8'
ST_3 : Operation 457 [1/1] (2.10ns)   --->   "%mul_ln80_33 = mul i64 %zext_ln80_18, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 457 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_28)   --->   "%select_ln80_22 = select i1 %icmp_ln80_14, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 458 'select' 'select_ln80_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 459 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_28 = and i64 %mul_ln80_33, i64 %select_ln80_22" [d1.cpp:80]   --->   Operation 459 'and' 'and_ln80_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 460 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_26" [d1.cpp:80]   --->   Operation 460 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 461 [1/1] (0.00ns)   --->   "%zext_ln80_19 = zext i32 %tmp_42" [d1.cpp:80]   --->   Operation 461 'zext' 'zext_ln80_19' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 462 '%mul_ln80_34 = mul i64 %zext_ln80_19, i64 %zext_ln78_8'
ST_3 : Operation 462 [1/1] (2.10ns)   --->   "%mul_ln80_34 = mul i64 %zext_ln80_19, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 462 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 463 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%select_ln80_23 = select i1 %icmp_ln80_15, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 463 'select' 'select_ln80_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 464 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%and_ln80_29 = and i64 %mul_ln80_34, i64 %select_ln80_23" [d1.cpp:80]   --->   Operation 464 'and' 'and_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 465 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_27" [d1.cpp:80]   --->   Operation 465 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 466 [1/1] (0.00ns)   --->   "%zext_ln80_20 = zext i32 %tmp_43" [d1.cpp:80]   --->   Operation 466 'zext' 'zext_ln80_20' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 467 '%mul_ln80_35 = mul i64 %zext_ln80_20, i64 %zext_ln78_8'
ST_3 : Operation 467 [1/1] (2.10ns)   --->   "%mul_ln80_35 = mul i64 %zext_ln80_20, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 467 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 468 [1/1] (0.00ns)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d1.cpp:80]   --->   Operation 468 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 469 [1/1] (0.00ns)   --->   "%zext_ln80_60 = zext i1 %tmp_44" [d1.cpp:80]   --->   Operation 469 'zext' 'zext_ln80_60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 470 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_36)   --->   "%select_ln80_24 = select i1 %tmp_44, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 470 'select' 'select_ln80_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 471 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_36)   --->   "%and_ln80_30 = and i64 %mul_ln80_35, i64 %select_ln80_24" [d1.cpp:80]   --->   Operation 471 'and' 'and_ln80_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 472 [1/1] (0.79ns)   --->   "%sub_ln36_9 = sub i4 %sub_ln36_27, i4 %zext_ln80_60" [d1.cpp:36]   --->   Operation 472 'sub' 'sub_ln36_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 473 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_9" [d1.cpp:80]   --->   Operation 473 'mux' 'tmp_45' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 474 [1/1] (0.00ns)   --->   "%zext_ln80_21 = zext i32 %tmp_45" [d1.cpp:80]   --->   Operation 474 'zext' 'zext_ln80_21' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 475 '%mul_ln80_36 = mul i64 %zext_ln80_21, i64 %zext_ln78_8'
ST_3 : Operation 475 [1/1] (2.10ns)   --->   "%mul_ln80_36 = mul i64 %zext_ln80_21, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 475 'mul' 'mul_ln80_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_41)   --->   "%and_ln80_31 = and i64 %mul_ln80_36, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 476 'and' 'and_ln80_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 477 [1/1] (0.79ns)   --->   "%sub_ln36_10 = sub i4 %sub_ln36_9, i4 %zext_ln79" [d1.cpp:36]   --->   Operation 477 'sub' 'sub_ln36_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 478 [1/1] (0.79ns)   --->   "%icmp_ln80_16 = icmp_ugt  i4 %i_1, i4 5" [d1.cpp:80]   --->   Operation 478 'icmp' 'icmp_ln80_16' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 479 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 479 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 480 [1/1] (0.00ns)   --->   "%zext_ln78_16 = zext i32 %tmp_52" [d1.cpp:78]   --->   Operation 480 'zext' 'zext_ln78_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 481 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_3" [d1.cpp:70]   --->   Operation 481 'mux' 'tmp_53' <Predicate = (icmp_ln70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 482 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i32 %tmp_53" [d1.cpp:70]   --->   Operation 482 'zext' 'zext_ln70_2' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 483 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_2" [d1.cpp:70]   --->   Operation 483 'mux' 'tmp_54' <Predicate = (icmp_ln70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 484 [1/1] (0.00ns)   --->   "%tmp_59_cast = zext i32 %tmp_54" [d1.cpp:70]   --->   Operation 484 'zext' 'tmp_59_cast' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 485 [1/1] (1.01ns)   --->   "%tmp34 = add i33 %tmp_59_cast, i33 %zext_ln70_2" [d1.cpp:70]   --->   Operation 485 'add' 'tmp34' <Predicate = (icmp_ln70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 486 [1/1] (0.00ns)   --->   "%tmp34_cast = zext i33 %tmp34" [d1.cpp:70]   --->   Operation 486 'zext' 'tmp34_cast' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : [1/1] (0.66ns)   --->   Input mux for Operation 487 '%tmp35 = mul i64 %tmp34_cast, i64 %zext_ln78_16'
ST_3 : Operation 487 [1/1] (2.75ns)   --->   "%tmp35 = mul i64 %tmp34_cast, i64 %zext_ln78_16" [d1.cpp:70]   --->   Operation 487 'mul' 'tmp35' <Predicate = (icmp_ln70)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 488 [1/1] (0.73ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load_42" [d1.cpp:78]   --->   Operation 488 'mux' 'tmp_55' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 489 [1/1] (0.00ns)   --->   "%zext_ln78_17 = zext i32 %tmp_55" [d1.cpp:78]   --->   Operation 489 'zext' 'zext_ln78_17' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 490 '%mul_ln78_1 = mul i64 %zext_ln78_17, i64 %zext_ln78_16'
ST_3 : Operation 490 [1/1] (2.10ns)   --->   "%mul_ln78_1 = mul i64 %zext_ln78_17, i64 %zext_ln78_16" [d1.cpp:78]   --->   Operation 490 'mul' 'mul_ln78_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 491 [1/1] (0.17ns)   --->   "%select_ln78_3 = select i1 %cmp159_2, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 491 'select' 'select_ln78_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 492 [1/1] (0.37ns)   --->   "%and_ln78_1 = and i64 %mul_ln78_1, i64 %select_ln78_3" [d1.cpp:78]   --->   Operation 492 'and' 'and_ln78_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 493 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_1" [d1.cpp:78]   --->   Operation 493 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 494 [1/1] (0.00ns)   --->   "%zext_ln78_18 = zext i32 %tmp_56" [d1.cpp:78]   --->   Operation 494 'zext' 'zext_ln78_18' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 495 '%mul_ln78_2 = mul i64 %zext_ln78_18, i64 %zext_ln78_16'
ST_3 : Operation 495 [1/1] (2.10ns)   --->   "%mul_ln78_2 = mul i64 %zext_ln78_18, i64 %zext_ln78_16" [d1.cpp:78]   --->   Operation 495 'mul' 'mul_ln78_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 496 [1/1] (0.37ns)   --->   "%and_ln78_2 = and i64 %mul_ln78_2, i64 %select_ln78_3" [d1.cpp:78]   --->   Operation 496 'and' 'and_ln78_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 497 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_18" [d1.cpp:78]   --->   Operation 497 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 498 [1/1] (0.00ns)   --->   "%zext_ln78_19 = zext i32 %tmp_57" [d1.cpp:78]   --->   Operation 498 'zext' 'zext_ln78_19' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 499 '%mul_ln80_42 = mul i64 %zext_ln78_19, i64 %zext_ln78_16'
ST_3 : Operation 499 [1/1] (2.10ns)   --->   "%mul_ln80_42 = mul i64 %zext_ln78_19, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 499 'mul' 'mul_ln80_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 500 [1/1] (0.37ns)   --->   "%and_ln80_33 = and i64 %mul_ln80_42, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 500 'and' 'and_ln80_33' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 501 '%mul_ln80_43 = mul i64 %zext_ln78_16, i64 %conv36_cast'
ST_3 : Operation 501 [1/1] (2.10ns)   --->   "%mul_ln80_43 = mul i64 %zext_ln78_16, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 501 'mul' 'mul_ln80_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 502 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_34)   --->   "%select_ln80_26 = select i1 %icmp_ln80_17, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 502 'select' 'select_ln80_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 503 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_34 = and i64 %mul_ln80_43, i64 %select_ln80_26" [d1.cpp:80]   --->   Operation 503 'and' 'and_ln80_34' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 504 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_19" [d1.cpp:78]   --->   Operation 504 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 505 [1/1] (0.00ns)   --->   "%zext_ln78_20 = zext i32 %tmp_58" [d1.cpp:78]   --->   Operation 505 'zext' 'zext_ln78_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 506 [1/1] (0.44ns)   --->   "%select_ln80_2 = select i1 %icmp_ln80_17, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 506 'select' 'select_ln80_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 507 [1/1] (0.00ns)   --->   "%zext_ln80_27 = zext i32 %select_ln80_2" [d1.cpp:80]   --->   Operation 507 'zext' 'zext_ln80_27' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 508 '%mul_ln80_44 = mul i64 %zext_ln78_20, i64 %zext_ln78_16'
ST_3 : Operation 508 [1/1] (2.10ns)   --->   "%mul_ln80_44 = mul i64 %zext_ln78_20, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 508 'mul' 'mul_ln80_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 509 [1/1] (0.37ns)   --->   "%and_ln80_35 = and i64 %mul_ln80_44, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 509 'and' 'and_ln80_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 510 '%mul_ln80_45 = mul i64 %zext_ln80_27, i64 %zext_ln78_16'
ST_3 : Operation 510 [1/1] (2.10ns)   --->   "%mul_ln80_45 = mul i64 %zext_ln80_27, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 510 'mul' 'mul_ln80_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 511 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_36)   --->   "%select_ln80_27 = select i1 %icmp_ln80_18, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 511 'select' 'select_ln80_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 512 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_36 = and i64 %mul_ln80_45, i64 %select_ln80_27" [d1.cpp:80]   --->   Operation 512 'and' 'and_ln80_36' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 513 [1/1] (0.00ns)   --->   "%sext_ln78_7 = sext i3 %sub_ln36_28" [d1.cpp:78]   --->   Operation 513 'sext' 'sext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 514 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_6" [d1.cpp:78]   --->   Operation 514 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln78_21 = zext i32 %tmp_59" [d1.cpp:78]   --->   Operation 515 'zext' 'zext_ln78_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 516 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_7" [d1.cpp:80]   --->   Operation 516 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 517 [1/1] (0.00ns)   --->   "%zext_ln80_28 = zext i32 %tmp_60" [d1.cpp:80]   --->   Operation 517 'zext' 'zext_ln80_28' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 518 '%mul_ln80_46 = mul i64 %zext_ln78_21, i64 %zext_ln78_16'
ST_3 : Operation 518 [1/1] (2.10ns)   --->   "%mul_ln80_46 = mul i64 %zext_ln78_21, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 518 'mul' 'mul_ln80_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 519 [1/1] (0.37ns)   --->   "%and_ln80_37 = and i64 %mul_ln80_46, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 519 'and' 'and_ln80_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 520 '%mul_ln80_47 = mul i64 %zext_ln80_28, i64 %zext_ln78_16'
ST_3 : Operation 520 [1/1] (2.10ns)   --->   "%mul_ln80_47 = mul i64 %zext_ln80_28, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 520 'mul' 'mul_ln80_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_38)   --->   "%select_ln80_28 = select i1 %icmp_ln80_19, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 521 'select' 'select_ln80_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 522 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_38 = and i64 %mul_ln80_47, i64 %select_ln80_28" [d1.cpp:80]   --->   Operation 522 'and' 'and_ln80_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 523 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_7" [d1.cpp:78]   --->   Operation 523 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 524 [1/1] (0.00ns)   --->   "%zext_ln78_22 = zext i32 %tmp_61" [d1.cpp:78]   --->   Operation 524 'zext' 'zext_ln78_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 525 [1/1] (0.79ns)   --->   "%sub_ln80_8 = sub i4 %sub_ln80_7, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 525 'sub' 'sub_ln80_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 526 [1/1] (0.48ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_8" [d1.cpp:80]   --->   Operation 526 'mux' 'tmp_62' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 527 [1/1] (0.00ns)   --->   "%zext_ln80_29 = zext i32 %tmp_62" [d1.cpp:80]   --->   Operation 527 'zext' 'zext_ln80_29' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 528 '%mul_ln80_48 = mul i64 %zext_ln78_22, i64 %zext_ln78_16'
ST_3 : Operation 528 [1/1] (2.10ns)   --->   "%mul_ln80_48 = mul i64 %zext_ln78_22, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 528 'mul' 'mul_ln80_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 529 [1/1] (0.37ns)   --->   "%and_ln80_39 = and i64 %mul_ln80_48, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 529 'and' 'and_ln80_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 530 '%mul_ln80_49 = mul i64 %zext_ln80_29, i64 %zext_ln78_16'
ST_3 : Operation 530 [1/1] (2.10ns)   --->   "%mul_ln80_49 = mul i64 %zext_ln80_29, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 530 'mul' 'mul_ln80_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 531 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_40)   --->   "%select_ln80_29 = select i1 %icmp_ln80_20, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 531 'select' 'select_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 532 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_40 = and i64 %mul_ln80_49, i64 %select_ln80_29" [d1.cpp:80]   --->   Operation 532 'and' 'and_ln80_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 533 [1/1] (0.48ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_8" [d1.cpp:78]   --->   Operation 533 'mux' 'tmp_63' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 534 [1/1] (0.00ns)   --->   "%zext_ln78_23 = zext i32 %tmp_63" [d1.cpp:78]   --->   Operation 534 'zext' 'zext_ln78_23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 535 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_30" [d1.cpp:80]   --->   Operation 535 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 536 [1/1] (0.00ns)   --->   "%zext_ln80_30 = zext i32 %tmp_64" [d1.cpp:80]   --->   Operation 536 'zext' 'zext_ln80_30' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 537 '%mul_ln80_50 = mul i64 %zext_ln78_23, i64 %zext_ln78_16'
ST_3 : Operation 537 [1/1] (2.10ns)   --->   "%mul_ln80_50 = mul i64 %zext_ln78_23, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 537 'mul' 'mul_ln80_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 538 [1/1] (0.37ns)   --->   "%and_ln80_41 = and i64 %mul_ln80_50, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 538 'and' 'and_ln80_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 539 '%mul_ln80_51 = mul i64 %zext_ln80_30, i64 %zext_ln78_16'
ST_3 : Operation 539 [1/1] (2.10ns)   --->   "%mul_ln80_51 = mul i64 %zext_ln80_30, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 539 'mul' 'mul_ln80_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 540 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_42)   --->   "%select_ln80_30 = select i1 %icmp_ln80_21, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 540 'select' 'select_ln80_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 541 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_42 = and i64 %mul_ln80_51, i64 %select_ln80_30" [d1.cpp:80]   --->   Operation 541 'and' 'and_ln80_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 542 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_31" [d1.cpp:80]   --->   Operation 542 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 543 [1/1] (0.00ns)   --->   "%zext_ln80_31 = zext i32 %tmp_65" [d1.cpp:80]   --->   Operation 543 'zext' 'zext_ln80_31' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 544 '%mul_ln80_52 = mul i64 %zext_ln80_31, i64 %zext_ln78_16'
ST_3 : Operation 544 [1/1] (2.10ns)   --->   "%mul_ln80_52 = mul i64 %zext_ln80_31, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 544 'mul' 'mul_ln80_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 545 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_43)   --->   "%select_ln80_31 = select i1 %icmp_ln80_22, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 545 'select' 'select_ln80_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 546 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_43 = and i64 %mul_ln80_52, i64 %select_ln80_31" [d1.cpp:80]   --->   Operation 546 'and' 'and_ln80_43' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 547 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_32" [d1.cpp:80]   --->   Operation 547 'mux' 'tmp_66' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 548 [1/1] (0.00ns)   --->   "%zext_ln80_32 = zext i32 %tmp_66" [d1.cpp:80]   --->   Operation 548 'zext' 'zext_ln80_32' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 549 '%mul_ln80_53 = mul i64 %zext_ln80_32, i64 %zext_ln78_16'
ST_3 : Operation 549 [1/1] (2.10ns)   --->   "%mul_ln80_53 = mul i64 %zext_ln80_32, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 549 'mul' 'mul_ln80_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 550 [1/1] (0.00ns)   --->   "%zext_ln80_61 = zext i1 %tmp_67" [d1.cpp:80]   --->   Operation 550 'zext' 'zext_ln80_61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 551 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_44)   --->   "%select_ln80_32 = select i1 %tmp_67, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 551 'select' 'select_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 552 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_44 = and i64 %mul_ln80_53, i64 %select_ln80_32" [d1.cpp:80]   --->   Operation 552 'and' 'and_ln80_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 553 [1/1] (0.79ns)   --->   "%sub_ln36_33 = sub i4 %sub_ln36_32, i4 %zext_ln80_61" [d1.cpp:36]   --->   Operation 553 'sub' 'sub_ln36_33' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 554 [1/1] (0.48ns)   --->   "%tmp_68 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_33" [d1.cpp:80]   --->   Operation 554 'mux' 'tmp_68' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 555 [1/1] (0.00ns)   --->   "%zext_ln80_33 = zext i32 %tmp_68" [d1.cpp:80]   --->   Operation 555 'zext' 'zext_ln80_33' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 556 '%mul_ln80_54 = mul i64 %zext_ln80_33, i64 %zext_ln78_16'
ST_3 : Operation 556 [1/1] (2.10ns)   --->   "%mul_ln80_54 = mul i64 %zext_ln80_33, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 556 'mul' 'mul_ln80_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 557 [1/1] (0.37ns)   --->   "%and_ln80_45 = and i64 %mul_ln80_54, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 557 'and' 'and_ln80_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 558 [1/1] (0.79ns)   --->   "%sub_ln36_12 = sub i4 %sub_ln36_33, i4 %zext_ln79_1" [d1.cpp:36]   --->   Operation 558 'sub' 'sub_ln36_12' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 559 [1/1] (0.00ns)   --->   "%zext_ln81_15 = zext i1 %icmp_ln80_23" [d1.cpp:81]   --->   Operation 559 'zext' 'zext_ln81_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 560 [1/1] (0.79ns)   --->   "%sub_ln36_13 = sub i4 %sub_ln36_12, i4 %zext_ln81_15" [d1.cpp:36]   --->   Operation 560 'sub' 'sub_ln36_13' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 561 [1/1] (0.48ns)   --->   "%tmp_75 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 561 'mux' 'tmp_75' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 562 [1/1] (0.00ns)   --->   "%zext_ln78_24 = zext i32 %tmp_75" [d1.cpp:78]   --->   Operation 562 'zext' 'zext_ln78_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 563 [1/1] (0.48ns)   --->   "%tmp_76 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_5" [d1.cpp:70]   --->   Operation 563 'mux' 'tmp_76' <Predicate = (icmp_ln70_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 564 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i32 %tmp_76" [d1.cpp:70]   --->   Operation 564 'zext' 'zext_ln70_3' <Predicate = (icmp_ln70_1)> <Delay = 0.00>
ST_3 : Operation 565 [1/1] (0.48ns)   --->   "%tmp_77 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_4" [d1.cpp:70]   --->   Operation 565 'mux' 'tmp_77' <Predicate = (icmp_ln70_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 566 [1/1] (0.00ns)   --->   "%tmp_80_cast = zext i32 %tmp_77" [d1.cpp:70]   --->   Operation 566 'zext' 'tmp_80_cast' <Predicate = (icmp_ln70_1)> <Delay = 0.00>
ST_3 : Operation 567 [1/1] (1.01ns)   --->   "%tmp36 = add i33 %tmp_80_cast, i33 %zext_ln70_3" [d1.cpp:70]   --->   Operation 567 'add' 'tmp36' <Predicate = (icmp_ln70_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 568 [1/1] (0.00ns)   --->   "%tmp36_cast = zext i33 %tmp36" [d1.cpp:70]   --->   Operation 568 'zext' 'tmp36_cast' <Predicate = (icmp_ln70_1)> <Delay = 0.00>
ST_3 : [1/1] (0.66ns)   --->   Input mux for Operation 569 '%tmp37 = mul i64 %tmp36_cast, i64 %zext_ln78_24'
ST_3 : Operation 569 [1/1] (2.75ns)   --->   "%tmp37 = mul i64 %tmp36_cast, i64 %zext_ln78_24" [d1.cpp:70]   --->   Operation 569 'mul' 'tmp37' <Predicate = (icmp_ln70_1)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 570 [1/1] (0.73ns)   --->   "%tmp_78 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load_42" [d1.cpp:78]   --->   Operation 570 'mux' 'tmp_78' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 571 [1/1] (0.00ns)   --->   "%zext_ln78_25 = zext i32 %tmp_78" [d1.cpp:78]   --->   Operation 571 'zext' 'zext_ln78_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 572 '%mul_ln78_3 = mul i64 %zext_ln78_25, i64 %zext_ln78_24'
ST_3 : Operation 572 [1/1] (2.10ns)   --->   "%mul_ln78_3 = mul i64 %zext_ln78_25, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 572 'mul' 'mul_ln78_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 573 [1/1] (0.17ns)   --->   "%select_ln78_5 = select i1 %cmp159_3, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 573 'select' 'select_ln78_5' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 574 [1/1] (0.37ns)   --->   "%and_ln78_3 = and i64 %mul_ln78_3, i64 %select_ln78_5" [d1.cpp:78]   --->   Operation 574 'and' 'and_ln78_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 575 [1/1] (0.48ns)   --->   "%tmp_79 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_2" [d1.cpp:78]   --->   Operation 575 'mux' 'tmp_79' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 576 [1/1] (0.00ns)   --->   "%zext_ln78_26 = zext i32 %tmp_79" [d1.cpp:78]   --->   Operation 576 'zext' 'zext_ln78_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 577 '%mul_ln78_4 = mul i64 %zext_ln78_26, i64 %zext_ln78_24'
ST_3 : Operation 577 [1/1] (2.10ns)   --->   "%mul_ln78_4 = mul i64 %zext_ln78_26, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 577 'mul' 'mul_ln78_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 578 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_12)   --->   "%and_ln78_4 = and i64 %mul_ln78_4, i64 %select_ln78_5" [d1.cpp:78]   --->   Operation 578 'and' 'and_ln78_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 579 [1/1] (0.48ns)   --->   "%tmp_80 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_20" [d1.cpp:78]   --->   Operation 579 'mux' 'tmp_80' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 580 [1/1] (0.00ns)   --->   "%zext_ln78_27 = zext i32 %tmp_80" [d1.cpp:78]   --->   Operation 580 'zext' 'zext_ln78_27' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 581 '%mul_ln78_5 = mul i64 %zext_ln78_27, i64 %zext_ln78_24'
ST_3 : Operation 581 [1/1] (2.10ns)   --->   "%mul_ln78_5 = mul i64 %zext_ln78_27, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 581 'mul' 'mul_ln78_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 582 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_19)   --->   "%and_ln78_5 = and i64 %mul_ln78_5, i64 %select_ln78_5" [d1.cpp:78]   --->   Operation 582 'and' 'and_ln78_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 583 [1/1] (0.48ns)   --->   "%tmp_81 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_34" [d1.cpp:78]   --->   Operation 583 'mux' 'tmp_81' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 584 [1/1] (0.00ns)   --->   "%zext_ln78_28 = zext i32 %tmp_81" [d1.cpp:78]   --->   Operation 584 'zext' 'zext_ln78_28' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 585 '%mul_ln80_60 = mul i64 %zext_ln78_28, i64 %zext_ln78_24'
ST_3 : Operation 585 [1/1] (2.10ns)   --->   "%mul_ln80_60 = mul i64 %zext_ln78_28, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 585 'mul' 'mul_ln80_60' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 586 [1/1] (0.37ns)   --->   "%and_ln80_48 = and i64 %mul_ln80_60, i64 %select_ln78_5" [d1.cpp:80]   --->   Operation 586 'and' 'and_ln80_48' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 587 '%mul_ln80_61 = mul i64 %zext_ln78_24, i64 %conv36_cast'
ST_3 : Operation 587 [1/1] (2.10ns)   --->   "%mul_ln80_61 = mul i64 %zext_ln78_24, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 587 'mul' 'mul_ln80_61' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 588 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_49)   --->   "%select_ln80_35 = select i1 %icmp_ln80_25, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 588 'select' 'select_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 589 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_49 = and i64 %mul_ln80_61, i64 %select_ln80_35" [d1.cpp:80]   --->   Operation 589 'and' 'and_ln80_49' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 590 [1/1] (0.48ns)   --->   "%tmp_82 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_9" [d1.cpp:78]   --->   Operation 590 'mux' 'tmp_82' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 591 [1/1] (0.00ns)   --->   "%zext_ln78_29 = zext i32 %tmp_82" [d1.cpp:78]   --->   Operation 591 'zext' 'zext_ln78_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 592 [1/1] (0.79ns)   --->   "%sub_ln80_10 = sub i4 %sub_ln80_9, i4 %zext_ln79_3" [d1.cpp:80]   --->   Operation 592 'sub' 'sub_ln80_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 593 [1/1] (0.44ns)   --->   "%select_ln80_3 = select i1 %icmp_ln80_25, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 593 'select' 'select_ln80_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 594 [1/1] (0.00ns)   --->   "%zext_ln80_39 = zext i32 %select_ln80_3" [d1.cpp:80]   --->   Operation 594 'zext' 'zext_ln80_39' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 595 '%mul_ln80_62 = mul i64 %zext_ln78_29, i64 %zext_ln78_24'
ST_3 : Operation 595 [1/1] (2.10ns)   --->   "%mul_ln80_62 = mul i64 %zext_ln78_29, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 595 'mul' 'mul_ln80_62' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 596 [1/1] (0.37ns)   --->   "%and_ln80_50 = and i64 %mul_ln80_62, i64 %select_ln78_5" [d1.cpp:80]   --->   Operation 596 'and' 'and_ln80_50' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 597 '%mul_ln80_63 = mul i64 %zext_ln80_39, i64 %zext_ln78_24'
ST_3 : Operation 597 [1/1] (2.10ns)   --->   "%mul_ln80_63 = mul i64 %zext_ln80_39, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 597 'mul' 'mul_ln80_63' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_51)   --->   "%select_ln80_36 = select i1 %icmp_ln80_26, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 598 'select' 'select_ln80_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 599 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_51 = and i64 %mul_ln80_63, i64 %select_ln80_36" [d1.cpp:80]   --->   Operation 599 'and' 'and_ln80_51' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 600 [1/1] (0.00ns)   --->   "%sext_ln78_9 = sext i3 %sub_ln36_35" [d1.cpp:78]   --->   Operation 600 'sext' 'sext_ln78_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 601 [1/1] (0.48ns)   --->   "%tmp_83 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_10" [d1.cpp:78]   --->   Operation 601 'mux' 'tmp_83' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 602 [1/1] (0.00ns)   --->   "%zext_ln78_30 = zext i32 %tmp_83" [d1.cpp:78]   --->   Operation 602 'zext' 'zext_ln78_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 603 [1/1] (0.79ns)   --->   "%sub_ln80_11 = sub i4 %sub_ln80_10, i4 %zext_ln79_3" [d1.cpp:80]   --->   Operation 603 'sub' 'sub_ln80_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 604 [1/1] (0.48ns)   --->   "%tmp_84 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_9" [d1.cpp:80]   --->   Operation 604 'mux' 'tmp_84' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 605 [1/1] (0.00ns)   --->   "%zext_ln80_40 = zext i32 %tmp_84" [d1.cpp:80]   --->   Operation 605 'zext' 'zext_ln80_40' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 606 '%mul_ln80_64 = mul i64 %zext_ln78_30, i64 %zext_ln78_24'
ST_3 : Operation 606 [1/1] (2.10ns)   --->   "%mul_ln80_64 = mul i64 %zext_ln78_30, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 606 'mul' 'mul_ln80_64' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 607 [1/1] (0.37ns)   --->   "%and_ln80_52 = and i64 %mul_ln80_64, i64 %select_ln78_5" [d1.cpp:80]   --->   Operation 607 'and' 'and_ln80_52' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 608 '%mul_ln80_65 = mul i64 %zext_ln80_40, i64 %zext_ln78_24'
ST_3 : Operation 608 [1/1] (2.10ns)   --->   "%mul_ln80_65 = mul i64 %zext_ln80_40, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 608 'mul' 'mul_ln80_65' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 609 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_53)   --->   "%select_ln80_37 = select i1 %icmp_ln80_27, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 609 'select' 'select_ln80_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 610 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_53 = and i64 %mul_ln80_65, i64 %select_ln80_37" [d1.cpp:80]   --->   Operation 610 'and' 'and_ln80_53' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 611 [1/1] (0.48ns)   --->   "%tmp_85 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_11" [d1.cpp:78]   --->   Operation 611 'mux' 'tmp_85' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 612 [1/1] (0.00ns)   --->   "%zext_ln78_31 = zext i32 %tmp_85" [d1.cpp:78]   --->   Operation 612 'zext' 'zext_ln78_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 613 [1/1] (0.48ns)   --->   "%tmp_86 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_10" [d1.cpp:80]   --->   Operation 613 'mux' 'tmp_86' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 614 [1/1] (0.00ns)   --->   "%zext_ln80_41 = zext i32 %tmp_86" [d1.cpp:80]   --->   Operation 614 'zext' 'zext_ln80_41' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 615 '%mul_ln80_66 = mul i64 %zext_ln78_31, i64 %zext_ln78_24'
ST_3 : Operation 615 [1/1] (2.10ns)   --->   "%mul_ln80_66 = mul i64 %zext_ln78_31, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 615 'mul' 'mul_ln80_66' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 616 [1/1] (0.37ns)   --->   "%and_ln80_54 = and i64 %mul_ln80_66, i64 %select_ln78_5" [d1.cpp:80]   --->   Operation 616 'and' 'and_ln80_54' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 617 '%mul_ln80_67 = mul i64 %zext_ln80_41, i64 %zext_ln78_24'
ST_3 : Operation 617 [1/1] (2.10ns)   --->   "%mul_ln80_67 = mul i64 %zext_ln80_41, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 617 'mul' 'mul_ln80_67' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 618 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_55)   --->   "%select_ln80_38 = select i1 %icmp_ln80_28, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 618 'select' 'select_ln80_38' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 619 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_55 = and i64 %mul_ln80_67, i64 %select_ln80_38" [d1.cpp:80]   --->   Operation 619 'and' 'and_ln80_55' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 620 [1/1] (0.48ns)   --->   "%tmp_87 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_37" [d1.cpp:80]   --->   Operation 620 'mux' 'tmp_87' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 621 [1/1] (0.00ns)   --->   "%zext_ln80_42 = zext i32 %tmp_87" [d1.cpp:80]   --->   Operation 621 'zext' 'zext_ln80_42' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 622 '%mul_ln80_68 = mul i64 %zext_ln80_42, i64 %zext_ln78_24'
ST_3 : Operation 622 [1/1] (2.10ns)   --->   "%mul_ln80_68 = mul i64 %zext_ln80_42, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 622 'mul' 'mul_ln80_68' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 623 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_56)   --->   "%select_ln80_39 = select i1 %icmp_ln80_29, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 623 'select' 'select_ln80_39' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 624 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_56 = and i64 %mul_ln80_68, i64 %select_ln80_39" [d1.cpp:80]   --->   Operation 624 'and' 'and_ln80_56' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 625 [1/1] (0.48ns)   --->   "%tmp_88 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_38" [d1.cpp:80]   --->   Operation 625 'mux' 'tmp_88' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 626 [1/1] (0.00ns)   --->   "%zext_ln80_43 = zext i32 %tmp_88" [d1.cpp:80]   --->   Operation 626 'zext' 'zext_ln80_43' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 627 '%mul_ln80_69 = mul i64 %zext_ln80_43, i64 %zext_ln78_24'
ST_3 : Operation 627 [1/1] (2.10ns)   --->   "%mul_ln80_69 = mul i64 %zext_ln80_43, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 627 'mul' 'mul_ln80_69' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 628 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_57)   --->   "%select_ln80_40 = select i1 %icmp_ln70, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 628 'select' 'select_ln80_40' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 629 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_57 = and i64 %mul_ln80_69, i64 %select_ln80_40" [d1.cpp:80]   --->   Operation 629 'and' 'and_ln80_57' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 630 [1/1] (0.00ns)   --->   "%zext_ln81_19 = zext i1 %icmp_ln70" [d1.cpp:81]   --->   Operation 630 'zext' 'zext_ln81_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 631 [1/1] (0.79ns)   --->   "%sub_ln36_39 = sub i4 %sub_ln36_38, i4 %zext_ln81_19" [d1.cpp:36]   --->   Operation 631 'sub' 'sub_ln36_39' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 632 [1/1] (0.48ns)   --->   "%tmp_89 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_39" [d1.cpp:80]   --->   Operation 632 'mux' 'tmp_89' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 633 [1/1] (0.00ns)   --->   "%zext_ln80_44 = zext i32 %tmp_89" [d1.cpp:80]   --->   Operation 633 'zext' 'zext_ln80_44' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 634 '%mul_ln80_70 = mul i64 %zext_ln80_44, i64 %zext_ln78_24'
ST_3 : Operation 634 [1/1] (2.10ns)   --->   "%mul_ln80_70 = mul i64 %zext_ln80_44, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 634 'mul' 'mul_ln80_70' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 635 [1/1] (0.37ns)   --->   "%and_ln80_58 = and i64 %mul_ln80_70, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 635 'and' 'and_ln80_58' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 636 [1/1] (0.79ns)   --->   "%sub_ln36_40 = sub i4 %sub_ln36_39, i4 %zext_ln79_2" [d1.cpp:36]   --->   Operation 636 'sub' 'sub_ln36_40' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 637 [1/1] (0.00ns)   --->   "%zext_ln81_20 = zext i1 %icmp_ln80_30" [d1.cpp:81]   --->   Operation 637 'zext' 'zext_ln81_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 638 [1/1] (0.79ns)   --->   "%sub_ln36_15 = sub i4 %sub_ln36_40, i4 %zext_ln81_20" [d1.cpp:36]   --->   Operation 638 'sub' 'sub_ln36_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 639 [1/1] (0.00ns)   --->   "%zext_ln81_21 = zext i1 %icmp_ln80_31" [d1.cpp:81]   --->   Operation 639 'zext' 'zext_ln81_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 640 [1/1] (0.79ns)   --->   "%sub_ln36_16 = sub i4 %sub_ln36_15, i4 %zext_ln81_21" [d1.cpp:36]   --->   Operation 640 'sub' 'sub_ln36_16' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 641 [1/1] (0.48ns)   --->   "%tmp_97 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 641 'mux' 'tmp_97' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 642 [1/1] (0.00ns)   --->   "%zext_ln78_32 = zext i32 %tmp_97" [d1.cpp:78]   --->   Operation 642 'zext' 'zext_ln78_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 643 [1/1] (0.73ns)   --->   "%tmp_100 = mux i32 @_ssdm_op_Mux.ap_auto.11i32.i4, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load_42" [d1.cpp:78]   --->   Operation 643 'mux' 'tmp_100' <Predicate = true> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 644 [1/1] (0.00ns)   --->   "%zext_ln78_33 = zext i32 %tmp_100" [d1.cpp:78]   --->   Operation 644 'zext' 'zext_ln78_33' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 645 '%mul_ln78_6 = mul i64 %zext_ln78_33, i64 %zext_ln78_32'
ST_3 : Operation 645 [1/1] (2.10ns)   --->   "%mul_ln78_6 = mul i64 %zext_ln78_33, i64 %zext_ln78_32" [d1.cpp:78]   --->   Operation 645 'mul' 'mul_ln78_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 646 [1/1] (0.17ns)   --->   "%select_ln78_7 = select i1 %cmp159_4, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 646 'select' 'select_ln78_7' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 647 [1/1] (0.37ns)   --->   "%and_ln78_6 = and i64 %mul_ln78_6, i64 %select_ln78_7" [d1.cpp:78]   --->   Operation 647 'and' 'and_ln78_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78 = add i64 %and_ln80, i64 %and_ln78" [d1.cpp:78]   --->   Operation 648 'add' 'add_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 649 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_1 = add i64 %add_ln78, i64 %and_ln80_1" [d1.cpp:78]   --->   Operation 649 'add' 'add_ln78_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 650 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_2 = add i64 %and_ln78_3, i64 %and_ln78_6" [d1.cpp:78]   --->   Operation 650 'add' 'add_ln78_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 651 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_4 = add i64 %add_ln78_2, i64 %and_ln78_1" [d1.cpp:78]   --->   Operation 651 'add' 'add_ln78_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 652 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_5 = add i64 %add_ln78_4, i64 %add_ln78_1" [d1.cpp:78]   --->   Operation 652 'add' 'add_ln78_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 653 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_3 = add i64 %add169813_load, i64 %add_ln78_5" [d1.cpp:78]   --->   Operation 653 'add' 'add_ln78_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 654 [1/1] (0.48ns)   --->   "%tmp_101 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_3" [d1.cpp:78]   --->   Operation 654 'mux' 'tmp_101' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 655 [1/1] (0.00ns)   --->   "%zext_ln78_34 = zext i32 %tmp_101" [d1.cpp:78]   --->   Operation 655 'zext' 'zext_ln78_34' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 656 '%mul_ln78_7 = mul i64 %zext_ln78_34, i64 %zext_ln78_32'
ST_3 : Operation 656 [1/1] (2.10ns)   --->   "%mul_ln78_7 = mul i64 %zext_ln78_34, i64 %zext_ln78_32" [d1.cpp:78]   --->   Operation 656 'mul' 'mul_ln78_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 657 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_12)   --->   "%and_ln78_7 = and i64 %mul_ln78_7, i64 %select_ln78_7" [d1.cpp:78]   --->   Operation 657 'and' 'and_ln78_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 658 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_7 = add i64 %and_ln80_3, i64 %and_ln80_18" [d1.cpp:78]   --->   Operation 658 'add' 'add_ln78_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 659 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_10 = add i64 %add_ln78_7, i64 %and_ln80_2" [d1.cpp:78]   --->   Operation 659 'add' 'add_ln78_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 660 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_11 = add i64 %and_ln80_17, i64 %and_ln78_2" [d1.cpp:78]   --->   Operation 660 'add' 'add_ln78_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 661 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_12 = add i64 %and_ln78_4, i64 %and_ln78_7" [d1.cpp:78]   --->   Operation 661 'add' 'add_ln78_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 662 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_13 = add i64 %add_ln78_12, i64 %add_ln78_11" [d1.cpp:78]   --->   Operation 662 'add' 'add_ln78_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 663 [1/1] (0.48ns)   --->   "%tmp_102 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_21" [d1.cpp:78]   --->   Operation 663 'mux' 'tmp_102' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 664 [1/1] (0.00ns)   --->   "%zext_ln78_35 = zext i32 %tmp_102" [d1.cpp:78]   --->   Operation 664 'zext' 'zext_ln78_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 665 '%mul_ln78_8 = mul i64 %zext_ln78_35, i64 %zext_ln78_32'
ST_3 : Operation 665 [1/1] (2.10ns)   --->   "%mul_ln78_8 = mul i64 %zext_ln78_35, i64 %zext_ln78_32" [d1.cpp:78]   --->   Operation 665 'mul' 'mul_ln78_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 666 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_19)   --->   "%and_ln78_8 = and i64 %mul_ln78_8, i64 %select_ln78_7" [d1.cpp:78]   --->   Operation 666 'and' 'and_ln78_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 667 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_15 = add i64 %and_ln80_4, i64 %and_ln80_5" [d1.cpp:78]   --->   Operation 667 'add' 'add_ln78_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 668 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_16 = add i64 %and_ln80_19, i64 %and_ln80_20" [d1.cpp:78]   --->   Operation 668 'add' 'add_ln78_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 669 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_17 = add i64 %add_ln78_16, i64 %add_ln78_15" [d1.cpp:78]   --->   Operation 669 'add' 'add_ln78_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 670 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_18 = add i64 %and_ln80_34, i64 %and_ln80_33" [d1.cpp:78]   --->   Operation 670 'add' 'add_ln78_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 671 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_19 = add i64 %and_ln78_5, i64 %and_ln78_8" [d1.cpp:78]   --->   Operation 671 'add' 'add_ln78_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 672 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_20 = add i64 %add_ln78_19, i64 %add_ln78_18" [d1.cpp:78]   --->   Operation 672 'add' 'add_ln78_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 673 [1/1] (0.48ns)   --->   "%tmp_103 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_41" [d1.cpp:78]   --->   Operation 673 'mux' 'tmp_103' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 674 [1/1] (0.00ns)   --->   "%zext_ln78_36 = zext i32 %tmp_103" [d1.cpp:78]   --->   Operation 674 'zext' 'zext_ln78_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 675 '%mul_ln78_9 = mul i64 %zext_ln78_36, i64 %zext_ln78_32'
ST_3 : Operation 675 [1/1] (2.10ns)   --->   "%mul_ln78_9 = mul i64 %zext_ln78_36, i64 %zext_ln78_32" [d1.cpp:78]   --->   Operation 675 'mul' 'mul_ln78_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 676 [1/1] (0.37ns)   --->   "%and_ln78_9 = and i64 %mul_ln78_9, i64 %select_ln78_7" [d1.cpp:78]   --->   Operation 676 'and' 'and_ln78_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 677 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_22 = add i64 %and_ln80_6, i64 %and_ln80_7" [d1.cpp:78]   --->   Operation 677 'add' 'add_ln78_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 678 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_23 = add i64 %and_ln80_21, i64 %and_ln80_22" [d1.cpp:78]   --->   Operation 678 'add' 'add_ln78_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 679 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_24 = add i64 %add_ln78_23, i64 %add_ln78_22" [d1.cpp:78]   --->   Operation 679 'add' 'add_ln78_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 680 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_25 = add i64 %and_ln80_35, i64 %and_ln80_36" [d1.cpp:78]   --->   Operation 680 'add' 'add_ln78_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 681 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_26 = add i64 %and_ln80_48, i64 %and_ln78_9" [d1.cpp:78]   --->   Operation 681 'add' 'add_ln78_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 682 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_27 = add i64 %add_ln78_26, i64 %and_ln80_49" [d1.cpp:78]   --->   Operation 682 'add' 'add_ln78_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 683 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_28 = add i64 %add_ln78_27, i64 %add_ln78_25" [d1.cpp:78]   --->   Operation 683 'add' 'add_ln78_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 684 [1/1] (0.48ns)   --->   "%tmp_104 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_18" [d1.cpp:78]   --->   Operation 684 'mux' 'tmp_104' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 685 [1/1] (0.00ns)   --->   "%zext_ln78_37 = zext i32 %tmp_104" [d1.cpp:78]   --->   Operation 685 'zext' 'zext_ln78_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 686 '%mul_ln80_76 = mul i64 %zext_ln78_37, i64 %zext_ln78_32'
ST_3 : Operation 686 [1/1] (2.10ns)   --->   "%mul_ln80_76 = mul i64 %zext_ln78_37, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 686 'mul' 'mul_ln80_76' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 687 [1/1] (0.37ns)   --->   "%and_ln80_62 = and i64 %mul_ln80_76, i64 %select_ln78_7" [d1.cpp:80]   --->   Operation 687 'and' 'and_ln80_62' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 688 '%mul_ln80_77 = mul i64 %zext_ln78_32, i64 %conv36_cast'
ST_3 : Operation 688 [1/1] (2.10ns)   --->   "%mul_ln80_77 = mul i64 %zext_ln78_32, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 688 'mul' 'mul_ln80_77' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 689 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_63)   --->   "%select_ln80_44 = select i1 %icmp_ln80_33, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 689 'select' 'select_ln80_44' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 690 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_63 = and i64 %mul_ln80_77, i64 %select_ln80_44" [d1.cpp:80]   --->   Operation 690 'and' 'and_ln80_63' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 691 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_1 = add i64 %and_ln80_8, i64 %and_ln80_9" [d1.cpp:80]   --->   Operation 691 'add' 'add_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 692 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_2 = add i64 %and_ln80_24, i64 %and_ln80_37" [d1.cpp:80]   --->   Operation 692 'add' 'add_ln80_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 693 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_3 = add i64 %add_ln80_2, i64 %and_ln80_23" [d1.cpp:80]   --->   Operation 693 'add' 'add_ln80_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 694 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_4 = add i64 %add_ln80_3, i64 %add_ln80_1" [d1.cpp:80]   --->   Operation 694 'add' 'add_ln80_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 695 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_5 = add i64 %and_ln80_38, i64 %and_ln80_50" [d1.cpp:80]   --->   Operation 695 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 696 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_6 = add i64 %and_ln80_63, i64 %and_ln80_62" [d1.cpp:80]   --->   Operation 696 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 697 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_7 = add i64 %add_ln80_6, i64 %and_ln80_51" [d1.cpp:80]   --->   Operation 697 'add' 'add_ln80_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 698 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_8 = add i64 %add_ln80_7, i64 %add_ln80_5" [d1.cpp:80]   --->   Operation 698 'add' 'add_ln80_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 699 [1/1] (0.48ns)   --->   "%tmp_105 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_12" [d1.cpp:78]   --->   Operation 699 'mux' 'tmp_105' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 700 [1/1] (0.00ns)   --->   "%zext_ln78_38 = zext i32 %tmp_105" [d1.cpp:78]   --->   Operation 700 'zext' 'zext_ln78_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 701 [1/1] (0.79ns)   --->   "%sub_ln80_13 = sub i4 %sub_ln80_12, i4 %zext_ln79_4" [d1.cpp:80]   --->   Operation 701 'sub' 'sub_ln80_13' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 702 [1/1] (0.44ns)   --->   "%select_ln80_4 = select i1 %icmp_ln80_33, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 702 'select' 'select_ln80_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 703 [1/1] (0.00ns)   --->   "%zext_ln80_50 = zext i32 %select_ln80_4" [d1.cpp:80]   --->   Operation 703 'zext' 'zext_ln80_50' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 704 '%mul_ln80_78 = mul i64 %zext_ln78_38, i64 %zext_ln78_32'
ST_3 : Operation 704 [1/1] (2.10ns)   --->   "%mul_ln80_78 = mul i64 %zext_ln78_38, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 704 'mul' 'mul_ln80_78' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 705 [1/1] (0.37ns)   --->   "%and_ln80_64 = and i64 %mul_ln80_78, i64 %select_ln78_7" [d1.cpp:80]   --->   Operation 705 'and' 'and_ln80_64' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 706 '%mul_ln80_79 = mul i64 %zext_ln80_50, i64 %zext_ln78_32'
ST_3 : Operation 706 [1/1] (2.10ns)   --->   "%mul_ln80_79 = mul i64 %zext_ln80_50, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 706 'mul' 'mul_ln80_79' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 707 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_65)   --->   "%select_ln80_45 = select i1 %icmp_ln80_34, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 707 'select' 'select_ln80_45' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 708 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_65 = and i64 %mul_ln80_79, i64 %select_ln80_45" [d1.cpp:80]   --->   Operation 708 'and' 'and_ln80_65' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 709 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_11 = add i64 %and_ln80_10, i64 %and_ln80_11" [d1.cpp:80]   --->   Operation 709 'add' 'add_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 710 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_12 = add i64 %and_ln80_26, i64 %and_ln80_39" [d1.cpp:80]   --->   Operation 710 'add' 'add_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 711 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_13 = add i64 %add_ln80_12, i64 %and_ln80_25" [d1.cpp:80]   --->   Operation 711 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 712 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_14 = add i64 %add_ln80_13, i64 %add_ln80_11" [d1.cpp:80]   --->   Operation 712 'add' 'add_ln80_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 713 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_15 = add i64 %and_ln80_40, i64 %and_ln80_52" [d1.cpp:80]   --->   Operation 713 'add' 'add_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 714 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_16 = add i64 %and_ln80_64, i64 %and_ln80_65" [d1.cpp:80]   --->   Operation 714 'add' 'add_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 715 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_17 = add i64 %add_ln80_16, i64 %and_ln80_53" [d1.cpp:80]   --->   Operation 715 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 716 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_18 = add i64 %add_ln80_17, i64 %add_ln80_15" [d1.cpp:80]   --->   Operation 716 'add' 'add_ln80_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 717 [1/1] (0.00ns)   --->   "%sext_ln78_11 = sext i3 %sub_ln36_42" [d1.cpp:78]   --->   Operation 717 'sext' 'sext_ln78_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 718 [1/1] (0.48ns)   --->   "%tmp_106 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_13" [d1.cpp:78]   --->   Operation 718 'mux' 'tmp_106' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 719 [1/1] (0.00ns)   --->   "%zext_ln78_39 = zext i32 %tmp_106" [d1.cpp:78]   --->   Operation 719 'zext' 'zext_ln78_39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 720 [1/1] (0.48ns)   --->   "%tmp_107 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_11" [d1.cpp:80]   --->   Operation 720 'mux' 'tmp_107' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 721 [1/1] (0.00ns)   --->   "%zext_ln80_51 = zext i32 %tmp_107" [d1.cpp:80]   --->   Operation 721 'zext' 'zext_ln80_51' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 722 '%mul_ln80_80 = mul i64 %zext_ln78_39, i64 %zext_ln78_32'
ST_3 : Operation 722 [1/1] (2.10ns)   --->   "%mul_ln80_80 = mul i64 %zext_ln78_39, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 722 'mul' 'mul_ln80_80' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 723 [1/1] (0.37ns)   --->   "%and_ln80_66 = and i64 %mul_ln80_80, i64 %select_ln78_7" [d1.cpp:80]   --->   Operation 723 'and' 'and_ln80_66' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 724 '%mul_ln80_81 = mul i64 %zext_ln80_51, i64 %zext_ln78_32'
ST_3 : Operation 724 [1/1] (2.10ns)   --->   "%mul_ln80_81 = mul i64 %zext_ln80_51, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 724 'mul' 'mul_ln80_81' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 725 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_67)   --->   "%select_ln80_46 = select i1 %icmp_ln80_35, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 725 'select' 'select_ln80_46' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 726 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_67 = and i64 %mul_ln80_81, i64 %select_ln80_46" [d1.cpp:80]   --->   Operation 726 'and' 'and_ln80_67' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 727 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_21 = add i64 %and_ln80_12, i64 %and_ln80_13" [d1.cpp:80]   --->   Operation 727 'add' 'add_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 728 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_22 = add i64 %and_ln80_28, i64 %and_ln80_41" [d1.cpp:80]   --->   Operation 728 'add' 'add_ln80_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 729 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_23 = add i64 %add_ln80_22, i64 %and_ln80_27" [d1.cpp:80]   --->   Operation 729 'add' 'add_ln80_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 730 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_24 = add i64 %add_ln80_23, i64 %add_ln80_21" [d1.cpp:80]   --->   Operation 730 'add' 'add_ln80_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 731 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_25 = add i64 %and_ln80_42, i64 %and_ln80_54" [d1.cpp:80]   --->   Operation 731 'add' 'add_ln80_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 732 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_26 = add i64 %and_ln80_66, i64 %and_ln80_67" [d1.cpp:80]   --->   Operation 732 'add' 'add_ln80_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 733 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_27 = add i64 %add_ln80_26, i64 %and_ln80_55" [d1.cpp:80]   --->   Operation 733 'add' 'add_ln80_27' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 734 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_28 = add i64 %add_ln80_27, i64 %add_ln80_25" [d1.cpp:80]   --->   Operation 734 'add' 'add_ln80_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 735 [1/1] (0.48ns)   --->   "%tmp_108 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln80" [d1.cpp:80]   --->   Operation 735 'mux' 'tmp_108' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 736 [1/1] (0.00ns)   --->   "%zext_ln80_52 = zext i32 %tmp_108" [d1.cpp:80]   --->   Operation 736 'zext' 'zext_ln80_52' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 737 '%mul_ln80_82 = mul i64 %zext_ln80_52, i64 %zext_ln78_32'
ST_3 : Operation 737 [1/1] (2.10ns)   --->   "%mul_ln80_82 = mul i64 %zext_ln80_52, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 737 'mul' 'mul_ln80_82' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 738 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_68)   --->   "%select_ln80_47 = select i1 %icmp_ln80_36, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 738 'select' 'select_ln80_47' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 739 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_68 = and i64 %mul_ln80_82, i64 %select_ln80_47" [d1.cpp:80]   --->   Operation 739 'and' 'and_ln80_68' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 740 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_31 = add i64 %and_ln80_14, i64 %and_ln80_29" [d1.cpp:80]   --->   Operation 740 'add' 'add_ln80_31' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 741 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_32 = add i64 %and_ln80_56, i64 %and_ln80_68" [d1.cpp:80]   --->   Operation 741 'add' 'add_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 742 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_33 = add i64 %add_ln80_32, i64 %and_ln80_43" [d1.cpp:80]   --->   Operation 742 'add' 'add_ln80_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 743 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_34 = add i64 %add_ln80_33, i64 %add_ln80_31" [d1.cpp:80]   --->   Operation 743 'add' 'add_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 744 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_35 = add i64 %p_load108, i64 %add_ln80_34" [d1.cpp:80]   --->   Operation 744 'add' 'add_ln80_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 745 [1/1] (0.48ns)   --->   "%tmp_109 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_44" [d1.cpp:80]   --->   Operation 745 'mux' 'tmp_109' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 746 [1/1] (0.00ns)   --->   "%zext_ln80_53 = zext i32 %tmp_109" [d1.cpp:80]   --->   Operation 746 'zext' 'zext_ln80_53' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 747 '%mul_ln80_83 = mul i64 %zext_ln80_53, i64 %zext_ln78_32'
ST_3 : Operation 747 [1/1] (2.10ns)   --->   "%mul_ln80_83 = mul i64 %zext_ln80_53, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 747 'mul' 'mul_ln80_83' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 748 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_69)   --->   "%select_ln80_48 = select i1 %icmp_ln70_1, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 748 'select' 'select_ln80_48' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 749 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_69 = and i64 %mul_ln80_83, i64 %select_ln80_48" [d1.cpp:80]   --->   Operation 749 'and' 'and_ln80_69' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 750 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_36 = add i64 %and_ln80_15, i64 %and_ln80_30" [d1.cpp:80]   --->   Operation 750 'add' 'add_ln80_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 751 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_37 = add i64 %and_ln80_57, i64 %and_ln80_69" [d1.cpp:80]   --->   Operation 751 'add' 'add_ln80_37' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 752 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_38 = add i64 %add_ln80_37, i64 %and_ln80_44" [d1.cpp:80]   --->   Operation 752 'add' 'add_ln80_38' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 753 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_39 = add i64 %add_ln80_38, i64 %add_ln80_36" [d1.cpp:80]   --->   Operation 753 'add' 'add_ln80_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 754 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_40 = add i64 %p_load106, i64 %add_ln80_39" [d1.cpp:80]   --->   Operation 754 'add' 'add_ln80_40' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 755 [1/1] (0.00ns)   --->   "%zext_ln81_24 = zext i1 %icmp_ln70_1" [d1.cpp:81]   --->   Operation 755 'zext' 'zext_ln81_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 756 [1/1] (0.79ns)   --->   "%sub_ln36_45 = sub i4 %sub_ln36_44, i4 %zext_ln81_24" [d1.cpp:36]   --->   Operation 756 'sub' 'sub_ln36_45' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 757 [1/1] (0.48ns)   --->   "%tmp_110 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_45" [d1.cpp:80]   --->   Operation 757 'mux' 'tmp_110' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 758 [1/1] (0.00ns)   --->   "%zext_ln80_54 = zext i32 %tmp_110" [d1.cpp:80]   --->   Operation 758 'zext' 'zext_ln80_54' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 759 '%mul_ln80_84 = mul i64 %zext_ln80_54, i64 %zext_ln78_32'
ST_3 : Operation 759 [1/1] (2.10ns)   --->   "%mul_ln80_84 = mul i64 %zext_ln80_54, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 759 'mul' 'mul_ln80_84' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 760 [1/1] (0.37ns)   --->   "%and_ln80_70 = and i64 %mul_ln80_84, i64 %select_ln78_5" [d1.cpp:80]   --->   Operation 760 'and' 'and_ln80_70' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 761 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_41 = add i64 %and_ln80_16, i64 %and_ln80_31" [d1.cpp:80]   --->   Operation 761 'add' 'add_ln80_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 762 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_42 = add i64 %and_ln80_58, i64 %and_ln80_70" [d1.cpp:80]   --->   Operation 762 'add' 'add_ln80_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 763 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_43 = add i64 %add_ln80_42, i64 %and_ln80_45" [d1.cpp:80]   --->   Operation 763 'add' 'add_ln80_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 764 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_44 = add i64 %add_ln80_43, i64 %add_ln80_41" [d1.cpp:80]   --->   Operation 764 'add' 'add_ln80_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 765 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_45 = add i64 %p_load104, i64 %add_ln80_44" [d1.cpp:80]   --->   Operation 765 'add' 'add_ln80_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 766 [1/1] (0.79ns)   --->   "%sub_ln36_46 = sub i4 %sub_ln36_45, i4 %zext_ln79_3" [d1.cpp:36]   --->   Operation 766 'sub' 'sub_ln36_46' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 767 [1/1] (0.00ns)   --->   "%zext_ln81_25 = zext i1 %icmp_ln80_37" [d1.cpp:81]   --->   Operation 767 'zext' 'zext_ln81_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 768 [1/1] (0.79ns)   --->   "%sub_ln36_47 = sub i4 %sub_ln36_46, i4 %zext_ln81_25" [d1.cpp:36]   --->   Operation 768 'sub' 'sub_ln36_47' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 769 [1/1] (0.00ns)   --->   "%zext_ln81_26 = zext i1 %icmp_ln80_38" [d1.cpp:81]   --->   Operation 769 'zext' 'zext_ln81_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 770 [1/1] (0.79ns)   --->   "%sub_ln36_19 = sub i4 %sub_ln36_47, i4 %zext_ln81_26" [d1.cpp:36]   --->   Operation 770 'sub' 'sub_ln36_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 771 [1/1] (0.00ns)   --->   "%zext_ln81_27 = zext i1 %icmp_ln80_39" [d1.cpp:81]   --->   Operation 771 'zext' 'zext_ln81_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 772 [1/1] (0.79ns)   --->   "%sub_ln36_20 = sub i4 %sub_ln36_19, i4 %zext_ln81_27" [d1.cpp:36]   --->   Operation 772 'sub' 'sub_ln36_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 773 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_45, i64 %empty_36" [d1.cpp:62]   --->   Operation 773 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 774 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_40, i64 %empty_35" [d1.cpp:62]   --->   Operation 774 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 775 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_35, i64 %empty" [d1.cpp:62]   --->   Operation 775 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 776 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_3, i64 %add169813" [d1.cpp:62]   --->   Operation 776 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 962 [1/1] (0.00ns)   --->   "%add169813_load_1 = load i64 %add169813"   --->   Operation 962 'load' 'add169813_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 963 [1/1] (0.00ns)   --->   "%add169_1620814_load_1 = load i64 %add169_1620814"   --->   Operation 963 'load' 'add169_1620814_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 964 [1/1] (0.00ns)   --->   "%add169_2648815_load_1 = load i64 %add169_2648815"   --->   Operation 964 'load' 'add169_2648815_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 965 [1/1] (0.00ns)   --->   "%add169_3676816_load_1 = load i64 %add169_3676816"   --->   Operation 965 'load' 'add169_3676816_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 966 [1/1] (0.00ns)   --->   "%add169_4704817_load_1 = load i64 %add169_4704817"   --->   Operation 966 'load' 'add169_4704817_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 967 [1/1] (0.00ns)   --->   "%add169_5818_load_1 = load i64 %add169_5818"   --->   Operation 967 'load' 'add169_5818_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 968 [1/1] (0.00ns)   --->   "%add169_6819_load_1 = load i64 %add169_6819"   --->   Operation 968 'load' 'add169_6819_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 969 [1/1] (0.00ns)   --->   "%p_load109 = load i64 %empty"   --->   Operation 969 'load' 'p_load109' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 970 [1/1] (0.00ns)   --->   "%p_load107 = load i64 %empty_35"   --->   Operation 970 'load' 'p_load107' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 971 [1/1] (0.00ns)   --->   "%p_load105 = load i64 %empty_36"   --->   Operation 971 'load' 'p_load105' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 972 [1/1] (0.00ns)   --->   "%p_load103 = load i64 %empty_37"   --->   Operation 972 'load' 'p_load103' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 973 [1/1] (0.00ns)   --->   "%p_load101 = load i64 %empty_38"   --->   Operation 973 'load' 'p_load101' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 974 [1/1] (0.00ns)   --->   "%p_load99 = load i64 %empty_39"   --->   Operation 974 'load' 'p_load99' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 975 [1/1] (0.00ns)   --->   "%p_load97 = load i64 %empty_40"   --->   Operation 975 'load' 'p_load97' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 976 [1/1] (0.00ns)   --->   "%p_load95 = load i64 %empty_41"   --->   Operation 976 'load' 'p_load95' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 977 [1/1] (0.00ns)   --->   "%add138840_load_1 = load i64 %add138840"   --->   Operation 977 'load' 'add138840_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 978 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add138840_out, i64 %add138840_load_1"   --->   Operation 978 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 979 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load95"   --->   Operation 979 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 980 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load97"   --->   Operation 980 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 981 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load99"   --->   Operation 981 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 982 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load101"   --->   Operation 982 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 983 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load103"   --->   Operation 983 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 984 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load105"   --->   Operation 984 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 985 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load107"   --->   Operation 985 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 986 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load109"   --->   Operation 986 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 987 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_6819_out, i64 %add169_6819_load_1"   --->   Operation 987 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 988 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_5818_out, i64 %add169_5818_load_1"   --->   Operation 988 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 989 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_4704817_out, i64 %add169_4704817_load_1"   --->   Operation 989 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 990 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_3676816_out, i64 %add169_3676816_load_1"   --->   Operation 990 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 991 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_2648815_out, i64 %add169_2648815_load_1"   --->   Operation 991 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 992 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1620814_out, i64 %add169_1620814_load_1"   --->   Operation 992 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 993 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169813_out, i64 %add169813_load_1"   --->   Operation 993 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 994 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 994 'ret' 'ret_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.97>
ST_4 : Operation 777 [1/1] (0.00ns)   --->   "%add169_1620814_load = load i64 %add169_1620814" [d1.cpp:78]   --->   Operation 777 'load' 'add169_1620814_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 778 [1/1] (0.00ns)   --->   "%add169_2648815_load = load i64 %add169_2648815" [d1.cpp:78]   --->   Operation 778 'load' 'add169_2648815_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 779 [1/1] (0.00ns)   --->   "%add169_3676816_load = load i64 %add169_3676816" [d1.cpp:78]   --->   Operation 779 'load' 'add169_3676816_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 780 [1/1] (0.00ns)   --->   "%add169_4704817_load = load i64 %add169_4704817" [d1.cpp:80]   --->   Operation 780 'load' 'add169_4704817_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 781 [1/1] (0.00ns)   --->   "%add169_5818_load = load i64 %add169_5818" [d1.cpp:80]   --->   Operation 781 'load' 'add169_5818_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 782 [1/1] (0.00ns)   --->   "%add169_6819_load = load i64 %add169_6819" [d1.cpp:80]   --->   Operation 782 'load' 'add169_6819_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 783 [1/1] (0.00ns)   --->   "%p_load102 = load i64 %empty_37" [d1.cpp:80]   --->   Operation 783 'load' 'p_load102' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 784 [1/1] (0.00ns)   --->   "%p_load100 = load i64 %empty_38" [d1.cpp:80]   --->   Operation 784 'load' 'p_load100' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 785 [1/1] (0.00ns)   --->   "%p_load98 = load i64 %empty_39" [d1.cpp:80]   --->   Operation 785 'load' 'p_load98' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 786 [1/1] (0.00ns)   --->   "%p_load96 = load i64 %empty_40" [d1.cpp:80]   --->   Operation 786 'load' 'p_load96' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 787 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_41" [d1.cpp:80]   --->   Operation 787 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 788 [1/1] (0.00ns)   --->   "%add138840_load = load i64 %add138840" [d1.cpp:70]   --->   Operation 788 'load' 'add138840_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 789 [1/1] (0.00ns)   --->   "%specpipeline_ln64 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d1.cpp:64]   --->   Operation 789 'specpipeline' 'specpipeline_ln64' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 790 [1/1] (0.00ns)   --->   "%speclooptripcount_ln62 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d1.cpp:62]   --->   Operation 790 'speclooptripcount' 'speclooptripcount_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 791 [1/1] (0.00ns)   --->   "%specloopname_ln62 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [d1.cpp:62]   --->   Operation 791 'specloopname' 'specloopname_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 792 [1/1] (1.08ns)   --->   "%add_ln70 = add i64 %tmp15, i64 %add138840_load" [d1.cpp:70]   --->   Operation 792 'add' 'add_ln70' <Predicate = (tmp_1)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 793 [1/1] (0.42ns)   --->   "%select_ln70 = select i1 %tmp_1, i64 %add_ln70, i64 %add138840_load" [d1.cpp:70]   --->   Operation 793 'select' 'select_ln70' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 794 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 794 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 795 [1/1] (0.00ns)   --->   "%zext_ln80_9 = zext i32 %tmp_22" [d1.cpp:80]   --->   Operation 795 'zext' 'zext_ln80_9' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 796 '%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78'
ST_4 : Operation 796 [1/1] (2.10ns)   --->   "%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 796 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 797 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 797 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 798 [1/1] (0.00ns)   --->   "%zext_ln80_10 = zext i32 %tmp_23" [d1.cpp:80]   --->   Operation 798 'zext' 'zext_ln80_10' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 799 '%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78'
ST_4 : Operation 799 [1/1] (2.10ns)   --->   "%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 799 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 800 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 800 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 801 [1/1] (0.00ns)   --->   "%zext_ln80_11 = zext i32 %tmp_24" [d1.cpp:80]   --->   Operation 801 'zext' 'zext_ln80_11' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 802 '%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78'
ST_4 : Operation 802 [1/1] (2.10ns)   --->   "%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 802 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 803 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 803 'mux' 'tmp_25' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 804 [1/1] (0.00ns)   --->   "%zext_ln80_12 = zext i32 %tmp_25" [d1.cpp:80]   --->   Operation 804 'zext' 'zext_ln80_12' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 805 '%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78'
ST_4 : Operation 805 [1/1] (2.10ns)   --->   "%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 805 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 806 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 806 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 807 [1/1] (0.00ns)   --->   "%zext_ln80_13 = zext i32 %tmp_26" [d1.cpp:80]   --->   Operation 807 'zext' 'zext_ln80_13' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 808 '%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78'
ST_4 : Operation 808 [1/1] (2.10ns)   --->   "%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 808 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 809 [1/1] (1.08ns)   --->   "%add_ln70_4 = add i64 %tmp33, i64 %select_ln70" [d1.cpp:70]   --->   Operation 809 'add' 'add_ln70_4' <Predicate = (tmp_27)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 810 [1/1] (0.42ns)   --->   "%select_ln70_3 = select i1 %tmp_27, i64 %add_ln70_4, i64 %select_ln70" [d1.cpp:70]   --->   Operation 810 'select' 'select_ln70_3' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 811 [1/1] (0.48ns)   --->   "%tmp_46 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_10" [d1.cpp:80]   --->   Operation 811 'mux' 'tmp_46' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 812 [1/1] (0.00ns)   --->   "%zext_ln80_22 = zext i32 %tmp_46" [d1.cpp:80]   --->   Operation 812 'zext' 'zext_ln80_22' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 813 '%mul_ln80_37 = mul i64 %zext_ln80_22, i64 %zext_ln78_8'
ST_4 : Operation 813 [1/1] (2.10ns)   --->   "%mul_ln80_37 = mul i64 %zext_ln80_22, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 813 'mul' 'mul_ln80_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 814 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%select_ln80_25 = select i1 %icmp_ln80_16, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 814 'select' 'select_ln80_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 815 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%and_ln80_32 = and i64 %mul_ln80_37, i64 %select_ln80_25" [d1.cpp:80]   --->   Operation 815 'and' 'and_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 816 [1/1] (0.00ns)   --->   "%zext_ln81_11 = zext i1 %icmp_ln80_16" [d1.cpp:81]   --->   Operation 816 'zext' 'zext_ln81_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 817 [1/1] (0.79ns)   --->   "%sub_ln36_11 = sub i4 %sub_ln36_10, i4 %zext_ln81_11" [d1.cpp:36]   --->   Operation 817 'sub' 'sub_ln36_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 818 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_11" [d1.cpp:80]   --->   Operation 818 'mux' 'tmp_47' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 819 [1/1] (0.00ns)   --->   "%zext_ln80_23 = zext i32 %tmp_47" [d1.cpp:80]   --->   Operation 819 'zext' 'zext_ln80_23' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 820 '%mul_ln80_38 = mul i64 %zext_ln80_23, i64 %zext_ln78_8'
ST_4 : Operation 820 [1/1] (2.10ns)   --->   "%mul_ln80_38 = mul i64 %zext_ln80_23, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 820 'mul' 'mul_ln80_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 821 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_11" [d1.cpp:80]   --->   Operation 821 'mux' 'tmp_48' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 822 [1/1] (0.00ns)   --->   "%zext_ln80_24 = zext i32 %tmp_48" [d1.cpp:80]   --->   Operation 822 'zext' 'zext_ln80_24' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 823 '%mul_ln80_39 = mul i64 %zext_ln80_24, i64 %zext_ln78_8'
ST_4 : Operation 823 [1/1] (2.10ns)   --->   "%mul_ln80_39 = mul i64 %zext_ln80_24, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 823 'mul' 'mul_ln80_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 824 [1/1] (0.48ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_11" [d1.cpp:80]   --->   Operation 824 'mux' 'tmp_49' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 825 [1/1] (0.00ns)   --->   "%zext_ln80_25 = zext i32 %tmp_49" [d1.cpp:80]   --->   Operation 825 'zext' 'zext_ln80_25' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 826 '%mul_ln80_40 = mul i64 %zext_ln80_25, i64 %zext_ln78_8'
ST_4 : Operation 826 [1/1] (2.10ns)   --->   "%mul_ln80_40 = mul i64 %zext_ln80_25, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 826 'mul' 'mul_ln80_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 827 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i4 %sub_ln36_11" [d1.cpp:80]   --->   Operation 827 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 828 [1/1] (0.00ns)   --->   "%zext_ln80_26 = zext i32 %tmp_50" [d1.cpp:80]   --->   Operation 828 'zext' 'zext_ln80_26' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 829 '%mul_ln80_41 = mul i64 %zext_ln80_26, i64 %zext_ln78_8'
ST_4 : Operation 829 [1/1] (2.10ns)   --->   "%mul_ln80_41 = mul i64 %zext_ln80_26, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 829 'mul' 'mul_ln80_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 830 [1/1] (1.08ns)   --->   "%add_ln70_8 = add i64 %tmp35, i64 %select_ln70_3" [d1.cpp:70]   --->   Operation 830 'add' 'add_ln70_8' <Predicate = (icmp_ln70)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 831 [1/1] (0.42ns)   --->   "%select_ln70_6 = select i1 %icmp_ln70, i64 %add_ln70_8, i64 %select_ln70_3" [d1.cpp:70]   --->   Operation 831 'select' 'select_ln70_6' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 832 [1/1] (0.48ns)   --->   "%tmp_69 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_12" [d1.cpp:80]   --->   Operation 832 'mux' 'tmp_69' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 833 [1/1] (0.00ns)   --->   "%zext_ln80_34 = zext i32 %tmp_69" [d1.cpp:80]   --->   Operation 833 'zext' 'zext_ln80_34' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 834 '%mul_ln80_55 = mul i64 %zext_ln80_34, i64 %zext_ln78_16'
ST_4 : Operation 834 [1/1] (2.10ns)   --->   "%mul_ln80_55 = mul i64 %zext_ln80_34, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 834 'mul' 'mul_ln80_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 835 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_46)   --->   "%select_ln80_33 = select i1 %icmp_ln80_23, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 835 'select' 'select_ln80_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 836 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_46 = and i64 %mul_ln80_55, i64 %select_ln80_33" [d1.cpp:80]   --->   Operation 836 'and' 'and_ln80_46' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 837 [1/1] (0.48ns)   --->   "%tmp_70 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_13" [d1.cpp:80]   --->   Operation 837 'mux' 'tmp_70' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 838 [1/1] (0.00ns)   --->   "%zext_ln80_35 = zext i32 %tmp_70" [d1.cpp:80]   --->   Operation 838 'zext' 'zext_ln80_35' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 839 '%mul_ln80_56 = mul i64 %zext_ln80_35, i64 %zext_ln78_16'
ST_4 : Operation 839 [1/1] (2.10ns)   --->   "%mul_ln80_56 = mul i64 %zext_ln80_35, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 839 'mul' 'mul_ln80_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 840 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_47)   --->   "%select_ln80_34 = select i1 %icmp_ln80_24, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 840 'select' 'select_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 841 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_47 = and i64 %mul_ln80_56, i64 %select_ln80_34" [d1.cpp:80]   --->   Operation 841 'and' 'and_ln80_47' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 842 [1/1] (0.00ns)   --->   "%zext_ln81_16 = zext i1 %icmp_ln80_24" [d1.cpp:81]   --->   Operation 842 'zext' 'zext_ln81_16' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 843 [1/1] (0.79ns)   --->   "%sub_ln36_14 = sub i4 %sub_ln36_13, i4 %zext_ln81_16" [d1.cpp:36]   --->   Operation 843 'sub' 'sub_ln36_14' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 844 [1/1] (0.48ns)   --->   "%tmp_71 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_14" [d1.cpp:80]   --->   Operation 844 'mux' 'tmp_71' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 845 [1/1] (0.00ns)   --->   "%zext_ln80_36 = zext i32 %tmp_71" [d1.cpp:80]   --->   Operation 845 'zext' 'zext_ln80_36' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 846 '%mul_ln80_57 = mul i64 %zext_ln80_36, i64 %zext_ln78_16'
ST_4 : Operation 846 [1/1] (2.10ns)   --->   "%mul_ln80_57 = mul i64 %zext_ln80_36, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 846 'mul' 'mul_ln80_57' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 847 [1/1] (0.48ns)   --->   "%tmp_72 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_14" [d1.cpp:80]   --->   Operation 847 'mux' 'tmp_72' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 848 [1/1] (0.00ns)   --->   "%zext_ln80_37 = zext i32 %tmp_72" [d1.cpp:80]   --->   Operation 848 'zext' 'zext_ln80_37' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 849 '%mul_ln80_58 = mul i64 %zext_ln80_37, i64 %zext_ln78_16'
ST_4 : Operation 849 [1/1] (2.10ns)   --->   "%mul_ln80_58 = mul i64 %zext_ln80_37, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 849 'mul' 'mul_ln80_58' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 850 [1/1] (0.48ns)   --->   "%tmp_73 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_14" [d1.cpp:80]   --->   Operation 850 'mux' 'tmp_73' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 851 [1/1] (0.00ns)   --->   "%zext_ln80_38 = zext i32 %tmp_73" [d1.cpp:80]   --->   Operation 851 'zext' 'zext_ln80_38' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 852 '%mul_ln80_59 = mul i64 %zext_ln80_38, i64 %zext_ln78_16'
ST_4 : Operation 852 [1/1] (2.10ns)   --->   "%mul_ln80_59 = mul i64 %zext_ln80_38, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 852 'mul' 'mul_ln80_59' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 853 [1/1] (1.08ns)   --->   "%add_ln70_12 = add i64 %tmp37, i64 %select_ln70_6" [d1.cpp:70]   --->   Operation 853 'add' 'add_ln70_12' <Predicate = (icmp_ln70_1)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 854 [1/1] (0.42ns)   --->   "%select_ln70_9 = select i1 %icmp_ln70_1, i64 %add_ln70_12, i64 %select_ln70_6" [d1.cpp:70]   --->   Operation 854 'select' 'select_ln70_9' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 855 [1/1] (0.48ns)   --->   "%tmp_90 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_40" [d1.cpp:80]   --->   Operation 855 'mux' 'tmp_90' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 856 [1/1] (0.00ns)   --->   "%zext_ln80_45 = zext i32 %tmp_90" [d1.cpp:80]   --->   Operation 856 'zext' 'zext_ln80_45' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 857 '%mul_ln80_71 = mul i64 %zext_ln80_45, i64 %zext_ln78_24'
ST_4 : Operation 857 [1/1] (2.10ns)   --->   "%mul_ln80_71 = mul i64 %zext_ln80_45, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 857 'mul' 'mul_ln80_71' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 858 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_59)   --->   "%select_ln80_41 = select i1 %icmp_ln80_30, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 858 'select' 'select_ln80_41' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 859 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_59 = and i64 %mul_ln80_71, i64 %select_ln80_41" [d1.cpp:80]   --->   Operation 859 'and' 'and_ln80_59' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 860 [1/1] (0.48ns)   --->   "%tmp_91 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_15" [d1.cpp:80]   --->   Operation 860 'mux' 'tmp_91' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 861 [1/1] (0.00ns)   --->   "%zext_ln80_46 = zext i32 %tmp_91" [d1.cpp:80]   --->   Operation 861 'zext' 'zext_ln80_46' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 862 '%mul_ln80_72 = mul i64 %zext_ln80_46, i64 %zext_ln78_24'
ST_4 : Operation 862 [1/1] (2.10ns)   --->   "%mul_ln80_72 = mul i64 %zext_ln80_46, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 862 'mul' 'mul_ln80_72' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 863 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_60)   --->   "%select_ln80_42 = select i1 %icmp_ln80_31, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 863 'select' 'select_ln80_42' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 864 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_60 = and i64 %mul_ln80_72, i64 %select_ln80_42" [d1.cpp:80]   --->   Operation 864 'and' 'and_ln80_60' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 865 [1/1] (0.48ns)   --->   "%tmp_92 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_16" [d1.cpp:80]   --->   Operation 865 'mux' 'tmp_92' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 866 [1/1] (0.00ns)   --->   "%zext_ln80_47 = zext i32 %tmp_92" [d1.cpp:80]   --->   Operation 866 'zext' 'zext_ln80_47' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 867 '%mul_ln80_73 = mul i64 %zext_ln80_47, i64 %zext_ln78_24'
ST_4 : Operation 867 [1/1] (2.10ns)   --->   "%mul_ln80_73 = mul i64 %zext_ln80_47, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 867 'mul' 'mul_ln80_73' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 868 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_61)   --->   "%select_ln80_43 = select i1 %icmp_ln80_32, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 868 'select' 'select_ln80_43' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 869 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_61 = and i64 %mul_ln80_73, i64 %select_ln80_43" [d1.cpp:80]   --->   Operation 869 'and' 'and_ln80_61' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln81_22 = zext i1 %icmp_ln80_32" [d1.cpp:81]   --->   Operation 870 'zext' 'zext_ln81_22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 871 [1/1] (0.79ns)   --->   "%sub_ln36_17 = sub i4 %sub_ln36_16, i4 %zext_ln81_22" [d1.cpp:36]   --->   Operation 871 'sub' 'sub_ln36_17' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 872 [1/1] (0.48ns)   --->   "%tmp_94 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_17" [d1.cpp:80]   --->   Operation 872 'mux' 'tmp_94' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 873 [1/1] (0.00ns)   --->   "%zext_ln80_48 = zext i32 %tmp_94" [d1.cpp:80]   --->   Operation 873 'zext' 'zext_ln80_48' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 874 '%mul_ln80_74 = mul i64 %zext_ln80_48, i64 %zext_ln78_24'
ST_4 : Operation 874 [1/1] (2.10ns)   --->   "%mul_ln80_74 = mul i64 %zext_ln80_48, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 874 'mul' 'mul_ln80_74' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 875 [1/1] (0.48ns)   --->   "%tmp_95 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_17" [d1.cpp:80]   --->   Operation 875 'mux' 'tmp_95' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln80_49 = zext i32 %tmp_95" [d1.cpp:80]   --->   Operation 876 'zext' 'zext_ln80_49' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 877 '%mul_ln80_75 = mul i64 %zext_ln80_49, i64 %zext_ln78_24'
ST_4 : Operation 877 [1/1] (2.10ns)   --->   "%mul_ln80_75 = mul i64 %zext_ln80_49, i64 %zext_ln78_24" [d1.cpp:80]   --->   Operation 877 'mul' 'mul_ln80_75' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 878 [1/1] (0.48ns)   --->   "%tmp_98 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_7" [d1.cpp:70]   --->   Operation 878 'mux' 'tmp_98' <Predicate = (icmp_ln70_2)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 879 [1/1] (0.00ns)   --->   "%zext_ln70_4 = zext i32 %tmp_98" [d1.cpp:70]   --->   Operation 879 'zext' 'zext_ln70_4' <Predicate = (icmp_ln70_2)> <Delay = 0.00>
ST_4 : Operation 880 [1/1] (0.48ns)   --->   "%tmp_99 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_6" [d1.cpp:70]   --->   Operation 880 'mux' 'tmp_99' <Predicate = (icmp_ln70_2)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 881 [1/1] (0.00ns)   --->   "%tmp_100_cast = zext i32 %tmp_99" [d1.cpp:70]   --->   Operation 881 'zext' 'tmp_100_cast' <Predicate = (icmp_ln70_2)> <Delay = 0.00>
ST_4 : Operation 882 [1/1] (1.01ns)   --->   "%tmp38 = add i33 %tmp_100_cast, i33 %zext_ln70_4" [d1.cpp:70]   --->   Operation 882 'add' 'tmp38' <Predicate = (icmp_ln70_2)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 883 [1/1] (0.00ns)   --->   "%tmp38_cast = zext i33 %tmp38" [d1.cpp:70]   --->   Operation 883 'zext' 'tmp38_cast' <Predicate = (icmp_ln70_2)> <Delay = 0.00>
ST_4 : [1/1] (0.66ns)   --->   Input mux for Operation 884 '%tmp39 = mul i64 %tmp38_cast, i64 %zext_ln78_32'
ST_4 : Operation 884 [1/1] (2.75ns)   --->   "%tmp39 = mul i64 %tmp38_cast, i64 %zext_ln78_32" [d1.cpp:70]   --->   Operation 884 'mul' 'tmp39' <Predicate = (icmp_ln70_2)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 885 [1/1] (1.08ns)   --->   "%add_ln70_16 = add i64 %tmp39, i64 %select_ln70_9" [d1.cpp:70]   --->   Operation 885 'add' 'add_ln70_16' <Predicate = (icmp_ln70_2)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 886 [1/1] (0.42ns)   --->   "%select_ln70_12 = select i1 %icmp_ln70_2, i64 %add_ln70_16, i64 %select_ln70_9" [d1.cpp:70]   --->   Operation 886 'select' 'select_ln70_12' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 887 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_14 = add i64 %add_ln78_13, i64 %add_ln78_10" [d1.cpp:78]   --->   Operation 887 'add' 'add_ln78_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 888 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_6 = add i64 %add169_1620814_load, i64 %add_ln78_14" [d1.cpp:78]   --->   Operation 888 'add' 'add_ln78_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 889 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_21 = add i64 %add_ln78_20, i64 %add_ln78_17" [d1.cpp:78]   --->   Operation 889 'add' 'add_ln78_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 890 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_8 = add i64 %add169_2648815_load, i64 %add_ln78_21" [d1.cpp:78]   --->   Operation 890 'add' 'add_ln78_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 891 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_29 = add i64 %add_ln78_28, i64 %add_ln78_24" [d1.cpp:78]   --->   Operation 891 'add' 'add_ln78_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 892 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_9 = add i64 %add169_3676816_load, i64 %add_ln78_29" [d1.cpp:78]   --->   Operation 892 'add' 'add_ln78_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 893 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i64 %add_ln80_8, i64 %add_ln80_4" [d1.cpp:80]   --->   Operation 893 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 894 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_10 = add i64 %add169_4704817_load, i64 %add_ln80_9" [d1.cpp:80]   --->   Operation 894 'add' 'add_ln80_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 895 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_19 = add i64 %add_ln80_18, i64 %add_ln80_14" [d1.cpp:80]   --->   Operation 895 'add' 'add_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 896 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_20 = add i64 %add169_5818_load, i64 %add_ln80_19" [d1.cpp:80]   --->   Operation 896 'add' 'add_ln80_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 897 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_29 = add i64 %add_ln80_28, i64 %add_ln80_24" [d1.cpp:80]   --->   Operation 897 'add' 'add_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 898 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_30 = add i64 %add169_6819_load, i64 %add_ln80_29" [d1.cpp:80]   --->   Operation 898 'add' 'add_ln80_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 899 [1/1] (0.48ns)   --->   "%tmp_111 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_46" [d1.cpp:80]   --->   Operation 899 'mux' 'tmp_111' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 900 [1/1] (0.00ns)   --->   "%zext_ln80_55 = zext i32 %tmp_111" [d1.cpp:80]   --->   Operation 900 'zext' 'zext_ln80_55' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 901 '%mul_ln80_85 = mul i64 %zext_ln80_55, i64 %zext_ln78_32'
ST_4 : Operation 901 [1/1] (2.10ns)   --->   "%mul_ln80_85 = mul i64 %zext_ln80_55, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 901 'mul' 'mul_ln80_85' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 902 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_71)   --->   "%select_ln80_49 = select i1 %icmp_ln80_37, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 902 'select' 'select_ln80_49' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 903 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_71 = and i64 %mul_ln80_85, i64 %select_ln80_49" [d1.cpp:80]   --->   Operation 903 'and' 'and_ln80_71' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 904 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_46 = add i64 %mul_ln80_17, i64 %and_ln80_32" [d1.cpp:80]   --->   Operation 904 'add' 'add_ln80_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 905 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_47 = add i64 %and_ln80_59, i64 %and_ln80_71" [d1.cpp:80]   --->   Operation 905 'add' 'add_ln80_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 906 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_48 = add i64 %add_ln80_47, i64 %and_ln80_46" [d1.cpp:80]   --->   Operation 906 'add' 'add_ln80_48' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 907 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_49 = add i64 %add_ln80_48, i64 %add_ln80_46" [d1.cpp:80]   --->   Operation 907 'add' 'add_ln80_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 908 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_50 = add i64 %p_load102, i64 %add_ln80_49" [d1.cpp:80]   --->   Operation 908 'add' 'add_ln80_50' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 909 [1/1] (0.48ns)   --->   "%tmp_112 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_47" [d1.cpp:80]   --->   Operation 909 'mux' 'tmp_112' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 910 [1/1] (0.00ns)   --->   "%zext_ln80_56 = zext i32 %tmp_112" [d1.cpp:80]   --->   Operation 910 'zext' 'zext_ln80_56' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 911 '%mul_ln80_86 = mul i64 %zext_ln80_56, i64 %zext_ln78_32'
ST_4 : Operation 911 [1/1] (2.10ns)   --->   "%mul_ln80_86 = mul i64 %zext_ln80_56, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 911 'mul' 'mul_ln80_86' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 912 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_72)   --->   "%select_ln80_50 = select i1 %icmp_ln80_38, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 912 'select' 'select_ln80_50' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 913 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_72 = and i64 %mul_ln80_86, i64 %select_ln80_50" [d1.cpp:80]   --->   Operation 913 'and' 'and_ln80_72' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 914 [1/1] (1.08ns)   --->   "%add_ln80_51 = add i64 %mul_ln80_18, i64 %mul_ln80_38" [d1.cpp:80]   --->   Operation 914 'add' 'add_ln80_51' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 915 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_52 = add i64 %and_ln80_60, i64 %and_ln80_72" [d1.cpp:80]   --->   Operation 915 'add' 'add_ln80_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 916 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_53 = add i64 %add_ln80_52, i64 %and_ln80_47" [d1.cpp:80]   --->   Operation 916 'add' 'add_ln80_53' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 917 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_54 = add i64 %add_ln80_53, i64 %add_ln80_51" [d1.cpp:80]   --->   Operation 917 'add' 'add_ln80_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 918 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_55 = add i64 %p_load100, i64 %add_ln80_54" [d1.cpp:80]   --->   Operation 918 'add' 'add_ln80_55' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 919 [1/1] (0.48ns)   --->   "%tmp_113 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_19" [d1.cpp:80]   --->   Operation 919 'mux' 'tmp_113' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 920 [1/1] (0.00ns)   --->   "%zext_ln80_57 = zext i32 %tmp_113" [d1.cpp:80]   --->   Operation 920 'zext' 'zext_ln80_57' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 921 '%mul_ln80_87 = mul i64 %zext_ln80_57, i64 %zext_ln78_32'
ST_4 : Operation 921 [1/1] (2.10ns)   --->   "%mul_ln80_87 = mul i64 %zext_ln80_57, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 921 'mul' 'mul_ln80_87' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 922 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_73)   --->   "%select_ln80_51 = select i1 %icmp_ln80_39, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 922 'select' 'select_ln80_51' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 923 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_73 = and i64 %mul_ln80_87, i64 %select_ln80_51" [d1.cpp:80]   --->   Operation 923 'and' 'and_ln80_73' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 924 [1/1] (1.08ns)   --->   "%add_ln80_56 = add i64 %mul_ln80_19, i64 %mul_ln80_39" [d1.cpp:80]   --->   Operation 924 'add' 'add_ln80_56' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 925 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_57 = add i64 %and_ln80_61, i64 %and_ln80_73" [d1.cpp:80]   --->   Operation 925 'add' 'add_ln80_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 926 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_58 = add i64 %add_ln80_57, i64 %mul_ln80_57" [d1.cpp:80]   --->   Operation 926 'add' 'add_ln80_58' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 927 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_59 = add i64 %add_ln80_58, i64 %add_ln80_56" [d1.cpp:80]   --->   Operation 927 'add' 'add_ln80_59' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 928 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_60 = add i64 %p_load98, i64 %add_ln80_59" [d1.cpp:80]   --->   Operation 928 'add' 'add_ln80_60' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 929 [1/1] (0.48ns)   --->   "%tmp_115 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_20" [d1.cpp:80]   --->   Operation 929 'mux' 'tmp_115' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 930 [1/1] (0.00ns)   --->   "%zext_ln80_58 = zext i32 %tmp_115" [d1.cpp:80]   --->   Operation 930 'zext' 'zext_ln80_58' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 931 '%mul_ln80_88 = mul i64 %zext_ln80_58, i64 %zext_ln78_32'
ST_4 : Operation 931 [1/1] (2.10ns)   --->   "%mul_ln80_88 = mul i64 %zext_ln80_58, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 931 'mul' 'mul_ln80_88' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 932 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_74)   --->   "%select_ln80_52 = select i1 %icmp_ln80_40, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 932 'select' 'select_ln80_52' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 933 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_74 = and i64 %mul_ln80_88, i64 %select_ln80_52" [d1.cpp:80]   --->   Operation 933 'and' 'and_ln80_74' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 934 [1/1] (1.08ns)   --->   "%add_ln80_61 = add i64 %mul_ln80_20, i64 %mul_ln80_40" [d1.cpp:80]   --->   Operation 934 'add' 'add_ln80_61' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 935 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_62 = add i64 %mul_ln80_74, i64 %and_ln80_74" [d1.cpp:80]   --->   Operation 935 'add' 'add_ln80_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 936 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_63 = add i64 %add_ln80_62, i64 %mul_ln80_58" [d1.cpp:80]   --->   Operation 936 'add' 'add_ln80_63' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 937 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_64 = add i64 %add_ln80_63, i64 %add_ln80_61" [d1.cpp:80]   --->   Operation 937 'add' 'add_ln80_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 938 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_65 = add i64 %p_load96, i64 %add_ln80_64" [d1.cpp:80]   --->   Operation 938 'add' 'add_ln80_65' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 939 [1/1] (0.00ns)   --->   "%zext_ln81_28 = zext i1 %icmp_ln80_40" [d1.cpp:81]   --->   Operation 939 'zext' 'zext_ln81_28' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 940 [1/1] (0.79ns)   --->   "%sub_ln36_21 = sub i4 %sub_ln36_20, i4 %zext_ln81_28" [d1.cpp:36]   --->   Operation 940 'sub' 'sub_ln36_21' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 941 [1/1] (0.48ns)   --->   "%tmp_116 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_21" [d1.cpp:80]   --->   Operation 941 'mux' 'tmp_116' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 942 [1/1] (0.00ns)   --->   "%zext_ln80_59 = zext i32 %tmp_116" [d1.cpp:80]   --->   Operation 942 'zext' 'zext_ln80_59' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 943 '%mul_ln80_89 = mul i64 %zext_ln80_59, i64 %zext_ln78_32'
ST_4 : Operation 943 [1/1] (2.10ns)   --->   "%mul_ln80_89 = mul i64 %zext_ln80_59, i64 %zext_ln78_32" [d1.cpp:80]   --->   Operation 943 'mul' 'mul_ln80_89' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 944 [1/1] (1.08ns)   --->   "%add_ln80_66 = add i64 %mul_ln80_21, i64 %mul_ln80_41" [d1.cpp:80]   --->   Operation 944 'add' 'add_ln80_66' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 945 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_67 = add i64 %mul_ln80_75, i64 %mul_ln80_89" [d1.cpp:80]   --->   Operation 945 'add' 'add_ln80_67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 946 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_68 = add i64 %add_ln80_67, i64 %mul_ln80_59" [d1.cpp:80]   --->   Operation 946 'add' 'add_ln80_68' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 947 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_69 = add i64 %add_ln80_68, i64 %add_ln80_66" [d1.cpp:80]   --->   Operation 947 'add' 'add_ln80_69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 948 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_70 = add i64 %p_load, i64 %add_ln80_69" [d1.cpp:80]   --->   Operation 948 'add' 'add_ln80_70' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 949 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %select_ln70_12, i64 %add138840" [d1.cpp:62]   --->   Operation 949 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 950 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_70, i64 %empty_41" [d1.cpp:62]   --->   Operation 950 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 951 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_65, i64 %empty_40" [d1.cpp:62]   --->   Operation 951 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 952 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_60, i64 %empty_39" [d1.cpp:62]   --->   Operation 952 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 953 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_55, i64 %empty_38" [d1.cpp:62]   --->   Operation 953 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 954 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_50, i64 %empty_37" [d1.cpp:62]   --->   Operation 954 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 955 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_30, i64 %add169_6819" [d1.cpp:62]   --->   Operation 955 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 956 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_20, i64 %add169_5818" [d1.cpp:62]   --->   Operation 956 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 957 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_10, i64 %add169_4704817" [d1.cpp:62]   --->   Operation 957 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 958 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_9, i64 %add169_3676816" [d1.cpp:62]   --->   Operation 958 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 959 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_8, i64 %add169_2648815" [d1.cpp:62]   --->   Operation 959 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 960 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_6, i64 %add169_1620814" [d1.cpp:62]   --->   Operation 960 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 961 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body113" [d1.cpp:62]   --->   Operation 961 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [82]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [130]  (0.427 ns)

 <State 2>: 7.752ns
The critical path consists of the following:
	'load' operation ('k1_load', d1.cpp:62) on local variable 'k1' [157]  (0.000 ns)
	'add' operation ('k1', d1.cpp:70) [184]  (1.016 ns)
	'select' operation ('k1', d1.cpp:70) [196]  (0.449 ns)
	'add' operation ('k1', d1.cpp:70) [338]  (1.016 ns)
	'select' operation ('k1', d1.cpp:70) [350]  (0.449 ns)
	'add' operation ('k1', d1.cpp:70) [485]  (1.016 ns)
	'select' operation ('k1', d1.cpp:70) [497]  (0.449 ns)
	'add' operation ('k1', d1.cpp:70) [628]  (1.016 ns)
	'select' operation ('k1', d1.cpp:70) [640]  (0.449 ns)
	'add' operation ('k1', d1.cpp:70) [769]  (1.016 ns)
	'select' operation ('k1', d1.cpp:70) [781]  (0.449 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'k1', d1.cpp:70 on local variable 'k1' [1018]  (0.427 ns)

 <State 3>: 7.150ns
The critical path consists of the following:
	'sub' operation ('sub_ln36_33', d1.cpp:36) [592]  (0.797 ns)
	'mux' operation ('tmp_68', d1.cpp:80) [593]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln80_54', d1.cpp:80) [595]  (2.103 ns)
	'and' operation ('and_ln80_45', d1.cpp:80) [596]  (0.379 ns)
	'add' operation ('add_ln80_43', d1.cpp:80) [934]  (0.819 ns)
	'add' operation ('add_ln80_44', d1.cpp:80) [935]  (0.000 ns)
	'add' operation ('add_ln80_45', d1.cpp:80) [936]  (0.819 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_45', d1.cpp:80 on local variable 'empty_36' [1008]  (0.427 ns)

 <State 4>: 7.972ns
The critical path consists of the following:
	'load' operation ('add138840_load', d1.cpp:70) on local variable 'add138840' [173]  (0.000 ns)
	'add' operation ('add_ln70', d1.cpp:70) [193]  (1.085 ns)
	'select' operation ('select_ln70', d1.cpp:70) [194]  (0.424 ns)
	'add' operation ('add_ln70_4', d1.cpp:70) [347]  (1.085 ns)
	'select' operation ('select_ln70_3', d1.cpp:70) [348]  (0.424 ns)
	'add' operation ('add_ln70_8', d1.cpp:70) [494]  (1.085 ns)
	'select' operation ('select_ln70_6', d1.cpp:70) [495]  (0.424 ns)
	'add' operation ('add_ln70_12', d1.cpp:70) [637]  (1.085 ns)
	'select' operation ('select_ln70_9', d1.cpp:70) [638]  (0.424 ns)
	'add' operation ('add_ln70_16', d1.cpp:70) [778]  (1.085 ns)
	'select' operation ('select_ln70_12', d1.cpp:70) [779]  (0.424 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'select_ln70_12', d1.cpp:70 on local variable 'add138840' [1002]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
