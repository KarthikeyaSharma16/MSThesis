

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_37_1'
================================================================
* Date:           Fri May 10 15:34:59 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_47 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.015 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        9|        9|  90.000 ns|  90.000 ns|    9|    9|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_37_1  |        7|        7|         2|          1|          1|     7|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add471211 = alloca i32 1"   --->   Operation 5 'alloca' 'add471211' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add47_110271212 = alloca i32 1"   --->   Operation 6 'alloca' 'add47_110271212' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add47_210621213 = alloca i32 1"   --->   Operation 7 'alloca' 'add47_210621213' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add47_11214 = alloca i32 1"   --->   Operation 8 'alloca' 'add47_11214' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add47_1_11215 = alloca i32 1"   --->   Operation 9 'alloca' 'add47_1_11215' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add47_1_21216 = alloca i32 1"   --->   Operation 10 'alloca' 'add47_1_21216' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add47_21217 = alloca i32 1"   --->   Operation 11 'alloca' 'add47_21217' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add47_2_21219 = alloca i32 1"   --->   Operation 12 'alloca' 'add47_2_21219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add47_31220 = alloca i32 1"   --->   Operation 13 'alloca' 'add47_31220' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add47_3_11221 = alloca i32 1"   --->   Operation 14 'alloca' 'add47_3_11221' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%add47_3_21222 = alloca i32 1"   --->   Operation 15 'alloca' 'add47_3_21222' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%add47_41223 = alloca i32 1"   --->   Operation 16 'alloca' 'add47_41223' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%add47_4_11224 = alloca i32 1"   --->   Operation 17 'alloca' 'add47_4_11224' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%add47_4_21225 = alloca i32 1"   --->   Operation 18 'alloca' 'add47_4_21225' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 20 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 21 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 22 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 23 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 24 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 25 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 26 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 27 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 28 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 29 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 30 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 31 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 32 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 33 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 34 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 35 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_4_21225"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_4_11224"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_41223"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_3_21222"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_3_11221"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_31220"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_2_21219"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_21217"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_1_21216"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_1_11215"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_11214"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_210621213"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add47_110271212"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add471211"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31"   --->   Operation 51 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.17>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i"   --->   Operation 52 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.79ns)   --->   "%icmp_ln37 = icmp_ugt  i4 %i_2, i4 8" [d1.cpp:37]   --->   Operation 53 'icmp' 'icmp_ln37' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %icmp_ln37, void %VITIS_LOOP_88_9.exitStub, void %for.body31.split" [d1.cpp:37]   --->   Operation 54 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%add471211_load = load i64 %add471211" [d1.cpp:50]   --->   Operation 55 'load' 'add471211_load' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%add47_110271212_load = load i64 %add47_110271212" [d1.cpp:50]   --->   Operation 56 'load' 'add47_110271212_load' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%add47_2_21219_load = load i64 %add47_2_21219" [d1.cpp:52]   --->   Operation 57 'load' 'add47_2_21219_load' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%add47_31220_load = load i64 %add47_31220" [d1.cpp:52]   --->   Operation 58 'load' 'add47_31220_load' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i4 %i_2" [d1.cpp:37]   --->   Operation 59 'zext' 'zext_ln37' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.79ns)   --->   "%empty = add i5 %zext_ln37, i5 1" [d1.cpp:37]   --->   Operation 60 'add' 'empty' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.79ns)   --->   "%empty_33 = add i4 %i_2, i4 9"   --->   Operation 61 'add' 'empty_33' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.48ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_2" [d1.cpp:50]   --->   Operation 62 'mux' 'tmp' <Predicate = (icmp_ln37)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i32 %tmp" [d1.cpp:50]   --->   Operation 63 'zext' 'zext_ln50' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 64 '%mul_ln50 = mul i64 %zext_ln50, i64 %conv36_cast'
ST_2 : Operation 64 [1/1] (2.10ns)   --->   "%mul_ln50 = mul i64 %zext_ln50, i64 %conv36_cast" [d1.cpp:50]   --->   Operation 64 'mul' 'mul_ln50' <Predicate = (icmp_ln37)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d1.cpp:50]   --->   Operation 65 'bitselect' 'tmp_10' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty, i32 4" [d1.cpp:50]   --->   Operation 66 'bitselect' 'tmp_11' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%select_ln50_1 = select i1 %tmp_11, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 67 'select' 'select_ln50_1' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%and_ln50 = and i64 %mul_ln50, i64 %select_ln50_1" [d1.cpp:50]   --->   Operation 68 'and' 'and_ln50' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50 = add i64 %and_ln50, i64 %add471211_load" [d1.cpp:50]   --->   Operation 69 'add' 'add_ln50' <Predicate = (icmp_ln37)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_6)   --->   "%select_ln50_2 = select i1 %tmp_10, i3 6, i3 7" [d1.cpp:50]   --->   Operation 70 'select' 'select_ln50_2' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.44ns)   --->   "%select_ln50 = select i1 %tmp_10, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:50]   --->   Operation 71 'select' 'select_ln50' <Predicate = (icmp_ln37)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i32 %select_ln50" [d1.cpp:50]   --->   Operation 72 'zext' 'zext_ln50_1' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.78ns)   --->   "%icmp_ln50 = icmp_ugt  i5 %empty, i5 14" [d1.cpp:50]   --->   Operation 73 'icmp' 'icmp_ln50' <Predicate = (icmp_ln37)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 74 '%mul_ln50_1 = mul i64 %zext_ln50_1, i64 %zext_ln50'
ST_2 : Operation 74 [1/1] (2.10ns)   --->   "%mul_ln50_1 = mul i64 %zext_ln50_1, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 74 'mul' 'mul_ln50_1' <Predicate = (icmp_ln37)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%select_ln50_3 = select i1 %icmp_ln50, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 75 'select' 'select_ln50_3' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%and_ln50_1 = and i64 %mul_ln50_1, i64 %select_ln50_3" [d1.cpp:50]   --->   Operation 76 'and' 'and_ln50_1' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_1 = add i64 %and_ln50_1, i64 %add47_110271212_load" [d1.cpp:50]   --->   Operation 77 'add' 'add_ln50_1' <Predicate = (icmp_ln37)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_6)   --->   "%zext_ln36 = zext i1 %icmp_ln50" [d1.cpp:36]   --->   Operation 78 'zext' 'zext_ln36' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_6 = sub i3 %select_ln50_2, i3 %zext_ln36" [d1.cpp:36]   --->   Operation 79 'sub' 'sub_ln36_6' <Predicate = (icmp_ln37)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.78ns)   --->   "%icmp_ln50_1 = icmp_ugt  i5 %empty, i5 13" [d1.cpp:50]   --->   Operation 80 'icmp' 'icmp_ln50_1' <Predicate = (icmp_ln37)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i1 %icmp_ln50_1" [d1.cpp:36]   --->   Operation 81 'zext' 'zext_ln36_1' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.67ns)   --->   "%sub_ln36_7 = sub i3 %sub_ln36_6, i3 %zext_ln36_1" [d1.cpp:36]   --->   Operation 82 'sub' 'sub_ln36_7' <Predicate = (icmp_ln37)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln50_1 = sext i3 %sub_ln36_7" [d1.cpp:50]   --->   Operation 83 'sext' 'sext_ln50_1' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.78ns)   --->   "%icmp_ln50_2 = icmp_ugt  i5 %empty, i5 12" [d1.cpp:50]   --->   Operation 84 'icmp' 'icmp_ln50_2' <Predicate = (icmp_ln37)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i1 %icmp_ln50_2" [d1.cpp:51]   --->   Operation 85 'zext' 'zext_ln51' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.67ns)   --->   "%sub_ln36 = sub i4 %sext_ln50_1, i4 %zext_ln51" [d1.cpp:36]   --->   Operation 86 'sub' 'sub_ln36' <Predicate = (icmp_ln37)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.78ns)   --->   "%icmp_ln50_3 = icmp_ugt  i5 %empty, i5 11" [d1.cpp:50]   --->   Operation 87 'icmp' 'icmp_ln50_3' <Predicate = (icmp_ln37)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.78ns)   --->   "%icmp_ln50_4 = icmp_ugt  i5 %empty, i5 10" [d1.cpp:50]   --->   Operation 88 'icmp' 'icmp_ln50_4' <Predicate = (icmp_ln37)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %empty_33, i32 3" [d1.cpp:52]   --->   Operation 89 'bitselect' 'tmp_12' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln52)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %empty_33, i32 3" [d1.cpp:52]   --->   Operation 90 'bitselect' 'tmp_13' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node add_ln52)   --->   "%select_ln52_1 = select i1 %tmp_13, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 91 'select' 'select_ln52_1' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node add_ln52)   --->   "%and_ln52 = and i64 %mul_ln50, i64 %select_ln52_1" [d1.cpp:52]   --->   Operation 92 'and' 'and_ln52' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52 = add i64 %and_ln52, i64 %add47_2_21219_load" [d1.cpp:52]   --->   Operation 93 'add' 'add_ln52' <Predicate = (icmp_ln37)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_8)   --->   "%select_ln52_2 = select i1 %tmp_12, i3 6, i3 7" [d1.cpp:52]   --->   Operation 94 'select' 'select_ln52_2' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.44ns)   --->   "%select_ln52 = select i1 %tmp_12, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:52]   --->   Operation 95 'select' 'select_ln52' <Predicate = (icmp_ln37)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i32 %select_ln52" [d1.cpp:52]   --->   Operation 96 'zext' 'zext_ln52' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.79ns)   --->   "%icmp_ln52 = icmp_ugt  i4 %empty_33, i4 6" [d1.cpp:52]   --->   Operation 97 'icmp' 'icmp_ln52' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 98 '%mul_ln52 = mul i64 %zext_ln52, i64 %zext_ln50'
ST_2 : Operation 98 [1/1] (2.10ns)   --->   "%mul_ln52 = mul i64 %zext_ln52, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 98 'mul' 'mul_ln52' <Predicate = (icmp_ln37)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%select_ln52_3 = select i1 %icmp_ln52, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 99 'select' 'select_ln52_3' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%and_ln52_1 = and i64 %mul_ln52, i64 %select_ln52_3" [d1.cpp:52]   --->   Operation 100 'and' 'and_ln52_1' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52_1 = add i64 %and_ln52_1, i64 %add47_31220_load" [d1.cpp:52]   --->   Operation 101 'add' 'add_ln52_1' <Predicate = (icmp_ln37)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_8)   --->   "%zext_ln36_2 = zext i1 %icmp_ln52" [d1.cpp:36]   --->   Operation 102 'zext' 'zext_ln36_2' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 103 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_8 = sub i3 %select_ln52_2, i3 %zext_ln36_2" [d1.cpp:36]   --->   Operation 103 'sub' 'sub_ln36_8' <Predicate = (icmp_ln37)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.79ns)   --->   "%icmp_ln52_1 = icmp_ugt  i4 %empty_33, i4 5" [d1.cpp:52]   --->   Operation 104 'icmp' 'icmp_ln52_1' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i1 %icmp_ln52_1" [d1.cpp:36]   --->   Operation 105 'zext' 'zext_ln36_3' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.67ns)   --->   "%sub_ln36_9 = sub i3 %sub_ln36_8, i3 %zext_ln36_3" [d1.cpp:36]   --->   Operation 106 'sub' 'sub_ln36_9' <Predicate = (icmp_ln37)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%sext_ln52_1 = sext i3 %sub_ln36_9" [d1.cpp:52]   --->   Operation 107 'sext' 'sext_ln52_1' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.79ns)   --->   "%icmp_ln52_2 = icmp_ugt  i4 %empty_33, i4 4" [d1.cpp:52]   --->   Operation 108 'icmp' 'icmp_ln52_2' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %icmp_ln52_2" [d1.cpp:53]   --->   Operation 109 'zext' 'zext_ln53' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.67ns)   --->   "%sub_ln36_3 = sub i4 %sext_ln52_1, i4 %zext_ln53" [d1.cpp:36]   --->   Operation 110 'sub' 'sub_ln36_3' <Predicate = (icmp_ln37)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_33, i32 2, i32 3" [d1.cpp:52]   --->   Operation 111 'partselect' 'tmp_14' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.54ns)   --->   "%icmp_ln52_3 = icmp_ne  i2 %tmp_14, i2 0" [d1.cpp:52]   --->   Operation 112 'icmp' 'icmp_ln52_3' <Predicate = (icmp_ln37)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.79ns)   --->   "%icmp_ln52_4 = icmp_ugt  i4 %empty_33, i4 2" [d1.cpp:52]   --->   Operation 113 'icmp' 'icmp_ln52_4' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.79ns)   --->   "%add_ln37 = add i4 %i_2, i4 15" [d1.cpp:37]   --->   Operation 114 'add' 'add_ln37' <Predicate = (icmp_ln37)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.42ns)   --->   "%store_ln37 = store i4 %add_ln37, i4 %i" [d1.cpp:37]   --->   Operation 115 'store' 'store_ln37' <Predicate = (icmp_ln37)> <Delay = 0.42>
ST_2 : Operation 116 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_1, i64 %add47_31220" [d1.cpp:37]   --->   Operation 116 'store' 'store_ln37' <Predicate = (icmp_ln37)> <Delay = 0.42>
ST_2 : Operation 117 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52, i64 %add47_2_21219" [d1.cpp:37]   --->   Operation 117 'store' 'store_ln37' <Predicate = (icmp_ln37)> <Delay = 0.42>
ST_2 : Operation 118 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_1, i64 %add47_110271212" [d1.cpp:37]   --->   Operation 118 'store' 'store_ln37' <Predicate = (icmp_ln37)> <Delay = 0.42>
ST_2 : Operation 119 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50, i64 %add471211" [d1.cpp:37]   --->   Operation 119 'store' 'store_ln37' <Predicate = (icmp_ln37)> <Delay = 0.42>
ST_2 : Operation 210 [1/1] (0.00ns)   --->   "%add471211_load_1 = load i64 %add471211"   --->   Operation 210 'load' 'add471211_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 211 [1/1] (0.00ns)   --->   "%add47_110271212_load_1 = load i64 %add47_110271212"   --->   Operation 211 'load' 'add47_110271212_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 212 [1/1] (0.00ns)   --->   "%add47_210621213_load_1 = load i64 %add47_210621213"   --->   Operation 212 'load' 'add47_210621213_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 213 [1/1] (0.00ns)   --->   "%add47_11214_load_1 = load i64 %add47_11214"   --->   Operation 213 'load' 'add47_11214_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 214 [1/1] (0.00ns)   --->   "%add47_1_11215_load_1 = load i64 %add47_1_11215"   --->   Operation 214 'load' 'add47_1_11215_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 215 [1/1] (0.00ns)   --->   "%add47_1_21216_load_1 = load i64 %add47_1_21216"   --->   Operation 215 'load' 'add47_1_21216_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%add47_21217_load_1 = load i64 %add47_21217"   --->   Operation 216 'load' 'add47_21217_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 217 [1/1] (0.00ns)   --->   "%add47_2_21219_load_1 = load i64 %add47_2_21219"   --->   Operation 217 'load' 'add47_2_21219_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 218 [1/1] (0.00ns)   --->   "%add47_31220_load_1 = load i64 %add47_31220"   --->   Operation 218 'load' 'add47_31220_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 219 [1/1] (0.00ns)   --->   "%add47_3_11221_load_1 = load i64 %add47_3_11221"   --->   Operation 219 'load' 'add47_3_11221_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%add47_3_21222_load_1 = load i64 %add47_3_21222"   --->   Operation 220 'load' 'add47_3_21222_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%add47_41223_load_1 = load i64 %add47_41223"   --->   Operation 221 'load' 'add47_41223_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.00ns)   --->   "%add47_4_11224_load_1 = load i64 %add47_4_11224"   --->   Operation 222 'load' 'add47_4_11224_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 223 [1/1] (0.00ns)   --->   "%add47_4_21225_load_1 = load i64 %add47_4_21225"   --->   Operation 223 'load' 'add47_4_21225_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_4_21225_out, i64 %add47_4_21225_load_1"   --->   Operation 224 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_4_11224_out, i64 %add47_4_11224_load_1"   --->   Operation 225 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 226 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_41223_out, i64 %add47_41223_load_1"   --->   Operation 226 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 227 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_3_21222_out, i64 %add47_3_21222_load_1"   --->   Operation 227 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 228 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_3_11221_out, i64 %add47_3_11221_load_1"   --->   Operation 228 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 229 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_31220_out, i64 %add47_31220_load_1"   --->   Operation 229 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 230 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_2_21219_out, i64 %add47_2_21219_load_1"   --->   Operation 230 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_21217_out, i64 %add47_21217_load_1"   --->   Operation 231 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_1_21216_out, i64 %add47_1_21216_load_1"   --->   Operation 232 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 233 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_1_11215_out, i64 %add47_1_11215_load_1"   --->   Operation 233 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_11214_out, i64 %add47_11214_load_1"   --->   Operation 234 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_210621213_out, i64 %add47_210621213_load_1"   --->   Operation 235 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 236 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add47_110271212_out, i64 %add47_110271212_load_1"   --->   Operation 236 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 237 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add471211_out, i64 %add471211_load_1"   --->   Operation 237 'write' 'write_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 238 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 238 'ret' 'ret_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.01>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%add47_210621213_load = load i64 %add47_210621213" [d1.cpp:50]   --->   Operation 120 'load' 'add47_210621213_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%add47_11214_load = load i64 %add47_11214" [d1.cpp:50]   --->   Operation 121 'load' 'add47_11214_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%add47_1_11215_load = load i64 %add47_1_11215" [d1.cpp:50]   --->   Operation 122 'load' 'add47_1_11215_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.00ns)   --->   "%add47_1_21216_load = load i64 %add47_1_21216" [d1.cpp:50]   --->   Operation 123 'load' 'add47_1_21216_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%add47_21217_load = load i64 %add47_21217" [d1.cpp:50]   --->   Operation 124 'load' 'add47_21217_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%add47_3_11221_load = load i64 %add47_3_11221" [d1.cpp:52]   --->   Operation 125 'load' 'add47_3_11221_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.00ns)   --->   "%add47_3_21222_load = load i64 %add47_3_21222" [d1.cpp:52]   --->   Operation 126 'load' 'add47_3_21222_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%add47_41223_load = load i64 %add47_41223" [d1.cpp:52]   --->   Operation 127 'load' 'add47_41223_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (0.00ns)   --->   "%add47_4_11224_load = load i64 %add47_4_11224" [d1.cpp:52]   --->   Operation 128 'load' 'add47_4_11224_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 129 [1/1] (0.00ns)   --->   "%add47_4_21225_load = load i64 %add47_4_21225" [d1.cpp:52]   --->   Operation 129 'load' 'add47_4_21225_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 130 [1/1] (0.00ns)   --->   "%specpipeline_ln39 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d1.cpp:39]   --->   Operation 130 'specpipeline' 'specpipeline_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 131 [1/1] (0.00ns)   --->   "%speclooptripcount_ln37 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 7, i64 7, i64 7" [d1.cpp:37]   --->   Operation 131 'speclooptripcount' 'speclooptripcount_ln37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 132 [1/1] (0.00ns)   --->   "%specloopname_ln37 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d1.cpp:37]   --->   Operation 132 'specloopname' 'specloopname_ln37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 133 [1/1] (0.00ns)   --->   "%sext_ln50 = sext i3 %sub_ln36_6" [d1.cpp:50]   --->   Operation 133 'sext' 'sext_ln50' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 134 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln50" [d1.cpp:50]   --->   Operation 134 'mux' 'tmp_2' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i32 %tmp_2" [d1.cpp:50]   --->   Operation 135 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 136 '%mul_ln50_2 = mul i64 %zext_ln50_2, i64 %zext_ln50'
ST_3 : Operation 136 [1/1] (2.10ns)   --->   "%mul_ln50_2 = mul i64 %zext_ln50_2, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 136 'mul' 'mul_ln50_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_2)   --->   "%select_ln50_4 = select i1 %icmp_ln50_1, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 137 'select' 'select_ln50_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_2)   --->   "%and_ln50_2 = and i64 %mul_ln50_2, i64 %select_ln50_4" [d1.cpp:50]   --->   Operation 138 'and' 'and_ln50_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 139 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_2 = add i64 %and_ln50_2, i64 %add47_210621213_load" [d1.cpp:50]   --->   Operation 139 'add' 'add_ln50_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 140 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln50_1" [d1.cpp:50]   --->   Operation 140 'mux' 'tmp_3' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i32 %tmp_3" [d1.cpp:50]   --->   Operation 141 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 142 '%mul_ln50_3 = mul i64 %zext_ln50_3, i64 %zext_ln50'
ST_3 : Operation 142 [1/1] (2.10ns)   --->   "%mul_ln50_3 = mul i64 %zext_ln50_3, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 142 'mul' 'mul_ln50_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_3)   --->   "%select_ln50_5 = select i1 %icmp_ln50_2, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 143 'select' 'select_ln50_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_3)   --->   "%and_ln50_3 = and i64 %mul_ln50_3, i64 %select_ln50_5" [d1.cpp:50]   --->   Operation 144 'and' 'and_ln50_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 145 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_3 = add i64 %and_ln50_3, i64 %add47_11214_load" [d1.cpp:50]   --->   Operation 145 'add' 'add_ln50_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 146 [1/1] (0.48ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36" [d1.cpp:50]   --->   Operation 146 'mux' 'tmp_4' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i32 %tmp_4" [d1.cpp:50]   --->   Operation 147 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 148 '%mul_ln50_4 = mul i64 %zext_ln50_4, i64 %zext_ln50'
ST_3 : Operation 148 [1/1] (2.10ns)   --->   "%mul_ln50_4 = mul i64 %zext_ln50_4, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 148 'mul' 'mul_ln50_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_4)   --->   "%select_ln50_6 = select i1 %icmp_ln50_3, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 149 'select' 'select_ln50_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_4)   --->   "%and_ln50_4 = and i64 %mul_ln50_4, i64 %select_ln50_6" [d1.cpp:50]   --->   Operation 150 'and' 'and_ln50_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 151 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_4 = add i64 %and_ln50_4, i64 %add47_1_11215_load" [d1.cpp:50]   --->   Operation 151 'add' 'add_ln50_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i1 %icmp_ln50_3" [d1.cpp:51]   --->   Operation 152 'zext' 'zext_ln51_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 153 [1/1] (0.79ns)   --->   "%sub_ln36_1 = sub i4 %sub_ln36, i4 %zext_ln51_1" [d1.cpp:36]   --->   Operation 153 'sub' 'sub_ln36_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 154 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_1" [d1.cpp:50]   --->   Operation 154 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i32 %tmp_5" [d1.cpp:50]   --->   Operation 155 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 156 '%mul_ln50_5 = mul i64 %zext_ln50_5, i64 %zext_ln50'
ST_3 : Operation 156 [1/1] (2.10ns)   --->   "%mul_ln50_5 = mul i64 %zext_ln50_5, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 156 'mul' 'mul_ln50_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_5)   --->   "%select_ln50_7 = select i1 %icmp_ln50_4, i64 18446744073709551615, i64 0" [d1.cpp:50]   --->   Operation 157 'select' 'select_ln50_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_5)   --->   "%and_ln50_5 = and i64 %mul_ln50_5, i64 %select_ln50_7" [d1.cpp:50]   --->   Operation 158 'and' 'and_ln50_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 159 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_5 = add i64 %and_ln50_5, i64 %add47_1_21216_load" [d1.cpp:50]   --->   Operation 159 'add' 'add_ln50_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i1 %icmp_ln50_4" [d1.cpp:51]   --->   Operation 160 'zext' 'zext_ln51_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 161 [1/1] (0.79ns)   --->   "%sub_ln36_2 = sub i4 %sub_ln36_1, i4 %zext_ln51_2" [d1.cpp:36]   --->   Operation 161 'sub' 'sub_ln36_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 162 [1/1] (0.48ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d1.cpp:50]   --->   Operation 162 'mux' 'tmp_6' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i32 %tmp_6" [d1.cpp:50]   --->   Operation 163 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 164 '%mul_ln50_6 = mul i64 %zext_ln50_6, i64 %zext_ln50'
ST_3 : Operation 164 [1/1] (2.10ns)   --->   "%mul_ln50_6 = mul i64 %zext_ln50_6, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 164 'mul' 'mul_ln50_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 165 [1/1] (1.08ns)   --->   "%add_ln50_6 = add i64 %mul_ln50_6, i64 %add47_21217_load" [d1.cpp:50]   --->   Operation 165 'add' 'add_ln50_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 166 [1/1] (0.00ns)   --->   "%sext_ln52 = sext i3 %sub_ln36_8" [d1.cpp:52]   --->   Operation 166 'sext' 'sext_ln52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 167 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln52" [d1.cpp:52]   --->   Operation 167 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i32 %tmp_8" [d1.cpp:52]   --->   Operation 168 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 169 '%mul_ln52_1 = mul i64 %zext_ln52_1, i64 %zext_ln50'
ST_3 : Operation 169 [1/1] (2.10ns)   --->   "%mul_ln52_1 = mul i64 %zext_ln52_1, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 169 'mul' 'mul_ln52_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_2)   --->   "%select_ln52_4 = select i1 %icmp_ln52_1, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 170 'select' 'select_ln52_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_2)   --->   "%and_ln52_2 = and i64 %mul_ln52_1, i64 %select_ln52_4" [d1.cpp:52]   --->   Operation 171 'and' 'and_ln52_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 172 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52_2 = add i64 %and_ln52_2, i64 %add47_3_11221_load" [d1.cpp:52]   --->   Operation 172 'add' 'add_ln52_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 173 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln52_1" [d1.cpp:52]   --->   Operation 173 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i32 %tmp_9" [d1.cpp:52]   --->   Operation 174 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 175 '%mul_ln52_2 = mul i64 %zext_ln52_2, i64 %zext_ln50'
ST_3 : Operation 175 [1/1] (2.10ns)   --->   "%mul_ln52_2 = mul i64 %zext_ln52_2, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 175 'mul' 'mul_ln52_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_3)   --->   "%select_ln52_5 = select i1 %icmp_ln52_2, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 176 'select' 'select_ln52_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_3)   --->   "%and_ln52_3 = and i64 %mul_ln52_2, i64 %select_ln52_5" [d1.cpp:52]   --->   Operation 177 'and' 'and_ln52_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 178 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52_3 = add i64 %and_ln52_3, i64 %add47_3_21222_load" [d1.cpp:52]   --->   Operation 178 'add' 'add_ln52_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 179 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d1.cpp:52]   --->   Operation 179 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i32 %tmp_s" [d1.cpp:52]   --->   Operation 180 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 181 '%mul_ln52_3 = mul i64 %zext_ln52_3, i64 %zext_ln50'
ST_3 : Operation 181 [1/1] (2.10ns)   --->   "%mul_ln52_3 = mul i64 %zext_ln52_3, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 181 'mul' 'mul_ln52_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_4)   --->   "%select_ln52_6 = select i1 %icmp_ln52_3, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 182 'select' 'select_ln52_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_4)   --->   "%and_ln52_4 = and i64 %mul_ln52_3, i64 %select_ln52_6" [d1.cpp:52]   --->   Operation 183 'and' 'and_ln52_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 184 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52_4 = add i64 %and_ln52_4, i64 %add47_41223_load" [d1.cpp:52]   --->   Operation 184 'add' 'add_ln52_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i1 %icmp_ln52_3" [d1.cpp:53]   --->   Operation 185 'zext' 'zext_ln53_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 186 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln53_1" [d1.cpp:36]   --->   Operation 186 'sub' 'sub_ln36_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 187 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d1.cpp:52]   --->   Operation 187 'mux' 'tmp_1' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i32 %tmp_1" [d1.cpp:52]   --->   Operation 188 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 189 '%mul_ln52_4 = mul i64 %zext_ln52_4, i64 %zext_ln50'
ST_3 : Operation 189 [1/1] (2.10ns)   --->   "%mul_ln52_4 = mul i64 %zext_ln52_4, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 189 'mul' 'mul_ln52_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%select_ln52_7 = select i1 %icmp_ln52_4, i64 18446744073709551615, i64 0" [d1.cpp:52]   --->   Operation 190 'select' 'select_ln52_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%and_ln52_5 = and i64 %mul_ln52_4, i64 %select_ln52_7" [d1.cpp:52]   --->   Operation 191 'and' 'and_ln52_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 192 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln52_5 = add i64 %and_ln52_5, i64 %add47_4_11224_load" [d1.cpp:52]   --->   Operation 192 'add' 'add_ln52_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i1 %icmp_ln52_4" [d1.cpp:53]   --->   Operation 193 'zext' 'zext_ln53_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 194 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln53_2" [d1.cpp:36]   --->   Operation 194 'sub' 'sub_ln36_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 195 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d1.cpp:52]   --->   Operation 195 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i32 %tmp_7" [d1.cpp:52]   --->   Operation 196 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 197 '%mul_ln52_5 = mul i64 %zext_ln52_5, i64 %zext_ln50'
ST_3 : Operation 197 [1/1] (2.10ns)   --->   "%mul_ln52_5 = mul i64 %zext_ln52_5, i64 %zext_ln50" [d1.cpp:52]   --->   Operation 197 'mul' 'mul_ln52_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 198 [1/1] (1.08ns)   --->   "%add_ln52_6 = add i64 %mul_ln52_5, i64 %add47_4_21225_load" [d1.cpp:52]   --->   Operation 198 'add' 'add_ln52_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 199 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_6, i64 %add47_4_21225" [d1.cpp:37]   --->   Operation 199 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 200 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_5, i64 %add47_4_11224" [d1.cpp:37]   --->   Operation 200 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 201 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_4, i64 %add47_41223" [d1.cpp:37]   --->   Operation 201 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 202 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_3, i64 %add47_3_21222" [d1.cpp:37]   --->   Operation 202 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 203 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln52_2, i64 %add47_3_11221" [d1.cpp:37]   --->   Operation 203 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 204 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_6, i64 %add47_21217" [d1.cpp:37]   --->   Operation 204 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 205 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_5, i64 %add47_1_21216" [d1.cpp:37]   --->   Operation 205 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 206 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_4, i64 %add47_1_11215" [d1.cpp:37]   --->   Operation 206 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 207 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_3, i64 %add47_11214" [d1.cpp:37]   --->   Operation 207 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 208 [1/1] (0.42ns)   --->   "%store_ln37 = store i64 %add_ln50_2, i64 %add47_210621213" [d1.cpp:37]   --->   Operation 208 'store' 'store_ln37' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 209 [1/1] (0.00ns)   --->   "%br_ln37 = br void %for.body31" [d1.cpp:37]   --->   Operation 209 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [44]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [61]  (0.427 ns)

 <State 2>: 6.178ns
The critical path consists of the following:
	'load' operation ('i') on local variable 'i' [78]  (0.000 ns)
	'add' operation ('empty_33') [101]  (0.797 ns)
	'select' operation ('select_ln52', d1.cpp:52) [168]  (0.449 ns)
	multiplexor before operation 'mul' with delay (1.318 ns)
'mul' operation ('mul_ln52', d1.cpp:52) [171]  (2.102 ns)
	'and' operation ('and_ln52_1', d1.cpp:52) [173]  (0.000 ns)
	'add' operation ('add_ln52_1', d1.cpp:52) [174]  (1.085 ns)
	'store' operation ('store_ln37', d1.cpp:37) of variable 'add_ln52_1', d1.cpp:52 on local variable 'add47_31220' [227]  (0.427 ns)

 <State 3>: 7.015ns
The critical path consists of the following:
	'sub' operation ('sub_ln36_4', d1.cpp:36) [206]  (0.797 ns)
	'sub' operation ('sub_ln36_5', d1.cpp:36) [215]  (0.797 ns)
	'mux' operation ('tmp_7', d1.cpp:52) [216]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.318 ns)
'mul' operation ('mul_ln52_5', d1.cpp:52) [218]  (2.102 ns)
	'add' operation ('add_ln52_6', d1.cpp:52) [219]  (1.085 ns)
	'store' operation ('store_ln37', d1.cpp:37) of variable 'add_ln52_6', d1.cpp:52 on local variable 'add47_4_21225' [222]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
