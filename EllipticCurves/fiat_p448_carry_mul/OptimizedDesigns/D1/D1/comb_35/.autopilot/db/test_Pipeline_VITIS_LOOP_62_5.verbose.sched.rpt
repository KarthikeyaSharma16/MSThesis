

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_62_5'
================================================================
* Date:           Fri May 10 15:25:55 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_35 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.150 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_62_5  |        6|        6|         3|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.36>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k_s = alloca i32 1"   --->   Operation 6 'alloca' 'k_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add1691173 = alloca i32 1"   --->   Operation 8 'alloca' 'add1691173' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add169_14061174 = alloca i32 1"   --->   Operation 9 'alloca' 'add169_14061174' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add169_24351175 = alloca i32 1"   --->   Operation 10 'alloca' 'add169_24351175' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add169_13451176 = alloca i32 1"   --->   Operation 11 'alloca' 'add169_13451176' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add169_1345_11177 = alloca i32 1"   --->   Operation 12 'alloca' 'add169_1345_11177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add169_1345_21178 = alloca i32 1"   --->   Operation 13 'alloca' 'add169_1345_21178' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add169_23741179 = alloca i32 1"   --->   Operation 14 'alloca' 'add169_23741179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 15 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_34 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_35 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_36 = alloca i32 1"   --->   Operation 18 'alloca' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 19 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 20 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 21 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_40 = alloca i32 1"   --->   Operation 22 'alloca' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%add1381198 = alloca i32 1"   --->   Operation 23 'alloca' 'add1381198' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 24 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 25 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 26 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 27 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 28 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 29 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 30 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 31 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 32 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 33 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 34 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 35 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 36 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 37 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 38 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 39 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 40 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 41 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 42 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 43 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 44 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 45 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 46 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 47 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 48 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 49 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 50 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 51 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 52 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 53 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 54 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 55 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 56 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 57 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arr_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr"   --->   Operation 58 'read' 'arr_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arr_1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1"   --->   Operation 59 'read' 'arr_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arr_2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_2"   --->   Operation 60 'read' 'arr_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arr_3_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_3"   --->   Operation 61 'read' 'arr_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arr_4_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_4"   --->   Operation 62 'read' 'arr_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arr_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_5"   --->   Operation 63 'read' 'arr_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arr_6_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_6"   --->   Operation 64 'read' 'arr_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 65 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add1381198"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_6_read, i64 %empty_40"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_5_read, i64 %empty_39"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_4_read, i64 %empty_38"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_3_read, i64 %empty_37"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_2_read, i64 %empty_36"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_read, i64 %empty_35"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_read, i64 %empty_34"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_6_read, i64 %add169_23741179"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_5_read, i64 %add169_1345_21178"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_4_read, i64 %add169_1345_11177"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_3_read, i64 %add169_13451176"   --->   Operation 80 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 81 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_2_read, i64 %add169_24351175"   --->   Operation 81 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_read, i64 %add169_14061174"   --->   Operation 82 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_read, i64 %add1691173"   --->   Operation 83 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 8, i32 %k1"   --->   Operation 84 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %k_s"   --->   Operation 85 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body113"   --->   Operation 86 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d1.cpp:80]   --->   Operation 87 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%icmp_ln62 = icmp_eq  i4 %i_1, i4 0" [d1.cpp:62]   --->   Operation 88 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln62 = br i1 %icmp_ln62, void %for.body113.split_ifconv, void %for.end303.exitStub" [d1.cpp:62]   --->   Operation 89 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%k_load_41 = load i4 %k" [d1.cpp:80]   --->   Operation 90 'load' 'k_load_41' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i4 %i_1" [d1.cpp:62]   --->   Operation 91 'zext' 'zext_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d1.cpp:70]   --->   Operation 92 'bitselect' 'tmp_46' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.48ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 93 'mux' 'tmp_1' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i32 %tmp_1" [d1.cpp:78]   --->   Operation 94 'zext' 'zext_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.79ns)   --->   "%cmp159 = icmp_ugt  i4 %i_1, i4 6" [d1.cpp:80]   --->   Operation 95 'icmp' 'cmp159' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.79ns)   --->   "%empty_42 = add i5 %zext_ln62, i5 1" [d1.cpp:62]   --->   Operation 96 'add' 'empty_42' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.66ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i4 %k_load_41" [d1.cpp:78]   --->   Operation 97 'mux' 'tmp_4' <Predicate = (!icmp_ln62)> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i32 %tmp_4" [d1.cpp:78]   --->   Operation 98 'zext' 'zext_ln78_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node add_ln80)   --->   "%select_ln80_3 = select i1 %cmp159, i4 6, i4 7" [d1.cpp:80]   --->   Operation 99 'select' 'select_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln80 = add i4 %select_ln80_3, i4 %k_load_41" [d1.cpp:80]   --->   Operation 100 'add' 'add_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_67 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_42, i32 4" [d1.cpp:80]   --->   Operation 101 'bitselect' 'tmp_67' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : [1/1] (1.31ns)   --->   Input mux for Operation 102 '%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78'
ST_1 : Operation 102 [1/1] (2.10ns)   --->   "%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 102 'mul' 'mul_ln80' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.17ns)   --->   "%select_ln80_4 = select i1 %cmp159, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 103 'select' 'select_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node add_ln78)   --->   "%and_ln80 = and i64 %mul_ln80, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 104 'and' 'and_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (1.31ns)   --->   Input mux for Operation 105 '%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast'
ST_1 : Operation 105 [1/1] (2.10ns)   --->   "%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 105 'mul' 'mul_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node add_ln78)   --->   "%tmp_68 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_42, i32 4" [d1.cpp:80]   --->   Operation 106 'bitselect' 'tmp_68' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node add_ln78)   --->   "%select_ln80_5 = select i1 %tmp_68, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 107 'select' 'select_ln80_5' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node add_ln78)   --->   "%and_ln80_1 = and i64 %mul_ln80_1, i64 %select_ln80_5" [d1.cpp:80]   --->   Operation 108 'and' 'and_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_30)   --->   "%select_ln78 = select i1 %tmp_67, i3 6, i3 7" [d1.cpp:78]   --->   Operation 109 'select' 'select_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i1 %cmp159" [d1.cpp:79]   --->   Operation 110 'zext' 'zext_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.79ns)   --->   "%sub_ln80_9 = sub i4 %add_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 111 'sub' 'sub_ln80_9' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.78ns)   --->   "%icmp_ln80 = icmp_ugt  i5 %empty_42, i5 14" [d1.cpp:80]   --->   Operation 112 'icmp' 'icmp_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_30)   --->   "%zext_ln36 = zext i1 %icmp_ln80" [d1.cpp:36]   --->   Operation 113 'zext' 'zext_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_30 = sub i3 %select_ln78, i3 %zext_ln36" [d1.cpp:36]   --->   Operation 114 'sub' 'sub_ln36_30' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.79ns)   --->   "%sub_ln80_10 = sub i4 %sub_ln80_9, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 115 'sub' 'sub_ln80_10' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.78ns)   --->   "%icmp_ln80_1 = icmp_ugt  i5 %empty_42, i5 13" [d1.cpp:80]   --->   Operation 116 'icmp' 'icmp_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i1 %icmp_ln80_1" [d1.cpp:36]   --->   Operation 117 'zext' 'zext_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.67ns)   --->   "%sub_ln36_21 = sub i3 %sub_ln36_30, i3 %zext_ln36_1" [d1.cpp:36]   --->   Operation 118 'sub' 'sub_ln36_21' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln78_3 = sext i3 %sub_ln36_21" [d1.cpp:78]   --->   Operation 119 'sext' 'sext_ln78_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.79ns)   --->   "%sub_ln80 = sub i4 %sub_ln80_10, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 120 'sub' 'sub_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 121 [1/1] (0.78ns)   --->   "%icmp_ln80_2 = icmp_ugt  i5 %empty_42, i5 12" [d1.cpp:80]   --->   Operation 121 'icmp' 'icmp_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i1 %icmp_ln80_2" [d1.cpp:81]   --->   Operation 122 'zext' 'zext_ln81' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.67ns)   --->   "%sub_ln36_22 = sub i4 %sext_ln78_3, i4 %zext_ln81" [d1.cpp:36]   --->   Operation 123 'sub' 'sub_ln36_22' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.79ns)   --->   "%sub_ln80_1 = sub i4 %sub_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 124 'sub' 'sub_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.78ns)   --->   "%icmp_ln80_3 = icmp_ugt  i5 %empty_42, i5 11" [d1.cpp:80]   --->   Operation 125 'icmp' 'icmp_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i1 %icmp_ln80_3" [d1.cpp:81]   --->   Operation 126 'zext' 'zext_ln81_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.79ns)   --->   "%sub_ln36_23 = sub i4 %sub_ln36_22, i4 %zext_ln81_1" [d1.cpp:36]   --->   Operation 127 'sub' 'sub_ln36_23' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.78ns)   --->   "%icmp_ln80_4 = icmp_ugt  i5 %empty_42, i5 10" [d1.cpp:80]   --->   Operation 128 'icmp' 'icmp_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln81_2 = zext i1 %icmp_ln80_4" [d1.cpp:81]   --->   Operation 129 'zext' 'zext_ln81_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.79ns)   --->   "%sub_ln36_9 = sub i4 %sub_ln36_23, i4 %zext_ln81_2" [d1.cpp:36]   --->   Operation 130 'sub' 'sub_ln36_9' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 131 [1/1] (0.78ns)   --->   "%icmp_ln80_5 = icmp_ugt  i5 %empty_42, i5 9" [d1.cpp:80]   --->   Operation 131 'icmp' 'icmp_ln80_5' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln81_3 = zext i1 %icmp_ln80_5" [d1.cpp:81]   --->   Operation 132 'zext' 'zext_ln81_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.79ns)   --->   "%sub_ln36_10 = sub i4 %sub_ln36_9, i4 %zext_ln81_3" [d1.cpp:36]   --->   Operation 133 'sub' 'sub_ln36_10' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.78ns)   --->   "%icmp_ln80_6 = icmp_ugt  i5 %empty_42, i5 8" [d1.cpp:80]   --->   Operation 134 'icmp' 'icmp_ln80_6' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_69 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_42, i32 3, i32 4" [d1.cpp:80]   --->   Operation 135 'partselect' 'tmp_69' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.54ns)   --->   "%icmp_ln80_7 = icmp_ne  i2 %tmp_69, i2 0" [d1.cpp:80]   --->   Operation 136 'icmp' 'icmp_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 137 [1/1] (0.78ns)   --->   "%icmp_ln80_8 = icmp_ugt  i5 %empty_42, i5 6" [d1.cpp:80]   --->   Operation 137 'icmp' 'icmp_ln80_8' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.78ns)   --->   "%icmp_ln80_9 = icmp_ugt  i5 %empty_42, i5 5" [d1.cpp:80]   --->   Operation 138 'icmp' 'icmp_ln80_9' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln80_10 = icmp_ugt  i5 %empty_42, i5 4" [d1.cpp:80]   --->   Operation 139 'icmp' 'icmp_ln80_10' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.79ns)   --->   "%add_ln70_1 = add i4 %i_1, i4 15" [d1.cpp:70]   --->   Operation 140 'add' 'add_ln70_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_70 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln70_1, i32 3" [d1.cpp:70]   --->   Operation 141 'bitselect' 'tmp_70' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 142 'mux' 'tmp_23' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 143 [1/1] (0.79ns)   --->   "%cmp159_1 = icmp_ugt  i4 %add_ln70_1, i4 6" [d1.cpp:70]   --->   Operation 143 'icmp' 'cmp159_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%xor_ln79 = xor i4 %k_load_41, i4 8" [d1.cpp:79]   --->   Operation 144 'xor' 'xor_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%select_ln79 = select i1 %cmp159_1, i4 15, i4 0" [d1.cpp:79]   --->   Operation 145 'select' 'select_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36 = add i4 %xor_ln79, i4 %select_ln79" [d1.cpp:36]   --->   Operation 146 'add' 'add_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i1 %cmp159_1" [d1.cpp:79]   --->   Operation 147 'zext' 'zext_ln79_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.79ns)   --->   "%sub_ln80_11 = sub i4 %add_ln36, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 148 'sub' 'sub_ln80_11' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 149 [1/1] (0.79ns)   --->   "%icmp_ln80_11 = icmp_eq  i4 %i_1, i4 15" [d1.cpp:80]   --->   Operation 149 'icmp' 'icmp_ln80_11' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_31)   --->   "%select_ln78_2 = select i1 %icmp_ln80_11, i3 6, i3 7" [d1.cpp:78]   --->   Operation 150 'select' 'select_ln78_2' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.79ns)   --->   "%sub_ln80_12 = sub i4 %sub_ln80_11, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 151 'sub' 'sub_ln80_12' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.79ns)   --->   "%icmp_ln80_12 = icmp_ugt  i4 %i_1, i4 13" [d1.cpp:80]   --->   Operation 152 'icmp' 'icmp_ln80_12' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_31)   --->   "%zext_ln36_2 = zext i1 %icmp_ln80_12" [d1.cpp:36]   --->   Operation 153 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_31 = sub i3 %select_ln78_2, i3 %zext_ln36_2" [d1.cpp:36]   --->   Operation 154 'sub' 'sub_ln36_31' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 155 [1/1] (0.79ns)   --->   "%sub_ln80_3 = sub i4 %sub_ln80_12, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 155 'sub' 'sub_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.79ns)   --->   "%icmp_ln80_13 = icmp_ugt  i4 %i_1, i4 12" [d1.cpp:80]   --->   Operation 156 'icmp' 'icmp_ln80_13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i1 %icmp_ln80_13" [d1.cpp:36]   --->   Operation 157 'zext' 'zext_ln36_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.67ns)   --->   "%sub_ln36_24 = sub i3 %sub_ln36_31, i3 %zext_ln36_3" [d1.cpp:36]   --->   Operation 158 'sub' 'sub_ln36_24' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%sext_ln78_4 = sext i3 %sub_ln36_24" [d1.cpp:78]   --->   Operation 159 'sext' 'sext_ln78_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.79ns)   --->   "%sub_ln80_4 = sub i4 %sub_ln80_3, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 160 'sub' 'sub_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (0.79ns)   --->   "%icmp_ln80_14 = icmp_ugt  i4 %i_1, i4 11" [d1.cpp:80]   --->   Operation 161 'icmp' 'icmp_ln80_14' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln81_9 = zext i1 %icmp_ln80_14" [d1.cpp:81]   --->   Operation 162 'zext' 'zext_ln81_9' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.67ns)   --->   "%sub_ln36_25 = sub i4 %sext_ln78_4, i4 %zext_ln81_9" [d1.cpp:36]   --->   Operation 163 'sub' 'sub_ln36_25' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.79ns)   --->   "%icmp_ln80_15 = icmp_ugt  i4 %i_1, i4 10" [d1.cpp:80]   --->   Operation 164 'icmp' 'icmp_ln80_15' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln81_10 = zext i1 %icmp_ln80_15" [d1.cpp:81]   --->   Operation 165 'zext' 'zext_ln81_10' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.79ns)   --->   "%sub_ln36_26 = sub i4 %sub_ln36_25, i4 %zext_ln81_10" [d1.cpp:36]   --->   Operation 166 'sub' 'sub_ln36_26' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.79ns)   --->   "%icmp_ln80_16 = icmp_ugt  i4 %i_1, i4 9" [d1.cpp:80]   --->   Operation 167 'icmp' 'icmp_ln80_16' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln81_11 = zext i1 %icmp_ln80_16" [d1.cpp:81]   --->   Operation 168 'zext' 'zext_ln81_11' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.79ns)   --->   "%sub_ln36_13 = sub i4 %sub_ln36_26, i4 %zext_ln81_11" [d1.cpp:36]   --->   Operation 169 'sub' 'sub_ln36_13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 170 [1/1] (0.79ns)   --->   "%icmp_ln80_17 = icmp_ugt  i4 %i_1, i4 8" [d1.cpp:80]   --->   Operation 170 'icmp' 'icmp_ln80_17' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln81_12 = zext i1 %icmp_ln80_17" [d1.cpp:81]   --->   Operation 171 'zext' 'zext_ln81_12' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.79ns)   --->   "%sub_ln36_14 = sub i4 %sub_ln36_13, i4 %zext_ln81_12" [d1.cpp:36]   --->   Operation 172 'sub' 'sub_ln36_14' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.79ns)   --->   "%add_ln68 = add i4 %k_load_41, i4 3" [d1.cpp:68]   --->   Operation 173 'add' 'add_ln68' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.79ns)   --->   "%add_ln70_5 = add i5 %zext_ln62, i5 30" [d1.cpp:70]   --->   Operation 174 'add' 'add_ln70_5' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_73 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %add_ln70_5, i32 3, i32 4" [d1.cpp:70]   --->   Operation 175 'partselect' 'tmp_73' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.54ns)   --->   "%icmp_ln70 = icmp_eq  i2 %tmp_73, i2 1" [d1.cpp:70]   --->   Operation 176 'icmp' 'icmp_ln70' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 177 [1/1] (0.48ns)   --->   "%tmp_45 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i4 %i_1" [d1.cpp:78]   --->   Operation 177 'mux' 'tmp_45' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.78ns)   --->   "%cmp159_2 = icmp_sgt  i5 %add_ln70_5, i5 6" [d1.cpp:70]   --->   Operation 178 'icmp' 'cmp159_2' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 179 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78 = add i64 %and_ln80_1, i64 %and_ln80" [d1.cpp:78]   --->   Operation 179 'add' 'add_ln78' <Predicate = (!icmp_ln62)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node add_ln36_1)   --->   "%select_ln36 = select i1 %cmp159_2, i4 8, i4 9" [d1.cpp:36]   --->   Operation 180 'select' 'select_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 181 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln36_1 = add i4 %select_ln36, i4 %k_load_41" [d1.cpp:36]   --->   Operation 181 'add' 'add_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i1 %cmp159_2" [d1.cpp:79]   --->   Operation 182 'zext' 'zext_ln79_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.79ns)   --->   "%sub_ln80_13 = sub i4 %add_ln36_1, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 183 'sub' 'sub_ln80_13' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 184 [1/1] (0.79ns)   --->   "%sub_ln80_14 = sub i4 %sub_ln80_13, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 184 'sub' 'sub_ln80_14' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 185 [1/1] (0.79ns)   --->   "%icmp_ln80_21 = icmp_ugt  i4 %add_ln70_1, i4 13" [d1.cpp:80]   --->   Operation 185 'icmp' 'icmp_ln80_21' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_32)   --->   "%select_ln78_4 = select i1 %icmp_ln80_21, i3 6, i3 7" [d1.cpp:78]   --->   Operation 186 'select' 'select_ln78_4' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 187 [1/1] (0.79ns)   --->   "%sub_ln80_6 = sub i4 %sub_ln80_14, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 187 'sub' 'sub_ln80_6' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (0.79ns)   --->   "%icmp_ln80_22 = icmp_ugt  i4 %add_ln70_1, i4 12" [d1.cpp:80]   --->   Operation 188 'icmp' 'icmp_ln80_22' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_32)   --->   "%zext_ln36_4 = zext i1 %icmp_ln80_22" [d1.cpp:36]   --->   Operation 189 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.54ns) (out node of the LUT)   --->   "%sub_ln36_32 = sub i3 %select_ln78_4, i3 %zext_ln36_4" [d1.cpp:36]   --->   Operation 190 'sub' 'sub_ln36_32' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 191 [1/1] (0.79ns)   --->   "%sub_ln80_7 = sub i4 %sub_ln80_6, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 191 'sub' 'sub_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 192 [1/1] (0.79ns)   --->   "%icmp_ln80_23 = icmp_ugt  i4 %add_ln70_1, i4 11" [d1.cpp:80]   --->   Operation 192 'icmp' 'icmp_ln80_23' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i1 %icmp_ln80_23" [d1.cpp:36]   --->   Operation 193 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.67ns)   --->   "%sub_ln36_27 = sub i3 %sub_ln36_32, i3 %zext_ln36_5" [d1.cpp:36]   --->   Operation 194 'sub' 'sub_ln36_27' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%sext_ln78_6 = sext i3 %sub_ln36_27" [d1.cpp:78]   --->   Operation 195 'sext' 'sext_ln78_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.79ns)   --->   "%sub_ln80_8 = sub i4 %sub_ln80_7, i4 %zext_ln79_2" [d1.cpp:80]   --->   Operation 196 'sub' 'sub_ln80_8' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 197 [1/1] (0.79ns)   --->   "%icmp_ln80_24 = icmp_ugt  i4 %add_ln70_1, i4 10" [d1.cpp:80]   --->   Operation 197 'icmp' 'icmp_ln80_24' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln81_16 = zext i1 %icmp_ln80_24" [d1.cpp:81]   --->   Operation 198 'zext' 'zext_ln81_16' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.67ns)   --->   "%sub_ln36_28 = sub i4 %sext_ln78_6, i4 %zext_ln81_16" [d1.cpp:36]   --->   Operation 199 'sub' 'sub_ln36_28' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.79ns)   --->   "%icmp_ln80_25 = icmp_ugt  i4 %add_ln70_1, i4 9" [d1.cpp:80]   --->   Operation 200 'icmp' 'icmp_ln80_25' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln81_17 = zext i1 %icmp_ln80_25" [d1.cpp:81]   --->   Operation 201 'zext' 'zext_ln81_17' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 202 [1/1] (0.79ns)   --->   "%sub_ln36_29 = sub i4 %sub_ln36_28, i4 %zext_ln81_17" [d1.cpp:36]   --->   Operation 202 'sub' 'sub_ln36_29' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.79ns)   --->   "%icmp_ln80_26 = icmp_ugt  i4 %add_ln70_1, i4 8" [d1.cpp:80]   --->   Operation 203 'icmp' 'icmp_ln80_26' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln81_18 = zext i1 %icmp_ln80_26" [d1.cpp:81]   --->   Operation 204 'zext' 'zext_ln81_18' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.79ns)   --->   "%sub_ln36_17 = sub i4 %sub_ln36_29, i4 %zext_ln81_18" [d1.cpp:36]   --->   Operation 205 'sub' 'sub_ln36_17' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_74 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %add_ln70_1, i32 3" [d1.cpp:80]   --->   Operation 206 'bitselect' 'tmp_74' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (0.79ns)   --->   "%icmp_ln80_27 = icmp_ugt  i4 %add_ln70_1, i4 5" [d1.cpp:80]   --->   Operation 207 'icmp' 'icmp_ln80_27' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.79ns)   --->   "%icmp_ln80_28 = icmp_ugt  i4 %add_ln70_1, i4 4" [d1.cpp:80]   --->   Operation 208 'icmp' 'icmp_ln80_28' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_75 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln70_1, i32 2, i32 3" [d1.cpp:80]   --->   Operation 209 'partselect' 'tmp_75' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_1 : Operation 210 [1/1] (0.54ns)   --->   "%icmp_ln80_29 = icmp_ne  i2 %tmp_75, i2 0" [d1.cpp:80]   --->   Operation 210 'icmp' 'icmp_ln80_29' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (0.79ns)   --->   "%icmp_ln80_30 = icmp_ugt  i4 %add_ln70_1, i4 2" [d1.cpp:80]   --->   Operation 211 'icmp' 'icmp_ln80_30' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.79ns)   --->   "%add_ln62 = add i4 %i_1, i4 13" [d1.cpp:62]   --->   Operation 212 'add' 'add_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln62, i4 %i" [d1.cpp:62]   --->   Operation 213 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_1 : Operation 214 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln68, i4 %k" [d1.cpp:62]   --->   Operation 214 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.15>
ST_2 : Operation 215 [1/1] (0.00ns)   --->   "%k_load = load i32 %k_s" [d1.cpp:62]   --->   Operation 215 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%k1_load = load i32 %k1" [d1.cpp:62]   --->   Operation 216 'load' 'k1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 217 [1/1] (0.00ns)   --->   "%add1691173_load = load i64 %add1691173" [d1.cpp:78]   --->   Operation 217 'load' 'add1691173_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 218 [1/1] (0.00ns)   --->   "%add169_14061174_load = load i64 %add169_14061174" [d1.cpp:78]   --->   Operation 218 'load' 'add169_14061174_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 219 [1/1] (0.00ns)   --->   "%add169_24351175_load = load i64 %add169_24351175" [d1.cpp:80]   --->   Operation 219 'load' 'add169_24351175_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%add169_13451176_load = load i64 %add169_13451176" [d1.cpp:80]   --->   Operation 220 'load' 'add169_13451176_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%add169_1345_11177_load = load i64 %add169_1345_11177" [d1.cpp:80]   --->   Operation 221 'load' 'add169_1345_11177_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.00ns)   --->   "%add169_1345_21178_load = load i64 %add169_1345_21178" [d1.cpp:80]   --->   Operation 222 'load' 'add169_1345_21178_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 223 [1/1] (0.00ns)   --->   "%add169_23741179_load = load i64 %add169_23741179" [d1.cpp:80]   --->   Operation 223 'load' 'add169_23741179_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.00ns)   --->   "%p_load85 = load i64 %empty" [d1.cpp:80]   --->   Operation 224 'load' 'p_load85' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%p_load83 = load i64 %empty_34" [d1.cpp:80]   --->   Operation 225 'load' 'p_load83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 226 [1/1] (0.00ns)   --->   "%p_load81 = load i64 %empty_35" [d1.cpp:80]   --->   Operation 226 'load' 'p_load81' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 227 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i32 %k_load" [d1.cpp:62]   --->   Operation 227 'trunc' 'trunc_ln62' <Predicate = (tmp_46)> <Delay = 0.00>
ST_2 : Operation 228 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i32 %k1_load" [d1.cpp:62]   --->   Operation 228 'trunc' 'trunc_ln62_1' <Predicate = (tmp_46)> <Delay = 0.00>
ST_2 : Operation 229 [1/1] (1.01ns)   --->   "%k1_1 = add i32 %k1_load, i32 1" [d1.cpp:70]   --->   Operation 229 'add' 'k1_1' <Predicate = (tmp_46)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 230 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62_1" [d1.cpp:70]   --->   Operation 230 'mux' 'tmp_2' <Predicate = (tmp_46)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %tmp_2" [d1.cpp:70]   --->   Operation 231 'zext' 'zext_ln70' <Predicate = (tmp_46)> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (1.01ns)   --->   "%k_1 = add i32 %k_load, i32 1" [d1.cpp:70]   --->   Operation 232 'add' 'k_1' <Predicate = (tmp_46)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62" [d1.cpp:70]   --->   Operation 233 'mux' 'tmp_3' <Predicate = (tmp_46)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i32 %tmp_3" [d1.cpp:70]   --->   Operation 234 'zext' 'tmp_3_cast' <Predicate = (tmp_46)> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (1.01ns)   --->   "%tmp = add i33 %tmp_3_cast, i33 %zext_ln70" [d1.cpp:70]   --->   Operation 235 'add' 'tmp' <Predicate = (tmp_46)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 236 [1/1] (0.00ns)   --->   "%tmp_cast = zext i33 %tmp" [d1.cpp:70]   --->   Operation 236 'zext' 'tmp_cast' <Predicate = (tmp_46)> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 237 '%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78'
ST_2 : Operation 237 [1/1] (2.67ns)   --->   "%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78" [d1.cpp:70]   --->   Operation 237 'mul' 'tmp15' <Predicate = (tmp_46)> <Delay = 2.67> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.44ns)   --->   "%k_2 = select i1 %tmp_46, i32 %k_1, i32 %k_load" [d1.cpp:70]   --->   Operation 238 'select' 'k_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.44ns)   --->   "%k1_2 = select i1 %tmp_46, i32 %k1_1, i32 %k1_load" [d1.cpp:70]   --->   Operation 239 'select' 'k1_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 240 [1/1] (0.00ns)   --->   "%trunc_ln72 = trunc i32 %k_2" [d1.cpp:72]   --->   Operation 240 'trunc' 'trunc_ln72' <Predicate = (tmp_70)> <Delay = 0.00>
ST_2 : Operation 241 [1/1] (0.00ns)   --->   "%trunc_ln72_1 = trunc i32 %k1_2" [d1.cpp:72]   --->   Operation 241 'trunc' 'trunc_ln72_1' <Predicate = (tmp_70)> <Delay = 0.00>
ST_2 : Operation 242 [1/1] (0.48ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln80" [d1.cpp:78]   --->   Operation 242 'mux' 'tmp_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 243 [1/1] (0.00ns)   --->   "%zext_ln78_2 = zext i32 %tmp_5" [d1.cpp:78]   --->   Operation 243 'zext' 'zext_ln78_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 244 [1/1] (0.44ns)   --->   "%select_ln80 = select i1 %tmp_67, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 244 'select' 'select_ln80' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %select_ln80" [d1.cpp:80]   --->   Operation 245 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 246 '%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78'
ST_2 : Operation 246 [1/1] (2.10ns)   --->   "%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 246 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_5)   --->   "%and_ln80_2 = and i64 %mul_ln80_2, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 247 'and' 'and_ln80_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 248 '%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78'
ST_2 : Operation 248 [1/1] (2.10ns)   --->   "%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 248 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_5)   --->   "%select_ln80_6 = select i1 %icmp_ln80, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 249 'select' 'select_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_5)   --->   "%and_ln80_3 = and i64 %mul_ln80_3, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 250 'and' 'and_ln80_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 251 [1/1] (0.00ns)   --->   "%sext_ln78_2 = sext i3 %sub_ln36_30" [d1.cpp:78]   --->   Operation 251 'sext' 'sext_ln78_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 252 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_9" [d1.cpp:78]   --->   Operation 252 'mux' 'tmp_7' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i32 %tmp_7" [d1.cpp:78]   --->   Operation 253 'zext' 'zext_ln78_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 254 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_2" [d1.cpp:80]   --->   Operation 254 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i32 %tmp_8" [d1.cpp:80]   --->   Operation 255 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 256 '%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78'
ST_2 : Operation 256 [1/1] (2.10ns)   --->   "%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 256 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.37ns)   --->   "%and_ln80_4 = and i64 %mul_ln80_4, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 257 'and' 'and_ln80_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 258 '%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78'
ST_2 : Operation 258 [1/1] (2.10ns)   --->   "%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 258 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_5)   --->   "%select_ln80_7 = select i1 %icmp_ln80_1, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 259 'select' 'select_ln80_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 260 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_5 = and i64 %mul_ln80_5, i64 %select_ln80_7" [d1.cpp:80]   --->   Operation 260 'and' 'and_ln80_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 261 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_10" [d1.cpp:78]   --->   Operation 261 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 262 [1/1] (0.00ns)   --->   "%zext_ln78_4 = zext i32 %tmp_9" [d1.cpp:78]   --->   Operation 262 'zext' 'zext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 263 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_3" [d1.cpp:80]   --->   Operation 263 'mux' 'tmp_s' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i32 %tmp_s" [d1.cpp:80]   --->   Operation 264 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 265 '%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78'
ST_2 : Operation 265 [1/1] (2.10ns)   --->   "%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 265 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (0.37ns)   --->   "%and_ln80_6 = and i64 %mul_ln80_6, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 266 'and' 'and_ln80_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 267 '%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78'
ST_2 : Operation 267 [1/1] (2.10ns)   --->   "%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 267 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_7)   --->   "%select_ln80_8 = select i1 %icmp_ln80_2, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 268 'select' 'select_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_7 = and i64 %mul_ln80_7, i64 %select_ln80_8" [d1.cpp:80]   --->   Operation 269 'and' 'and_ln80_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.48ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80" [d1.cpp:78]   --->   Operation 270 'mux' 'tmp_6' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 271 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i32 %tmp_6" [d1.cpp:78]   --->   Operation 271 'zext' 'zext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 272 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_22" [d1.cpp:80]   --->   Operation 272 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i32 %tmp_10" [d1.cpp:80]   --->   Operation 273 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 274 '%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78'
ST_2 : Operation 274 [1/1] (2.10ns)   --->   "%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 274 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.37ns)   --->   "%and_ln80_8 = and i64 %mul_ln80_8, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 275 'and' 'and_ln80_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 276 '%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78'
ST_2 : Operation 276 [1/1] (2.10ns)   --->   "%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 276 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_9)   --->   "%select_ln80_9 = select i1 %icmp_ln80_3, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 277 'select' 'select_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_9 = and i64 %mul_ln80_9, i64 %select_ln80_9" [d1.cpp:80]   --->   Operation 278 'and' 'and_ln80_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 279 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_1" [d1.cpp:78]   --->   Operation 279 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln78_6 = zext i32 %tmp_11" [d1.cpp:78]   --->   Operation 280 'zext' 'zext_ln78_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 281 [1/1] (0.79ns)   --->   "%sub_ln80_2 = sub i4 %sub_ln80_1, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 281 'sub' 'sub_ln80_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_23" [d1.cpp:80]   --->   Operation 282 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 283 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i32 %tmp_12" [d1.cpp:80]   --->   Operation 283 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 284 '%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78'
ST_2 : Operation 284 [1/1] (2.10ns)   --->   "%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 284 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.37ns)   --->   "%and_ln80_10 = and i64 %mul_ln80_10, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 285 'and' 'and_ln80_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 286 '%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78'
ST_2 : Operation 286 [1/1] (2.10ns)   --->   "%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 286 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_11)   --->   "%select_ln80_10 = select i1 %icmp_ln80_4, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 287 'select' 'select_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 288 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_11 = and i64 %mul_ln80_11, i64 %select_ln80_10" [d1.cpp:80]   --->   Operation 288 'and' 'and_ln80_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 289 [1/1] (0.48ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_2" [d1.cpp:78]   --->   Operation 289 'mux' 'tmp_13' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i32 %tmp_13" [d1.cpp:78]   --->   Operation 290 'zext' 'zext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 291 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_9" [d1.cpp:80]   --->   Operation 291 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 292 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i32 %tmp_14" [d1.cpp:80]   --->   Operation 292 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 293 '%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78'
ST_2 : Operation 293 [1/1] (2.10ns)   --->   "%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 293 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.37ns)   --->   "%and_ln80_12 = and i64 %mul_ln80_12, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 294 'and' 'and_ln80_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 295 '%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78'
ST_2 : Operation 295 [1/1] (2.10ns)   --->   "%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 295 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_13)   --->   "%select_ln80_11 = select i1 %icmp_ln80_5, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 296 'select' 'select_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_13 = and i64 %mul_ln80_13, i64 %select_ln80_11" [d1.cpp:80]   --->   Operation 297 'and' 'and_ln80_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_10" [d1.cpp:80]   --->   Operation 298 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i32 %tmp_15" [d1.cpp:80]   --->   Operation 299 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 300 '%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78'
ST_2 : Operation 300 [1/1] (2.10ns)   --->   "%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 300 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_14)   --->   "%select_ln80_12 = select i1 %icmp_ln80_6, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 301 'select' 'select_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 302 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_14 = and i64 %mul_ln80_14, i64 %select_ln80_12" [d1.cpp:80]   --->   Operation 302 'and' 'and_ln80_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln81_4 = zext i1 %icmp_ln80_6" [d1.cpp:81]   --->   Operation 303 'zext' 'zext_ln81_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 304 [1/1] (0.79ns)   --->   "%sub_ln36_11 = sub i4 %sub_ln36_10, i4 %zext_ln81_4" [d1.cpp:36]   --->   Operation 304 'sub' 'sub_ln36_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 305 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_11" [d1.cpp:80]   --->   Operation 305 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i32 %tmp_16" [d1.cpp:80]   --->   Operation 306 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 307 '%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78'
ST_2 : Operation 307 [1/1] (2.10ns)   --->   "%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 307 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_15)   --->   "%select_ln80_13 = select i1 %icmp_ln80_7, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 308 'select' 'select_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 309 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_15 = and i64 %mul_ln80_15, i64 %select_ln80_13" [d1.cpp:80]   --->   Operation 309 'and' 'and_ln80_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln81_5 = zext i1 %icmp_ln80_7" [d1.cpp:81]   --->   Operation 310 'zext' 'zext_ln81_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 311 [1/1] (0.79ns)   --->   "%sub_ln36_12 = sub i4 %sub_ln36_11, i4 %zext_ln81_5" [d1.cpp:36]   --->   Operation 311 'sub' 'sub_ln36_12' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 312 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_12" [d1.cpp:80]   --->   Operation 312 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 313 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i32 %tmp_17" [d1.cpp:80]   --->   Operation 313 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 314 '%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78'
ST_2 : Operation 314 [1/1] (2.10ns)   --->   "%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 314 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_16)   --->   "%select_ln80_14 = select i1 %icmp_ln80_8, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 315 'select' 'select_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 316 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_16 = and i64 %mul_ln80_16, i64 %select_ln80_14" [d1.cpp:80]   --->   Operation 316 'and' 'and_ln80_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 317 [1/1] (0.00ns)   --->   "%zext_ln81_6 = zext i1 %icmp_ln80_8" [d1.cpp:81]   --->   Operation 317 'zext' 'zext_ln81_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 318 [1/1] (0.79ns)   --->   "%sub_ln36 = sub i4 %sub_ln36_12, i4 %zext_ln81_6" [d1.cpp:36]   --->   Operation 318 'sub' 'sub_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 319 [1/1] (0.00ns)   --->   "%zext_ln78_8 = zext i32 %tmp_23" [d1.cpp:78]   --->   Operation 319 'zext' 'zext_ln78_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 320 [1/1] (1.01ns)   --->   "%k1_3 = add i32 %k1_2, i32 1" [d1.cpp:70]   --->   Operation 320 'add' 'k1_3' <Predicate = (tmp_70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 321 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_1" [d1.cpp:70]   --->   Operation 321 'mux' 'tmp_24' <Predicate = (tmp_70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 322 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i32 %tmp_24" [d1.cpp:70]   --->   Operation 322 'zext' 'zext_ln70_1' <Predicate = (tmp_70)> <Delay = 0.00>
ST_2 : Operation 323 [1/1] (1.01ns)   --->   "%k_3 = add i32 %k_2, i32 1" [d1.cpp:70]   --->   Operation 323 'add' 'k_3' <Predicate = (tmp_70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 324 [1/1] (0.48ns)   --->   "%tmp_25 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72" [d1.cpp:70]   --->   Operation 324 'mux' 'tmp_25' <Predicate = (tmp_70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns)   --->   "%tmp_25_cast = zext i32 %tmp_25" [d1.cpp:70]   --->   Operation 325 'zext' 'tmp_25_cast' <Predicate = (tmp_70)> <Delay = 0.00>
ST_2 : Operation 326 [1/1] (1.01ns)   --->   "%tmp32 = add i33 %tmp_25_cast, i33 %zext_ln70_1" [d1.cpp:70]   --->   Operation 326 'add' 'tmp32' <Predicate = (tmp_70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 327 [1/1] (0.00ns)   --->   "%tmp32_cast = zext i33 %tmp32" [d1.cpp:70]   --->   Operation 327 'zext' 'tmp32_cast' <Predicate = (tmp_70)> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 328 '%tmp33 = mul i64 %tmp32_cast, i64 %zext_ln78_8'
ST_2 : Operation 328 [1/1] (2.67ns)   --->   "%tmp33 = mul i64 %tmp32_cast, i64 %zext_ln78_8" [d1.cpp:70]   --->   Operation 328 'mul' 'tmp33' <Predicate = (tmp_70)> <Delay = 2.67> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 329 [1/1] (0.44ns)   --->   "%k_4 = select i1 %tmp_70, i32 %k_3, i32 %k_2" [d1.cpp:70]   --->   Operation 329 'select' 'k_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 330 [1/1] (0.44ns)   --->   "%k1_4 = select i1 %tmp_70, i32 %k1_3, i32 %k1_2" [d1.cpp:70]   --->   Operation 330 'select' 'k1_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.00ns)   --->   "%trunc_ln72_2 = trunc i32 %k_4" [d1.cpp:72]   --->   Operation 331 'trunc' 'trunc_ln72_2' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 332 [1/1] (0.00ns)   --->   "%trunc_ln72_3 = trunc i32 %k1_4" [d1.cpp:72]   --->   Operation 332 'trunc' 'trunc_ln72_3' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 333 [1/1] (0.66ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i4 %k_load_41" [d1.cpp:78]   --->   Operation 333 'mux' 'tmp_26' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.00ns)   --->   "%zext_ln78_9 = zext i32 %tmp_26" [d1.cpp:78]   --->   Operation 334 'zext' 'zext_ln78_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 335 '%mul_ln78 = mul i64 %zext_ln78_9, i64 %zext_ln78_8'
ST_2 : Operation 335 [1/1] (2.10ns)   --->   "%mul_ln78 = mul i64 %zext_ln78_9, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 335 'mul' 'mul_ln78' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 336 [1/1] (0.17ns)   --->   "%select_ln78_1 = select i1 %cmp159_1, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 336 'select' 'select_ln78_1' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_3)   --->   "%and_ln78 = and i64 %mul_ln78, i64 %select_ln78_1" [d1.cpp:78]   --->   Operation 337 'and' 'and_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36" [d1.cpp:78]   --->   Operation 338 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 339 [1/1] (0.00ns)   --->   "%zext_ln78_10 = zext i32 %tmp_27" [d1.cpp:78]   --->   Operation 339 'zext' 'zext_ln78_10' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 340 '%mul_ln80_22 = mul i64 %zext_ln78_10, i64 %zext_ln78_8'
ST_2 : Operation 340 [1/1] (2.10ns)   --->   "%mul_ln80_22 = mul i64 %zext_ln78_10, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 340 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 341 [1/1] (0.37ns)   --->   "%and_ln80_19 = and i64 %mul_ln80_22, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 341 'and' 'and_ln80_19' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 342 '%mul_ln80_23 = mul i64 %zext_ln78_8, i64 %conv36_cast'
ST_2 : Operation 342 [1/1] (2.10ns)   --->   "%mul_ln80_23 = mul i64 %zext_ln78_8, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 342 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_20)   --->   "%select_ln80_17 = select i1 %icmp_ln80_11, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 343 'select' 'select_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 344 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_20 = and i64 %mul_ln80_23, i64 %select_ln80_17" [d1.cpp:80]   --->   Operation 344 'and' 'and_ln80_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 345 [1/1] (0.48ns)   --->   "%tmp_28 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_11" [d1.cpp:78]   --->   Operation 345 'mux' 'tmp_28' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln78_11 = zext i32 %tmp_28" [d1.cpp:78]   --->   Operation 346 'zext' 'zext_ln78_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 347 [1/1] (0.44ns)   --->   "%select_ln80_1 = select i1 %icmp_ln80_11, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 347 'select' 'select_ln80_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln80_14 = zext i32 %select_ln80_1" [d1.cpp:80]   --->   Operation 348 'zext' 'zext_ln80_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 349 '%mul_ln80_24 = mul i64 %zext_ln78_11, i64 %zext_ln78_8'
ST_2 : Operation 349 [1/1] (2.10ns)   --->   "%mul_ln80_24 = mul i64 %zext_ln78_11, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 349 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 350 [1/1] (0.37ns)   --->   "%and_ln80_21 = and i64 %mul_ln80_24, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 350 'and' 'and_ln80_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 351 '%mul_ln80_25 = mul i64 %zext_ln80_14, i64 %zext_ln78_8'
ST_2 : Operation 351 [1/1] (2.10ns)   --->   "%mul_ln80_25 = mul i64 %zext_ln80_14, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 351 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_22)   --->   "%select_ln80_18 = select i1 %icmp_ln80_12, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 352 'select' 'select_ln80_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 353 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_22 = and i64 %mul_ln80_25, i64 %select_ln80_18" [d1.cpp:80]   --->   Operation 353 'and' 'and_ln80_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 354 [1/1] (0.00ns)   --->   "%sext_ln78 = sext i3 %sub_ln36_31" [d1.cpp:78]   --->   Operation 354 'sext' 'sext_ln78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 355 [1/1] (0.48ns)   --->   "%tmp_29 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_12" [d1.cpp:78]   --->   Operation 355 'mux' 'tmp_29' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns)   --->   "%zext_ln78_12 = zext i32 %tmp_29" [d1.cpp:78]   --->   Operation 356 'zext' 'zext_ln78_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 357 [1/1] (0.48ns)   --->   "%tmp_30 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78" [d1.cpp:80]   --->   Operation 357 'mux' 'tmp_30' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 358 [1/1] (0.00ns)   --->   "%zext_ln80_15 = zext i32 %tmp_30" [d1.cpp:80]   --->   Operation 358 'zext' 'zext_ln80_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 359 '%mul_ln80_26 = mul i64 %zext_ln78_12, i64 %zext_ln78_8'
ST_2 : Operation 359 [1/1] (2.10ns)   --->   "%mul_ln80_26 = mul i64 %zext_ln78_12, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 359 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 360 [1/1] (0.37ns)   --->   "%and_ln80_23 = and i64 %mul_ln80_26, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 360 'and' 'and_ln80_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 361 '%mul_ln80_27 = mul i64 %zext_ln80_15, i64 %zext_ln78_8'
ST_2 : Operation 361 [1/1] (2.10ns)   --->   "%mul_ln80_27 = mul i64 %zext_ln80_15, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 361 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_24)   --->   "%select_ln80_19 = select i1 %icmp_ln80_13, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 362 'select' 'select_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 363 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_24 = and i64 %mul_ln80_27, i64 %select_ln80_19" [d1.cpp:80]   --->   Operation 363 'and' 'and_ln80_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.48ns)   --->   "%tmp_31 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_3" [d1.cpp:78]   --->   Operation 364 'mux' 'tmp_31' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (0.00ns)   --->   "%zext_ln78_13 = zext i32 %tmp_31" [d1.cpp:78]   --->   Operation 365 'zext' 'zext_ln78_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 366 [1/1] (0.48ns)   --->   "%tmp_32 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_4" [d1.cpp:80]   --->   Operation 366 'mux' 'tmp_32' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 367 [1/1] (0.00ns)   --->   "%zext_ln80_16 = zext i32 %tmp_32" [d1.cpp:80]   --->   Operation 367 'zext' 'zext_ln80_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 368 '%mul_ln80_28 = mul i64 %zext_ln78_13, i64 %zext_ln78_8'
ST_2 : Operation 368 [1/1] (2.10ns)   --->   "%mul_ln80_28 = mul i64 %zext_ln78_13, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 368 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.37ns)   --->   "%and_ln80_25 = and i64 %mul_ln80_28, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 369 'and' 'and_ln80_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 370 '%mul_ln80_29 = mul i64 %zext_ln80_16, i64 %zext_ln78_8'
ST_2 : Operation 370 [1/1] (2.10ns)   --->   "%mul_ln80_29 = mul i64 %zext_ln80_16, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 370 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_26)   --->   "%select_ln80_20 = select i1 %icmp_ln80_14, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 371 'select' 'select_ln80_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 372 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_26 = and i64 %mul_ln80_29, i64 %select_ln80_20" [d1.cpp:80]   --->   Operation 372 'and' 'and_ln80_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.48ns)   --->   "%tmp_33 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_4" [d1.cpp:78]   --->   Operation 373 'mux' 'tmp_33' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.00ns)   --->   "%zext_ln78_14 = zext i32 %tmp_33" [d1.cpp:78]   --->   Operation 374 'zext' 'zext_ln78_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 375 [1/1] (0.79ns)   --->   "%sub_ln80_5 = sub i4 %sub_ln80_4, i4 %zext_ln79_1" [d1.cpp:80]   --->   Operation 375 'sub' 'sub_ln80_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.48ns)   --->   "%tmp_34 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_25" [d1.cpp:80]   --->   Operation 376 'mux' 'tmp_34' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln80_17 = zext i32 %tmp_34" [d1.cpp:80]   --->   Operation 377 'zext' 'zext_ln80_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 378 '%mul_ln80_30 = mul i64 %zext_ln78_14, i64 %zext_ln78_8'
ST_2 : Operation 378 [1/1] (2.10ns)   --->   "%mul_ln80_30 = mul i64 %zext_ln78_14, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 378 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 379 [1/1] (0.37ns)   --->   "%and_ln80_27 = and i64 %mul_ln80_30, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 379 'and' 'and_ln80_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 380 '%mul_ln80_31 = mul i64 %zext_ln80_17, i64 %zext_ln78_8'
ST_2 : Operation 380 [1/1] (2.10ns)   --->   "%mul_ln80_31 = mul i64 %zext_ln80_17, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 380 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_28)   --->   "%select_ln80_21 = select i1 %icmp_ln80_15, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 381 'select' 'select_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 382 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_28 = and i64 %mul_ln80_31, i64 %select_ln80_21" [d1.cpp:80]   --->   Operation 382 'and' 'and_ln80_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (0.48ns)   --->   "%tmp_35 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_5" [d1.cpp:78]   --->   Operation 383 'mux' 'tmp_35' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 384 [1/1] (0.00ns)   --->   "%zext_ln78_15 = zext i32 %tmp_35" [d1.cpp:78]   --->   Operation 384 'zext' 'zext_ln78_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 385 [1/1] (0.48ns)   --->   "%tmp_36 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_26" [d1.cpp:80]   --->   Operation 385 'mux' 'tmp_36' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln80_18 = zext i32 %tmp_36" [d1.cpp:80]   --->   Operation 386 'zext' 'zext_ln80_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 387 '%mul_ln80_32 = mul i64 %zext_ln78_15, i64 %zext_ln78_8'
ST_2 : Operation 387 [1/1] (2.10ns)   --->   "%mul_ln80_32 = mul i64 %zext_ln78_15, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 387 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 388 [1/1] (0.37ns)   --->   "%and_ln80_29 = and i64 %mul_ln80_32, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 388 'and' 'and_ln80_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 389 '%mul_ln80_33 = mul i64 %zext_ln80_18, i64 %zext_ln78_8'
ST_2 : Operation 389 [1/1] (2.10ns)   --->   "%mul_ln80_33 = mul i64 %zext_ln80_18, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 389 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_30)   --->   "%select_ln80_22 = select i1 %icmp_ln80_16, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 390 'select' 'select_ln80_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 391 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_30 = and i64 %mul_ln80_33, i64 %select_ln80_22" [d1.cpp:80]   --->   Operation 391 'and' 'and_ln80_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.48ns)   --->   "%tmp_37 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_13" [d1.cpp:80]   --->   Operation 392 'mux' 'tmp_37' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 393 [1/1] (0.00ns)   --->   "%zext_ln80_19 = zext i32 %tmp_37" [d1.cpp:80]   --->   Operation 393 'zext' 'zext_ln80_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 394 '%mul_ln80_34 = mul i64 %zext_ln80_19, i64 %zext_ln78_8'
ST_2 : Operation 394 [1/1] (2.10ns)   --->   "%mul_ln80_34 = mul i64 %zext_ln80_19, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 394 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%select_ln80_23 = select i1 %icmp_ln80_17, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 395 'select' 'select_ln80_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%and_ln80_31 = and i64 %mul_ln80_34, i64 %select_ln80_23" [d1.cpp:80]   --->   Operation 396 'and' 'and_ln80_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 397 [1/1] (0.48ns)   --->   "%tmp_38 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_14" [d1.cpp:80]   --->   Operation 397 'mux' 'tmp_38' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 398 [1/1] (0.00ns)   --->   "%zext_ln80_20 = zext i32 %tmp_38" [d1.cpp:80]   --->   Operation 398 'zext' 'zext_ln80_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 399 '%mul_ln80_35 = mul i64 %zext_ln80_20, i64 %zext_ln78_8'
ST_2 : Operation 399 [1/1] (2.10ns)   --->   "%mul_ln80_35 = mul i64 %zext_ln80_20, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 399 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 400 [1/1] (0.00ns)   --->   "%tmp_71 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d1.cpp:80]   --->   Operation 400 'bitselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 401 [1/1] (0.00ns)   --->   "%zext_ln80_39 = zext i1 %tmp_71" [d1.cpp:80]   --->   Operation 401 'zext' 'zext_ln80_39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_34)   --->   "%select_ln80_24 = select i1 %tmp_71, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 402 'select' 'select_ln80_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_34)   --->   "%and_ln80_32 = and i64 %mul_ln80_35, i64 %select_ln80_24" [d1.cpp:80]   --->   Operation 403 'and' 'and_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 404 [1/1] (0.79ns)   --->   "%sub_ln36_15 = sub i4 %sub_ln36_14, i4 %zext_ln80_39" [d1.cpp:36]   --->   Operation 404 'sub' 'sub_ln36_15' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 405 [1/1] (0.48ns)   --->   "%tmp_39 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_15" [d1.cpp:80]   --->   Operation 405 'mux' 'tmp_39' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 406 [1/1] (0.00ns)   --->   "%zext_ln80_21 = zext i32 %tmp_39" [d1.cpp:80]   --->   Operation 406 'zext' 'zext_ln80_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 407 '%mul_ln80_36 = mul i64 %zext_ln80_21, i64 %zext_ln78_8'
ST_2 : Operation 407 [1/1] (2.10ns)   --->   "%mul_ln80_36 = mul i64 %zext_ln80_21, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 407 'mul' 'mul_ln80_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_37)   --->   "%and_ln80_33 = and i64 %mul_ln80_36, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 408 'and' 'and_ln80_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 409 [1/1] (0.79ns)   --->   "%sub_ln36_16 = sub i4 %sub_ln36_15, i4 %zext_ln79" [d1.cpp:36]   --->   Operation 409 'sub' 'sub_ln36_16' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.79ns)   --->   "%icmp_ln80_18 = icmp_ugt  i4 %i_1, i4 5" [d1.cpp:80]   --->   Operation 410 'icmp' 'icmp_ln80_18' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 411 [1/1] (0.00ns)   --->   "%zext_ln81_13 = zext i1 %icmp_ln80_18" [d1.cpp:81]   --->   Operation 411 'zext' 'zext_ln81_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 412 [1/1] (0.79ns)   --->   "%sub_ln36_3 = sub i4 %sub_ln36_16, i4 %zext_ln81_13" [d1.cpp:36]   --->   Operation 412 'sub' 'sub_ln36_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 413 [1/1] (0.79ns)   --->   "%icmp_ln80_19 = icmp_ugt  i4 %i_1, i4 4" [d1.cpp:80]   --->   Operation 413 'icmp' 'icmp_ln80_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 414 [1/1] (0.00ns)   --->   "%zext_ln81_14 = zext i1 %icmp_ln80_19" [d1.cpp:81]   --->   Operation 414 'zext' 'zext_ln81_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 415 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln81_14" [d1.cpp:36]   --->   Operation 415 'sub' 'sub_ln36_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 416 [1/1] (0.00ns)   --->   "%tmp_72 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i_1, i32 2, i32 3" [d1.cpp:80]   --->   Operation 416 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 417 [1/1] (0.54ns)   --->   "%icmp_ln80_20 = icmp_ne  i2 %tmp_72, i2 0" [d1.cpp:80]   --->   Operation 417 'icmp' 'icmp_ln80_20' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 418 [1/1] (0.00ns)   --->   "%zext_ln78_16 = zext i32 %tmp_45" [d1.cpp:78]   --->   Operation 418 'zext' 'zext_ln78_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 419 [1/1] (1.01ns)   --->   "%k1_5 = add i32 %k1_4, i32 1" [d1.cpp:70]   --->   Operation 419 'add' 'k1_5' <Predicate = (icmp_ln70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 420 [1/1] (1.01ns)   --->   "%k_5 = add i32 %k_4, i32 1" [d1.cpp:70]   --->   Operation 420 'add' 'k_5' <Predicate = (icmp_ln70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 421 [1/1] (0.44ns)   --->   "%k_6 = select i1 %icmp_ln70, i32 %k_5, i32 %k_4" [d1.cpp:70]   --->   Operation 421 'select' 'k_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 422 [1/1] (0.44ns)   --->   "%k1_6 = select i1 %icmp_ln70, i32 %k1_5, i32 %k1_4" [d1.cpp:70]   --->   Operation 422 'select' 'k1_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 423 [1/1] (0.66ns)   --->   "%tmp_49 = mux i32 @_ssdm_op_Mux.ap_auto.13i32.i4, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_load_41" [d1.cpp:78]   --->   Operation 423 'mux' 'tmp_49' <Predicate = true> <Delay = 0.66> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 424 [1/1] (0.00ns)   --->   "%zext_ln78_17 = zext i32 %tmp_49" [d1.cpp:78]   --->   Operation 424 'zext' 'zext_ln78_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 425 '%mul_ln78_1 = mul i64 %zext_ln78_17, i64 %zext_ln78_16'
ST_2 : Operation 425 [1/1] (2.10ns)   --->   "%mul_ln78_1 = mul i64 %zext_ln78_17, i64 %zext_ln78_16" [d1.cpp:78]   --->   Operation 425 'mul' 'mul_ln78_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 426 [1/1] (0.17ns)   --->   "%select_ln78_3 = select i1 %cmp159_2, i64 18446744073709551615, i64 0" [d1.cpp:78]   --->   Operation 426 'select' 'select_ln78_3' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_3)   --->   "%and_ln78_1 = and i64 %mul_ln78_1, i64 %select_ln78_3" [d1.cpp:78]   --->   Operation 427 'and' 'and_ln78_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 428 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_3 = add i64 %and_ln78, i64 %and_ln78_1" [d1.cpp:78]   --->   Operation 428 'add' 'add_ln78_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 429 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_4 = add i64 %add_ln78_3, i64 %add_ln78" [d1.cpp:78]   --->   Operation 429 'add' 'add_ln78_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 430 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_1 = add i64 %add1691173_load, i64 %add_ln78_4" [d1.cpp:78]   --->   Operation 430 'add' 'add_ln78_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 431 [1/1] (0.48ns)   --->   "%tmp_50 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln36_1" [d1.cpp:78]   --->   Operation 431 'mux' 'tmp_50' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 432 [1/1] (0.00ns)   --->   "%zext_ln78_18 = zext i32 %tmp_50" [d1.cpp:78]   --->   Operation 432 'zext' 'zext_ln78_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 433 '%mul_ln78_2 = mul i64 %zext_ln78_18, i64 %zext_ln78_16'
ST_2 : Operation 433 [1/1] (2.10ns)   --->   "%mul_ln78_2 = mul i64 %zext_ln78_18, i64 %zext_ln78_16" [d1.cpp:78]   --->   Operation 433 'mul' 'mul_ln78_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 434 [1/1] (0.37ns)   --->   "%and_ln78_2 = and i64 %mul_ln78_2, i64 %select_ln78_3" [d1.cpp:78]   --->   Operation 434 'and' 'and_ln78_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 435 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln78_5 = add i64 %and_ln80_2, i64 %and_ln80_3" [d1.cpp:78]   --->   Operation 435 'add' 'add_ln78_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 436 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_6 = add i64 %and_ln80_19, i64 %and_ln78_2" [d1.cpp:78]   --->   Operation 436 'add' 'add_ln78_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 437 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_7 = add i64 %add_ln78_6, i64 %and_ln80_20" [d1.cpp:78]   --->   Operation 437 'add' 'add_ln78_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 438 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_8 = add i64 %add_ln78_7, i64 %add_ln78_5" [d1.cpp:78]   --->   Operation 438 'add' 'add_ln78_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 439 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_2 = add i64 %add169_14061174_load, i64 %add_ln78_8" [d1.cpp:78]   --->   Operation 439 'add' 'add_ln78_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 440 [1/1] (0.48ns)   --->   "%tmp_51 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_13" [d1.cpp:78]   --->   Operation 440 'mux' 'tmp_51' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 441 [1/1] (0.00ns)   --->   "%zext_ln78_19 = zext i32 %tmp_51" [d1.cpp:78]   --->   Operation 441 'zext' 'zext_ln78_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 442 '%mul_ln80_42 = mul i64 %zext_ln78_19, i64 %zext_ln78_16'
ST_2 : Operation 442 [1/1] (2.10ns)   --->   "%mul_ln80_42 = mul i64 %zext_ln78_19, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 442 'mul' 'mul_ln80_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 443 [1/1] (0.37ns)   --->   "%and_ln80_37 = and i64 %mul_ln80_42, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 443 'and' 'and_ln80_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 444 '%mul_ln80_43 = mul i64 %zext_ln78_16, i64 %conv36_cast'
ST_2 : Operation 444 [1/1] (2.10ns)   --->   "%mul_ln80_43 = mul i64 %zext_ln78_16, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 444 'mul' 'mul_ln80_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 445 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_38)   --->   "%select_ln80_28 = select i1 %icmp_ln80_21, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 445 'select' 'select_ln80_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 446 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_38 = and i64 %mul_ln80_43, i64 %select_ln80_28" [d1.cpp:80]   --->   Operation 446 'and' 'and_ln80_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 447 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_1 = add i64 %and_ln80_5, i64 %and_ln80_21" [d1.cpp:80]   --->   Operation 447 'add' 'add_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 448 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_2 = add i64 %add_ln80_1, i64 %and_ln80_4" [d1.cpp:80]   --->   Operation 448 'add' 'add_ln80_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 449 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_3 = add i64 %and_ln80_38, i64 %and_ln80_37" [d1.cpp:80]   --->   Operation 449 'add' 'add_ln80_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 450 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_4 = add i64 %add_ln80_3, i64 %and_ln80_22" [d1.cpp:80]   --->   Operation 450 'add' 'add_ln80_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 451 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_5 = add i64 %add_ln80_4, i64 %add_ln80_2" [d1.cpp:80]   --->   Operation 451 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 452 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_6 = add i64 %add169_24351175_load, i64 %add_ln80_5" [d1.cpp:80]   --->   Operation 452 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 453 [1/1] (0.48ns)   --->   "%tmp_52 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_14" [d1.cpp:78]   --->   Operation 453 'mux' 'tmp_52' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 454 [1/1] (0.00ns)   --->   "%zext_ln78_20 = zext i32 %tmp_52" [d1.cpp:78]   --->   Operation 454 'zext' 'zext_ln78_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 455 [1/1] (0.44ns)   --->   "%select_ln80_2 = select i1 %icmp_ln80_21, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 455 'select' 'select_ln80_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 456 [1/1] (0.00ns)   --->   "%zext_ln80_27 = zext i32 %select_ln80_2" [d1.cpp:80]   --->   Operation 456 'zext' 'zext_ln80_27' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 457 '%mul_ln80_44 = mul i64 %zext_ln78_20, i64 %zext_ln78_16'
ST_2 : Operation 457 [1/1] (2.10ns)   --->   "%mul_ln80_44 = mul i64 %zext_ln78_20, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 457 'mul' 'mul_ln80_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 458 [1/1] (0.37ns)   --->   "%and_ln80_39 = and i64 %mul_ln80_44, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 458 'and' 'and_ln80_39' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 459 '%mul_ln80_45 = mul i64 %zext_ln80_27, i64 %zext_ln78_16'
ST_2 : Operation 459 [1/1] (2.10ns)   --->   "%mul_ln80_45 = mul i64 %zext_ln80_27, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 459 'mul' 'mul_ln80_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 460 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_40)   --->   "%select_ln80_29 = select i1 %icmp_ln80_22, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 460 'select' 'select_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 461 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_40 = and i64 %mul_ln80_45, i64 %select_ln80_29" [d1.cpp:80]   --->   Operation 461 'and' 'and_ln80_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 462 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_7 = add i64 %and_ln80_7, i64 %and_ln80_23" [d1.cpp:80]   --->   Operation 462 'add' 'add_ln80_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 463 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_8 = add i64 %add_ln80_7, i64 %and_ln80_6" [d1.cpp:80]   --->   Operation 463 'add' 'add_ln80_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 464 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i64 %and_ln80_39, i64 %and_ln80_40" [d1.cpp:80]   --->   Operation 464 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 465 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_10 = add i64 %add_ln80_9, i64 %and_ln80_24" [d1.cpp:80]   --->   Operation 465 'add' 'add_ln80_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 466 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_11 = add i64 %add_ln80_10, i64 %add_ln80_8" [d1.cpp:80]   --->   Operation 466 'add' 'add_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 467 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_12 = add i64 %add169_13451176_load, i64 %add_ln80_11" [d1.cpp:80]   --->   Operation 467 'add' 'add_ln80_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 468 [1/1] (0.00ns)   --->   "%sext_ln78_5 = sext i3 %sub_ln36_32" [d1.cpp:78]   --->   Operation 468 'sext' 'sext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 469 [1/1] (0.48ns)   --->   "%tmp_53 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_6" [d1.cpp:78]   --->   Operation 469 'mux' 'tmp_53' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 470 [1/1] (0.00ns)   --->   "%zext_ln78_21 = zext i32 %tmp_53" [d1.cpp:78]   --->   Operation 470 'zext' 'zext_ln78_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 471 [1/1] (0.48ns)   --->   "%tmp_54 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_5" [d1.cpp:80]   --->   Operation 471 'mux' 'tmp_54' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 472 [1/1] (0.00ns)   --->   "%zext_ln80_28 = zext i32 %tmp_54" [d1.cpp:80]   --->   Operation 472 'zext' 'zext_ln80_28' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 473 '%mul_ln80_46 = mul i64 %zext_ln78_21, i64 %zext_ln78_16'
ST_2 : Operation 473 [1/1] (2.10ns)   --->   "%mul_ln80_46 = mul i64 %zext_ln78_21, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 473 'mul' 'mul_ln80_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 474 [1/1] (0.37ns)   --->   "%and_ln80_41 = and i64 %mul_ln80_46, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 474 'and' 'and_ln80_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 475 '%mul_ln80_47 = mul i64 %zext_ln80_28, i64 %zext_ln78_16'
ST_2 : Operation 475 [1/1] (2.10ns)   --->   "%mul_ln80_47 = mul i64 %zext_ln80_28, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 475 'mul' 'mul_ln80_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_42)   --->   "%select_ln80_30 = select i1 %icmp_ln80_23, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 476 'select' 'select_ln80_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 477 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_42 = and i64 %mul_ln80_47, i64 %select_ln80_30" [d1.cpp:80]   --->   Operation 477 'and' 'and_ln80_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_13 = add i64 %and_ln80_9, i64 %and_ln80_25" [d1.cpp:80]   --->   Operation 478 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 479 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_14 = add i64 %add_ln80_13, i64 %and_ln80_8" [d1.cpp:80]   --->   Operation 479 'add' 'add_ln80_14' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 480 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_15 = add i64 %and_ln80_41, i64 %and_ln80_42" [d1.cpp:80]   --->   Operation 480 'add' 'add_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 481 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_16 = add i64 %add_ln80_15, i64 %and_ln80_26" [d1.cpp:80]   --->   Operation 481 'add' 'add_ln80_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 482 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_17 = add i64 %add_ln80_16, i64 %add_ln80_14" [d1.cpp:80]   --->   Operation 482 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 483 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_18 = add i64 %add169_1345_11177_load, i64 %add_ln80_17" [d1.cpp:80]   --->   Operation 483 'add' 'add_ln80_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 484 [1/1] (0.48ns)   --->   "%tmp_55 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_7" [d1.cpp:78]   --->   Operation 484 'mux' 'tmp_55' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 485 [1/1] (0.00ns)   --->   "%zext_ln78_22 = zext i32 %tmp_55" [d1.cpp:78]   --->   Operation 485 'zext' 'zext_ln78_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 486 [1/1] (0.48ns)   --->   "%tmp_56 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln78_6" [d1.cpp:80]   --->   Operation 486 'mux' 'tmp_56' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 487 [1/1] (0.00ns)   --->   "%zext_ln80_29 = zext i32 %tmp_56" [d1.cpp:80]   --->   Operation 487 'zext' 'zext_ln80_29' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 488 '%mul_ln80_48 = mul i64 %zext_ln78_22, i64 %zext_ln78_16'
ST_2 : Operation 488 [1/1] (2.10ns)   --->   "%mul_ln80_48 = mul i64 %zext_ln78_22, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 488 'mul' 'mul_ln80_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 489 [1/1] (0.37ns)   --->   "%and_ln80_43 = and i64 %mul_ln80_48, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 489 'and' 'and_ln80_43' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 490 '%mul_ln80_49 = mul i64 %zext_ln80_29, i64 %zext_ln78_16'
ST_2 : Operation 490 [1/1] (2.10ns)   --->   "%mul_ln80_49 = mul i64 %zext_ln80_29, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 490 'mul' 'mul_ln80_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_44)   --->   "%select_ln80_31 = select i1 %icmp_ln80_24, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 491 'select' 'select_ln80_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 492 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_44 = and i64 %mul_ln80_49, i64 %select_ln80_31" [d1.cpp:80]   --->   Operation 492 'and' 'and_ln80_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 493 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_19 = add i64 %and_ln80_11, i64 %and_ln80_27" [d1.cpp:80]   --->   Operation 493 'add' 'add_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 494 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_20 = add i64 %add_ln80_19, i64 %and_ln80_10" [d1.cpp:80]   --->   Operation 494 'add' 'add_ln80_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 495 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_21 = add i64 %and_ln80_43, i64 %and_ln80_44" [d1.cpp:80]   --->   Operation 495 'add' 'add_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 496 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_22 = add i64 %add_ln80_21, i64 %and_ln80_28" [d1.cpp:80]   --->   Operation 496 'add' 'add_ln80_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 497 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_23 = add i64 %add_ln80_22, i64 %add_ln80_20" [d1.cpp:80]   --->   Operation 497 'add' 'add_ln80_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 498 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_24 = add i64 %add169_1345_21178_load, i64 %add_ln80_23" [d1.cpp:80]   --->   Operation 498 'add' 'add_ln80_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 499 [1/1] (0.48ns)   --->   "%tmp_57 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_8" [d1.cpp:78]   --->   Operation 499 'mux' 'tmp_57' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 500 [1/1] (0.00ns)   --->   "%zext_ln78_23 = zext i32 %tmp_57" [d1.cpp:78]   --->   Operation 500 'zext' 'zext_ln78_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 501 [1/1] (0.48ns)   --->   "%tmp_58 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_28" [d1.cpp:80]   --->   Operation 501 'mux' 'tmp_58' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 502 [1/1] (0.00ns)   --->   "%zext_ln80_30 = zext i32 %tmp_58" [d1.cpp:80]   --->   Operation 502 'zext' 'zext_ln80_30' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 503 '%mul_ln80_50 = mul i64 %zext_ln78_23, i64 %zext_ln78_16'
ST_2 : Operation 503 [1/1] (2.10ns)   --->   "%mul_ln80_50 = mul i64 %zext_ln78_23, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 503 'mul' 'mul_ln80_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 504 [1/1] (0.37ns)   --->   "%and_ln80_45 = and i64 %mul_ln80_50, i64 %select_ln78_3" [d1.cpp:80]   --->   Operation 504 'and' 'and_ln80_45' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 505 '%mul_ln80_51 = mul i64 %zext_ln80_30, i64 %zext_ln78_16'
ST_2 : Operation 505 [1/1] (2.10ns)   --->   "%mul_ln80_51 = mul i64 %zext_ln80_30, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 505 'mul' 'mul_ln80_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_46)   --->   "%select_ln80_32 = select i1 %icmp_ln80_25, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 506 'select' 'select_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 507 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_46 = and i64 %mul_ln80_51, i64 %select_ln80_32" [d1.cpp:80]   --->   Operation 507 'and' 'and_ln80_46' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 508 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_25 = add i64 %and_ln80_13, i64 %and_ln80_29" [d1.cpp:80]   --->   Operation 508 'add' 'add_ln80_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 509 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_26 = add i64 %add_ln80_25, i64 %and_ln80_12" [d1.cpp:80]   --->   Operation 509 'add' 'add_ln80_26' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 510 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_27 = add i64 %and_ln80_45, i64 %and_ln80_46" [d1.cpp:80]   --->   Operation 510 'add' 'add_ln80_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 511 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_28 = add i64 %add_ln80_27, i64 %and_ln80_30" [d1.cpp:80]   --->   Operation 511 'add' 'add_ln80_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 512 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_29 = add i64 %add_ln80_28, i64 %add_ln80_26" [d1.cpp:80]   --->   Operation 512 'add' 'add_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 513 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_30 = add i64 %add169_23741179_load, i64 %add_ln80_29" [d1.cpp:80]   --->   Operation 513 'add' 'add_ln80_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 514 [1/1] (0.48ns)   --->   "%tmp_59 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_29" [d1.cpp:80]   --->   Operation 514 'mux' 'tmp_59' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln80_31 = zext i32 %tmp_59" [d1.cpp:80]   --->   Operation 515 'zext' 'zext_ln80_31' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 516 '%mul_ln80_52 = mul i64 %zext_ln80_31, i64 %zext_ln78_16'
ST_2 : Operation 516 [1/1] (2.10ns)   --->   "%mul_ln80_52 = mul i64 %zext_ln80_31, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 516 'mul' 'mul_ln80_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 517 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%select_ln80_33 = select i1 %icmp_ln80_26, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 517 'select' 'select_ln80_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_31)   --->   "%and_ln80_47 = and i64 %mul_ln80_52, i64 %select_ln80_33" [d1.cpp:80]   --->   Operation 518 'and' 'and_ln80_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 519 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_31 = add i64 %and_ln80_31, i64 %and_ln80_47" [d1.cpp:80]   --->   Operation 519 'add' 'add_ln80_31' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 520 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_32 = add i64 %add_ln80_31, i64 %and_ln80_14" [d1.cpp:80]   --->   Operation 520 'add' 'add_ln80_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 521 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_33 = add i64 %p_load85, i64 %add_ln80_32" [d1.cpp:80]   --->   Operation 521 'add' 'add_ln80_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 522 [1/1] (0.48ns)   --->   "%tmp_60 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_17" [d1.cpp:80]   --->   Operation 522 'mux' 'tmp_60' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 523 [1/1] (0.00ns)   --->   "%zext_ln80_32 = zext i32 %tmp_60" [d1.cpp:80]   --->   Operation 523 'zext' 'zext_ln80_32' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 524 '%mul_ln80_53 = mul i64 %zext_ln80_32, i64 %zext_ln78_16'
ST_2 : Operation 524 [1/1] (2.10ns)   --->   "%mul_ln80_53 = mul i64 %zext_ln80_32, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 524 'mul' 'mul_ln80_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 525 [1/1] (0.00ns)   --->   "%zext_ln80_40 = zext i1 %tmp_74" [d1.cpp:80]   --->   Operation 525 'zext' 'zext_ln80_40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 526 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_34)   --->   "%select_ln80_34 = select i1 %tmp_74, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 526 'select' 'select_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_34)   --->   "%and_ln80_48 = and i64 %mul_ln80_53, i64 %select_ln80_34" [d1.cpp:80]   --->   Operation 527 'and' 'and_ln80_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 528 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_34 = add i64 %and_ln80_32, i64 %and_ln80_48" [d1.cpp:80]   --->   Operation 528 'add' 'add_ln80_34' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 529 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_35 = add i64 %add_ln80_34, i64 %and_ln80_15" [d1.cpp:80]   --->   Operation 529 'add' 'add_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 530 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_36 = add i64 %p_load83, i64 %add_ln80_35" [d1.cpp:80]   --->   Operation 530 'add' 'add_ln80_36' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 531 [1/1] (0.79ns)   --->   "%sub_ln36_18 = sub i4 %sub_ln36_17, i4 %zext_ln80_40" [d1.cpp:36]   --->   Operation 531 'sub' 'sub_ln36_18' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 532 [1/1] (0.48ns)   --->   "%tmp_61 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_18" [d1.cpp:80]   --->   Operation 532 'mux' 'tmp_61' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 533 [1/1] (0.00ns)   --->   "%zext_ln80_33 = zext i32 %tmp_61" [d1.cpp:80]   --->   Operation 533 'zext' 'zext_ln80_33' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 534 '%mul_ln80_54 = mul i64 %zext_ln80_33, i64 %zext_ln78_16'
ST_2 : Operation 534 [1/1] (2.10ns)   --->   "%mul_ln80_54 = mul i64 %zext_ln80_33, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 534 'mul' 'mul_ln80_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 535 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_37)   --->   "%and_ln80_49 = and i64 %mul_ln80_54, i64 %select_ln78_1" [d1.cpp:80]   --->   Operation 535 'and' 'and_ln80_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 536 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_37 = add i64 %and_ln80_33, i64 %and_ln80_49" [d1.cpp:80]   --->   Operation 536 'add' 'add_ln80_37' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 537 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_38 = add i64 %add_ln80_37, i64 %and_ln80_16" [d1.cpp:80]   --->   Operation 537 'add' 'add_ln80_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 538 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_39 = add i64 %p_load81, i64 %add_ln80_38" [d1.cpp:80]   --->   Operation 538 'add' 'add_ln80_39' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 539 [1/1] (0.79ns)   --->   "%sub_ln36_19 = sub i4 %sub_ln36_18, i4 %zext_ln79_1" [d1.cpp:36]   --->   Operation 539 'sub' 'sub_ln36_19' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 540 [1/1] (0.00ns)   --->   "%zext_ln81_19 = zext i1 %icmp_ln80_27" [d1.cpp:81]   --->   Operation 540 'zext' 'zext_ln81_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 541 [1/1] (0.79ns)   --->   "%sub_ln36_20 = sub i4 %sub_ln36_19, i4 %zext_ln81_19" [d1.cpp:36]   --->   Operation 541 'sub' 'sub_ln36_20' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 542 [1/1] (0.00ns)   --->   "%zext_ln81_20 = zext i1 %icmp_ln80_28" [d1.cpp:81]   --->   Operation 542 'zext' 'zext_ln81_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 543 [1/1] (0.79ns)   --->   "%sub_ln36_6 = sub i4 %sub_ln36_20, i4 %zext_ln81_20" [d1.cpp:36]   --->   Operation 543 'sub' 'sub_ln36_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 544 [1/1] (0.00ns)   --->   "%zext_ln81_21 = zext i1 %icmp_ln80_29" [d1.cpp:81]   --->   Operation 544 'zext' 'zext_ln81_21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 545 [1/1] (0.79ns)   --->   "%sub_ln36_7 = sub i4 %sub_ln36_6, i4 %zext_ln81_21" [d1.cpp:36]   --->   Operation 545 'sub' 'sub_ln36_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 546 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_39, i64 %empty_35" [d1.cpp:62]   --->   Operation 546 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 547 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_36, i64 %empty_34" [d1.cpp:62]   --->   Operation 547 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 548 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_33, i64 %empty" [d1.cpp:62]   --->   Operation 548 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 549 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_30, i64 %add169_23741179" [d1.cpp:62]   --->   Operation 549 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 550 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_24, i64 %add169_1345_21178" [d1.cpp:62]   --->   Operation 550 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 551 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_18, i64 %add169_1345_11177" [d1.cpp:62]   --->   Operation 551 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 552 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_12, i64 %add169_13451176" [d1.cpp:62]   --->   Operation 552 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 553 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_6, i64 %add169_24351175" [d1.cpp:62]   --->   Operation 553 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 554 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_2, i64 %add169_14061174" [d1.cpp:62]   --->   Operation 554 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 555 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln78_1, i64 %add1691173" [d1.cpp:62]   --->   Operation 555 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 556 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k1_6, i32 %k1" [d1.cpp:62]   --->   Operation 556 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 557 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k_6, i32 %k_s" [d1.cpp:62]   --->   Operation 557 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 673 [1/1] (0.00ns)   --->   "%add1691173_load_1 = load i64 %add1691173"   --->   Operation 673 'load' 'add1691173_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 674 [1/1] (0.00ns)   --->   "%add169_14061174_load_1 = load i64 %add169_14061174"   --->   Operation 674 'load' 'add169_14061174_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 675 [1/1] (0.00ns)   --->   "%add169_24351175_load_1 = load i64 %add169_24351175"   --->   Operation 675 'load' 'add169_24351175_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 676 [1/1] (0.00ns)   --->   "%add169_13451176_load_1 = load i64 %add169_13451176"   --->   Operation 676 'load' 'add169_13451176_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 677 [1/1] (0.00ns)   --->   "%add169_1345_11177_load_1 = load i64 %add169_1345_11177"   --->   Operation 677 'load' 'add169_1345_11177_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 678 [1/1] (0.00ns)   --->   "%add169_1345_21178_load_1 = load i64 %add169_1345_21178"   --->   Operation 678 'load' 'add169_1345_21178_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 679 [1/1] (0.00ns)   --->   "%add169_23741179_load_1 = load i64 %add169_23741179"   --->   Operation 679 'load' 'add169_23741179_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 680 [1/1] (0.00ns)   --->   "%p_load86 = load i64 %empty"   --->   Operation 680 'load' 'p_load86' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 681 [1/1] (0.00ns)   --->   "%p_load84 = load i64 %empty_34"   --->   Operation 681 'load' 'p_load84' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 682 [1/1] (0.00ns)   --->   "%p_load82 = load i64 %empty_35"   --->   Operation 682 'load' 'p_load82' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 683 [1/1] (0.00ns)   --->   "%p_load80 = load i64 %empty_36"   --->   Operation 683 'load' 'p_load80' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 684 [1/1] (0.00ns)   --->   "%p_load78 = load i64 %empty_37"   --->   Operation 684 'load' 'p_load78' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 685 [1/1] (0.00ns)   --->   "%p_load76 = load i64 %empty_38"   --->   Operation 685 'load' 'p_load76' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 686 [1/1] (0.00ns)   --->   "%p_load74 = load i64 %empty_39"   --->   Operation 686 'load' 'p_load74' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 687 [1/1] (0.00ns)   --->   "%p_load72 = load i64 %empty_40"   --->   Operation 687 'load' 'p_load72' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 688 [1/1] (0.00ns)   --->   "%add1381198_load_1 = load i64 %add1381198"   --->   Operation 688 'load' 'add1381198_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 689 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add1381198_out, i64 %add1381198_load_1"   --->   Operation 689 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 690 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load72"   --->   Operation 690 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 691 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load74"   --->   Operation 691 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 692 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load76"   --->   Operation 692 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 693 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load78"   --->   Operation 693 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 694 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load80"   --->   Operation 694 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 695 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load82"   --->   Operation 695 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 696 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load84"   --->   Operation 696 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 697 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load86"   --->   Operation 697 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 698 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_23741179_out, i64 %add169_23741179_load_1"   --->   Operation 698 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 699 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1345_21178_out, i64 %add169_1345_21178_load_1"   --->   Operation 699 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 700 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1345_11177_out, i64 %add169_1345_11177_load_1"   --->   Operation 700 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 701 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_13451176_out, i64 %add169_13451176_load_1"   --->   Operation 701 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 702 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_24351175_out, i64 %add169_24351175_load_1"   --->   Operation 702 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 703 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_14061174_out, i64 %add169_14061174_load_1"   --->   Operation 703 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 704 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add1691173_out, i64 %add1691173_load_1"   --->   Operation 704 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 705 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 705 'ret' 'ret_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.03>
ST_3 : Operation 558 [1/1] (0.00ns)   --->   "%p_load79 = load i64 %empty_36" [d1.cpp:80]   --->   Operation 558 'load' 'p_load79' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 559 [1/1] (0.00ns)   --->   "%p_load77 = load i64 %empty_37" [d1.cpp:80]   --->   Operation 559 'load' 'p_load77' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 560 [1/1] (0.00ns)   --->   "%p_load75 = load i64 %empty_38" [d1.cpp:80]   --->   Operation 560 'load' 'p_load75' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 561 [1/1] (0.00ns)   --->   "%p_load73 = load i64 %empty_39" [d1.cpp:80]   --->   Operation 561 'load' 'p_load73' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 562 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_40" [d1.cpp:80]   --->   Operation 562 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 563 [1/1] (0.00ns)   --->   "%add1381198_load = load i64 %add1381198" [d1.cpp:70]   --->   Operation 563 'load' 'add1381198_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 564 [1/1] (0.00ns)   --->   "%specpipeline_ln64 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d1.cpp:64]   --->   Operation 564 'specpipeline' 'specpipeline_ln64' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 565 [1/1] (0.00ns)   --->   "%speclooptripcount_ln62 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d1.cpp:62]   --->   Operation 565 'speclooptripcount' 'speclooptripcount_ln62' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 566 [1/1] (0.00ns)   --->   "%specloopname_ln62 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d1.cpp:62]   --->   Operation 566 'specloopname' 'specloopname_ln62' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 567 [1/1] (1.08ns)   --->   "%add_ln70 = add i64 %tmp15, i64 %add1381198_load" [d1.cpp:70]   --->   Operation 567 'add' 'add_ln70' <Predicate = (tmp_46)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 568 [1/1] (0.42ns)   --->   "%select_ln70 = select i1 %tmp_46, i64 %add_ln70, i64 %add1381198_load" [d1.cpp:70]   --->   Operation 568 'select' 'select_ln70' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 569 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36" [d1.cpp:80]   --->   Operation 569 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 570 [1/1] (0.00ns)   --->   "%zext_ln80_9 = zext i32 %tmp_18" [d1.cpp:80]   --->   Operation 570 'zext' 'zext_ln80_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 571 '%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78'
ST_3 : Operation 571 [1/1] (2.10ns)   --->   "%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 571 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_17)   --->   "%select_ln80_15 = select i1 %icmp_ln80_9, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 572 'select' 'select_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 573 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_17 = and i64 %mul_ln80_17, i64 %select_ln80_15" [d1.cpp:80]   --->   Operation 573 'and' 'and_ln80_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 574 [1/1] (0.00ns)   --->   "%zext_ln81_7 = zext i1 %icmp_ln80_9" [d1.cpp:81]   --->   Operation 574 'zext' 'zext_ln81_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 575 [1/1] (0.79ns)   --->   "%sub_ln36_1 = sub i4 %sub_ln36, i4 %zext_ln81_7" [d1.cpp:36]   --->   Operation 575 'sub' 'sub_ln36_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 576 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_1" [d1.cpp:80]   --->   Operation 576 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 577 [1/1] (0.00ns)   --->   "%zext_ln80_10 = zext i32 %tmp_19" [d1.cpp:80]   --->   Operation 577 'zext' 'zext_ln80_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 578 '%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78'
ST_3 : Operation 578 [1/1] (2.10ns)   --->   "%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 578 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 579 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_18)   --->   "%select_ln80_16 = select i1 %icmp_ln80_10, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 579 'select' 'select_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 580 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_18 = and i64 %mul_ln80_18, i64 %select_ln80_16" [d1.cpp:80]   --->   Operation 580 'and' 'and_ln80_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 581 [1/1] (0.00ns)   --->   "%zext_ln81_8 = zext i1 %icmp_ln80_10" [d1.cpp:81]   --->   Operation 581 'zext' 'zext_ln81_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 582 [1/1] (0.79ns)   --->   "%sub_ln36_2 = sub i4 %sub_ln36_1, i4 %zext_ln81_8" [d1.cpp:36]   --->   Operation 582 'sub' 'sub_ln36_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 583 [1/1] (0.48ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d1.cpp:80]   --->   Operation 583 'mux' 'tmp_20' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 584 [1/1] (0.00ns)   --->   "%zext_ln80_11 = zext i32 %tmp_20" [d1.cpp:80]   --->   Operation 584 'zext' 'zext_ln80_11' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 585 '%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78'
ST_3 : Operation 585 [1/1] (2.10ns)   --->   "%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 585 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 586 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_2" [d1.cpp:80]   --->   Operation 586 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 587 [1/1] (0.00ns)   --->   "%zext_ln80_12 = zext i32 %tmp_21" [d1.cpp:80]   --->   Operation 587 'zext' 'zext_ln80_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 588 '%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78'
ST_3 : Operation 588 [1/1] (2.10ns)   --->   "%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 588 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 589 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i4 %sub_ln36_2" [d1.cpp:80]   --->   Operation 589 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 590 [1/1] (0.00ns)   --->   "%zext_ln80_13 = zext i32 %tmp_22" [d1.cpp:80]   --->   Operation 590 'zext' 'zext_ln80_13' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 591 '%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78'
ST_3 : Operation 591 [1/1] (2.10ns)   --->   "%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 591 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 592 [1/1] (1.08ns)   --->   "%add_ln70_4 = add i64 %tmp33, i64 %select_ln70" [d1.cpp:70]   --->   Operation 592 'add' 'add_ln70_4' <Predicate = (tmp_70)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 593 [1/1] (0.42ns)   --->   "%select_ln70_3 = select i1 %tmp_70, i64 %add_ln70_4, i64 %select_ln70" [d1.cpp:70]   --->   Operation 593 'select' 'select_ln70_3' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 594 [1/1] (0.48ns)   --->   "%tmp_40 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_16" [d1.cpp:80]   --->   Operation 594 'mux' 'tmp_40' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 595 [1/1] (0.00ns)   --->   "%zext_ln80_22 = zext i32 %tmp_40" [d1.cpp:80]   --->   Operation 595 'zext' 'zext_ln80_22' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 596 '%mul_ln80_37 = mul i64 %zext_ln80_22, i64 %zext_ln78_8'
ST_3 : Operation 596 [1/1] (2.10ns)   --->   "%mul_ln80_37 = mul i64 %zext_ln80_22, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 596 'mul' 'mul_ln80_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 597 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_40)   --->   "%select_ln80_25 = select i1 %icmp_ln80_18, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 597 'select' 'select_ln80_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_40)   --->   "%and_ln80_34 = and i64 %mul_ln80_37, i64 %select_ln80_25" [d1.cpp:80]   --->   Operation 598 'and' 'and_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 599 [1/1] (0.48ns)   --->   "%tmp_41 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d1.cpp:80]   --->   Operation 599 'mux' 'tmp_41' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 600 [1/1] (0.00ns)   --->   "%zext_ln80_23 = zext i32 %tmp_41" [d1.cpp:80]   --->   Operation 600 'zext' 'zext_ln80_23' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 601 '%mul_ln80_38 = mul i64 %zext_ln80_23, i64 %zext_ln78_8'
ST_3 : Operation 601 [1/1] (2.10ns)   --->   "%mul_ln80_38 = mul i64 %zext_ln80_23, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 601 'mul' 'mul_ln80_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 602 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_43)   --->   "%select_ln80_26 = select i1 %icmp_ln80_19, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 602 'select' 'select_ln80_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 603 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_43)   --->   "%and_ln80_35 = and i64 %mul_ln80_38, i64 %select_ln80_26" [d1.cpp:80]   --->   Operation 603 'and' 'and_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 604 [1/1] (0.48ns)   --->   "%tmp_42 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d1.cpp:80]   --->   Operation 604 'mux' 'tmp_42' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 605 [1/1] (0.00ns)   --->   "%zext_ln80_24 = zext i32 %tmp_42" [d1.cpp:80]   --->   Operation 605 'zext' 'zext_ln80_24' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 606 '%mul_ln80_39 = mul i64 %zext_ln80_24, i64 %zext_ln78_8'
ST_3 : Operation 606 [1/1] (2.10ns)   --->   "%mul_ln80_39 = mul i64 %zext_ln80_24, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 606 'mul' 'mul_ln80_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 607 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%select_ln80_27 = select i1 %icmp_ln80_20, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 607 'select' 'select_ln80_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 608 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%and_ln80_36 = and i64 %mul_ln80_39, i64 %select_ln80_27" [d1.cpp:80]   --->   Operation 608 'and' 'and_ln80_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 609 [1/1] (0.00ns)   --->   "%zext_ln81_15 = zext i1 %icmp_ln80_20" [d1.cpp:81]   --->   Operation 609 'zext' 'zext_ln81_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 610 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln81_15" [d1.cpp:36]   --->   Operation 610 'sub' 'sub_ln36_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 611 [1/1] (0.48ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d1.cpp:80]   --->   Operation 611 'mux' 'tmp_43' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 612 [1/1] (0.00ns)   --->   "%zext_ln80_25 = zext i32 %tmp_43" [d1.cpp:80]   --->   Operation 612 'zext' 'zext_ln80_25' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 613 '%mul_ln80_40 = mul i64 %zext_ln80_25, i64 %zext_ln78_8'
ST_3 : Operation 613 [1/1] (2.10ns)   --->   "%mul_ln80_40 = mul i64 %zext_ln80_25, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 613 'mul' 'mul_ln80_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 614 [1/1] (0.48ns)   --->   "%tmp_44 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i4 %sub_ln36_5" [d1.cpp:80]   --->   Operation 614 'mux' 'tmp_44' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 615 [1/1] (0.00ns)   --->   "%zext_ln80_26 = zext i32 %tmp_44" [d1.cpp:80]   --->   Operation 615 'zext' 'zext_ln80_26' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 616 '%mul_ln80_41 = mul i64 %zext_ln80_26, i64 %zext_ln78_8'
ST_3 : Operation 616 [1/1] (2.10ns)   --->   "%mul_ln80_41 = mul i64 %zext_ln80_26, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 616 'mul' 'mul_ln80_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 617 [1/1] (0.48ns)   --->   "%tmp_47 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_3" [d1.cpp:70]   --->   Operation 617 'mux' 'tmp_47' <Predicate = (icmp_ln70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 618 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i32 %tmp_47" [d1.cpp:70]   --->   Operation 618 'zext' 'zext_ln70_2' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 619 [1/1] (0.48ns)   --->   "%tmp_48 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln72_2" [d1.cpp:70]   --->   Operation 619 'mux' 'tmp_48' <Predicate = (icmp_ln70)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 620 [1/1] (0.00ns)   --->   "%tmp_48_cast = zext i32 %tmp_48" [d1.cpp:70]   --->   Operation 620 'zext' 'tmp_48_cast' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 621 [1/1] (1.01ns)   --->   "%tmp34 = add i33 %tmp_48_cast, i33 %zext_ln70_2" [d1.cpp:70]   --->   Operation 621 'add' 'tmp34' <Predicate = (icmp_ln70)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 622 [1/1] (0.00ns)   --->   "%tmp34_cast = zext i33 %tmp34" [d1.cpp:70]   --->   Operation 622 'zext' 'tmp34_cast' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : [1/1] (0.73ns)   --->   Input mux for Operation 623 '%tmp35 = mul i64 %tmp34_cast, i64 %zext_ln78_16'
ST_3 : Operation 623 [1/1] (2.67ns)   --->   "%tmp35 = mul i64 %tmp34_cast, i64 %zext_ln78_16" [d1.cpp:70]   --->   Operation 623 'mul' 'tmp35' <Predicate = (icmp_ln70)> <Delay = 2.67> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 624 [1/1] (1.08ns)   --->   "%add_ln70_8 = add i64 %tmp35, i64 %select_ln70_3" [d1.cpp:70]   --->   Operation 624 'add' 'add_ln70_8' <Predicate = (icmp_ln70)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 625 [1/1] (0.42ns)   --->   "%select_ln70_6 = select i1 %icmp_ln70, i64 %add_ln70_8, i64 %select_ln70_3" [d1.cpp:70]   --->   Operation 625 'select' 'select_ln70_6' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 626 [1/1] (0.48ns)   --->   "%tmp_62 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_19" [d1.cpp:80]   --->   Operation 626 'mux' 'tmp_62' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 627 [1/1] (0.00ns)   --->   "%zext_ln80_34 = zext i32 %tmp_62" [d1.cpp:80]   --->   Operation 627 'zext' 'zext_ln80_34' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 628 '%mul_ln80_55 = mul i64 %zext_ln80_34, i64 %zext_ln78_16'
ST_3 : Operation 628 [1/1] (2.10ns)   --->   "%mul_ln80_55 = mul i64 %zext_ln80_34, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 628 'mul' 'mul_ln80_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_40)   --->   "%select_ln80_35 = select i1 %icmp_ln80_27, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 629 'select' 'select_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 630 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_40)   --->   "%and_ln80_50 = and i64 %mul_ln80_55, i64 %select_ln80_35" [d1.cpp:80]   --->   Operation 630 'and' 'and_ln80_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 631 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_40 = add i64 %and_ln80_34, i64 %and_ln80_50" [d1.cpp:80]   --->   Operation 631 'add' 'add_ln80_40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 632 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_41 = add i64 %add_ln80_40, i64 %and_ln80_17" [d1.cpp:80]   --->   Operation 632 'add' 'add_ln80_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 633 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_42 = add i64 %p_load79, i64 %add_ln80_41" [d1.cpp:80]   --->   Operation 633 'add' 'add_ln80_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 634 [1/1] (0.48ns)   --->   "%tmp_63 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_20" [d1.cpp:80]   --->   Operation 634 'mux' 'tmp_63' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 635 [1/1] (0.00ns)   --->   "%zext_ln80_35 = zext i32 %tmp_63" [d1.cpp:80]   --->   Operation 635 'zext' 'zext_ln80_35' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 636 '%mul_ln80_56 = mul i64 %zext_ln80_35, i64 %zext_ln78_16'
ST_3 : Operation 636 [1/1] (2.10ns)   --->   "%mul_ln80_56 = mul i64 %zext_ln80_35, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 636 'mul' 'mul_ln80_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_43)   --->   "%select_ln80_36 = select i1 %icmp_ln80_28, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 637 'select' 'select_ln80_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 638 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_43)   --->   "%and_ln80_51 = and i64 %mul_ln80_56, i64 %select_ln80_36" [d1.cpp:80]   --->   Operation 638 'and' 'and_ln80_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 639 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_43 = add i64 %and_ln80_35, i64 %and_ln80_51" [d1.cpp:80]   --->   Operation 639 'add' 'add_ln80_43' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 640 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_44 = add i64 %add_ln80_43, i64 %and_ln80_18" [d1.cpp:80]   --->   Operation 640 'add' 'add_ln80_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 641 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_45 = add i64 %p_load77, i64 %add_ln80_44" [d1.cpp:80]   --->   Operation 641 'add' 'add_ln80_45' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 642 [1/1] (0.48ns)   --->   "%tmp_64 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_6" [d1.cpp:80]   --->   Operation 642 'mux' 'tmp_64' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 643 [1/1] (0.00ns)   --->   "%zext_ln80_36 = zext i32 %tmp_64" [d1.cpp:80]   --->   Operation 643 'zext' 'zext_ln80_36' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 644 '%mul_ln80_57 = mul i64 %zext_ln80_36, i64 %zext_ln78_16'
ST_3 : Operation 644 [1/1] (2.10ns)   --->   "%mul_ln80_57 = mul i64 %zext_ln80_36, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 644 'mul' 'mul_ln80_57' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 645 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%select_ln80_37 = select i1 %icmp_ln80_29, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 645 'select' 'select_ln80_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 646 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_46)   --->   "%and_ln80_52 = and i64 %mul_ln80_57, i64 %select_ln80_37" [d1.cpp:80]   --->   Operation 646 'and' 'and_ln80_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 647 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_46 = add i64 %and_ln80_36, i64 %and_ln80_52" [d1.cpp:80]   --->   Operation 647 'add' 'add_ln80_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_47 = add i64 %add_ln80_46, i64 %mul_ln80_19" [d1.cpp:80]   --->   Operation 648 'add' 'add_ln80_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 649 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_48 = add i64 %p_load75, i64 %add_ln80_47" [d1.cpp:80]   --->   Operation 649 'add' 'add_ln80_48' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 650 [1/1] (0.48ns)   --->   "%tmp_65 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_7" [d1.cpp:80]   --->   Operation 650 'mux' 'tmp_65' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 651 [1/1] (0.00ns)   --->   "%zext_ln80_37 = zext i32 %tmp_65" [d1.cpp:80]   --->   Operation 651 'zext' 'zext_ln80_37' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 652 '%mul_ln80_58 = mul i64 %zext_ln80_37, i64 %zext_ln78_16'
ST_3 : Operation 652 [1/1] (2.10ns)   --->   "%mul_ln80_58 = mul i64 %zext_ln80_37, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 652 'mul' 'mul_ln80_58' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_49)   --->   "%select_ln80_38 = select i1 %icmp_ln80_30, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 653 'select' 'select_ln80_38' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 654 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_49)   --->   "%and_ln80_53 = and i64 %mul_ln80_58, i64 %select_ln80_38" [d1.cpp:80]   --->   Operation 654 'and' 'and_ln80_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 655 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_49 = add i64 %mul_ln80_40, i64 %and_ln80_53" [d1.cpp:80]   --->   Operation 655 'add' 'add_ln80_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 656 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_50 = add i64 %add_ln80_49, i64 %mul_ln80_20" [d1.cpp:80]   --->   Operation 656 'add' 'add_ln80_50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 657 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_51 = add i64 %p_load73, i64 %add_ln80_50" [d1.cpp:80]   --->   Operation 657 'add' 'add_ln80_51' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 658 [1/1] (0.00ns)   --->   "%zext_ln81_22 = zext i1 %icmp_ln80_30" [d1.cpp:81]   --->   Operation 658 'zext' 'zext_ln81_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 659 [1/1] (0.79ns)   --->   "%sub_ln36_8 = sub i4 %sub_ln36_7, i4 %zext_ln81_22" [d1.cpp:36]   --->   Operation 659 'sub' 'sub_ln36_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 660 [1/1] (0.48ns)   --->   "%tmp_66 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 660 'mux' 'tmp_66' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 661 [1/1] (0.00ns)   --->   "%zext_ln80_38 = zext i32 %tmp_66" [d1.cpp:80]   --->   Operation 661 'zext' 'zext_ln80_38' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 662 '%mul_ln80_59 = mul i64 %zext_ln80_38, i64 %zext_ln78_16'
ST_3 : Operation 662 [1/1] (2.10ns)   --->   "%mul_ln80_59 = mul i64 %zext_ln80_38, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 662 'mul' 'mul_ln80_59' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 663 [1/1] (1.08ns)   --->   "%add_ln80_52 = add i64 %mul_ln80_41, i64 %mul_ln80_59" [d1.cpp:80]   --->   Operation 663 'add' 'add_ln80_52' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 664 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_53 = add i64 %add_ln80_52, i64 %mul_ln80_21" [d1.cpp:80]   --->   Operation 664 'add' 'add_ln80_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 665 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_54 = add i64 %p_load, i64 %add_ln80_53" [d1.cpp:80]   --->   Operation 665 'add' 'add_ln80_54' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 666 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %select_ln70_6, i64 %add1381198" [d1.cpp:62]   --->   Operation 666 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 667 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_54, i64 %empty_40" [d1.cpp:62]   --->   Operation 667 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 668 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_51, i64 %empty_39" [d1.cpp:62]   --->   Operation 668 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 669 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_48, i64 %empty_38" [d1.cpp:62]   --->   Operation 669 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 670 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_45, i64 %empty_37" [d1.cpp:62]   --->   Operation 670 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 671 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_42, i64 %empty_36" [d1.cpp:62]   --->   Operation 671 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 672 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body113" [d1.cpp:62]   --->   Operation 672 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.368ns
The critical path consists of the following:
	'alloca' operation ('i') [75]  (0.000 ns)
	'load' operation ('i', d1.cpp:80) on local variable 'i' [138]  (0.000 ns)
	'add' operation ('add_ln70_5', d1.cpp:70) [488]  (0.797 ns)
	'icmp' operation ('cmp159_2', d1.cpp:70) [506]  (0.789 ns)
	'select' operation ('select_ln36', d1.cpp:36) [516]  (0.000 ns)
	'add' operation ('add_ln36_1', d1.cpp:36) [517]  (0.797 ns)
	'sub' operation ('sub_ln80_13', d1.cpp:80) [528]  (0.797 ns)
	'sub' operation ('sub_ln80_14', d1.cpp:80) [531]  (0.797 ns)
	'sub' operation ('sub_ln80_6', d1.cpp:80) [547]  (0.797 ns)
	'sub' operation ('sub_ln80_7', d1.cpp:80) [567]  (0.797 ns)
	'sub' operation ('sub_ln80_8', d1.cpp:80) [587]  (0.797 ns)

 <State 2>: 7.150ns
The critical path consists of the following:
	'sub' operation ('sub_ln80_2', d1.cpp:80) [257]  (0.797 ns)
	'mux' operation ('tmp_13', d1.cpp:78) [268]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln80_12', d1.cpp:80) [273]  (2.103 ns)
	'and' operation ('and_ln80_12', d1.cpp:80) [274]  (0.379 ns)
	'add' operation ('add_ln80_26', d1.cpp:80) [615]  (0.819 ns)
	'add' operation ('add_ln80_29', d1.cpp:80) [618]  (0.000 ns)
	'add' operation ('add_ln80_30', d1.cpp:80) [619]  (0.819 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_30', d1.cpp:80 on local variable 'add169_23741179' [715]  (0.427 ns)

 <State 3>: 7.037ns
The critical path consists of the following:
	'sub' operation ('sub_ln36_5', d1.cpp:36) [480]  (0.797 ns)
	'mux' operation ('tmp_44', d1.cpp:80) [484]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.317 ns)
'mul' operation ('mul_ln80_41', d1.cpp:80) [486]  (2.103 ns)
	'add' operation ('add_ln80_52', d1.cpp:80) [700]  (1.085 ns)
	'add' operation ('add_ln80_53', d1.cpp:80) [701]  (0.000 ns)
	'add' operation ('add_ln80_54', d1.cpp:80) [702]  (0.819 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_54', d1.cpp:80 on local variable 'empty_40' [707]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
