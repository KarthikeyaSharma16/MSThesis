

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_62_5'
================================================================
* Date:           Fri May 10 15:35:48 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_48 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.128 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_62_5  |       16|       16|         3|          1|          1|    15|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%k_s = alloca i32 1"   --->   Operation 6 'alloca' 'k_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k1 = alloca i32 1"   --->   Operation 7 'alloca' 'k1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add169729 = alloca i32 1"   --->   Operation 8 'alloca' 'add169729' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add169_1618730 = alloca i32 1"   --->   Operation 9 'alloca' 'add169_1618730' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add169_2647731 = alloca i32 1"   --->   Operation 10 'alloca' 'add169_2647731' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add169_1732 = alloca i32 1"   --->   Operation 11 'alloca' 'add169_1732' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add169_1_1733 = alloca i32 1"   --->   Operation 12 'alloca' 'add169_1_1733' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add169_1_2734 = alloca i32 1"   --->   Operation 13 'alloca' 'add169_1_2734' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add169_2735 = alloca i32 1"   --->   Operation 14 'alloca' 'add169_2735' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 15 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_35 = alloca i32 1"   --->   Operation 16 'alloca' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_36 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 18 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 19 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 20 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_40 = alloca i32 1"   --->   Operation 21 'alloca' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_41 = alloca i32 1"   --->   Operation 22 'alloca' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%add138752 = alloca i32 1"   --->   Operation 23 'alloca' 'add138752' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 24 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 25 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%conv36_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv36"   --->   Operation 26 'read' 'conv36_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_15_reload"   --->   Operation 27 'read' 'arg2_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_14_reload"   --->   Operation 28 'read' 'arg2_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_13_reload"   --->   Operation 29 'read' 'arg2_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_12_reload"   --->   Operation 30 'read' 'arg2_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_11_reload"   --->   Operation 31 'read' 'arg2_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_10_reload"   --->   Operation 32 'read' 'arg2_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 33 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 34 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 35 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 36 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 37 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 38 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 39 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 40 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 41 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 42 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg1_r_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_15_reload"   --->   Operation 43 'read' 'arg1_r_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg1_r_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_14_reload"   --->   Operation 44 'read' 'arg1_r_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_13_reload"   --->   Operation 45 'read' 'arg1_r_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_12_reload"   --->   Operation 46 'read' 'arg1_r_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_11_reload"   --->   Operation 47 'read' 'arg1_r_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_10_reload"   --->   Operation 48 'read' 'arg1_r_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 49 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 50 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 51 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 52 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 53 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 54 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 55 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 56 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 57 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%add47736_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47736_reload"   --->   Operation 58 'read' 'add47736_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add47_1737_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_1737_reload"   --->   Operation 59 'read' 'add47_1737_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add47_2738_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_2738_reload"   --->   Operation 60 'read' 'add47_2738_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add47_3739_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_3739_reload"   --->   Operation 61 'read' 'add47_3739_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add47_4740_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_4740_reload"   --->   Operation 62 'read' 'add47_4740_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add47_5741_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_5741_reload"   --->   Operation 63 'read' 'add47_5741_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add47_6742_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_6742_reload"   --->   Operation 64 'read' 'add47_6742_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add47_8744_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_8744_reload"   --->   Operation 65 'read' 'add47_8744_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add47_9745_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_9745_reload"   --->   Operation 66 'read' 'add47_9745_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%add47_10746_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_10746_reload"   --->   Operation 67 'read' 'add47_10746_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%add47_11747_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_11747_reload"   --->   Operation 68 'read' 'add47_11747_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%add47_12748_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_12748_reload"   --->   Operation 69 'read' 'add47_12748_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%add47_13749_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_13749_reload"   --->   Operation 70 'read' 'add47_13749_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%add47_14750_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add47_14750_reload"   --->   Operation 71 'read' 'add47_14750_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%conv36_cast = zext i32 %conv36_read"   --->   Operation 72 'zext' 'conv36_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 15, i4 %i"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %k"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add138752"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_14750_reload_read, i64 %empty_41"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_13749_reload_read, i64 %empty_40"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_12748_reload_read, i64 %empty_39"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_11747_reload_read, i64 %empty_38"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_10746_reload_read, i64 %empty_37"   --->   Operation 80 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 81 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_9745_reload_read, i64 %empty_36"   --->   Operation 81 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_8744_reload_read, i64 %empty_35"   --->   Operation 82 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 83 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_6742_reload_read, i64 %add169_2735"   --->   Operation 84 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_5741_reload_read, i64 %add169_1_2734"   --->   Operation 85 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_4740_reload_read, i64 %add169_1_1733"   --->   Operation 86 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 87 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_3739_reload_read, i64 %add169_1732"   --->   Operation 87 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 88 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_2738_reload_read, i64 %add169_2647731"   --->   Operation 88 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 89 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47_1737_reload_read, i64 %add169_1618730"   --->   Operation 89 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 90 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add47736_reload_read, i64 %add169729"   --->   Operation 90 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 91 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 8, i32 %k1"   --->   Operation 91 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %k_s"   --->   Operation 92 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body113"   --->   Operation 93 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.12>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%k_1 = load i4 %k" [d1.cpp:80]   --->   Operation 94 'load' 'k_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.79ns)   --->   "%icmp_ln62 = icmp_eq  i4 %k_1, i4 15" [d1.cpp:62]   --->   Operation 95 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.79ns)   --->   "%add_ln68 = add i4 %k_1, i4 1" [d1.cpp:68]   --->   Operation 96 'add' 'add_ln68' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln62 = br i1 %icmp_ln62, void %for.body113.split_ifconv, void %for.end303.exitStub" [d1.cpp:62]   --->   Operation 97 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%add169729_load = load i64 %add169729" [d1.cpp:80]   --->   Operation 98 'load' 'add169729_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%add169_1618730_load = load i64 %add169_1618730" [d1.cpp:80]   --->   Operation 99 'load' 'add169_1618730_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%i_load = load i4 %i" [d1.cpp:70]   --->   Operation 100 'load' 'i_load' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i4 %i_load" [d1.cpp:62]   --->   Operation 101 'zext' 'zext_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_load, i32 3" [d1.cpp:70]   --->   Operation 102 'bitselect' 'tmp_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 103 [1/1] (0.48ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i32 %arg1_r_10_reload_read, i32 %arg1_r_11_reload_read, i32 %arg1_r_12_reload_read, i32 %arg1_r_13_reload_read, i32 %arg1_r_14_reload_read, i32 %arg1_r_15_reload_read, i4 %i_load" [d1.cpp:78]   --->   Operation 103 'mux' 'tmp_s' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i32 %tmp_s" [d1.cpp:78]   --->   Operation 104 'zext' 'zext_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.79ns)   --->   "%cmp159 = icmp_ugt  i4 %i_load, i4 6" [d1.cpp:70]   --->   Operation 105 'icmp' 'cmp159' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.79ns)   --->   "%empty_43 = add i5 %zext_ln62, i5 1" [d1.cpp:62]   --->   Operation 106 'add' 'empty_43' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.54ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.15i32.i4, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i4 %k_1" [d1.cpp:78]   --->   Operation 107 'mux' 'tmp_4' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i32 %tmp_4" [d1.cpp:78]   --->   Operation 108 'zext' 'zext_ln78_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node add_ln80)   --->   "%select_ln80_1 = select i1 %cmp159, i4 6, i4 7" [d1.cpp:80]   --->   Operation 109 'select' 'select_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln80 = add i4 %select_ln80_1, i4 %k_1" [d1.cpp:80]   --->   Operation 110 'add' 'add_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_43, i32 4" [d1.cpp:80]   --->   Operation 111 'bitselect' 'tmp_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 112 '%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78'
ST_2 : Operation 112 [1/1] (2.10ns)   --->   "%mul_ln80 = mul i64 %zext_ln78_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 112 'mul' 'mul_ln80' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.17ns)   --->   "%select_ln80_2 = select i1 %cmp159, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 113 'select' 'select_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.37ns)   --->   "%and_ln80 = and i64 %mul_ln80, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 114 'and' 'and_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 115 '%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast'
ST_2 : Operation 115 [1/1] (2.10ns)   --->   "%mul_ln80_1 = mul i64 %zext_ln78, i64 %conv36_cast" [d1.cpp:80]   --->   Operation 115 'mul' 'mul_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_1)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %empty_43, i32 4" [d1.cpp:80]   --->   Operation 116 'bitselect' 'tmp_6' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_1)   --->   "%select_ln80_3 = select i1 %tmp_6, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 117 'select' 'select_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_1 = and i64 %mul_ln80_1, i64 %select_ln80_3" [d1.cpp:80]   --->   Operation 118 'and' 'and_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_2 = add i64 %and_ln80, i64 %and_ln80_1" [d1.cpp:80]   --->   Operation 119 'add' 'add_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 120 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_1 = add i64 %add169729_load, i64 %add_ln80_2" [d1.cpp:80]   --->   Operation 120 'add' 'add_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node k3)   --->   "%select_ln78 = select i1 %tmp_5, i3 6, i3 7" [d1.cpp:78]   --->   Operation 121 'select' 'select_ln78' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.48ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %add_ln80" [d1.cpp:78]   --->   Operation 122 'mux' 'tmp_7' <Predicate = (!icmp_ln62)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln78_2 = zext i32 %tmp_7" [d1.cpp:78]   --->   Operation 123 'zext' 'zext_ln78_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i1 %cmp159" [d1.cpp:79]   --->   Operation 124 'zext' 'zext_ln79' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.79ns)   --->   "%sub_ln80_3 = sub i4 %add_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 125 'sub' 'sub_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.44ns)   --->   "%select_ln80 = select i1 %tmp_5, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read" [d1.cpp:80]   --->   Operation 126 'select' 'select_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %select_ln80" [d1.cpp:80]   --->   Operation 127 'zext' 'zext_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.78ns)   --->   "%icmp_ln80 = icmp_ugt  i5 %empty_43, i5 14" [d1.cpp:80]   --->   Operation 128 'icmp' 'icmp_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 129 '%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78'
ST_2 : Operation 129 [1/1] (2.10ns)   --->   "%mul_ln80_2 = mul i64 %zext_ln78_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 129 'mul' 'mul_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.37ns)   --->   "%and_ln80_2 = and i64 %mul_ln80_2, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 130 'and' 'and_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.31ns)   --->   Input mux for Operation 131 '%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78'
ST_2 : Operation 131 [1/1] (2.10ns)   --->   "%mul_ln80_3 = mul i64 %zext_ln80, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 131 'mul' 'mul_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_3)   --->   "%select_ln80_4 = select i1 %icmp_ln80, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 132 'select' 'select_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_3 = and i64 %mul_ln80_3, i64 %select_ln80_4" [d1.cpp:80]   --->   Operation 133 'and' 'and_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_4 = add i64 %and_ln80_3, i64 %and_ln80_2" [d1.cpp:80]   --->   Operation 134 'add' 'add_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 135 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_3 = add i64 %add169_1618730_load, i64 %add_ln80_4" [d1.cpp:80]   --->   Operation 135 'add' 'add_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node k3)   --->   "%zext_ln36 = zext i1 %icmp_ln80" [d1.cpp:36]   --->   Operation 136 'zext' 'zext_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.54ns) (out node of the LUT)   --->   "%k3 = sub i3 %select_ln78, i3 %zext_ln36" [d1.cpp:36]   --->   Operation 137 'sub' 'k3' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.79ns)   --->   "%sub_ln80_4 = sub i4 %sub_ln80_3, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 138 'sub' 'sub_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln80_1 = icmp_ugt  i5 %empty_43, i5 13" [d1.cpp:80]   --->   Operation 139 'icmp' 'icmp_ln80_1' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i1 %icmp_ln80_1" [d1.cpp:81]   --->   Operation 140 'zext' 'zext_ln81' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.67ns)   --->   "%k3_1 = sub i3 %k3, i3 %zext_ln81" [d1.cpp:81]   --->   Operation 141 'sub' 'k3_1' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%sext_ln36_1 = sext i3 %k3_1" [d1.cpp:36]   --->   Operation 142 'sext' 'sext_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.79ns)   --->   "%sub_ln80 = sub i4 %sub_ln80_4, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 143 'sub' 'sub_ln80' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.78ns)   --->   "%icmp_ln80_2 = icmp_ugt  i5 %empty_43, i5 12" [d1.cpp:80]   --->   Operation 144 'icmp' 'icmp_ln80_2' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i1 %icmp_ln80_2" [d1.cpp:81]   --->   Operation 145 'zext' 'zext_ln81_1' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 146 [1/1] (0.67ns)   --->   "%sub_ln36 = sub i4 %sext_ln36_1, i4 %zext_ln81_1" [d1.cpp:36]   --->   Operation 146 'sub' 'sub_ln36' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.78ns)   --->   "%icmp_ln80_3 = icmp_ugt  i5 %empty_43, i5 11" [d1.cpp:80]   --->   Operation 147 'icmp' 'icmp_ln80_3' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln81_2 = zext i1 %icmp_ln80_3" [d1.cpp:81]   --->   Operation 148 'zext' 'zext_ln81_2' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 149 [1/1] (0.79ns)   --->   "%sub_ln36_1 = sub i4 %sub_ln36, i4 %zext_ln81_2" [d1.cpp:36]   --->   Operation 149 'sub' 'sub_ln36_1' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.78ns)   --->   "%icmp_ln80_4 = icmp_ugt  i5 %empty_43, i5 10" [d1.cpp:80]   --->   Operation 150 'icmp' 'icmp_ln80_4' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln81_3 = zext i1 %icmp_ln80_4" [d1.cpp:81]   --->   Operation 151 'zext' 'zext_ln81_3' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 152 [1/1] (0.79ns)   --->   "%sub_ln36_2 = sub i4 %sub_ln36_1, i4 %zext_ln81_3" [d1.cpp:36]   --->   Operation 152 'sub' 'sub_ln36_2' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (0.78ns)   --->   "%icmp_ln80_5 = icmp_ugt  i5 %empty_43, i5 9" [d1.cpp:80]   --->   Operation 153 'icmp' 'icmp_ln80_5' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln81_4 = zext i1 %icmp_ln80_5" [d1.cpp:81]   --->   Operation 154 'zext' 'zext_ln81_4' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 155 [1/1] (0.79ns)   --->   "%sub_ln36_3 = sub i4 %sub_ln36_2, i4 %zext_ln81_4" [d1.cpp:36]   --->   Operation 155 'sub' 'sub_ln36_3' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.78ns)   --->   "%icmp_ln80_6 = icmp_ugt  i5 %empty_43, i5 8" [d1.cpp:80]   --->   Operation 156 'icmp' 'icmp_ln80_6' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln81_5 = zext i1 %icmp_ln80_6" [d1.cpp:81]   --->   Operation 157 'zext' 'zext_ln81_5' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.79ns)   --->   "%sub_ln36_4 = sub i4 %sub_ln36_3, i4 %zext_ln81_5" [d1.cpp:36]   --->   Operation 158 'sub' 'sub_ln36_4' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %empty_43, i32 3, i32 4" [d1.cpp:80]   --->   Operation 159 'partselect' 'tmp_20' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 160 [1/1] (0.54ns)   --->   "%icmp_ln80_7 = icmp_ne  i2 %tmp_20, i2 0" [d1.cpp:80]   --->   Operation 160 'icmp' 'icmp_ln80_7' <Predicate = (!icmp_ln62)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.78ns)   --->   "%icmp_ln80_8 = icmp_ugt  i5 %empty_43, i5 6" [d1.cpp:80]   --->   Operation 161 'icmp' 'icmp_ln80_8' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (0.78ns)   --->   "%icmp_ln80_9 = icmp_ugt  i5 %empty_43, i5 5" [d1.cpp:80]   --->   Operation 162 'icmp' 'icmp_ln80_9' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.78ns)   --->   "%icmp_ln80_10 = icmp_ugt  i5 %empty_43, i5 4" [d1.cpp:80]   --->   Operation 163 'icmp' 'icmp_ln80_10' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %empty_43, i32 2, i32 4" [d1.cpp:80]   --->   Operation 164 'partselect' 'tmp_25' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 165 [1/1] (0.67ns)   --->   "%icmp_ln80_11 = icmp_ne  i3 %tmp_25, i3 0" [d1.cpp:80]   --->   Operation 165 'icmp' 'icmp_ln80_11' <Predicate = (!icmp_ln62)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.78ns)   --->   "%icmp_ln80_12 = icmp_ugt  i5 %empty_43, i5 2" [d1.cpp:80]   --->   Operation 166 'icmp' 'icmp_ln80_12' <Predicate = (!icmp_ln62)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (0.79ns)   --->   "%add_ln62 = add i4 %i_load, i4 15" [d1.cpp:62]   --->   Operation 167 'add' 'add_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln62, i4 %i" [d1.cpp:62]   --->   Operation 168 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 169 [1/1] (0.42ns)   --->   "%store_ln62 = store i4 %add_ln68, i4 %k" [d1.cpp:62]   --->   Operation 169 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 170 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_3, i64 %add169_1618730" [d1.cpp:62]   --->   Operation 170 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>
ST_2 : Operation 171 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_1, i64 %add169729" [d1.cpp:62]   --->   Operation 171 'store' 'store_ln62' <Predicate = (!icmp_ln62)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.12>
ST_3 : Operation 172 [1/1] (0.00ns)   --->   "%k_load = load i32 %k_s" [d1.cpp:62]   --->   Operation 172 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%k1_load = load i32 %k1" [d1.cpp:62]   --->   Operation 173 'load' 'k1_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 174 [1/1] (0.00ns)   --->   "%add169_2647731_load = load i64 %add169_2647731" [d1.cpp:80]   --->   Operation 174 'load' 'add169_2647731_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%add169_1732_load = load i64 %add169_1732" [d1.cpp:80]   --->   Operation 175 'load' 'add169_1732_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 176 [1/1] (0.00ns)   --->   "%add169_1_1733_load = load i64 %add169_1_1733" [d1.cpp:80]   --->   Operation 176 'load' 'add169_1_1733_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 177 [1/1] (0.00ns)   --->   "%add169_1_2734_load = load i64 %add169_1_2734" [d1.cpp:80]   --->   Operation 177 'load' 'add169_1_2734_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 178 [1/1] (0.00ns)   --->   "%add169_2735_load = load i64 %add169_2735" [d1.cpp:80]   --->   Operation 178 'load' 'add169_2735_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 179 [1/1] (0.00ns)   --->   "%p_load74 = load i64 %empty" [d1.cpp:80]   --->   Operation 179 'load' 'p_load74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 180 [1/1] (0.00ns)   --->   "%p_load72 = load i64 %empty_35" [d1.cpp:80]   --->   Operation 180 'load' 'p_load72' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 181 [1/1] (0.00ns)   --->   "%p_load70 = load i64 %empty_36" [d1.cpp:80]   --->   Operation 181 'load' 'p_load70' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 182 [1/1] (0.00ns)   --->   "%p_load68 = load i64 %empty_37" [d1.cpp:80]   --->   Operation 182 'load' 'p_load68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 183 [1/1] (0.00ns)   --->   "%add138752_load = load i64 %add138752" [d1.cpp:70]   --->   Operation 183 'load' 'add138752_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i32 %k_load" [d1.cpp:62]   --->   Operation 184 'trunc' 'trunc_ln62' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i32 %k1_load" [d1.cpp:62]   --->   Operation 185 'trunc' 'trunc_ln62_1' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 186 [1/1] (1.01ns)   --->   "%k1_1 = add i32 %k1_load, i32 1" [d1.cpp:70]   --->   Operation 186 'add' 'k1_1' <Predicate = (tmp_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 187 [1/1] (0.48ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62_1" [d1.cpp:70]   --->   Operation 187 'mux' 'tmp_2' <Predicate = (tmp_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %tmp_2" [d1.cpp:70]   --->   Operation 188 'zext' 'zext_ln70' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 189 [1/1] (1.01ns)   --->   "%k_1_42 = add i32 %k_load, i32 1" [d1.cpp:70]   --->   Operation 189 'add' 'k_1_42' <Predicate = (tmp_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 190 [1/1] (0.48ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %trunc_ln62" [d1.cpp:70]   --->   Operation 190 'mux' 'tmp_3' <Predicate = (tmp_1)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 191 [1/1] (0.00ns)   --->   "%tmp_13_cast = zext i32 %tmp_3" [d1.cpp:70]   --->   Operation 191 'zext' 'tmp_13_cast' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : Operation 192 [1/1] (1.01ns)   --->   "%tmp = add i33 %tmp_13_cast, i33 %zext_ln70" [d1.cpp:70]   --->   Operation 192 'add' 'tmp' <Predicate = (tmp_1)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 193 [1/1] (0.00ns)   --->   "%tmp_cast = zext i33 %tmp" [d1.cpp:70]   --->   Operation 193 'zext' 'tmp_cast' <Predicate = (tmp_1)> <Delay = 0.00>
ST_3 : [1/1] (0.77ns)   --->   Input mux for Operation 194 '%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78'
ST_3 : Operation 194 [1/1] (2.64ns)   --->   "%tmp15 = mul i64 %tmp_cast, i64 %zext_ln78" [d1.cpp:70]   --->   Operation 194 'mul' 'tmp15' <Predicate = (tmp_1)> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 195 [1/1] (1.08ns)   --->   "%add_ln70 = add i64 %tmp15, i64 %add138752_load" [d1.cpp:70]   --->   Operation 195 'add' 'add_ln70' <Predicate = (tmp_1)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 196 [1/1] (0.42ns)   --->   "%select_ln70 = select i1 %tmp_1, i64 %add_ln70, i64 %add138752_load" [d1.cpp:70]   --->   Operation 196 'select' 'select_ln70' <Predicate = true> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 197 [1/1] (0.44ns)   --->   "%k_2 = select i1 %tmp_1, i32 %k_1_42, i32 %k_load" [d1.cpp:70]   --->   Operation 197 'select' 'k_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 198 [1/1] (0.44ns)   --->   "%k1_2 = select i1 %tmp_1, i32 %k1_1, i32 %k1_load" [d1.cpp:70]   --->   Operation 198 'select' 'k1_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 199 [1/1] (0.00ns)   --->   "%sext_ln36 = sext i3 %k3" [d1.cpp:36]   --->   Operation 199 'sext' 'sext_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 200 [1/1] (0.48ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_3" [d1.cpp:78]   --->   Operation 200 'mux' 'tmp_8' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i32 %tmp_8" [d1.cpp:78]   --->   Operation 201 'zext' 'zext_ln78_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 202 [1/1] (0.48ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln36" [d1.cpp:80]   --->   Operation 202 'mux' 'tmp_9' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i32 %tmp_9" [d1.cpp:80]   --->   Operation 203 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 204 '%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78'
ST_3 : Operation 204 [1/1] (2.10ns)   --->   "%mul_ln80_4 = mul i64 %zext_ln78_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 204 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 205 [1/1] (0.37ns)   --->   "%and_ln80_4 = and i64 %mul_ln80_4, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 205 'and' 'and_ln80_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 206 '%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78'
ST_3 : Operation 206 [1/1] (2.10ns)   --->   "%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 206 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_5)   --->   "%select_ln80_5 = select i1 %icmp_ln80_1, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 207 'select' 'select_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 208 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_5 = and i64 %mul_ln80_5, i64 %select_ln80_5" [d1.cpp:80]   --->   Operation 208 'and' 'and_ln80_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_6 = add i64 %and_ln80_5, i64 %and_ln80_4" [d1.cpp:80]   --->   Operation 209 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 210 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_5 = add i64 %add169_2647731_load, i64 %add_ln80_6" [d1.cpp:80]   --->   Operation 210 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 211 [1/1] (0.48ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_4" [d1.cpp:78]   --->   Operation 211 'mux' 'tmp_10' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln78_4 = zext i32 %tmp_10" [d1.cpp:78]   --->   Operation 212 'zext' 'zext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 213 [1/1] (0.48ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sext_ln36_1" [d1.cpp:80]   --->   Operation 213 'mux' 'tmp_11' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i32 %tmp_11" [d1.cpp:80]   --->   Operation 214 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 215 '%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78'
ST_3 : Operation 215 [1/1] (2.10ns)   --->   "%mul_ln80_6 = mul i64 %zext_ln78_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 215 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 216 [1/1] (0.37ns)   --->   "%and_ln80_6 = and i64 %mul_ln80_6, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 216 'and' 'and_ln80_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 217 '%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78'
ST_3 : Operation 217 [1/1] (2.10ns)   --->   "%mul_ln80_7 = mul i64 %zext_ln80_2, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 217 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_7)   --->   "%select_ln80_6 = select i1 %icmp_ln80_2, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 218 'select' 'select_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 219 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_7 = and i64 %mul_ln80_7, i64 %select_ln80_6" [d1.cpp:80]   --->   Operation 219 'and' 'and_ln80_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 220 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_8 = add i64 %and_ln80_7, i64 %and_ln80_6" [d1.cpp:80]   --->   Operation 220 'add' 'add_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 221 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_7 = add i64 %add169_1732_load, i64 %add_ln80_8" [d1.cpp:80]   --->   Operation 221 'add' 'add_ln80_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 222 [1/1] (0.48ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80" [d1.cpp:78]   --->   Operation 222 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i32 %tmp_12" [d1.cpp:78]   --->   Operation 223 'zext' 'zext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 224 [1/1] (0.79ns)   --->   "%sub_ln80_1 = sub i4 %sub_ln80, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 224 'sub' 'sub_ln80_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 225 [1/1] (0.48ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36" [d1.cpp:80]   --->   Operation 225 'mux' 'tmp_13' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 226 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i32 %tmp_13" [d1.cpp:80]   --->   Operation 226 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 227 '%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78'
ST_3 : Operation 227 [1/1] (2.10ns)   --->   "%mul_ln80_8 = mul i64 %zext_ln78_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 227 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 228 [1/1] (0.37ns)   --->   "%and_ln80_8 = and i64 %mul_ln80_8, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 228 'and' 'and_ln80_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 229 '%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78'
ST_3 : Operation 229 [1/1] (2.10ns)   --->   "%mul_ln80_9 = mul i64 %zext_ln80_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 229 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_9)   --->   "%select_ln80_7 = select i1 %icmp_ln80_3, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 230 'select' 'select_ln80_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 231 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_9 = and i64 %mul_ln80_9, i64 %select_ln80_7" [d1.cpp:80]   --->   Operation 231 'and' 'and_ln80_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 232 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_10 = add i64 %and_ln80_9, i64 %and_ln80_8" [d1.cpp:80]   --->   Operation 232 'add' 'add_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 233 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_9 = add i64 %add169_1_1733_load, i64 %add_ln80_10" [d1.cpp:80]   --->   Operation 233 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 234 [1/1] (0.48ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_1" [d1.cpp:78]   --->   Operation 234 'mux' 'tmp_14' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln78_6 = zext i32 %tmp_14" [d1.cpp:78]   --->   Operation 235 'zext' 'zext_ln78_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 236 [1/1] (0.79ns)   --->   "%sub_ln80_2 = sub i4 %sub_ln80_1, i4 %zext_ln79" [d1.cpp:80]   --->   Operation 236 'sub' 'sub_ln80_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 237 [1/1] (0.48ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_1" [d1.cpp:80]   --->   Operation 237 'mux' 'tmp_15' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i32 %tmp_15" [d1.cpp:80]   --->   Operation 238 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 239 '%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78'
ST_3 : Operation 239 [1/1] (2.10ns)   --->   "%mul_ln80_10 = mul i64 %zext_ln78_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 239 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 240 [1/1] (0.37ns)   --->   "%and_ln80_10 = and i64 %mul_ln80_10, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 240 'and' 'and_ln80_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 241 '%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78'
ST_3 : Operation 241 [1/1] (2.10ns)   --->   "%mul_ln80_11 = mul i64 %zext_ln80_4, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 241 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_11)   --->   "%select_ln80_8 = select i1 %icmp_ln80_4, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 242 'select' 'select_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 243 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_11 = and i64 %mul_ln80_11, i64 %select_ln80_8" [d1.cpp:80]   --->   Operation 243 'and' 'and_ln80_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 244 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_12 = add i64 %and_ln80_11, i64 %and_ln80_10" [d1.cpp:80]   --->   Operation 244 'add' 'add_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 245 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_11 = add i64 %add169_1_2734_load, i64 %add_ln80_12" [d1.cpp:80]   --->   Operation 245 'add' 'add_ln80_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 246 [1/1] (0.48ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln80_2" [d1.cpp:78]   --->   Operation 246 'mux' 'tmp_16' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i32 %tmp_16" [d1.cpp:78]   --->   Operation 247 'zext' 'zext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 248 [1/1] (0.48ns)   --->   "%tmp_17 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_2" [d1.cpp:80]   --->   Operation 248 'mux' 'tmp_17' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i32 %tmp_17" [d1.cpp:80]   --->   Operation 249 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 250 '%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78'
ST_3 : Operation 250 [1/1] (2.10ns)   --->   "%mul_ln80_12 = mul i64 %zext_ln78_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 250 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 251 [1/1] (0.37ns)   --->   "%and_ln80_12 = and i64 %mul_ln80_12, i64 %select_ln80_2" [d1.cpp:80]   --->   Operation 251 'and' 'and_ln80_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 252 '%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78'
ST_3 : Operation 252 [1/1] (2.10ns)   --->   "%mul_ln80_13 = mul i64 %zext_ln80_5, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 252 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node and_ln80_13)   --->   "%select_ln80_9 = select i1 %icmp_ln80_5, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 253 'select' 'select_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 254 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln80_13 = and i64 %mul_ln80_13, i64 %select_ln80_9" [d1.cpp:80]   --->   Operation 254 'and' 'and_ln80_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 255 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_22 = add i64 %and_ln80_13, i64 %and_ln80_12" [d1.cpp:80]   --->   Operation 255 'add' 'add_ln80_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 256 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_13 = add i64 %add169_2735_load, i64 %add_ln80_22" [d1.cpp:80]   --->   Operation 256 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 257 [1/1] (0.48ns)   --->   "%tmp_18 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_3" [d1.cpp:80]   --->   Operation 257 'mux' 'tmp_18' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 258 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i32 %tmp_18" [d1.cpp:80]   --->   Operation 258 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 259 '%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78'
ST_3 : Operation 259 [1/1] (2.10ns)   --->   "%mul_ln80_14 = mul i64 %zext_ln80_6, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 259 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_14)   --->   "%select_ln80_10 = select i1 %icmp_ln80_6, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 260 'select' 'select_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_14)   --->   "%and_ln80_14 = and i64 %mul_ln80_14, i64 %select_ln80_10" [d1.cpp:80]   --->   Operation 261 'and' 'and_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 262 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_14 = add i64 %and_ln80_14, i64 %p_load74" [d1.cpp:80]   --->   Operation 262 'add' 'add_ln80_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 263 [1/1] (0.48ns)   --->   "%tmp_19 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_4" [d1.cpp:80]   --->   Operation 263 'mux' 'tmp_19' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i32 %tmp_19" [d1.cpp:80]   --->   Operation 264 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 265 '%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78'
ST_3 : Operation 265 [1/1] (2.10ns)   --->   "%mul_ln80_15 = mul i64 %zext_ln80_7, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 265 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 266 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_15)   --->   "%select_ln80_11 = select i1 %icmp_ln80_7, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 266 'select' 'select_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_15)   --->   "%and_ln80_15 = and i64 %mul_ln80_15, i64 %select_ln80_11" [d1.cpp:80]   --->   Operation 267 'and' 'and_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 268 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_15 = add i64 %and_ln80_15, i64 %p_load72" [d1.cpp:80]   --->   Operation 268 'add' 'add_ln80_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 269 [1/1] (0.00ns)   --->   "%zext_ln81_6 = zext i1 %icmp_ln80_7" [d1.cpp:81]   --->   Operation 269 'zext' 'zext_ln81_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 270 [1/1] (0.79ns)   --->   "%sub_ln36_5 = sub i4 %sub_ln36_4, i4 %zext_ln81_6" [d1.cpp:36]   --->   Operation 270 'sub' 'sub_ln36_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 271 [1/1] (0.48ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_5" [d1.cpp:80]   --->   Operation 271 'mux' 'tmp_21' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 272 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i32 %tmp_21" [d1.cpp:80]   --->   Operation 272 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 273 '%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78'
ST_3 : Operation 273 [1/1] (2.10ns)   --->   "%mul_ln80_16 = mul i64 %zext_ln80_8, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 273 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_16)   --->   "%select_ln80_12 = select i1 %icmp_ln80_8, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 274 'select' 'select_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_16)   --->   "%and_ln80_16 = and i64 %mul_ln80_16, i64 %select_ln80_12" [d1.cpp:80]   --->   Operation 275 'and' 'and_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 276 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_16 = add i64 %and_ln80_16, i64 %p_load70" [d1.cpp:80]   --->   Operation 276 'add' 'add_ln80_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 277 [1/1] (0.00ns)   --->   "%zext_ln81_7 = zext i1 %icmp_ln80_8" [d1.cpp:81]   --->   Operation 277 'zext' 'zext_ln81_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 278 [1/1] (0.79ns)   --->   "%sub_ln36_9 = sub i4 %sub_ln36_5, i4 %zext_ln81_7" [d1.cpp:36]   --->   Operation 278 'sub' 'sub_ln36_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 279 [1/1] (0.48ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_9" [d1.cpp:80]   --->   Operation 279 'mux' 'tmp_22' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln80_9 = zext i32 %tmp_22" [d1.cpp:80]   --->   Operation 280 'zext' 'zext_ln80_9' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.31ns)   --->   Input mux for Operation 281 '%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78'
ST_3 : Operation 281 [1/1] (2.10ns)   --->   "%mul_ln80_17 = mul i64 %zext_ln80_9, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 281 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_17)   --->   "%select_ln80_13 = select i1 %icmp_ln80_9, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 282 'select' 'select_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_17)   --->   "%and_ln80_17 = and i64 %mul_ln80_17, i64 %select_ln80_13" [d1.cpp:80]   --->   Operation 283 'and' 'and_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 284 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_17 = add i64 %and_ln80_17, i64 %p_load68" [d1.cpp:80]   --->   Operation 284 'add' 'add_ln80_17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln81_8 = zext i1 %icmp_ln80_9" [d1.cpp:81]   --->   Operation 285 'zext' 'zext_ln81_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 286 [1/1] (0.79ns)   --->   "%sub_ln36_10 = sub i4 %sub_ln36_9, i4 %zext_ln81_8" [d1.cpp:36]   --->   Operation 286 'sub' 'sub_ln36_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln81_9 = zext i1 %icmp_ln80_10" [d1.cpp:81]   --->   Operation 287 'zext' 'zext_ln81_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 288 [1/1] (0.79ns)   --->   "%sub_ln36_6 = sub i4 %sub_ln36_10, i4 %zext_ln81_9" [d1.cpp:36]   --->   Operation 288 'sub' 'sub_ln36_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 289 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %select_ln70, i64 %add138752" [d1.cpp:62]   --->   Operation 289 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 290 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_17, i64 %empty_37" [d1.cpp:62]   --->   Operation 290 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 291 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_16, i64 %empty_36" [d1.cpp:62]   --->   Operation 291 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 292 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_15, i64 %empty_35" [d1.cpp:62]   --->   Operation 292 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 293 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_14, i64 %empty" [d1.cpp:62]   --->   Operation 293 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 294 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_13, i64 %add169_2735" [d1.cpp:62]   --->   Operation 294 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 295 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_11, i64 %add169_1_2734" [d1.cpp:62]   --->   Operation 295 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 296 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_9, i64 %add169_1_1733" [d1.cpp:62]   --->   Operation 296 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 297 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_7, i64 %add169_1732" [d1.cpp:62]   --->   Operation 297 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 298 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_5, i64 %add169_2647731" [d1.cpp:62]   --->   Operation 298 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 299 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k1_2, i32 %k1" [d1.cpp:62]   --->   Operation 299 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 300 [1/1] (0.42ns)   --->   "%store_ln62 = store i32 %k_2, i32 %k_s" [d1.cpp:62]   --->   Operation 300 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 339 [1/1] (0.00ns)   --->   "%add169729_load_1 = load i64 %add169729"   --->   Operation 339 'load' 'add169729_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 340 [1/1] (0.00ns)   --->   "%add169_1618730_load_1 = load i64 %add169_1618730"   --->   Operation 340 'load' 'add169_1618730_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 341 [1/1] (0.00ns)   --->   "%add169_2647731_load_1 = load i64 %add169_2647731"   --->   Operation 341 'load' 'add169_2647731_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 342 [1/1] (0.00ns)   --->   "%add169_1732_load_1 = load i64 %add169_1732"   --->   Operation 342 'load' 'add169_1732_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 343 [1/1] (0.00ns)   --->   "%add169_1_1733_load_1 = load i64 %add169_1_1733"   --->   Operation 343 'load' 'add169_1_1733_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 344 [1/1] (0.00ns)   --->   "%add169_1_2734_load_1 = load i64 %add169_1_2734"   --->   Operation 344 'load' 'add169_1_2734_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 345 [1/1] (0.00ns)   --->   "%add169_2735_load_1 = load i64 %add169_2735"   --->   Operation 345 'load' 'add169_2735_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 346 [1/1] (0.00ns)   --->   "%p_load75 = load i64 %empty"   --->   Operation 346 'load' 'p_load75' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 347 [1/1] (0.00ns)   --->   "%p_load73 = load i64 %empty_35"   --->   Operation 347 'load' 'p_load73' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 348 [1/1] (0.00ns)   --->   "%p_load71 = load i64 %empty_36"   --->   Operation 348 'load' 'p_load71' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 349 [1/1] (0.00ns)   --->   "%p_load69 = load i64 %empty_37"   --->   Operation 349 'load' 'p_load69' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 350 [1/1] (0.00ns)   --->   "%p_load67 = load i64 %empty_38"   --->   Operation 350 'load' 'p_load67' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 351 [1/1] (0.00ns)   --->   "%p_load65 = load i64 %empty_39"   --->   Operation 351 'load' 'p_load65' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 352 [1/1] (0.00ns)   --->   "%p_load63 = load i64 %empty_40"   --->   Operation 352 'load' 'p_load63' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 353 [1/1] (0.00ns)   --->   "%p_load61 = load i64 %empty_41"   --->   Operation 353 'load' 'p_load61' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 354 [1/1] (0.00ns)   --->   "%add138752_load_1 = load i64 %add138752"   --->   Operation 354 'load' 'add138752_load_1' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 355 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add138752_out, i64 %add138752_load_1"   --->   Operation 355 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 356 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load61"   --->   Operation 356 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 357 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load63"   --->   Operation 357 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 358 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load65"   --->   Operation 358 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 359 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load67"   --->   Operation 359 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 360 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load69"   --->   Operation 360 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 361 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load71"   --->   Operation 361 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 362 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load73"   --->   Operation 362 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 363 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load75"   --->   Operation 363 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 364 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_2735_out, i64 %add169_2735_load_1"   --->   Operation 364 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 365 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1_2734_out, i64 %add169_1_2734_load_1"   --->   Operation 365 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 366 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1_1733_out, i64 %add169_1_1733_load_1"   --->   Operation 366 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 367 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1732_out, i64 %add169_1732_load_1"   --->   Operation 367 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 368 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_2647731_out, i64 %add169_2647731_load_1"   --->   Operation 368 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 369 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169_1618730_out, i64 %add169_1618730_load_1"   --->   Operation 369 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 370 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add169729_out, i64 %add169729_load_1"   --->   Operation 370 'write' 'write_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 371 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 371 'ret' 'ret_ln0' <Predicate = (icmp_ln62)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.01>
ST_4 : Operation 301 [1/1] (0.00ns)   --->   "%p_load66 = load i64 %empty_38" [d1.cpp:80]   --->   Operation 301 'load' 'p_load66' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 302 [1/1] (0.00ns)   --->   "%p_load64 = load i64 %empty_39" [d1.cpp:80]   --->   Operation 302 'load' 'p_load64' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 303 [1/1] (0.00ns)   --->   "%p_load62 = load i64 %empty_40" [d1.cpp:80]   --->   Operation 303 'load' 'p_load62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 304 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_41" [d1.cpp:80]   --->   Operation 304 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 305 [1/1] (0.00ns)   --->   "%specpipeline_ln64 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d1.cpp:64]   --->   Operation 305 'specpipeline' 'specpipeline_ln64' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 306 [1/1] (0.00ns)   --->   "%speclooptripcount_ln62 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15" [d1.cpp:62]   --->   Operation 306 'speclooptripcount' 'speclooptripcount_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 307 [1/1] (0.00ns)   --->   "%specloopname_ln62 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [d1.cpp:62]   --->   Operation 307 'specloopname' 'specloopname_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 308 [1/1] (0.48ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_10" [d1.cpp:80]   --->   Operation 308 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 309 [1/1] (0.00ns)   --->   "%zext_ln80_10 = zext i32 %tmp_23" [d1.cpp:80]   --->   Operation 309 'zext' 'zext_ln80_10' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 310 '%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78'
ST_4 : Operation 310 [1/1] (2.10ns)   --->   "%mul_ln80_18 = mul i64 %zext_ln80_10, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 310 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 311 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_18)   --->   "%select_ln80_14 = select i1 %icmp_ln80_10, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 311 'select' 'select_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_18)   --->   "%and_ln80_18 = and i64 %mul_ln80_18, i64 %select_ln80_14" [d1.cpp:80]   --->   Operation 312 'and' 'and_ln80_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 313 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_18 = add i64 %and_ln80_18, i64 %p_load66" [d1.cpp:80]   --->   Operation 313 'add' 'add_ln80_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 314 [1/1] (0.48ns)   --->   "%tmp_24 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_6" [d1.cpp:80]   --->   Operation 314 'mux' 'tmp_24' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 315 [1/1] (0.00ns)   --->   "%zext_ln80_11 = zext i32 %tmp_24" [d1.cpp:80]   --->   Operation 315 'zext' 'zext_ln80_11' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 316 '%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78'
ST_4 : Operation 316 [1/1] (2.10ns)   --->   "%mul_ln80_19 = mul i64 %zext_ln80_11, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 316 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_19)   --->   "%select_ln80_15 = select i1 %icmp_ln80_11, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 317 'select' 'select_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_19)   --->   "%and_ln80_19 = and i64 %mul_ln80_19, i64 %select_ln80_15" [d1.cpp:80]   --->   Operation 318 'and' 'and_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 319 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_19 = add i64 %and_ln80_19, i64 %p_load64" [d1.cpp:80]   --->   Operation 319 'add' 'add_ln80_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln81_10 = zext i1 %icmp_ln80_11" [d1.cpp:81]   --->   Operation 320 'zext' 'zext_ln81_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 321 [1/1] (0.79ns)   --->   "%sub_ln36_7 = sub i4 %sub_ln36_6, i4 %zext_ln81_10" [d1.cpp:36]   --->   Operation 321 'sub' 'sub_ln36_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 322 [1/1] (0.48ns)   --->   "%tmp_26 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_7" [d1.cpp:80]   --->   Operation 322 'mux' 'tmp_26' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 323 [1/1] (0.00ns)   --->   "%zext_ln80_12 = zext i32 %tmp_26" [d1.cpp:80]   --->   Operation 323 'zext' 'zext_ln80_12' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 324 '%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78'
ST_4 : Operation 324 [1/1] (2.10ns)   --->   "%mul_ln80_20 = mul i64 %zext_ln80_12, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 324 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_20)   --->   "%select_ln80_16 = select i1 %icmp_ln80_12, i64 18446744073709551615, i64 0" [d1.cpp:80]   --->   Operation 325 'select' 'select_ln80_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 326 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_20)   --->   "%and_ln80_20 = and i64 %mul_ln80_20, i64 %select_ln80_16" [d1.cpp:80]   --->   Operation 326 'and' 'and_ln80_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 327 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln80_20 = add i64 %and_ln80_20, i64 %p_load62" [d1.cpp:80]   --->   Operation 327 'add' 'add_ln80_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 328 [1/1] (0.00ns)   --->   "%zext_ln81_11 = zext i1 %icmp_ln80_12" [d1.cpp:81]   --->   Operation 328 'zext' 'zext_ln81_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 329 [1/1] (0.79ns)   --->   "%sub_ln36_8 = sub i4 %sub_ln36_7, i4 %zext_ln81_11" [d1.cpp:36]   --->   Operation 329 'sub' 'sub_ln36_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 330 [1/1] (0.48ns)   --->   "%tmp_27 = mux i32 @_ssdm_op_Mux.ap_auto.16i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i32 %arg2_r_10_reload_read, i32 %arg2_r_11_reload_read, i32 %arg2_r_12_reload_read, i32 %arg2_r_13_reload_read, i32 %arg2_r_14_reload_read, i32 %arg2_r_15_reload_read, i4 %sub_ln36_8" [d1.cpp:80]   --->   Operation 330 'mux' 'tmp_27' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 331 [1/1] (0.00ns)   --->   "%zext_ln80_13 = zext i32 %tmp_27" [d1.cpp:80]   --->   Operation 331 'zext' 'zext_ln80_13' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (1.31ns)   --->   Input mux for Operation 332 '%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78'
ST_4 : Operation 332 [1/1] (2.10ns)   --->   "%mul_ln80_21 = mul i64 %zext_ln80_13, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 332 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 333 [1/1] (1.08ns)   --->   "%add_ln80_21 = add i64 %mul_ln80_21, i64 %p_load" [d1.cpp:80]   --->   Operation 333 'add' 'add_ln80_21' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 334 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_21, i64 %empty_41" [d1.cpp:62]   --->   Operation 334 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 335 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_20, i64 %empty_40" [d1.cpp:62]   --->   Operation 335 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 336 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_19, i64 %empty_39" [d1.cpp:62]   --->   Operation 336 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 337 [1/1] (0.42ns)   --->   "%store_ln62 = store i64 %add_ln80_18, i64 %empty_38" [d1.cpp:62]   --->   Operation 337 'store' 'store_ln62' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 338 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body113" [d1.cpp:62]   --->   Operation 338 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [82]  (0.000 ns)
	'store' operation ('store_ln0') of constant 15 on local variable 'i' [130]  (0.427 ns)

 <State 2>: 7.128ns
The critical path consists of the following:
	'load' operation ('i_load', d1.cpp:70) on local variable 'i' [175]  (0.000 ns)
	'icmp' operation ('cmp159', d1.cpp:70) [198]  (0.797 ns)
	'select' operation ('select_ln80_1', d1.cpp:80) [202]  (0.000 ns)
	'add' operation ('add_ln80', d1.cpp:80) [203]  (0.797 ns)
	'mux' operation ('tmp_7', d1.cpp:78) [215]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.315 ns)
'mul' operation ('mul_ln80_2', d1.cpp:80) [222]  (2.105 ns)
	'and' operation ('and_ln80_2', d1.cpp:80) [223]  (0.379 ns)
	'add' operation ('add_ln80_4', d1.cpp:80) [227]  (0.000 ns)
	'add' operation ('add_ln80_3', d1.cpp:80) [228]  (0.819 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_3', d1.cpp:80 on local variable 'add169_1618730' [393]  (0.427 ns)

 <State 3>: 7.128ns
The critical path consists of the following:
	'sub' operation ('sub_ln80_1', d1.cpp:80) [265]  (0.797 ns)
	'sub' operation ('sub_ln80_2', d1.cpp:80) [280]  (0.797 ns)
	'mux' operation ('tmp_16', d1.cpp:78) [293]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.315 ns)
'mul' operation ('mul_ln80_12', d1.cpp:80) [298]  (2.105 ns)
	'and' operation ('and_ln80_12', d1.cpp:80) [299]  (0.379 ns)
	'add' operation ('add_ln80_22', d1.cpp:80) [303]  (0.000 ns)
	'add' operation ('add_ln80_13', d1.cpp:80) [304]  (0.819 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_13', d1.cpp:80 on local variable 'add169_2735' [388]  (0.427 ns)

 <State 4>: 7.015ns
The critical path consists of the following:
	'sub' operation ('sub_ln36_7', d1.cpp:36) [362]  (0.797 ns)
	'sub' operation ('sub_ln36_8', d1.cpp:36) [371]  (0.797 ns)
	'mux' operation ('tmp_27', d1.cpp:80) [372]  (0.489 ns)
	multiplexor before operation 'mul' with delay (1.315 ns)
'mul' operation ('mul_ln80_21', d1.cpp:80) [374]  (2.105 ns)
	'add' operation ('add_ln80_21', d1.cpp:80) [375]  (1.085 ns)
	'store' operation ('store_ln62', d1.cpp:62) of variable 'add_ln80_21', d1.cpp:80 on local variable 'empty_41' [380]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
