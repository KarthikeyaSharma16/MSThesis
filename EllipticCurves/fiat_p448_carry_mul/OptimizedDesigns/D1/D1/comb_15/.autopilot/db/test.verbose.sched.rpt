

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Fri May 10 15:10:53 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_15 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       95|       95|  0.950 us|  0.950 us|   96|   96|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 35 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 36 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 37 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add2561700_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add2561700_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add256_11703_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add256_11703_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add256_21706_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add256_21706_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add256_31709_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add256_31709_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add256_41712_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add256_41712_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add256_51715_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add256_51715_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add280_141720_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add280_141720_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 45 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg2_r_9_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg2_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg2_r_10_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg2_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg2_r_11_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg2_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg2_r_12_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg2_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg2_r_13_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg2_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg2_r_14_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg2_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg2_r_15_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg2_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 64 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 65 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 66 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg1_r_9_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg1_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg1_r_10_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg1_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg1_r_11_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg1_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg1_r_12_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg1_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg1_r_13_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg1_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg1_r_14_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg1_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_15_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln24_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg1_read, i32 2, i32 63" [d1.cpp:24]   --->   Operation 77 'partselect' 'trunc_ln24_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg2_read, i32 2, i32 63" [d1.cpp:31]   --->   Operation 78 'partselect' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%trunc_ln149_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out1_read, i32 2, i32 63" [d1.cpp:149]   --->   Operation 79 'partselect' 'trunc_ln149_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i62 %trunc_ln24_1" [d1.cpp:24]   --->   Operation 80 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln24" [d1.cpp:24]   --->   Operation 81 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 82 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 83 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 83 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 84 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 84 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 85 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 85 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 86 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 86 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 87 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 87 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 88 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 88 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 89 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 89 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 90 [2/2] (0.00ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 90 'call' 'call_ln24' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.21>
ST_11 : Operation 91 [1/2] (1.21ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 91 'call' 'call_ln24' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 92 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i62 %trunc_ln31_1" [d1.cpp:31]   --->   Operation 92 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 93 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i32 %mem, i64 %sext_ln31" [d1.cpp:31]   --->   Operation 93 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 94 [8/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 94 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 95 [7/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 95 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 96 [6/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 96 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 97 [5/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 97 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 98 [4/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 98 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 99 [3/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 99 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 100 [2/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 100 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 101 [1/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 101 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 102 [2/2] (0.00ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 102 'call' 'call_ln31' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.21>
ST_21 : Operation 103 [1/2] (1.21ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 103 'call' 'call_ln31' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 5.32>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%arg1_r_15_loc_load = load i32 %arg1_r_15_loc"   --->   Operation 104 'load' 'arg1_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%arg1_r_14_loc_load = load i32 %arg1_r_14_loc"   --->   Operation 105 'load' 'arg1_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 106 [1/1] (0.00ns)   --->   "%arg1_r_13_loc_load = load i32 %arg1_r_13_loc"   --->   Operation 106 'load' 'arg1_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%arg1_r_12_loc_load = load i32 %arg1_r_12_loc"   --->   Operation 107 'load' 'arg1_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%arg1_r_11_loc_load = load i32 %arg1_r_11_loc"   --->   Operation 108 'load' 'arg1_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%arg1_r_10_loc_load = load i32 %arg1_r_10_loc"   --->   Operation 109 'load' 'arg1_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 110 [1/1] (0.00ns)   --->   "%arg1_r_9_loc_load = load i32 %arg1_r_9_loc"   --->   Operation 110 'load' 'arg1_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i32 %arg1_r_8_loc"   --->   Operation 111 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i32 %arg1_r_7_loc"   --->   Operation 112 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%arg2_r_15_loc_load = load i32 %arg2_r_15_loc"   --->   Operation 113 'load' 'arg2_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%arg2_r_14_loc_load = load i32 %arg2_r_14_loc"   --->   Operation 114 'load' 'arg2_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%arg2_r_13_loc_load = load i32 %arg2_r_13_loc"   --->   Operation 115 'load' 'arg2_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%arg2_r_12_loc_load = load i32 %arg2_r_12_loc"   --->   Operation 116 'load' 'arg2_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 117 [1/1] (0.00ns)   --->   "%arg2_r_11_loc_load = load i32 %arg2_r_11_loc"   --->   Operation 117 'load' 'arg2_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 118 [1/1] (0.00ns)   --->   "%arg2_r_10_loc_load = load i32 %arg2_r_10_loc"   --->   Operation 118 'load' 'arg2_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 119 [1/1] (0.00ns)   --->   "%arg2_r_9_loc_load = load i32 %arg2_r_9_loc"   --->   Operation 119 'load' 'arg2_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i32 %arg2_r_8_loc"   --->   Operation 120 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i32 %arg2_r_6_loc"   --->   Operation 121 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i32 %arg2_r_5_loc"   --->   Operation 122 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i32 %arg2_r_4_loc"   --->   Operation 123 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i32 %arg2_r_3_loc"   --->   Operation 124 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i32 %arg2_r_2_loc"   --->   Operation 125 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 126 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i32 %arg2_r_1_loc"   --->   Operation 126 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 127 [1/1] (0.00ns)   --->   "%conv36 = zext i32 %arg2_r_15_loc_load"   --->   Operation 127 'zext' 'conv36' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i32 %arg1_r_15_loc_load" [d1.cpp:50]   --->   Operation 128 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i32 %arg2_r_14_loc_load" [d1.cpp:50]   --->   Operation 129 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln50_15 = zext i32 %arg2_r_14_loc_load" [d1.cpp:50]   --->   Operation 130 'zext' 'zext_ln50_15' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 131 '%mul_ln50 = mul i64 %zext_ln50_1, i64 %zext_ln50'
ST_22 : Operation 131 [1/1] (2.10ns)   --->   "%mul_ln50 = mul i64 %zext_ln50_1, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 131 'mul' 'mul_ln50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i32 %arg2_r_13_loc_load" [d1.cpp:50]   --->   Operation 132 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln50_16 = zext i32 %arg2_r_13_loc_load" [d1.cpp:50]   --->   Operation 133 'zext' 'zext_ln50_16' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 134 '%mul_ln50_1 = mul i64 %zext_ln50_2, i64 %zext_ln50'
ST_22 : Operation 134 [1/1] (2.10ns)   --->   "%mul_ln50_1 = mul i64 %zext_ln50_2, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 134 'mul' 'mul_ln50_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i32 %arg2_r_12_loc_load" [d1.cpp:50]   --->   Operation 135 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln50_17 = zext i32 %arg2_r_12_loc_load" [d1.cpp:50]   --->   Operation 136 'zext' 'zext_ln50_17' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 137 '%mul_ln50_2 = mul i64 %zext_ln50_3, i64 %zext_ln50'
ST_22 : Operation 137 [1/1] (2.10ns)   --->   "%mul_ln50_2 = mul i64 %zext_ln50_3, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 137 'mul' 'mul_ln50_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i32 %arg2_r_11_loc_load" [d1.cpp:50]   --->   Operation 138 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln50_18 = zext i32 %arg2_r_11_loc_load" [d1.cpp:50]   --->   Operation 139 'zext' 'zext_ln50_18' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 140 '%mul_ln50_3 = mul i64 %zext_ln50_4, i64 %zext_ln50'
ST_22 : Operation 140 [1/1] (2.10ns)   --->   "%mul_ln50_3 = mul i64 %zext_ln50_4, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 140 'mul' 'mul_ln50_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i32 %arg2_r_10_loc_load" [d1.cpp:50]   --->   Operation 141 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln50_19 = zext i32 %arg2_r_10_loc_load" [d1.cpp:50]   --->   Operation 142 'zext' 'zext_ln50_19' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 143 '%mul_ln50_4 = mul i64 %zext_ln50_5, i64 %zext_ln50'
ST_22 : Operation 143 [1/1] (2.10ns)   --->   "%mul_ln50_4 = mul i64 %zext_ln50_5, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 143 'mul' 'mul_ln50_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i32 %arg2_r_9_loc_load" [d1.cpp:50]   --->   Operation 144 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln50_20 = zext i32 %arg2_r_9_loc_load" [d1.cpp:50]   --->   Operation 145 'zext' 'zext_ln50_20' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 146 '%mul_ln50_5 = mul i64 %zext_ln50_6, i64 %zext_ln50'
ST_22 : Operation 146 [1/1] (2.10ns)   --->   "%mul_ln50_5 = mul i64 %zext_ln50_6, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 146 'mul' 'mul_ln50_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i32 %arg1_r_14_loc_load" [d1.cpp:50]   --->   Operation 147 'zext' 'zext_ln50_7' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 148 '%mul_ln50_6 = mul i64 %conv36, i64 %zext_ln50_7'
ST_22 : Operation 148 [1/1] (2.10ns)   --->   "%mul_ln50_6 = mul i64 %conv36, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 148 'mul' 'mul_ln50_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 149 '%mul_ln50_7 = mul i64 %zext_ln50_1, i64 %zext_ln50_7'
ST_22 : Operation 149 [1/1] (2.10ns)   --->   "%mul_ln50_7 = mul i64 %zext_ln50_1, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 149 'mul' 'mul_ln50_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 150 '%mul_ln50_8 = mul i64 %zext_ln50_2, i64 %zext_ln50_7'
ST_22 : Operation 150 [1/1] (2.10ns)   --->   "%mul_ln50_8 = mul i64 %zext_ln50_2, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 150 'mul' 'mul_ln50_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 151 '%mul_ln50_9 = mul i64 %zext_ln50_3, i64 %zext_ln50_7'
ST_22 : Operation 151 [1/1] (2.10ns)   --->   "%mul_ln50_9 = mul i64 %zext_ln50_3, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 151 'mul' 'mul_ln50_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 152 '%mul_ln50_10 = mul i64 %zext_ln50_4, i64 %zext_ln50_7'
ST_22 : Operation 152 [1/1] (2.10ns)   --->   "%mul_ln50_10 = mul i64 %zext_ln50_4, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 152 'mul' 'mul_ln50_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 153 '%mul_ln50_11 = mul i64 %zext_ln50_5, i64 %zext_ln50_7'
ST_22 : Operation 153 [1/1] (2.10ns)   --->   "%mul_ln50_11 = mul i64 %zext_ln50_5, i64 %zext_ln50_7" [d1.cpp:50]   --->   Operation 153 'mul' 'mul_ln50_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i32 %arg1_r_13_loc_load" [d1.cpp:50]   --->   Operation 154 'zext' 'zext_ln50_8' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 155 '%mul_ln50_12 = mul i64 %conv36, i64 %zext_ln50_8'
ST_22 : Operation 155 [1/1] (2.10ns)   --->   "%mul_ln50_12 = mul i64 %conv36, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 155 'mul' 'mul_ln50_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 156 '%mul_ln50_13 = mul i64 %zext_ln50_1, i64 %zext_ln50_8'
ST_22 : Operation 156 [1/1] (2.10ns)   --->   "%mul_ln50_13 = mul i64 %zext_ln50_1, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 156 'mul' 'mul_ln50_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 157 '%mul_ln50_14 = mul i64 %zext_ln50_2, i64 %zext_ln50_8'
ST_22 : Operation 157 [1/1] (2.10ns)   --->   "%mul_ln50_14 = mul i64 %zext_ln50_2, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 157 'mul' 'mul_ln50_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 158 '%mul_ln50_15 = mul i64 %zext_ln50_3, i64 %zext_ln50_8'
ST_22 : Operation 158 [1/1] (2.10ns)   --->   "%mul_ln50_15 = mul i64 %zext_ln50_3, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 158 'mul' 'mul_ln50_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 159 '%mul_ln50_16 = mul i64 %zext_ln50_4, i64 %zext_ln50_8'
ST_22 : Operation 159 [1/1] (2.10ns)   --->   "%mul_ln50_16 = mul i64 %zext_ln50_4, i64 %zext_ln50_8" [d1.cpp:50]   --->   Operation 159 'mul' 'mul_ln50_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i32 %arg1_r_12_loc_load" [d1.cpp:50]   --->   Operation 160 'zext' 'zext_ln50_9' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 161 '%mul_ln50_17 = mul i64 %conv36, i64 %zext_ln50_9'
ST_22 : Operation 161 [1/1] (2.10ns)   --->   "%mul_ln50_17 = mul i64 %conv36, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 161 'mul' 'mul_ln50_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 162 '%mul_ln50_18 = mul i64 %zext_ln50_1, i64 %zext_ln50_9'
ST_22 : Operation 162 [1/1] (2.10ns)   --->   "%mul_ln50_18 = mul i64 %zext_ln50_1, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 162 'mul' 'mul_ln50_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 163 '%mul_ln50_19 = mul i64 %zext_ln50_2, i64 %zext_ln50_9'
ST_22 : Operation 163 [1/1] (2.10ns)   --->   "%mul_ln50_19 = mul i64 %zext_ln50_2, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 163 'mul' 'mul_ln50_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 164 '%mul_ln50_20 = mul i64 %zext_ln50_3, i64 %zext_ln50_9'
ST_22 : Operation 164 [1/1] (2.10ns)   --->   "%mul_ln50_20 = mul i64 %zext_ln50_3, i64 %zext_ln50_9" [d1.cpp:50]   --->   Operation 164 'mul' 'mul_ln50_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln50_10 = zext i32 %arg1_r_11_loc_load" [d1.cpp:50]   --->   Operation 165 'zext' 'zext_ln50_10' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 166 '%mul_ln50_21 = mul i64 %conv36, i64 %zext_ln50_10'
ST_22 : Operation 166 [1/1] (2.10ns)   --->   "%mul_ln50_21 = mul i64 %conv36, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 166 'mul' 'mul_ln50_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 167 '%mul_ln50_22 = mul i64 %zext_ln50_1, i64 %zext_ln50_10'
ST_22 : Operation 167 [1/1] (2.10ns)   --->   "%mul_ln50_22 = mul i64 %zext_ln50_1, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 167 'mul' 'mul_ln50_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 168 '%mul_ln50_23 = mul i64 %zext_ln50_2, i64 %zext_ln50_10'
ST_22 : Operation 168 [1/1] (2.10ns)   --->   "%mul_ln50_23 = mul i64 %zext_ln50_2, i64 %zext_ln50_10" [d1.cpp:50]   --->   Operation 168 'mul' 'mul_ln50_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln50_11 = zext i32 %arg1_r_10_loc_load" [d1.cpp:50]   --->   Operation 169 'zext' 'zext_ln50_11' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 170 '%mul_ln50_24 = mul i64 %conv36, i64 %zext_ln50_11'
ST_22 : Operation 170 [1/1] (2.10ns)   --->   "%mul_ln50_24 = mul i64 %conv36, i64 %zext_ln50_11" [d1.cpp:50]   --->   Operation 170 'mul' 'mul_ln50_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 171 '%mul_ln50_25 = mul i64 %zext_ln50_1, i64 %zext_ln50_11'
ST_22 : Operation 171 [1/1] (2.10ns)   --->   "%mul_ln50_25 = mul i64 %zext_ln50_1, i64 %zext_ln50_11" [d1.cpp:50]   --->   Operation 171 'mul' 'mul_ln50_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln50_12 = zext i32 %arg1_r_9_loc_load" [d1.cpp:50]   --->   Operation 172 'zext' 'zext_ln50_12' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 173 '%mul_ln50_26 = mul i64 %conv36, i64 %zext_ln50_12'
ST_22 : Operation 173 [1/1] (2.10ns)   --->   "%mul_ln50_26 = mul i64 %conv36, i64 %zext_ln50_12" [d1.cpp:50]   --->   Operation 173 'mul' 'mul_ln50_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %arg2_r_8_loc_load" [d1.cpp:70]   --->   Operation 174 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln50_23 = zext i32 %arg2_r_6_loc_load" [d1.cpp:50]   --->   Operation 175 'zext' 'zext_ln50_23' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 176 [1/1] (1.01ns)   --->   "%add_ln50_2 = add i33 %zext_ln50_15, i33 %zext_ln50_23" [d1.cpp:50]   --->   Operation 176 'add' 'add_ln50_2' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln50_24 = zext i33 %add_ln50_2" [d1.cpp:50]   --->   Operation 177 'zext' 'zext_ln50_24' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 178 '%mul_ln50_27 = mul i64 %zext_ln50_24, i64 %zext_ln50'
ST_22 : Operation 178 [1/1] (2.64ns)   --->   "%mul_ln50_27 = mul i64 %zext_ln50_24, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 178 'mul' 'mul_ln50_27' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln50_25 = zext i32 %arg2_r_5_loc_load" [d1.cpp:50]   --->   Operation 179 'zext' 'zext_ln50_25' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 180 [1/1] (1.08ns)   --->   "%add_ln50_1 = add i64 %mul_ln50_12, i64 %mul_ln50_7" [d1.cpp:50]   --->   Operation 180 'add' 'add_ln50_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 181 [1/1] (1.01ns)   --->   "%add_ln50 = add i33 %zext_ln50_16, i33 %zext_ln50_25" [d1.cpp:50]   --->   Operation 181 'add' 'add_ln50' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln50_26 = zext i33 %add_ln50" [d1.cpp:50]   --->   Operation 182 'zext' 'zext_ln50_26' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 183 '%mul_ln50_28 = mul i64 %zext_ln50_26, i64 %zext_ln50'
ST_22 : Operation 183 [1/1] (2.64ns)   --->   "%mul_ln50_28 = mul i64 %zext_ln50_26, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 183 'mul' 'mul_ln50_28' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln50_27 = zext i32 %arg2_r_4_loc_load" [d1.cpp:50]   --->   Operation 184 'zext' 'zext_ln50_27' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 185 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_3 = add i64 %mul_ln50_8, i64 %mul_ln50_17" [d1.cpp:50]   --->   Operation 185 'add' 'add_ln50_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 186 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_4 = add i64 %add_ln50_3, i64 %mul_ln50_13" [d1.cpp:50]   --->   Operation 186 'add' 'add_ln50_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 187 [1/1] (1.01ns)   --->   "%add_ln50_5 = add i33 %zext_ln50_17, i33 %zext_ln50_27" [d1.cpp:50]   --->   Operation 187 'add' 'add_ln50_5' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln50_28 = zext i33 %add_ln50_5" [d1.cpp:50]   --->   Operation 188 'zext' 'zext_ln50_28' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 189 '%mul_ln50_29 = mul i64 %zext_ln50_28, i64 %zext_ln50'
ST_22 : Operation 189 [1/1] (2.64ns)   --->   "%mul_ln50_29 = mul i64 %zext_ln50_28, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 189 'mul' 'mul_ln50_29' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln50_29 = zext i32 %arg2_r_3_loc_load" [d1.cpp:50]   --->   Operation 190 'zext' 'zext_ln50_29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_6 = add i64 %mul_ln50_9, i64 %mul_ln50_18" [d1.cpp:50]   --->   Operation 191 'add' 'add_ln50_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 192 [1/1] (1.08ns)   --->   "%add_ln50_7 = add i64 %mul_ln50_14, i64 %mul_ln50_21" [d1.cpp:50]   --->   Operation 192 'add' 'add_ln50_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 193 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_8 = add i64 %add_ln50_7, i64 %add_ln50_6" [d1.cpp:50]   --->   Operation 193 'add' 'add_ln50_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 194 [1/1] (1.01ns)   --->   "%add_ln50_9 = add i33 %zext_ln50_18, i33 %zext_ln50_29" [d1.cpp:50]   --->   Operation 194 'add' 'add_ln50_9' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln50_30 = zext i33 %add_ln50_9" [d1.cpp:50]   --->   Operation 195 'zext' 'zext_ln50_30' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 196 '%mul_ln50_30 = mul i64 %zext_ln50_30, i64 %zext_ln50'
ST_22 : Operation 196 [1/1] (2.64ns)   --->   "%mul_ln50_30 = mul i64 %zext_ln50_30, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 196 'mul' 'mul_ln50_30' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln50_31 = zext i32 %arg2_r_2_loc_load" [d1.cpp:50]   --->   Operation 197 'zext' 'zext_ln50_31' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 198 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_10 = add i64 %mul_ln50_19, i64 %mul_ln50_22" [d1.cpp:50]   --->   Operation 198 'add' 'add_ln50_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 199 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_11 = add i64 %mul_ln50_15, i64 %mul_ln50_24" [d1.cpp:50]   --->   Operation 199 'add' 'add_ln50_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 200 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_12 = add i64 %add_ln50_11, i64 %mul_ln50_10" [d1.cpp:50]   --->   Operation 200 'add' 'add_ln50_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 201 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_13 = add i64 %add_ln50_12, i64 %add_ln50_10" [d1.cpp:50]   --->   Operation 201 'add' 'add_ln50_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 202 [1/1] (1.01ns)   --->   "%add_ln50_14 = add i33 %zext_ln50_19, i33 %zext_ln50_31" [d1.cpp:50]   --->   Operation 202 'add' 'add_ln50_14' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln50_32 = zext i33 %add_ln50_14" [d1.cpp:50]   --->   Operation 203 'zext' 'zext_ln50_32' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 204 '%mul_ln50_31 = mul i64 %zext_ln50_32, i64 %zext_ln50'
ST_22 : Operation 204 [1/1] (2.64ns)   --->   "%mul_ln50_31 = mul i64 %zext_ln50_32, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 204 'mul' 'mul_ln50_31' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln50_33 = zext i32 %arg2_r_1_loc_load" [d1.cpp:50]   --->   Operation 205 'zext' 'zext_ln50_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 206 [1/1] (1.08ns)   --->   "%add_ln50_15 = add i64 %mul_ln50_25, i64 %mul_ln50_20" [d1.cpp:50]   --->   Operation 206 'add' 'add_ln50_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 207 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_16 = add i64 %add_ln50_15, i64 %mul_ln50_23" [d1.cpp:50]   --->   Operation 207 'add' 'add_ln50_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 208 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_17 = add i64 %mul_ln50_16, i64 %mul_ln50_26" [d1.cpp:50]   --->   Operation 208 'add' 'add_ln50_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 209 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_18 = add i64 %add_ln50_17, i64 %mul_ln50_11" [d1.cpp:50]   --->   Operation 209 'add' 'add_ln50_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 210 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln50_19 = add i64 %add_ln50_18, i64 %add_ln50_16" [d1.cpp:50]   --->   Operation 210 'add' 'add_ln50_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 211 [1/1] (1.01ns)   --->   "%add_ln50_20 = add i33 %zext_ln50_20, i33 %zext_ln50_33" [d1.cpp:50]   --->   Operation 211 'add' 'add_ln50_20' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln50_34 = zext i33 %add_ln50_20" [d1.cpp:50]   --->   Operation 212 'zext' 'zext_ln50_34' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.77ns)   --->   Input mux for Operation 213 '%mul_ln50_32 = mul i64 %zext_ln50_34, i64 %zext_ln50'
ST_22 : Operation 213 [1/1] (2.64ns)   --->   "%mul_ln50_32 = mul i64 %zext_ln50_34, i64 %zext_ln50" [d1.cpp:50]   --->   Operation 213 'mul' 'mul_ln50_32' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 214 '%mul_ln78_1 = mul i64 %zext_ln70, i64 %zext_ln50_7'
ST_22 : Operation 214 [1/1] (2.10ns)   --->   "%mul_ln78_1 = mul i64 %zext_ln70, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 214 'mul' 'mul_ln78_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 215 '%mul_ln78_8 = mul i64 %zext_ln50_6, i64 %zext_ln50_8'
ST_22 : Operation 215 [1/1] (2.10ns)   --->   "%mul_ln78_8 = mul i64 %zext_ln50_6, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 215 'mul' 'mul_ln78_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 216 '%mul_ln78_15 = mul i64 %zext_ln50_5, i64 %zext_ln50_9'
ST_22 : Operation 216 [1/1] (2.10ns)   --->   "%mul_ln78_15 = mul i64 %zext_ln50_5, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 216 'mul' 'mul_ln78_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 217 '%mul_ln78_22 = mul i64 %zext_ln50_4, i64 %zext_ln50_10'
ST_22 : Operation 217 [1/1] (2.10ns)   --->   "%mul_ln78_22 = mul i64 %zext_ln50_4, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 217 'mul' 'mul_ln78_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 218 '%mul_ln78_24 = mul i64 %zext_ln50_6, i64 %zext_ln50_10'
ST_22 : Operation 218 [1/1] (2.10ns)   --->   "%mul_ln78_24 = mul i64 %zext_ln50_6, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 218 'mul' 'mul_ln78_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 219 '%mul_ln78_29 = mul i64 %zext_ln50_3, i64 %zext_ln50_11'
ST_22 : Operation 219 [1/1] (2.10ns)   --->   "%mul_ln78_29 = mul i64 %zext_ln50_3, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 219 'mul' 'mul_ln78_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 220 '%mul_ln78_31 = mul i64 %zext_ln50_5, i64 %zext_ln50_11'
ST_22 : Operation 220 [1/1] (2.10ns)   --->   "%mul_ln78_31 = mul i64 %zext_ln50_5, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 220 'mul' 'mul_ln78_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 221 '%mul_ln78_36 = mul i64 %zext_ln50_2, i64 %zext_ln50_12'
ST_22 : Operation 221 [1/1] (2.10ns)   --->   "%mul_ln78_36 = mul i64 %zext_ln50_2, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 221 'mul' 'mul_ln78_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 222 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i32 %arg1_r_8_loc_load" [d1.cpp:70]   --->   Operation 222 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 223 '%mul_ln78_43 = mul i64 %zext_ln50_1, i64 %zext_ln70_1'
ST_22 : Operation 223 [1/1] (2.10ns)   --->   "%mul_ln78_43 = mul i64 %zext_ln50_1, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 223 'mul' 'mul_ln78_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 224 '%mul_ln78_44 = mul i64 %zext_ln50_2, i64 %zext_ln70_1'
ST_22 : Operation 224 [1/1] (2.10ns)   --->   "%mul_ln78_44 = mul i64 %zext_ln50_2, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 224 'mul' 'mul_ln78_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 225 '%mul_ln78_45 = mul i64 %zext_ln50_3, i64 %zext_ln70_1'
ST_22 : Operation 225 [1/1] (2.10ns)   --->   "%mul_ln78_45 = mul i64 %zext_ln50_3, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 225 'mul' 'mul_ln78_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 226 '%mul_ln78_46 = mul i64 %zext_ln50_4, i64 %zext_ln70_1'
ST_22 : Operation 226 [1/1] (2.10ns)   --->   "%mul_ln78_46 = mul i64 %zext_ln50_4, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 226 'mul' 'mul_ln78_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 227 '%mul_ln78_47 = mul i64 %zext_ln50_5, i64 %zext_ln70_1'
ST_22 : Operation 227 [1/1] (2.10ns)   --->   "%mul_ln78_47 = mul i64 %zext_ln50_5, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 227 'mul' 'mul_ln78_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 228 '%mul_ln78_48 = mul i64 %zext_ln50_6, i64 %zext_ln70_1'
ST_22 : Operation 228 [1/1] (2.10ns)   --->   "%mul_ln78_48 = mul i64 %zext_ln50_6, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 228 'mul' 'mul_ln78_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 229 '%mul_ln78_49 = mul i64 %zext_ln70, i64 %zext_ln70_1'
ST_22 : Operation 229 [1/1] (2.10ns)   --->   "%mul_ln78_49 = mul i64 %zext_ln70, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 229 'mul' 'mul_ln78_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i32 %arg1_r_7_loc_load" [d1.cpp:78]   --->   Operation 230 'zext' 'zext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 231 '%mul_ln78_50 = mul i64 %conv36, i64 %zext_ln78_7'
ST_22 : Operation 231 [1/1] (2.10ns)   --->   "%mul_ln78_50 = mul i64 %conv36, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 231 'mul' 'mul_ln78_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 232 [1/1] (1.08ns)   --->   "%add_ln78_7 = add i64 %mul_ln78_36, i64 %mul_ln78_43" [d1.cpp:78]   --->   Operation 232 'add' 'add_ln78_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 233 [1/1] (1.08ns)   --->   "%add_ln78_8 = add i64 %mul_ln78_29, i64 %mul_ln78_22" [d1.cpp:78]   --->   Operation 233 'add' 'add_ln78_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 234 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_10 = add i64 %mul_ln78_8, i64 %mul_ln78_15" [d1.cpp:78]   --->   Operation 234 'add' 'add_ln78_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 235 [1/1] (1.08ns)   --->   "%add_ln78_11 = add i64 %mul_ln78_1, i64 %mul_ln78_50" [d1.cpp:78]   --->   Operation 235 'add' 'add_ln78_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 236 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_12 = add i64 %add_ln78_11, i64 %add_ln78_10" [d1.cpp:78]   --->   Operation 236 'add' 'add_ln78_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 237 '%mul_ln78_51 = mul i64 %zext_ln50_1, i64 %zext_ln78_7'
ST_22 : Operation 237 [1/1] (2.10ns)   --->   "%mul_ln78_51 = mul i64 %zext_ln50_1, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 237 'mul' 'mul_ln78_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 238 [1/1] (1.08ns)   --->   "%add_ln78_19 = add i64 %mul_ln78_44, i64 %mul_ln50" [d1.cpp:78]   --->   Operation 238 'add' 'add_ln78_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 239 '%mul_ln78_52 = mul i64 %zext_ln50_2, i64 %zext_ln78_7'
ST_22 : Operation 239 [1/1] (2.10ns)   --->   "%mul_ln78_52 = mul i64 %zext_ln50_2, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 239 'mul' 'mul_ln78_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 240 [1/1] (1.08ns)   --->   "%add_ln78_26 = add i64 %mul_ln78_24, i64 %mul_ln78_31" [d1.cpp:78]   --->   Operation 240 'add' 'add_ln78_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 241 '%mul_ln78_53 = mul i64 %zext_ln50_3, i64 %zext_ln78_7'
ST_22 : Operation 241 [1/1] (2.10ns)   --->   "%mul_ln78_53 = mul i64 %zext_ln50_3, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 241 'mul' 'mul_ln78_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 242 '%mul_ln78_54 = mul i64 %zext_ln50_4, i64 %zext_ln78_7'
ST_22 : Operation 242 [1/1] (2.10ns)   --->   "%mul_ln78_54 = mul i64 %zext_ln50_4, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 242 'mul' 'mul_ln78_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 243 '%mul_ln78_55 = mul i64 %zext_ln50_5, i64 %zext_ln78_7'
ST_22 : Operation 243 [1/1] (2.10ns)   --->   "%mul_ln78_55 = mul i64 %zext_ln50_5, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 243 'mul' 'mul_ln78_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.31ns)   --->   Input mux for Operation 244 '%mul_ln78_56 = mul i64 %zext_ln50_6, i64 %zext_ln78_7'
ST_22 : Operation 244 [1/1] (2.10ns)   --->   "%mul_ln78_56 = mul i64 %zext_ln50_6, i64 %zext_ln78_7" [d1.cpp:78]   --->   Operation 244 'mul' 'mul_ln78_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 245 [1/1] (0.00ns)   --->   "%trunc_ln124_1 = trunc i64 %add_ln78_26" [d1.cpp:124]   --->   Operation 245 'trunc' 'trunc_ln124_1' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 6.95>
ST_23 : Operation 246 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i32 %arg1_r_6_loc"   --->   Operation 246 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 247 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i32 %arg1_r_5_loc"   --->   Operation 247 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 248 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i32 %arg1_r_4_loc"   --->   Operation 248 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 249 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i32 %arg1_r_3_loc"   --->   Operation 249 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 250 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i32 %arg1_r_2_loc"   --->   Operation 250 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 251 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i32 %arg1_r_1_loc"   --->   Operation 251 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 252 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i32 %arg1_r_loc"   --->   Operation 252 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 253 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i32 %arg2_r_7_loc"   --->   Operation 253 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 254 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i32 %arg2_r_loc"   --->   Operation 254 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln50_13 = zext i32 %arg2_r_15_loc_load" [d1.cpp:50]   --->   Operation 255 'zext' 'zext_ln50_13' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 256 [1/1] (0.00ns)   --->   "%zext_ln50_14 = zext i32 %arg2_r_15_loc_load" [d1.cpp:50]   --->   Operation 256 'zext' 'zext_ln50_14' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 257 [1/1] (0.00ns)   --->   "%zext_ln50_21 = zext i32 %arg1_r_12_loc_load" [d1.cpp:50]   --->   Operation 257 'zext' 'zext_ln50_21' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 258 [1/1] (0.00ns)   --->   "%zext_ln50_22 = zext i32 %arg1_r_9_loc_load" [d1.cpp:50]   --->   Operation 258 'zext' 'zext_ln50_22' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i32 %arg2_r_8_loc_load" [d1.cpp:70]   --->   Operation 259 'zext' 'zext_ln70_3' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 260 '%mul_ln70 = mul i64 %zext_ln70, i64 %zext_ln50'
ST_23 : Operation 260 [1/1] (2.10ns)   --->   "%mul_ln70 = mul i64 %zext_ln70, i64 %zext_ln50" [d1.cpp:70]   --->   Operation 260 'mul' 'mul_ln70' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i32 %arg2_r_7_loc_load" [d1.cpp:78]   --->   Operation 261 'zext' 'zext_ln78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 262 [1/1] (0.00ns)   --->   "%zext_ln78_14 = zext i32 %arg2_r_7_loc_load" [d1.cpp:78]   --->   Operation 262 'zext' 'zext_ln78_14' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 263 [1/1] (1.01ns)   --->   "%add_ln78 = add i33 %zext_ln50_14, i33 %zext_ln78_14" [d1.cpp:78]   --->   Operation 263 'add' 'add_ln78' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln78_15 = zext i33 %add_ln78" [d1.cpp:78]   --->   Operation 264 'zext' 'zext_ln78_15' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 265 [1/1] (0.00ns)   --->   "%zext_ln78_16 = zext i33 %add_ln78" [d1.cpp:78]   --->   Operation 265 'zext' 'zext_ln78_16' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.77ns)   --->   Input mux for Operation 266 '%mul_ln78 = mul i64 %zext_ln78_15, i64 %zext_ln50'
ST_23 : Operation 266 [1/1] (2.64ns)   --->   "%mul_ln78 = mul i64 %zext_ln78_15, i64 %zext_ln50" [d1.cpp:78]   --->   Operation 266 'mul' 'mul_ln78' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 267 [1/1] (1.01ns)   --->   "%add_ln80 = add i34 %zext_ln78_16, i34 %zext_ln50_13" [d1.cpp:80]   --->   Operation 267 'add' 'add_ln80' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i34 %add_ln80" [d1.cpp:80]   --->   Operation 268 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 269 [1/1] (3.41ns)   --->   "%mul_ln80 = mul i64 %zext_ln80, i64 %zext_ln50" [d1.cpp:80]   --->   Operation 269 'mul' 'mul_ln80' <Predicate = true> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 270 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i32 %arg2_r_6_loc_load" [d1.cpp:78]   --->   Operation 270 'zext' 'zext_ln78_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 271 [1/1] (1.08ns)   --->   "%add_ln78_1 = add i64 %mul_ln50_27, i64 %mul_ln50_6" [d1.cpp:78]   --->   Operation 271 'add' 'add_ln78_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 272 [1/1] (0.00ns)   --->   "%zext_ln78_2 = zext i32 %arg2_r_5_loc_load" [d1.cpp:78]   --->   Operation 272 'zext' 'zext_ln78_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 273 [1/1] (1.08ns)   --->   "%add_ln78_2 = add i64 %mul_ln50_28, i64 %add_ln50_1" [d1.cpp:78]   --->   Operation 273 'add' 'add_ln78_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 274 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i32 %arg2_r_4_loc_load" [d1.cpp:78]   --->   Operation 274 'zext' 'zext_ln78_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 275 [1/1] (1.08ns)   --->   "%add_ln78_3 = add i64 %mul_ln50_29, i64 %add_ln50_4" [d1.cpp:78]   --->   Operation 275 'add' 'add_ln78_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln78_4 = zext i32 %arg2_r_3_loc_load" [d1.cpp:78]   --->   Operation 276 'zext' 'zext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 277 [1/1] (1.08ns)   --->   "%add_ln78_4 = add i64 %mul_ln50_30, i64 %add_ln50_8" [d1.cpp:78]   --->   Operation 277 'add' 'add_ln78_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i32 %arg2_r_2_loc_load" [d1.cpp:78]   --->   Operation 278 'zext' 'zext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 279 [1/1] (1.08ns)   --->   "%add_ln78_5 = add i64 %mul_ln50_31, i64 %add_ln50_13" [d1.cpp:78]   --->   Operation 279 'add' 'add_ln78_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln78_6 = zext i32 %arg2_r_1_loc_load" [d1.cpp:78]   --->   Operation 280 'zext' 'zext_ln78_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 281 [1/1] (1.08ns)   --->   "%add_ln78_6 = add i64 %mul_ln50_32, i64 %add_ln50_19" [d1.cpp:78]   --->   Operation 281 'add' 'add_ln78_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 282 '%mul_ln70_1 = mul i64 %zext_ln50_6, i64 %zext_ln50_7'
ST_23 : Operation 282 [1/1] (2.10ns)   --->   "%mul_ln70_1 = mul i64 %zext_ln50_6, i64 %zext_ln50_7" [d1.cpp:70]   --->   Operation 282 'mul' 'mul_ln70_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 283 '%mul_ln78_2 = mul i64 %zext_ln78, i64 %zext_ln50_7'
ST_23 : Operation 283 [1/1] (2.10ns)   --->   "%mul_ln78_2 = mul i64 %zext_ln78, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 283 'mul' 'mul_ln78_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 284 '%mul_ln78_3 = mul i64 %zext_ln78_1, i64 %zext_ln50_7'
ST_23 : Operation 284 [1/1] (2.10ns)   --->   "%mul_ln78_3 = mul i64 %zext_ln78_1, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 284 'mul' 'mul_ln78_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 285 '%mul_ln78_4 = mul i64 %zext_ln78_2, i64 %zext_ln50_7'
ST_23 : Operation 285 [1/1] (2.10ns)   --->   "%mul_ln78_4 = mul i64 %zext_ln78_2, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 285 'mul' 'mul_ln78_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 286 '%mul_ln78_5 = mul i64 %zext_ln78_3, i64 %zext_ln50_7'
ST_23 : Operation 286 [1/1] (2.10ns)   --->   "%mul_ln78_5 = mul i64 %zext_ln78_3, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 286 'mul' 'mul_ln78_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 287 '%mul_ln78_6 = mul i64 %zext_ln78_4, i64 %zext_ln50_7'
ST_23 : Operation 287 [1/1] (2.10ns)   --->   "%mul_ln78_6 = mul i64 %zext_ln78_4, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 287 'mul' 'mul_ln78_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 288 '%mul_ln78_7 = mul i64 %zext_ln78_5, i64 %zext_ln50_7'
ST_23 : Operation 288 [1/1] (2.10ns)   --->   "%mul_ln78_7 = mul i64 %zext_ln78_5, i64 %zext_ln50_7" [d1.cpp:78]   --->   Operation 288 'mul' 'mul_ln78_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 289 '%mul_ln70_2 = mul i64 %zext_ln50_5, i64 %zext_ln50_8'
ST_23 : Operation 289 [1/1] (2.10ns)   --->   "%mul_ln70_2 = mul i64 %zext_ln50_5, i64 %zext_ln50_8" [d1.cpp:70]   --->   Operation 289 'mul' 'mul_ln70_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 290 '%mul_ln78_9 = mul i64 %zext_ln70, i64 %zext_ln50_8'
ST_23 : Operation 290 [1/1] (2.10ns)   --->   "%mul_ln78_9 = mul i64 %zext_ln70, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 290 'mul' 'mul_ln78_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 291 '%mul_ln78_10 = mul i64 %zext_ln78, i64 %zext_ln50_8'
ST_23 : Operation 291 [1/1] (2.10ns)   --->   "%mul_ln78_10 = mul i64 %zext_ln78, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 291 'mul' 'mul_ln78_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 292 '%mul_ln78_11 = mul i64 %zext_ln78_1, i64 %zext_ln50_8'
ST_23 : Operation 292 [1/1] (2.10ns)   --->   "%mul_ln78_11 = mul i64 %zext_ln78_1, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 292 'mul' 'mul_ln78_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 293 '%mul_ln78_12 = mul i64 %zext_ln78_2, i64 %zext_ln50_8'
ST_23 : Operation 293 [1/1] (2.10ns)   --->   "%mul_ln78_12 = mul i64 %zext_ln78_2, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 293 'mul' 'mul_ln78_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 294 '%mul_ln78_13 = mul i64 %zext_ln78_3, i64 %zext_ln50_8'
ST_23 : Operation 294 [1/1] (2.10ns)   --->   "%mul_ln78_13 = mul i64 %zext_ln78_3, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 294 'mul' 'mul_ln78_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 295 '%mul_ln78_14 = mul i64 %zext_ln78_4, i64 %zext_ln50_8'
ST_23 : Operation 295 [1/1] (2.10ns)   --->   "%mul_ln78_14 = mul i64 %zext_ln78_4, i64 %zext_ln50_8" [d1.cpp:78]   --->   Operation 295 'mul' 'mul_ln78_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 296 '%mul_ln70_3 = mul i64 %zext_ln50_4, i64 %zext_ln50_9'
ST_23 : Operation 296 [1/1] (2.10ns)   --->   "%mul_ln70_3 = mul i64 %zext_ln50_4, i64 %zext_ln50_9" [d1.cpp:70]   --->   Operation 296 'mul' 'mul_ln70_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 297 '%mul_ln78_16 = mul i64 %zext_ln50_6, i64 %zext_ln50_9'
ST_23 : Operation 297 [1/1] (2.10ns)   --->   "%mul_ln78_16 = mul i64 %zext_ln50_6, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 297 'mul' 'mul_ln78_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 298 '%mul_ln78_17 = mul i64 %zext_ln70, i64 %zext_ln50_9'
ST_23 : Operation 298 [1/1] (2.10ns)   --->   "%mul_ln78_17 = mul i64 %zext_ln70, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 298 'mul' 'mul_ln78_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 299 '%mul_ln78_18 = mul i64 %zext_ln78, i64 %zext_ln50_9'
ST_23 : Operation 299 [1/1] (2.10ns)   --->   "%mul_ln78_18 = mul i64 %zext_ln78, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 299 'mul' 'mul_ln78_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 300 '%mul_ln78_19 = mul i64 %zext_ln78_1, i64 %zext_ln50_9'
ST_23 : Operation 300 [1/1] (2.10ns)   --->   "%mul_ln78_19 = mul i64 %zext_ln78_1, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 300 'mul' 'mul_ln78_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 301 '%mul_ln78_20 = mul i64 %zext_ln78_2, i64 %zext_ln50_9'
ST_23 : Operation 301 [1/1] (2.10ns)   --->   "%mul_ln78_20 = mul i64 %zext_ln78_2, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 301 'mul' 'mul_ln78_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 302 '%mul_ln78_21 = mul i64 %zext_ln78_3, i64 %zext_ln50_9'
ST_23 : Operation 302 [1/1] (2.10ns)   --->   "%mul_ln78_21 = mul i64 %zext_ln78_3, i64 %zext_ln50_9" [d1.cpp:78]   --->   Operation 302 'mul' 'mul_ln78_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 303 '%mul_ln70_4 = mul i64 %zext_ln50_3, i64 %zext_ln50_10'
ST_23 : Operation 303 [1/1] (2.10ns)   --->   "%mul_ln70_4 = mul i64 %zext_ln50_3, i64 %zext_ln50_10" [d1.cpp:70]   --->   Operation 303 'mul' 'mul_ln70_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 304 '%mul_ln78_23 = mul i64 %zext_ln50_5, i64 %zext_ln50_10'
ST_23 : Operation 304 [1/1] (2.10ns)   --->   "%mul_ln78_23 = mul i64 %zext_ln50_5, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 304 'mul' 'mul_ln78_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 305 '%mul_ln78_25 = mul i64 %zext_ln70, i64 %zext_ln50_10'
ST_23 : Operation 305 [1/1] (2.10ns)   --->   "%mul_ln78_25 = mul i64 %zext_ln70, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 305 'mul' 'mul_ln78_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 306 '%mul_ln78_26 = mul i64 %zext_ln78, i64 %zext_ln50_10'
ST_23 : Operation 306 [1/1] (2.10ns)   --->   "%mul_ln78_26 = mul i64 %zext_ln78, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 306 'mul' 'mul_ln78_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 307 '%mul_ln78_27 = mul i64 %zext_ln78_1, i64 %zext_ln50_10'
ST_23 : Operation 307 [1/1] (2.10ns)   --->   "%mul_ln78_27 = mul i64 %zext_ln78_1, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 307 'mul' 'mul_ln78_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 308 '%mul_ln78_28 = mul i64 %zext_ln78_2, i64 %zext_ln50_10'
ST_23 : Operation 308 [1/1] (2.10ns)   --->   "%mul_ln78_28 = mul i64 %zext_ln78_2, i64 %zext_ln50_10" [d1.cpp:78]   --->   Operation 308 'mul' 'mul_ln78_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 309 '%mul_ln78_30 = mul i64 %zext_ln50_4, i64 %zext_ln50_11'
ST_23 : Operation 309 [1/1] (2.10ns)   --->   "%mul_ln78_30 = mul i64 %zext_ln50_4, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 309 'mul' 'mul_ln78_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 310 '%mul_ln78_32 = mul i64 %zext_ln50_6, i64 %zext_ln50_11'
ST_23 : Operation 310 [1/1] (2.10ns)   --->   "%mul_ln78_32 = mul i64 %zext_ln50_6, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 310 'mul' 'mul_ln78_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 311 '%mul_ln78_33 = mul i64 %zext_ln70, i64 %zext_ln50_11'
ST_23 : Operation 311 [1/1] (2.10ns)   --->   "%mul_ln78_33 = mul i64 %zext_ln70, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 311 'mul' 'mul_ln78_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 312 '%mul_ln78_34 = mul i64 %zext_ln78, i64 %zext_ln50_11'
ST_23 : Operation 312 [1/1] (2.10ns)   --->   "%mul_ln78_34 = mul i64 %zext_ln78, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 312 'mul' 'mul_ln78_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 313 '%mul_ln78_35 = mul i64 %zext_ln78_1, i64 %zext_ln50_11'
ST_23 : Operation 313 [1/1] (2.10ns)   --->   "%mul_ln78_35 = mul i64 %zext_ln78_1, i64 %zext_ln50_11" [d1.cpp:78]   --->   Operation 313 'mul' 'mul_ln78_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 314 '%mul_ln78_37 = mul i64 %zext_ln50_3, i64 %zext_ln50_12'
ST_23 : Operation 314 [1/1] (2.10ns)   --->   "%mul_ln78_37 = mul i64 %zext_ln50_3, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 314 'mul' 'mul_ln78_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 315 '%mul_ln78_38 = mul i64 %zext_ln50_4, i64 %zext_ln50_12'
ST_23 : Operation 315 [1/1] (2.10ns)   --->   "%mul_ln78_38 = mul i64 %zext_ln50_4, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 315 'mul' 'mul_ln78_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 316 '%mul_ln78_39 = mul i64 %zext_ln50_5, i64 %zext_ln50_12'
ST_23 : Operation 316 [1/1] (2.10ns)   --->   "%mul_ln78_39 = mul i64 %zext_ln50_5, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 316 'mul' 'mul_ln78_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 317 '%mul_ln78_40 = mul i64 %zext_ln50_6, i64 %zext_ln50_12'
ST_23 : Operation 317 [1/1] (2.10ns)   --->   "%mul_ln78_40 = mul i64 %zext_ln50_6, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 317 'mul' 'mul_ln78_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 318 '%mul_ln78_41 = mul i64 %zext_ln70, i64 %zext_ln50_12'
ST_23 : Operation 318 [1/1] (2.10ns)   --->   "%mul_ln78_41 = mul i64 %zext_ln70, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 318 'mul' 'mul_ln78_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 319 '%mul_ln78_42 = mul i64 %zext_ln78, i64 %zext_ln50_12'
ST_23 : Operation 319 [1/1] (2.10ns)   --->   "%mul_ln78_42 = mul i64 %zext_ln78, i64 %zext_ln50_12" [d1.cpp:78]   --->   Operation 319 'mul' 'mul_ln78_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln78_17 = zext i32 %arg1_r_8_loc_load" [d1.cpp:78]   --->   Operation 320 'zext' 'zext_ln78_17' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 321 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_9 = add i64 %add_ln78_8, i64 %add_ln78_7" [d1.cpp:78]   --->   Operation 321 'add' 'add_ln78_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 322 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_13 = add i64 %add_ln78_12, i64 %add_ln78_9" [d1.cpp:78]   --->   Operation 322 'add' 'add_ln78_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 323 [1/1] (1.08ns)   --->   "%arr = add i64 %mul_ln80, i64 %add_ln78_13" [d1.cpp:78]   --->   Operation 323 'add' 'arr' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 324 [1/1] (1.08ns)   --->   "%add_ln78_15 = add i64 %mul_ln78_9, i64 %mul_ln78_2" [d1.cpp:78]   --->   Operation 324 'add' 'add_ln78_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 325 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_16 = add i64 %mul_ln78_23, i64 %mul_ln78_30" [d1.cpp:78]   --->   Operation 325 'add' 'add_ln78_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 326 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_17 = add i64 %add_ln78_16, i64 %mul_ln78_16" [d1.cpp:78]   --->   Operation 326 'add' 'add_ln78_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 327 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_18 = add i64 %add_ln78_17, i64 %add_ln78_15" [d1.cpp:78]   --->   Operation 327 'add' 'add_ln78_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 328 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_20 = add i64 %add_ln78_19, i64 %mul_ln78_37" [d1.cpp:78]   --->   Operation 328 'add' 'add_ln78_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 329 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_21 = add i64 %mul_ln50_6, i64 %add_ln78_1" [d1.cpp:78]   --->   Operation 329 'add' 'add_ln78_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 330 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_22 = add i64 %add_ln78_21, i64 %mul_ln78_51" [d1.cpp:78]   --->   Operation 330 'add' 'add_ln78_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 331 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_23 = add i64 %add_ln78_22, i64 %add_ln78_20" [d1.cpp:78]   --->   Operation 331 'add' 'add_ln78_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 332 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_1 = add i64 %add_ln78_23, i64 %add_ln78_18" [d1.cpp:78]   --->   Operation 332 'add' 'arr_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 333 [1/1] (1.08ns)   --->   "%add_ln78_25 = add i64 %mul_ln78_10, i64 %mul_ln78_3" [d1.cpp:78]   --->   Operation 333 'add' 'add_ln78_25' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 334 [1/1] (1.08ns)   --->   "%add_ln78_27 = add i64 %add_ln78_26, i64 %mul_ln78_17" [d1.cpp:78]   --->   Operation 334 'add' 'add_ln78_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 335 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_28 = add i64 %add_ln78_27, i64 %add_ln78_25" [d1.cpp:78]   --->   Operation 335 'add' 'add_ln78_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 336 [1/1] (1.08ns)   --->   "%add_ln78_29 = add i64 %mul_ln78_45, i64 %mul_ln50_1" [d1.cpp:78]   --->   Operation 336 'add' 'add_ln78_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 337 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_30 = add i64 %add_ln78_29, i64 %mul_ln78_38" [d1.cpp:78]   --->   Operation 337 'add' 'add_ln78_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 338 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_31 = add i64 %add_ln50_1, i64 %add_ln78_2" [d1.cpp:78]   --->   Operation 338 'add' 'add_ln78_31' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 339 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_32 = add i64 %add_ln78_31, i64 %mul_ln78_52" [d1.cpp:78]   --->   Operation 339 'add' 'add_ln78_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 340 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_33 = add i64 %add_ln78_32, i64 %add_ln78_30" [d1.cpp:78]   --->   Operation 340 'add' 'add_ln78_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 341 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_2 = add i64 %add_ln78_33, i64 %add_ln78_28" [d1.cpp:78]   --->   Operation 341 'add' 'arr_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 342 [1/1] (1.08ns)   --->   "%add_ln78_35 = add i64 %mul_ln78_11, i64 %mul_ln78_4" [d1.cpp:78]   --->   Operation 342 'add' 'add_ln78_35' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_36 = add i64 %mul_ln78_25, i64 %mul_ln78_32" [d1.cpp:78]   --->   Operation 343 'add' 'add_ln78_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 344 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_37 = add i64 %add_ln78_36, i64 %mul_ln78_18" [d1.cpp:78]   --->   Operation 344 'add' 'add_ln78_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 345 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_38 = add i64 %add_ln78_37, i64 %add_ln78_35" [d1.cpp:78]   --->   Operation 345 'add' 'add_ln78_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 346 [1/1] (1.08ns)   --->   "%add_ln78_39 = add i64 %mul_ln78_46, i64 %mul_ln50_2" [d1.cpp:78]   --->   Operation 346 'add' 'add_ln78_39' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 347 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_40 = add i64 %add_ln78_39, i64 %mul_ln78_39" [d1.cpp:78]   --->   Operation 347 'add' 'add_ln78_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 348 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_41 = add i64 %add_ln50_4, i64 %add_ln78_3" [d1.cpp:78]   --->   Operation 348 'add' 'add_ln78_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 349 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_42 = add i64 %add_ln78_41, i64 %mul_ln78_53" [d1.cpp:78]   --->   Operation 349 'add' 'add_ln78_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 350 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_43 = add i64 %add_ln78_42, i64 %add_ln78_40" [d1.cpp:78]   --->   Operation 350 'add' 'add_ln78_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 351 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_3 = add i64 %add_ln78_43, i64 %add_ln78_38" [d1.cpp:78]   --->   Operation 351 'add' 'arr_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 352 [1/1] (1.08ns)   --->   "%add_ln78_45 = add i64 %mul_ln78_12, i64 %mul_ln78_5" [d1.cpp:78]   --->   Operation 352 'add' 'add_ln78_45' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 353 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_46 = add i64 %mul_ln78_26, i64 %mul_ln78_33" [d1.cpp:78]   --->   Operation 353 'add' 'add_ln78_46' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 354 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_47 = add i64 %add_ln78_46, i64 %mul_ln78_19" [d1.cpp:78]   --->   Operation 354 'add' 'add_ln78_47' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 355 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_48 = add i64 %add_ln78_47, i64 %add_ln78_45" [d1.cpp:78]   --->   Operation 355 'add' 'add_ln78_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 356 [1/1] (1.08ns)   --->   "%add_ln78_49 = add i64 %mul_ln78_47, i64 %mul_ln50_3" [d1.cpp:78]   --->   Operation 356 'add' 'add_ln78_49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 357 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_50 = add i64 %add_ln78_49, i64 %mul_ln78_40" [d1.cpp:78]   --->   Operation 357 'add' 'add_ln78_50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 358 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_51 = add i64 %add_ln50_8, i64 %add_ln78_4" [d1.cpp:78]   --->   Operation 358 'add' 'add_ln78_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 359 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_52 = add i64 %add_ln78_51, i64 %mul_ln78_54" [d1.cpp:78]   --->   Operation 359 'add' 'add_ln78_52' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 360 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_53 = add i64 %add_ln78_52, i64 %add_ln78_50" [d1.cpp:78]   --->   Operation 360 'add' 'add_ln78_53' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 361 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_4 = add i64 %add_ln78_53, i64 %add_ln78_48" [d1.cpp:78]   --->   Operation 361 'add' 'arr_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 362 [1/1] (1.08ns)   --->   "%add_ln78_55 = add i64 %mul_ln78_13, i64 %mul_ln78_6" [d1.cpp:78]   --->   Operation 362 'add' 'add_ln78_55' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 363 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_56 = add i64 %mul_ln78_27, i64 %mul_ln78_34" [d1.cpp:78]   --->   Operation 363 'add' 'add_ln78_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 364 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_57 = add i64 %add_ln78_56, i64 %mul_ln78_20" [d1.cpp:78]   --->   Operation 364 'add' 'add_ln78_57' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 365 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_58 = add i64 %add_ln78_57, i64 %add_ln78_55" [d1.cpp:78]   --->   Operation 365 'add' 'add_ln78_58' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 366 [1/1] (1.08ns)   --->   "%add_ln78_59 = add i64 %mul_ln78_48, i64 %mul_ln50_4" [d1.cpp:78]   --->   Operation 366 'add' 'add_ln78_59' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_60 = add i64 %add_ln78_59, i64 %mul_ln78_41" [d1.cpp:78]   --->   Operation 367 'add' 'add_ln78_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 368 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_61 = add i64 %add_ln50_13, i64 %add_ln78_5" [d1.cpp:78]   --->   Operation 368 'add' 'add_ln78_61' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 369 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_62 = add i64 %add_ln78_61, i64 %mul_ln78_55" [d1.cpp:78]   --->   Operation 369 'add' 'add_ln78_62' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 370 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_63 = add i64 %add_ln78_62, i64 %add_ln78_60" [d1.cpp:78]   --->   Operation 370 'add' 'add_ln78_63' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 371 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_5 = add i64 %add_ln78_63, i64 %add_ln78_58" [d1.cpp:78]   --->   Operation 371 'add' 'arr_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 372 [1/1] (1.08ns)   --->   "%add_ln78_65 = add i64 %mul_ln78_14, i64 %mul_ln78_7" [d1.cpp:78]   --->   Operation 372 'add' 'add_ln78_65' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 373 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_66 = add i64 %mul_ln78_28, i64 %mul_ln78_35" [d1.cpp:78]   --->   Operation 373 'add' 'add_ln78_66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 374 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_67 = add i64 %add_ln78_66, i64 %mul_ln78_21" [d1.cpp:78]   --->   Operation 374 'add' 'add_ln78_67' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 375 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_68 = add i64 %add_ln78_67, i64 %add_ln78_65" [d1.cpp:78]   --->   Operation 375 'add' 'add_ln78_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 376 [1/1] (1.08ns)   --->   "%add_ln78_69 = add i64 %mul_ln78_49, i64 %mul_ln50_5" [d1.cpp:78]   --->   Operation 376 'add' 'add_ln78_69' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 377 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_70 = add i64 %add_ln78_69, i64 %mul_ln78_42" [d1.cpp:78]   --->   Operation 377 'add' 'add_ln78_70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 378 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_71 = add i64 %add_ln50_19, i64 %add_ln78_6" [d1.cpp:78]   --->   Operation 378 'add' 'add_ln78_71' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 379 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_72 = add i64 %add_ln78_71, i64 %mul_ln78_56" [d1.cpp:78]   --->   Operation 379 'add' 'add_ln78_72' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 380 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_73 = add i64 %add_ln78_72, i64 %add_ln78_70" [d1.cpp:78]   --->   Operation 380 'add' 'add_ln78_73' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 381 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_6 = add i64 %add_ln78_73, i64 %add_ln78_68" [d1.cpp:78]   --->   Operation 381 'add' 'arr_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 382 [1/1] (0.00ns)   --->   "%zext_ln78_8 = zext i32 %arg1_r_6_loc_load" [d1.cpp:78]   --->   Operation 382 'zext' 'zext_ln78_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln78_9 = zext i32 %arg1_r_4_loc_load" [d1.cpp:78]   --->   Operation 383 'zext' 'zext_ln78_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 384 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i32 %arg1_r_4_loc_load" [d1.cpp:80]   --->   Operation 384 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 385 '%mul_ln80_1 = mul i64 %conv36, i64 %zext_ln78_9'
ST_23 : Operation 385 [1/1] (2.10ns)   --->   "%mul_ln80_1 = mul i64 %conv36, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 385 'mul' 'mul_ln80_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 386 [2/2] (0.42ns)   --->   "%call_ln78 = call void @test_Pipeline_VITIS_LOOP_88_9, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_10_loc_load, i64 %add280_141720_loc, i64 %add256_51715_loc, i64 %add256_41712_loc, i64 %add256_31709_loc, i64 %add256_21706_loc, i64 %add256_11703_loc, i64 %add2561700_loc" [d1.cpp:78]   --->   Operation 386 'call' 'call_ln78' <Predicate = true> <Delay = 0.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 387 '%mul_ln70_5 = mul i64 %zext_ln50_2, i64 %zext_ln50_11'
ST_23 : Operation 387 [1/1] (2.10ns)   --->   "%mul_ln70_5 = mul i64 %zext_ln50_2, i64 %zext_ln50_11" [d1.cpp:70]   --->   Operation 387 'mul' 'mul_ln70_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 388 [1/1] (0.00ns)   --->   "%zext_ln78_10 = zext i32 %arg1_r_5_loc_load" [d1.cpp:78]   --->   Operation 388 'zext' 'zext_ln78_10' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 389 [1/1] (0.00ns)   --->   "%zext_ln78_11 = zext i32 %arg1_r_2_loc_load" [d1.cpp:78]   --->   Operation 389 'zext' 'zext_ln78_11' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 390 '%mul_ln70_6 = mul i64 %zext_ln50_1, i64 %zext_ln50_12'
ST_23 : Operation 390 [1/1] (2.10ns)   --->   "%mul_ln70_6 = mul i64 %zext_ln50_1, i64 %zext_ln50_12" [d1.cpp:70]   --->   Operation 390 'mul' 'mul_ln70_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 391 '%mul_ln70_7 = mul i64 %conv36, i64 %zext_ln70_1'
ST_23 : Operation 391 [1/1] (2.10ns)   --->   "%mul_ln70_7 = mul i64 %conv36, i64 %zext_ln70_1" [d1.cpp:70]   --->   Operation 391 'mul' 'mul_ln70_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 392 '%mul_ln80_2 = mul i64 %zext_ln50_2, i64 %zext_ln78_8'
ST_23 : Operation 392 [1/1] (2.10ns)   --->   "%mul_ln80_2 = mul i64 %zext_ln50_2, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 392 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 393 '%mul_ln80_3 = mul i64 %zext_ln50_1, i64 %zext_ln78_10'
ST_23 : Operation 393 [1/1] (2.10ns)   --->   "%mul_ln80_3 = mul i64 %zext_ln50_1, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 393 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 394 [1/1] (0.00ns)   --->   "%zext_ln78_12 = zext i32 %arg1_r_3_loc_load" [d1.cpp:78]   --->   Operation 394 'zext' 'zext_ln78_12' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 395 '%mul_ln80_4 = mul i64 %conv36, i64 %zext_ln78_11'
ST_23 : Operation 395 [1/1] (2.10ns)   --->   "%mul_ln80_4 = mul i64 %conv36, i64 %zext_ln78_11" [d1.cpp:80]   --->   Operation 395 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 396 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i32 %arg2_r_loc_load" [d1.cpp:70]   --->   Operation 396 'zext' 'zext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 397 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i32 %arg2_r_loc_load" [d1.cpp:80]   --->   Operation 397 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 398 '%mul_ln80_5 = mul i64 %conv36, i64 %zext_ln78_8'
ST_23 : Operation 398 [1/1] (2.10ns)   --->   "%mul_ln80_5 = mul i64 %conv36, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 398 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 399 '%mul_ln80_6 = mul i64 %zext_ln50_4, i64 %zext_ln78_8'
ST_23 : Operation 399 [1/1] (2.10ns)   --->   "%mul_ln80_6 = mul i64 %zext_ln50_4, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 399 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 400 '%mul_ln80_7 = mul i64 %zext_ln50_3, i64 %zext_ln78_10'
ST_23 : Operation 400 [1/1] (2.10ns)   --->   "%mul_ln80_7 = mul i64 %zext_ln50_3, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 400 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 401 '%mul_ln80_8 = mul i64 %zext_ln50_2, i64 %zext_ln78_9'
ST_23 : Operation 401 [1/1] (2.10ns)   --->   "%mul_ln80_8 = mul i64 %zext_ln50_2, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 401 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 402 '%mul_ln80_9 = mul i64 %zext_ln50_1, i64 %zext_ln78_12'
ST_23 : Operation 402 [1/1] (2.10ns)   --->   "%mul_ln80_9 = mul i64 %zext_ln50_1, i64 %zext_ln78_12" [d1.cpp:80]   --->   Operation 402 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 403 [1/1] (0.00ns)   --->   "%zext_ln78_13 = zext i32 %arg1_r_1_loc_load" [d1.cpp:78]   --->   Operation 403 'zext' 'zext_ln78_13' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln70_4 = zext i32 %arg1_r_1_loc_load" [d1.cpp:70]   --->   Operation 404 'zext' 'zext_ln70_4' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 405 '%mul_ln70_8 = mul i64 %zext_ln78_6, i64 %zext_ln50_7'
ST_23 : Operation 405 [1/1] (2.10ns)   --->   "%mul_ln70_8 = mul i64 %zext_ln78_6, i64 %zext_ln50_7" [d1.cpp:70]   --->   Operation 405 'mul' 'mul_ln70_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 406 '%mul_ln70_9 = mul i64 %zext_ln78_5, i64 %zext_ln50_8'
ST_23 : Operation 406 [1/1] (2.10ns)   --->   "%mul_ln70_9 = mul i64 %zext_ln78_5, i64 %zext_ln50_8" [d1.cpp:70]   --->   Operation 406 'mul' 'mul_ln70_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 407 '%mul_ln70_10 = mul i64 %zext_ln78_4, i64 %zext_ln50_9'
ST_23 : Operation 407 [1/1] (2.10ns)   --->   "%mul_ln70_10 = mul i64 %zext_ln78_4, i64 %zext_ln50_9" [d1.cpp:70]   --->   Operation 407 'mul' 'mul_ln70_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 408 '%mul_ln70_11 = mul i64 %zext_ln78_3, i64 %zext_ln50_10'
ST_23 : Operation 408 [1/1] (2.10ns)   --->   "%mul_ln70_11 = mul i64 %zext_ln78_3, i64 %zext_ln50_10" [d1.cpp:70]   --->   Operation 408 'mul' 'mul_ln70_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 409 '%mul_ln70_12 = mul i64 %zext_ln78_2, i64 %zext_ln50_11'
ST_23 : Operation 409 [1/1] (2.10ns)   --->   "%mul_ln70_12 = mul i64 %zext_ln78_2, i64 %zext_ln50_11" [d1.cpp:70]   --->   Operation 409 'mul' 'mul_ln70_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 410 '%mul_ln70_13 = mul i64 %zext_ln78_1, i64 %zext_ln50_12'
ST_23 : Operation 410 [1/1] (2.10ns)   --->   "%mul_ln70_13 = mul i64 %zext_ln78_1, i64 %zext_ln50_12" [d1.cpp:70]   --->   Operation 410 'mul' 'mul_ln70_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 411 '%mul_ln70_14 = mul i64 %zext_ln78, i64 %zext_ln70_1'
ST_23 : Operation 411 [1/1] (2.10ns)   --->   "%mul_ln70_14 = mul i64 %zext_ln78, i64 %zext_ln70_1" [d1.cpp:70]   --->   Operation 411 'mul' 'mul_ln70_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 412 '%mul_ln80_10 = mul i64 %zext_ln50_1, i64 %zext_ln78_8'
ST_23 : Operation 412 [1/1] (2.10ns)   --->   "%mul_ln80_10 = mul i64 %zext_ln50_1, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 412 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 413 '%mul_ln80_11 = mul i64 %zext_ln50_3, i64 %zext_ln78_8'
ST_23 : Operation 413 [1/1] (2.10ns)   --->   "%mul_ln80_11 = mul i64 %zext_ln50_3, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 413 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 414 '%mul_ln80_12 = mul i64 %zext_ln50_5, i64 %zext_ln78_8'
ST_23 : Operation 414 [1/1] (2.10ns)   --->   "%mul_ln80_12 = mul i64 %zext_ln50_5, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 414 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 415 '%mul_ln80_13 = mul i64 %conv36, i64 %zext_ln78_10'
ST_23 : Operation 415 [1/1] (2.10ns)   --->   "%mul_ln80_13 = mul i64 %conv36, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 415 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 416 '%mul_ln80_14 = mul i64 %zext_ln50_2, i64 %zext_ln78_10'
ST_23 : Operation 416 [1/1] (2.10ns)   --->   "%mul_ln80_14 = mul i64 %zext_ln50_2, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 416 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 417 '%mul_ln80_15 = mul i64 %zext_ln50_4, i64 %zext_ln78_10'
ST_23 : Operation 417 [1/1] (2.10ns)   --->   "%mul_ln80_15 = mul i64 %zext_ln50_4, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 417 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 418 '%mul_ln80_16 = mul i64 %zext_ln50_1, i64 %zext_ln78_9'
ST_23 : Operation 418 [1/1] (2.10ns)   --->   "%mul_ln80_16 = mul i64 %zext_ln50_1, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 418 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 419 '%mul_ln80_17 = mul i64 %zext_ln50_3, i64 %zext_ln78_9'
ST_23 : Operation 419 [1/1] (2.10ns)   --->   "%mul_ln80_17 = mul i64 %zext_ln50_3, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 419 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 420 '%mul_ln80_18 = mul i64 %conv36, i64 %zext_ln78_12'
ST_23 : Operation 420 [1/1] (2.10ns)   --->   "%mul_ln80_18 = mul i64 %conv36, i64 %zext_ln78_12" [d1.cpp:80]   --->   Operation 420 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 421 '%mul_ln80_19 = mul i64 %zext_ln50_2, i64 %zext_ln78_12'
ST_23 : Operation 421 [1/1] (2.10ns)   --->   "%mul_ln80_19 = mul i64 %zext_ln50_2, i64 %zext_ln78_12" [d1.cpp:80]   --->   Operation 421 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 422 '%mul_ln80_20 = mul i64 %zext_ln50_1, i64 %zext_ln78_11'
ST_23 : Operation 422 [1/1] (2.10ns)   --->   "%mul_ln80_20 = mul i64 %zext_ln50_1, i64 %zext_ln78_11" [d1.cpp:80]   --->   Operation 422 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 423 '%mul_ln80_21 = mul i64 %conv36, i64 %zext_ln78_13'
ST_23 : Operation 423 [1/1] (2.10ns)   --->   "%mul_ln80_21 = mul i64 %conv36, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 423 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 424 [1/1] (1.01ns)   --->   "%add_ln70 = add i33 %zext_ln70_3, i33 %zext_ln80_2" [d1.cpp:70]   --->   Operation 424 'add' 'add_ln70' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 425 [1/1] (0.00ns)   --->   "%zext_ln70_5 = zext i33 %add_ln70" [d1.cpp:70]   --->   Operation 425 'zext' 'zext_ln70_5' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.77ns)   --->   Input mux for Operation 426 '%mul_ln70_15 = mul i64 %zext_ln70_5, i64 %zext_ln50'
ST_23 : Operation 426 [1/1] (2.64ns)   --->   "%mul_ln70_15 = mul i64 %zext_ln70_5, i64 %zext_ln50" [d1.cpp:70]   --->   Operation 426 'mul' 'mul_ln70_15' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 427 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i32 %arg1_r_loc_load" [d1.cpp:114]   --->   Operation 427 'zext' 'zext_ln114' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 428 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i32 %arg1_r_loc_load" [d1.cpp:114]   --->   Operation 428 'zext' 'zext_ln114_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 429 '%mul_ln120 = mul i64 %zext_ln50_2, i64 %zext_ln78_11'
ST_23 : Operation 429 [1/1] (2.10ns)   --->   "%mul_ln120 = mul i64 %zext_ln50_2, i64 %zext_ln78_11" [d1.cpp:120]   --->   Operation 429 'mul' 'mul_ln120' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 430 '%mul_ln120_1 = mul i64 %zext_ln50_3, i64 %zext_ln78_12'
ST_23 : Operation 430 [1/1] (2.10ns)   --->   "%mul_ln120_1 = mul i64 %zext_ln50_3, i64 %zext_ln78_12" [d1.cpp:120]   --->   Operation 430 'mul' 'mul_ln120_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 431 '%mul_ln120_2 = mul i64 %zext_ln70, i64 %zext_ln78_7'
ST_23 : Operation 431 [1/1] (2.10ns)   --->   "%mul_ln120_2 = mul i64 %zext_ln70, i64 %zext_ln78_7" [d1.cpp:120]   --->   Operation 431 'mul' 'mul_ln120_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 432 '%mul_ln120_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_8'
ST_23 : Operation 432 [1/1] (2.10ns)   --->   "%mul_ln120_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_8" [d1.cpp:120]   --->   Operation 432 'mul' 'mul_ln120_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 433 '%mul_ln120_4 = mul i64 %zext_ln50_5, i64 %zext_ln78_10'
ST_23 : Operation 433 [1/1] (2.10ns)   --->   "%mul_ln120_4 = mul i64 %zext_ln50_5, i64 %zext_ln78_10" [d1.cpp:120]   --->   Operation 433 'mul' 'mul_ln120_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 434 [1/1] (1.01ns)   --->   "%add_ln70_1 = add i33 %zext_ln78_17, i33 %zext_ln114_1" [d1.cpp:70]   --->   Operation 434 'add' 'add_ln70_1' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 435 [1/1] (0.00ns)   --->   "%zext_ln70_6 = zext i33 %add_ln70_1" [d1.cpp:70]   --->   Operation 435 'zext' 'zext_ln70_6' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.77ns)   --->   Input mux for Operation 436 '%mul_ln70_16 = mul i64 %zext_ln70_6, i64 %conv36'
ST_23 : Operation 436 [1/1] (2.64ns)   --->   "%mul_ln70_16 = mul i64 %zext_ln70_6, i64 %conv36" [d1.cpp:70]   --->   Operation 436 'mul' 'mul_ln70_16' <Predicate = true> <Delay = 2.64> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 437 [1/1] (1.01ns)   --->   "%add_ln120 = add i33 %zext_ln50_22, i33 %zext_ln70_4" [d1.cpp:120]   --->   Operation 437 'add' 'add_ln120' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 438 [1/1] (0.00ns)   --->   "%zext_ln120 = zext i33 %add_ln120" [d1.cpp:120]   --->   Operation 438 'zext' 'zext_ln120' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.42ns)   --->   Input mux for Operation 439 '%mul_ln120_5 = mul i64 %zext_ln50_1, i64 %zext_ln120'
ST_23 : Operation 439 [1/1] (2.98ns)   --->   "%mul_ln120_5 = mul i64 %zext_ln50_1, i64 %zext_ln120" [d1.cpp:120]   --->   Operation 439 'mul' 'mul_ln120_5' <Predicate = true> <Delay = 2.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 440 [1/1] (1.08ns)   --->   "%add_ln120_1 = add i64 %mul_ln70_4, i64 %mul_ln70_5" [d1.cpp:120]   --->   Operation 440 'add' 'add_ln120_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 441 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_2 = add i64 %add_ln120_1, i64 %mul_ln120" [d1.cpp:120]   --->   Operation 441 'add' 'add_ln120_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 442 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_3 = add i64 %add_ln120_2, i64 %mul_ln120_5" [d1.cpp:120]   --->   Operation 442 'add' 'add_ln120_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 443 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_4 = add i64 %mul_ln120_4, i64 %mul_ln120_3" [d1.cpp:120]   --->   Operation 443 'add' 'add_ln120_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 444 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_5 = add i64 %add_ln120_4, i64 %mul_ln120_1" [d1.cpp:120]   --->   Operation 444 'add' 'add_ln120_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 445 [1/1] (1.01ns)   --->   "%add_ln120_6 = add i33 %zext_ln80_1, i33 %zext_ln50_21" [d1.cpp:120]   --->   Operation 445 'add' 'add_ln120_6' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 446 [1/1] (0.00ns)   --->   "%zext_ln120_1 = zext i33 %add_ln120_6" [d1.cpp:120]   --->   Operation 446 'zext' 'zext_ln120_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.42ns)   --->   Input mux for Operation 447 '%mul_ln120_6 = mul i64 %zext_ln50_4, i64 %zext_ln120_1'
ST_23 : Operation 447 [1/1] (2.98ns)   --->   "%mul_ln120_6 = mul i64 %zext_ln50_4, i64 %zext_ln120_1" [d1.cpp:120]   --->   Operation 447 'mul' 'mul_ln120_6' <Predicate = true> <Delay = 2.98> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 448 [1/1] (1.08ns)   --->   "%add_ln120_7 = add i64 %mul_ln120_6, i64 %mul_ln70_2" [d1.cpp:120]   --->   Operation 448 'add' 'add_ln120_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 449 [1/1] (0.00ns)   --->   "%trunc_ln120 = trunc i64 %add_ln120_5" [d1.cpp:120]   --->   Operation 449 'trunc' 'trunc_ln120' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 450 [1/1] (0.00ns)   --->   "%trunc_ln120_1 = trunc i64 %add_ln120_7" [d1.cpp:120]   --->   Operation 450 'trunc' 'trunc_ln120_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 451 [1/1] (1.08ns)   --->   "%add_ln120_8 = add i64 %add_ln120_7, i64 %add_ln120_5" [d1.cpp:120]   --->   Operation 451 'add' 'add_ln120_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 452 [1/1] (0.00ns)   --->   "%trunc_ln120_2 = trunc i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 452 'trunc' 'trunc_ln120_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 453 [1/1] (0.97ns)   --->   "%add_ln120_9 = add i28 %trunc_ln120_1, i28 %trunc_ln120" [d1.cpp:120]   --->   Operation 453 'add' 'add_ln120_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 454 [1/1] (1.08ns)   --->   "%add_ln120_11 = add i64 %mul_ln70_8, i64 %mul_ln70_9" [d1.cpp:120]   --->   Operation 454 'add' 'add_ln120_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 455 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_12 = add i64 %mul_ln70_12, i64 %mul_ln70_11" [d1.cpp:120]   --->   Operation 455 'add' 'add_ln120_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 456 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_13 = add i64 %add_ln120_12, i64 %mul_ln70_10" [d1.cpp:120]   --->   Operation 456 'add' 'add_ln120_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 457 [1/1] (0.00ns)   --->   "%trunc_ln120_3 = trunc i64 %add_ln120_11" [d1.cpp:120]   --->   Operation 457 'trunc' 'trunc_ln120_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 458 [1/1] (0.00ns)   --->   "%trunc_ln120_4 = trunc i64 %add_ln120_13" [d1.cpp:120]   --->   Operation 458 'trunc' 'trunc_ln120_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 459 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_15 = add i64 %mul_ln70_13, i64 %mul_ln120_2" [d1.cpp:120]   --->   Operation 459 'add' 'add_ln120_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 460 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_16 = add i64 %add_ln120_15, i64 %mul_ln70_14" [d1.cpp:120]   --->   Operation 460 'add' 'add_ln120_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 461 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_17 = add i64 %mul_ln70_15, i64 %mul_ln70_16" [d1.cpp:120]   --->   Operation 461 'add' 'add_ln120_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 462 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_18 = add i64 %add_ln120_17, i64 %mul_ln70_1" [d1.cpp:120]   --->   Operation 462 'add' 'add_ln120_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 463 [1/1] (0.00ns)   --->   "%trunc_ln120_5 = trunc i64 %add_ln120_16" [d1.cpp:120]   --->   Operation 463 'trunc' 'trunc_ln120_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 464 [1/1] (0.00ns)   --->   "%trunc_ln120_6 = trunc i64 %add_ln120_18" [d1.cpp:120]   --->   Operation 464 'trunc' 'trunc_ln120_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 465 [1/1] (1.08ns)   --->   "%add_ln120_19 = add i64 %add_ln120_18, i64 %add_ln120_16" [d1.cpp:120]   --->   Operation 465 'add' 'add_ln120_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 466 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_20 = add i28 %trunc_ln120_4, i28 %trunc_ln120_3" [d1.cpp:120]   --->   Operation 466 'add' 'add_ln120_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 467 [1/1] (0.97ns)   --->   "%add_ln120_21 = add i28 %trunc_ln120_6, i28 %trunc_ln120_5" [d1.cpp:120]   --->   Operation 467 'add' 'add_ln120_21' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 468 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln120_24 = add i28 %add_ln120_21, i28 %add_ln120_20" [d1.cpp:120]   --->   Operation 468 'add' 'add_ln120_24' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 469 '%mul_ln121 = mul i64 %zext_ln78, i64 %zext_ln114'
ST_23 : Operation 469 [1/1] (2.10ns)   --->   "%mul_ln121 = mul i64 %zext_ln78, i64 %zext_ln114" [d1.cpp:121]   --->   Operation 469 'mul' 'mul_ln121' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 470 '%mul_ln121_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_13'
ST_23 : Operation 470 [1/1] (2.10ns)   --->   "%mul_ln121_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_13" [d1.cpp:121]   --->   Operation 470 'mul' 'mul_ln121_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 471 '%mul_ln121_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_11'
ST_23 : Operation 471 [1/1] (2.10ns)   --->   "%mul_ln121_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_11" [d1.cpp:121]   --->   Operation 471 'mul' 'mul_ln121_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 472 '%mul_ln121_4 = mul i64 %zext_ln78_4, i64 %zext_ln78_9'
ST_23 : Operation 472 [1/1] (2.10ns)   --->   "%mul_ln121_4 = mul i64 %zext_ln78_4, i64 %zext_ln78_9" [d1.cpp:121]   --->   Operation 472 'mul' 'mul_ln121_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 473 [1/1] (1.08ns)   --->   "%add_ln121 = add i64 %mul_ln70_5, i64 %mul_ln70_6" [d1.cpp:121]   --->   Operation 473 'add' 'add_ln121' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 474 [1/1] (1.08ns)   --->   "%add_ln121_1 = add i64 %mul_ln70_4, i64 %mul_ln70_3" [d1.cpp:121]   --->   Operation 474 'add' 'add_ln121_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 475 [1/1] (0.00ns)   --->   "%trunc_ln121 = trunc i64 %add_ln121" [d1.cpp:121]   --->   Operation 475 'trunc' 'trunc_ln121' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 476 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = trunc i64 %add_ln121_1" [d1.cpp:121]   --->   Operation 476 'trunc' 'trunc_ln121_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 477 [1/1] (1.08ns)   --->   "%add_ln121_2 = add i64 %add_ln121_1, i64 %add_ln121" [d1.cpp:121]   --->   Operation 477 'add' 'add_ln121_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 478 [1/1] (1.08ns)   --->   "%add_ln121_3 = add i64 %mul_ln70, i64 %mul_ln121" [d1.cpp:121]   --->   Operation 478 'add' 'add_ln121_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 479 [1/1] (1.08ns)   --->   "%add_ln121_4 = add i64 %mul_ln70_2, i64 %mul_ln70_1" [d1.cpp:121]   --->   Operation 479 'add' 'add_ln121_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 480 [1/1] (0.00ns)   --->   "%trunc_ln121_2 = trunc i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 480 'trunc' 'trunc_ln121_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 481 [1/1] (0.00ns)   --->   "%trunc_ln121_3 = trunc i64 %add_ln121_4" [d1.cpp:121]   --->   Operation 481 'trunc' 'trunc_ln121_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 482 [1/1] (1.08ns)   --->   "%add_ln121_5 = add i64 %add_ln121_4, i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 482 'add' 'add_ln121_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 483 [1/1] (0.97ns)   --->   "%add_ln121_6 = add i28 %trunc_ln121_1, i28 %trunc_ln121" [d1.cpp:121]   --->   Operation 483 'add' 'add_ln121_6' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 484 [1/1] (0.97ns)   --->   "%add_ln121_7 = add i28 %trunc_ln121_3, i28 %trunc_ln121_2" [d1.cpp:121]   --->   Operation 484 'add' 'add_ln121_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 485 [1/1] (1.08ns)   --->   "%add_ln121_12 = add i64 %mul_ln121_4, i64 %mul_ln121_1" [d1.cpp:121]   --->   Operation 485 'add' 'add_ln121_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 486 [1/1] (1.08ns)   --->   "%add_ln121_13 = add i64 %mul_ln121_2, i64 %mul_ln70_7" [d1.cpp:121]   --->   Operation 486 'add' 'add_ln121_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 487 [1/1] (0.00ns)   --->   "%trunc_ln121_6 = trunc i64 %add_ln121_12" [d1.cpp:121]   --->   Operation 487 'trunc' 'trunc_ln121_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 488 [1/1] (0.00ns)   --->   "%trunc_ln121_7 = trunc i64 %add_ln121_13" [d1.cpp:121]   --->   Operation 488 'trunc' 'trunc_ln121_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 489 [1/1] (1.08ns)   --->   "%add_ln121_14 = add i64 %add_ln121_13, i64 %add_ln121_12" [d1.cpp:121]   --->   Operation 489 'add' 'add_ln121_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 490 [1/1] (0.97ns)   --->   "%add_ln121_16 = add i28 %trunc_ln121_7, i28 %trunc_ln121_6" [d1.cpp:121]   --->   Operation 490 'add' 'add_ln121_16' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 491 '%mul_ln123 = mul i64 %zext_ln78_2, i64 %zext_ln114'
ST_23 : Operation 491 [1/1] (2.10ns)   --->   "%mul_ln123 = mul i64 %zext_ln78_2, i64 %zext_ln114" [d1.cpp:123]   --->   Operation 491 'mul' 'mul_ln123' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 492 '%mul_ln123_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_11'
ST_23 : Operation 492 [1/1] (2.10ns)   --->   "%mul_ln123_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_11" [d1.cpp:123]   --->   Operation 492 'mul' 'mul_ln123_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 493 '%mul_ln124_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_13'
ST_23 : Operation 493 [1/1] (2.10ns)   --->   "%mul_ln124_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_13" [d1.cpp:124]   --->   Operation 493 'mul' 'mul_ln124_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 494 '%mul_ln125 = mul i64 %zext_ln78_4, i64 %zext_ln114'
ST_23 : Operation 494 [1/1] (2.10ns)   --->   "%mul_ln125 = mul i64 %zext_ln78_4, i64 %zext_ln114" [d1.cpp:125]   --->   Operation 494 'mul' 'mul_ln125' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 495 '%mul_ln127 = mul i64 %zext_ln70_2, i64 %zext_ln78_13'
ST_23 : Operation 495 [1/1] (2.10ns)   --->   "%mul_ln127 = mul i64 %zext_ln70_2, i64 %zext_ln78_13" [d1.cpp:127]   --->   Operation 495 'mul' 'mul_ln127' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 496 '%mul_ln127_1 = mul i64 %zext_ln78_6, i64 %zext_ln114'
ST_23 : Operation 496 [1/1] (2.10ns)   --->   "%mul_ln127_1 = mul i64 %zext_ln78_6, i64 %zext_ln114" [d1.cpp:127]   --->   Operation 496 'mul' 'mul_ln127_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 497 '%mul_ln128 = mul i64 %zext_ln70_2, i64 %zext_ln114'
ST_23 : Operation 497 [1/1] (2.10ns)   --->   "%mul_ln128 = mul i64 %zext_ln70_2, i64 %zext_ln114" [d1.cpp:128]   --->   Operation 497 'mul' 'mul_ln128' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 498 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_1 = add i64 %mul_ln80_20, i64 %mul_ln80_17" [d1.cpp:80]   --->   Operation 498 'add' 'add_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 499 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_2 = add i64 %add_ln80_1, i64 %mul_ln80_19" [d1.cpp:80]   --->   Operation 499 'add' 'add_ln80_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 500 [1/1] (1.08ns)   --->   "%add_ln80_3 = add i64 %mul_ln80_15, i64 %mul_ln78_49" [d1.cpp:80]   --->   Operation 500 'add' 'add_ln80_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 501 [1/1] (1.08ns)   --->   "%add_ln80_4 = add i64 %mul_ln80_12, i64 %mul_ln78_56" [d1.cpp:80]   --->   Operation 501 'add' 'add_ln80_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 502 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i64 %add_ln80_3" [d1.cpp:80]   --->   Operation 502 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 503 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i64 %add_ln80_4" [d1.cpp:80]   --->   Operation 503 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 504 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_5 = add i64 %add_ln80_4, i64 %add_ln80_3" [d1.cpp:80]   --->   Operation 504 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 505 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i64 %add_ln80_2" [d1.cpp:80]   --->   Operation 505 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 506 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_6 = add i28 %trunc_ln80_1, i28 %trunc_ln80" [d1.cpp:80]   --->   Operation 506 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 507 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_7 = add i64 %add_ln80_5, i64 %add_ln80_2" [d1.cpp:80]   --->   Operation 507 'add' 'add_ln80_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 508 [1/1] (1.08ns)   --->   "%add_ln80_8 = add i64 %mul_ln128, i64 %mul_ln78_28" [d1.cpp:80]   --->   Operation 508 'add' 'add_ln80_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 509 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i64 %add_ln78_65" [d1.cpp:80]   --->   Operation 509 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 510 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i64 %add_ln80_8" [d1.cpp:80]   --->   Operation 510 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 511 [1/1] (1.08ns)   --->   "%add_ln80_10 = add i64 %mul_ln78_21, i64 %mul_ln78_42" [d1.cpp:80]   --->   Operation 511 'add' 'add_ln80_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 512 [1/1] (1.08ns)   --->   "%add_ln80_11 = add i64 %mul_ln78_35, i64 %mul_ln80_21" [d1.cpp:80]   --->   Operation 512 'add' 'add_ln80_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 513 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i64 %add_ln80_10" [d1.cpp:80]   --->   Operation 513 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 514 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i64 %add_ln80_11" [d1.cpp:80]   --->   Operation 514 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 515 [1/1] (1.08ns)   --->   "%add_ln80_12 = add i64 %add_ln80_11, i64 %add_ln80_10" [d1.cpp:80]   --->   Operation 515 'add' 'add_ln80_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 516 [1/1] (0.97ns)   --->   "%add_ln80_14 = add i28 %trunc_ln80_6, i28 %trunc_ln80_5" [d1.cpp:80]   --->   Operation 516 'add' 'add_ln80_14' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 517 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln80_16 = add i28 %add_ln80_6, i28 %trunc_ln80_2" [d1.cpp:80]   --->   Operation 517 'add' 'add_ln80_16' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 518 [1/1] (0.00ns)   --->   "%trunc_ln128 = trunc i64 %add_ln78_6" [d1.cpp:128]   --->   Operation 518 'trunc' 'trunc_ln128' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 519 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_1 = add i64 %mul_ln80_9, i64 %mul_ln80_7" [d1.cpp:127]   --->   Operation 519 'add' 'add_ln127_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 520 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln127_2 = add i64 %add_ln127_1, i64 %mul_ln80_8" [d1.cpp:127]   --->   Operation 520 'add' 'add_ln127_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 521 [1/1] (1.08ns)   --->   "%add_ln127_3 = add i64 %mul_ln80_6, i64 %mul_ln78_41" [d1.cpp:127]   --->   Operation 521 'add' 'add_ln127_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 522 [1/1] (1.08ns)   --->   "%add_ln127_4 = add i64 %mul_ln78_55, i64 %mul_ln78_48" [d1.cpp:127]   --->   Operation 522 'add' 'add_ln127_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 523 [1/1] (0.00ns)   --->   "%trunc_ln127 = trunc i64 %add_ln127_3" [d1.cpp:127]   --->   Operation 523 'trunc' 'trunc_ln127' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 524 [1/1] (0.00ns)   --->   "%trunc_ln127_1 = trunc i64 %add_ln127_4" [d1.cpp:127]   --->   Operation 524 'trunc' 'trunc_ln127_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 525 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_5 = add i64 %add_ln127_4, i64 %add_ln127_3" [d1.cpp:127]   --->   Operation 525 'add' 'add_ln127_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 526 [1/1] (0.00ns)   --->   "%trunc_ln127_2 = trunc i64 %add_ln127_2" [d1.cpp:127]   --->   Operation 526 'trunc' 'trunc_ln127_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 527 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_6 = add i28 %trunc_ln127_1, i28 %trunc_ln127" [d1.cpp:127]   --->   Operation 527 'add' 'add_ln127_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 528 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln127_7 = add i64 %add_ln127_5, i64 %add_ln127_2" [d1.cpp:127]   --->   Operation 528 'add' 'add_ln127_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 529 [1/1] (1.08ns)   --->   "%add_ln127_8 = add i64 %mul_ln127_1, i64 %mul_ln78_6" [d1.cpp:127]   --->   Operation 529 'add' 'add_ln127_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 530 [1/1] (1.08ns)   --->   "%add_ln127_9 = add i64 %mul_ln127, i64 %mul_ln78_20" [d1.cpp:127]   --->   Operation 530 'add' 'add_ln127_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 531 [1/1] (0.00ns)   --->   "%trunc_ln127_3 = trunc i64 %add_ln127_8" [d1.cpp:127]   --->   Operation 531 'trunc' 'trunc_ln127_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 532 [1/1] (0.00ns)   --->   "%trunc_ln127_4 = trunc i64 %add_ln127_9" [d1.cpp:127]   --->   Operation 532 'trunc' 'trunc_ln127_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 533 [1/1] (1.08ns)   --->   "%add_ln127_11 = add i64 %mul_ln78_13, i64 %mul_ln78_34" [d1.cpp:127]   --->   Operation 533 'add' 'add_ln127_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 534 [1/1] (1.08ns)   --->   "%add_ln127_12 = add i64 %mul_ln78_27, i64 %mul_ln80_4" [d1.cpp:127]   --->   Operation 534 'add' 'add_ln127_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 535 [1/1] (0.00ns)   --->   "%trunc_ln127_5 = trunc i64 %add_ln127_11" [d1.cpp:127]   --->   Operation 535 'trunc' 'trunc_ln127_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 536 [1/1] (0.00ns)   --->   "%trunc_ln127_6 = trunc i64 %add_ln127_12" [d1.cpp:127]   --->   Operation 536 'trunc' 'trunc_ln127_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 537 [1/1] (1.08ns)   --->   "%add_ln127_13 = add i64 %add_ln127_12, i64 %add_ln127_11" [d1.cpp:127]   --->   Operation 537 'add' 'add_ln127_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 538 [1/1] (0.97ns)   --->   "%add_ln127_15 = add i28 %trunc_ln127_6, i28 %trunc_ln127_5" [d1.cpp:127]   --->   Operation 538 'add' 'add_ln127_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 539 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln127_17 = add i28 %add_ln127_6, i28 %trunc_ln127_2" [d1.cpp:127]   --->   Operation 539 'add' 'add_ln127_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 540 [1/1] (0.00ns)   --->   "%trunc_ln127_7 = trunc i64 %add_ln78_5" [d1.cpp:127]   --->   Operation 540 'trunc' 'trunc_ln127_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 541 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126 = add i64 %mul_ln80_16, i64 %mul_ln80_11" [d1.cpp:126]   --->   Operation 541 'add' 'add_ln126' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 542 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_2 = add i64 %add_ln126, i64 %mul_ln80_14" [d1.cpp:126]   --->   Operation 542 'add' 'add_ln126_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 543 [1/1] (1.08ns)   --->   "%add_ln126_3 = add i64 %mul_ln78_54, i64 %mul_ln78_33" [d1.cpp:126]   --->   Operation 543 'add' 'add_ln126_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 544 [1/1] (1.08ns)   --->   "%add_ln126_4 = add i64 %mul_ln78_47, i64 %mul_ln78_40" [d1.cpp:126]   --->   Operation 544 'add' 'add_ln126_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 545 [1/1] (0.00ns)   --->   "%trunc_ln126 = trunc i64 %add_ln126_3" [d1.cpp:126]   --->   Operation 545 'trunc' 'trunc_ln126' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 546 [1/1] (0.00ns)   --->   "%trunc_ln126_1 = trunc i64 %add_ln126_4" [d1.cpp:126]   --->   Operation 546 'trunc' 'trunc_ln126_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 547 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_5 = add i64 %add_ln126_4, i64 %add_ln126_3" [d1.cpp:126]   --->   Operation 547 'add' 'add_ln126_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 548 [1/1] (0.00ns)   --->   "%trunc_ln126_2 = trunc i64 %add_ln126_2" [d1.cpp:126]   --->   Operation 548 'trunc' 'trunc_ln126_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 549 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_6 = add i28 %trunc_ln126_1, i28 %trunc_ln126" [d1.cpp:126]   --->   Operation 549 'add' 'add_ln126_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 550 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_7 = add i64 %add_ln126_5, i64 %add_ln126_2" [d1.cpp:126]   --->   Operation 550 'add' 'add_ln126_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 551 [1/1] (1.08ns)   --->   "%add_ln126_11 = add i64 %mul_ln78_5, i64 %mul_ln78_26" [d1.cpp:126]   --->   Operation 551 'add' 'add_ln126_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 552 [1/1] (1.08ns)   --->   "%add_ln126_12 = add i64 %mul_ln78_19, i64 %mul_ln80_18" [d1.cpp:126]   --->   Operation 552 'add' 'add_ln126_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 553 [1/1] (0.00ns)   --->   "%trunc_ln126_5 = trunc i64 %add_ln126_11" [d1.cpp:126]   --->   Operation 553 'trunc' 'trunc_ln126_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 554 [1/1] (0.00ns)   --->   "%trunc_ln126_6 = trunc i64 %add_ln126_12" [d1.cpp:126]   --->   Operation 554 'trunc' 'trunc_ln126_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 555 [1/1] (1.08ns)   --->   "%add_ln126_13 = add i64 %add_ln126_12, i64 %add_ln126_11" [d1.cpp:126]   --->   Operation 555 'add' 'add_ln126_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 556 [1/1] (0.97ns)   --->   "%add_ln126_15 = add i28 %trunc_ln126_6, i28 %trunc_ln126_5" [d1.cpp:126]   --->   Operation 556 'add' 'add_ln126_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 557 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln126_17 = add i28 %add_ln126_6, i28 %trunc_ln126_2" [d1.cpp:126]   --->   Operation 557 'add' 'add_ln126_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 558 [1/1] (0.00ns)   --->   "%trunc_ln126_7 = trunc i64 %add_ln78_4" [d1.cpp:126]   --->   Operation 558 'trunc' 'trunc_ln126_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 559 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125 = add i64 %mul_ln80_3, i64 %mul_ln78_53" [d1.cpp:125]   --->   Operation 559 'add' 'add_ln125' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 560 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln125_1 = add i64 %add_ln125, i64 %mul_ln80_2" [d1.cpp:125]   --->   Operation 560 'add' 'add_ln125_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 561 [1/1] (1.08ns)   --->   "%add_ln125_3 = add i64 %mul_ln78_46, i64 %mul_ln78_25" [d1.cpp:125]   --->   Operation 561 'add' 'add_ln125_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 562 [1/1] (1.08ns)   --->   "%add_ln125_4 = add i64 %mul_ln78_39, i64 %mul_ln78_32" [d1.cpp:125]   --->   Operation 562 'add' 'add_ln125_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 563 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i64 %add_ln125_3" [d1.cpp:125]   --->   Operation 563 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 564 [1/1] (0.00ns)   --->   "%trunc_ln125_1 = trunc i64 %add_ln125_4" [d1.cpp:125]   --->   Operation 564 'trunc' 'trunc_ln125_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 565 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_5 = add i64 %add_ln125_4, i64 %add_ln125_3" [d1.cpp:125]   --->   Operation 565 'add' 'add_ln125_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 566 [1/1] (0.00ns)   --->   "%trunc_ln125_2 = trunc i64 %add_ln125_1" [d1.cpp:125]   --->   Operation 566 'trunc' 'trunc_ln125_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 567 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_6 = add i28 %trunc_ln125_1, i28 %trunc_ln125" [d1.cpp:125]   --->   Operation 567 'add' 'add_ln125_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 568 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln125_7 = add i64 %add_ln125_5, i64 %add_ln125_1" [d1.cpp:125]   --->   Operation 568 'add' 'add_ln125_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 569 [1/1] (1.08ns)   --->   "%add_ln125_11 = add i64 %mul_ln125, i64 %mul_ln78_18" [d1.cpp:125]   --->   Operation 569 'add' 'add_ln125_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 570 [1/1] (1.08ns)   --->   "%add_ln125_12 = add i64 %mul_ln78_11, i64 %mul_ln80_1" [d1.cpp:125]   --->   Operation 570 'add' 'add_ln125_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 571 [1/1] (0.00ns)   --->   "%trunc_ln125_5 = trunc i64 %add_ln125_11" [d1.cpp:125]   --->   Operation 571 'trunc' 'trunc_ln125_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 572 [1/1] (0.00ns)   --->   "%trunc_ln125_6 = trunc i64 %add_ln125_12" [d1.cpp:125]   --->   Operation 572 'trunc' 'trunc_ln125_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 573 [1/1] (1.08ns)   --->   "%add_ln125_13 = add i64 %add_ln125_12, i64 %add_ln125_11" [d1.cpp:125]   --->   Operation 573 'add' 'add_ln125_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 574 [1/1] (0.97ns)   --->   "%add_ln125_15 = add i28 %trunc_ln125_6, i28 %trunc_ln125_5" [d1.cpp:125]   --->   Operation 574 'add' 'add_ln125_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 575 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln125_17 = add i28 %add_ln125_6, i28 %trunc_ln125_2" [d1.cpp:125]   --->   Operation 575 'add' 'add_ln125_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 576 [1/1] (0.00ns)   --->   "%trunc_ln125_7 = trunc i64 %add_ln78_3" [d1.cpp:125]   --->   Operation 576 'trunc' 'trunc_ln125_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 577 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124 = add i64 %mul_ln80_10, i64 %mul_ln78_45" [d1.cpp:124]   --->   Operation 577 'add' 'add_ln124' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 578 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_1 = add i64 %add_ln124, i64 %mul_ln78_52" [d1.cpp:124]   --->   Operation 578 'add' 'add_ln124_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 579 [1/1] (1.08ns)   --->   "%add_ln124_2 = add i64 %mul_ln78_38, i64 %mul_ln78_17" [d1.cpp:124]   --->   Operation 579 'add' 'add_ln124_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 580 [1/1] (0.00ns)   --->   "%trunc_ln124 = trunc i64 %add_ln124_2" [d1.cpp:124]   --->   Operation 580 'trunc' 'trunc_ln124' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 581 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_4 = add i64 %add_ln78_26, i64 %add_ln124_2" [d1.cpp:124]   --->   Operation 581 'add' 'add_ln124_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 582 [1/1] (0.00ns)   --->   "%trunc_ln124_2 = trunc i64 %add_ln124_1" [d1.cpp:124]   --->   Operation 582 'trunc' 'trunc_ln124_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 583 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_5 = add i28 %trunc_ln124_1, i28 %trunc_ln124" [d1.cpp:124]   --->   Operation 583 'add' 'add_ln124_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 584 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_6 = add i64 %add_ln124_4, i64 %add_ln124_1" [d1.cpp:124]   --->   Operation 584 'add' 'add_ln124_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 585 [1/1] (1.08ns)   --->   "%add_ln124_10 = add i64 %mul_ln124_1, i64 %mul_ln78_10" [d1.cpp:124]   --->   Operation 585 'add' 'add_ln124_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 586 [1/1] (1.08ns)   --->   "%add_ln124_11 = add i64 %mul_ln78_3, i64 %mul_ln80_13" [d1.cpp:124]   --->   Operation 586 'add' 'add_ln124_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 587 [1/1] (0.00ns)   --->   "%trunc_ln124_5 = trunc i64 %add_ln124_10" [d1.cpp:124]   --->   Operation 587 'trunc' 'trunc_ln124_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 588 [1/1] (0.00ns)   --->   "%trunc_ln124_6 = trunc i64 %add_ln124_11" [d1.cpp:124]   --->   Operation 588 'trunc' 'trunc_ln124_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 589 [1/1] (1.08ns)   --->   "%add_ln124_12 = add i64 %add_ln124_11, i64 %add_ln124_10" [d1.cpp:124]   --->   Operation 589 'add' 'add_ln124_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 590 [1/1] (0.97ns)   --->   "%add_ln124_14 = add i28 %trunc_ln124_6, i28 %trunc_ln124_5" [d1.cpp:124]   --->   Operation 590 'add' 'add_ln124_14' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 591 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln124_16 = add i28 %add_ln124_5, i28 %trunc_ln124_2" [d1.cpp:124]   --->   Operation 591 'add' 'add_ln124_16' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 592 [1/1] (0.00ns)   --->   "%trunc_ln124_7 = trunc i64 %add_ln78_2" [d1.cpp:124]   --->   Operation 592 'trunc' 'trunc_ln124_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 593 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123 = add i64 %mul_ln78_51, i64 %mul_ln78_37" [d1.cpp:123]   --->   Operation 593 'add' 'add_ln123' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 594 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_1 = add i64 %add_ln123, i64 %mul_ln78_44" [d1.cpp:123]   --->   Operation 594 'add' 'add_ln123_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 595 [1/1] (1.08ns)   --->   "%add_ln123_2 = add i64 %mul_ln78_30, i64 %mul_ln78_9" [d1.cpp:123]   --->   Operation 595 'add' 'add_ln123_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 596 [1/1] (1.08ns)   --->   "%add_ln123_3 = add i64 %mul_ln78_23, i64 %mul_ln78_16" [d1.cpp:123]   --->   Operation 596 'add' 'add_ln123_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 597 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i64 %add_ln123_2" [d1.cpp:123]   --->   Operation 597 'trunc' 'trunc_ln123' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 598 [1/1] (0.00ns)   --->   "%trunc_ln123_1 = trunc i64 %add_ln123_3" [d1.cpp:123]   --->   Operation 598 'trunc' 'trunc_ln123_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 599 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_5 = add i64 %add_ln123_3, i64 %add_ln123_2" [d1.cpp:123]   --->   Operation 599 'add' 'add_ln123_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 600 [1/1] (0.00ns)   --->   "%trunc_ln123_2 = trunc i64 %add_ln123_1" [d1.cpp:123]   --->   Operation 600 'trunc' 'trunc_ln123_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 601 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_6 = add i28 %trunc_ln123_1, i28 %trunc_ln123" [d1.cpp:123]   --->   Operation 601 'add' 'add_ln123_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 602 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_7 = add i64 %add_ln123_5, i64 %add_ln123_1" [d1.cpp:123]   --->   Operation 602 'add' 'add_ln123_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 603 [1/1] (1.08ns)   --->   "%add_ln123_11 = add i64 %mul_ln123_2, i64 %mul_ln78_2" [d1.cpp:123]   --->   Operation 603 'add' 'add_ln123_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 604 [1/1] (1.08ns)   --->   "%add_ln123_12 = add i64 %mul_ln123, i64 %mul_ln80_5" [d1.cpp:123]   --->   Operation 604 'add' 'add_ln123_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 605 [1/1] (0.00ns)   --->   "%trunc_ln123_5 = trunc i64 %add_ln123_11" [d1.cpp:123]   --->   Operation 605 'trunc' 'trunc_ln123_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 606 [1/1] (0.00ns)   --->   "%trunc_ln123_6 = trunc i64 %add_ln123_12" [d1.cpp:123]   --->   Operation 606 'trunc' 'trunc_ln123_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 607 [1/1] (1.08ns)   --->   "%add_ln123_13 = add i64 %add_ln123_12, i64 %add_ln123_11" [d1.cpp:123]   --->   Operation 607 'add' 'add_ln123_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 608 [1/1] (0.97ns)   --->   "%add_ln123_15 = add i28 %trunc_ln123_6, i28 %trunc_ln123_5" [d1.cpp:123]   --->   Operation 608 'add' 'add_ln123_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 609 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln123_17 = add i28 %add_ln123_6, i28 %trunc_ln123_2" [d1.cpp:123]   --->   Operation 609 'add' 'add_ln123_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 610 [1/1] (0.00ns)   --->   "%trunc_ln123_7 = trunc i64 %add_ln78_1" [d1.cpp:123]   --->   Operation 610 'trunc' 'trunc_ln123_7' <Predicate = true> <Delay = 0.00>

State 24 <SV = 23> <Delay = 7.14>
ST_24 : Operation 611 [1/2] (0.79ns)   --->   "%call_ln78 = call void @test_Pipeline_VITIS_LOOP_88_9, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_10_loc_load, i64 %add280_141720_loc, i64 %add256_51715_loc, i64 %add256_41712_loc, i64 %add256_31709_loc, i64 %add256_21706_loc, i64 %add256_11703_loc, i64 %add2561700_loc" [d1.cpp:78]   --->   Operation 611 'call' 'call_ln78' <Predicate = true> <Delay = 0.79> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 612 '%mul_ln119 = mul i64 %zext_ln78_6, i64 %zext_ln70_1'
ST_24 : Operation 612 [1/1] (2.10ns)   --->   "%mul_ln119 = mul i64 %zext_ln78_6, i64 %zext_ln70_1" [d1.cpp:119]   --->   Operation 612 'mul' 'mul_ln119' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 613 '%mul_ln119_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_7'
ST_24 : Operation 613 [1/1] (2.10ns)   --->   "%mul_ln119_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_7" [d1.cpp:119]   --->   Operation 613 'mul' 'mul_ln119_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 614 [1/1] (1.08ns)   --->   "%add_ln119 = add i64 %mul_ln119_1, i64 %mul_ln119" [d1.cpp:119]   --->   Operation 614 'add' 'add_ln119' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 615 [1/1] (0.00ns)   --->   "%trunc_ln119_1 = trunc i64 %add_ln119" [d1.cpp:119]   --->   Operation 615 'trunc' 'trunc_ln119_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 616 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_10 = add i64 %add_ln120_8, i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 616 'add' 'add_ln120_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 617 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_14 = add i64 %add_ln120_13, i64 %add_ln120_11" [d1.cpp:120]   --->   Operation 617 'add' 'add_ln120_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 618 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_22 = add i64 %add_ln120_19, i64 %add_ln120_14" [d1.cpp:120]   --->   Operation 618 'add' 'add_ln120_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 619 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_23 = add i28 %add_ln120_9, i28 %trunc_ln120_2" [d1.cpp:120]   --->   Operation 619 'add' 'add_ln120_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 620 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_12 = add i64 %add_ln120_22, i64 %add_ln120_10" [d1.cpp:120]   --->   Operation 620 'add' 'arr_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 621 '%mul_ln121_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_12'
ST_24 : Operation 621 [1/1] (2.10ns)   --->   "%mul_ln121_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_12" [d1.cpp:121]   --->   Operation 621 'mul' 'mul_ln121_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 622 '%mul_ln121_5 = mul i64 %zext_ln78_5, i64 %zext_ln78_10'
ST_24 : Operation 622 [1/1] (2.10ns)   --->   "%mul_ln121_5 = mul i64 %zext_ln78_5, i64 %zext_ln78_10" [d1.cpp:121]   --->   Operation 622 'mul' 'mul_ln121_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 623 '%mul_ln121_6 = mul i64 %zext_ln70_2, i64 %zext_ln78_7'
ST_24 : Operation 623 [1/1] (2.10ns)   --->   "%mul_ln121_6 = mul i64 %zext_ln70_2, i64 %zext_ln78_7" [d1.cpp:121]   --->   Operation 623 'mul' 'mul_ln121_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 624 '%mul_ln121_7 = mul i64 %zext_ln78_6, i64 %zext_ln78_8'
ST_24 : Operation 624 [1/1] (2.10ns)   --->   "%mul_ln121_7 = mul i64 %zext_ln78_6, i64 %zext_ln78_8" [d1.cpp:121]   --->   Operation 624 'mul' 'mul_ln121_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 625 [1/1] (1.08ns)   --->   "%add_ln121_9 = add i64 %mul_ln121_7, i64 %mul_ln121_5" [d1.cpp:121]   --->   Operation 625 'add' 'add_ln121_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 626 [1/1] (1.08ns)   --->   "%add_ln121_10 = add i64 %mul_ln121_6, i64 %mul_ln121_3" [d1.cpp:121]   --->   Operation 626 'add' 'add_ln121_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 627 [1/1] (0.00ns)   --->   "%trunc_ln121_4 = trunc i64 %add_ln121_9" [d1.cpp:121]   --->   Operation 627 'trunc' 'trunc_ln121_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 628 [1/1] (0.00ns)   --->   "%trunc_ln121_5 = trunc i64 %add_ln121_10" [d1.cpp:121]   --->   Operation 628 'trunc' 'trunc_ln121_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 629 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_11 = add i64 %add_ln121_10, i64 %add_ln121_9" [d1.cpp:121]   --->   Operation 629 'add' 'add_ln121_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 630 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_15 = add i28 %trunc_ln121_5, i28 %trunc_ln121_4" [d1.cpp:121]   --->   Operation 630 'add' 'add_ln121_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 631 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln121_17 = add i64 %add_ln121_14, i64 %add_ln121_11" [d1.cpp:121]   --->   Operation 631 'add' 'add_ln121_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 632 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_18 = add i28 %add_ln121_7, i28 %add_ln121_6" [d1.cpp:121]   --->   Operation 632 'add' 'add_ln121_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 633 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln121_19 = add i28 %add_ln121_16, i28 %add_ln121_15" [d1.cpp:121]   --->   Operation 633 'add' 'add_ln121_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 634 '%mul_ln122 = mul i64 %zext_ln78_1, i64 %zext_ln114'
ST_24 : Operation 634 [1/1] (2.10ns)   --->   "%mul_ln122 = mul i64 %zext_ln78_1, i64 %zext_ln114" [d1.cpp:122]   --->   Operation 634 'mul' 'mul_ln122' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 635 '%mul_ln122_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_13'
ST_24 : Operation 635 [1/1] (2.10ns)   --->   "%mul_ln122_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_13" [d1.cpp:122]   --->   Operation 635 'mul' 'mul_ln122_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 636 '%mul_ln122_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_11'
ST_24 : Operation 636 [1/1] (2.10ns)   --->   "%mul_ln122_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_11" [d1.cpp:122]   --->   Operation 636 'mul' 'mul_ln122_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 637 '%mul_ln122_3 = mul i64 %zext_ln78_4, i64 %zext_ln78_12'
ST_24 : Operation 637 [1/1] (2.10ns)   --->   "%mul_ln122_3 = mul i64 %zext_ln78_4, i64 %zext_ln78_12" [d1.cpp:122]   --->   Operation 637 'mul' 'mul_ln122_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 638 '%mul_ln122_4 = mul i64 %zext_ln78_5, i64 %zext_ln78_9'
ST_24 : Operation 638 [1/1] (2.10ns)   --->   "%mul_ln122_4 = mul i64 %zext_ln78_5, i64 %zext_ln78_9" [d1.cpp:122]   --->   Operation 638 'mul' 'mul_ln122_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 639 '%mul_ln122_5 = mul i64 %zext_ln78_6, i64 %zext_ln78_10'
ST_24 : Operation 639 [1/1] (2.10ns)   --->   "%mul_ln122_5 = mul i64 %zext_ln78_6, i64 %zext_ln78_10" [d1.cpp:122]   --->   Operation 639 'mul' 'mul_ln122_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 640 '%mul_ln122_6 = mul i64 %zext_ln70_2, i64 %zext_ln78_8'
ST_24 : Operation 640 [1/1] (2.10ns)   --->   "%mul_ln122_6 = mul i64 %zext_ln70_2, i64 %zext_ln78_8" [d1.cpp:122]   --->   Operation 640 'mul' 'mul_ln122_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 641 '%mul_ln123_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_13'
ST_24 : Operation 641 [1/1] (2.10ns)   --->   "%mul_ln123_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_13" [d1.cpp:123]   --->   Operation 641 'mul' 'mul_ln123_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 642 '%mul_ln123_3 = mul i64 %zext_ln78_5, i64 %zext_ln78_12'
ST_24 : Operation 642 [1/1] (2.10ns)   --->   "%mul_ln123_3 = mul i64 %zext_ln78_5, i64 %zext_ln78_12" [d1.cpp:123]   --->   Operation 642 'mul' 'mul_ln123_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 643 '%mul_ln123_4 = mul i64 %zext_ln78_6, i64 %zext_ln78_9'
ST_24 : Operation 643 [1/1] (2.10ns)   --->   "%mul_ln123_4 = mul i64 %zext_ln78_6, i64 %zext_ln78_9" [d1.cpp:123]   --->   Operation 643 'mul' 'mul_ln123_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 644 '%mul_ln123_5 = mul i64 %zext_ln70_2, i64 %zext_ln78_10'
ST_24 : Operation 644 [1/1] (2.10ns)   --->   "%mul_ln123_5 = mul i64 %zext_ln70_2, i64 %zext_ln78_10" [d1.cpp:123]   --->   Operation 644 'mul' 'mul_ln123_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 645 '%mul_ln124 = mul i64 %zext_ln78_3, i64 %zext_ln114'
ST_24 : Operation 645 [1/1] (2.10ns)   --->   "%mul_ln124 = mul i64 %zext_ln78_3, i64 %zext_ln114" [d1.cpp:124]   --->   Operation 645 'mul' 'mul_ln124' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 646 '%mul_ln124_2 = mul i64 %zext_ln78_5, i64 %zext_ln78_11'
ST_24 : Operation 646 [1/1] (2.10ns)   --->   "%mul_ln124_2 = mul i64 %zext_ln78_5, i64 %zext_ln78_11" [d1.cpp:124]   --->   Operation 646 'mul' 'mul_ln124_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 647 '%mul_ln124_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_12'
ST_24 : Operation 647 [1/1] (2.10ns)   --->   "%mul_ln124_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_12" [d1.cpp:124]   --->   Operation 647 'mul' 'mul_ln124_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 648 '%mul_ln124_4 = mul i64 %zext_ln70_2, i64 %zext_ln78_9'
ST_24 : Operation 648 [1/1] (2.10ns)   --->   "%mul_ln124_4 = mul i64 %zext_ln70_2, i64 %zext_ln78_9" [d1.cpp:124]   --->   Operation 648 'mul' 'mul_ln124_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 649 '%mul_ln125_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_13'
ST_24 : Operation 649 [1/1] (2.10ns)   --->   "%mul_ln125_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_13" [d1.cpp:125]   --->   Operation 649 'mul' 'mul_ln125_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 650 '%mul_ln125_2 = mul i64 %zext_ln70_2, i64 %zext_ln78_12'
ST_24 : Operation 650 [1/1] (2.10ns)   --->   "%mul_ln125_2 = mul i64 %zext_ln70_2, i64 %zext_ln78_12" [d1.cpp:125]   --->   Operation 650 'mul' 'mul_ln125_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 651 '%mul_ln125_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_11'
ST_24 : Operation 651 [1/1] (2.10ns)   --->   "%mul_ln125_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_11" [d1.cpp:125]   --->   Operation 651 'mul' 'mul_ln125_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 652 '%mul_ln126 = mul i64 %zext_ln78_5, i64 %zext_ln114'
ST_24 : Operation 652 [1/1] (2.10ns)   --->   "%mul_ln126 = mul i64 %zext_ln78_5, i64 %zext_ln114" [d1.cpp:126]   --->   Operation 652 'mul' 'mul_ln126' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 653 '%mul_ln126_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_13'
ST_24 : Operation 653 [1/1] (2.10ns)   --->   "%mul_ln126_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_13" [d1.cpp:126]   --->   Operation 653 'mul' 'mul_ln126_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 654 '%mul_ln126_2 = mul i64 %zext_ln70_2, i64 %zext_ln78_11'
ST_24 : Operation 654 [1/1] (2.10ns)   --->   "%mul_ln126_2 = mul i64 %zext_ln70_2, i64 %zext_ln78_11" [d1.cpp:126]   --->   Operation 654 'mul' 'mul_ln126_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 655 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_12, i32 28, i32 63" [d1.cpp:130]   --->   Operation 655 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 656 [1/1] (0.00ns)   --->   "%zext_ln130_63 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 656 'zext' 'zext_ln130_63' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 657 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i64 %add_ln80_8, i64 %add_ln78_65" [d1.cpp:80]   --->   Operation 657 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 658 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_13 = add i28 %trunc_ln80_4, i28 %trunc_ln80_3" [d1.cpp:80]   --->   Operation 658 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 659 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_15 = add i64 %add_ln80_12, i64 %add_ln80_9" [d1.cpp:80]   --->   Operation 659 'add' 'add_ln80_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 660 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln80_17 = add i28 %add_ln80_14, i28 %add_ln80_13" [d1.cpp:80]   --->   Operation 660 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 661 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_15 = add i64 %add_ln80_15, i64 %add_ln80_7" [d1.cpp:80]   --->   Operation 661 'add' 'arr_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 662 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln128 = add i28 %add_ln80_17, i28 %add_ln80_16" [d1.cpp:128]   --->   Operation 662 'add' 'add_ln128' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 663 [1/1] (0.00ns)   --->   "%trunc_ln130_1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_12, i32 28, i32 55" [d1.cpp:130]   --->   Operation 663 'partselect' 'trunc_ln130_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 664 [1/1] (1.08ns)   --->   "%add_ln130_1 = add i64 %add_ln78_6, i64 %zext_ln130_63" [d1.cpp:130]   --->   Operation 664 'add' 'add_ln130_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 665 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130 = add i64 %add_ln130_1, i64 %arr_15" [d1.cpp:130]   --->   Operation 665 'add' 'add_ln130' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 666 [1/1] (0.97ns)   --->   "%add_ln130_2 = add i28 %trunc_ln128, i28 %trunc_ln130_1" [d1.cpp:130]   --->   Operation 666 'add' 'add_ln130_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 667 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln130_3 = add i28 %add_ln130_2, i28 %add_ln128" [d1.cpp:130]   --->   Operation 667 'add' 'add_ln130_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 668 '%mul_ln130 = mul i64 %zext_ln70, i64 %zext_ln114'
ST_24 : Operation 668 [1/1] (2.10ns)   --->   "%mul_ln130 = mul i64 %zext_ln70, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 668 'mul' 'mul_ln130' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 669 [1/1] (0.00ns)   --->   "%zext_ln130_1 = zext i64 %mul_ln130" [d1.cpp:130]   --->   Operation 669 'zext' 'zext_ln130_1' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 670 '%mul_ln130_1 = mul i64 %zext_ln78, i64 %zext_ln78_13'
ST_24 : Operation 670 [1/1] (2.10ns)   --->   "%mul_ln130_1 = mul i64 %zext_ln78, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 670 'mul' 'mul_ln130_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 671 [1/1] (0.00ns)   --->   "%zext_ln130_2 = zext i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 671 'zext' 'zext_ln130_2' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 672 '%mul_ln130_2 = mul i64 %zext_ln78_1, i64 %zext_ln78_11'
ST_24 : Operation 672 [1/1] (2.10ns)   --->   "%mul_ln130_2 = mul i64 %zext_ln78_1, i64 %zext_ln78_11" [d1.cpp:130]   --->   Operation 672 'mul' 'mul_ln130_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 673 [1/1] (0.00ns)   --->   "%zext_ln130_3 = zext i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 673 'zext' 'zext_ln130_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 674 '%mul_ln130_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_12'
ST_24 : Operation 674 [1/1] (2.10ns)   --->   "%mul_ln130_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_12" [d1.cpp:130]   --->   Operation 674 'mul' 'mul_ln130_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 675 [1/1] (0.00ns)   --->   "%zext_ln130_4 = zext i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 675 'zext' 'zext_ln130_4' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 676 '%mul_ln130_4 = mul i64 %zext_ln78_3, i64 %zext_ln78_9'
ST_24 : Operation 676 [1/1] (2.10ns)   --->   "%mul_ln130_4 = mul i64 %zext_ln78_3, i64 %zext_ln78_9" [d1.cpp:130]   --->   Operation 676 'mul' 'mul_ln130_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 677 [1/1] (0.00ns)   --->   "%zext_ln130_5 = zext i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 677 'zext' 'zext_ln130_5' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 678 '%mul_ln130_5 = mul i64 %zext_ln78_4, i64 %zext_ln78_10'
ST_24 : Operation 678 [1/1] (2.10ns)   --->   "%mul_ln130_5 = mul i64 %zext_ln78_4, i64 %zext_ln78_10" [d1.cpp:130]   --->   Operation 678 'mul' 'mul_ln130_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 679 [1/1] (0.00ns)   --->   "%zext_ln130_6 = zext i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 679 'zext' 'zext_ln130_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 680 '%mul_ln130_6 = mul i64 %zext_ln78_5, i64 %zext_ln78_8'
ST_24 : Operation 680 [1/1] (2.10ns)   --->   "%mul_ln130_6 = mul i64 %zext_ln78_5, i64 %zext_ln78_8" [d1.cpp:130]   --->   Operation 680 'mul' 'mul_ln130_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 681 [1/1] (0.00ns)   --->   "%zext_ln130_7 = zext i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 681 'zext' 'zext_ln130_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 682 '%mul_ln130_7 = mul i64 %zext_ln78_6, i64 %zext_ln78_7'
ST_24 : Operation 682 [1/1] (2.10ns)   --->   "%mul_ln130_7 = mul i64 %zext_ln78_6, i64 %zext_ln78_7" [d1.cpp:130]   --->   Operation 682 'mul' 'mul_ln130_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 683 [1/1] (0.00ns)   --->   "%zext_ln130_8 = zext i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 683 'zext' 'zext_ln130_8' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 684 '%mul_ln130_8 = mul i64 %zext_ln70_2, i64 %zext_ln70_1'
ST_24 : Operation 684 [1/1] (2.10ns)   --->   "%mul_ln130_8 = mul i64 %zext_ln70_2, i64 %zext_ln70_1" [d1.cpp:130]   --->   Operation 684 'mul' 'mul_ln130_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 685 [1/1] (0.00ns)   --->   "%zext_ln130_9 = zext i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 685 'zext' 'zext_ln130_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 686 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 686 'trunc' 'trunc_ln130' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 687 [1/1] (0.00ns)   --->   "%trunc_ln130_2 = trunc i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 687 'trunc' 'trunc_ln130_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 688 [1/1] (0.00ns)   --->   "%trunc_ln130_3 = trunc i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 688 'trunc' 'trunc_ln130_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 689 [1/1] (0.00ns)   --->   "%trunc_ln130_4 = trunc i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 689 'trunc' 'trunc_ln130_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 690 [1/1] (0.00ns)   --->   "%trunc_ln130_5 = trunc i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 690 'trunc' 'trunc_ln130_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 691 [1/1] (0.00ns)   --->   "%trunc_ln130_7 = trunc i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 691 'trunc' 'trunc_ln130_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 692 [1/1] (0.00ns)   --->   "%trunc_ln130_8 = trunc i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 692 'trunc' 'trunc_ln130_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 693 [1/1] (0.00ns)   --->   "%trunc_ln130_9 = trunc i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 693 'trunc' 'trunc_ln130_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 694 [1/1] (0.00ns)   --->   "%trunc_ln130_10 = trunc i64 %mul_ln130" [d1.cpp:130]   --->   Operation 694 'trunc' 'trunc_ln130_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 695 [1/1] (1.08ns)   --->   "%add_ln130_4 = add i65 %zext_ln130_9, i65 %zext_ln130_7" [d1.cpp:130]   --->   Operation 695 'add' 'add_ln130_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 696 [1/1] (0.00ns)   --->   "%zext_ln130_12 = zext i65 %add_ln130_4" [d1.cpp:130]   --->   Operation 696 'zext' 'zext_ln130_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 697 [1/1] (1.09ns)   --->   "%add_ln130_5 = add i66 %zext_ln130_12, i66 %zext_ln130_8" [d1.cpp:130]   --->   Operation 697 'add' 'add_ln130_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 698 [1/1] (1.08ns)   --->   "%add_ln130_6 = add i65 %zext_ln130_5, i65 %zext_ln130_4" [d1.cpp:130]   --->   Operation 698 'add' 'add_ln130_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 699 [1/1] (0.00ns)   --->   "%zext_ln130_14 = zext i65 %add_ln130_6" [d1.cpp:130]   --->   Operation 699 'zext' 'zext_ln130_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 700 [1/1] (1.09ns)   --->   "%add_ln130_7 = add i66 %zext_ln130_14, i66 %zext_ln130_6" [d1.cpp:130]   --->   Operation 700 'add' 'add_ln130_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 701 [1/1] (1.08ns)   --->   "%add_ln130_9 = add i65 %zext_ln130_2, i65 %zext_ln130_1" [d1.cpp:130]   --->   Operation 701 'add' 'add_ln130_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 702 [1/1] (0.00ns)   --->   "%zext_ln130_17 = zext i65 %add_ln130_9" [d1.cpp:130]   --->   Operation 702 'zext' 'zext_ln130_17' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 703 [1/1] (1.09ns)   --->   "%add_ln130_10 = add i66 %zext_ln130_17, i66 %zext_ln130_3" [d1.cpp:130]   --->   Operation 703 'add' 'add_ln130_10' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 704 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln130_41 = add i28 %add_ln120_24, i28 %add_ln120_23" [d1.cpp:130]   --->   Operation 704 'add' 'add_ln130_41' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 705 [1/1] (0.00ns)   --->   "%lshr_ln131_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130, i32 28, i32 63" [d1.cpp:131]   --->   Operation 705 'partselect' 'lshr_ln131_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 706 [1/1] (0.00ns)   --->   "%zext_ln131_3 = zext i36 %lshr_ln131_1" [d1.cpp:131]   --->   Operation 706 'zext' 'zext_ln131_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 707 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_10 = add i64 %add_ln127_9, i64 %add_ln127_8" [d1.cpp:127]   --->   Operation 707 'add' 'add_ln127_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 708 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_14 = add i28 %trunc_ln127_4, i28 %trunc_ln127_3" [d1.cpp:127]   --->   Operation 708 'add' 'add_ln127_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 709 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln127_16 = add i64 %add_ln127_13, i64 %add_ln127_10" [d1.cpp:127]   --->   Operation 709 'add' 'add_ln127_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 710 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln127_18 = add i28 %add_ln127_15, i28 %add_ln127_14" [d1.cpp:127]   --->   Operation 710 'add' 'add_ln127_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 711 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127 = add i64 %add_ln127_16, i64 %add_ln127_7" [d1.cpp:127]   --->   Operation 711 'add' 'add_ln127' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 712 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_19 = add i28 %add_ln127_18, i28 %add_ln127_17" [d1.cpp:127]   --->   Operation 712 'add' 'add_ln127_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 713 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130, i32 28, i32 55" [d1.cpp:131]   --->   Operation 713 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 714 [1/1] (1.08ns)   --->   "%add_ln131_2 = add i64 %add_ln78_5, i64 %zext_ln131_3" [d1.cpp:131]   --->   Operation 714 'add' 'add_ln131_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 715 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln131_1 = add i64 %add_ln131_2, i64 %add_ln127" [d1.cpp:131]   --->   Operation 715 'add' 'add_ln131_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 716 [1/1] (0.97ns)   --->   "%add_ln131_4 = add i28 %trunc_ln127_7, i28 %trunc_ln" [d1.cpp:131]   --->   Operation 716 'add' 'add_ln131_4' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 717 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln131_3 = add i28 %add_ln131_4, i28 %add_ln127_19" [d1.cpp:131]   --->   Operation 717 'add' 'add_ln131_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 718 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 63" [d1.cpp:132]   --->   Operation 718 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 719 [1/1] (0.00ns)   --->   "%zext_ln132 = zext i36 %lshr_ln2" [d1.cpp:132]   --->   Operation 719 'zext' 'zext_ln132' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 720 [1/1] (1.08ns)   --->   "%add_ln126_8 = add i64 %mul_ln126_1, i64 %mul_ln126" [d1.cpp:126]   --->   Operation 720 'add' 'add_ln126_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 721 [1/1] (1.08ns)   --->   "%add_ln126_9 = add i64 %mul_ln126_2, i64 %mul_ln78_12" [d1.cpp:126]   --->   Operation 721 'add' 'add_ln126_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 722 [1/1] (0.00ns)   --->   "%trunc_ln126_3 = trunc i64 %add_ln126_8" [d1.cpp:126]   --->   Operation 722 'trunc' 'trunc_ln126_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 723 [1/1] (0.00ns)   --->   "%trunc_ln126_4 = trunc i64 %add_ln126_9" [d1.cpp:126]   --->   Operation 723 'trunc' 'trunc_ln126_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 724 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_10 = add i64 %add_ln126_9, i64 %add_ln126_8" [d1.cpp:126]   --->   Operation 724 'add' 'add_ln126_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 725 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_14 = add i28 %trunc_ln126_4, i28 %trunc_ln126_3" [d1.cpp:126]   --->   Operation 725 'add' 'add_ln126_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 726 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_16 = add i64 %add_ln126_13, i64 %add_ln126_10" [d1.cpp:126]   --->   Operation 726 'add' 'add_ln126_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 727 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln126_18 = add i28 %add_ln126_15, i28 %add_ln126_14" [d1.cpp:126]   --->   Operation 727 'add' 'add_ln126_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 728 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_19 = add i28 %add_ln126_18, i28 %add_ln126_17" [d1.cpp:126]   --->   Operation 728 'add' 'add_ln126_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 729 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 55" [d1.cpp:132]   --->   Operation 729 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 730 [1/1] (1.08ns)   --->   "%add_ln132_1 = add i64 %add_ln78_4, i64 %zext_ln132" [d1.cpp:132]   --->   Operation 730 'add' 'add_ln132_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 731 [1/1] (0.97ns)   --->   "%add_ln132_2 = add i28 %trunc_ln126_7, i28 %trunc_ln1" [d1.cpp:132]   --->   Operation 731 'add' 'add_ln132_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 732 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_2 = add i28 %add_ln132_2, i28 %add_ln126_19" [d1.cpp:132]   --->   Operation 732 'add' 'out1_w_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 733 [1/1] (1.08ns)   --->   "%add_ln125_8 = add i64 %mul_ln125_3, i64 %mul_ln125_1" [d1.cpp:125]   --->   Operation 733 'add' 'add_ln125_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 734 [1/1] (1.08ns)   --->   "%add_ln125_9 = add i64 %mul_ln125_2, i64 %mul_ln78_4" [d1.cpp:125]   --->   Operation 734 'add' 'add_ln125_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 735 [1/1] (0.00ns)   --->   "%trunc_ln125_3 = trunc i64 %add_ln125_8" [d1.cpp:125]   --->   Operation 735 'trunc' 'trunc_ln125_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 736 [1/1] (0.00ns)   --->   "%trunc_ln125_4 = trunc i64 %add_ln125_9" [d1.cpp:125]   --->   Operation 736 'trunc' 'trunc_ln125_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 737 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_10 = add i64 %add_ln125_9, i64 %add_ln125_8" [d1.cpp:125]   --->   Operation 737 'add' 'add_ln125_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 738 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_14 = add i28 %trunc_ln125_4, i28 %trunc_ln125_3" [d1.cpp:125]   --->   Operation 738 'add' 'add_ln125_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 739 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln125_16 = add i64 %add_ln125_13, i64 %add_ln125_10" [d1.cpp:125]   --->   Operation 739 'add' 'add_ln125_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 740 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln125_18 = add i28 %add_ln125_15, i28 %add_ln125_14" [d1.cpp:125]   --->   Operation 740 'add' 'add_ln125_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 741 [1/1] (1.08ns)   --->   "%add_ln124_7 = add i64 %mul_ln124_3, i64 %mul_ln124_2" [d1.cpp:124]   --->   Operation 741 'add' 'add_ln124_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 742 [1/1] (1.08ns)   --->   "%add_ln124_8 = add i64 %mul_ln124_4, i64 %mul_ln124" [d1.cpp:124]   --->   Operation 742 'add' 'add_ln124_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 743 [1/1] (0.00ns)   --->   "%trunc_ln124_3 = trunc i64 %add_ln124_7" [d1.cpp:124]   --->   Operation 743 'trunc' 'trunc_ln124_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 744 [1/1] (0.00ns)   --->   "%trunc_ln124_4 = trunc i64 %add_ln124_8" [d1.cpp:124]   --->   Operation 744 'trunc' 'trunc_ln124_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 745 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_9 = add i64 %add_ln124_8, i64 %add_ln124_7" [d1.cpp:124]   --->   Operation 745 'add' 'add_ln124_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 746 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_13 = add i28 %trunc_ln124_4, i28 %trunc_ln124_3" [d1.cpp:124]   --->   Operation 746 'add' 'add_ln124_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 747 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_15 = add i64 %add_ln124_12, i64 %add_ln124_9" [d1.cpp:124]   --->   Operation 747 'add' 'add_ln124_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 748 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln124_17 = add i28 %add_ln124_14, i28 %add_ln124_13" [d1.cpp:124]   --->   Operation 748 'add' 'add_ln124_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 749 [1/1] (1.08ns)   --->   "%add_ln123_8 = add i64 %mul_ln123_4, i64 %mul_ln123_3" [d1.cpp:123]   --->   Operation 749 'add' 'add_ln123_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 750 [1/1] (1.08ns)   --->   "%add_ln123_9 = add i64 %mul_ln123_5, i64 %mul_ln123_1" [d1.cpp:123]   --->   Operation 750 'add' 'add_ln123_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 751 [1/1] (0.00ns)   --->   "%trunc_ln123_3 = trunc i64 %add_ln123_8" [d1.cpp:123]   --->   Operation 751 'trunc' 'trunc_ln123_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 752 [1/1] (0.00ns)   --->   "%trunc_ln123_4 = trunc i64 %add_ln123_9" [d1.cpp:123]   --->   Operation 752 'trunc' 'trunc_ln123_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 753 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_10 = add i64 %add_ln123_9, i64 %add_ln123_8" [d1.cpp:123]   --->   Operation 753 'add' 'add_ln123_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 754 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_14 = add i28 %trunc_ln123_4, i28 %trunc_ln123_3" [d1.cpp:123]   --->   Operation 754 'add' 'add_ln123_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 755 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_16 = add i64 %add_ln123_13, i64 %add_ln123_10" [d1.cpp:123]   --->   Operation 755 'add' 'add_ln123_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 756 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln123_18 = add i28 %add_ln123_15, i28 %add_ln123_14" [d1.cpp:123]   --->   Operation 756 'add' 'add_ln123_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 757 [1/1] (1.08ns)   --->   "%add_ln122 = add i64 %mul_ln122, i64 %add_ln78_13" [d1.cpp:122]   --->   Operation 757 'add' 'add_ln122' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 758 [1/1] (1.08ns)   --->   "%add_ln122_1 = add i64 %mul_ln122_1, i64 %mul_ln122_2" [d1.cpp:122]   --->   Operation 758 'add' 'add_ln122_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 759 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i64 %add_ln122" [d1.cpp:122]   --->   Operation 759 'trunc' 'trunc_ln122' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 760 [1/1] (0.00ns)   --->   "%trunc_ln122_1 = trunc i64 %add_ln122_1" [d1.cpp:122]   --->   Operation 760 'trunc' 'trunc_ln122_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 761 [1/1] (1.08ns)   --->   "%add_ln122_2 = add i64 %add_ln122_1, i64 %add_ln122" [d1.cpp:122]   --->   Operation 761 'add' 'add_ln122_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 762 [1/1] (1.08ns)   --->   "%add_ln122_3 = add i64 %mul_ln122_6, i64 %mul_ln122_5" [d1.cpp:122]   --->   Operation 762 'add' 'add_ln122_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 763 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_4 = add i64 %mul_ln122_4, i64 %mul_ln78" [d1.cpp:122]   --->   Operation 763 'add' 'add_ln122_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 764 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln122_5 = add i64 %add_ln122_4, i64 %mul_ln122_3" [d1.cpp:122]   --->   Operation 764 'add' 'add_ln122_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 765 [1/1] (0.00ns)   --->   "%trunc_ln122_2 = trunc i64 %add_ln122_3" [d1.cpp:122]   --->   Operation 765 'trunc' 'trunc_ln122_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 766 [1/1] (0.00ns)   --->   "%trunc_ln122_3 = trunc i64 %add_ln122_5" [d1.cpp:122]   --->   Operation 766 'trunc' 'trunc_ln122_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 767 [1/1] (1.08ns)   --->   "%add_ln122_6 = add i64 %add_ln122_5, i64 %add_ln122_3" [d1.cpp:122]   --->   Operation 767 'add' 'add_ln122_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 768 [1/1] (0.97ns)   --->   "%add_ln122_7 = add i28 %trunc_ln122_1, i28 %trunc_ln122" [d1.cpp:122]   --->   Operation 768 'add' 'add_ln122_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 769 [1/1] (0.97ns)   --->   "%add_ln122_8 = add i28 %trunc_ln122_3, i28 %trunc_ln122_2" [d1.cpp:122]   --->   Operation 769 'add' 'add_ln122_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 770 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln137 = add i28 %add_ln121_19, i28 %add_ln121_18" [d1.cpp:137]   --->   Operation 770 'add' 'add_ln137' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 771 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_4 = add i28 %trunc_ln130_9, i28 %trunc_ln130_8" [d1.cpp:138]   --->   Operation 771 'add' 'add_ln138_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 772 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_5 = add i28 %add_ln138_4, i28 %trunc_ln130_7" [d1.cpp:138]   --->   Operation 772 'add' 'add_ln138_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 773 [1/1] (0.97ns)   --->   "%add_ln138_7 = add i28 %trunc_ln130_2, i28 %trunc_ln130_3" [d1.cpp:138]   --->   Operation 773 'add' 'add_ln138_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.25>
ST_25 : Operation 774 [1/1] (0.00ns)   --->   "%add280_141720_loc_load = load i64 %add280_141720_loc"   --->   Operation 774 'load' 'add280_141720_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 775 [1/1] (0.00ns)   --->   "%add256_51715_loc_load = load i64 %add256_51715_loc"   --->   Operation 775 'load' 'add256_51715_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 776 [1/1] (0.00ns)   --->   "%add256_41712_loc_load = load i64 %add256_41712_loc"   --->   Operation 776 'load' 'add256_41712_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 777 [1/1] (0.00ns)   --->   "%add256_31709_loc_load = load i64 %add256_31709_loc"   --->   Operation 777 'load' 'add256_31709_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 778 '%mul_ln114 = mul i64 %zext_ln78_1, i64 %zext_ln70_1'
ST_25 : Operation 778 [1/1] (2.10ns)   --->   "%mul_ln114 = mul i64 %zext_ln78_1, i64 %zext_ln70_1" [d1.cpp:114]   --->   Operation 778 'mul' 'mul_ln114' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 779 '%mul_ln114_1 = mul i64 %zext_ln78, i64 %zext_ln78_7'
ST_25 : Operation 779 [1/1] (2.10ns)   --->   "%mul_ln114_1 = mul i64 %zext_ln78, i64 %zext_ln78_7" [d1.cpp:114]   --->   Operation 779 'mul' 'mul_ln114_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 780 '%mul_ln114_2 = mul i64 %zext_ln70, i64 %zext_ln78_8'
ST_25 : Operation 780 [1/1] (2.10ns)   --->   "%mul_ln114_2 = mul i64 %zext_ln70, i64 %zext_ln78_8" [d1.cpp:114]   --->   Operation 780 'mul' 'mul_ln114_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 781 '%mul_ln114_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_10'
ST_25 : Operation 781 [1/1] (2.10ns)   --->   "%mul_ln114_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_10" [d1.cpp:114]   --->   Operation 781 'mul' 'mul_ln114_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 782 '%mul_ln114_4 = mul i64 %zext_ln50_5, i64 %zext_ln78_9'
ST_25 : Operation 782 [1/1] (2.10ns)   --->   "%mul_ln114_4 = mul i64 %zext_ln50_5, i64 %zext_ln78_9" [d1.cpp:114]   --->   Operation 782 'mul' 'mul_ln114_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 783 '%mul_ln114_5 = mul i64 %zext_ln50_4, i64 %zext_ln78_12'
ST_25 : Operation 783 [1/1] (2.10ns)   --->   "%mul_ln114_5 = mul i64 %zext_ln50_4, i64 %zext_ln78_12" [d1.cpp:114]   --->   Operation 783 'mul' 'mul_ln114_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 784 '%mul_ln114_6 = mul i64 %zext_ln50_3, i64 %zext_ln78_11'
ST_25 : Operation 784 [1/1] (2.10ns)   --->   "%mul_ln114_6 = mul i64 %zext_ln50_3, i64 %zext_ln78_11" [d1.cpp:114]   --->   Operation 784 'mul' 'mul_ln114_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 785 '%mul_ln114_7 = mul i64 %zext_ln50_2, i64 %zext_ln78_13'
ST_25 : Operation 785 [1/1] (2.10ns)   --->   "%mul_ln114_7 = mul i64 %zext_ln50_2, i64 %zext_ln78_13" [d1.cpp:114]   --->   Operation 785 'mul' 'mul_ln114_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 786 '%mul_ln114_8 = mul i64 %zext_ln50_1, i64 %zext_ln114'
ST_25 : Operation 786 [1/1] (2.10ns)   --->   "%mul_ln114_8 = mul i64 %zext_ln50_1, i64 %zext_ln114" [d1.cpp:114]   --->   Operation 786 'mul' 'mul_ln114_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 787 '%mul_ln115 = mul i64 %zext_ln78_2, i64 %zext_ln70_1'
ST_25 : Operation 787 [1/1] (2.10ns)   --->   "%mul_ln115 = mul i64 %zext_ln78_2, i64 %zext_ln70_1" [d1.cpp:115]   --->   Operation 787 'mul' 'mul_ln115' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 788 '%mul_ln115_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_7'
ST_25 : Operation 788 [1/1] (2.10ns)   --->   "%mul_ln115_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_7" [d1.cpp:115]   --->   Operation 788 'mul' 'mul_ln115_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 789 '%mul_ln115_2 = mul i64 %zext_ln70, i64 %zext_ln78_10'
ST_25 : Operation 789 [1/1] (2.10ns)   --->   "%mul_ln115_2 = mul i64 %zext_ln70, i64 %zext_ln78_10" [d1.cpp:115]   --->   Operation 789 'mul' 'mul_ln115_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 790 '%mul_ln115_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_9'
ST_25 : Operation 790 [1/1] (2.10ns)   --->   "%mul_ln115_3 = mul i64 %zext_ln50_6, i64 %zext_ln78_9" [d1.cpp:115]   --->   Operation 790 'mul' 'mul_ln115_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 791 '%mul_ln115_4 = mul i64 %zext_ln78, i64 %zext_ln78_8'
ST_25 : Operation 791 [1/1] (2.10ns)   --->   "%mul_ln115_4 = mul i64 %zext_ln78, i64 %zext_ln78_8" [d1.cpp:115]   --->   Operation 791 'mul' 'mul_ln115_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 792 '%mul_ln115_5 = mul i64 %zext_ln50_5, i64 %zext_ln78_12'
ST_25 : Operation 792 [1/1] (2.10ns)   --->   "%mul_ln115_5 = mul i64 %zext_ln50_5, i64 %zext_ln78_12" [d1.cpp:115]   --->   Operation 792 'mul' 'mul_ln115_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 793 '%mul_ln115_6 = mul i64 %zext_ln50_4, i64 %zext_ln78_11'
ST_25 : Operation 793 [1/1] (2.10ns)   --->   "%mul_ln115_6 = mul i64 %zext_ln50_4, i64 %zext_ln78_11" [d1.cpp:115]   --->   Operation 793 'mul' 'mul_ln115_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 794 '%mul_ln115_7 = mul i64 %zext_ln50_3, i64 %zext_ln78_13'
ST_25 : Operation 794 [1/1] (2.10ns)   --->   "%mul_ln115_7 = mul i64 %zext_ln50_3, i64 %zext_ln78_13" [d1.cpp:115]   --->   Operation 794 'mul' 'mul_ln115_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 795 '%mul_ln115_8 = mul i64 %zext_ln50_2, i64 %zext_ln114'
ST_25 : Operation 795 [1/1] (2.10ns)   --->   "%mul_ln115_8 = mul i64 %zext_ln50_2, i64 %zext_ln114" [d1.cpp:115]   --->   Operation 795 'mul' 'mul_ln115_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 796 '%mul_ln116 = mul i64 %zext_ln78_3, i64 %zext_ln70_1'
ST_25 : Operation 796 [1/1] (2.10ns)   --->   "%mul_ln116 = mul i64 %zext_ln78_3, i64 %zext_ln70_1" [d1.cpp:116]   --->   Operation 796 'mul' 'mul_ln116' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 797 '%mul_ln116_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_7'
ST_25 : Operation 797 [1/1] (2.10ns)   --->   "%mul_ln116_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_7" [d1.cpp:116]   --->   Operation 797 'mul' 'mul_ln116_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 798 '%mul_ln116_2 = mul i64 %zext_ln78_1, i64 %zext_ln78_8'
ST_25 : Operation 798 [1/1] (2.10ns)   --->   "%mul_ln116_2 = mul i64 %zext_ln78_1, i64 %zext_ln78_8" [d1.cpp:116]   --->   Operation 798 'mul' 'mul_ln116_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 799 '%mul_ln116_3 = mul i64 %zext_ln78, i64 %zext_ln78_10'
ST_25 : Operation 799 [1/1] (2.10ns)   --->   "%mul_ln116_3 = mul i64 %zext_ln78, i64 %zext_ln78_10" [d1.cpp:116]   --->   Operation 799 'mul' 'mul_ln116_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 800 '%mul_ln116_4 = mul i64 %zext_ln70, i64 %zext_ln78_9'
ST_25 : Operation 800 [1/1] (2.10ns)   --->   "%mul_ln116_4 = mul i64 %zext_ln70, i64 %zext_ln78_9" [d1.cpp:116]   --->   Operation 800 'mul' 'mul_ln116_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 801 '%mul_ln116_5 = mul i64 %zext_ln50_6, i64 %zext_ln78_12'
ST_25 : Operation 801 [1/1] (2.10ns)   --->   "%mul_ln116_5 = mul i64 %zext_ln50_6, i64 %zext_ln78_12" [d1.cpp:116]   --->   Operation 801 'mul' 'mul_ln116_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 802 '%mul_ln116_6 = mul i64 %zext_ln50_5, i64 %zext_ln78_11'
ST_25 : Operation 802 [1/1] (2.10ns)   --->   "%mul_ln116_6 = mul i64 %zext_ln50_5, i64 %zext_ln78_11" [d1.cpp:116]   --->   Operation 802 'mul' 'mul_ln116_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 803 '%mul_ln116_7 = mul i64 %zext_ln50_4, i64 %zext_ln78_13'
ST_25 : Operation 803 [1/1] (2.10ns)   --->   "%mul_ln116_7 = mul i64 %zext_ln50_4, i64 %zext_ln78_13" [d1.cpp:116]   --->   Operation 803 'mul' 'mul_ln116_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 804 [1/1] (1.08ns)   --->   "%add_ln116 = add i64 %mul_ln116_5, i64 %mul_ln116_6" [d1.cpp:116]   --->   Operation 804 'add' 'add_ln116' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 805 [1/1] (1.08ns)   --->   "%add_ln116_1 = add i64 %mul_ln116_4, i64 %mul_ln116_3" [d1.cpp:116]   --->   Operation 805 'add' 'add_ln116_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 806 [1/1] (0.00ns)   --->   "%trunc_ln116 = trunc i64 %add_ln116" [d1.cpp:116]   --->   Operation 806 'trunc' 'trunc_ln116' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 807 [1/1] (0.00ns)   --->   "%trunc_ln116_1 = trunc i64 %add_ln116_1" [d1.cpp:116]   --->   Operation 807 'trunc' 'trunc_ln116_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 808 [1/1] (1.08ns)   --->   "%add_ln116_2 = add i64 %add_ln116_1, i64 %add_ln116" [d1.cpp:116]   --->   Operation 808 'add' 'add_ln116_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 809 [1/1] (1.08ns)   --->   "%add_ln116_3 = add i64 %mul_ln116_1, i64 %mul_ln116_2" [d1.cpp:116]   --->   Operation 809 'add' 'add_ln116_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 810 [1/1] (1.08ns)   --->   "%add_ln116_4 = add i64 %mul_ln116, i64 %mul_ln116_7" [d1.cpp:116]   --->   Operation 810 'add' 'add_ln116_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 811 [1/1] (0.00ns)   --->   "%trunc_ln116_2 = trunc i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 811 'trunc' 'trunc_ln116_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 812 [1/1] (0.00ns)   --->   "%trunc_ln116_3 = trunc i64 %add_ln116_4" [d1.cpp:116]   --->   Operation 812 'trunc' 'trunc_ln116_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 813 [1/1] (1.08ns)   --->   "%add_ln116_5 = add i64 %add_ln116_4, i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 813 'add' 'add_ln116_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 814 [1/1] (0.97ns)   --->   "%add_ln116_8 = add i28 %trunc_ln116_3, i28 %trunc_ln116_2" [d1.cpp:116]   --->   Operation 814 'add' 'add_ln116_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 815 '%mul_ln117 = mul i64 %zext_ln70, i64 %zext_ln78_12'
ST_25 : Operation 815 [1/1] (2.10ns)   --->   "%mul_ln117 = mul i64 %zext_ln70, i64 %zext_ln78_12" [d1.cpp:117]   --->   Operation 815 'mul' 'mul_ln117' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 816 '%mul_ln117_1 = mul i64 %zext_ln78_4, i64 %zext_ln70_1'
ST_25 : Operation 816 [1/1] (2.10ns)   --->   "%mul_ln117_1 = mul i64 %zext_ln78_4, i64 %zext_ln70_1" [d1.cpp:117]   --->   Operation 816 'mul' 'mul_ln117_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 817 '%mul_ln117_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_7'
ST_25 : Operation 817 [1/1] (2.10ns)   --->   "%mul_ln117_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_7" [d1.cpp:117]   --->   Operation 817 'mul' 'mul_ln117_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 818 '%mul_ln117_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_8'
ST_25 : Operation 818 [1/1] (2.10ns)   --->   "%mul_ln117_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_8" [d1.cpp:117]   --->   Operation 818 'mul' 'mul_ln117_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 819 '%mul_ln117_4 = mul i64 %zext_ln78_1, i64 %zext_ln78_10'
ST_25 : Operation 819 [1/1] (2.10ns)   --->   "%mul_ln117_4 = mul i64 %zext_ln78_1, i64 %zext_ln78_10" [d1.cpp:117]   --->   Operation 819 'mul' 'mul_ln117_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 820 '%mul_ln117_5 = mul i64 %zext_ln78, i64 %zext_ln78_9'
ST_25 : Operation 820 [1/1] (2.10ns)   --->   "%mul_ln117_5 = mul i64 %zext_ln78, i64 %zext_ln78_9" [d1.cpp:117]   --->   Operation 820 'mul' 'mul_ln117_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 821 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117 = add i64 %mul_ln117_5, i64 %mul_ln117_3" [d1.cpp:117]   --->   Operation 821 'add' 'add_ln117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 822 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_1 = add i64 %add_ln117, i64 %mul_ln117_4" [d1.cpp:117]   --->   Operation 822 'add' 'add_ln117_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 823 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_2 = add i64 %mul_ln117_2, i64 %mul_ln117" [d1.cpp:117]   --->   Operation 823 'add' 'add_ln117_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 824 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_3 = add i64 %add_ln117_2, i64 %mul_ln117_1" [d1.cpp:117]   --->   Operation 824 'add' 'add_ln117_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 825 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 825 'trunc' 'trunc_ln117' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 826 [1/1] (0.00ns)   --->   "%trunc_ln117_1 = trunc i64 %add_ln117_3" [d1.cpp:117]   --->   Operation 826 'trunc' 'trunc_ln117_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 827 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_4 = add i64 %add_ln117_3, i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 827 'add' 'add_ln117_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 828 [1/1] (0.00ns)   --->   "%trunc_ln117_2 = trunc i64 %add256_31709_loc_load" [d1.cpp:117]   --->   Operation 828 'trunc' 'trunc_ln117_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 829 [1/1] (0.97ns)   --->   "%add_ln117_5 = add i28 %trunc_ln117_1, i28 %trunc_ln117" [d1.cpp:117]   --->   Operation 829 'add' 'add_ln117_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 830 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_9 = add i64 %add_ln117_4, i64 %add256_31709_loc_load" [d1.cpp:117]   --->   Operation 830 'add' 'arr_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 831 '%mul_ln118 = mul i64 %zext_ln78_5, i64 %zext_ln70_1'
ST_25 : Operation 831 [1/1] (2.10ns)   --->   "%mul_ln118 = mul i64 %zext_ln78_5, i64 %zext_ln70_1" [d1.cpp:118]   --->   Operation 831 'mul' 'mul_ln118' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 832 '%mul_ln118_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_7'
ST_25 : Operation 832 [1/1] (2.10ns)   --->   "%mul_ln118_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_7" [d1.cpp:118]   --->   Operation 832 'mul' 'mul_ln118_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 833 '%mul_ln118_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_8'
ST_25 : Operation 833 [1/1] (2.10ns)   --->   "%mul_ln118_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_8" [d1.cpp:118]   --->   Operation 833 'mul' 'mul_ln118_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 834 '%mul_ln118_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_10'
ST_25 : Operation 834 [1/1] (2.10ns)   --->   "%mul_ln118_3 = mul i64 %zext_ln78_2, i64 %zext_ln78_10" [d1.cpp:118]   --->   Operation 834 'mul' 'mul_ln118_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 835 [1/1] (1.08ns)   --->   "%add_ln118 = add i64 %mul_ln118, i64 %mul_ln118_2" [d1.cpp:118]   --->   Operation 835 'add' 'add_ln118' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 836 [1/1] (1.08ns)   --->   "%add_ln118_1 = add i64 %mul_ln118_1, i64 %mul_ln118_3" [d1.cpp:118]   --->   Operation 836 'add' 'add_ln118_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 837 [1/1] (0.00ns)   --->   "%trunc_ln118 = trunc i64 %add_ln118" [d1.cpp:118]   --->   Operation 837 'trunc' 'trunc_ln118' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 838 [1/1] (0.00ns)   --->   "%trunc_ln118_1 = trunc i64 %add_ln118_1" [d1.cpp:118]   --->   Operation 838 'trunc' 'trunc_ln118_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 839 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_2 = add i64 %add_ln118_1, i64 %add_ln118" [d1.cpp:118]   --->   Operation 839 'add' 'add_ln118_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 840 [1/1] (0.00ns)   --->   "%trunc_ln118_2 = trunc i64 %add256_41712_loc_load" [d1.cpp:118]   --->   Operation 840 'trunc' 'trunc_ln118_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 841 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_10 = add i64 %add_ln118_2, i64 %add256_41712_loc_load" [d1.cpp:118]   --->   Operation 841 'add' 'arr_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 842 [1/1] (0.00ns)   --->   "%trunc_ln119 = trunc i64 %add256_51715_loc_load" [d1.cpp:119]   --->   Operation 842 'trunc' 'trunc_ln119' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 843 [1/1] (1.08ns)   --->   "%arr_11 = add i64 %add_ln119, i64 %add256_51715_loc_load" [d1.cpp:119]   --->   Operation 843 'add' 'arr_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 844 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_8 = add i64 %add_ln121_5, i64 %add_ln121_2" [d1.cpp:121]   --->   Operation 844 'add' 'add_ln121_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 845 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_13 = add i64 %add_ln121_17, i64 %add_ln121_8" [d1.cpp:121]   --->   Operation 845 'add' 'arr_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 846 [1/1] (0.00ns)   --->   "%lshr_ln130_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_13, i32 28, i32 63" [d1.cpp:130]   --->   Operation 846 'partselect' 'lshr_ln130_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 847 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i36 %lshr_ln130_1" [d1.cpp:130]   --->   Operation 847 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 848 [1/1] (0.00ns)   --->   "%zext_ln130_10 = zext i64 %add280_141720_loc_load" [d1.cpp:130]   --->   Operation 848 'zext' 'zext_ln130_10' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 849 [1/1] (0.00ns)   --->   "%zext_ln130_11 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 849 'zext' 'zext_ln130_11' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 850 [1/1] (0.00ns)   --->   "%trunc_ln130_6 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_13, i32 28, i32 55" [d1.cpp:130]   --->   Operation 850 'partselect' 'trunc_ln130_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 851 [1/1] (0.00ns)   --->   "%trunc_ln130_12 = trunc i64 %add280_141720_loc_load" [d1.cpp:130]   --->   Operation 851 'trunc' 'trunc_ln130_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 852 [1/1] (0.00ns)   --->   "%zext_ln130_13 = zext i66 %add_ln130_5" [d1.cpp:130]   --->   Operation 852 'zext' 'zext_ln130_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 853 [1/1] (0.00ns)   --->   "%zext_ln130_15 = zext i66 %add_ln130_7" [d1.cpp:130]   --->   Operation 853 'zext' 'zext_ln130_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 854 [1/1] (1.10ns)   --->   "%add_ln130_43 = add i66 %add_ln130_7, i66 %add_ln130_5" [d1.cpp:130]   --->   Operation 854 'add' 'add_ln130_43' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 855 [1/1] (1.10ns)   --->   "%add_ln130_8 = add i67 %zext_ln130_15, i67 %zext_ln130_13" [d1.cpp:130]   --->   Operation 855 'add' 'add_ln130_8' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 856 [1/1] (0.00ns)   --->   "%trunc_ln130_13 = trunc i66 %add_ln130_43" [d1.cpp:130]   --->   Operation 856 'trunc' 'trunc_ln130_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 857 [1/1] (0.00ns)   --->   "%zext_ln130_16 = zext i67 %add_ln130_8" [d1.cpp:130]   --->   Operation 857 'zext' 'zext_ln130_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 858 [1/1] (0.00ns)   --->   "%zext_ln130_18 = zext i66 %add_ln130_10" [d1.cpp:130]   --->   Operation 858 'zext' 'zext_ln130_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 859 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln130_12 = add i65 %zext_ln130_11, i65 %zext_ln130_10" [d1.cpp:130]   --->   Operation 859 'add' 'add_ln130_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 860 [1/1] (0.82ns) (root node of TernaryAdder)   --->   "%add_ln130_13 = add i65 %add_ln130_12, i65 %zext_ln130" [d1.cpp:130]   --->   Operation 860 'add' 'add_ln130_13' <Predicate = true> <Delay = 0.82> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 861 [1/1] (0.00ns)   --->   "%zext_ln130_19 = zext i65 %add_ln130_13" [d1.cpp:130]   --->   Operation 861 'zext' 'zext_ln130_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 862 [1/1] (1.10ns)   --->   "%add_ln130_14 = add i67 %zext_ln130_19, i67 %zext_ln130_18" [d1.cpp:130]   --->   Operation 862 'add' 'add_ln130_14' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 863 [1/1] (0.00ns)   --->   "%trunc_ln130_14 = trunc i67 %add_ln130_14" [d1.cpp:130]   --->   Operation 863 'trunc' 'trunc_ln130_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 864 [1/1] (0.00ns)   --->   "%zext_ln130_20 = zext i67 %add_ln130_14" [d1.cpp:130]   --->   Operation 864 'zext' 'zext_ln130_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 865 [1/1] (1.09ns)   --->   "%add_ln130_35 = add i56 %trunc_ln130_14, i56 %trunc_ln130_13" [d1.cpp:130]   --->   Operation 865 'add' 'add_ln130_35' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 866 [1/1] (1.10ns)   --->   "%add_ln130_11 = add i68 %zext_ln130_20, i68 %zext_ln130_16" [d1.cpp:130]   --->   Operation 866 'add' 'add_ln130_11' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 867 [1/1] (0.00ns)   --->   "%trunc_ln130_s = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_11, i32 28, i32 67" [d1.cpp:130]   --->   Operation 867 'partselect' 'trunc_ln130_s' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 868 [1/1] (0.00ns)   --->   "%zext_ln130_21 = zext i40 %trunc_ln130_s" [d1.cpp:130]   --->   Operation 868 'zext' 'zext_ln130_21' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 869 '%mul_ln130_9 = mul i64 %zext_ln50_6, i64 %zext_ln114'
ST_25 : Operation 869 [1/1] (2.10ns)   --->   "%mul_ln130_9 = mul i64 %zext_ln50_6, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 869 'mul' 'mul_ln130_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln130_22 = zext i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 870 'zext' 'zext_ln130_22' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 871 '%mul_ln130_10 = mul i64 %zext_ln70, i64 %zext_ln78_13'
ST_25 : Operation 871 [1/1] (2.10ns)   --->   "%mul_ln130_10 = mul i64 %zext_ln70, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 871 'mul' 'mul_ln130_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 872 [1/1] (0.00ns)   --->   "%zext_ln130_23 = zext i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 872 'zext' 'zext_ln130_23' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 873 '%mul_ln130_11 = mul i64 %zext_ln78, i64 %zext_ln78_11'
ST_25 : Operation 873 [1/1] (2.10ns)   --->   "%mul_ln130_11 = mul i64 %zext_ln78, i64 %zext_ln78_11" [d1.cpp:130]   --->   Operation 873 'mul' 'mul_ln130_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 874 [1/1] (0.00ns)   --->   "%zext_ln130_24 = zext i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 874 'zext' 'zext_ln130_24' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 875 '%mul_ln130_12 = mul i64 %zext_ln78_1, i64 %zext_ln78_12'
ST_25 : Operation 875 [1/1] (2.10ns)   --->   "%mul_ln130_12 = mul i64 %zext_ln78_1, i64 %zext_ln78_12" [d1.cpp:130]   --->   Operation 875 'mul' 'mul_ln130_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln130_25 = zext i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 876 'zext' 'zext_ln130_25' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 877 '%mul_ln130_13 = mul i64 %zext_ln78_2, i64 %zext_ln78_9'
ST_25 : Operation 877 [1/1] (2.10ns)   --->   "%mul_ln130_13 = mul i64 %zext_ln78_2, i64 %zext_ln78_9" [d1.cpp:130]   --->   Operation 877 'mul' 'mul_ln130_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 878 [1/1] (0.00ns)   --->   "%zext_ln130_26 = zext i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 878 'zext' 'zext_ln130_26' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 879 '%mul_ln130_14 = mul i64 %zext_ln78_3, i64 %zext_ln78_10'
ST_25 : Operation 879 [1/1] (2.10ns)   --->   "%mul_ln130_14 = mul i64 %zext_ln78_3, i64 %zext_ln78_10" [d1.cpp:130]   --->   Operation 879 'mul' 'mul_ln130_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 880 [1/1] (0.00ns)   --->   "%zext_ln130_27 = zext i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 880 'zext' 'zext_ln130_27' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 881 '%mul_ln130_15 = mul i64 %zext_ln78_4, i64 %zext_ln78_8'
ST_25 : Operation 881 [1/1] (2.10ns)   --->   "%mul_ln130_15 = mul i64 %zext_ln78_4, i64 %zext_ln78_8" [d1.cpp:130]   --->   Operation 881 'mul' 'mul_ln130_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 882 [1/1] (0.00ns)   --->   "%zext_ln130_28 = zext i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 882 'zext' 'zext_ln130_28' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 883 [1/1] (0.00ns)   --->   "%zext_ln130_29 = zext i64 %arr_11" [d1.cpp:130]   --->   Operation 883 'zext' 'zext_ln130_29' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 884 [1/1] (0.00ns)   --->   "%trunc_ln130_15 = trunc i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 884 'trunc' 'trunc_ln130_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 885 [1/1] (0.00ns)   --->   "%trunc_ln130_16 = trunc i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 885 'trunc' 'trunc_ln130_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 886 [1/1] (0.00ns)   --->   "%trunc_ln130_17 = trunc i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 886 'trunc' 'trunc_ln130_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 887 [1/1] (0.00ns)   --->   "%trunc_ln130_18 = trunc i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 887 'trunc' 'trunc_ln130_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 888 [1/1] (0.00ns)   --->   "%trunc_ln130_21 = trunc i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 888 'trunc' 'trunc_ln130_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 889 [1/1] (0.00ns)   --->   "%trunc_ln130_22 = trunc i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 889 'trunc' 'trunc_ln130_22' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 890 [1/1] (0.00ns)   --->   "%trunc_ln130_23 = trunc i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 890 'trunc' 'trunc_ln130_23' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 891 [1/1] (0.00ns)   --->   "%trunc_ln130_11 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_35, i32 28, i32 55" [d1.cpp:130]   --->   Operation 891 'partselect' 'trunc_ln130_11' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 892 [1/1] (1.08ns)   --->   "%add_ln130_15 = add i65 %zext_ln130_27, i65 %zext_ln130_28" [d1.cpp:130]   --->   Operation 892 'add' 'add_ln130_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 893 [1/1] (0.00ns)   --->   "%zext_ln130_30 = zext i65 %add_ln130_15" [d1.cpp:130]   --->   Operation 893 'zext' 'zext_ln130_30' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 894 [1/1] (1.08ns)   --->   "%add_ln130_16 = add i65 %zext_ln130_26, i65 %zext_ln130_25" [d1.cpp:130]   --->   Operation 894 'add' 'add_ln130_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 895 [1/1] (0.00ns)   --->   "%zext_ln130_31 = zext i65 %add_ln130_16" [d1.cpp:130]   --->   Operation 895 'zext' 'zext_ln130_31' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 896 [1/1] (1.09ns)   --->   "%add_ln130_17 = add i66 %zext_ln130_31, i66 %zext_ln130_30" [d1.cpp:130]   --->   Operation 896 'add' 'add_ln130_17' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 897 [1/1] (1.08ns)   --->   "%add_ln130_18 = add i65 %zext_ln130_24, i65 %zext_ln130_23" [d1.cpp:130]   --->   Operation 897 'add' 'add_ln130_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 898 [1/1] (0.00ns)   --->   "%zext_ln130_33 = zext i65 %add_ln130_18" [d1.cpp:130]   --->   Operation 898 'zext' 'zext_ln130_33' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 899 [1/1] (1.08ns)   --->   "%add_ln130_20 = add i65 %zext_ln130_29, i65 %zext_ln130_21" [d1.cpp:130]   --->   Operation 899 'add' 'add_ln130_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 900 [1/1] (0.00ns)   --->   "%zext_ln130_34 = zext i65 %add_ln130_20" [d1.cpp:130]   --->   Operation 900 'zext' 'zext_ln130_34' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 901 [1/1] (1.09ns)   --->   "%add_ln130_21 = add i66 %zext_ln130_34, i66 %zext_ln130_22" [d1.cpp:130]   --->   Operation 901 'add' 'add_ln130_21' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 902 [1/1] (0.00ns)   --->   "%zext_ln130_35 = zext i66 %add_ln130_21" [d1.cpp:130]   --->   Operation 902 'zext' 'zext_ln130_35' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 903 [1/1] (1.10ns)   --->   "%add_ln130_22 = add i67 %zext_ln130_35, i67 %zext_ln130_33" [d1.cpp:130]   --->   Operation 903 'add' 'add_ln130_22' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 904 '%mul_ln130_16 = mul i64 %zext_ln50_5, i64 %zext_ln114'
ST_25 : Operation 904 [1/1] (2.10ns)   --->   "%mul_ln130_16 = mul i64 %zext_ln50_5, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 904 'mul' 'mul_ln130_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 905 [1/1] (0.00ns)   --->   "%zext_ln130_38 = zext i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 905 'zext' 'zext_ln130_38' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 906 '%mul_ln130_17 = mul i64 %zext_ln50_6, i64 %zext_ln78_13'
ST_25 : Operation 906 [1/1] (2.10ns)   --->   "%mul_ln130_17 = mul i64 %zext_ln50_6, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 906 'mul' 'mul_ln130_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 907 [1/1] (0.00ns)   --->   "%zext_ln130_39 = zext i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 907 'zext' 'zext_ln130_39' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 908 '%mul_ln130_18 = mul i64 %zext_ln70, i64 %zext_ln78_11'
ST_25 : Operation 908 [1/1] (2.10ns)   --->   "%mul_ln130_18 = mul i64 %zext_ln70, i64 %zext_ln78_11" [d1.cpp:130]   --->   Operation 908 'mul' 'mul_ln130_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 909 [1/1] (0.00ns)   --->   "%zext_ln130_40 = zext i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 909 'zext' 'zext_ln130_40' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 910 '%mul_ln130_19 = mul i64 %zext_ln78, i64 %zext_ln78_12'
ST_25 : Operation 910 [1/1] (2.10ns)   --->   "%mul_ln130_19 = mul i64 %zext_ln78, i64 %zext_ln78_12" [d1.cpp:130]   --->   Operation 910 'mul' 'mul_ln130_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 911 [1/1] (0.00ns)   --->   "%zext_ln130_41 = zext i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 911 'zext' 'zext_ln130_41' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 912 '%mul_ln130_20 = mul i64 %zext_ln78_1, i64 %zext_ln78_9'
ST_25 : Operation 912 [1/1] (2.10ns)   --->   "%mul_ln130_20 = mul i64 %zext_ln78_1, i64 %zext_ln78_9" [d1.cpp:130]   --->   Operation 912 'mul' 'mul_ln130_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 913 [1/1] (0.00ns)   --->   "%zext_ln130_42 = zext i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 913 'zext' 'zext_ln130_42' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 914 [1/1] (0.00ns)   --->   "%trunc_ln130_24 = trunc i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 914 'trunc' 'trunc_ln130_24' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 915 [1/1] (0.00ns)   --->   "%trunc_ln130_25 = trunc i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 915 'trunc' 'trunc_ln130_25' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 916 [1/1] (0.00ns)   --->   "%trunc_ln130_28 = trunc i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 916 'trunc' 'trunc_ln130_28' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 917 [1/1] (0.00ns)   --->   "%trunc_ln130_29 = trunc i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 917 'trunc' 'trunc_ln130_29' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 918 [1/1] (0.00ns)   --->   "%trunc_ln130_30 = trunc i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 918 'trunc' 'trunc_ln130_30' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 919 [1/1] (1.08ns)   --->   "%add_ln130_23 = add i65 %zext_ln130_42, i65 %zext_ln130_40" [d1.cpp:130]   --->   Operation 919 'add' 'add_ln130_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 920 [1/1] (0.00ns)   --->   "%zext_ln130_44 = zext i65 %add_ln130_23" [d1.cpp:130]   --->   Operation 920 'zext' 'zext_ln130_44' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 921 [1/1] (1.09ns)   --->   "%add_ln130_24 = add i66 %zext_ln130_44, i66 %zext_ln130_41" [d1.cpp:130]   --->   Operation 921 'add' 'add_ln130_24' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 922 [1/1] (0.00ns)   --->   "%trunc_ln130_33 = trunc i66 %add_ln130_24" [d1.cpp:130]   --->   Operation 922 'trunc' 'trunc_ln130_33' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 923 [1/1] (1.08ns)   --->   "%add_ln130_26 = add i65 %zext_ln130_39, i65 %zext_ln130_38" [d1.cpp:130]   --->   Operation 923 'add' 'add_ln130_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 924 '%mul_ln130_21 = mul i64 %zext_ln50_4, i64 %zext_ln114'
ST_25 : Operation 924 [1/1] (2.10ns)   --->   "%mul_ln130_21 = mul i64 %zext_ln50_4, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 924 'mul' 'mul_ln130_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 925 '%mul_ln130_22 = mul i64 %zext_ln50_5, i64 %zext_ln78_13'
ST_25 : Operation 925 [1/1] (2.10ns)   --->   "%mul_ln130_22 = mul i64 %zext_ln50_5, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 925 'mul' 'mul_ln130_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 926 [1/1] (0.00ns)   --->   "%zext_ln130_51 = zext i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 926 'zext' 'zext_ln130_51' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 927 '%mul_ln130_23 = mul i64 %zext_ln50_6, i64 %zext_ln78_11'
ST_25 : Operation 927 [1/1] (2.10ns)   --->   "%mul_ln130_23 = mul i64 %zext_ln50_6, i64 %zext_ln78_11" [d1.cpp:130]   --->   Operation 927 'mul' 'mul_ln130_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 928 [1/1] (0.00ns)   --->   "%zext_ln130_52 = zext i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 928 'zext' 'zext_ln130_52' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 929 [1/1] (0.00ns)   --->   "%trunc_ln130_39 = trunc i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 929 'trunc' 'trunc_ln130_39' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 930 [1/1] (0.00ns)   --->   "%trunc_ln130_40 = trunc i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 930 'trunc' 'trunc_ln130_40' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 931 [1/1] (0.00ns)   --->   "%trunc_ln130_41 = trunc i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 931 'trunc' 'trunc_ln130_41' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 932 [1/1] (1.08ns)   --->   "%add_ln130_30 = add i65 %zext_ln130_51, i65 %zext_ln130_52" [d1.cpp:130]   --->   Operation 932 'add' 'add_ln130_30' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 933 '%mul_ln130_24 = mul i64 %zext_ln50_3, i64 %zext_ln114'
ST_25 : Operation 933 [1/1] (2.10ns)   --->   "%mul_ln130_24 = mul i64 %zext_ln50_3, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 933 'mul' 'mul_ln130_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 934 [1/1] (0.00ns)   --->   "%trunc_ln130_42 = trunc i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 934 'trunc' 'trunc_ln130_42' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 935 [1/1] (1.08ns)   --->   "%add_ln115 = add i64 %mul_ln115_6, i64 %mul_ln115_7" [d1.cpp:115]   --->   Operation 935 'add' 'add_ln115' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 936 [1/1] (1.08ns)   --->   "%add_ln115_1 = add i64 %mul_ln115_5, i64 %mul_ln115_3" [d1.cpp:115]   --->   Operation 936 'add' 'add_ln115_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 937 [1/1] (0.00ns)   --->   "%trunc_ln115 = trunc i64 %add_ln115" [d1.cpp:115]   --->   Operation 937 'trunc' 'trunc_ln115' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 938 [1/1] (0.00ns)   --->   "%trunc_ln115_1 = trunc i64 %add_ln115_1" [d1.cpp:115]   --->   Operation 938 'trunc' 'trunc_ln115_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 939 [1/1] (1.08ns)   --->   "%add_ln115_2 = add i64 %add_ln115_1, i64 %add_ln115" [d1.cpp:115]   --->   Operation 939 'add' 'add_ln115_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 940 [1/1] (1.08ns)   --->   "%add_ln115_3 = add i64 %mul_ln115, i64 %mul_ln115_1" [d1.cpp:115]   --->   Operation 940 'add' 'add_ln115_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 941 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_4 = add i64 %mul_ln115_4, i64 %mul_ln115_8" [d1.cpp:115]   --->   Operation 941 'add' 'add_ln115_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 942 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln115_5 = add i64 %add_ln115_4, i64 %mul_ln115_2" [d1.cpp:115]   --->   Operation 942 'add' 'add_ln115_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 943 [1/1] (0.00ns)   --->   "%trunc_ln115_2 = trunc i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 943 'trunc' 'trunc_ln115_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 944 [1/1] (0.00ns)   --->   "%trunc_ln115_3 = trunc i64 %add_ln115_5" [d1.cpp:115]   --->   Operation 944 'trunc' 'trunc_ln115_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 945 [1/1] (1.08ns)   --->   "%add_ln115_6 = add i64 %add_ln115_5, i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 945 'add' 'add_ln115_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 946 [1/1] (0.97ns)   --->   "%add_ln115_8 = add i28 %trunc_ln115_1, i28 %trunc_ln115" [d1.cpp:115]   --->   Operation 946 'add' 'add_ln115_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 947 [1/1] (0.97ns)   --->   "%add_ln115_9 = add i28 %trunc_ln115_3, i28 %trunc_ln115_2" [d1.cpp:115]   --->   Operation 947 'add' 'add_ln115_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 948 [1/1] (1.08ns)   --->   "%add_ln114 = add i64 %mul_ln114_6, i64 %mul_ln114_7" [d1.cpp:114]   --->   Operation 948 'add' 'add_ln114' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 949 [1/1] (1.08ns)   --->   "%add_ln114_1 = add i64 %mul_ln114_5, i64 %mul_ln114_4" [d1.cpp:114]   --->   Operation 949 'add' 'add_ln114_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 950 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i64 %add_ln114" [d1.cpp:114]   --->   Operation 950 'trunc' 'trunc_ln114' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 951 [1/1] (0.00ns)   --->   "%trunc_ln114_1 = trunc i64 %add_ln114_1" [d1.cpp:114]   --->   Operation 951 'trunc' 'trunc_ln114_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 952 [1/1] (1.08ns)   --->   "%add_ln114_2 = add i64 %add_ln114_1, i64 %add_ln114" [d1.cpp:114]   --->   Operation 952 'add' 'add_ln114_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 953 [1/1] (1.08ns)   --->   "%add_ln114_3 = add i64 %mul_ln114, i64 %mul_ln114_1" [d1.cpp:114]   --->   Operation 953 'add' 'add_ln114_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 954 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_4 = add i64 %mul_ln114_2, i64 %mul_ln114_8" [d1.cpp:114]   --->   Operation 954 'add' 'add_ln114_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 955 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln114_5 = add i64 %add_ln114_4, i64 %mul_ln114_3" [d1.cpp:114]   --->   Operation 955 'add' 'add_ln114_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 956 [1/1] (0.00ns)   --->   "%trunc_ln114_2 = trunc i64 %add_ln114_3" [d1.cpp:114]   --->   Operation 956 'trunc' 'trunc_ln114_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 957 [1/1] (0.00ns)   --->   "%trunc_ln114_3 = trunc i64 %add_ln114_5" [d1.cpp:114]   --->   Operation 957 'trunc' 'trunc_ln114_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 958 [1/1] (1.08ns)   --->   "%add_ln114_6 = add i64 %add_ln114_5, i64 %add_ln114_3" [d1.cpp:114]   --->   Operation 958 'add' 'add_ln114_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 959 [1/1] (0.97ns)   --->   "%add_ln114_8 = add i28 %trunc_ln114_1, i28 %trunc_ln114" [d1.cpp:114]   --->   Operation 959 'add' 'add_ln114_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 960 [1/1] (0.97ns)   --->   "%add_ln114_9 = add i28 %trunc_ln114_3, i28 %trunc_ln114_2" [d1.cpp:114]   --->   Operation 960 'add' 'add_ln114_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 961 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_1 = add i64 %add_ln126_16, i64 %add_ln126_7" [d1.cpp:126]   --->   Operation 961 'add' 'add_ln126_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 962 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln132 = add i64 %add_ln132_1, i64 %add_ln126_1" [d1.cpp:132]   --->   Operation 962 'add' 'add_ln132' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 963 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln132, i32 28, i32 63" [d1.cpp:133]   --->   Operation 963 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 964 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i36 %lshr_ln3" [d1.cpp:133]   --->   Operation 964 'zext' 'zext_ln133' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 965 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_2 = add i64 %add_ln125_16, i64 %add_ln125_7" [d1.cpp:125]   --->   Operation 965 'add' 'add_ln125_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 966 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_19 = add i28 %add_ln125_18, i28 %add_ln125_17" [d1.cpp:125]   --->   Operation 966 'add' 'add_ln125_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 967 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln132, i32 28, i32 55" [d1.cpp:133]   --->   Operation 967 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 968 [1/1] (1.08ns)   --->   "%add_ln133_1 = add i64 %add_ln78_3, i64 %zext_ln133" [d1.cpp:133]   --->   Operation 968 'add' 'add_ln133_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 969 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln133 = add i64 %add_ln133_1, i64 %add_ln125_2" [d1.cpp:133]   --->   Operation 969 'add' 'add_ln133' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 970 [1/1] (0.97ns)   --->   "%add_ln133_2 = add i28 %trunc_ln125_7, i28 %trunc_ln2" [d1.cpp:133]   --->   Operation 970 'add' 'add_ln133_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 971 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i28 %add_ln133_2, i28 %add_ln125_19" [d1.cpp:133]   --->   Operation 971 'add' 'out1_w_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 972 [1/1] (0.00ns)   --->   "%lshr_ln4 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln133, i32 28, i32 63" [d1.cpp:134]   --->   Operation 972 'partselect' 'lshr_ln4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 973 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i36 %lshr_ln4" [d1.cpp:134]   --->   Operation 973 'zext' 'zext_ln134' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 974 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_3 = add i64 %add_ln124_15, i64 %add_ln124_6" [d1.cpp:124]   --->   Operation 974 'add' 'add_ln124_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 975 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_18 = add i28 %add_ln124_17, i28 %add_ln124_16" [d1.cpp:124]   --->   Operation 975 'add' 'add_ln124_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 976 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln133, i32 28, i32 55" [d1.cpp:134]   --->   Operation 976 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 977 [1/1] (1.08ns)   --->   "%add_ln134_1 = add i64 %add_ln78_2, i64 %zext_ln134" [d1.cpp:134]   --->   Operation 977 'add' 'add_ln134_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 978 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln134 = add i64 %add_ln134_1, i64 %add_ln124_3" [d1.cpp:134]   --->   Operation 978 'add' 'add_ln134' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 979 [1/1] (0.97ns)   --->   "%add_ln134_2 = add i28 %trunc_ln124_7, i28 %trunc_ln3" [d1.cpp:134]   --->   Operation 979 'add' 'add_ln134_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 980 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i28 %add_ln134_2, i28 %add_ln124_18" [d1.cpp:134]   --->   Operation 980 'add' 'out1_w_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 981 [1/1] (0.00ns)   --->   "%lshr_ln5 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln134, i32 28, i32 63" [d1.cpp:135]   --->   Operation 981 'partselect' 'lshr_ln5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 982 [1/1] (0.00ns)   --->   "%zext_ln135 = zext i36 %lshr_ln5" [d1.cpp:135]   --->   Operation 982 'zext' 'zext_ln135' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 983 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_4 = add i64 %add_ln123_16, i64 %add_ln123_7" [d1.cpp:123]   --->   Operation 983 'add' 'add_ln123_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 984 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_19 = add i28 %add_ln123_18, i28 %add_ln123_17" [d1.cpp:123]   --->   Operation 984 'add' 'add_ln123_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 985 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln134, i32 28, i32 55" [d1.cpp:135]   --->   Operation 985 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 986 [1/1] (1.08ns)   --->   "%add_ln135_1 = add i64 %add_ln78_1, i64 %zext_ln135" [d1.cpp:135]   --->   Operation 986 'add' 'add_ln135_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 987 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln135 = add i64 %add_ln135_1, i64 %add_ln123_4" [d1.cpp:135]   --->   Operation 987 'add' 'add_ln135' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 988 [1/1] (0.97ns)   --->   "%add_ln135_2 = add i28 %trunc_ln123_7, i28 %trunc_ln4" [d1.cpp:135]   --->   Operation 988 'add' 'add_ln135_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 989 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i28 %add_ln135_2, i28 %add_ln123_19" [d1.cpp:135]   --->   Operation 989 'add' 'out1_w_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 990 [1/1] (0.00ns)   --->   "%lshr_ln6 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln135, i32 28, i32 63" [d1.cpp:136]   --->   Operation 990 'partselect' 'lshr_ln6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 991 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln135, i32 28, i32 55" [d1.cpp:136]   --->   Operation 991 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 992 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln136_1 = add i28 %add_ln122_8, i28 %add_ln122_7" [d1.cpp:136]   --->   Operation 992 'add' 'add_ln136_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 993 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i28 %add_ln136_1, i28 %trunc_ln5" [d1.cpp:136]   --->   Operation 993 'add' 'out1_w_6' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 994 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_1 = add i28 %trunc_ln130_1, i28 %trunc_ln130_10" [d1.cpp:138]   --->   Operation 994 'add' 'add_ln138_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 995 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_2 = add i28 %add_ln138_1, i28 %trunc_ln130_6" [d1.cpp:138]   --->   Operation 995 'add' 'add_ln138_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 996 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_6 = add i28 %add_ln138_5, i28 %add_ln138_2" [d1.cpp:138]   --->   Operation 996 'add' 'add_ln138_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 997 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_8 = add i28 %add_ln138_7, i28 %trunc_ln130" [d1.cpp:138]   --->   Operation 997 'add' 'add_ln138_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 998 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_9 = add i28 %trunc_ln130_4, i28 %trunc_ln130_12" [d1.cpp:138]   --->   Operation 998 'add' 'add_ln138_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 999 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_10 = add i28 %add_ln138_9, i28 %trunc_ln130_5" [d1.cpp:138]   --->   Operation 999 'add' 'add_ln138_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1000 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_11 = add i28 %add_ln138_10, i28 %add_ln138_8" [d1.cpp:138]   --->   Operation 1000 'add' 'add_ln138_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1001 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_3 = add i28 %add_ln138_11, i28 %add_ln138_6" [d1.cpp:138]   --->   Operation 1001 'add' 'add_ln138_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1002 [1/1] (0.97ns)   --->   "%add_ln139_1 = add i28 %trunc_ln130_16, i28 %trunc_ln130_15" [d1.cpp:139]   --->   Operation 1002 'add' 'add_ln139_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1003 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_3 = add i28 %trunc_ln130_18, i28 %trunc_ln130_21" [d1.cpp:139]   --->   Operation 1003 'add' 'add_ln139_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1004 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_4 = add i28 %add_ln139_3, i28 %trunc_ln130_17" [d1.cpp:139]   --->   Operation 1004 'add' 'add_ln139_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1005 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_5 = add i28 %add_ln139_4, i28 %add_ln139_1" [d1.cpp:139]   --->   Operation 1005 'add' 'add_ln139_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1006 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_6 = add i28 %trunc_ln130_22, i28 %trunc_ln130_23" [d1.cpp:139]   --->   Operation 1006 'add' 'add_ln139_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1007 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_7 = add i28 %trunc_ln119_1, i28 %trunc_ln130_11" [d1.cpp:139]   --->   Operation 1007 'add' 'add_ln139_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1008 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_8 = add i28 %add_ln139_7, i28 %trunc_ln119" [d1.cpp:139]   --->   Operation 1008 'add' 'add_ln139_8' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1009 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_9 = add i28 %add_ln139_8, i28 %add_ln139_6" [d1.cpp:139]   --->   Operation 1009 'add' 'add_ln139_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1010 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_2 = add i28 %add_ln139_9, i28 %add_ln139_5" [d1.cpp:139]   --->   Operation 1010 'add' 'add_ln139_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 1011 [1/1] (0.97ns)   --->   "%add_ln140 = add i28 %trunc_ln130_25, i28 %trunc_ln130_24" [d1.cpp:140]   --->   Operation 1011 'add' 'add_ln140' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1012 [1/1] (0.97ns)   --->   "%add_ln140_1 = add i28 %trunc_ln130_28, i28 %trunc_ln130_29" [d1.cpp:140]   --->   Operation 1012 'add' 'add_ln140_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1013 [1/1] (0.97ns)   --->   "%add_ln141 = add i28 %trunc_ln130_39, i28 %trunc_ln130_41" [d1.cpp:141]   --->   Operation 1013 'add' 'add_ln141' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.56>
ST_26 : Operation 1014 [1/1] (0.00ns)   --->   "%add256_21706_loc_load = load i64 %add256_21706_loc"   --->   Operation 1014 'load' 'add256_21706_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1015 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_7 = add i28 %trunc_ln116_1, i28 %trunc_ln116" [d1.cpp:116]   --->   Operation 1015 'add' 'add_ln116_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1016 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_6 = add i64 %add_ln116_5, i64 %add_ln116_2" [d1.cpp:116]   --->   Operation 1016 'add' 'add_ln116_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1017 [1/1] (0.00ns)   --->   "%trunc_ln116_4 = trunc i64 %add256_21706_loc_load" [d1.cpp:116]   --->   Operation 1017 'trunc' 'trunc_ln116_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1018 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln116_9 = add i28 %add_ln116_8, i28 %add_ln116_7" [d1.cpp:116]   --->   Operation 1018 'add' 'add_ln116_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1019 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_8 = add i64 %add_ln116_6, i64 %add256_21706_loc_load" [d1.cpp:116]   --->   Operation 1019 'add' 'arr_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1020 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_3 = add i28 %trunc_ln118_1, i28 %trunc_ln118" [d1.cpp:118]   --->   Operation 1020 'add' 'add_ln118_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1021 [1/1] (0.00ns)   --->   "%zext_ln130_32 = zext i66 %add_ln130_17" [d1.cpp:130]   --->   Operation 1021 'zext' 'zext_ln130_32' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1022 [1/1] (0.00ns)   --->   "%zext_ln130_36 = zext i67 %add_ln130_22" [d1.cpp:130]   --->   Operation 1022 'zext' 'zext_ln130_36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1023 [1/1] (1.10ns)   --->   "%add_ln130_19 = add i68 %zext_ln130_36, i68 %zext_ln130_32" [d1.cpp:130]   --->   Operation 1023 'add' 'add_ln130_19' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1024 [1/1] (0.00ns)   --->   "%trunc_ln130_19 = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 67" [d1.cpp:130]   --->   Operation 1024 'partselect' 'trunc_ln130_19' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1025 [1/1] (0.00ns)   --->   "%zext_ln130_37 = zext i40 %trunc_ln130_19" [d1.cpp:130]   --->   Operation 1025 'zext' 'zext_ln130_37' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1026 [1/1] (0.00ns)   --->   "%zext_ln130_43 = zext i64 %arr_10" [d1.cpp:130]   --->   Operation 1026 'zext' 'zext_ln130_43' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1027 [1/1] (0.00ns)   --->   "%trunc_ln130_20 = partselect i28 @_ssdm_op_PartSelect.i28.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1027 'partselect' 'trunc_ln130_20' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1028 [1/1] (0.00ns)   --->   "%zext_ln130_45 = zext i66 %add_ln130_24" [d1.cpp:130]   --->   Operation 1028 'zext' 'zext_ln130_45' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1029 [1/1] (0.00ns)   --->   "%zext_ln130_46 = zext i65 %add_ln130_26" [d1.cpp:130]   --->   Operation 1029 'zext' 'zext_ln130_46' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1030 [1/1] (1.08ns)   --->   "%add_ln130_27 = add i65 %zext_ln130_43, i65 %zext_ln130_37" [d1.cpp:130]   --->   Operation 1030 'add' 'add_ln130_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1031 [1/1] (0.00ns)   --->   "%zext_ln130_47 = zext i65 %add_ln130_27" [d1.cpp:130]   --->   Operation 1031 'zext' 'zext_ln130_47' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1032 [1/1] (1.09ns)   --->   "%add_ln130_44 = add i65 %add_ln130_27, i65 %add_ln130_26" [d1.cpp:130]   --->   Operation 1032 'add' 'add_ln130_44' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1033 [1/1] (1.09ns)   --->   "%add_ln130_28 = add i66 %zext_ln130_47, i66 %zext_ln130_46" [d1.cpp:130]   --->   Operation 1033 'add' 'add_ln130_28' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1034 [1/1] (0.00ns)   --->   "%trunc_ln130_38 = trunc i65 %add_ln130_44" [d1.cpp:130]   --->   Operation 1034 'trunc' 'trunc_ln130_38' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1035 [1/1] (0.00ns)   --->   "%zext_ln130_48 = zext i66 %add_ln130_28" [d1.cpp:130]   --->   Operation 1035 'zext' 'zext_ln130_48' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1036 [1/1] (1.09ns)   --->   "%add_ln130_42 = add i56 %trunc_ln130_38, i56 %trunc_ln130_33" [d1.cpp:130]   --->   Operation 1036 'add' 'add_ln130_42' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1037 [1/1] (1.10ns)   --->   "%add_ln130_25 = add i67 %zext_ln130_48, i67 %zext_ln130_45" [d1.cpp:130]   --->   Operation 1037 'add' 'add_ln130_25' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1038 [1/1] (0.00ns)   --->   "%trunc_ln130_26 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_25, i32 28, i32 66" [d1.cpp:130]   --->   Operation 1038 'partselect' 'trunc_ln130_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1039 [1/1] (0.00ns)   --->   "%zext_ln130_49 = zext i39 %trunc_ln130_26" [d1.cpp:130]   --->   Operation 1039 'zext' 'zext_ln130_49' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1040 [1/1] (0.00ns)   --->   "%zext_ln130_50 = zext i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 1040 'zext' 'zext_ln130_50' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1041 [1/1] (0.00ns)   --->   "%zext_ln130_53 = zext i64 %arr_9" [d1.cpp:130]   --->   Operation 1041 'zext' 'zext_ln130_53' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1042 [1/1] (0.00ns)   --->   "%trunc_ln130_27 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_42, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1042 'partselect' 'trunc_ln130_27' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1043 [1/1] (1.08ns)   --->   "%add_ln130_36 = add i65 %zext_ln130_53, i65 %zext_ln130_49" [d1.cpp:130]   --->   Operation 1043 'add' 'add_ln130_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1044 [1/1] (0.00ns)   --->   "%zext_ln130_55 = zext i65 %add_ln130_36" [d1.cpp:130]   --->   Operation 1044 'zext' 'zext_ln130_55' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1045 [1/1] (1.09ns)   --->   "%add_ln130_37 = add i66 %zext_ln130_55, i66 %zext_ln130_50" [d1.cpp:130]   --->   Operation 1045 'add' 'add_ln130_37' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1046 [1/1] (0.00ns)   --->   "%zext_ln136 = zext i36 %lshr_ln6" [d1.cpp:136]   --->   Operation 1046 'zext' 'zext_ln136' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1047 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_16 = add i64 %add_ln122_6, i64 %add_ln122_2" [d1.cpp:122]   --->   Operation 1047 'add' 'arr_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1048 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln136 = add i64 %arr_16, i64 %zext_ln136" [d1.cpp:136]   --->   Operation 1048 'add' 'add_ln136' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1049 [1/1] (0.00ns)   --->   "%trunc_ln137_2 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln136, i32 28, i32 63" [d1.cpp:137]   --->   Operation 1049 'partselect' 'trunc_ln137_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1050 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i36 %trunc_ln137_2" [d1.cpp:137]   --->   Operation 1050 'zext' 'zext_ln137' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1051 [1/1] (0.00ns)   --->   "%trunc_ln137_1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln136, i32 28, i32 55" [d1.cpp:137]   --->   Operation 1051 'partselect' 'trunc_ln137_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1052 [1/1] (0.97ns)   --->   "%out1_w_7 = add i28 %trunc_ln137_1, i28 %add_ln137" [d1.cpp:137]   --->   Operation 1052 'add' 'out1_w_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1053 [1/1] (0.00ns)   --->   "%zext_ln138 = zext i28 %add_ln137" [d1.cpp:138]   --->   Operation 1053 'zext' 'zext_ln138' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1054 [1/1] (1.02ns)   --->   "%add_ln138 = add i37 %zext_ln137, i37 %zext_ln138" [d1.cpp:138]   --->   Operation 1054 'add' 'add_ln138' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1055 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln138, i32 28, i32 36" [d1.cpp:138]   --->   Operation 1055 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1056 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_2 = add i28 %add_ln140_1, i28 %add_ln140" [d1.cpp:140]   --->   Operation 1056 'add' 'add_ln140_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1057 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_3 = add i28 %trunc_ln130_30, i28 %trunc_ln118_2" [d1.cpp:140]   --->   Operation 1057 'add' 'add_ln140_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1058 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_4 = add i28 %add_ln118_3, i28 %trunc_ln130_20" [d1.cpp:140]   --->   Operation 1058 'add' 'add_ln140_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1059 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_5 = add i28 %add_ln140_4, i28 %add_ln140_3" [d1.cpp:140]   --->   Operation 1059 'add' 'add_ln140_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1060 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_10 = add i28 %add_ln140_5, i28 %add_ln140_2" [d1.cpp:140]   --->   Operation 1060 'add' 'out1_w_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1061 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_1 = add i28 %add_ln141, i28 %trunc_ln130_40" [d1.cpp:141]   --->   Operation 1061 'add' 'add_ln141_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1062 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_2 = add i28 %add_ln117_5, i28 %trunc_ln130_27" [d1.cpp:141]   --->   Operation 1062 'add' 'add_ln141_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1063 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln141_3 = add i28 %add_ln141_2, i28 %trunc_ln117_2" [d1.cpp:141]   --->   Operation 1063 'add' 'add_ln141_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1064 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_11 = add i28 %add_ln141_3, i28 %add_ln141_1" [d1.cpp:141]   --->   Operation 1064 'add' 'out1_w_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 1065 [1/1] (0.00ns)   --->   "%add256_11703_loc_load = load i64 %add256_11703_loc"   --->   Operation 1065 'load' 'add256_11703_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1066 [1/1] (0.00ns)   --->   "%add2561700_loc_load = load i64 %add2561700_loc"   --->   Operation 1066 'load' 'add2561700_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1067 [1/1] (0.00ns)   --->   "%zext_ln130_54 = zext i65 %add_ln130_30" [d1.cpp:130]   --->   Operation 1067 'zext' 'zext_ln130_54' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1068 [1/1] (0.00ns)   --->   "%zext_ln130_56 = zext i66 %add_ln130_37" [d1.cpp:130]   --->   Operation 1068 'zext' 'zext_ln130_56' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1069 [1/1] (1.10ns)   --->   "%add_ln130_29 = add i67 %zext_ln130_56, i67 %zext_ln130_54" [d1.cpp:130]   --->   Operation 1069 'add' 'add_ln130_29' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1070 [1/1] (0.00ns)   --->   "%trunc_ln130_31 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 66" [d1.cpp:130]   --->   Operation 1070 'partselect' 'trunc_ln130_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1071 [1/1] (0.00ns)   --->   "%zext_ln130_57 = zext i39 %trunc_ln130_31" [d1.cpp:130]   --->   Operation 1071 'zext' 'zext_ln130_57' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1072 [1/1] (0.00ns)   --->   "%zext_ln130_58 = zext i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 1072 'zext' 'zext_ln130_58' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1073 [1/1] (0.00ns)   --->   "%zext_ln130_59 = zext i64 %arr_8" [d1.cpp:130]   --->   Operation 1073 'zext' 'zext_ln130_59' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1074 [1/1] (0.00ns)   --->   "%trunc_ln130_32 = partselect i28 @_ssdm_op_PartSelect.i28.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1074 'partselect' 'trunc_ln130_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1075 [1/1] (1.08ns)   --->   "%add_ln130_38 = add i65 %zext_ln130_58, i65 %zext_ln130_57" [d1.cpp:130]   --->   Operation 1075 'add' 'add_ln130_38' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1076 [1/1] (0.00ns)   --->   "%zext_ln130_60 = zext i65 %add_ln130_38" [d1.cpp:130]   --->   Operation 1076 'zext' 'zext_ln130_60' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1077 [1/1] (1.09ns)   --->   "%add_ln130_31 = add i66 %zext_ln130_60, i66 %zext_ln130_59" [d1.cpp:130]   --->   Operation 1077 'add' 'add_ln130_31' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1078 [1/1] (0.00ns)   --->   "%tmp_s = partselect i38 @_ssdm_op_PartSelect.i38.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 65" [d1.cpp:130]   --->   Operation 1078 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1079 [1/1] (0.00ns)   --->   "%zext_ln130_64 = zext i38 %tmp_s" [d1.cpp:130]   --->   Operation 1079 'zext' 'zext_ln130_64' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1080 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_7 = add i64 %add_ln115_6, i64 %add_ln115_2" [d1.cpp:115]   --->   Operation 1080 'add' 'add_ln115_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1081 [1/1] (0.00ns)   --->   "%trunc_ln115_4 = trunc i64 %add256_11703_loc_load" [d1.cpp:115]   --->   Operation 1081 'trunc' 'trunc_ln115_4' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1082 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_10 = add i28 %add_ln115_9, i28 %add_ln115_8" [d1.cpp:115]   --->   Operation 1082 'add' 'add_ln115_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1083 [1/1] (0.00ns)   --->   "%trunc_ln130_34 = partselect i28 @_ssdm_op_PartSelect.i28.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1083 'partselect' 'trunc_ln130_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1084 [1/1] (1.08ns)   --->   "%add_ln130_39 = add i64 %add256_11703_loc_load, i64 %zext_ln130_64" [d1.cpp:130]   --->   Operation 1084 'add' 'add_ln130_39' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1085 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_32 = add i64 %add_ln130_39, i64 %add_ln115_7" [d1.cpp:130]   --->   Operation 1085 'add' 'add_ln130_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1086 [1/1] (0.00ns)   --->   "%lshr_ln130_7 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 63" [d1.cpp:130]   --->   Operation 1086 'partselect' 'lshr_ln130_7' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1087 [1/1] (0.00ns)   --->   "%zext_ln130_65 = zext i36 %lshr_ln130_7" [d1.cpp:130]   --->   Operation 1087 'zext' 'zext_ln130_65' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1088 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_7 = add i64 %add_ln114_6, i64 %add_ln114_2" [d1.cpp:114]   --->   Operation 1088 'add' 'add_ln114_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1089 [1/1] (0.00ns)   --->   "%trunc_ln114_4 = trunc i64 %add2561700_loc_load" [d1.cpp:114]   --->   Operation 1089 'trunc' 'trunc_ln114_4' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1090 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_10 = add i28 %add_ln114_9, i28 %add_ln114_8" [d1.cpp:114]   --->   Operation 1090 'add' 'add_ln114_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1091 [1/1] (0.00ns)   --->   "%trunc_ln130_35 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1091 'partselect' 'trunc_ln130_35' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1092 [1/1] (1.08ns)   --->   "%add_ln130_40 = add i64 %add2561700_loc_load, i64 %zext_ln130_65" [d1.cpp:130]   --->   Operation 1092 'add' 'add_ln130_40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1093 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_33 = add i64 %add_ln130_40, i64 %add_ln114_7" [d1.cpp:130]   --->   Operation 1093 'add' 'add_ln130_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1094 [1/1] (0.00ns)   --->   "%trunc_ln130_36 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 63" [d1.cpp:130]   --->   Operation 1094 'partselect' 'trunc_ln130_36' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1095 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln142 = add i28 %add_ln116_9, i28 %trunc_ln116_4" [d1.cpp:142]   --->   Operation 1095 'add' 'add_ln142' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1096 [1/1] (0.97ns)   --->   "%add_ln142_1 = add i28 %trunc_ln130_42, i28 %trunc_ln130_32" [d1.cpp:142]   --->   Operation 1096 'add' 'add_ln142_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1097 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_12 = add i28 %add_ln142_1, i28 %add_ln142" [d1.cpp:142]   --->   Operation 1097 'add' 'out1_w_12' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1098 [1/1] (0.97ns)   --->   "%add_ln143 = add i28 %trunc_ln115_4, i28 %trunc_ln130_34" [d1.cpp:143]   --->   Operation 1098 'add' 'add_ln143' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1099 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_13 = add i28 %add_ln143, i28 %add_ln115_10" [d1.cpp:143]   --->   Operation 1099 'add' 'out1_w_13' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1100 [1/1] (0.97ns)   --->   "%add_ln144 = add i28 %trunc_ln114_4, i28 %trunc_ln130_35" [d1.cpp:144]   --->   Operation 1100 'add' 'add_ln144' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1101 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_14 = add i28 %add_ln144, i28 %add_ln114_10" [d1.cpp:144]   --->   Operation 1101 'add' 'out1_w_14' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1102 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 55" [d1.cpp:145]   --->   Operation 1102 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1103 [1/1] (0.00ns)   --->   "%sext_ln149 = sext i62 %trunc_ln149_1" [d1.cpp:149]   --->   Operation 1103 'sext' 'sext_ln149' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1104 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i32 %mem, i64 %sext_ln149" [d1.cpp:149]   --->   Operation 1104 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1105 [1/1] (7.30ns)   --->   "%empty_33 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %mem_addr_2, i32 16" [d1.cpp:149]   --->   Operation 1105 'writereq' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 4.24>
ST_28 : Operation 1106 [1/1] (0.00ns)   --->   "%zext_ln130_61 = zext i36 %trunc_ln130_36" [d1.cpp:130]   --->   Operation 1106 'zext' 'zext_ln130_61' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1107 [1/1] (0.00ns)   --->   "%zext_ln130_62 = zext i28 %add_ln130_41" [d1.cpp:130]   --->   Operation 1107 'zext' 'zext_ln130_62' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1108 [1/1] (1.02ns)   --->   "%add_ln130_34 = add i37 %zext_ln130_61, i37 %zext_ln130_62" [d1.cpp:130]   --->   Operation 1108 'add' 'add_ln130_34' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1109 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln130_34, i32 28, i32 36" [d1.cpp:130]   --->   Operation 1109 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1110 [1/1] (0.00ns)   --->   "%zext_ln130_66 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1110 'zext' 'zext_ln130_66' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1111 [1/1] (0.00ns)   --->   "%zext_ln130_67 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1111 'zext' 'zext_ln130_67' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1112 [1/1] (0.00ns)   --->   "%zext_ln130_68 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1112 'zext' 'zext_ln130_68' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1113 [1/1] (0.97ns)   --->   "%out1_w = add i28 %zext_ln130_68, i28 %add_ln130_3" [d1.cpp:130]   --->   Operation 1113 'add' 'out1_w' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1114 [1/1] (0.00ns)   --->   "%zext_ln131 = zext i28 %add_ln130_3" [d1.cpp:131]   --->   Operation 1114 'zext' 'zext_ln131' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1115 [1/1] (0.97ns)   --->   "%add_ln131 = add i29 %zext_ln130_67, i29 %zext_ln131" [d1.cpp:131]   --->   Operation 1115 'add' 'add_ln131' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1116 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln131, i32 28" [d1.cpp:131]   --->   Operation 1116 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1117 [1/1] (0.00ns)   --->   "%zext_ln131_1 = zext i1 %tmp" [d1.cpp:131]   --->   Operation 1117 'zext' 'zext_ln131_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1118 [1/1] (0.00ns)   --->   "%zext_ln131_2 = zext i28 %add_ln131_3" [d1.cpp:131]   --->   Operation 1118 'zext' 'zext_ln131_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1119 [1/1] (0.97ns)   --->   "%out1_w_1 = add i29 %zext_ln131_2, i29 %zext_ln131_1" [d1.cpp:131]   --->   Operation 1119 'add' 'out1_w_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1120 [1/1] (0.00ns)   --->   "%zext_ln138_1 = zext i9 %tmp_13" [d1.cpp:138]   --->   Operation 1120 'zext' 'zext_ln138_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1121 [1/1] (0.77ns)   --->   "%add_ln138_12 = add i10 %zext_ln138_1, i10 %zext_ln130_66" [d1.cpp:138]   --->   Operation 1121 'add' 'add_ln138_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1122 [1/1] (0.00ns)   --->   "%zext_ln138_2 = zext i10 %add_ln138_12" [d1.cpp:138]   --->   Operation 1122 'zext' 'zext_ln138_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1123 [1/1] (0.97ns)   --->   "%out1_w_8 = add i28 %zext_ln138_2, i28 %add_ln138_3" [d1.cpp:138]   --->   Operation 1123 'add' 'out1_w_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1124 [1/1] (0.00ns)   --->   "%zext_ln139 = zext i28 %add_ln138_3" [d1.cpp:139]   --->   Operation 1124 'zext' 'zext_ln139' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1125 [1/1] (0.00ns)   --->   "%zext_ln139_1 = zext i10 %add_ln138_12" [d1.cpp:139]   --->   Operation 1125 'zext' 'zext_ln139_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1126 [1/1] (0.97ns)   --->   "%add_ln139 = add i29 %zext_ln139_1, i29 %zext_ln139" [d1.cpp:139]   --->   Operation 1126 'add' 'add_ln139' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1127 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln139, i32 28" [d1.cpp:139]   --->   Operation 1127 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1128 [1/1] (0.00ns)   --->   "%zext_ln139_2 = zext i1 %tmp_5" [d1.cpp:139]   --->   Operation 1128 'zext' 'zext_ln139_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1129 [1/1] (0.00ns)   --->   "%zext_ln139_3 = zext i28 %add_ln139_2" [d1.cpp:139]   --->   Operation 1129 'zext' 'zext_ln139_3' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1130 [1/1] (0.97ns)   --->   "%out1_w_9 = add i29 %zext_ln139_3, i29 %zext_ln139_2" [d1.cpp:139]   --->   Operation 1130 'add' 'out1_w_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1131 [1/1] (0.97ns)   --->   "%out1_w_15 = add i28 %trunc_ln6, i28 %add_ln130_41" [d1.cpp:145]   --->   Operation 1131 'add' 'out1_w_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1132 [2/2] (0.48ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 1132 'call' 'call_ln149' <Predicate = true> <Delay = 0.48> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 0.00>
ST_29 : Operation 1133 [1/2] (0.00ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 1133 'call' 'call_ln149' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 1134 [5/5] (7.30ns)   --->   "%empty_34 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1134 'writeresp' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 1135 [4/5] (7.30ns)   --->   "%empty_34 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1135 'writeresp' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 1136 [3/5] (7.30ns)   --->   "%empty_34 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1136 'writeresp' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 1137 [2/5] (7.30ns)   --->   "%empty_34 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1137 'writeresp' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 1138 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d1.cpp:3]   --->   Operation 1138 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1139 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 16, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 1139 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1140 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 1140 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1141 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1141 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1142 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1142 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1143 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1143 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1144 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1144 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1145 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1145 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1146 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 1146 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1147 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 1147 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1148 [1/5] (7.30ns)   --->   "%empty_34 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1148 'writeresp' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 1149 [1/1] (0.00ns)   --->   "%ret_ln153 = ret" [d1.cpp:153]   --->   Operation 1149 'ret' 'ret_ln153' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d1.cpp:24) [59]  (0.000 ns)
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [60]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln24', d1.cpp:24) to 'test_Pipeline_ARRAY_1_READ' [61]  (1.216 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d1.cpp:31) [80]  (0.000 ns)
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d1.cpp:31) on port 'mem' (d1.cpp:31) [81]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln31', d1.cpp:31) to 'test_Pipeline_ARRAY_2_READ' [82]  (1.216 ns)

 <State 22>: 5.324ns
The critical path consists of the following:
	'load' operation ('arg1_r_13_loc_load') on local variable 'arg1_r_13_loc' [64]  (0.000 ns)
	multiplexor before operation 'mul' with delay (1.318 ns)
'mul' operation ('mul_ln50_14', d1.cpp:50) [131]  (2.102 ns)
	'add' operation ('add_ln50_7', d1.cpp:50) [186]  (1.085 ns)
	'add' operation ('add_ln50_8', d1.cpp:50) [187]  (0.819 ns)

 <State 23>: 6.956ns
The critical path consists of the following:
	'load' operation ('arg2_r_7_loc_load') on local variable 'arg2_r_7_loc' [91]  (0.000 ns)
	'add' operation ('add_ln78', d1.cpp:78) [155]  (1.016 ns)
	'add' operation ('add_ln80', d1.cpp:80) [159]  (1.018 ns)
	'mul' operation ('mul_ln80', d1.cpp:80) [161]  (3.410 ns)
	'add' operation ('arr', d1.cpp:78) [277]  (1.085 ns)
	'call' operation ('call_ln78', d1.cpp:78) to 'test_Pipeline_VITIS_LOOP_88_9' [348]  (0.427 ns)

 <State 24>: 7.141ns
The critical path consists of the following:
	'add' operation ('add_ln120_14', d1.cpp:120) [505]  (0.000 ns)
	'add' operation ('add_ln120_22', d1.cpp:120) [515]  (0.819 ns)
	'add' operation ('arr', d1.cpp:120) [518]  (0.819 ns)
	'add' operation ('add_ln130_1', d1.cpp:130) [614]  (1.085 ns)
	'add' operation ('add_ln130', d1.cpp:130) [615]  (0.819 ns)
	'add' operation ('add_ln131_2', d1.cpp:131) [866]  (1.085 ns)
	'add' operation ('add_ln131_1', d1.cpp:131) [867]  (0.819 ns)
	'add' operation ('add_ln132_2', d1.cpp:132) [905]  (0.975 ns)
	'add' operation ('out1_w', d1.cpp:132) [906]  (0.720 ns)

 <State 25>: 7.251ns
The critical path consists of the following:
	'add' operation ('add_ln126_1', d1.cpp:126) [899]  (0.000 ns)
	'add' operation ('add_ln132', d1.cpp:132) [904]  (0.819 ns)
	'add' operation ('add_ln133_1', d1.cpp:133) [938]  (1.085 ns)
	'add' operation ('add_ln133', d1.cpp:133) [939]  (0.819 ns)
	'add' operation ('add_ln134_1', d1.cpp:134) [972]  (1.085 ns)
	'add' operation ('add_ln134', d1.cpp:134) [973]  (0.819 ns)
	'add' operation ('add_ln135_1', d1.cpp:135) [1007]  (1.085 ns)
	'add' operation ('add_ln135', d1.cpp:135) [1008]  (0.819 ns)
	'add' operation ('out1_w', d1.cpp:136) [1030]  (0.720 ns)

 <State 26>: 6.564ns
The critical path consists of the following:
	'add' operation ('add_ln130_19', d1.cpp:130) [714]  (1.108 ns)
	'add' operation ('add_ln130_27', d1.cpp:130) [741]  (1.085 ns)
	'add' operation ('add_ln130_28', d1.cpp:130) [744]  (1.093 ns)
	'add' operation ('add_ln130_25', d1.cpp:130) [748]  (1.100 ns)
	'add' operation ('add_ln130_36', d1.cpp:130) [764]  (1.085 ns)
	'add' operation ('add_ln130_37', d1.cpp:130) [766]  (1.093 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d1.cpp:149) [1093]  (0.000 ns)
	bus request operation ('empty_33', d1.cpp:149) on port 'mem' (d1.cpp:149) [1094]  (7.300 ns)

 <State 28>: 4.240ns
The critical path consists of the following:
	'add' operation ('add_ln130_34', d1.cpp:130) [825]  (1.025 ns)
	'add' operation ('add_ln138_12', d1.cpp:138) [1051]  (0.776 ns)
	'add' operation ('add_ln139', d1.cpp:139) [1056]  (0.975 ns)
	'add' operation ('out1_w', d1.cpp:139) [1069]  (0.975 ns)
	'call' operation ('call_ln149', d1.cpp:149) to 'test_Pipeline_ARRAY_WRITE' [1095]  (0.489 ns)

 <State 29>: 0.000ns
The critical path consists of the following:

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_34', d1.cpp:153) on port 'mem' (d1.cpp:153) [1096]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_34', d1.cpp:153) on port 'mem' (d1.cpp:153) [1096]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_34', d1.cpp:153) on port 'mem' (d1.cpp:153) [1096]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_34', d1.cpp:153) on port 'mem' (d1.cpp:153) [1096]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_34', d1.cpp:153) on port 'mem' (d1.cpp:153) [1096]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
