

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Fri May 10 15:36:39 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_49 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      105|      105|  1.050 us|  1.050 us|  106|  106|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 35
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 36 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 37 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 38 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add2561262_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add2561262_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add256_1431265_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add256_1431265_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add256_2741268_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add256_2741268_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add256_31271_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add256_31271_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add256_41274_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add256_41274_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add256_11277_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add256_11277_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%add280_2_41282_loc = alloca i64 1"   --->   Operation 45 'alloca' 'add280_2_41282_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%add471283_loc = alloca i64 1"   --->   Operation 46 'alloca' 'add471283_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%add47_110991284_loc = alloca i64 1"   --->   Operation 47 'alloca' 'add47_110991284_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%add47_211341285_loc = alloca i64 1"   --->   Operation 48 'alloca' 'add47_211341285_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%add47_11286_loc = alloca i64 1"   --->   Operation 49 'alloca' 'add47_11286_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%add47_1_11287_loc = alloca i64 1"   --->   Operation 50 'alloca' 'add47_1_11287_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%add47_1_21288_loc = alloca i64 1"   --->   Operation 51 'alloca' 'add47_1_21288_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%add47_21289_loc = alloca i64 1"   --->   Operation 52 'alloca' 'add47_21289_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%add47_2_21291_loc = alloca i64 1"   --->   Operation 53 'alloca' 'add47_2_21291_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%add47_31292_loc = alloca i64 1"   --->   Operation 54 'alloca' 'add47_31292_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%add47_3_11293_loc = alloca i64 1"   --->   Operation 55 'alloca' 'add47_3_11293_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%add47_3_21294_loc = alloca i64 1"   --->   Operation 56 'alloca' 'add47_3_21294_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%add47_41295_loc = alloca i64 1"   --->   Operation 57 'alloca' 'add47_41295_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%add47_4_11296_loc = alloca i64 1"   --->   Operation 58 'alloca' 'add47_4_11296_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add47_4_21297_loc = alloca i64 1"   --->   Operation 59 'alloca' 'add47_4_21297_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 64 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 65 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 66 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg2_r_9_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg2_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg2_r_10_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg2_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg2_r_11_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg2_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg2_r_12_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg2_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg2_r_13_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg2_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg2_r_14_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg2_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg2_r_15_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg2_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 80 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 81 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 82 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 83 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 84 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%arg1_r_9_loc = alloca i64 1"   --->   Operation 85 'alloca' 'arg1_r_9_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%arg1_r_10_loc = alloca i64 1"   --->   Operation 86 'alloca' 'arg1_r_10_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%arg1_r_11_loc = alloca i64 1"   --->   Operation 87 'alloca' 'arg1_r_11_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%arg1_r_12_loc = alloca i64 1"   --->   Operation 88 'alloca' 'arg1_r_12_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%arg1_r_13_loc = alloca i64 1"   --->   Operation 89 'alloca' 'arg1_r_13_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%arg1_r_14_loc = alloca i64 1"   --->   Operation 90 'alloca' 'arg1_r_14_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_15_loc = alloca i64 1"   --->   Operation 91 'alloca' 'arg1_r_15_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln24_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg1_read, i32 2, i32 63" [d1.cpp:24]   --->   Operation 92 'partselect' 'trunc_ln24_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %arg2_read, i32 2, i32 63" [d1.cpp:31]   --->   Operation 93 'partselect' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln149_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out1_read, i32 2, i32 63" [d1.cpp:149]   --->   Operation 94 'partselect' 'trunc_ln149_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i62 %trunc_ln24_1" [d1.cpp:24]   --->   Operation 95 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln24" [d1.cpp:24]   --->   Operation 96 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 97 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 98 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 98 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 99 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 99 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 100 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 100 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 101 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 101 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 102 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 102 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 103 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 103 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 104 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr, i32 16" [d1.cpp:24]   --->   Operation 104 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 105 [2/2] (0.00ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 105 'call' 'call_ln24' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.21>
ST_11 : Operation 106 [1/2] (1.21ns)   --->   "%call_ln24 = call void @test_Pipeline_ARRAY_1_READ, i32 %mem, i62 %trunc_ln24_1, i32 %arg1_r_15_loc, i32 %arg1_r_14_loc, i32 %arg1_r_13_loc, i32 %arg1_r_12_loc, i32 %arg1_r_11_loc, i32 %arg1_r_10_loc, i32 %arg1_r_9_loc, i32 %arg1_r_8_loc, i32 %arg1_r_7_loc, i32 %arg1_r_6_loc, i32 %arg1_r_5_loc, i32 %arg1_r_4_loc, i32 %arg1_r_3_loc, i32 %arg1_r_2_loc, i32 %arg1_r_1_loc, i32 %arg1_r_loc" [d1.cpp:24]   --->   Operation 106 'call' 'call_ln24' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i62 %trunc_ln31_1" [d1.cpp:31]   --->   Operation 107 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 108 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i32 %mem, i64 %sext_ln31" [d1.cpp:31]   --->   Operation 108 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 109 [8/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 109 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 110 [7/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 110 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 111 [6/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 111 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 112 [5/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 112 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 113 [4/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 113 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 114 [3/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 114 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 115 [2/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 115 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 116 [1/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %mem_addr_1, i32 16" [d1.cpp:31]   --->   Operation 116 'readreq' 'empty_34' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 117 [2/2] (0.00ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 117 'call' 'call_ln31' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.21>
ST_21 : Operation 118 [1/2] (1.21ns)   --->   "%call_ln31 = call void @test_Pipeline_ARRAY_2_READ, i32 %mem, i62 %trunc_ln31_1, i32 %arg2_r_15_loc, i32 %arg2_r_14_loc, i32 %arg2_r_13_loc, i32 %arg2_r_12_loc, i32 %arg2_r_11_loc, i32 %arg2_r_10_loc, i32 %arg2_r_9_loc, i32 %arg2_r_8_loc, i32 %arg2_r_7_loc, i32 %arg2_r_6_loc, i32 %arg2_r_5_loc, i32 %arg2_r_4_loc, i32 %arg2_r_3_loc, i32 %arg2_r_2_loc, i32 %arg2_r_1_loc, i32 %arg2_r_loc" [d1.cpp:31]   --->   Operation 118 'call' 'call_ln31' <Predicate = true> <Delay = 1.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 0.00>
ST_22 : Operation 119 [1/1] (0.00ns)   --->   "%arg1_r_15_loc_load = load i32 %arg1_r_15_loc"   --->   Operation 119 'load' 'arg1_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%arg1_r_14_loc_load = load i32 %arg1_r_14_loc"   --->   Operation 120 'load' 'arg1_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%arg1_r_13_loc_load = load i32 %arg1_r_13_loc"   --->   Operation 121 'load' 'arg1_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%arg1_r_12_loc_load = load i32 %arg1_r_12_loc"   --->   Operation 122 'load' 'arg1_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%arg1_r_11_loc_load = load i32 %arg1_r_11_loc"   --->   Operation 123 'load' 'arg1_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%arg1_r_10_loc_load = load i32 %arg1_r_10_loc"   --->   Operation 124 'load' 'arg1_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [1/1] (0.00ns)   --->   "%arg1_r_9_loc_load = load i32 %arg1_r_9_loc"   --->   Operation 125 'load' 'arg1_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 126 [1/1] (0.00ns)   --->   "%arg2_r_15_loc_load = load i32 %arg2_r_15_loc"   --->   Operation 126 'load' 'arg2_r_15_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 127 [1/1] (0.00ns)   --->   "%arg2_r_14_loc_load = load i32 %arg2_r_14_loc"   --->   Operation 127 'load' 'arg2_r_14_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 128 [1/1] (0.00ns)   --->   "%arg2_r_13_loc_load = load i32 %arg2_r_13_loc"   --->   Operation 128 'load' 'arg2_r_13_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 129 [1/1] (0.00ns)   --->   "%arg2_r_12_loc_load = load i32 %arg2_r_12_loc"   --->   Operation 129 'load' 'arg2_r_12_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 130 [1/1] (0.00ns)   --->   "%arg2_r_11_loc_load = load i32 %arg2_r_11_loc"   --->   Operation 130 'load' 'arg2_r_11_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 131 [1/1] (0.00ns)   --->   "%arg2_r_10_loc_load = load i32 %arg2_r_10_loc"   --->   Operation 131 'load' 'arg2_r_10_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "%arg2_r_9_loc_load = load i32 %arg2_r_9_loc"   --->   Operation 132 'load' 'arg2_r_9_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [2/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_37_1, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg1_r_15_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg2_r_10_loc_load, i32 %arg2_r_9_loc_load, i64 %add47_4_21297_loc, i64 %add47_4_11296_loc, i64 %add47_41295_loc, i64 %add47_3_21294_loc, i64 %add47_3_11293_loc, i64 %add47_31292_loc, i64 %add47_2_21291_loc, i64 %add47_21289_loc, i64 %add47_1_21288_loc, i64 %add47_1_11287_loc, i64 %add47_11286_loc, i64 %add47_211341285_loc, i64 %add47_110991284_loc, i64 %add471283_loc"   --->   Operation 133 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 5.59>
ST_23 : Operation 134 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i32 %arg1_r_8_loc"   --->   Operation 134 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 135 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i32 %arg1_r_7_loc"   --->   Operation 135 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 136 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i32 %arg1_r_6_loc"   --->   Operation 136 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 137 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i32 %arg2_r_8_loc"   --->   Operation 137 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 138 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i32 %arg2_r_7_loc"   --->   Operation 138 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 139 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i32 %arg2_r_5_loc"   --->   Operation 139 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 140 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i32 %arg2_r_4_loc"   --->   Operation 140 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 141 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i32 %arg2_r_2_loc"   --->   Operation 141 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 142 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i32 %arg2_r_1_loc"   --->   Operation 142 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 143 [1/1] (0.00ns)   --->   "%conv36 = zext i32 %arg2_r_15_loc_load"   --->   Operation 143 'zext' 'conv36' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 144 [1/2] (0.79ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_37_1, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg1_r_15_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg2_r_10_loc_load, i32 %arg2_r_9_loc_load, i64 %add47_4_21297_loc, i64 %add47_4_11296_loc, i64 %add47_41295_loc, i64 %add47_3_21294_loc, i64 %add47_3_11293_loc, i64 %add47_31292_loc, i64 %add47_2_21291_loc, i64 %add47_21289_loc, i64 %add47_1_21288_loc, i64 %add47_1_11287_loc, i64 %add47_11286_loc, i64 %add47_211341285_loc, i64 %add47_110991284_loc, i64 %add471283_loc"   --->   Operation 144 'call' 'call_ln0' <Predicate = true> <Delay = 0.79> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i32 %arg1_r_15_loc_load" [d1.cpp:78]   --->   Operation 145 'zext' 'zext_ln78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln70_5 = zext i32 %arg1_r_15_loc_load" [d1.cpp:70]   --->   Operation 146 'zext' 'zext_ln70_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %arg2_r_8_loc_load" [d1.cpp:70]   --->   Operation 147 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i32 %arg2_r_7_loc_load" [d1.cpp:78]   --->   Operation 148 'zext' 'zext_ln78_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i32 %arg2_r_14_loc_load" [d1.cpp:80]   --->   Operation 149 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 150 '%mul_ln80 = mul i64 %zext_ln80, i64 %zext_ln78'
ST_23 : Operation 150 [1/1] (2.10ns)   --->   "%mul_ln80 = mul i64 %zext_ln80, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 150 'mul' 'mul_ln80' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln78_3 = zext i32 %arg2_r_5_loc_load" [d1.cpp:78]   --->   Operation 151 'zext' 'zext_ln78_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i32 %arg2_r_13_loc_load" [d1.cpp:80]   --->   Operation 152 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 153 '%mul_ln80_1 = mul i64 %zext_ln80_1, i64 %zext_ln78'
ST_23 : Operation 153 [1/1] (2.10ns)   --->   "%mul_ln80_1 = mul i64 %zext_ln80_1, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 153 'mul' 'mul_ln80_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln78_4 = zext i32 %arg2_r_4_loc_load" [d1.cpp:78]   --->   Operation 154 'zext' 'zext_ln78_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i32 %arg2_r_12_loc_load" [d1.cpp:80]   --->   Operation 155 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i32 %arg2_r_11_loc_load" [d1.cpp:80]   --->   Operation 156 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 157 '%mul_ln80_2 = mul i64 %zext_ln80_3, i64 %zext_ln78'
ST_23 : Operation 157 [1/1] (2.10ns)   --->   "%mul_ln80_2 = mul i64 %zext_ln80_3, i64 %zext_ln78" [d1.cpp:80]   --->   Operation 157 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln78_6 = zext i32 %arg2_r_2_loc_load" [d1.cpp:78]   --->   Operation 158 'zext' 'zext_ln78_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 159 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i32 %arg2_r_10_loc_load" [d1.cpp:80]   --->   Operation 159 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln78_7 = zext i32 %arg2_r_1_loc_load" [d1.cpp:78]   --->   Operation 160 'zext' 'zext_ln78_7' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 161 '%mul_ln78_6 = mul i64 %zext_ln78_7, i64 %zext_ln78'
ST_23 : Operation 161 [1/1] (2.10ns)   --->   "%mul_ln78_6 = mul i64 %zext_ln78_7, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 161 'mul' 'mul_ln78_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i32 %arg2_r_9_loc_load" [d1.cpp:80]   --->   Operation 162 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln78_8 = zext i32 %arg1_r_14_loc_load" [d1.cpp:78]   --->   Operation 163 'zext' 'zext_ln78_8' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 164 '%mul_ln80_3 = mul i64 %conv36, i64 %zext_ln78_8'
ST_23 : Operation 164 [1/1] (2.10ns)   --->   "%mul_ln80_3 = mul i64 %conv36, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 164 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 165 '%mul_ln80_4 = mul i64 %zext_ln80, i64 %zext_ln78_8'
ST_23 : Operation 165 [1/1] (2.10ns)   --->   "%mul_ln80_4 = mul i64 %zext_ln80, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 165 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 166 '%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78_8'
ST_23 : Operation 166 [1/1] (2.10ns)   --->   "%mul_ln80_5 = mul i64 %zext_ln80_1, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 166 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 167 '%mul_ln80_6 = mul i64 %zext_ln80_2, i64 %zext_ln78_8'
ST_23 : Operation 167 [1/1] (2.10ns)   --->   "%mul_ln80_6 = mul i64 %zext_ln80_2, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 167 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 168 '%mul_ln80_7 = mul i64 %zext_ln80_3, i64 %zext_ln78_8'
ST_23 : Operation 168 [1/1] (2.10ns)   --->   "%mul_ln80_7 = mul i64 %zext_ln80_3, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 168 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 169 '%mul_ln78_13 = mul i64 %zext_ln78_6, i64 %zext_ln78_8'
ST_23 : Operation 169 [1/1] (2.10ns)   --->   "%mul_ln78_13 = mul i64 %zext_ln78_6, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 169 'mul' 'mul_ln78_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 170 '%mul_ln80_8 = mul i64 %zext_ln80_4, i64 %zext_ln78_8'
ST_23 : Operation 170 [1/1] (2.10ns)   --->   "%mul_ln80_8 = mul i64 %zext_ln80_4, i64 %zext_ln78_8" [d1.cpp:80]   --->   Operation 170 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln78_9 = zext i32 %arg1_r_13_loc_load" [d1.cpp:78]   --->   Operation 171 'zext' 'zext_ln78_9' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 172 '%mul_ln80_9 = mul i64 %conv36, i64 %zext_ln78_9'
ST_23 : Operation 172 [1/1] (2.10ns)   --->   "%mul_ln80_9 = mul i64 %conv36, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 172 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 173 '%mul_ln78_16 = mul i64 %zext_ln78_1, i64 %zext_ln78_9'
ST_23 : Operation 173 [1/1] (2.10ns)   --->   "%mul_ln78_16 = mul i64 %zext_ln78_1, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 173 'mul' 'mul_ln78_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 174 '%mul_ln80_10 = mul i64 %zext_ln80, i64 %zext_ln78_9'
ST_23 : Operation 174 [1/1] (2.10ns)   --->   "%mul_ln80_10 = mul i64 %zext_ln80, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 174 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 175 '%mul_ln80_11 = mul i64 %zext_ln80_1, i64 %zext_ln78_9'
ST_23 : Operation 175 [1/1] (2.10ns)   --->   "%mul_ln80_11 = mul i64 %zext_ln80_1, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 175 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 176 '%mul_ln78_19 = mul i64 %zext_ln78_4, i64 %zext_ln78_9'
ST_23 : Operation 176 [1/1] (2.10ns)   --->   "%mul_ln78_19 = mul i64 %zext_ln78_4, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 176 'mul' 'mul_ln78_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 177 '%mul_ln80_12 = mul i64 %zext_ln80_2, i64 %zext_ln78_9'
ST_23 : Operation 177 [1/1] (2.10ns)   --->   "%mul_ln80_12 = mul i64 %zext_ln80_2, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 177 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 178 '%mul_ln80_13 = mul i64 %zext_ln80_3, i64 %zext_ln78_9'
ST_23 : Operation 178 [1/1] (2.10ns)   --->   "%mul_ln80_13 = mul i64 %zext_ln80_3, i64 %zext_ln78_9" [d1.cpp:80]   --->   Operation 178 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln78_10 = zext i32 %arg1_r_12_loc_load" [d1.cpp:78]   --->   Operation 179 'zext' 'zext_ln78_10' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 180 '%mul_ln80_14 = mul i64 %conv36, i64 %zext_ln78_10'
ST_23 : Operation 180 [1/1] (2.10ns)   --->   "%mul_ln80_14 = mul i64 %conv36, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 180 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 181 '%mul_ln78_23 = mul i64 %zext_ln70, i64 %zext_ln78_10'
ST_23 : Operation 181 [1/1] (2.10ns)   --->   "%mul_ln78_23 = mul i64 %zext_ln70, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 181 'mul' 'mul_ln78_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 182 '%mul_ln78_24 = mul i64 %zext_ln78_1, i64 %zext_ln78_10'
ST_23 : Operation 182 [1/1] (2.10ns)   --->   "%mul_ln78_24 = mul i64 %zext_ln78_1, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 182 'mul' 'mul_ln78_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 183 '%mul_ln80_15 = mul i64 %zext_ln80, i64 %zext_ln78_10'
ST_23 : Operation 183 [1/1] (2.10ns)   --->   "%mul_ln80_15 = mul i64 %zext_ln80, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 183 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 184 '%mul_ln78_26 = mul i64 %zext_ln78_3, i64 %zext_ln78_10'
ST_23 : Operation 184 [1/1] (2.10ns)   --->   "%mul_ln78_26 = mul i64 %zext_ln78_3, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 184 'mul' 'mul_ln78_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 185 '%mul_ln80_16 = mul i64 %zext_ln80_1, i64 %zext_ln78_10'
ST_23 : Operation 185 [1/1] (2.10ns)   --->   "%mul_ln80_16 = mul i64 %zext_ln80_1, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 185 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 186 '%mul_ln80_17 = mul i64 %zext_ln80_2, i64 %zext_ln78_10'
ST_23 : Operation 186 [1/1] (2.10ns)   --->   "%mul_ln80_17 = mul i64 %zext_ln80_2, i64 %zext_ln78_10" [d1.cpp:80]   --->   Operation 186 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln78_11 = zext i32 %arg1_r_11_loc_load" [d1.cpp:78]   --->   Operation 187 'zext' 'zext_ln78_11' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 188 '%mul_ln80_18 = mul i64 %conv36, i64 %zext_ln78_11'
ST_23 : Operation 188 [1/1] (2.10ns)   --->   "%mul_ln80_18 = mul i64 %conv36, i64 %zext_ln78_11" [d1.cpp:80]   --->   Operation 188 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 189 '%mul_ln78_30 = mul i64 %zext_ln80_5, i64 %zext_ln78_11'
ST_23 : Operation 189 [1/1] (2.10ns)   --->   "%mul_ln78_30 = mul i64 %zext_ln80_5, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 189 'mul' 'mul_ln78_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 190 '%mul_ln78_31 = mul i64 %zext_ln70, i64 %zext_ln78_11'
ST_23 : Operation 190 [1/1] (2.10ns)   --->   "%mul_ln78_31 = mul i64 %zext_ln70, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 190 'mul' 'mul_ln78_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 191 '%mul_ln78_32 = mul i64 %zext_ln78_1, i64 %zext_ln78_11'
ST_23 : Operation 191 [1/1] (2.10ns)   --->   "%mul_ln78_32 = mul i64 %zext_ln78_1, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 191 'mul' 'mul_ln78_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 192 '%mul_ln80_19 = mul i64 %zext_ln80, i64 %zext_ln78_11'
ST_23 : Operation 192 [1/1] (2.10ns)   --->   "%mul_ln80_19 = mul i64 %zext_ln80, i64 %zext_ln78_11" [d1.cpp:80]   --->   Operation 192 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 193 '%mul_ln80_20 = mul i64 %zext_ln80_1, i64 %zext_ln78_11'
ST_23 : Operation 193 [1/1] (2.10ns)   --->   "%mul_ln80_20 = mul i64 %zext_ln80_1, i64 %zext_ln78_11" [d1.cpp:80]   --->   Operation 193 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i32 %arg1_r_10_loc_load" [d1.cpp:70]   --->   Operation 194 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 195 '%mul_ln80_21 = mul i64 %conv36, i64 %zext_ln70_1'
ST_23 : Operation 195 [1/1] (2.10ns)   --->   "%mul_ln80_21 = mul i64 %conv36, i64 %zext_ln70_1" [d1.cpp:80]   --->   Operation 195 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 196 '%mul_ln78_37 = mul i64 %zext_ln80_4, i64 %zext_ln70_1'
ST_23 : Operation 196 [1/1] (2.10ns)   --->   "%mul_ln78_37 = mul i64 %zext_ln80_4, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 196 'mul' 'mul_ln78_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 197 '%mul_ln78_38 = mul i64 %zext_ln80_5, i64 %zext_ln70_1'
ST_23 : Operation 197 [1/1] (2.10ns)   --->   "%mul_ln78_38 = mul i64 %zext_ln80_5, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 197 'mul' 'mul_ln78_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 198 '%mul_ln78_39 = mul i64 %zext_ln70, i64 %zext_ln70_1'
ST_23 : Operation 198 [1/1] (2.10ns)   --->   "%mul_ln78_39 = mul i64 %zext_ln70, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 198 'mul' 'mul_ln78_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 199 '%mul_ln78_40 = mul i64 %zext_ln78_1, i64 %zext_ln70_1'
ST_23 : Operation 199 [1/1] (2.10ns)   --->   "%mul_ln78_40 = mul i64 %zext_ln78_1, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 199 'mul' 'mul_ln78_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 200 '%mul_ln80_22 = mul i64 %zext_ln80, i64 %zext_ln70_1'
ST_23 : Operation 200 [1/1] (2.10ns)   --->   "%mul_ln80_22 = mul i64 %zext_ln80, i64 %zext_ln70_1" [d1.cpp:80]   --->   Operation 200 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i32 %arg1_r_9_loc_load" [d1.cpp:70]   --->   Operation 201 'zext' 'zext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 202 '%mul_ln80_23 = mul i64 %conv36, i64 %zext_ln70_2'
ST_23 : Operation 202 [1/1] (2.10ns)   --->   "%mul_ln80_23 = mul i64 %conv36, i64 %zext_ln70_2" [d1.cpp:80]   --->   Operation 202 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 203 '%mul_ln78_45 = mul i64 %zext_ln80_4, i64 %zext_ln70_2'
ST_23 : Operation 203 [1/1] (2.10ns)   --->   "%mul_ln78_45 = mul i64 %zext_ln80_4, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 203 'mul' 'mul_ln78_45' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 204 '%mul_ln78_46 = mul i64 %zext_ln80_5, i64 %zext_ln70_2'
ST_23 : Operation 204 [1/1] (2.10ns)   --->   "%mul_ln78_46 = mul i64 %zext_ln80_5, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 204 'mul' 'mul_ln78_46' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 205 '%mul_ln78_47 = mul i64 %zext_ln70, i64 %zext_ln70_2'
ST_23 : Operation 205 [1/1] (2.10ns)   --->   "%mul_ln78_47 = mul i64 %zext_ln70, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 205 'mul' 'mul_ln78_47' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 206 '%mul_ln78_48 = mul i64 %zext_ln78_1, i64 %zext_ln70_2'
ST_23 : Operation 206 [1/1] (2.10ns)   --->   "%mul_ln78_48 = mul i64 %zext_ln78_1, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 206 'mul' 'mul_ln78_48' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 207 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i32 %arg1_r_8_loc_load" [d1.cpp:70]   --->   Operation 207 'zext' 'zext_ln70_3' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 208 '%mul_ln78_49 = mul i64 %zext_ln80, i64 %zext_ln70_3'
ST_23 : Operation 208 [1/1] (2.10ns)   --->   "%mul_ln78_49 = mul i64 %zext_ln80, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 208 'mul' 'mul_ln78_49' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 209 '%mul_ln78_50 = mul i64 %zext_ln80_1, i64 %zext_ln70_3'
ST_23 : Operation 209 [1/1] (2.10ns)   --->   "%mul_ln78_50 = mul i64 %zext_ln80_1, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 209 'mul' 'mul_ln78_50' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 210 '%mul_ln78_51 = mul i64 %zext_ln80_2, i64 %zext_ln70_3'
ST_23 : Operation 210 [1/1] (2.10ns)   --->   "%mul_ln78_51 = mul i64 %zext_ln80_2, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 210 'mul' 'mul_ln78_51' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 211 '%mul_ln78_53 = mul i64 %zext_ln80_4, i64 %zext_ln70_3'
ST_23 : Operation 211 [1/1] (2.10ns)   --->   "%mul_ln78_53 = mul i64 %zext_ln80_4, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 211 'mul' 'mul_ln78_53' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 212 '%mul_ln78_54 = mul i64 %zext_ln80_5, i64 %zext_ln70_3'
ST_23 : Operation 212 [1/1] (2.10ns)   --->   "%mul_ln78_54 = mul i64 %zext_ln80_5, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 212 'mul' 'mul_ln78_54' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 213 '%mul_ln78_55 = mul i64 %zext_ln70, i64 %zext_ln70_3'
ST_23 : Operation 213 [1/1] (2.10ns)   --->   "%mul_ln78_55 = mul i64 %zext_ln70, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 213 'mul' 'mul_ln78_55' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln78_12 = zext i32 %arg1_r_7_loc_load" [d1.cpp:78]   --->   Operation 214 'zext' 'zext_ln78_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln78_23 = zext i32 %arg1_r_7_loc_load" [d1.cpp:78]   --->   Operation 215 'zext' 'zext_ln78_23' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 216 [1/1] (1.01ns)   --->   "%add_ln78 = add i33 %zext_ln70_5, i33 %zext_ln78_23" [d1.cpp:78]   --->   Operation 216 'add' 'add_ln78' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 217 '%mul_ln78_58 = mul i64 %zext_ln80, i64 %zext_ln78_12'
ST_23 : Operation 217 [1/1] (2.10ns)   --->   "%mul_ln78_58 = mul i64 %zext_ln80, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 217 'mul' 'mul_ln78_58' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 218 '%mul_ln78_59 = mul i64 %zext_ln80_1, i64 %zext_ln78_12'
ST_23 : Operation 218 [1/1] (2.10ns)   --->   "%mul_ln78_59 = mul i64 %zext_ln80_1, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 218 'mul' 'mul_ln78_59' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 219 [1/1] (1.08ns)   --->   "%add_ln78_23 = add i64 %mul_ln78_30, i64 %mul_ln78_37" [d1.cpp:78]   --->   Operation 219 'add' 'add_ln78_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 220 [1/1] (1.08ns)   --->   "%add_ln78_24 = add i64 %add_ln78_23, i64 %mul_ln78_23" [d1.cpp:78]   --->   Operation 220 'add' 'add_ln78_24' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 221 [1/1] (1.08ns)   --->   "%add_ln78_35 = add i64 %mul_ln78_24, i64 %mul_ln78_31" [d1.cpp:78]   --->   Operation 221 'add' 'add_ln78_35' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 222 [1/1] (1.08ns)   --->   "%add_ln78_36 = add i64 %mul_ln78_38, i64 %mul_ln78_45" [d1.cpp:78]   --->   Operation 222 'add' 'add_ln78_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 223 [1/1] (1.08ns)   --->   "%add_ln78_37 = add i64 %add_ln78_36, i64 %add_ln78_35" [d1.cpp:78]   --->   Operation 223 'add' 'add_ln78_37' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 224 '%mul_ln78_61 = mul i64 %zext_ln80_3, i64 %zext_ln78_12'
ST_23 : Operation 224 [1/1] (2.10ns)   --->   "%mul_ln78_61 = mul i64 %zext_ln80_3, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 224 'mul' 'mul_ln78_61' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 225 [1/1] (1.08ns)   --->   "%add_ln78_48 = add i64 %mul_ln78_39, i64 %mul_ln78_46" [d1.cpp:78]   --->   Operation 225 'add' 'add_ln78_48' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 226 [1/1] (1.08ns)   --->   "%add_ln78_51 = add i64 %mul_ln78_53, i64 %mul_ln80_2" [d1.cpp:78]   --->   Operation 226 'add' 'add_ln78_51' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 227 '%mul_ln78_62 = mul i64 %zext_ln80_4, i64 %zext_ln78_12'
ST_23 : Operation 227 [1/1] (2.10ns)   --->   "%mul_ln78_62 = mul i64 %zext_ln80_4, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 227 'mul' 'mul_ln78_62' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 228 [1/1] (1.08ns)   --->   "%add_ln78_63 = add i64 %mul_ln78_47, i64 %mul_ln78_54" [d1.cpp:78]   --->   Operation 228 'add' 'add_ln78_63' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 229 [1/1] (1.08ns)   --->   "%add_ln78_66 = add i64 %mul_ln80_7, i64 %mul_ln80_12" [d1.cpp:78]   --->   Operation 229 'add' 'add_ln78_66' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 230 '%mul_ln78_63 = mul i64 %zext_ln80_5, i64 %zext_ln78_12'
ST_23 : Operation 230 [1/1] (2.10ns)   --->   "%mul_ln78_63 = mul i64 %zext_ln80_5, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 230 'mul' 'mul_ln78_63' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 231 [1/1] (1.08ns)   --->   "%add_ln78_73 = add i64 %mul_ln78_13, i64 %mul_ln78_6" [d1.cpp:78]   --->   Operation 231 'add' 'add_ln78_73' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 232 [1/1] (1.08ns)   --->   "%add_ln78_77 = add i64 %mul_ln78_48, i64 %mul_ln78_55" [d1.cpp:78]   --->   Operation 232 'add' 'add_ln78_77' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 233 [1/1] (1.08ns)   --->   "%add_ln78_80 = add i64 %mul_ln80_8, i64 %mul_ln80_13" [d1.cpp:78]   --->   Operation 233 'add' 'add_ln78_80' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln78_13 = zext i32 %arg1_r_6_loc_load" [d1.cpp:78]   --->   Operation 234 'zext' 'zext_ln78_13' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (1.31ns)   --->   Input mux for Operation 235 '%mul_ln80_35 = mul i64 %zext_ln80_4, i64 %zext_ln78_13'
ST_23 : Operation 235 [1/1] (2.10ns)   --->   "%mul_ln80_35 = mul i64 %zext_ln80_4, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 235 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 236 [1/1] (1.08ns)   --->   "%add_ln80_3 = add i64 %mul_ln80_35, i64 %mul_ln78_63" [d1.cpp:80]   --->   Operation 236 'add' 'add_ln80_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 237 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i64 %add_ln78_77" [d1.cpp:80]   --->   Operation 237 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 238 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i64 %add_ln80_3" [d1.cpp:80]   --->   Operation 238 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 239 [1/1] (1.08ns)   --->   "%add_ln80_4 = add i64 %add_ln80_3, i64 %add_ln78_77" [d1.cpp:80]   --->   Operation 239 'add' 'add_ln80_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 240 [1/1] (0.97ns)   --->   "%add_ln80_6 = add i28 %trunc_ln80_3, i28 %trunc_ln80_2" [d1.cpp:80]   --->   Operation 240 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 241 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i64 %add_ln78_73" [d1.cpp:80]   --->   Operation 241 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 242 [1/1] (1.08ns)   --->   "%add_ln127_4 = add i64 %mul_ln78_47, i64 %mul_ln78_40" [d1.cpp:127]   --->   Operation 242 'add' 'add_ln127_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 243 [1/1] (1.08ns)   --->   "%add_ln127_5 = add i64 %mul_ln78_62, i64 %mul_ln78_54" [d1.cpp:127]   --->   Operation 243 'add' 'add_ln127_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 244 [1/1] (0.00ns)   --->   "%trunc_ln127_2 = trunc i64 %add_ln127_4" [d1.cpp:127]   --->   Operation 244 'trunc' 'trunc_ln127_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 245 [1/1] (0.00ns)   --->   "%trunc_ln127_3 = trunc i64 %add_ln127_5" [d1.cpp:127]   --->   Operation 245 'trunc' 'trunc_ln127_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 246 [1/1] (1.08ns)   --->   "%add_ln127_6 = add i64 %add_ln127_5, i64 %add_ln127_4" [d1.cpp:127]   --->   Operation 246 'add' 'add_ln127_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 247 [1/1] (0.97ns)   --->   "%add_ln127_8 = add i28 %trunc_ln127_3, i28 %trunc_ln127_2" [d1.cpp:127]   --->   Operation 247 'add' 'add_ln127_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 248 [1/1] (1.08ns)   --->   "%add_ln126_4 = add i64 %mul_ln78_39, i64 %mul_ln78_32" [d1.cpp:126]   --->   Operation 248 'add' 'add_ln126_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 249 [1/1] (1.08ns)   --->   "%add_ln126_5 = add i64 %mul_ln78_53, i64 %mul_ln78_46" [d1.cpp:126]   --->   Operation 249 'add' 'add_ln126_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 250 [1/1] (0.00ns)   --->   "%trunc_ln126_2 = trunc i64 %add_ln126_4" [d1.cpp:126]   --->   Operation 250 'trunc' 'trunc_ln126_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln126_3 = trunc i64 %add_ln126_5" [d1.cpp:126]   --->   Operation 251 'trunc' 'trunc_ln126_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 252 [1/1] (1.08ns)   --->   "%add_ln126_6 = add i64 %add_ln126_5, i64 %add_ln126_4" [d1.cpp:126]   --->   Operation 252 'add' 'add_ln126_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 253 [1/1] (0.97ns)   --->   "%add_ln126_8 = add i28 %trunc_ln126_3, i28 %trunc_ln126_2" [d1.cpp:126]   --->   Operation 253 'add' 'add_ln126_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 254 [1/1] (0.00ns)   --->   "%trunc_ln125_2 = trunc i64 %add_ln78_35" [d1.cpp:125]   --->   Operation 254 'trunc' 'trunc_ln125_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln125_3 = trunc i64 %add_ln78_36" [d1.cpp:125]   --->   Operation 255 'trunc' 'trunc_ln125_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 256 [1/1] (0.97ns)   --->   "%add_ln125_5 = add i28 %trunc_ln125_3, i28 %trunc_ln125_2" [d1.cpp:125]   --->   Operation 256 'add' 'add_ln125_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 257 [1/1] (1.08ns)   --->   "%add_ln124_4 = add i64 %mul_ln78_23, i64 %mul_ln78_16" [d1.cpp:124]   --->   Operation 257 'add' 'add_ln124_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln124_2 = trunc i64 %add_ln124_4" [d1.cpp:124]   --->   Operation 258 'trunc' 'trunc_ln124_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 259 [1/1] (0.00ns)   --->   "%trunc_ln124_3 = trunc i64 %add_ln78_23" [d1.cpp:124]   --->   Operation 259 'trunc' 'trunc_ln124_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 260 [1/1] (1.08ns)   --->   "%add_ln124_5 = add i64 %add_ln78_23, i64 %add_ln124_4" [d1.cpp:124]   --->   Operation 260 'add' 'add_ln124_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 261 [1/1] (0.97ns)   --->   "%add_ln124_7 = add i28 %trunc_ln124_3, i28 %trunc_ln124_2" [d1.cpp:124]   --->   Operation 261 'add' 'add_ln124_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.94>
ST_24 : Operation 262 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i32 %arg1_r_5_loc"   --->   Operation 262 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 263 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i32 %arg1_r_4_loc"   --->   Operation 263 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 264 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i32 %arg1_r_3_loc"   --->   Operation 264 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 265 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i32 %arg1_r_2_loc"   --->   Operation 265 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 266 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i32 %arg1_r_1_loc"   --->   Operation 266 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 267 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i32 %arg1_r_loc"   --->   Operation 267 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 268 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i32 %arg2_r_6_loc"   --->   Operation 268 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 269 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i32 %arg2_r_3_loc"   --->   Operation 269 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 270 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i32 %arg2_r_loc"   --->   Operation 270 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 271 [1/1] (0.00ns)   --->   "%add47_21289_loc_load = load i64 %add47_21289_loc"   --->   Operation 271 'load' 'add47_21289_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 272 [1/1] (0.00ns)   --->   "%add47_1_21288_loc_load = load i64 %add47_1_21288_loc"   --->   Operation 272 'load' 'add47_1_21288_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 273 [1/1] (0.00ns)   --->   "%add47_1_11287_loc_load = load i64 %add47_1_11287_loc"   --->   Operation 273 'load' 'add47_1_11287_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 274 [1/1] (0.00ns)   --->   "%add47_11286_loc_load = load i64 %add47_11286_loc"   --->   Operation 274 'load' 'add47_11286_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 275 [1/1] (0.00ns)   --->   "%add47_211341285_loc_load = load i64 %add47_211341285_loc"   --->   Operation 275 'load' 'add47_211341285_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 276 [1/1] (0.00ns)   --->   "%add47_110991284_loc_load = load i64 %add47_110991284_loc"   --->   Operation 276 'load' 'add47_110991284_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 277 [1/1] (0.00ns)   --->   "%add471283_loc_load = load i64 %add471283_loc"   --->   Operation 277 'load' 'add471283_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln78_19 = zext i32 %arg2_r_8_loc_load" [d1.cpp:78]   --->   Operation 278 'zext' 'zext_ln78_19' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 279 '%mul_ln78 = mul i64 %zext_ln78_1, i64 %zext_ln78'
ST_24 : Operation 279 [1/1] (2.10ns)   --->   "%mul_ln78 = mul i64 %zext_ln78_1, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 279 'mul' 'mul_ln78' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln78_2 = zext i32 %arg2_r_6_loc_load" [d1.cpp:78]   --->   Operation 280 'zext' 'zext_ln78_2' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 281 '%mul_ln78_1 = mul i64 %zext_ln78_2, i64 %zext_ln78'
ST_24 : Operation 281 [1/1] (2.10ns)   --->   "%mul_ln78_1 = mul i64 %zext_ln78_2, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 281 'mul' 'mul_ln78_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 282 '%mul_ln78_2 = mul i64 %zext_ln78_3, i64 %zext_ln78'
ST_24 : Operation 282 [1/1] (2.10ns)   --->   "%mul_ln78_2 = mul i64 %zext_ln78_3, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 282 'mul' 'mul_ln78_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 283 '%mul_ln78_3 = mul i64 %zext_ln78_4, i64 %zext_ln78'
ST_24 : Operation 283 [1/1] (2.10ns)   --->   "%mul_ln78_3 = mul i64 %zext_ln78_4, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 283 'mul' 'mul_ln78_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 284 [1/1] (0.00ns)   --->   "%zext_ln78_5 = zext i32 %arg2_r_3_loc_load" [d1.cpp:78]   --->   Operation 284 'zext' 'zext_ln78_5' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 285 '%mul_ln78_4 = mul i64 %zext_ln78_5, i64 %zext_ln78'
ST_24 : Operation 285 [1/1] (2.10ns)   --->   "%mul_ln78_4 = mul i64 %zext_ln78_5, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 285 'mul' 'mul_ln78_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 286 '%mul_ln78_5 = mul i64 %zext_ln78_6, i64 %zext_ln78'
ST_24 : Operation 286 [1/1] (2.10ns)   --->   "%mul_ln78_5 = mul i64 %zext_ln78_6, i64 %zext_ln78" [d1.cpp:78]   --->   Operation 286 'mul' 'mul_ln78_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 287 '%mul_ln78_7 = mul i64 %zext_ln70, i64 %zext_ln78_8'
ST_24 : Operation 287 [1/1] (2.10ns)   --->   "%mul_ln78_7 = mul i64 %zext_ln70, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 287 'mul' 'mul_ln78_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 288 '%mul_ln78_8 = mul i64 %zext_ln78_1, i64 %zext_ln78_8'
ST_24 : Operation 288 [1/1] (2.10ns)   --->   "%mul_ln78_8 = mul i64 %zext_ln78_1, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 288 'mul' 'mul_ln78_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 289 '%mul_ln78_9 = mul i64 %zext_ln78_2, i64 %zext_ln78_8'
ST_24 : Operation 289 [1/1] (2.10ns)   --->   "%mul_ln78_9 = mul i64 %zext_ln78_2, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 289 'mul' 'mul_ln78_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 290 '%mul_ln78_10 = mul i64 %zext_ln78_3, i64 %zext_ln78_8'
ST_24 : Operation 290 [1/1] (2.10ns)   --->   "%mul_ln78_10 = mul i64 %zext_ln78_3, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 290 'mul' 'mul_ln78_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 291 '%mul_ln78_11 = mul i64 %zext_ln78_4, i64 %zext_ln78_8'
ST_24 : Operation 291 [1/1] (2.10ns)   --->   "%mul_ln78_11 = mul i64 %zext_ln78_4, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 291 'mul' 'mul_ln78_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 292 '%mul_ln78_12 = mul i64 %zext_ln78_5, i64 %zext_ln78_8'
ST_24 : Operation 292 [1/1] (2.10ns)   --->   "%mul_ln78_12 = mul i64 %zext_ln78_5, i64 %zext_ln78_8" [d1.cpp:78]   --->   Operation 292 'mul' 'mul_ln78_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 293 '%mul_ln78_14 = mul i64 %zext_ln80_5, i64 %zext_ln78_9'
ST_24 : Operation 293 [1/1] (2.10ns)   --->   "%mul_ln78_14 = mul i64 %zext_ln80_5, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 293 'mul' 'mul_ln78_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 294 '%mul_ln78_15 = mul i64 %zext_ln70, i64 %zext_ln78_9'
ST_24 : Operation 294 [1/1] (2.10ns)   --->   "%mul_ln78_15 = mul i64 %zext_ln70, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 294 'mul' 'mul_ln78_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 295 '%mul_ln78_17 = mul i64 %zext_ln78_2, i64 %zext_ln78_9'
ST_24 : Operation 295 [1/1] (2.10ns)   --->   "%mul_ln78_17 = mul i64 %zext_ln78_2, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 295 'mul' 'mul_ln78_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 296 '%mul_ln78_18 = mul i64 %zext_ln78_3, i64 %zext_ln78_9'
ST_24 : Operation 296 [1/1] (2.10ns)   --->   "%mul_ln78_18 = mul i64 %zext_ln78_3, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 296 'mul' 'mul_ln78_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 297 '%mul_ln78_20 = mul i64 %zext_ln78_5, i64 %zext_ln78_9'
ST_24 : Operation 297 [1/1] (2.10ns)   --->   "%mul_ln78_20 = mul i64 %zext_ln78_5, i64 %zext_ln78_9" [d1.cpp:78]   --->   Operation 297 'mul' 'mul_ln78_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 298 [1/1] (0.00ns)   --->   "%zext_ln78_20 = zext i32 %arg1_r_12_loc_load" [d1.cpp:78]   --->   Operation 298 'zext' 'zext_ln78_20' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 299 '%mul_ln78_21 = mul i64 %zext_ln80_4, i64 %zext_ln78_10'
ST_24 : Operation 299 [1/1] (2.10ns)   --->   "%mul_ln78_21 = mul i64 %zext_ln80_4, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 299 'mul' 'mul_ln78_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 300 '%mul_ln78_22 = mul i64 %zext_ln80_5, i64 %zext_ln78_10'
ST_24 : Operation 300 [1/1] (2.10ns)   --->   "%mul_ln78_22 = mul i64 %zext_ln80_5, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 300 'mul' 'mul_ln78_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 301 '%mul_ln78_25 = mul i64 %zext_ln78_2, i64 %zext_ln78_10'
ST_24 : Operation 301 [1/1] (2.10ns)   --->   "%mul_ln78_25 = mul i64 %zext_ln78_2, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 301 'mul' 'mul_ln78_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 302 '%mul_ln78_27 = mul i64 %zext_ln78_4, i64 %zext_ln78_10'
ST_24 : Operation 302 [1/1] (2.10ns)   --->   "%mul_ln78_27 = mul i64 %zext_ln78_4, i64 %zext_ln78_10" [d1.cpp:78]   --->   Operation 302 'mul' 'mul_ln78_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 303 '%mul_ln78_28 = mul i64 %zext_ln80_3, i64 %zext_ln78_11'
ST_24 : Operation 303 [1/1] (2.10ns)   --->   "%mul_ln78_28 = mul i64 %zext_ln80_3, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 303 'mul' 'mul_ln78_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 304 '%mul_ln78_29 = mul i64 %zext_ln80_4, i64 %zext_ln78_11'
ST_24 : Operation 304 [1/1] (2.10ns)   --->   "%mul_ln78_29 = mul i64 %zext_ln80_4, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 304 'mul' 'mul_ln78_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 305 '%mul_ln78_33 = mul i64 %zext_ln78_2, i64 %zext_ln78_11'
ST_24 : Operation 305 [1/1] (2.10ns)   --->   "%mul_ln78_33 = mul i64 %zext_ln78_2, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 305 'mul' 'mul_ln78_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 306 '%mul_ln78_34 = mul i64 %zext_ln78_3, i64 %zext_ln78_11'
ST_24 : Operation 306 [1/1] (2.10ns)   --->   "%mul_ln78_34 = mul i64 %zext_ln78_3, i64 %zext_ln78_11" [d1.cpp:78]   --->   Operation 306 'mul' 'mul_ln78_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 307 '%mul_ln78_35 = mul i64 %zext_ln80_2, i64 %zext_ln70_1'
ST_24 : Operation 307 [1/1] (2.10ns)   --->   "%mul_ln78_35 = mul i64 %zext_ln80_2, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 307 'mul' 'mul_ln78_35' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 308 '%mul_ln78_36 = mul i64 %zext_ln80_3, i64 %zext_ln70_1'
ST_24 : Operation 308 [1/1] (2.10ns)   --->   "%mul_ln78_36 = mul i64 %zext_ln80_3, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 308 'mul' 'mul_ln78_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 309 '%mul_ln78_41 = mul i64 %zext_ln78_2, i64 %zext_ln70_1'
ST_24 : Operation 309 [1/1] (2.10ns)   --->   "%mul_ln78_41 = mul i64 %zext_ln78_2, i64 %zext_ln70_1" [d1.cpp:78]   --->   Operation 309 'mul' 'mul_ln78_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln78_21 = zext i32 %arg1_r_9_loc_load" [d1.cpp:78]   --->   Operation 310 'zext' 'zext_ln78_21' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 311 '%mul_ln78_42 = mul i64 %zext_ln80_1, i64 %zext_ln70_2'
ST_24 : Operation 311 [1/1] (2.10ns)   --->   "%mul_ln78_42 = mul i64 %zext_ln80_1, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 311 'mul' 'mul_ln78_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 312 '%mul_ln78_43 = mul i64 %zext_ln80_2, i64 %zext_ln70_2'
ST_24 : Operation 312 [1/1] (2.10ns)   --->   "%mul_ln78_43 = mul i64 %zext_ln80_2, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 312 'mul' 'mul_ln78_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 313 '%mul_ln78_44 = mul i64 %zext_ln80_3, i64 %zext_ln70_2'
ST_24 : Operation 313 [1/1] (2.10ns)   --->   "%mul_ln78_44 = mul i64 %zext_ln80_3, i64 %zext_ln70_2" [d1.cpp:78]   --->   Operation 313 'mul' 'mul_ln78_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 314 [1/1] (0.00ns)   --->   "%zext_ln78_22 = zext i32 %arg1_r_8_loc_load" [d1.cpp:78]   --->   Operation 314 'zext' 'zext_ln78_22' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 315 '%mul_ln78_52 = mul i64 %zext_ln80_3, i64 %zext_ln70_3'
ST_24 : Operation 315 [1/1] (2.10ns)   --->   "%mul_ln78_52 = mul i64 %zext_ln80_3, i64 %zext_ln70_3" [d1.cpp:78]   --->   Operation 315 'mul' 'mul_ln78_52' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 316 '%mul_ln78_56 = mul i64 %conv36, i64 %zext_ln78_12'
ST_24 : Operation 316 [1/1] (2.10ns)   --->   "%mul_ln78_56 = mul i64 %conv36, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 316 'mul' 'mul_ln78_56' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 317 [1/1] (0.00ns)   --->   "%zext_ln78_24 = zext i33 %add_ln78" [d1.cpp:78]   --->   Operation 317 'zext' 'zext_ln78_24' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.47ns)   --->   Input mux for Operation 318 '%mul_ln78_57 = mul i64 %zext_ln78_24, i64 %conv36'
ST_24 : Operation 318 [1/1] (2.93ns)   --->   "%mul_ln78_57 = mul i64 %zext_ln78_24, i64 %conv36" [d1.cpp:78]   --->   Operation 318 'mul' 'mul_ln78_57' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 319 [1/1] (1.08ns)   --->   "%add_ln78_1 = add i64 %mul_ln78_7, i64 %mul_ln78" [d1.cpp:78]   --->   Operation 319 'add' 'add_ln78_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 320 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_2 = add i64 %mul_ln78_21, i64 %mul_ln78_28" [d1.cpp:78]   --->   Operation 320 'add' 'add_ln78_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 321 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_3 = add i64 %add_ln78_2, i64 %mul_ln78_14" [d1.cpp:78]   --->   Operation 321 'add' 'add_ln78_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 322 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_4 = add i64 %add_ln78_3, i64 %add_ln78_1" [d1.cpp:78]   --->   Operation 322 'add' 'add_ln78_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 323 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_5 = add i64 %mul_ln78_35, i64 %mul_ln78_42" [d1.cpp:78]   --->   Operation 323 'add' 'add_ln78_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 324 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_6 = add i64 %mul_ln78_57, i64 %add471283_loc_load" [d1.cpp:78]   --->   Operation 324 'add' 'add_ln78_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 325 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_7 = add i64 %add_ln78_6, i64 %mul_ln78_49" [d1.cpp:78]   --->   Operation 325 'add' 'add_ln78_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 326 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_8 = add i64 %add_ln78_7, i64 %add_ln78_5" [d1.cpp:78]   --->   Operation 326 'add' 'add_ln78_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 327 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr = add i64 %add_ln78_8, i64 %add_ln78_4" [d1.cpp:78]   --->   Operation 327 'add' 'arr' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 328 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_10 = add i64 %mul_ln78_1, i64 %mul_ln78_15" [d1.cpp:78]   --->   Operation 328 'add' 'add_ln78_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 329 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_11 = add i64 %add_ln78_10, i64 %mul_ln78_8" [d1.cpp:78]   --->   Operation 329 'add' 'add_ln78_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 330 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_12 = add i64 %mul_ln78_29, i64 %mul_ln78_36" [d1.cpp:78]   --->   Operation 330 'add' 'add_ln78_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 331 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_13 = add i64 %add_ln78_12, i64 %mul_ln78_22" [d1.cpp:78]   --->   Operation 331 'add' 'add_ln78_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 332 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_14 = add i64 %add_ln78_13, i64 %add_ln78_11" [d1.cpp:78]   --->   Operation 332 'add' 'add_ln78_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 333 [1/1] (1.08ns)   --->   "%add_ln78_15 = add i64 %mul_ln78_50, i64 %mul_ln80" [d1.cpp:78]   --->   Operation 333 'add' 'add_ln78_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 334 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_16 = add i64 %add_ln78_15, i64 %mul_ln78_43" [d1.cpp:78]   --->   Operation 334 'add' 'add_ln78_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 335 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_17 = add i64 %mul_ln80_3, i64 %add47_110991284_loc_load" [d1.cpp:78]   --->   Operation 335 'add' 'add_ln78_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 336 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_18 = add i64 %add_ln78_17, i64 %mul_ln78_58" [d1.cpp:78]   --->   Operation 336 'add' 'add_ln78_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 337 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_19 = add i64 %add_ln78_18, i64 %add_ln78_16" [d1.cpp:78]   --->   Operation 337 'add' 'add_ln78_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 338 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_1 = add i64 %add_ln78_19, i64 %add_ln78_14" [d1.cpp:78]   --->   Operation 338 'add' 'arr_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_21 = add i64 %mul_ln78_2, i64 %mul_ln78_16" [d1.cpp:78]   --->   Operation 339 'add' 'add_ln78_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 340 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_22 = add i64 %add_ln78_21, i64 %mul_ln78_9" [d1.cpp:78]   --->   Operation 340 'add' 'add_ln78_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 341 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_25 = add i64 %add_ln78_24, i64 %add_ln78_22" [d1.cpp:78]   --->   Operation 341 'add' 'add_ln78_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 342 [1/1] (1.08ns)   --->   "%add_ln78_26 = add i64 %mul_ln78_51, i64 %mul_ln80_1" [d1.cpp:78]   --->   Operation 342 'add' 'add_ln78_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_27 = add i64 %add_ln78_26, i64 %mul_ln78_44" [d1.cpp:78]   --->   Operation 343 'add' 'add_ln78_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 344 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_28 = add i64 %mul_ln78_59, i64 %mul_ln80_4" [d1.cpp:78]   --->   Operation 344 'add' 'add_ln78_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 345 [1/1] (1.08ns)   --->   "%add_ln78_29 = add i64 %mul_ln80_9, i64 %add47_211341285_loc_load" [d1.cpp:78]   --->   Operation 345 'add' 'add_ln78_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 346 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_30 = add i64 %add_ln78_29, i64 %add_ln78_28" [d1.cpp:78]   --->   Operation 346 'add' 'add_ln78_30' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 347 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_31 = add i64 %add_ln78_30, i64 %add_ln78_27" [d1.cpp:78]   --->   Operation 347 'add' 'add_ln78_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 348 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_2 = add i64 %add_ln78_31, i64 %add_ln78_25" [d1.cpp:78]   --->   Operation 348 'add' 'arr_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 349 '%mul_ln78_60 = mul i64 %zext_ln80_2, i64 %zext_ln78_12'
ST_24 : Operation 349 [1/1] (2.10ns)   --->   "%mul_ln78_60 = mul i64 %zext_ln80_2, i64 %zext_ln78_12" [d1.cpp:78]   --->   Operation 349 'mul' 'mul_ln78_60' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 350 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_33 = add i64 %mul_ln78_3, i64 %mul_ln78_17" [d1.cpp:78]   --->   Operation 350 'add' 'add_ln78_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 351 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_34 = add i64 %add_ln78_33, i64 %mul_ln78_10" [d1.cpp:78]   --->   Operation 351 'add' 'add_ln78_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 352 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_38 = add i64 %add_ln78_37, i64 %add_ln78_34" [d1.cpp:78]   --->   Operation 352 'add' 'add_ln78_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (0.57ns)   --->   Input mux for Operation 353 '%mul_ln78_64 = mul i64 %zext_ln80_2, i64 %zext_ln78_24'
ST_24 : Operation 353 [1/1] (2.84ns)   --->   "%mul_ln78_64 = mul i64 %zext_ln80_2, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 353 'mul' 'mul_ln78_64' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 354 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_39 = add i64 %mul_ln78_64, i64 %mul_ln78_52" [d1.cpp:78]   --->   Operation 354 'add' 'add_ln78_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 355 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_40 = add i64 %mul_ln80_5, i64 %mul_ln80_10" [d1.cpp:78]   --->   Operation 355 'add' 'add_ln78_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 356 [1/1] (1.08ns)   --->   "%add_ln78_41 = add i64 %mul_ln80_14, i64 %add47_11286_loc_load" [d1.cpp:78]   --->   Operation 356 'add' 'add_ln78_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 357 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_42 = add i64 %add_ln78_41, i64 %add_ln78_40" [d1.cpp:78]   --->   Operation 357 'add' 'add_ln78_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 358 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_43 = add i64 %add_ln78_42, i64 %add_ln78_39" [d1.cpp:78]   --->   Operation 358 'add' 'add_ln78_43' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 359 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_3 = add i64 %add_ln78_43, i64 %add_ln78_38" [d1.cpp:78]   --->   Operation 359 'add' 'arr_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 360 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_45 = add i64 %mul_ln78_4, i64 %mul_ln78_18" [d1.cpp:78]   --->   Operation 360 'add' 'add_ln78_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 361 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_46 = add i64 %add_ln78_45, i64 %mul_ln78_11" [d1.cpp:78]   --->   Operation 361 'add' 'add_ln78_46' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 362 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_47 = add i64 %mul_ln78_25, i64 %mul_ln78_32" [d1.cpp:78]   --->   Operation 362 'add' 'add_ln78_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 363 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_49 = add i64 %add_ln78_48, i64 %add_ln78_47" [d1.cpp:78]   --->   Operation 363 'add' 'add_ln78_49' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 364 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_50 = add i64 %add_ln78_49, i64 %add_ln78_46" [d1.cpp:78]   --->   Operation 364 'add' 'add_ln78_50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 365 [1/1] (1.08ns)   --->   "%add_ln78_52 = add i64 %mul_ln78_61, i64 %mul_ln80_6" [d1.cpp:78]   --->   Operation 365 'add' 'add_ln78_52' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 366 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_53 = add i64 %add_ln78_52, i64 %add_ln78_51" [d1.cpp:78]   --->   Operation 366 'add' 'add_ln78_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_54 = add i64 %mul_ln80_11, i64 %mul_ln80_15" [d1.cpp:78]   --->   Operation 367 'add' 'add_ln78_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 368 [1/1] (1.08ns)   --->   "%add_ln78_55 = add i64 %mul_ln80_18, i64 %add47_1_11287_loc_load" [d1.cpp:78]   --->   Operation 368 'add' 'add_ln78_55' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 369 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_56 = add i64 %add_ln78_55, i64 %add_ln78_54" [d1.cpp:78]   --->   Operation 369 'add' 'add_ln78_56' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 370 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_57 = add i64 %add_ln78_56, i64 %add_ln78_53" [d1.cpp:78]   --->   Operation 370 'add' 'add_ln78_57' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 371 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_4 = add i64 %add_ln78_57, i64 %add_ln78_50" [d1.cpp:78]   --->   Operation 371 'add' 'arr_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 372 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_59 = add i64 %mul_ln78_12, i64 %mul_ln78_5" [d1.cpp:78]   --->   Operation 372 'add' 'add_ln78_59' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 373 [1/1] (1.08ns)   --->   "%add_ln78_60 = add i64 %mul_ln78_19, i64 %mul_ln78_26" [d1.cpp:78]   --->   Operation 373 'add' 'add_ln78_60' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 374 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_61 = add i64 %add_ln78_60, i64 %add_ln78_59" [d1.cpp:78]   --->   Operation 374 'add' 'add_ln78_61' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 375 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_62 = add i64 %mul_ln78_33, i64 %mul_ln78_40" [d1.cpp:78]   --->   Operation 375 'add' 'add_ln78_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 376 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_64 = add i64 %add_ln78_63, i64 %add_ln78_62" [d1.cpp:78]   --->   Operation 376 'add' 'add_ln78_64' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 377 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_65 = add i64 %add_ln78_64, i64 %add_ln78_61" [d1.cpp:78]   --->   Operation 377 'add' 'add_ln78_65' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (0.57ns)   --->   Input mux for Operation 378 '%mul_ln78_65 = mul i64 %zext_ln80_4, i64 %zext_ln78_24'
ST_24 : Operation 378 [1/1] (2.84ns)   --->   "%mul_ln78_65 = mul i64 %zext_ln80_4, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 378 'mul' 'mul_ln78_65' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 379 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_67 = add i64 %add_ln78_66, i64 %mul_ln78_65" [d1.cpp:78]   --->   Operation 379 'add' 'add_ln78_67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 380 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_68 = add i64 %mul_ln80_16, i64 %mul_ln80_19" [d1.cpp:78]   --->   Operation 380 'add' 'add_ln78_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 381 [1/1] (1.08ns)   --->   "%add_ln78_69 = add i64 %mul_ln80_21, i64 %add47_1_21288_loc_load" [d1.cpp:78]   --->   Operation 381 'add' 'add_ln78_69' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 382 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_70 = add i64 %add_ln78_69, i64 %add_ln78_68" [d1.cpp:78]   --->   Operation 382 'add' 'add_ln78_70' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 383 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_71 = add i64 %add_ln78_70, i64 %add_ln78_67" [d1.cpp:78]   --->   Operation 383 'add' 'add_ln78_71' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 384 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_5 = add i64 %add_ln78_71, i64 %add_ln78_65" [d1.cpp:78]   --->   Operation 384 'add' 'arr_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 385 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_74 = add i64 %mul_ln78_20, i64 %mul_ln78_27" [d1.cpp:78]   --->   Operation 385 'add' 'add_ln78_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 386 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_75 = add i64 %add_ln78_74, i64 %add_ln78_73" [d1.cpp:78]   --->   Operation 386 'add' 'add_ln78_75' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 387 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_76 = add i64 %mul_ln78_34, i64 %mul_ln78_41" [d1.cpp:78]   --->   Operation 387 'add' 'add_ln78_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 388 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_78 = add i64 %add_ln78_77, i64 %add_ln78_76" [d1.cpp:78]   --->   Operation 388 'add' 'add_ln78_78' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 389 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_79 = add i64 %add_ln78_78, i64 %add_ln78_75" [d1.cpp:78]   --->   Operation 389 'add' 'add_ln78_79' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (0.57ns)   --->   Input mux for Operation 390 '%mul_ln78_66 = mul i64 %zext_ln80_5, i64 %zext_ln78_24'
ST_24 : Operation 390 [1/1] (2.84ns)   --->   "%mul_ln78_66 = mul i64 %zext_ln80_5, i64 %zext_ln78_24" [d1.cpp:78]   --->   Operation 390 'mul' 'mul_ln78_66' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 391 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_81 = add i64 %add_ln78_80, i64 %mul_ln78_66" [d1.cpp:78]   --->   Operation 391 'add' 'add_ln78_81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 392 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_82 = add i64 %mul_ln80_17, i64 %mul_ln80_20" [d1.cpp:78]   --->   Operation 392 'add' 'add_ln78_82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 393 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_83 = add i64 %mul_ln80_23, i64 %add47_21289_loc_load" [d1.cpp:78]   --->   Operation 393 'add' 'add_ln78_83' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 394 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_84 = add i64 %add_ln78_83, i64 %mul_ln80_22" [d1.cpp:78]   --->   Operation 394 'add' 'add_ln78_84' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 395 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_85 = add i64 %add_ln78_84, i64 %add_ln78_82" [d1.cpp:78]   --->   Operation 395 'add' 'add_ln78_85' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 396 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln78_86 = add i64 %add_ln78_85, i64 %add_ln78_81" [d1.cpp:78]   --->   Operation 396 'add' 'add_ln78_86' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 397 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_6 = add i64 %add_ln78_86, i64 %add_ln78_79" [d1.cpp:78]   --->   Operation 397 'add' 'arr_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 398 [1/1] (0.00ns)   --->   "%zext_ln78_14 = zext i32 %arg1_r_4_loc_load" [d1.cpp:78]   --->   Operation 398 'zext' 'zext_ln78_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 399 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i32 %arg1_r_4_loc_load" [d1.cpp:80]   --->   Operation 399 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 400 '%mul_ln80_24 = mul i64 %conv36, i64 %zext_ln78_14'
ST_24 : Operation 400 [1/1] (2.10ns)   --->   "%mul_ln80_24 = mul i64 %conv36, i64 %zext_ln78_14" [d1.cpp:80]   --->   Operation 400 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 401 [2/2] (0.42ns)   --->   "%call_ln78 = call void @test_Pipeline_VITIS_LOOP_88_9, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_10_loc_load, i64 %add280_2_41282_loc, i64 %add256_11277_loc, i64 %add256_41274_loc, i64 %add256_31271_loc, i64 %add256_2741268_loc, i64 %add256_1431265_loc, i64 %add2561262_loc" [d1.cpp:78]   --->   Operation 401 'call' 'call_ln78' <Predicate = true> <Delay = 0.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln78_15 = zext i32 %arg1_r_5_loc_load" [d1.cpp:78]   --->   Operation 402 'zext' 'zext_ln78_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 403 [1/1] (0.00ns)   --->   "%zext_ln78_16 = zext i32 %arg1_r_2_loc_load" [d1.cpp:78]   --->   Operation 403 'zext' 'zext_ln78_16' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 404 '%mul_ln70 = mul i64 %zext_ln70, i64 %zext_ln78'
ST_24 : Operation 404 [1/1] (2.10ns)   --->   "%mul_ln70 = mul i64 %zext_ln70, i64 %zext_ln78" [d1.cpp:70]   --->   Operation 404 'mul' 'mul_ln70' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 405 '%mul_ln70_1 = mul i64 %zext_ln80_5, i64 %zext_ln78_8'
ST_24 : Operation 405 [1/1] (2.10ns)   --->   "%mul_ln70_1 = mul i64 %zext_ln80_5, i64 %zext_ln78_8" [d1.cpp:70]   --->   Operation 405 'mul' 'mul_ln70_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 406 '%mul_ln70_2 = mul i64 %zext_ln80_4, i64 %zext_ln78_9'
ST_24 : Operation 406 [1/1] (2.10ns)   --->   "%mul_ln70_2 = mul i64 %zext_ln80_4, i64 %zext_ln78_9" [d1.cpp:70]   --->   Operation 406 'mul' 'mul_ln70_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 407 '%mul_ln70_3 = mul i64 %zext_ln80_3, i64 %zext_ln78_10'
ST_24 : Operation 407 [1/1] (2.10ns)   --->   "%mul_ln70_3 = mul i64 %zext_ln80_3, i64 %zext_ln78_10" [d1.cpp:70]   --->   Operation 407 'mul' 'mul_ln70_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 408 '%mul_ln70_4 = mul i64 %zext_ln80_2, i64 %zext_ln78_11'
ST_24 : Operation 408 [1/1] (2.10ns)   --->   "%mul_ln70_4 = mul i64 %zext_ln80_2, i64 %zext_ln78_11" [d1.cpp:70]   --->   Operation 408 'mul' 'mul_ln70_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 409 '%mul_ln70_5 = mul i64 %zext_ln80_1, i64 %zext_ln70_1'
ST_24 : Operation 409 [1/1] (2.10ns)   --->   "%mul_ln70_5 = mul i64 %zext_ln80_1, i64 %zext_ln70_1" [d1.cpp:70]   --->   Operation 409 'mul' 'mul_ln70_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 410 '%mul_ln70_6 = mul i64 %zext_ln80, i64 %zext_ln70_2'
ST_24 : Operation 410 [1/1] (2.10ns)   --->   "%mul_ln70_6 = mul i64 %zext_ln80, i64 %zext_ln70_2" [d1.cpp:70]   --->   Operation 410 'mul' 'mul_ln70_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 411 '%mul_ln70_7 = mul i64 %conv36, i64 %zext_ln70_3'
ST_24 : Operation 411 [1/1] (2.10ns)   --->   "%mul_ln70_7 = mul i64 %conv36, i64 %zext_ln70_3" [d1.cpp:70]   --->   Operation 411 'mul' 'mul_ln70_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 412 '%mul_ln80_25 = mul i64 %zext_ln80_1, i64 %zext_ln78_13'
ST_24 : Operation 412 [1/1] (2.10ns)   --->   "%mul_ln80_25 = mul i64 %zext_ln80_1, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 412 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 413 '%mul_ln80_26 = mul i64 %zext_ln80, i64 %zext_ln78_15'
ST_24 : Operation 413 [1/1] (2.10ns)   --->   "%mul_ln80_26 = mul i64 %zext_ln80, i64 %zext_ln78_15" [d1.cpp:80]   --->   Operation 413 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 414 [1/1] (0.00ns)   --->   "%zext_ln78_17 = zext i32 %arg1_r_3_loc_load" [d1.cpp:78]   --->   Operation 414 'zext' 'zext_ln78_17' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 415 '%mul_ln80_27 = mul i64 %conv36, i64 %zext_ln78_16'
ST_24 : Operation 415 [1/1] (2.10ns)   --->   "%mul_ln80_27 = mul i64 %conv36, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 415 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 416 [1/1] (0.00ns)   --->   "%zext_ln70_4 = zext i32 %arg2_r_loc_load" [d1.cpp:70]   --->   Operation 416 'zext' 'zext_ln70_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 417 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i32 %arg2_r_loc_load" [d1.cpp:80]   --->   Operation 417 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 418 '%mul_ln80_28 = mul i64 %conv36, i64 %zext_ln78_13'
ST_24 : Operation 418 [1/1] (2.10ns)   --->   "%mul_ln80_28 = mul i64 %conv36, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 418 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 419 '%mul_ln80_29 = mul i64 %zext_ln80_3, i64 %zext_ln78_13'
ST_24 : Operation 419 [1/1] (2.10ns)   --->   "%mul_ln80_29 = mul i64 %zext_ln80_3, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 419 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 420 '%mul_ln80_30 = mul i64 %zext_ln80_2, i64 %zext_ln78_15'
ST_24 : Operation 420 [1/1] (2.10ns)   --->   "%mul_ln80_30 = mul i64 %zext_ln80_2, i64 %zext_ln78_15" [d1.cpp:80]   --->   Operation 420 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 421 '%mul_ln80_31 = mul i64 %zext_ln80_1, i64 %zext_ln78_14'
ST_24 : Operation 421 [1/1] (2.10ns)   --->   "%mul_ln80_31 = mul i64 %zext_ln80_1, i64 %zext_ln78_14" [d1.cpp:80]   --->   Operation 421 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 422 '%mul_ln80_32 = mul i64 %zext_ln80, i64 %zext_ln78_17'
ST_24 : Operation 422 [1/1] (2.10ns)   --->   "%mul_ln80_32 = mul i64 %zext_ln80, i64 %zext_ln78_17" [d1.cpp:80]   --->   Operation 422 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 423 [1/1] (0.00ns)   --->   "%zext_ln78_18 = zext i32 %arg1_r_1_loc_load" [d1.cpp:78]   --->   Operation 423 'zext' 'zext_ln78_18' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 424 [1/1] (0.00ns)   --->   "%zext_ln70_6 = zext i32 %arg1_r_1_loc_load" [d1.cpp:70]   --->   Operation 424 'zext' 'zext_ln70_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 425 '%mul_ln70_8 = mul i64 %zext_ln78_7, i64 %zext_ln78_8'
ST_24 : Operation 425 [1/1] (2.10ns)   --->   "%mul_ln70_8 = mul i64 %zext_ln78_7, i64 %zext_ln78_8" [d1.cpp:70]   --->   Operation 425 'mul' 'mul_ln70_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 426 '%mul_ln70_9 = mul i64 %zext_ln78_6, i64 %zext_ln78_9'
ST_24 : Operation 426 [1/1] (2.10ns)   --->   "%mul_ln70_9 = mul i64 %zext_ln78_6, i64 %zext_ln78_9" [d1.cpp:70]   --->   Operation 426 'mul' 'mul_ln70_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 427 '%mul_ln70_10 = mul i64 %zext_ln78_5, i64 %zext_ln78_10'
ST_24 : Operation 427 [1/1] (2.10ns)   --->   "%mul_ln70_10 = mul i64 %zext_ln78_5, i64 %zext_ln78_10" [d1.cpp:70]   --->   Operation 427 'mul' 'mul_ln70_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 428 '%mul_ln70_11 = mul i64 %zext_ln78_4, i64 %zext_ln78_11'
ST_24 : Operation 428 [1/1] (2.10ns)   --->   "%mul_ln70_11 = mul i64 %zext_ln78_4, i64 %zext_ln78_11" [d1.cpp:70]   --->   Operation 428 'mul' 'mul_ln70_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 429 '%mul_ln70_12 = mul i64 %zext_ln78_3, i64 %zext_ln70_1'
ST_24 : Operation 429 [1/1] (2.10ns)   --->   "%mul_ln70_12 = mul i64 %zext_ln78_3, i64 %zext_ln70_1" [d1.cpp:70]   --->   Operation 429 'mul' 'mul_ln70_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 430 '%mul_ln70_13 = mul i64 %zext_ln78_2, i64 %zext_ln70_2'
ST_24 : Operation 430 [1/1] (2.10ns)   --->   "%mul_ln70_13 = mul i64 %zext_ln78_2, i64 %zext_ln70_2" [d1.cpp:70]   --->   Operation 430 'mul' 'mul_ln70_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 431 '%mul_ln70_14 = mul i64 %zext_ln78_1, i64 %zext_ln70_3'
ST_24 : Operation 431 [1/1] (2.10ns)   --->   "%mul_ln70_14 = mul i64 %zext_ln78_1, i64 %zext_ln70_3" [d1.cpp:70]   --->   Operation 431 'mul' 'mul_ln70_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 432 '%mul_ln80_33 = mul i64 %zext_ln80, i64 %zext_ln78_13'
ST_24 : Operation 432 [1/1] (2.10ns)   --->   "%mul_ln80_33 = mul i64 %zext_ln80, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 432 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 433 '%mul_ln80_34 = mul i64 %zext_ln80_2, i64 %zext_ln78_13'
ST_24 : Operation 433 [1/1] (2.10ns)   --->   "%mul_ln80_34 = mul i64 %zext_ln80_2, i64 %zext_ln78_13" [d1.cpp:80]   --->   Operation 433 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 434 '%mul_ln80_36 = mul i64 %conv36, i64 %zext_ln78_15'
ST_24 : Operation 434 [1/1] (2.10ns)   --->   "%mul_ln80_36 = mul i64 %conv36, i64 %zext_ln78_15" [d1.cpp:80]   --->   Operation 434 'mul' 'mul_ln80_36' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 435 '%mul_ln80_37 = mul i64 %zext_ln80_1, i64 %zext_ln78_15'
ST_24 : Operation 435 [1/1] (2.10ns)   --->   "%mul_ln80_37 = mul i64 %zext_ln80_1, i64 %zext_ln78_15" [d1.cpp:80]   --->   Operation 435 'mul' 'mul_ln80_37' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 436 '%mul_ln80_38 = mul i64 %zext_ln80_3, i64 %zext_ln78_15'
ST_24 : Operation 436 [1/1] (2.10ns)   --->   "%mul_ln80_38 = mul i64 %zext_ln80_3, i64 %zext_ln78_15" [d1.cpp:80]   --->   Operation 436 'mul' 'mul_ln80_38' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 437 '%mul_ln80_39 = mul i64 %zext_ln80, i64 %zext_ln78_14'
ST_24 : Operation 437 [1/1] (2.10ns)   --->   "%mul_ln80_39 = mul i64 %zext_ln80, i64 %zext_ln78_14" [d1.cpp:80]   --->   Operation 437 'mul' 'mul_ln80_39' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 438 '%mul_ln80_40 = mul i64 %zext_ln80_2, i64 %zext_ln78_14'
ST_24 : Operation 438 [1/1] (2.10ns)   --->   "%mul_ln80_40 = mul i64 %zext_ln80_2, i64 %zext_ln78_14" [d1.cpp:80]   --->   Operation 438 'mul' 'mul_ln80_40' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 439 '%mul_ln80_41 = mul i64 %conv36, i64 %zext_ln78_17'
ST_24 : Operation 439 [1/1] (2.10ns)   --->   "%mul_ln80_41 = mul i64 %conv36, i64 %zext_ln78_17" [d1.cpp:80]   --->   Operation 439 'mul' 'mul_ln80_41' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 440 '%mul_ln80_42 = mul i64 %zext_ln80_1, i64 %zext_ln78_17'
ST_24 : Operation 440 [1/1] (2.10ns)   --->   "%mul_ln80_42 = mul i64 %zext_ln80_1, i64 %zext_ln78_17" [d1.cpp:80]   --->   Operation 440 'mul' 'mul_ln80_42' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 441 '%mul_ln80_43 = mul i64 %zext_ln80, i64 %zext_ln78_16'
ST_24 : Operation 441 [1/1] (2.10ns)   --->   "%mul_ln80_43 = mul i64 %zext_ln80, i64 %zext_ln78_16" [d1.cpp:80]   --->   Operation 441 'mul' 'mul_ln80_43' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 442 '%mul_ln80_44 = mul i64 %conv36, i64 %zext_ln78_18'
ST_24 : Operation 442 [1/1] (2.10ns)   --->   "%mul_ln80_44 = mul i64 %conv36, i64 %zext_ln78_18" [d1.cpp:80]   --->   Operation 442 'mul' 'mul_ln80_44' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 443 [1/1] (1.01ns)   --->   "%add_ln70 = add i33 %zext_ln78_19, i33 %zext_ln80_7" [d1.cpp:70]   --->   Operation 443 'add' 'add_ln70' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 444 [1/1] (0.00ns)   --->   "%zext_ln70_7 = zext i33 %add_ln70" [d1.cpp:70]   --->   Operation 444 'zext' 'zext_ln70_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.47ns)   --->   Input mux for Operation 445 '%mul_ln70_15 = mul i64 %zext_ln70_7, i64 %zext_ln78'
ST_24 : Operation 445 [1/1] (2.93ns)   --->   "%mul_ln70_15 = mul i64 %zext_ln70_7, i64 %zext_ln78" [d1.cpp:70]   --->   Operation 445 'mul' 'mul_ln70_15' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 446 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i32 %arg1_r_loc_load" [d1.cpp:114]   --->   Operation 446 'zext' 'zext_ln114' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 447 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i32 %arg1_r_loc_load" [d1.cpp:114]   --->   Operation 447 'zext' 'zext_ln114_1' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 448 '%mul_ln120 = mul i64 %zext_ln80_1, i64 %zext_ln78_16'
ST_24 : Operation 448 [1/1] (2.10ns)   --->   "%mul_ln120 = mul i64 %zext_ln80_1, i64 %zext_ln78_16" [d1.cpp:120]   --->   Operation 448 'mul' 'mul_ln120' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 449 '%mul_ln120_1 = mul i64 %zext_ln80_2, i64 %zext_ln78_17'
ST_24 : Operation 449 [1/1] (2.10ns)   --->   "%mul_ln120_1 = mul i64 %zext_ln80_2, i64 %zext_ln78_17" [d1.cpp:120]   --->   Operation 449 'mul' 'mul_ln120_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 450 '%mul_ln120_2 = mul i64 %zext_ln70, i64 %zext_ln78_12'
ST_24 : Operation 450 [1/1] (2.10ns)   --->   "%mul_ln120_2 = mul i64 %zext_ln70, i64 %zext_ln78_12" [d1.cpp:120]   --->   Operation 450 'mul' 'mul_ln120_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 451 '%mul_ln120_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_13'
ST_24 : Operation 451 [1/1] (2.10ns)   --->   "%mul_ln120_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_13" [d1.cpp:120]   --->   Operation 451 'mul' 'mul_ln120_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 452 '%mul_ln120_4 = mul i64 %zext_ln80_4, i64 %zext_ln78_15'
ST_24 : Operation 452 [1/1] (2.10ns)   --->   "%mul_ln120_4 = mul i64 %zext_ln80_4, i64 %zext_ln78_15" [d1.cpp:120]   --->   Operation 452 'mul' 'mul_ln120_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 453 [1/1] (1.01ns)   --->   "%add_ln70_1 = add i33 %zext_ln78_22, i33 %zext_ln114_1" [d1.cpp:70]   --->   Operation 453 'add' 'add_ln70_1' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 454 [1/1] (0.00ns)   --->   "%zext_ln70_8 = zext i33 %add_ln70_1" [d1.cpp:70]   --->   Operation 454 'zext' 'zext_ln70_8' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.47ns)   --->   Input mux for Operation 455 '%mul_ln70_16 = mul i64 %zext_ln70_8, i64 %conv36'
ST_24 : Operation 455 [1/1] (2.93ns)   --->   "%mul_ln70_16 = mul i64 %zext_ln70_8, i64 %conv36" [d1.cpp:70]   --->   Operation 455 'mul' 'mul_ln70_16' <Predicate = true> <Delay = 2.93> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 456 [1/1] (1.01ns)   --->   "%add_ln120 = add i33 %zext_ln78_21, i33 %zext_ln70_6" [d1.cpp:120]   --->   Operation 456 'add' 'add_ln120' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 457 [1/1] (0.00ns)   --->   "%zext_ln120 = zext i33 %add_ln120" [d1.cpp:120]   --->   Operation 457 'zext' 'zext_ln120' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.57ns)   --->   Input mux for Operation 458 '%mul_ln120_5 = mul i64 %zext_ln80, i64 %zext_ln120'
ST_24 : Operation 458 [1/1] (2.84ns)   --->   "%mul_ln120_5 = mul i64 %zext_ln80, i64 %zext_ln120" [d1.cpp:120]   --->   Operation 458 'mul' 'mul_ln120_5' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 459 [1/1] (1.08ns)   --->   "%add_ln120_1 = add i64 %mul_ln70_4, i64 %mul_ln70_5" [d1.cpp:120]   --->   Operation 459 'add' 'add_ln120_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 460 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_2 = add i64 %add_ln120_1, i64 %mul_ln120" [d1.cpp:120]   --->   Operation 460 'add' 'add_ln120_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 461 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_3 = add i64 %add_ln120_2, i64 %mul_ln120_5" [d1.cpp:120]   --->   Operation 461 'add' 'add_ln120_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 462 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_4 = add i64 %mul_ln120_4, i64 %mul_ln120_3" [d1.cpp:120]   --->   Operation 462 'add' 'add_ln120_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 463 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_5 = add i64 %add_ln120_4, i64 %mul_ln120_1" [d1.cpp:120]   --->   Operation 463 'add' 'add_ln120_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 464 [1/1] (1.01ns)   --->   "%add_ln120_6 = add i33 %zext_ln80_6, i33 %zext_ln78_20" [d1.cpp:120]   --->   Operation 464 'add' 'add_ln120_6' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 465 [1/1] (0.00ns)   --->   "%zext_ln120_1 = zext i33 %add_ln120_6" [d1.cpp:120]   --->   Operation 465 'zext' 'zext_ln120_1' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.57ns)   --->   Input mux for Operation 466 '%mul_ln120_6 = mul i64 %zext_ln80_3, i64 %zext_ln120_1'
ST_24 : Operation 466 [1/1] (2.84ns)   --->   "%mul_ln120_6 = mul i64 %zext_ln80_3, i64 %zext_ln120_1" [d1.cpp:120]   --->   Operation 466 'mul' 'mul_ln120_6' <Predicate = true> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 467 [1/1] (1.08ns)   --->   "%add_ln120_7 = add i64 %mul_ln120_6, i64 %mul_ln70_2" [d1.cpp:120]   --->   Operation 467 'add' 'add_ln120_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 468 [1/1] (0.00ns)   --->   "%trunc_ln120 = trunc i64 %add_ln120_5" [d1.cpp:120]   --->   Operation 468 'trunc' 'trunc_ln120' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 469 [1/1] (0.00ns)   --->   "%trunc_ln120_1 = trunc i64 %add_ln120_7" [d1.cpp:120]   --->   Operation 469 'trunc' 'trunc_ln120_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 470 [1/1] (1.08ns)   --->   "%add_ln120_8 = add i64 %add_ln120_7, i64 %add_ln120_5" [d1.cpp:120]   --->   Operation 470 'add' 'add_ln120_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 471 [1/1] (0.00ns)   --->   "%trunc_ln120_2 = trunc i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 471 'trunc' 'trunc_ln120_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 472 [1/1] (0.97ns)   --->   "%add_ln120_9 = add i28 %trunc_ln120_1, i28 %trunc_ln120" [d1.cpp:120]   --->   Operation 472 'add' 'add_ln120_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 473 [1/1] (1.08ns)   --->   "%add_ln120_11 = add i64 %mul_ln70_8, i64 %mul_ln70_9" [d1.cpp:120]   --->   Operation 473 'add' 'add_ln120_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 474 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_12 = add i64 %mul_ln70_12, i64 %mul_ln70_11" [d1.cpp:120]   --->   Operation 474 'add' 'add_ln120_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 475 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_13 = add i64 %add_ln120_12, i64 %mul_ln70_10" [d1.cpp:120]   --->   Operation 475 'add' 'add_ln120_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 476 [1/1] (0.00ns)   --->   "%trunc_ln120_3 = trunc i64 %add_ln120_11" [d1.cpp:120]   --->   Operation 476 'trunc' 'trunc_ln120_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 477 [1/1] (0.00ns)   --->   "%trunc_ln120_4 = trunc i64 %add_ln120_13" [d1.cpp:120]   --->   Operation 477 'trunc' 'trunc_ln120_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_15 = add i64 %mul_ln70_13, i64 %mul_ln120_2" [d1.cpp:120]   --->   Operation 478 'add' 'add_ln120_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 479 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_16 = add i64 %add_ln120_15, i64 %mul_ln70_14" [d1.cpp:120]   --->   Operation 479 'add' 'add_ln120_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 480 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_17 = add i64 %mul_ln70_15, i64 %mul_ln70_16" [d1.cpp:120]   --->   Operation 480 'add' 'add_ln120_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 481 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_18 = add i64 %add_ln120_17, i64 %mul_ln70_1" [d1.cpp:120]   --->   Operation 481 'add' 'add_ln120_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 482 [1/1] (0.00ns)   --->   "%trunc_ln120_5 = trunc i64 %add_ln120_16" [d1.cpp:120]   --->   Operation 482 'trunc' 'trunc_ln120_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 483 [1/1] (0.00ns)   --->   "%trunc_ln120_6 = trunc i64 %add_ln120_18" [d1.cpp:120]   --->   Operation 483 'trunc' 'trunc_ln120_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 484 [1/1] (1.08ns)   --->   "%add_ln120_19 = add i64 %add_ln120_18, i64 %add_ln120_16" [d1.cpp:120]   --->   Operation 484 'add' 'add_ln120_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 485 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_20 = add i28 %trunc_ln120_4, i28 %trunc_ln120_3" [d1.cpp:120]   --->   Operation 485 'add' 'add_ln120_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 486 [1/1] (0.97ns)   --->   "%add_ln120_21 = add i28 %trunc_ln120_6, i28 %trunc_ln120_5" [d1.cpp:120]   --->   Operation 486 'add' 'add_ln120_21' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 487 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln120_24 = add i28 %add_ln120_21, i28 %add_ln120_20" [d1.cpp:120]   --->   Operation 487 'add' 'add_ln120_24' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 488 '%mul_ln121 = mul i64 %zext_ln78_1, i64 %zext_ln114'
ST_24 : Operation 488 [1/1] (2.10ns)   --->   "%mul_ln121 = mul i64 %zext_ln78_1, i64 %zext_ln114" [d1.cpp:121]   --->   Operation 488 'mul' 'mul_ln121' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 489 '%mul_ln121_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_18'
ST_24 : Operation 489 [1/1] (2.10ns)   --->   "%mul_ln121_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_18" [d1.cpp:121]   --->   Operation 489 'mul' 'mul_ln121_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 490 '%mul_ln121_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_16'
ST_24 : Operation 490 [1/1] (2.10ns)   --->   "%mul_ln121_2 = mul i64 %zext_ln78_3, i64 %zext_ln78_16" [d1.cpp:121]   --->   Operation 490 'mul' 'mul_ln121_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 491 '%mul_ln121_3 = mul i64 %zext_ln78_4, i64 %zext_ln78_17'
ST_24 : Operation 491 [1/1] (2.10ns)   --->   "%mul_ln121_3 = mul i64 %zext_ln78_4, i64 %zext_ln78_17" [d1.cpp:121]   --->   Operation 491 'mul' 'mul_ln121_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 492 '%mul_ln121_4 = mul i64 %zext_ln78_5, i64 %zext_ln78_14'
ST_24 : Operation 492 [1/1] (2.10ns)   --->   "%mul_ln121_4 = mul i64 %zext_ln78_5, i64 %zext_ln78_14" [d1.cpp:121]   --->   Operation 492 'mul' 'mul_ln121_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 493 '%mul_ln121_5 = mul i64 %zext_ln78_6, i64 %zext_ln78_15'
ST_24 : Operation 493 [1/1] (2.10ns)   --->   "%mul_ln121_5 = mul i64 %zext_ln78_6, i64 %zext_ln78_15" [d1.cpp:121]   --->   Operation 493 'mul' 'mul_ln121_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 494 '%mul_ln121_6 = mul i64 %zext_ln70_4, i64 %zext_ln78_12'
ST_24 : Operation 494 [1/1] (2.10ns)   --->   "%mul_ln121_6 = mul i64 %zext_ln70_4, i64 %zext_ln78_12" [d1.cpp:121]   --->   Operation 494 'mul' 'mul_ln121_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 495 '%mul_ln121_7 = mul i64 %zext_ln78_7, i64 %zext_ln78_13'
ST_24 : Operation 495 [1/1] (2.10ns)   --->   "%mul_ln121_7 = mul i64 %zext_ln78_7, i64 %zext_ln78_13" [d1.cpp:121]   --->   Operation 495 'mul' 'mul_ln121_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 496 [1/1] (1.08ns)   --->   "%add_ln121 = add i64 %mul_ln70_5, i64 %mul_ln70_6" [d1.cpp:121]   --->   Operation 496 'add' 'add_ln121' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 497 [1/1] (1.08ns)   --->   "%add_ln121_1 = add i64 %mul_ln70_4, i64 %mul_ln70_3" [d1.cpp:121]   --->   Operation 497 'add' 'add_ln121_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 498 [1/1] (0.00ns)   --->   "%trunc_ln121 = trunc i64 %add_ln121" [d1.cpp:121]   --->   Operation 498 'trunc' 'trunc_ln121' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 499 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = trunc i64 %add_ln121_1" [d1.cpp:121]   --->   Operation 499 'trunc' 'trunc_ln121_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 500 [1/1] (1.08ns)   --->   "%add_ln121_2 = add i64 %add_ln121_1, i64 %add_ln121" [d1.cpp:121]   --->   Operation 500 'add' 'add_ln121_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 501 [1/1] (1.08ns)   --->   "%add_ln121_3 = add i64 %mul_ln70, i64 %mul_ln121" [d1.cpp:121]   --->   Operation 501 'add' 'add_ln121_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 502 [1/1] (1.08ns)   --->   "%add_ln121_4 = add i64 %mul_ln70_2, i64 %mul_ln70_1" [d1.cpp:121]   --->   Operation 502 'add' 'add_ln121_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 503 [1/1] (0.00ns)   --->   "%trunc_ln121_2 = trunc i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 503 'trunc' 'trunc_ln121_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 504 [1/1] (0.00ns)   --->   "%trunc_ln121_3 = trunc i64 %add_ln121_4" [d1.cpp:121]   --->   Operation 504 'trunc' 'trunc_ln121_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 505 [1/1] (1.08ns)   --->   "%add_ln121_5 = add i64 %add_ln121_4, i64 %add_ln121_3" [d1.cpp:121]   --->   Operation 505 'add' 'add_ln121_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 506 [1/1] (0.97ns)   --->   "%add_ln121_6 = add i28 %trunc_ln121_1, i28 %trunc_ln121" [d1.cpp:121]   --->   Operation 506 'add' 'add_ln121_6' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 507 [1/1] (0.97ns)   --->   "%add_ln121_7 = add i28 %trunc_ln121_3, i28 %trunc_ln121_2" [d1.cpp:121]   --->   Operation 507 'add' 'add_ln121_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 508 [1/1] (1.08ns)   --->   "%add_ln121_9 = add i64 %mul_ln121_7, i64 %mul_ln121_5" [d1.cpp:121]   --->   Operation 508 'add' 'add_ln121_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 509 [1/1] (1.08ns)   --->   "%add_ln121_10 = add i64 %mul_ln121_6, i64 %mul_ln121_3" [d1.cpp:121]   --->   Operation 509 'add' 'add_ln121_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 510 [1/1] (0.00ns)   --->   "%trunc_ln121_4 = trunc i64 %add_ln121_9" [d1.cpp:121]   --->   Operation 510 'trunc' 'trunc_ln121_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 511 [1/1] (0.00ns)   --->   "%trunc_ln121_5 = trunc i64 %add_ln121_10" [d1.cpp:121]   --->   Operation 511 'trunc' 'trunc_ln121_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 512 [1/1] (1.08ns)   --->   "%add_ln121_12 = add i64 %mul_ln121_4, i64 %mul_ln121_1" [d1.cpp:121]   --->   Operation 512 'add' 'add_ln121_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 513 [1/1] (1.08ns)   --->   "%add_ln121_13 = add i64 %mul_ln121_2, i64 %mul_ln70_7" [d1.cpp:121]   --->   Operation 513 'add' 'add_ln121_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 514 [1/1] (0.00ns)   --->   "%trunc_ln121_6 = trunc i64 %add_ln121_12" [d1.cpp:121]   --->   Operation 514 'trunc' 'trunc_ln121_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 515 [1/1] (0.00ns)   --->   "%trunc_ln121_7 = trunc i64 %add_ln121_13" [d1.cpp:121]   --->   Operation 515 'trunc' 'trunc_ln121_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 516 [1/1] (1.08ns)   --->   "%add_ln121_14 = add i64 %add_ln121_13, i64 %add_ln121_12" [d1.cpp:121]   --->   Operation 516 'add' 'add_ln121_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 517 [1/1] (0.97ns)   --->   "%add_ln121_16 = add i28 %trunc_ln121_7, i28 %trunc_ln121_6" [d1.cpp:121]   --->   Operation 517 'add' 'add_ln121_16' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 518 '%mul_ln122 = mul i64 %zext_ln78_2, i64 %zext_ln114'
ST_24 : Operation 518 [1/1] (2.10ns)   --->   "%mul_ln122 = mul i64 %zext_ln78_2, i64 %zext_ln114" [d1.cpp:122]   --->   Operation 518 'mul' 'mul_ln122' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 519 '%mul_ln122_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_18'
ST_24 : Operation 519 [1/1] (2.10ns)   --->   "%mul_ln122_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_18" [d1.cpp:122]   --->   Operation 519 'mul' 'mul_ln122_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 520 '%mul_ln122_3 = mul i64 %zext_ln78_5, i64 %zext_ln78_17'
ST_24 : Operation 520 [1/1] (2.10ns)   --->   "%mul_ln122_3 = mul i64 %zext_ln78_5, i64 %zext_ln78_17" [d1.cpp:122]   --->   Operation 520 'mul' 'mul_ln122_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 521 '%mul_ln123 = mul i64 %zext_ln78_3, i64 %zext_ln114'
ST_24 : Operation 521 [1/1] (2.10ns)   --->   "%mul_ln123 = mul i64 %zext_ln78_3, i64 %zext_ln114" [d1.cpp:123]   --->   Operation 521 'mul' 'mul_ln123' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 522 '%mul_ln123_2 = mul i64 %zext_ln78_5, i64 %zext_ln78_16'
ST_24 : Operation 522 [1/1] (2.10ns)   --->   "%mul_ln123_2 = mul i64 %zext_ln78_5, i64 %zext_ln78_16" [d1.cpp:123]   --->   Operation 522 'mul' 'mul_ln123_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 523 '%mul_ln124_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_18'
ST_24 : Operation 523 [1/1] (2.10ns)   --->   "%mul_ln124_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_18" [d1.cpp:124]   --->   Operation 523 'mul' 'mul_ln124_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 524 '%mul_ln125 = mul i64 %zext_ln78_5, i64 %zext_ln114'
ST_24 : Operation 524 [1/1] (2.10ns)   --->   "%mul_ln125 = mul i64 %zext_ln78_5, i64 %zext_ln114" [d1.cpp:125]   --->   Operation 524 'mul' 'mul_ln125' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 525 '%mul_ln127 = mul i64 %zext_ln70_4, i64 %zext_ln78_18'
ST_24 : Operation 525 [1/1] (2.10ns)   --->   "%mul_ln127 = mul i64 %zext_ln70_4, i64 %zext_ln78_18" [d1.cpp:127]   --->   Operation 525 'mul' 'mul_ln127' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 526 '%mul_ln127_1 = mul i64 %zext_ln78_7, i64 %zext_ln114'
ST_24 : Operation 526 [1/1] (2.10ns)   --->   "%mul_ln127_1 = mul i64 %zext_ln78_7, i64 %zext_ln114" [d1.cpp:127]   --->   Operation 526 'mul' 'mul_ln127_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.31ns)   --->   Input mux for Operation 527 '%mul_ln128 = mul i64 %zext_ln70_4, i64 %zext_ln114'
ST_24 : Operation 527 [1/1] (2.10ns)   --->   "%mul_ln128 = mul i64 %zext_ln70_4, i64 %zext_ln114" [d1.cpp:128]   --->   Operation 527 'mul' 'mul_ln128' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 528 [1/1] (1.08ns)   --->   "%add_ln80 = add i64 %mul_ln80_42, i64 %mul_ln80_43" [d1.cpp:80]   --->   Operation 528 'add' 'add_ln80' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 529 [1/1] (1.08ns)   --->   "%add_ln80_1 = add i64 %mul_ln80_40, i64 %mul_ln80_38" [d1.cpp:80]   --->   Operation 529 'add' 'add_ln80_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 530 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i64 %add_ln80" [d1.cpp:80]   --->   Operation 530 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 531 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i64 %add_ln80_1" [d1.cpp:80]   --->   Operation 531 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 532 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_2 = add i64 %add_ln80_1, i64 %add_ln80" [d1.cpp:80]   --->   Operation 532 'add' 'add_ln80_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 533 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_5 = add i28 %trunc_ln80_1, i28 %trunc_ln80" [d1.cpp:80]   --->   Operation 533 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 534 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_7 = add i64 %add_ln80_4, i64 %add_ln80_2" [d1.cpp:80]   --->   Operation 534 'add' 'add_ln80_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 535 [1/1] (1.08ns)   --->   "%add_ln80_8 = add i64 %mul_ln128, i64 %mul_ln78_27" [d1.cpp:80]   --->   Operation 535 'add' 'add_ln80_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 536 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i64 %add_ln80_8" [d1.cpp:80]   --->   Operation 536 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 537 [1/1] (1.08ns)   --->   "%add_ln80_10 = add i64 %mul_ln78_20, i64 %mul_ln78_41" [d1.cpp:80]   --->   Operation 537 'add' 'add_ln80_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 538 [1/1] (1.08ns)   --->   "%add_ln80_11 = add i64 %mul_ln78_34, i64 %mul_ln80_44" [d1.cpp:80]   --->   Operation 538 'add' 'add_ln80_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 539 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i64 %add_ln80_10" [d1.cpp:80]   --->   Operation 539 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 540 [1/1] (0.00ns)   --->   "%trunc_ln80_7 = trunc i64 %add_ln80_11" [d1.cpp:80]   --->   Operation 540 'trunc' 'trunc_ln80_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 541 [1/1] (1.08ns)   --->   "%add_ln80_12 = add i64 %add_ln80_11, i64 %add_ln80_10" [d1.cpp:80]   --->   Operation 541 'add' 'add_ln80_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 542 [1/1] (0.97ns)   --->   "%add_ln80_14 = add i28 %trunc_ln80_7, i28 %trunc_ln80_6" [d1.cpp:80]   --->   Operation 542 'add' 'add_ln80_14' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 543 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln80_16 = add i28 %add_ln80_6, i28 %add_ln80_5" [d1.cpp:80]   --->   Operation 543 'add' 'add_ln80_16' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 544 [1/1] (1.08ns)   --->   "%add_ln127_1 = add i64 %mul_ln80_31, i64 %mul_ln80_32" [d1.cpp:127]   --->   Operation 544 'add' 'add_ln127_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 545 [1/1] (1.08ns)   --->   "%add_ln127_2 = add i64 %mul_ln80_30, i64 %mul_ln80_29" [d1.cpp:127]   --->   Operation 545 'add' 'add_ln127_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 546 [1/1] (0.00ns)   --->   "%trunc_ln127 = trunc i64 %add_ln127_1" [d1.cpp:127]   --->   Operation 546 'trunc' 'trunc_ln127' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 547 [1/1] (0.00ns)   --->   "%trunc_ln127_1 = trunc i64 %add_ln127_2" [d1.cpp:127]   --->   Operation 547 'trunc' 'trunc_ln127_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 548 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_3 = add i64 %add_ln127_2, i64 %add_ln127_1" [d1.cpp:127]   --->   Operation 548 'add' 'add_ln127_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 549 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_7 = add i28 %trunc_ln127_1, i28 %trunc_ln127" [d1.cpp:127]   --->   Operation 549 'add' 'add_ln127_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 550 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln127_9 = add i64 %add_ln127_6, i64 %add_ln127_3" [d1.cpp:127]   --->   Operation 550 'add' 'add_ln127_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 551 [1/1] (1.08ns)   --->   "%add_ln127_10 = add i64 %mul_ln127_1, i64 %mul_ln78_5" [d1.cpp:127]   --->   Operation 551 'add' 'add_ln127_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 552 [1/1] (1.08ns)   --->   "%add_ln127_11 = add i64 %mul_ln127, i64 %mul_ln78_19" [d1.cpp:127]   --->   Operation 552 'add' 'add_ln127_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 553 [1/1] (0.00ns)   --->   "%trunc_ln127_4 = trunc i64 %add_ln127_10" [d1.cpp:127]   --->   Operation 553 'trunc' 'trunc_ln127_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 554 [1/1] (0.00ns)   --->   "%trunc_ln127_5 = trunc i64 %add_ln127_11" [d1.cpp:127]   --->   Operation 554 'trunc' 'trunc_ln127_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 555 [1/1] (1.08ns)   --->   "%add_ln127_13 = add i64 %mul_ln78_12, i64 %mul_ln78_33" [d1.cpp:127]   --->   Operation 555 'add' 'add_ln127_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 556 [1/1] (1.08ns)   --->   "%add_ln127_14 = add i64 %mul_ln78_26, i64 %mul_ln80_27" [d1.cpp:127]   --->   Operation 556 'add' 'add_ln127_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 557 [1/1] (0.00ns)   --->   "%trunc_ln127_6 = trunc i64 %add_ln127_13" [d1.cpp:127]   --->   Operation 557 'trunc' 'trunc_ln127_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 558 [1/1] (0.00ns)   --->   "%trunc_ln127_7 = trunc i64 %add_ln127_14" [d1.cpp:127]   --->   Operation 558 'trunc' 'trunc_ln127_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 559 [1/1] (1.08ns)   --->   "%add_ln127_15 = add i64 %add_ln127_14, i64 %add_ln127_13" [d1.cpp:127]   --->   Operation 559 'add' 'add_ln127_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 560 [1/1] (0.97ns)   --->   "%add_ln127_17 = add i28 %trunc_ln127_7, i28 %trunc_ln127_6" [d1.cpp:127]   --->   Operation 560 'add' 'add_ln127_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 561 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln127_19 = add i28 %add_ln127_8, i28 %add_ln127_7" [d1.cpp:127]   --->   Operation 561 'add' 'add_ln127_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 562 [1/1] (1.08ns)   --->   "%add_ln126 = add i64 %mul_ln80_37, i64 %mul_ln80_39" [d1.cpp:126]   --->   Operation 562 'add' 'add_ln126' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 563 [1/1] (1.08ns)   --->   "%add_ln126_2 = add i64 %mul_ln80_34, i64 %mul_ln78_61" [d1.cpp:126]   --->   Operation 563 'add' 'add_ln126_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 564 [1/1] (0.00ns)   --->   "%trunc_ln126 = trunc i64 %add_ln126" [d1.cpp:126]   --->   Operation 564 'trunc' 'trunc_ln126' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 565 [1/1] (0.00ns)   --->   "%trunc_ln126_1 = trunc i64 %add_ln126_2" [d1.cpp:126]   --->   Operation 565 'trunc' 'trunc_ln126_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 566 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_3 = add i64 %add_ln126_2, i64 %add_ln126" [d1.cpp:126]   --->   Operation 566 'add' 'add_ln126_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 567 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_7 = add i28 %trunc_ln126_1, i28 %trunc_ln126" [d1.cpp:126]   --->   Operation 567 'add' 'add_ln126_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 568 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_9 = add i64 %add_ln126_6, i64 %add_ln126_3" [d1.cpp:126]   --->   Operation 568 'add' 'add_ln126_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 569 [1/1] (1.08ns)   --->   "%add_ln126_13 = add i64 %mul_ln78_4, i64 %mul_ln78_25" [d1.cpp:126]   --->   Operation 569 'add' 'add_ln126_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 570 [1/1] (1.08ns)   --->   "%add_ln126_14 = add i64 %mul_ln78_18, i64 %mul_ln80_41" [d1.cpp:126]   --->   Operation 570 'add' 'add_ln126_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 571 [1/1] (0.00ns)   --->   "%trunc_ln126_6 = trunc i64 %add_ln126_13" [d1.cpp:126]   --->   Operation 571 'trunc' 'trunc_ln126_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 572 [1/1] (0.00ns)   --->   "%trunc_ln126_7 = trunc i64 %add_ln126_14" [d1.cpp:126]   --->   Operation 572 'trunc' 'trunc_ln126_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 573 [1/1] (1.08ns)   --->   "%add_ln126_15 = add i64 %add_ln126_14, i64 %add_ln126_13" [d1.cpp:126]   --->   Operation 573 'add' 'add_ln126_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 574 [1/1] (0.97ns)   --->   "%add_ln126_17 = add i28 %trunc_ln126_7, i28 %trunc_ln126_6" [d1.cpp:126]   --->   Operation 574 'add' 'add_ln126_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 575 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln126_19 = add i28 %add_ln126_8, i28 %add_ln126_7" [d1.cpp:126]   --->   Operation 575 'add' 'add_ln126_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 576 [1/1] (1.08ns)   --->   "%add_ln125 = add i64 %mul_ln80_25, i64 %mul_ln80_26" [d1.cpp:125]   --->   Operation 576 'add' 'add_ln125' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 577 [1/1] (1.08ns)   --->   "%add_ln125_1 = add i64 %mul_ln78_60, i64 %mul_ln78_52" [d1.cpp:125]   --->   Operation 577 'add' 'add_ln125_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 578 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i64 %add_ln125" [d1.cpp:125]   --->   Operation 578 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 579 [1/1] (0.00ns)   --->   "%trunc_ln125_1 = trunc i64 %add_ln125_1" [d1.cpp:125]   --->   Operation 579 'trunc' 'trunc_ln125_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 580 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_3 = add i64 %add_ln125_1, i64 %add_ln125" [d1.cpp:125]   --->   Operation 580 'add' 'add_ln125_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 581 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_4 = add i28 %trunc_ln125_1, i28 %trunc_ln125" [d1.cpp:125]   --->   Operation 581 'add' 'add_ln125_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 582 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln125_6 = add i64 %add_ln78_37, i64 %add_ln125_3" [d1.cpp:125]   --->   Operation 582 'add' 'add_ln125_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 583 [1/1] (1.08ns)   --->   "%add_ln125_10 = add i64 %mul_ln125, i64 %mul_ln78_17" [d1.cpp:125]   --->   Operation 583 'add' 'add_ln125_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 584 [1/1] (1.08ns)   --->   "%add_ln125_11 = add i64 %mul_ln78_10, i64 %mul_ln80_24" [d1.cpp:125]   --->   Operation 584 'add' 'add_ln125_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 585 [1/1] (0.00ns)   --->   "%trunc_ln125_6 = trunc i64 %add_ln125_10" [d1.cpp:125]   --->   Operation 585 'trunc' 'trunc_ln125_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 586 [1/1] (0.00ns)   --->   "%trunc_ln125_7 = trunc i64 %add_ln125_11" [d1.cpp:125]   --->   Operation 586 'trunc' 'trunc_ln125_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 587 [1/1] (1.08ns)   --->   "%add_ln125_12 = add i64 %add_ln125_11, i64 %add_ln125_10" [d1.cpp:125]   --->   Operation 587 'add' 'add_ln125_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 588 [1/1] (0.97ns)   --->   "%add_ln125_14 = add i28 %trunc_ln125_7, i28 %trunc_ln125_6" [d1.cpp:125]   --->   Operation 588 'add' 'add_ln125_14' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 589 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln125_16 = add i28 %add_ln125_5, i28 %add_ln125_4" [d1.cpp:125]   --->   Operation 589 'add' 'add_ln125_16' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 590 [1/1] (1.08ns)   --->   "%add_ln124 = add i64 %mul_ln78_59, i64 %mul_ln80_33" [d1.cpp:124]   --->   Operation 590 'add' 'add_ln124' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 591 [1/1] (1.08ns)   --->   "%add_ln124_1 = add i64 %mul_ln78_51, i64 %mul_ln78_44" [d1.cpp:124]   --->   Operation 591 'add' 'add_ln124_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 592 [1/1] (0.00ns)   --->   "%trunc_ln124 = trunc i64 %add_ln124" [d1.cpp:124]   --->   Operation 592 'trunc' 'trunc_ln124' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 593 [1/1] (0.00ns)   --->   "%trunc_ln124_1 = trunc i64 %add_ln124_1" [d1.cpp:124]   --->   Operation 593 'trunc' 'trunc_ln124_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 594 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_2 = add i64 %add_ln124_1, i64 %add_ln124" [d1.cpp:124]   --->   Operation 594 'add' 'add_ln124_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 595 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_6 = add i28 %trunc_ln124_1, i28 %trunc_ln124" [d1.cpp:124]   --->   Operation 595 'add' 'add_ln124_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 596 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_8 = add i64 %add_ln124_5, i64 %add_ln124_2" [d1.cpp:124]   --->   Operation 596 'add' 'add_ln124_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 597 [1/1] (1.08ns)   --->   "%add_ln124_12 = add i64 %mul_ln124_1, i64 %mul_ln78_9" [d1.cpp:124]   --->   Operation 597 'add' 'add_ln124_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 598 [1/1] (1.08ns)   --->   "%add_ln124_13 = add i64 %mul_ln78_2, i64 %mul_ln80_36" [d1.cpp:124]   --->   Operation 598 'add' 'add_ln124_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 599 [1/1] (0.00ns)   --->   "%trunc_ln124_6 = trunc i64 %add_ln124_12" [d1.cpp:124]   --->   Operation 599 'trunc' 'trunc_ln124_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 600 [1/1] (0.00ns)   --->   "%trunc_ln124_7 = trunc i64 %add_ln124_13" [d1.cpp:124]   --->   Operation 600 'trunc' 'trunc_ln124_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 601 [1/1] (1.08ns)   --->   "%add_ln124_14 = add i64 %add_ln124_13, i64 %add_ln124_12" [d1.cpp:124]   --->   Operation 601 'add' 'add_ln124_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 602 [1/1] (0.97ns)   --->   "%add_ln124_16 = add i28 %trunc_ln124_7, i28 %trunc_ln124_6" [d1.cpp:124]   --->   Operation 602 'add' 'add_ln124_16' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 603 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln124_18 = add i28 %add_ln124_7, i28 %add_ln124_6" [d1.cpp:124]   --->   Operation 603 'add' 'add_ln124_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 604 [1/1] (1.08ns)   --->   "%add_ln123 = add i64 %mul_ln78_50, i64 %mul_ln78_58" [d1.cpp:123]   --->   Operation 604 'add' 'add_ln123' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 605 [1/1] (1.08ns)   --->   "%add_ln123_1 = add i64 %mul_ln78_43, i64 %mul_ln78_36" [d1.cpp:123]   --->   Operation 605 'add' 'add_ln123_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 606 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i64 %add_ln123" [d1.cpp:123]   --->   Operation 606 'trunc' 'trunc_ln123' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 607 [1/1] (0.00ns)   --->   "%trunc_ln123_1 = trunc i64 %add_ln123_1" [d1.cpp:123]   --->   Operation 607 'trunc' 'trunc_ln123_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 608 [1/1] (1.08ns)   --->   "%add_ln123_3 = add i64 %mul_ln78_15, i64 %mul_ln78_8" [d1.cpp:123]   --->   Operation 608 'add' 'add_ln123_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 609 [1/1] (1.08ns)   --->   "%add_ln123_5 = add i64 %mul_ln78_29, i64 %mul_ln78_22" [d1.cpp:123]   --->   Operation 609 'add' 'add_ln123_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 610 [1/1] (0.00ns)   --->   "%trunc_ln123_2 = trunc i64 %add_ln123_3" [d1.cpp:123]   --->   Operation 610 'trunc' 'trunc_ln123_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 611 [1/1] (0.00ns)   --->   "%trunc_ln123_3 = trunc i64 %add_ln123_5" [d1.cpp:123]   --->   Operation 611 'trunc' 'trunc_ln123_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 612 [1/1] (1.08ns)   --->   "%add_ln123_6 = add i64 %add_ln123_5, i64 %add_ln123_3" [d1.cpp:123]   --->   Operation 612 'add' 'add_ln123_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 613 [1/1] (0.97ns)   --->   "%add_ln123_8 = add i28 %trunc_ln123_3, i28 %trunc_ln123_2" [d1.cpp:123]   --->   Operation 613 'add' 'add_ln123_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 614 [1/1] (1.08ns)   --->   "%add_ln123_13 = add i64 %mul_ln123_2, i64 %mul_ln78_1" [d1.cpp:123]   --->   Operation 614 'add' 'add_ln123_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 615 [1/1] (1.08ns)   --->   "%add_ln123_14 = add i64 %mul_ln123, i64 %mul_ln80_28" [d1.cpp:123]   --->   Operation 615 'add' 'add_ln123_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 616 [1/1] (0.00ns)   --->   "%trunc_ln123_6 = trunc i64 %add_ln123_13" [d1.cpp:123]   --->   Operation 616 'trunc' 'trunc_ln123_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 617 [1/1] (0.00ns)   --->   "%trunc_ln123_7 = trunc i64 %add_ln123_14" [d1.cpp:123]   --->   Operation 617 'trunc' 'trunc_ln123_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 618 [1/1] (1.08ns)   --->   "%add_ln123_15 = add i64 %add_ln123_14, i64 %add_ln123_13" [d1.cpp:123]   --->   Operation 618 'add' 'add_ln123_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 619 [1/1] (0.97ns)   --->   "%add_ln123_17 = add i28 %trunc_ln123_7, i28 %trunc_ln123_6" [d1.cpp:123]   --->   Operation 619 'add' 'add_ln123_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 620 [1/1] (1.08ns)   --->   "%add_ln122 = add i64 %mul_ln78_42, i64 %mul_ln78_49" [d1.cpp:122]   --->   Operation 620 'add' 'add_ln122' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 621 [1/1] (1.08ns)   --->   "%add_ln122_1 = add i64 %mul_ln78_35, i64 %mul_ln78_28" [d1.cpp:122]   --->   Operation 621 'add' 'add_ln122_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 622 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i64 %add_ln122" [d1.cpp:122]   --->   Operation 622 'trunc' 'trunc_ln122' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 623 [1/1] (0.00ns)   --->   "%trunc_ln122_1 = trunc i64 %add_ln122_1" [d1.cpp:122]   --->   Operation 623 'trunc' 'trunc_ln122_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 624 [1/1] (1.08ns)   --->   "%add_ln122_3 = add i64 %mul_ln78_21, i64 %mul_ln78_14" [d1.cpp:122]   --->   Operation 624 'add' 'add_ln122_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 625 [1/1] (0.00ns)   --->   "%trunc_ln122_2 = trunc i64 %add_ln78_1" [d1.cpp:122]   --->   Operation 625 'trunc' 'trunc_ln122_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 626 [1/1] (0.00ns)   --->   "%trunc_ln122_3 = trunc i64 %add_ln122_3" [d1.cpp:122]   --->   Operation 626 'trunc' 'trunc_ln122_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 627 [1/1] (1.08ns)   --->   "%add_ln122_4 = add i64 %add_ln122_3, i64 %add_ln78_1" [d1.cpp:122]   --->   Operation 627 'add' 'add_ln122_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 628 [1/1] (0.97ns)   --->   "%add_ln122_7 = add i28 %trunc_ln122_3, i28 %trunc_ln122_2" [d1.cpp:122]   --->   Operation 628 'add' 'add_ln122_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 629 [1/1] (1.08ns)   --->   "%add_ln122_12 = add i64 %mul_ln122_3, i64 %mul_ln122" [d1.cpp:122]   --->   Operation 629 'add' 'add_ln122_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 630 [1/1] (1.08ns)   --->   "%add_ln122_13 = add i64 %mul_ln122_1, i64 %mul_ln78_56" [d1.cpp:122]   --->   Operation 630 'add' 'add_ln122_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 631 [1/1] (0.00ns)   --->   "%trunc_ln122_6 = trunc i64 %add_ln122_12" [d1.cpp:122]   --->   Operation 631 'trunc' 'trunc_ln122_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 632 [1/1] (0.00ns)   --->   "%trunc_ln122_7 = trunc i64 %add_ln122_13" [d1.cpp:122]   --->   Operation 632 'trunc' 'trunc_ln122_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 633 [1/1] (1.08ns)   --->   "%add_ln122_14 = add i64 %add_ln122_13, i64 %add_ln122_12" [d1.cpp:122]   --->   Operation 633 'add' 'add_ln122_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 634 [1/1] (0.97ns)   --->   "%add_ln122_16 = add i28 %trunc_ln122_7, i28 %trunc_ln122_6" [d1.cpp:122]   --->   Operation 634 'add' 'add_ln122_16' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.14>
ST_25 : Operation 635 [1/1] (0.00ns)   --->   "%add47_4_21297_loc_load = load i64 %add47_4_21297_loc"   --->   Operation 635 'load' 'add47_4_21297_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 636 [1/1] (0.00ns)   --->   "%add47_4_11296_loc_load = load i64 %add47_4_11296_loc"   --->   Operation 636 'load' 'add47_4_11296_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 637 [1/1] (0.00ns)   --->   "%add47_41295_loc_load = load i64 %add47_41295_loc"   --->   Operation 637 'load' 'add47_41295_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 638 [1/2] (0.79ns)   --->   "%call_ln78 = call void @test_Pipeline_VITIS_LOOP_88_9, i64 %arr_6, i64 %arr_5, i64 %arr_4, i64 %arr_3, i64 %arr_2, i64 %arr_1, i64 %arr, i32 %arg1_r_9_loc_load, i32 %arg1_r_10_loc_load, i32 %arg1_r_11_loc_load, i32 %arg1_r_12_loc_load, i32 %arg1_r_13_loc_load, i32 %arg1_r_14_loc_load, i32 %arg2_r_loc_load, i32 %arg2_r_1_loc_load, i32 %arg2_r_2_loc_load, i32 %arg2_r_3_loc_load, i32 %arg2_r_4_loc_load, i32 %arg2_r_5_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_14_loc_load, i32 %arg2_r_13_loc_load, i32 %arg2_r_12_loc_load, i32 %arg2_r_11_loc_load, i32 %arg1_r_1_loc_load, i32 %arg1_r_2_loc_load, i32 %arg1_r_3_loc_load, i32 %arg1_r_4_loc_load, i32 %arg1_r_5_loc_load, i32 %arg1_r_6_loc_load, i32 %arg2_r_15_loc_load, i32 %arg2_r_10_loc_load, i64 %add280_2_41282_loc, i64 %add256_11277_loc, i64 %add256_41274_loc, i64 %add256_31271_loc, i64 %add256_2741268_loc, i64 %add256_1431265_loc, i64 %add2561262_loc" [d1.cpp:78]   --->   Operation 638 'call' 'call_ln78' <Predicate = true> <Delay = 0.79> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 639 '%mul_ln119 = mul i64 %zext_ln78_7, i64 %zext_ln70_3'
ST_25 : Operation 639 [1/1] (2.10ns)   --->   "%mul_ln119 = mul i64 %zext_ln78_7, i64 %zext_ln70_3" [d1.cpp:119]   --->   Operation 639 'mul' 'mul_ln119' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 640 '%mul_ln119_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_12'
ST_25 : Operation 640 [1/1] (2.10ns)   --->   "%mul_ln119_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_12" [d1.cpp:119]   --->   Operation 640 'mul' 'mul_ln119_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 641 [1/1] (1.08ns)   --->   "%add_ln119 = add i64 %mul_ln119_1, i64 %mul_ln119" [d1.cpp:119]   --->   Operation 641 'add' 'add_ln119' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 642 [1/1] (0.00ns)   --->   "%trunc_ln119_1 = trunc i64 %add_ln119" [d1.cpp:119]   --->   Operation 642 'trunc' 'trunc_ln119_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 643 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_10 = add i64 %add_ln120_8, i64 %add_ln120_3" [d1.cpp:120]   --->   Operation 643 'add' 'add_ln120_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 644 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_14 = add i64 %add_ln120_13, i64 %add_ln120_11" [d1.cpp:120]   --->   Operation 644 'add' 'add_ln120_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 645 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln120_22 = add i64 %add_ln120_19, i64 %add_ln120_14" [d1.cpp:120]   --->   Operation 645 'add' 'add_ln120_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 646 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln120_23 = add i28 %add_ln120_9, i28 %trunc_ln120_2" [d1.cpp:120]   --->   Operation 646 'add' 'add_ln120_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 647 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_12 = add i64 %add_ln120_22, i64 %add_ln120_10" [d1.cpp:120]   --->   Operation 647 'add' 'arr_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_8 = add i64 %add_ln121_5, i64 %add_ln121_2" [d1.cpp:121]   --->   Operation 648 'add' 'add_ln121_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 649 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_11 = add i64 %add_ln121_10, i64 %add_ln121_9" [d1.cpp:121]   --->   Operation 649 'add' 'add_ln121_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 650 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_15 = add i28 %trunc_ln121_5, i28 %trunc_ln121_4" [d1.cpp:121]   --->   Operation 650 'add' 'add_ln121_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 651 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln121_17 = add i64 %add_ln121_14, i64 %add_ln121_11" [d1.cpp:121]   --->   Operation 651 'add' 'add_ln121_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 652 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln121_18 = add i28 %add_ln121_7, i28 %add_ln121_6" [d1.cpp:121]   --->   Operation 652 'add' 'add_ln121_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 653 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln121_19 = add i28 %add_ln121_16, i28 %add_ln121_15" [d1.cpp:121]   --->   Operation 653 'add' 'add_ln121_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 654 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_13 = add i64 %add_ln121_17, i64 %add_ln121_8" [d1.cpp:121]   --->   Operation 654 'add' 'arr_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 655 '%mul_ln122_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_16'
ST_25 : Operation 655 [1/1] (2.10ns)   --->   "%mul_ln122_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_16" [d1.cpp:122]   --->   Operation 655 'mul' 'mul_ln122_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 656 '%mul_ln122_4 = mul i64 %zext_ln78_6, i64 %zext_ln78_14'
ST_25 : Operation 656 [1/1] (2.10ns)   --->   "%mul_ln122_4 = mul i64 %zext_ln78_6, i64 %zext_ln78_14" [d1.cpp:122]   --->   Operation 656 'mul' 'mul_ln122_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 657 '%mul_ln122_5 = mul i64 %zext_ln78_7, i64 %zext_ln78_15'
ST_25 : Operation 657 [1/1] (2.10ns)   --->   "%mul_ln122_5 = mul i64 %zext_ln78_7, i64 %zext_ln78_15" [d1.cpp:122]   --->   Operation 657 'mul' 'mul_ln122_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 658 '%mul_ln122_6 = mul i64 %zext_ln70_4, i64 %zext_ln78_13'
ST_25 : Operation 658 [1/1] (2.10ns)   --->   "%mul_ln122_6 = mul i64 %zext_ln70_4, i64 %zext_ln78_13" [d1.cpp:122]   --->   Operation 658 'mul' 'mul_ln122_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 659 '%mul_ln123_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_18'
ST_25 : Operation 659 [1/1] (2.10ns)   --->   "%mul_ln123_1 = mul i64 %zext_ln78_4, i64 %zext_ln78_18" [d1.cpp:123]   --->   Operation 659 'mul' 'mul_ln123_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 660 '%mul_ln123_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_17'
ST_25 : Operation 660 [1/1] (2.10ns)   --->   "%mul_ln123_3 = mul i64 %zext_ln78_6, i64 %zext_ln78_17" [d1.cpp:123]   --->   Operation 660 'mul' 'mul_ln123_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 661 '%mul_ln123_4 = mul i64 %zext_ln78_7, i64 %zext_ln78_14'
ST_25 : Operation 661 [1/1] (2.10ns)   --->   "%mul_ln123_4 = mul i64 %zext_ln78_7, i64 %zext_ln78_14" [d1.cpp:123]   --->   Operation 661 'mul' 'mul_ln123_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 662 '%mul_ln123_5 = mul i64 %zext_ln70_4, i64 %zext_ln78_15'
ST_25 : Operation 662 [1/1] (2.10ns)   --->   "%mul_ln123_5 = mul i64 %zext_ln70_4, i64 %zext_ln78_15" [d1.cpp:123]   --->   Operation 662 'mul' 'mul_ln123_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 663 '%mul_ln124 = mul i64 %zext_ln78_4, i64 %zext_ln114'
ST_25 : Operation 663 [1/1] (2.10ns)   --->   "%mul_ln124 = mul i64 %zext_ln78_4, i64 %zext_ln114" [d1.cpp:124]   --->   Operation 663 'mul' 'mul_ln124' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 664 '%mul_ln124_2 = mul i64 %zext_ln78_6, i64 %zext_ln78_16'
ST_25 : Operation 664 [1/1] (2.10ns)   --->   "%mul_ln124_2 = mul i64 %zext_ln78_6, i64 %zext_ln78_16" [d1.cpp:124]   --->   Operation 664 'mul' 'mul_ln124_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 665 '%mul_ln124_3 = mul i64 %zext_ln78_7, i64 %zext_ln78_17'
ST_25 : Operation 665 [1/1] (2.10ns)   --->   "%mul_ln124_3 = mul i64 %zext_ln78_7, i64 %zext_ln78_17" [d1.cpp:124]   --->   Operation 665 'mul' 'mul_ln124_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 666 '%mul_ln124_4 = mul i64 %zext_ln70_4, i64 %zext_ln78_14'
ST_25 : Operation 666 [1/1] (2.10ns)   --->   "%mul_ln124_4 = mul i64 %zext_ln70_4, i64 %zext_ln78_14" [d1.cpp:124]   --->   Operation 666 'mul' 'mul_ln124_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 667 '%mul_ln125_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_18'
ST_25 : Operation 667 [1/1] (2.10ns)   --->   "%mul_ln125_1 = mul i64 %zext_ln78_6, i64 %zext_ln78_18" [d1.cpp:125]   --->   Operation 667 'mul' 'mul_ln125_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 668 '%mul_ln125_2 = mul i64 %zext_ln70_4, i64 %zext_ln78_17'
ST_25 : Operation 668 [1/1] (2.10ns)   --->   "%mul_ln125_2 = mul i64 %zext_ln70_4, i64 %zext_ln78_17" [d1.cpp:125]   --->   Operation 668 'mul' 'mul_ln125_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 669 '%mul_ln125_3 = mul i64 %zext_ln78_7, i64 %zext_ln78_16'
ST_25 : Operation 669 [1/1] (2.10ns)   --->   "%mul_ln125_3 = mul i64 %zext_ln78_7, i64 %zext_ln78_16" [d1.cpp:125]   --->   Operation 669 'mul' 'mul_ln125_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 670 '%mul_ln126 = mul i64 %zext_ln78_6, i64 %zext_ln114'
ST_25 : Operation 670 [1/1] (2.10ns)   --->   "%mul_ln126 = mul i64 %zext_ln78_6, i64 %zext_ln114" [d1.cpp:126]   --->   Operation 670 'mul' 'mul_ln126' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 671 '%mul_ln126_1 = mul i64 %zext_ln78_7, i64 %zext_ln78_18'
ST_25 : Operation 671 [1/1] (2.10ns)   --->   "%mul_ln126_1 = mul i64 %zext_ln78_7, i64 %zext_ln78_18" [d1.cpp:126]   --->   Operation 671 'mul' 'mul_ln126_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 672 '%mul_ln126_2 = mul i64 %zext_ln70_4, i64 %zext_ln78_16'
ST_25 : Operation 672 [1/1] (2.10ns)   --->   "%mul_ln126_2 = mul i64 %zext_ln70_4, i64 %zext_ln78_16" [d1.cpp:126]   --->   Operation 672 'mul' 'mul_ln126_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 673 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_12, i32 28, i32 63" [d1.cpp:130]   --->   Operation 673 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 674 [1/1] (0.00ns)   --->   "%zext_ln130_63 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 674 'zext' 'zext_ln130_63' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 675 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i64 %add_ln80_8, i64 %add_ln78_73" [d1.cpp:80]   --->   Operation 675 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 676 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_13 = add i28 %trunc_ln80_5, i28 %trunc_ln80_4" [d1.cpp:80]   --->   Operation 676 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 677 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln80_15 = add i64 %add_ln80_12, i64 %add_ln80_9" [d1.cpp:80]   --->   Operation 677 'add' 'add_ln80_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 678 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln80_17 = add i28 %add_ln80_14, i28 %add_ln80_13" [d1.cpp:80]   --->   Operation 678 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 679 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_14 = add i64 %add_ln80_15, i64 %add_ln80_7" [d1.cpp:80]   --->   Operation 679 'add' 'arr_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 680 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_12, i32 28, i32 55" [d1.cpp:128]   --->   Operation 680 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 681 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln128 = add i28 %add_ln80_17, i28 %add_ln80_16" [d1.cpp:128]   --->   Operation 681 'add' 'add_ln128' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 682 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i64 %add47_4_21297_loc_load" [d1.cpp:130]   --->   Operation 682 'trunc' 'trunc_ln130' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 683 [1/1] (1.08ns)   --->   "%add_ln130_1 = add i64 %zext_ln130_63, i64 %add47_4_21297_loc_load" [d1.cpp:130]   --->   Operation 683 'add' 'add_ln130_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 684 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130 = add i64 %add_ln130_1, i64 %arr_14" [d1.cpp:130]   --->   Operation 684 'add' 'add_ln130' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 685 [1/1] (0.97ns)   --->   "%add_ln130_2 = add i28 %trunc_ln, i28 %trunc_ln130" [d1.cpp:130]   --->   Operation 685 'add' 'add_ln130_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 686 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln130_3 = add i28 %add_ln130_2, i28 %add_ln128" [d1.cpp:130]   --->   Operation 686 'add' 'add_ln130_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 687 [1/1] (0.00ns)   --->   "%lshr_ln130_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %arr_13, i32 28, i32 63" [d1.cpp:130]   --->   Operation 687 'partselect' 'lshr_ln130_1' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 688 '%mul_ln130 = mul i64 %zext_ln70, i64 %zext_ln114'
ST_25 : Operation 688 [1/1] (2.10ns)   --->   "%mul_ln130 = mul i64 %zext_ln70, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 688 'mul' 'mul_ln130' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 689 [1/1] (0.00ns)   --->   "%zext_ln130_1 = zext i64 %mul_ln130" [d1.cpp:130]   --->   Operation 689 'zext' 'zext_ln130_1' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 690 '%mul_ln130_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_18'
ST_25 : Operation 690 [1/1] (2.10ns)   --->   "%mul_ln130_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_18" [d1.cpp:130]   --->   Operation 690 'mul' 'mul_ln130_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 691 [1/1] (0.00ns)   --->   "%zext_ln130_2 = zext i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 691 'zext' 'zext_ln130_2' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 692 '%mul_ln130_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_16'
ST_25 : Operation 692 [1/1] (2.10ns)   --->   "%mul_ln130_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_16" [d1.cpp:130]   --->   Operation 692 'mul' 'mul_ln130_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 693 [1/1] (0.00ns)   --->   "%zext_ln130_3 = zext i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 693 'zext' 'zext_ln130_3' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 694 '%mul_ln130_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_17'
ST_25 : Operation 694 [1/1] (2.10ns)   --->   "%mul_ln130_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_17" [d1.cpp:130]   --->   Operation 694 'mul' 'mul_ln130_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 695 [1/1] (0.00ns)   --->   "%zext_ln130_4 = zext i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 695 'zext' 'zext_ln130_4' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 696 '%mul_ln130_4 = mul i64 %zext_ln78_4, i64 %zext_ln78_14'
ST_25 : Operation 696 [1/1] (2.10ns)   --->   "%mul_ln130_4 = mul i64 %zext_ln78_4, i64 %zext_ln78_14" [d1.cpp:130]   --->   Operation 696 'mul' 'mul_ln130_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 697 [1/1] (0.00ns)   --->   "%zext_ln130_5 = zext i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 697 'zext' 'zext_ln130_5' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 698 '%mul_ln130_5 = mul i64 %zext_ln78_5, i64 %zext_ln78_15'
ST_25 : Operation 698 [1/1] (2.10ns)   --->   "%mul_ln130_5 = mul i64 %zext_ln78_5, i64 %zext_ln78_15" [d1.cpp:130]   --->   Operation 698 'mul' 'mul_ln130_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 699 [1/1] (0.00ns)   --->   "%zext_ln130_6 = zext i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 699 'zext' 'zext_ln130_6' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 700 '%mul_ln130_6 = mul i64 %zext_ln78_6, i64 %zext_ln78_13'
ST_25 : Operation 700 [1/1] (2.10ns)   --->   "%mul_ln130_6 = mul i64 %zext_ln78_6, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 700 'mul' 'mul_ln130_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 701 [1/1] (0.00ns)   --->   "%zext_ln130_7 = zext i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 701 'zext' 'zext_ln130_7' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 702 '%mul_ln130_7 = mul i64 %zext_ln78_7, i64 %zext_ln78_12'
ST_25 : Operation 702 [1/1] (2.10ns)   --->   "%mul_ln130_7 = mul i64 %zext_ln78_7, i64 %zext_ln78_12" [d1.cpp:130]   --->   Operation 702 'mul' 'mul_ln130_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 703 [1/1] (0.00ns)   --->   "%zext_ln130_8 = zext i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 703 'zext' 'zext_ln130_8' <Predicate = true> <Delay = 0.00>
ST_25 : [1/1] (1.31ns)   --->   Input mux for Operation 704 '%mul_ln130_8 = mul i64 %zext_ln70_4, i64 %zext_ln70_3'
ST_25 : Operation 704 [1/1] (2.10ns)   --->   "%mul_ln130_8 = mul i64 %zext_ln70_4, i64 %zext_ln70_3" [d1.cpp:130]   --->   Operation 704 'mul' 'mul_ln130_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 705 [1/1] (0.00ns)   --->   "%zext_ln130_9 = zext i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 705 'zext' 'zext_ln130_9' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 706 [1/1] (0.00ns)   --->   "%trunc_ln130_1 = trunc i64 %mul_ln130_8" [d1.cpp:130]   --->   Operation 706 'trunc' 'trunc_ln130_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 707 [1/1] (0.00ns)   --->   "%trunc_ln130_2 = trunc i64 %mul_ln130_7" [d1.cpp:130]   --->   Operation 707 'trunc' 'trunc_ln130_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 708 [1/1] (0.00ns)   --->   "%trunc_ln130_3 = trunc i64 %mul_ln130_6" [d1.cpp:130]   --->   Operation 708 'trunc' 'trunc_ln130_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 709 [1/1] (0.00ns)   --->   "%trunc_ln130_4 = trunc i64 %mul_ln130_5" [d1.cpp:130]   --->   Operation 709 'trunc' 'trunc_ln130_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 710 [1/1] (0.00ns)   --->   "%trunc_ln130_5 = trunc i64 %mul_ln130_4" [d1.cpp:130]   --->   Operation 710 'trunc' 'trunc_ln130_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 711 [1/1] (0.00ns)   --->   "%trunc_ln130_7 = trunc i64 %mul_ln130_3" [d1.cpp:130]   --->   Operation 711 'trunc' 'trunc_ln130_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 712 [1/1] (0.00ns)   --->   "%trunc_ln130_8 = trunc i64 %mul_ln130_2" [d1.cpp:130]   --->   Operation 712 'trunc' 'trunc_ln130_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 713 [1/1] (0.00ns)   --->   "%trunc_ln130_9 = trunc i64 %mul_ln130_1" [d1.cpp:130]   --->   Operation 713 'trunc' 'trunc_ln130_9' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 714 [1/1] (0.00ns)   --->   "%trunc_ln130_10 = trunc i64 %mul_ln130" [d1.cpp:130]   --->   Operation 714 'trunc' 'trunc_ln130_10' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 715 [1/1] (0.00ns)   --->   "%trunc_ln130_6 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %arr_13, i32 28, i32 55" [d1.cpp:130]   --->   Operation 715 'partselect' 'trunc_ln130_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 716 [1/1] (1.08ns)   --->   "%add_ln130_4 = add i65 %zext_ln130_9, i65 %zext_ln130_7" [d1.cpp:130]   --->   Operation 716 'add' 'add_ln130_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 717 [1/1] (0.00ns)   --->   "%zext_ln130_12 = zext i65 %add_ln130_4" [d1.cpp:130]   --->   Operation 717 'zext' 'zext_ln130_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 718 [1/1] (1.09ns)   --->   "%add_ln130_5 = add i66 %zext_ln130_12, i66 %zext_ln130_8" [d1.cpp:130]   --->   Operation 718 'add' 'add_ln130_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 719 [1/1] (1.08ns)   --->   "%add_ln130_6 = add i65 %zext_ln130_5, i65 %zext_ln130_4" [d1.cpp:130]   --->   Operation 719 'add' 'add_ln130_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 720 [1/1] (0.00ns)   --->   "%zext_ln130_14 = zext i65 %add_ln130_6" [d1.cpp:130]   --->   Operation 720 'zext' 'zext_ln130_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 721 [1/1] (1.09ns)   --->   "%add_ln130_7 = add i66 %zext_ln130_14, i66 %zext_ln130_6" [d1.cpp:130]   --->   Operation 721 'add' 'add_ln130_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 722 [1/1] (1.08ns)   --->   "%add_ln130_9 = add i65 %zext_ln130_2, i65 %zext_ln130_1" [d1.cpp:130]   --->   Operation 722 'add' 'add_ln130_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 723 [1/1] (0.00ns)   --->   "%zext_ln130_17 = zext i65 %add_ln130_9" [d1.cpp:130]   --->   Operation 723 'zext' 'zext_ln130_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 724 [1/1] (1.09ns)   --->   "%add_ln130_10 = add i66 %zext_ln130_17, i66 %zext_ln130_3" [d1.cpp:130]   --->   Operation 724 'add' 'add_ln130_10' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 725 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln130_41 = add i28 %add_ln120_24, i28 %add_ln120_23" [d1.cpp:130]   --->   Operation 725 'add' 'add_ln130_41' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 726 [1/1] (0.00ns)   --->   "%lshr_ln131_1 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130, i32 28, i32 63" [d1.cpp:131]   --->   Operation 726 'partselect' 'lshr_ln131_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 727 [1/1] (0.00ns)   --->   "%zext_ln131_3 = zext i36 %lshr_ln131_1" [d1.cpp:131]   --->   Operation 727 'zext' 'zext_ln131_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 728 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_12 = add i64 %add_ln127_11, i64 %add_ln127_10" [d1.cpp:127]   --->   Operation 728 'add' 'add_ln127_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 729 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_16 = add i28 %trunc_ln127_5, i28 %trunc_ln127_4" [d1.cpp:127]   --->   Operation 729 'add' 'add_ln127_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 730 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln127_18 = add i64 %add_ln127_15, i64 %add_ln127_12" [d1.cpp:127]   --->   Operation 730 'add' 'add_ln127_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 731 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln127_20 = add i28 %add_ln127_17, i28 %add_ln127_16" [d1.cpp:127]   --->   Operation 731 'add' 'add_ln127_20' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 732 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127 = add i64 %add_ln127_18, i64 %add_ln127_9" [d1.cpp:127]   --->   Operation 732 'add' 'add_ln127' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 733 [1/1] (0.00ns)   --->   "%trunc_ln127_8 = trunc i64 %add47_4_11296_loc_load" [d1.cpp:127]   --->   Operation 733 'trunc' 'trunc_ln127_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 734 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln127_21 = add i28 %add_ln127_20, i28 %add_ln127_19" [d1.cpp:127]   --->   Operation 734 'add' 'add_ln127_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 735 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130, i32 28, i32 55" [d1.cpp:131]   --->   Operation 735 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 736 [1/1] (1.08ns)   --->   "%add_ln131_2 = add i64 %add47_4_11296_loc_load, i64 %zext_ln131_3" [d1.cpp:131]   --->   Operation 736 'add' 'add_ln131_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 737 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln131_1 = add i64 %add_ln131_2, i64 %add_ln127" [d1.cpp:131]   --->   Operation 737 'add' 'add_ln131_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 738 [1/1] (0.97ns)   --->   "%add_ln131_4 = add i28 %trunc_ln127_8, i28 %trunc_ln1" [d1.cpp:131]   --->   Operation 738 'add' 'add_ln131_4' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 739 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln131_3 = add i28 %add_ln131_4, i28 %add_ln127_21" [d1.cpp:131]   --->   Operation 739 'add' 'add_ln131_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 740 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 63" [d1.cpp:132]   --->   Operation 740 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 741 [1/1] (0.00ns)   --->   "%zext_ln132 = zext i36 %lshr_ln2" [d1.cpp:132]   --->   Operation 741 'zext' 'zext_ln132' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 742 [1/1] (1.08ns)   --->   "%add_ln126_10 = add i64 %mul_ln126_1, i64 %mul_ln126" [d1.cpp:126]   --->   Operation 742 'add' 'add_ln126_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 743 [1/1] (1.08ns)   --->   "%add_ln126_11 = add i64 %mul_ln126_2, i64 %mul_ln78_11" [d1.cpp:126]   --->   Operation 743 'add' 'add_ln126_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 744 [1/1] (0.00ns)   --->   "%trunc_ln126_4 = trunc i64 %add_ln126_10" [d1.cpp:126]   --->   Operation 744 'trunc' 'trunc_ln126_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 745 [1/1] (0.00ns)   --->   "%trunc_ln126_5 = trunc i64 %add_ln126_11" [d1.cpp:126]   --->   Operation 745 'trunc' 'trunc_ln126_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 746 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_12 = add i64 %add_ln126_11, i64 %add_ln126_10" [d1.cpp:126]   --->   Operation 746 'add' 'add_ln126_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 747 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_16 = add i28 %trunc_ln126_5, i28 %trunc_ln126_4" [d1.cpp:126]   --->   Operation 747 'add' 'add_ln126_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 748 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln126_18 = add i64 %add_ln126_15, i64 %add_ln126_12" [d1.cpp:126]   --->   Operation 748 'add' 'add_ln126_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 749 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln126_20 = add i28 %add_ln126_17, i28 %add_ln126_16" [d1.cpp:126]   --->   Operation 749 'add' 'add_ln126_20' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 750 [1/1] (0.00ns)   --->   "%trunc_ln126_8 = trunc i64 %add47_41295_loc_load" [d1.cpp:126]   --->   Operation 750 'trunc' 'trunc_ln126_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 751 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_21 = add i28 %add_ln126_20, i28 %add_ln126_19" [d1.cpp:126]   --->   Operation 751 'add' 'add_ln126_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 752 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln131_1, i32 28, i32 55" [d1.cpp:132]   --->   Operation 752 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 753 [1/1] (1.08ns)   --->   "%add_ln132_1 = add i64 %add47_41295_loc_load, i64 %zext_ln132" [d1.cpp:132]   --->   Operation 753 'add' 'add_ln132_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 754 [1/1] (0.97ns)   --->   "%add_ln132_2 = add i28 %trunc_ln126_8, i28 %trunc_ln2" [d1.cpp:132]   --->   Operation 754 'add' 'add_ln132_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 755 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_2 = add i28 %add_ln132_2, i28 %add_ln126_21" [d1.cpp:132]   --->   Operation 755 'add' 'out1_w_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 756 [1/1] (1.08ns)   --->   "%add_ln125_7 = add i64 %mul_ln125_3, i64 %mul_ln125_1" [d1.cpp:125]   --->   Operation 756 'add' 'add_ln125_7' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 757 [1/1] (1.08ns)   --->   "%add_ln125_8 = add i64 %mul_ln125_2, i64 %mul_ln78_3" [d1.cpp:125]   --->   Operation 757 'add' 'add_ln125_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 758 [1/1] (0.00ns)   --->   "%trunc_ln125_4 = trunc i64 %add_ln125_7" [d1.cpp:125]   --->   Operation 758 'trunc' 'trunc_ln125_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 759 [1/1] (0.00ns)   --->   "%trunc_ln125_5 = trunc i64 %add_ln125_8" [d1.cpp:125]   --->   Operation 759 'trunc' 'trunc_ln125_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 760 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_9 = add i64 %add_ln125_8, i64 %add_ln125_7" [d1.cpp:125]   --->   Operation 760 'add' 'add_ln125_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 761 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_13 = add i28 %trunc_ln125_5, i28 %trunc_ln125_4" [d1.cpp:125]   --->   Operation 761 'add' 'add_ln125_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 762 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln125_15 = add i64 %add_ln125_12, i64 %add_ln125_9" [d1.cpp:125]   --->   Operation 762 'add' 'add_ln125_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 763 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln125_17 = add i28 %add_ln125_14, i28 %add_ln125_13" [d1.cpp:125]   --->   Operation 763 'add' 'add_ln125_17' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 764 [1/1] (1.08ns)   --->   "%add_ln124_9 = add i64 %mul_ln124_3, i64 %mul_ln124_2" [d1.cpp:124]   --->   Operation 764 'add' 'add_ln124_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 765 [1/1] (1.08ns)   --->   "%add_ln124_10 = add i64 %mul_ln124_4, i64 %mul_ln124" [d1.cpp:124]   --->   Operation 765 'add' 'add_ln124_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 766 [1/1] (0.00ns)   --->   "%trunc_ln124_4 = trunc i64 %add_ln124_9" [d1.cpp:124]   --->   Operation 766 'trunc' 'trunc_ln124_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 767 [1/1] (0.00ns)   --->   "%trunc_ln124_5 = trunc i64 %add_ln124_10" [d1.cpp:124]   --->   Operation 767 'trunc' 'trunc_ln124_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 768 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_11 = add i64 %add_ln124_10, i64 %add_ln124_9" [d1.cpp:124]   --->   Operation 768 'add' 'add_ln124_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 769 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_15 = add i28 %trunc_ln124_5, i28 %trunc_ln124_4" [d1.cpp:124]   --->   Operation 769 'add' 'add_ln124_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 770 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln124_17 = add i64 %add_ln124_14, i64 %add_ln124_11" [d1.cpp:124]   --->   Operation 770 'add' 'add_ln124_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 771 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln124_19 = add i28 %add_ln124_16, i28 %add_ln124_15" [d1.cpp:124]   --->   Operation 771 'add' 'add_ln124_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 772 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_2 = add i64 %add_ln123_1, i64 %add_ln123" [d1.cpp:123]   --->   Operation 772 'add' 'add_ln123_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 773 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_7 = add i28 %trunc_ln123_1, i28 %trunc_ln123" [d1.cpp:123]   --->   Operation 773 'add' 'add_ln123_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 774 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_9 = add i64 %add_ln123_6, i64 %add_ln123_2" [d1.cpp:123]   --->   Operation 774 'add' 'add_ln123_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 775 [1/1] (1.08ns)   --->   "%add_ln123_10 = add i64 %mul_ln123_4, i64 %mul_ln123_3" [d1.cpp:123]   --->   Operation 775 'add' 'add_ln123_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 776 [1/1] (1.08ns)   --->   "%add_ln123_11 = add i64 %mul_ln123_5, i64 %mul_ln123_1" [d1.cpp:123]   --->   Operation 776 'add' 'add_ln123_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 777 [1/1] (0.00ns)   --->   "%trunc_ln123_4 = trunc i64 %add_ln123_10" [d1.cpp:123]   --->   Operation 777 'trunc' 'trunc_ln123_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 778 [1/1] (0.00ns)   --->   "%trunc_ln123_5 = trunc i64 %add_ln123_11" [d1.cpp:123]   --->   Operation 778 'trunc' 'trunc_ln123_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 779 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_12 = add i64 %add_ln123_11, i64 %add_ln123_10" [d1.cpp:123]   --->   Operation 779 'add' 'add_ln123_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 780 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_16 = add i28 %trunc_ln123_5, i28 %trunc_ln123_4" [d1.cpp:123]   --->   Operation 780 'add' 'add_ln123_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 781 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln123_18 = add i64 %add_ln123_15, i64 %add_ln123_12" [d1.cpp:123]   --->   Operation 781 'add' 'add_ln123_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 782 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln123_19 = add i28 %add_ln123_8, i28 %add_ln123_7" [d1.cpp:123]   --->   Operation 782 'add' 'add_ln123_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 783 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln123_20 = add i28 %add_ln123_17, i28 %add_ln123_16" [d1.cpp:123]   --->   Operation 783 'add' 'add_ln123_20' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 784 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_2 = add i64 %add_ln122_1, i64 %add_ln122" [d1.cpp:122]   --->   Operation 784 'add' 'add_ln122_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 785 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_6 = add i28 %trunc_ln122_1, i28 %trunc_ln122" [d1.cpp:122]   --->   Operation 785 'add' 'add_ln122_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 786 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln122_8 = add i64 %add_ln122_4, i64 %add_ln122_2" [d1.cpp:122]   --->   Operation 786 'add' 'add_ln122_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 787 [1/1] (1.08ns)   --->   "%add_ln122_9 = add i64 %mul_ln122_5, i64 %mul_ln122_4" [d1.cpp:122]   --->   Operation 787 'add' 'add_ln122_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 788 [1/1] (1.08ns)   --->   "%add_ln122_10 = add i64 %mul_ln122_6, i64 %mul_ln122_2" [d1.cpp:122]   --->   Operation 788 'add' 'add_ln122_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 789 [1/1] (0.00ns)   --->   "%trunc_ln122_4 = trunc i64 %add_ln122_9" [d1.cpp:122]   --->   Operation 789 'trunc' 'trunc_ln122_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 790 [1/1] (0.00ns)   --->   "%trunc_ln122_5 = trunc i64 %add_ln122_10" [d1.cpp:122]   --->   Operation 790 'trunc' 'trunc_ln122_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 791 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_11 = add i64 %add_ln122_10, i64 %add_ln122_9" [d1.cpp:122]   --->   Operation 791 'add' 'add_ln122_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 792 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_15 = add i28 %trunc_ln122_5, i28 %trunc_ln122_4" [d1.cpp:122]   --->   Operation 792 'add' 'add_ln122_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 793 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln122_17 = add i64 %add_ln122_14, i64 %add_ln122_11" [d1.cpp:122]   --->   Operation 793 'add' 'add_ln122_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 794 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln122_18 = add i28 %add_ln122_7, i28 %add_ln122_6" [d1.cpp:122]   --->   Operation 794 'add' 'add_ln122_18' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 795 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln122_19 = add i28 %add_ln122_16, i28 %add_ln122_15" [d1.cpp:122]   --->   Operation 795 'add' 'add_ln122_19' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 796 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln137 = add i28 %add_ln121_19, i28 %add_ln121_18" [d1.cpp:137]   --->   Operation 796 'add' 'add_ln137' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 797 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_1 = add i28 %trunc_ln, i28 %trunc_ln130_10" [d1.cpp:138]   --->   Operation 797 'add' 'add_ln138_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 798 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_2 = add i28 %add_ln138_1, i28 %trunc_ln130_6" [d1.cpp:138]   --->   Operation 798 'add' 'add_ln138_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 799 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_4 = add i28 %trunc_ln130_9, i28 %trunc_ln130_8" [d1.cpp:138]   --->   Operation 799 'add' 'add_ln138_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 800 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_5 = add i28 %add_ln138_4, i28 %trunc_ln130_7" [d1.cpp:138]   --->   Operation 800 'add' 'add_ln138_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 801 [1/1] (0.97ns)   --->   "%add_ln138_7 = add i28 %trunc_ln130_2, i28 %trunc_ln130_3" [d1.cpp:138]   --->   Operation 801 'add' 'add_ln138_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.53>
ST_26 : Operation 802 [1/1] (0.00ns)   --->   "%add47_3_21294_loc_load = load i64 %add47_3_21294_loc"   --->   Operation 802 'load' 'add47_3_21294_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 803 [1/1] (0.00ns)   --->   "%add47_3_11293_loc_load = load i64 %add47_3_11293_loc"   --->   Operation 803 'load' 'add47_3_11293_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 804 [1/1] (0.00ns)   --->   "%add47_31292_loc_load = load i64 %add47_31292_loc"   --->   Operation 804 'load' 'add47_31292_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 805 [1/1] (0.00ns)   --->   "%add280_2_41282_loc_load = load i64 %add280_2_41282_loc"   --->   Operation 805 'load' 'add280_2_41282_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 806 [1/1] (0.00ns)   --->   "%add256_11277_loc_load = load i64 %add256_11277_loc"   --->   Operation 806 'load' 'add256_11277_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 807 [1/1] (0.00ns)   --->   "%add256_41274_loc_load = load i64 %add256_41274_loc"   --->   Operation 807 'load' 'add256_41274_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 808 [1/1] (0.00ns)   --->   "%add256_31271_loc_load = load i64 %add256_31271_loc"   --->   Operation 808 'load' 'add256_31271_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 809 '%mul_ln114 = mul i64 %zext_ln78_2, i64 %zext_ln70_3'
ST_26 : Operation 809 [1/1] (2.10ns)   --->   "%mul_ln114 = mul i64 %zext_ln78_2, i64 %zext_ln70_3" [d1.cpp:114]   --->   Operation 809 'mul' 'mul_ln114' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 810 '%mul_ln114_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_12'
ST_26 : Operation 810 [1/1] (2.10ns)   --->   "%mul_ln114_1 = mul i64 %zext_ln78_1, i64 %zext_ln78_12" [d1.cpp:114]   --->   Operation 810 'mul' 'mul_ln114_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 811 '%mul_ln114_2 = mul i64 %zext_ln70, i64 %zext_ln78_13'
ST_26 : Operation 811 [1/1] (2.10ns)   --->   "%mul_ln114_2 = mul i64 %zext_ln70, i64 %zext_ln78_13" [d1.cpp:114]   --->   Operation 811 'mul' 'mul_ln114_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 812 '%mul_ln114_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_15'
ST_26 : Operation 812 [1/1] (2.10ns)   --->   "%mul_ln114_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_15" [d1.cpp:114]   --->   Operation 812 'mul' 'mul_ln114_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 813 '%mul_ln114_4 = mul i64 %zext_ln80_4, i64 %zext_ln78_14'
ST_26 : Operation 813 [1/1] (2.10ns)   --->   "%mul_ln114_4 = mul i64 %zext_ln80_4, i64 %zext_ln78_14" [d1.cpp:114]   --->   Operation 813 'mul' 'mul_ln114_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 814 '%mul_ln114_5 = mul i64 %zext_ln80_3, i64 %zext_ln78_17'
ST_26 : Operation 814 [1/1] (2.10ns)   --->   "%mul_ln114_5 = mul i64 %zext_ln80_3, i64 %zext_ln78_17" [d1.cpp:114]   --->   Operation 814 'mul' 'mul_ln114_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 815 '%mul_ln114_6 = mul i64 %zext_ln80_2, i64 %zext_ln78_16'
ST_26 : Operation 815 [1/1] (2.10ns)   --->   "%mul_ln114_6 = mul i64 %zext_ln80_2, i64 %zext_ln78_16" [d1.cpp:114]   --->   Operation 815 'mul' 'mul_ln114_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 816 '%mul_ln114_7 = mul i64 %zext_ln80_1, i64 %zext_ln78_18'
ST_26 : Operation 816 [1/1] (2.10ns)   --->   "%mul_ln114_7 = mul i64 %zext_ln80_1, i64 %zext_ln78_18" [d1.cpp:114]   --->   Operation 816 'mul' 'mul_ln114_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 817 '%mul_ln114_8 = mul i64 %zext_ln80, i64 %zext_ln114'
ST_26 : Operation 817 [1/1] (2.10ns)   --->   "%mul_ln114_8 = mul i64 %zext_ln80, i64 %zext_ln114" [d1.cpp:114]   --->   Operation 817 'mul' 'mul_ln114_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 818 '%mul_ln115 = mul i64 %zext_ln78_3, i64 %zext_ln70_3'
ST_26 : Operation 818 [1/1] (2.10ns)   --->   "%mul_ln115 = mul i64 %zext_ln78_3, i64 %zext_ln70_3" [d1.cpp:115]   --->   Operation 818 'mul' 'mul_ln115' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 819 '%mul_ln115_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_12'
ST_26 : Operation 819 [1/1] (2.10ns)   --->   "%mul_ln115_1 = mul i64 %zext_ln78_2, i64 %zext_ln78_12" [d1.cpp:115]   --->   Operation 819 'mul' 'mul_ln115_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 820 '%mul_ln115_2 = mul i64 %zext_ln70, i64 %zext_ln78_15'
ST_26 : Operation 820 [1/1] (2.10ns)   --->   "%mul_ln115_2 = mul i64 %zext_ln70, i64 %zext_ln78_15" [d1.cpp:115]   --->   Operation 820 'mul' 'mul_ln115_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 821 '%mul_ln115_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_14'
ST_26 : Operation 821 [1/1] (2.10ns)   --->   "%mul_ln115_3 = mul i64 %zext_ln80_5, i64 %zext_ln78_14" [d1.cpp:115]   --->   Operation 821 'mul' 'mul_ln115_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 822 '%mul_ln115_4 = mul i64 %zext_ln78_1, i64 %zext_ln78_13'
ST_26 : Operation 822 [1/1] (2.10ns)   --->   "%mul_ln115_4 = mul i64 %zext_ln78_1, i64 %zext_ln78_13" [d1.cpp:115]   --->   Operation 822 'mul' 'mul_ln115_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 823 '%mul_ln115_5 = mul i64 %zext_ln80_4, i64 %zext_ln78_17'
ST_26 : Operation 823 [1/1] (2.10ns)   --->   "%mul_ln115_5 = mul i64 %zext_ln80_4, i64 %zext_ln78_17" [d1.cpp:115]   --->   Operation 823 'mul' 'mul_ln115_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 824 '%mul_ln115_6 = mul i64 %zext_ln80_3, i64 %zext_ln78_16'
ST_26 : Operation 824 [1/1] (2.10ns)   --->   "%mul_ln115_6 = mul i64 %zext_ln80_3, i64 %zext_ln78_16" [d1.cpp:115]   --->   Operation 824 'mul' 'mul_ln115_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 825 '%mul_ln115_7 = mul i64 %zext_ln80_2, i64 %zext_ln78_18'
ST_26 : Operation 825 [1/1] (2.10ns)   --->   "%mul_ln115_7 = mul i64 %zext_ln80_2, i64 %zext_ln78_18" [d1.cpp:115]   --->   Operation 825 'mul' 'mul_ln115_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 826 '%mul_ln115_8 = mul i64 %zext_ln80_1, i64 %zext_ln114'
ST_26 : Operation 826 [1/1] (2.10ns)   --->   "%mul_ln115_8 = mul i64 %zext_ln80_1, i64 %zext_ln114" [d1.cpp:115]   --->   Operation 826 'mul' 'mul_ln115_8' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 827 '%mul_ln116 = mul i64 %zext_ln78_4, i64 %zext_ln70_3'
ST_26 : Operation 827 [1/1] (2.10ns)   --->   "%mul_ln116 = mul i64 %zext_ln78_4, i64 %zext_ln70_3" [d1.cpp:116]   --->   Operation 827 'mul' 'mul_ln116' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 828 '%mul_ln116_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_12'
ST_26 : Operation 828 [1/1] (2.10ns)   --->   "%mul_ln116_1 = mul i64 %zext_ln78_3, i64 %zext_ln78_12" [d1.cpp:116]   --->   Operation 828 'mul' 'mul_ln116_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 829 '%mul_ln116_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_13'
ST_26 : Operation 829 [1/1] (2.10ns)   --->   "%mul_ln116_2 = mul i64 %zext_ln78_2, i64 %zext_ln78_13" [d1.cpp:116]   --->   Operation 829 'mul' 'mul_ln116_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 830 '%mul_ln116_3 = mul i64 %zext_ln78_1, i64 %zext_ln78_15'
ST_26 : Operation 830 [1/1] (2.10ns)   --->   "%mul_ln116_3 = mul i64 %zext_ln78_1, i64 %zext_ln78_15" [d1.cpp:116]   --->   Operation 830 'mul' 'mul_ln116_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 831 '%mul_ln116_4 = mul i64 %zext_ln70, i64 %zext_ln78_14'
ST_26 : Operation 831 [1/1] (2.10ns)   --->   "%mul_ln116_4 = mul i64 %zext_ln70, i64 %zext_ln78_14" [d1.cpp:116]   --->   Operation 831 'mul' 'mul_ln116_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 832 '%mul_ln116_5 = mul i64 %zext_ln80_5, i64 %zext_ln78_17'
ST_26 : Operation 832 [1/1] (2.10ns)   --->   "%mul_ln116_5 = mul i64 %zext_ln80_5, i64 %zext_ln78_17" [d1.cpp:116]   --->   Operation 832 'mul' 'mul_ln116_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 833 '%mul_ln116_6 = mul i64 %zext_ln80_4, i64 %zext_ln78_16'
ST_26 : Operation 833 [1/1] (2.10ns)   --->   "%mul_ln116_6 = mul i64 %zext_ln80_4, i64 %zext_ln78_16" [d1.cpp:116]   --->   Operation 833 'mul' 'mul_ln116_6' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 834 '%mul_ln116_7 = mul i64 %zext_ln80_3, i64 %zext_ln78_18'
ST_26 : Operation 834 [1/1] (2.10ns)   --->   "%mul_ln116_7 = mul i64 %zext_ln80_3, i64 %zext_ln78_18" [d1.cpp:116]   --->   Operation 834 'mul' 'mul_ln116_7' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 835 [1/1] (1.08ns)   --->   "%add_ln116 = add i64 %mul_ln116_5, i64 %mul_ln116_6" [d1.cpp:116]   --->   Operation 835 'add' 'add_ln116' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 836 [1/1] (1.08ns)   --->   "%add_ln116_1 = add i64 %mul_ln116_4, i64 %mul_ln116_3" [d1.cpp:116]   --->   Operation 836 'add' 'add_ln116_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 837 [1/1] (0.00ns)   --->   "%trunc_ln116 = trunc i64 %add_ln116" [d1.cpp:116]   --->   Operation 837 'trunc' 'trunc_ln116' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 838 [1/1] (0.00ns)   --->   "%trunc_ln116_1 = trunc i64 %add_ln116_1" [d1.cpp:116]   --->   Operation 838 'trunc' 'trunc_ln116_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 839 [1/1] (1.08ns)   --->   "%add_ln116_2 = add i64 %add_ln116_1, i64 %add_ln116" [d1.cpp:116]   --->   Operation 839 'add' 'add_ln116_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 840 [1/1] (1.08ns)   --->   "%add_ln116_3 = add i64 %mul_ln116_1, i64 %mul_ln116_2" [d1.cpp:116]   --->   Operation 840 'add' 'add_ln116_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 841 [1/1] (1.08ns)   --->   "%add_ln116_4 = add i64 %mul_ln116, i64 %mul_ln116_7" [d1.cpp:116]   --->   Operation 841 'add' 'add_ln116_4' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 842 [1/1] (0.00ns)   --->   "%trunc_ln116_2 = trunc i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 842 'trunc' 'trunc_ln116_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 843 [1/1] (0.00ns)   --->   "%trunc_ln116_3 = trunc i64 %add_ln116_4" [d1.cpp:116]   --->   Operation 843 'trunc' 'trunc_ln116_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 844 [1/1] (1.08ns)   --->   "%add_ln116_5 = add i64 %add_ln116_4, i64 %add_ln116_3" [d1.cpp:116]   --->   Operation 844 'add' 'add_ln116_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 845 [1/1] (0.97ns)   --->   "%add_ln116_8 = add i28 %trunc_ln116_3, i28 %trunc_ln116_2" [d1.cpp:116]   --->   Operation 845 'add' 'add_ln116_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 846 '%mul_ln117 = mul i64 %zext_ln70, i64 %zext_ln78_17'
ST_26 : Operation 846 [1/1] (2.10ns)   --->   "%mul_ln117 = mul i64 %zext_ln70, i64 %zext_ln78_17" [d1.cpp:117]   --->   Operation 846 'mul' 'mul_ln117' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 847 '%mul_ln117_1 = mul i64 %zext_ln78_5, i64 %zext_ln70_3'
ST_26 : Operation 847 [1/1] (2.10ns)   --->   "%mul_ln117_1 = mul i64 %zext_ln78_5, i64 %zext_ln70_3" [d1.cpp:117]   --->   Operation 847 'mul' 'mul_ln117_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 848 '%mul_ln117_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_12'
ST_26 : Operation 848 [1/1] (2.10ns)   --->   "%mul_ln117_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_12" [d1.cpp:117]   --->   Operation 848 'mul' 'mul_ln117_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 849 '%mul_ln117_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_13'
ST_26 : Operation 849 [1/1] (2.10ns)   --->   "%mul_ln117_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_13" [d1.cpp:117]   --->   Operation 849 'mul' 'mul_ln117_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 850 '%mul_ln117_4 = mul i64 %zext_ln78_2, i64 %zext_ln78_15'
ST_26 : Operation 850 [1/1] (2.10ns)   --->   "%mul_ln117_4 = mul i64 %zext_ln78_2, i64 %zext_ln78_15" [d1.cpp:117]   --->   Operation 850 'mul' 'mul_ln117_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 851 '%mul_ln117_5 = mul i64 %zext_ln78_1, i64 %zext_ln78_14'
ST_26 : Operation 851 [1/1] (2.10ns)   --->   "%mul_ln117_5 = mul i64 %zext_ln78_1, i64 %zext_ln78_14" [d1.cpp:117]   --->   Operation 851 'mul' 'mul_ln117_5' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 852 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117 = add i64 %mul_ln117_5, i64 %mul_ln117_3" [d1.cpp:117]   --->   Operation 852 'add' 'add_ln117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 853 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_1 = add i64 %add_ln117, i64 %mul_ln117_4" [d1.cpp:117]   --->   Operation 853 'add' 'add_ln117_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 854 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_2 = add i64 %mul_ln117_2, i64 %mul_ln117" [d1.cpp:117]   --->   Operation 854 'add' 'add_ln117_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 855 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln117_3 = add i64 %add_ln117_2, i64 %mul_ln117_1" [d1.cpp:117]   --->   Operation 855 'add' 'add_ln117_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 856 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 856 'trunc' 'trunc_ln117' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 857 [1/1] (0.00ns)   --->   "%trunc_ln117_1 = trunc i64 %add_ln117_3" [d1.cpp:117]   --->   Operation 857 'trunc' 'trunc_ln117_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 858 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln117_4 = add i64 %add_ln117_3, i64 %add_ln117_1" [d1.cpp:117]   --->   Operation 858 'add' 'add_ln117_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 859 [1/1] (0.00ns)   --->   "%trunc_ln117_2 = trunc i64 %add256_31271_loc_load" [d1.cpp:117]   --->   Operation 859 'trunc' 'trunc_ln117_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 860 [1/1] (0.97ns)   --->   "%add_ln117_5 = add i28 %trunc_ln117_1, i28 %trunc_ln117" [d1.cpp:117]   --->   Operation 860 'add' 'add_ln117_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 861 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_9 = add i64 %add_ln117_4, i64 %add256_31271_loc_load" [d1.cpp:117]   --->   Operation 861 'add' 'arr_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 862 '%mul_ln118 = mul i64 %zext_ln78_6, i64 %zext_ln70_3'
ST_26 : Operation 862 [1/1] (2.10ns)   --->   "%mul_ln118 = mul i64 %zext_ln78_6, i64 %zext_ln70_3" [d1.cpp:118]   --->   Operation 862 'mul' 'mul_ln118' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 863 '%mul_ln118_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_12'
ST_26 : Operation 863 [1/1] (2.10ns)   --->   "%mul_ln118_1 = mul i64 %zext_ln78_5, i64 %zext_ln78_12" [d1.cpp:118]   --->   Operation 863 'mul' 'mul_ln118_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 864 '%mul_ln118_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_13'
ST_26 : Operation 864 [1/1] (2.10ns)   --->   "%mul_ln118_2 = mul i64 %zext_ln78_4, i64 %zext_ln78_13" [d1.cpp:118]   --->   Operation 864 'mul' 'mul_ln118_2' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 865 '%mul_ln118_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_15'
ST_26 : Operation 865 [1/1] (2.10ns)   --->   "%mul_ln118_3 = mul i64 %zext_ln78_3, i64 %zext_ln78_15" [d1.cpp:118]   --->   Operation 865 'mul' 'mul_ln118_3' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 866 [1/1] (1.08ns)   --->   "%add_ln118 = add i64 %mul_ln118, i64 %mul_ln118_2" [d1.cpp:118]   --->   Operation 866 'add' 'add_ln118' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 867 [1/1] (1.08ns)   --->   "%add_ln118_1 = add i64 %mul_ln118_1, i64 %mul_ln118_3" [d1.cpp:118]   --->   Operation 867 'add' 'add_ln118_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 868 [1/1] (0.00ns)   --->   "%trunc_ln118 = trunc i64 %add_ln118" [d1.cpp:118]   --->   Operation 868 'trunc' 'trunc_ln118' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 869 [1/1] (0.00ns)   --->   "%trunc_ln118_1 = trunc i64 %add_ln118_1" [d1.cpp:118]   --->   Operation 869 'trunc' 'trunc_ln118_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 870 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_2 = add i64 %add_ln118_1, i64 %add_ln118" [d1.cpp:118]   --->   Operation 870 'add' 'add_ln118_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 871 [1/1] (0.00ns)   --->   "%trunc_ln118_2 = trunc i64 %add256_41274_loc_load" [d1.cpp:118]   --->   Operation 871 'trunc' 'trunc_ln118_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 872 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_10 = add i64 %add_ln118_2, i64 %add256_41274_loc_load" [d1.cpp:118]   --->   Operation 872 'add' 'arr_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 873 [1/1] (0.00ns)   --->   "%trunc_ln119 = trunc i64 %add256_11277_loc_load" [d1.cpp:119]   --->   Operation 873 'trunc' 'trunc_ln119' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 874 [1/1] (1.08ns)   --->   "%arr_11 = add i64 %add_ln119, i64 %add256_11277_loc_load" [d1.cpp:119]   --->   Operation 874 'add' 'arr_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 875 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i36 %lshr_ln130_1" [d1.cpp:130]   --->   Operation 875 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln130_10 = zext i64 %add280_2_41282_loc_load" [d1.cpp:130]   --->   Operation 876 'zext' 'zext_ln130_10' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 877 [1/1] (0.00ns)   --->   "%zext_ln130_11 = zext i36 %lshr_ln" [d1.cpp:130]   --->   Operation 877 'zext' 'zext_ln130_11' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 878 [1/1] (0.00ns)   --->   "%trunc_ln130_12 = trunc i64 %add280_2_41282_loc_load" [d1.cpp:130]   --->   Operation 878 'trunc' 'trunc_ln130_12' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 879 [1/1] (0.00ns)   --->   "%zext_ln130_13 = zext i66 %add_ln130_5" [d1.cpp:130]   --->   Operation 879 'zext' 'zext_ln130_13' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 880 [1/1] (0.00ns)   --->   "%zext_ln130_15 = zext i66 %add_ln130_7" [d1.cpp:130]   --->   Operation 880 'zext' 'zext_ln130_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 881 [1/1] (1.10ns)   --->   "%add_ln130_43 = add i66 %add_ln130_7, i66 %add_ln130_5" [d1.cpp:130]   --->   Operation 881 'add' 'add_ln130_43' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 882 [1/1] (1.10ns)   --->   "%add_ln130_8 = add i67 %zext_ln130_15, i67 %zext_ln130_13" [d1.cpp:130]   --->   Operation 882 'add' 'add_ln130_8' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 883 [1/1] (0.00ns)   --->   "%trunc_ln130_13 = trunc i66 %add_ln130_43" [d1.cpp:130]   --->   Operation 883 'trunc' 'trunc_ln130_13' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 884 [1/1] (0.00ns)   --->   "%zext_ln130_16 = zext i67 %add_ln130_8" [d1.cpp:130]   --->   Operation 884 'zext' 'zext_ln130_16' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 885 [1/1] (0.00ns)   --->   "%zext_ln130_18 = zext i66 %add_ln130_10" [d1.cpp:130]   --->   Operation 885 'zext' 'zext_ln130_18' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 886 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln130_12 = add i65 %zext_ln130_11, i65 %zext_ln130_10" [d1.cpp:130]   --->   Operation 886 'add' 'add_ln130_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 887 [1/1] (0.82ns) (root node of TernaryAdder)   --->   "%add_ln130_13 = add i65 %add_ln130_12, i65 %zext_ln130" [d1.cpp:130]   --->   Operation 887 'add' 'add_ln130_13' <Predicate = true> <Delay = 0.82> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 888 [1/1] (0.00ns)   --->   "%zext_ln130_19 = zext i65 %add_ln130_13" [d1.cpp:130]   --->   Operation 888 'zext' 'zext_ln130_19' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 889 [1/1] (1.10ns)   --->   "%add_ln130_14 = add i67 %zext_ln130_19, i67 %zext_ln130_18" [d1.cpp:130]   --->   Operation 889 'add' 'add_ln130_14' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 890 [1/1] (0.00ns)   --->   "%trunc_ln130_14 = trunc i67 %add_ln130_14" [d1.cpp:130]   --->   Operation 890 'trunc' 'trunc_ln130_14' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 891 [1/1] (0.00ns)   --->   "%zext_ln130_20 = zext i67 %add_ln130_14" [d1.cpp:130]   --->   Operation 891 'zext' 'zext_ln130_20' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 892 [1/1] (1.09ns)   --->   "%add_ln130_35 = add i56 %trunc_ln130_14, i56 %trunc_ln130_13" [d1.cpp:130]   --->   Operation 892 'add' 'add_ln130_35' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 893 [1/1] (1.10ns)   --->   "%add_ln130_11 = add i68 %zext_ln130_20, i68 %zext_ln130_16" [d1.cpp:130]   --->   Operation 893 'add' 'add_ln130_11' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 894 [1/1] (0.00ns)   --->   "%trunc_ln130_s = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_11, i32 28, i32 67" [d1.cpp:130]   --->   Operation 894 'partselect' 'trunc_ln130_s' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 895 [1/1] (0.00ns)   --->   "%zext_ln130_21 = zext i40 %trunc_ln130_s" [d1.cpp:130]   --->   Operation 895 'zext' 'zext_ln130_21' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 896 '%mul_ln130_9 = mul i64 %zext_ln80_5, i64 %zext_ln114'
ST_26 : Operation 896 [1/1] (2.10ns)   --->   "%mul_ln130_9 = mul i64 %zext_ln80_5, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 896 'mul' 'mul_ln130_9' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 897 [1/1] (0.00ns)   --->   "%zext_ln130_22 = zext i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 897 'zext' 'zext_ln130_22' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 898 '%mul_ln130_10 = mul i64 %zext_ln70, i64 %zext_ln78_18'
ST_26 : Operation 898 [1/1] (2.10ns)   --->   "%mul_ln130_10 = mul i64 %zext_ln70, i64 %zext_ln78_18" [d1.cpp:130]   --->   Operation 898 'mul' 'mul_ln130_10' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 899 [1/1] (0.00ns)   --->   "%zext_ln130_23 = zext i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 899 'zext' 'zext_ln130_23' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 900 '%mul_ln130_11 = mul i64 %zext_ln78_1, i64 %zext_ln78_16'
ST_26 : Operation 900 [1/1] (2.10ns)   --->   "%mul_ln130_11 = mul i64 %zext_ln78_1, i64 %zext_ln78_16" [d1.cpp:130]   --->   Operation 900 'mul' 'mul_ln130_11' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 901 [1/1] (0.00ns)   --->   "%zext_ln130_24 = zext i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 901 'zext' 'zext_ln130_24' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 902 '%mul_ln130_12 = mul i64 %zext_ln78_2, i64 %zext_ln78_17'
ST_26 : Operation 902 [1/1] (2.10ns)   --->   "%mul_ln130_12 = mul i64 %zext_ln78_2, i64 %zext_ln78_17" [d1.cpp:130]   --->   Operation 902 'mul' 'mul_ln130_12' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 903 [1/1] (0.00ns)   --->   "%zext_ln130_25 = zext i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 903 'zext' 'zext_ln130_25' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 904 '%mul_ln130_13 = mul i64 %zext_ln78_3, i64 %zext_ln78_14'
ST_26 : Operation 904 [1/1] (2.10ns)   --->   "%mul_ln130_13 = mul i64 %zext_ln78_3, i64 %zext_ln78_14" [d1.cpp:130]   --->   Operation 904 'mul' 'mul_ln130_13' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 905 [1/1] (0.00ns)   --->   "%zext_ln130_26 = zext i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 905 'zext' 'zext_ln130_26' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 906 '%mul_ln130_14 = mul i64 %zext_ln78_4, i64 %zext_ln78_15'
ST_26 : Operation 906 [1/1] (2.10ns)   --->   "%mul_ln130_14 = mul i64 %zext_ln78_4, i64 %zext_ln78_15" [d1.cpp:130]   --->   Operation 906 'mul' 'mul_ln130_14' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 907 [1/1] (0.00ns)   --->   "%zext_ln130_27 = zext i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 907 'zext' 'zext_ln130_27' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 908 '%mul_ln130_15 = mul i64 %zext_ln78_5, i64 %zext_ln78_13'
ST_26 : Operation 908 [1/1] (2.10ns)   --->   "%mul_ln130_15 = mul i64 %zext_ln78_5, i64 %zext_ln78_13" [d1.cpp:130]   --->   Operation 908 'mul' 'mul_ln130_15' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 909 [1/1] (0.00ns)   --->   "%zext_ln130_28 = zext i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 909 'zext' 'zext_ln130_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 910 [1/1] (0.00ns)   --->   "%zext_ln130_29 = zext i64 %arr_11" [d1.cpp:130]   --->   Operation 910 'zext' 'zext_ln130_29' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 911 [1/1] (0.00ns)   --->   "%trunc_ln130_15 = trunc i64 %mul_ln130_15" [d1.cpp:130]   --->   Operation 911 'trunc' 'trunc_ln130_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 912 [1/1] (0.00ns)   --->   "%trunc_ln130_16 = trunc i64 %mul_ln130_14" [d1.cpp:130]   --->   Operation 912 'trunc' 'trunc_ln130_16' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 913 [1/1] (0.00ns)   --->   "%trunc_ln130_17 = trunc i64 %mul_ln130_13" [d1.cpp:130]   --->   Operation 913 'trunc' 'trunc_ln130_17' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 914 [1/1] (0.00ns)   --->   "%trunc_ln130_18 = trunc i64 %mul_ln130_12" [d1.cpp:130]   --->   Operation 914 'trunc' 'trunc_ln130_18' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 915 [1/1] (0.00ns)   --->   "%trunc_ln130_21 = trunc i64 %mul_ln130_11" [d1.cpp:130]   --->   Operation 915 'trunc' 'trunc_ln130_21' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 916 [1/1] (0.00ns)   --->   "%trunc_ln130_22 = trunc i64 %mul_ln130_10" [d1.cpp:130]   --->   Operation 916 'trunc' 'trunc_ln130_22' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 917 [1/1] (0.00ns)   --->   "%trunc_ln130_23 = trunc i64 %mul_ln130_9" [d1.cpp:130]   --->   Operation 917 'trunc' 'trunc_ln130_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 918 [1/1] (0.00ns)   --->   "%trunc_ln130_11 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_35, i32 28, i32 55" [d1.cpp:130]   --->   Operation 918 'partselect' 'trunc_ln130_11' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 919 [1/1] (1.08ns)   --->   "%add_ln130_15 = add i65 %zext_ln130_27, i65 %zext_ln130_28" [d1.cpp:130]   --->   Operation 919 'add' 'add_ln130_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 920 [1/1] (0.00ns)   --->   "%zext_ln130_30 = zext i65 %add_ln130_15" [d1.cpp:130]   --->   Operation 920 'zext' 'zext_ln130_30' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 921 [1/1] (1.08ns)   --->   "%add_ln130_16 = add i65 %zext_ln130_26, i65 %zext_ln130_25" [d1.cpp:130]   --->   Operation 921 'add' 'add_ln130_16' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 922 [1/1] (0.00ns)   --->   "%zext_ln130_31 = zext i65 %add_ln130_16" [d1.cpp:130]   --->   Operation 922 'zext' 'zext_ln130_31' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 923 [1/1] (1.09ns)   --->   "%add_ln130_17 = add i66 %zext_ln130_31, i66 %zext_ln130_30" [d1.cpp:130]   --->   Operation 923 'add' 'add_ln130_17' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 924 [1/1] (1.08ns)   --->   "%add_ln130_18 = add i65 %zext_ln130_24, i65 %zext_ln130_23" [d1.cpp:130]   --->   Operation 924 'add' 'add_ln130_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 925 [1/1] (0.00ns)   --->   "%zext_ln130_33 = zext i65 %add_ln130_18" [d1.cpp:130]   --->   Operation 925 'zext' 'zext_ln130_33' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 926 [1/1] (1.08ns)   --->   "%add_ln130_20 = add i65 %zext_ln130_29, i65 %zext_ln130_21" [d1.cpp:130]   --->   Operation 926 'add' 'add_ln130_20' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 927 [1/1] (0.00ns)   --->   "%zext_ln130_34 = zext i65 %add_ln130_20" [d1.cpp:130]   --->   Operation 927 'zext' 'zext_ln130_34' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 928 [1/1] (1.09ns)   --->   "%add_ln130_21 = add i66 %zext_ln130_34, i66 %zext_ln130_22" [d1.cpp:130]   --->   Operation 928 'add' 'add_ln130_21' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 929 [1/1] (0.00ns)   --->   "%zext_ln130_35 = zext i66 %add_ln130_21" [d1.cpp:130]   --->   Operation 929 'zext' 'zext_ln130_35' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 930 [1/1] (1.10ns)   --->   "%add_ln130_22 = add i67 %zext_ln130_35, i67 %zext_ln130_33" [d1.cpp:130]   --->   Operation 930 'add' 'add_ln130_22' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 931 '%mul_ln130_16 = mul i64 %zext_ln80_4, i64 %zext_ln114'
ST_26 : Operation 931 [1/1] (2.10ns)   --->   "%mul_ln130_16 = mul i64 %zext_ln80_4, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 931 'mul' 'mul_ln130_16' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 932 [1/1] (0.00ns)   --->   "%zext_ln130_38 = zext i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 932 'zext' 'zext_ln130_38' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 933 '%mul_ln130_17 = mul i64 %zext_ln80_5, i64 %zext_ln78_18'
ST_26 : Operation 933 [1/1] (2.10ns)   --->   "%mul_ln130_17 = mul i64 %zext_ln80_5, i64 %zext_ln78_18" [d1.cpp:130]   --->   Operation 933 'mul' 'mul_ln130_17' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 934 [1/1] (0.00ns)   --->   "%zext_ln130_39 = zext i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 934 'zext' 'zext_ln130_39' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 935 '%mul_ln130_18 = mul i64 %zext_ln70, i64 %zext_ln78_16'
ST_26 : Operation 935 [1/1] (2.10ns)   --->   "%mul_ln130_18 = mul i64 %zext_ln70, i64 %zext_ln78_16" [d1.cpp:130]   --->   Operation 935 'mul' 'mul_ln130_18' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 936 [1/1] (0.00ns)   --->   "%zext_ln130_40 = zext i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 936 'zext' 'zext_ln130_40' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 937 '%mul_ln130_19 = mul i64 %zext_ln78_1, i64 %zext_ln78_17'
ST_26 : Operation 937 [1/1] (2.10ns)   --->   "%mul_ln130_19 = mul i64 %zext_ln78_1, i64 %zext_ln78_17" [d1.cpp:130]   --->   Operation 937 'mul' 'mul_ln130_19' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 938 [1/1] (0.00ns)   --->   "%zext_ln130_41 = zext i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 938 'zext' 'zext_ln130_41' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 939 '%mul_ln130_20 = mul i64 %zext_ln78_2, i64 %zext_ln78_14'
ST_26 : Operation 939 [1/1] (2.10ns)   --->   "%mul_ln130_20 = mul i64 %zext_ln78_2, i64 %zext_ln78_14" [d1.cpp:130]   --->   Operation 939 'mul' 'mul_ln130_20' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 940 [1/1] (0.00ns)   --->   "%zext_ln130_42 = zext i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 940 'zext' 'zext_ln130_42' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 941 [1/1] (0.00ns)   --->   "%trunc_ln130_24 = trunc i64 %mul_ln130_20" [d1.cpp:130]   --->   Operation 941 'trunc' 'trunc_ln130_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 942 [1/1] (0.00ns)   --->   "%trunc_ln130_25 = trunc i64 %mul_ln130_19" [d1.cpp:130]   --->   Operation 942 'trunc' 'trunc_ln130_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 943 [1/1] (0.00ns)   --->   "%trunc_ln130_28 = trunc i64 %mul_ln130_18" [d1.cpp:130]   --->   Operation 943 'trunc' 'trunc_ln130_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 944 [1/1] (0.00ns)   --->   "%trunc_ln130_29 = trunc i64 %mul_ln130_17" [d1.cpp:130]   --->   Operation 944 'trunc' 'trunc_ln130_29' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 945 [1/1] (0.00ns)   --->   "%trunc_ln130_30 = trunc i64 %mul_ln130_16" [d1.cpp:130]   --->   Operation 945 'trunc' 'trunc_ln130_30' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 946 [1/1] (1.08ns)   --->   "%add_ln130_23 = add i65 %zext_ln130_42, i65 %zext_ln130_40" [d1.cpp:130]   --->   Operation 946 'add' 'add_ln130_23' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 947 [1/1] (0.00ns)   --->   "%zext_ln130_44 = zext i65 %add_ln130_23" [d1.cpp:130]   --->   Operation 947 'zext' 'zext_ln130_44' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 948 [1/1] (1.09ns)   --->   "%add_ln130_24 = add i66 %zext_ln130_44, i66 %zext_ln130_41" [d1.cpp:130]   --->   Operation 948 'add' 'add_ln130_24' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 949 [1/1] (0.00ns)   --->   "%trunc_ln130_33 = trunc i66 %add_ln130_24" [d1.cpp:130]   --->   Operation 949 'trunc' 'trunc_ln130_33' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 950 [1/1] (1.08ns)   --->   "%add_ln130_26 = add i65 %zext_ln130_39, i65 %zext_ln130_38" [d1.cpp:130]   --->   Operation 950 'add' 'add_ln130_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 951 '%mul_ln130_21 = mul i64 %zext_ln80_3, i64 %zext_ln114'
ST_26 : Operation 951 [1/1] (2.10ns)   --->   "%mul_ln130_21 = mul i64 %zext_ln80_3, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 951 'mul' 'mul_ln130_21' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 952 '%mul_ln130_22 = mul i64 %zext_ln80_4, i64 %zext_ln78_18'
ST_26 : Operation 952 [1/1] (2.10ns)   --->   "%mul_ln130_22 = mul i64 %zext_ln80_4, i64 %zext_ln78_18" [d1.cpp:130]   --->   Operation 952 'mul' 'mul_ln130_22' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 953 [1/1] (0.00ns)   --->   "%zext_ln130_51 = zext i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 953 'zext' 'zext_ln130_51' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 954 '%mul_ln130_23 = mul i64 %zext_ln80_5, i64 %zext_ln78_16'
ST_26 : Operation 954 [1/1] (2.10ns)   --->   "%mul_ln130_23 = mul i64 %zext_ln80_5, i64 %zext_ln78_16" [d1.cpp:130]   --->   Operation 954 'mul' 'mul_ln130_23' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 955 [1/1] (0.00ns)   --->   "%zext_ln130_52 = zext i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 955 'zext' 'zext_ln130_52' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 956 [1/1] (0.00ns)   --->   "%trunc_ln130_39 = trunc i64 %mul_ln130_23" [d1.cpp:130]   --->   Operation 956 'trunc' 'trunc_ln130_39' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 957 [1/1] (0.00ns)   --->   "%trunc_ln130_40 = trunc i64 %mul_ln130_22" [d1.cpp:130]   --->   Operation 957 'trunc' 'trunc_ln130_40' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 958 [1/1] (0.00ns)   --->   "%trunc_ln130_41 = trunc i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 958 'trunc' 'trunc_ln130_41' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 959 [1/1] (1.08ns)   --->   "%add_ln130_30 = add i65 %zext_ln130_51, i65 %zext_ln130_52" [d1.cpp:130]   --->   Operation 959 'add' 'add_ln130_30' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.31ns)   --->   Input mux for Operation 960 '%mul_ln130_24 = mul i64 %zext_ln80_2, i64 %zext_ln114'
ST_26 : Operation 960 [1/1] (2.10ns)   --->   "%mul_ln130_24 = mul i64 %zext_ln80_2, i64 %zext_ln114" [d1.cpp:130]   --->   Operation 960 'mul' 'mul_ln130_24' <Predicate = true> <Delay = 2.10> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 961 [1/1] (0.00ns)   --->   "%trunc_ln130_42 = trunc i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 961 'trunc' 'trunc_ln130_42' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 962 [1/1] (1.08ns)   --->   "%add_ln115 = add i64 %mul_ln115_6, i64 %mul_ln115_7" [d1.cpp:115]   --->   Operation 962 'add' 'add_ln115' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 963 [1/1] (1.08ns)   --->   "%add_ln115_1 = add i64 %mul_ln115_5, i64 %mul_ln115_3" [d1.cpp:115]   --->   Operation 963 'add' 'add_ln115_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 964 [1/1] (0.00ns)   --->   "%trunc_ln115 = trunc i64 %add_ln115" [d1.cpp:115]   --->   Operation 964 'trunc' 'trunc_ln115' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 965 [1/1] (0.00ns)   --->   "%trunc_ln115_1 = trunc i64 %add_ln115_1" [d1.cpp:115]   --->   Operation 965 'trunc' 'trunc_ln115_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 966 [1/1] (1.08ns)   --->   "%add_ln115_2 = add i64 %add_ln115_1, i64 %add_ln115" [d1.cpp:115]   --->   Operation 966 'add' 'add_ln115_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 967 [1/1] (1.08ns)   --->   "%add_ln115_3 = add i64 %mul_ln115, i64 %mul_ln115_1" [d1.cpp:115]   --->   Operation 967 'add' 'add_ln115_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 968 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_4 = add i64 %mul_ln115_4, i64 %mul_ln115_8" [d1.cpp:115]   --->   Operation 968 'add' 'add_ln115_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 969 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln115_5 = add i64 %add_ln115_4, i64 %mul_ln115_2" [d1.cpp:115]   --->   Operation 969 'add' 'add_ln115_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 970 [1/1] (0.00ns)   --->   "%trunc_ln115_2 = trunc i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 970 'trunc' 'trunc_ln115_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 971 [1/1] (0.00ns)   --->   "%trunc_ln115_3 = trunc i64 %add_ln115_5" [d1.cpp:115]   --->   Operation 971 'trunc' 'trunc_ln115_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 972 [1/1] (1.08ns)   --->   "%add_ln115_6 = add i64 %add_ln115_5, i64 %add_ln115_3" [d1.cpp:115]   --->   Operation 972 'add' 'add_ln115_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 973 [1/1] (0.97ns)   --->   "%add_ln115_8 = add i28 %trunc_ln115_1, i28 %trunc_ln115" [d1.cpp:115]   --->   Operation 973 'add' 'add_ln115_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 974 [1/1] (0.97ns)   --->   "%add_ln115_9 = add i28 %trunc_ln115_3, i28 %trunc_ln115_2" [d1.cpp:115]   --->   Operation 974 'add' 'add_ln115_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 975 [1/1] (1.08ns)   --->   "%add_ln114 = add i64 %mul_ln114_6, i64 %mul_ln114_7" [d1.cpp:114]   --->   Operation 975 'add' 'add_ln114' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 976 [1/1] (1.08ns)   --->   "%add_ln114_1 = add i64 %mul_ln114_5, i64 %mul_ln114_4" [d1.cpp:114]   --->   Operation 976 'add' 'add_ln114_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 977 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i64 %add_ln114" [d1.cpp:114]   --->   Operation 977 'trunc' 'trunc_ln114' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 978 [1/1] (0.00ns)   --->   "%trunc_ln114_1 = trunc i64 %add_ln114_1" [d1.cpp:114]   --->   Operation 978 'trunc' 'trunc_ln114_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 979 [1/1] (1.08ns)   --->   "%add_ln114_2 = add i64 %add_ln114_1, i64 %add_ln114" [d1.cpp:114]   --->   Operation 979 'add' 'add_ln114_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 980 [1/1] (1.08ns)   --->   "%add_ln114_3 = add i64 %mul_ln114, i64 %mul_ln114_1" [d1.cpp:114]   --->   Operation 980 'add' 'add_ln114_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 981 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_4 = add i64 %mul_ln114_2, i64 %mul_ln114_8" [d1.cpp:114]   --->   Operation 981 'add' 'add_ln114_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 982 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln114_5 = add i64 %add_ln114_4, i64 %mul_ln114_3" [d1.cpp:114]   --->   Operation 982 'add' 'add_ln114_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 983 [1/1] (0.00ns)   --->   "%trunc_ln114_2 = trunc i64 %add_ln114_3" [d1.cpp:114]   --->   Operation 983 'trunc' 'trunc_ln114_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 984 [1/1] (0.00ns)   --->   "%trunc_ln114_3 = trunc i64 %add_ln114_5" [d1.cpp:114]   --->   Operation 984 'trunc' 'trunc_ln114_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 985 [1/1] (1.08ns)   --->   "%add_ln114_6 = add i64 %add_ln114_5, i64 %add_ln114_3" [d1.cpp:114]   --->   Operation 985 'add' 'add_ln114_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 986 [1/1] (0.97ns)   --->   "%add_ln114_8 = add i28 %trunc_ln114_1, i28 %trunc_ln114" [d1.cpp:114]   --->   Operation 986 'add' 'add_ln114_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 987 [1/1] (0.97ns)   --->   "%add_ln114_9 = add i28 %trunc_ln114_3, i28 %trunc_ln114_2" [d1.cpp:114]   --->   Operation 987 'add' 'add_ln114_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 988 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln126_1 = add i64 %add_ln126_18, i64 %add_ln126_9" [d1.cpp:126]   --->   Operation 988 'add' 'add_ln126_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 989 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln132 = add i64 %add_ln132_1, i64 %add_ln126_1" [d1.cpp:132]   --->   Operation 989 'add' 'add_ln132' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 990 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln132, i32 28, i32 63" [d1.cpp:133]   --->   Operation 990 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 991 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i36 %lshr_ln3" [d1.cpp:133]   --->   Operation 991 'zext' 'zext_ln133' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 992 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_2 = add i64 %add_ln125_15, i64 %add_ln125_6" [d1.cpp:125]   --->   Operation 992 'add' 'add_ln125_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 993 [1/1] (0.00ns)   --->   "%trunc_ln125_8 = trunc i64 %add47_3_21294_loc_load" [d1.cpp:125]   --->   Operation 993 'trunc' 'trunc_ln125_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 994 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_18 = add i28 %add_ln125_17, i28 %add_ln125_16" [d1.cpp:125]   --->   Operation 994 'add' 'add_ln125_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 995 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln132, i32 28, i32 55" [d1.cpp:133]   --->   Operation 995 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 996 [1/1] (1.08ns)   --->   "%add_ln133_1 = add i64 %add47_3_21294_loc_load, i64 %zext_ln133" [d1.cpp:133]   --->   Operation 996 'add' 'add_ln133_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 997 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln133 = add i64 %add_ln133_1, i64 %add_ln125_2" [d1.cpp:133]   --->   Operation 997 'add' 'add_ln133' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 998 [1/1] (0.97ns)   --->   "%add_ln133_2 = add i28 %trunc_ln125_8, i28 %trunc_ln3" [d1.cpp:133]   --->   Operation 998 'add' 'add_ln133_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 999 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i28 %add_ln133_2, i28 %add_ln125_18" [d1.cpp:133]   --->   Operation 999 'add' 'out1_w_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1000 [1/1] (0.00ns)   --->   "%lshr_ln4 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln133, i32 28, i32 63" [d1.cpp:134]   --->   Operation 1000 'partselect' 'lshr_ln4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1001 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i36 %lshr_ln4" [d1.cpp:134]   --->   Operation 1001 'zext' 'zext_ln134' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1002 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_3 = add i64 %add_ln124_17, i64 %add_ln124_8" [d1.cpp:124]   --->   Operation 1002 'add' 'add_ln124_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1003 [1/1] (0.00ns)   --->   "%trunc_ln124_8 = trunc i64 %add47_3_11293_loc_load" [d1.cpp:124]   --->   Operation 1003 'trunc' 'trunc_ln124_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1004 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln124_20 = add i28 %add_ln124_19, i28 %add_ln124_18" [d1.cpp:124]   --->   Operation 1004 'add' 'add_ln124_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1005 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln133, i32 28, i32 55" [d1.cpp:134]   --->   Operation 1005 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1006 [1/1] (1.08ns)   --->   "%add_ln134_1 = add i64 %add47_3_11293_loc_load, i64 %zext_ln134" [d1.cpp:134]   --->   Operation 1006 'add' 'add_ln134_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1007 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln134 = add i64 %add_ln134_1, i64 %add_ln124_3" [d1.cpp:134]   --->   Operation 1007 'add' 'add_ln134' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1008 [1/1] (0.97ns)   --->   "%add_ln134_2 = add i28 %trunc_ln124_8, i28 %trunc_ln4" [d1.cpp:134]   --->   Operation 1008 'add' 'add_ln134_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1009 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i28 %add_ln134_2, i28 %add_ln124_20" [d1.cpp:134]   --->   Operation 1009 'add' 'out1_w_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1010 [1/1] (0.00ns)   --->   "%lshr_ln5 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln134, i32 28, i32 63" [d1.cpp:135]   --->   Operation 1010 'partselect' 'lshr_ln5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1011 [1/1] (0.00ns)   --->   "%zext_ln135 = zext i36 %lshr_ln5" [d1.cpp:135]   --->   Operation 1011 'zext' 'zext_ln135' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1012 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_4 = add i64 %add_ln123_18, i64 %add_ln123_9" [d1.cpp:123]   --->   Operation 1012 'add' 'add_ln123_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1013 [1/1] (0.00ns)   --->   "%trunc_ln123_8 = trunc i64 %add47_31292_loc_load" [d1.cpp:123]   --->   Operation 1013 'trunc' 'trunc_ln123_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1014 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln123_21 = add i28 %add_ln123_20, i28 %add_ln123_19" [d1.cpp:123]   --->   Operation 1014 'add' 'add_ln123_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1015 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln134, i32 28, i32 55" [d1.cpp:135]   --->   Operation 1015 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1016 [1/1] (1.08ns)   --->   "%add_ln135_1 = add i64 %add47_31292_loc_load, i64 %zext_ln135" [d1.cpp:135]   --->   Operation 1016 'add' 'add_ln135_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1017 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln135 = add i64 %add_ln135_1, i64 %add_ln123_4" [d1.cpp:135]   --->   Operation 1017 'add' 'add_ln135' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1018 [1/1] (0.97ns)   --->   "%add_ln135_2 = add i28 %trunc_ln123_8, i28 %trunc_ln5" [d1.cpp:135]   --->   Operation 1018 'add' 'add_ln135_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1019 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i28 %add_ln135_2, i28 %add_ln123_21" [d1.cpp:135]   --->   Operation 1019 'add' 'out1_w_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1020 [1/1] (0.00ns)   --->   "%lshr_ln6 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln135, i32 28, i32 63" [d1.cpp:136]   --->   Operation 1020 'partselect' 'lshr_ln6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1021 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln135, i32 28, i32 55" [d1.cpp:136]   --->   Operation 1021 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1022 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_6 = add i28 %add_ln138_5, i28 %add_ln138_2" [d1.cpp:138]   --->   Operation 1022 'add' 'add_ln138_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1023 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_8 = add i28 %add_ln138_7, i28 %trunc_ln130_1" [d1.cpp:138]   --->   Operation 1023 'add' 'add_ln138_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1024 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln138_9 = add i28 %trunc_ln130_4, i28 %trunc_ln130_12" [d1.cpp:138]   --->   Operation 1024 'add' 'add_ln138_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1025 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_10 = add i28 %add_ln138_9, i28 %trunc_ln130_5" [d1.cpp:138]   --->   Operation 1025 'add' 'add_ln138_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1026 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_11 = add i28 %add_ln138_10, i28 %add_ln138_8" [d1.cpp:138]   --->   Operation 1026 'add' 'add_ln138_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1027 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln138_3 = add i28 %add_ln138_11, i28 %add_ln138_6" [d1.cpp:138]   --->   Operation 1027 'add' 'add_ln138_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1028 [1/1] (0.97ns)   --->   "%add_ln139_1 = add i28 %trunc_ln130_16, i28 %trunc_ln130_15" [d1.cpp:139]   --->   Operation 1028 'add' 'add_ln139_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1029 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_3 = add i28 %trunc_ln130_18, i28 %trunc_ln130_21" [d1.cpp:139]   --->   Operation 1029 'add' 'add_ln139_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1030 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_4 = add i28 %add_ln139_3, i28 %trunc_ln130_17" [d1.cpp:139]   --->   Operation 1030 'add' 'add_ln139_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1031 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_5 = add i28 %add_ln139_4, i28 %add_ln139_1" [d1.cpp:139]   --->   Operation 1031 'add' 'add_ln139_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1032 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_6 = add i28 %trunc_ln130_22, i28 %trunc_ln130_23" [d1.cpp:139]   --->   Operation 1032 'add' 'add_ln139_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1033 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln139_7 = add i28 %trunc_ln119_1, i28 %trunc_ln130_11" [d1.cpp:139]   --->   Operation 1033 'add' 'add_ln139_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1034 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_8 = add i28 %add_ln139_7, i28 %trunc_ln119" [d1.cpp:139]   --->   Operation 1034 'add' 'add_ln139_8' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1035 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_9 = add i28 %add_ln139_8, i28 %add_ln139_6" [d1.cpp:139]   --->   Operation 1035 'add' 'add_ln139_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1036 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln139_2 = add i28 %add_ln139_9, i28 %add_ln139_5" [d1.cpp:139]   --->   Operation 1036 'add' 'add_ln139_2' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 1037 [1/1] (0.97ns)   --->   "%add_ln140 = add i28 %trunc_ln130_25, i28 %trunc_ln130_24" [d1.cpp:140]   --->   Operation 1037 'add' 'add_ln140' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1038 [1/1] (0.97ns)   --->   "%add_ln140_1 = add i28 %trunc_ln130_28, i28 %trunc_ln130_29" [d1.cpp:140]   --->   Operation 1038 'add' 'add_ln140_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1039 [1/1] (0.97ns)   --->   "%add_ln141 = add i28 %trunc_ln130_39, i28 %trunc_ln130_41" [d1.cpp:141]   --->   Operation 1039 'add' 'add_ln141' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.56>
ST_27 : Operation 1040 [1/1] (0.00ns)   --->   "%add47_2_21291_loc_load = load i64 %add47_2_21291_loc"   --->   Operation 1040 'load' 'add47_2_21291_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1041 [1/1] (0.00ns)   --->   "%add256_2741268_loc_load = load i64 %add256_2741268_loc"   --->   Operation 1041 'load' 'add256_2741268_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1042 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_7 = add i28 %trunc_ln116_1, i28 %trunc_ln116" [d1.cpp:116]   --->   Operation 1042 'add' 'add_ln116_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1043 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_6 = add i64 %add_ln116_5, i64 %add_ln116_2" [d1.cpp:116]   --->   Operation 1043 'add' 'add_ln116_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1044 [1/1] (0.00ns)   --->   "%trunc_ln116_4 = trunc i64 %add256_2741268_loc_load" [d1.cpp:116]   --->   Operation 1044 'trunc' 'trunc_ln116_4' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1045 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln116_9 = add i28 %add_ln116_8, i28 %add_ln116_7" [d1.cpp:116]   --->   Operation 1045 'add' 'add_ln116_9' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1046 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_8 = add i64 %add_ln116_6, i64 %add256_2741268_loc_load" [d1.cpp:116]   --->   Operation 1046 'add' 'arr_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1047 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_3 = add i28 %trunc_ln118_1, i28 %trunc_ln118" [d1.cpp:118]   --->   Operation 1047 'add' 'add_ln118_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1048 [1/1] (0.00ns)   --->   "%zext_ln130_32 = zext i66 %add_ln130_17" [d1.cpp:130]   --->   Operation 1048 'zext' 'zext_ln130_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1049 [1/1] (0.00ns)   --->   "%zext_ln130_36 = zext i67 %add_ln130_22" [d1.cpp:130]   --->   Operation 1049 'zext' 'zext_ln130_36' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1050 [1/1] (1.10ns)   --->   "%add_ln130_19 = add i68 %zext_ln130_36, i68 %zext_ln130_32" [d1.cpp:130]   --->   Operation 1050 'add' 'add_ln130_19' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1051 [1/1] (0.00ns)   --->   "%trunc_ln130_19 = partselect i40 @_ssdm_op_PartSelect.i40.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 67" [d1.cpp:130]   --->   Operation 1051 'partselect' 'trunc_ln130_19' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1052 [1/1] (0.00ns)   --->   "%zext_ln130_37 = zext i40 %trunc_ln130_19" [d1.cpp:130]   --->   Operation 1052 'zext' 'zext_ln130_37' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1053 [1/1] (0.00ns)   --->   "%zext_ln130_43 = zext i64 %arr_10" [d1.cpp:130]   --->   Operation 1053 'zext' 'zext_ln130_43' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1054 [1/1] (0.00ns)   --->   "%trunc_ln130_20 = partselect i28 @_ssdm_op_PartSelect.i28.i68.i32.i32, i68 %add_ln130_19, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1054 'partselect' 'trunc_ln130_20' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1055 [1/1] (0.00ns)   --->   "%zext_ln130_45 = zext i66 %add_ln130_24" [d1.cpp:130]   --->   Operation 1055 'zext' 'zext_ln130_45' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1056 [1/1] (0.00ns)   --->   "%zext_ln130_46 = zext i65 %add_ln130_26" [d1.cpp:130]   --->   Operation 1056 'zext' 'zext_ln130_46' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1057 [1/1] (1.08ns)   --->   "%add_ln130_27 = add i65 %zext_ln130_43, i65 %zext_ln130_37" [d1.cpp:130]   --->   Operation 1057 'add' 'add_ln130_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1058 [1/1] (0.00ns)   --->   "%zext_ln130_47 = zext i65 %add_ln130_27" [d1.cpp:130]   --->   Operation 1058 'zext' 'zext_ln130_47' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1059 [1/1] (1.09ns)   --->   "%add_ln130_44 = add i65 %add_ln130_27, i65 %add_ln130_26" [d1.cpp:130]   --->   Operation 1059 'add' 'add_ln130_44' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1060 [1/1] (1.09ns)   --->   "%add_ln130_28 = add i66 %zext_ln130_47, i66 %zext_ln130_46" [d1.cpp:130]   --->   Operation 1060 'add' 'add_ln130_28' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1061 [1/1] (0.00ns)   --->   "%trunc_ln130_38 = trunc i65 %add_ln130_44" [d1.cpp:130]   --->   Operation 1061 'trunc' 'trunc_ln130_38' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1062 [1/1] (0.00ns)   --->   "%zext_ln130_48 = zext i66 %add_ln130_28" [d1.cpp:130]   --->   Operation 1062 'zext' 'zext_ln130_48' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1063 [1/1] (1.09ns)   --->   "%add_ln130_42 = add i56 %trunc_ln130_38, i56 %trunc_ln130_33" [d1.cpp:130]   --->   Operation 1063 'add' 'add_ln130_42' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1064 [1/1] (1.10ns)   --->   "%add_ln130_25 = add i67 %zext_ln130_48, i67 %zext_ln130_45" [d1.cpp:130]   --->   Operation 1064 'add' 'add_ln130_25' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1065 [1/1] (0.00ns)   --->   "%trunc_ln130_26 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_25, i32 28, i32 66" [d1.cpp:130]   --->   Operation 1065 'partselect' 'trunc_ln130_26' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1066 [1/1] (0.00ns)   --->   "%zext_ln130_49 = zext i39 %trunc_ln130_26" [d1.cpp:130]   --->   Operation 1066 'zext' 'zext_ln130_49' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1067 [1/1] (0.00ns)   --->   "%zext_ln130_50 = zext i64 %mul_ln130_21" [d1.cpp:130]   --->   Operation 1067 'zext' 'zext_ln130_50' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1068 [1/1] (0.00ns)   --->   "%zext_ln130_53 = zext i64 %arr_9" [d1.cpp:130]   --->   Operation 1068 'zext' 'zext_ln130_53' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1069 [1/1] (0.00ns)   --->   "%trunc_ln130_27 = partselect i28 @_ssdm_op_PartSelect.i28.i56.i32.i32, i56 %add_ln130_42, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1069 'partselect' 'trunc_ln130_27' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1070 [1/1] (1.08ns)   --->   "%add_ln130_36 = add i65 %zext_ln130_53, i65 %zext_ln130_49" [d1.cpp:130]   --->   Operation 1070 'add' 'add_ln130_36' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1071 [1/1] (0.00ns)   --->   "%zext_ln130_55 = zext i65 %add_ln130_36" [d1.cpp:130]   --->   Operation 1071 'zext' 'zext_ln130_55' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1072 [1/1] (1.09ns)   --->   "%add_ln130_37 = add i66 %zext_ln130_55, i66 %zext_ln130_50" [d1.cpp:130]   --->   Operation 1072 'add' 'add_ln130_37' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1073 [1/1] (0.00ns)   --->   "%zext_ln136 = zext i36 %lshr_ln6" [d1.cpp:136]   --->   Operation 1073 'zext' 'zext_ln136' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1074 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_5 = add i64 %add_ln122_17, i64 %add_ln122_8" [d1.cpp:122]   --->   Operation 1074 'add' 'add_ln122_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1075 [1/1] (0.00ns)   --->   "%trunc_ln122_8 = trunc i64 %add47_2_21291_loc_load" [d1.cpp:122]   --->   Operation 1075 'trunc' 'trunc_ln122_8' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1076 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln122_20 = add i28 %add_ln122_19, i28 %add_ln122_18" [d1.cpp:122]   --->   Operation 1076 'add' 'add_ln122_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1077 [1/1] (1.08ns)   --->   "%add_ln136_1 = add i64 %add47_2_21291_loc_load, i64 %zext_ln136" [d1.cpp:136]   --->   Operation 1077 'add' 'add_ln136_1' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1078 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln136 = add i64 %add_ln136_1, i64 %add_ln122_5" [d1.cpp:136]   --->   Operation 1078 'add' 'add_ln136' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1079 [1/1] (0.97ns)   --->   "%add_ln136_2 = add i28 %trunc_ln122_8, i28 %trunc_ln6" [d1.cpp:136]   --->   Operation 1079 'add' 'add_ln136_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1080 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i28 %add_ln136_2, i28 %add_ln122_20" [d1.cpp:136]   --->   Operation 1080 'add' 'out1_w_6' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1081 [1/1] (0.00ns)   --->   "%trunc_ln137_2 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln136, i32 28, i32 63" [d1.cpp:137]   --->   Operation 1081 'partselect' 'trunc_ln137_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1082 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i36 %trunc_ln137_2" [d1.cpp:137]   --->   Operation 1082 'zext' 'zext_ln137' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1083 [1/1] (0.00ns)   --->   "%trunc_ln137_1 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln136, i32 28, i32 55" [d1.cpp:137]   --->   Operation 1083 'partselect' 'trunc_ln137_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1084 [1/1] (0.97ns)   --->   "%out1_w_7 = add i28 %trunc_ln137_1, i28 %add_ln137" [d1.cpp:137]   --->   Operation 1084 'add' 'out1_w_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1085 [1/1] (0.00ns)   --->   "%zext_ln138 = zext i28 %add_ln137" [d1.cpp:138]   --->   Operation 1085 'zext' 'zext_ln138' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1086 [1/1] (1.02ns)   --->   "%add_ln138 = add i37 %zext_ln137, i37 %zext_ln138" [d1.cpp:138]   --->   Operation 1086 'add' 'add_ln138' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1087 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln138, i32 28, i32 36" [d1.cpp:138]   --->   Operation 1087 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1088 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_2 = add i28 %add_ln140_1, i28 %add_ln140" [d1.cpp:140]   --->   Operation 1088 'add' 'add_ln140_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1089 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln140_3 = add i28 %trunc_ln130_30, i28 %trunc_ln118_2" [d1.cpp:140]   --->   Operation 1089 'add' 'add_ln140_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1090 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_4 = add i28 %add_ln118_3, i28 %trunc_ln130_20" [d1.cpp:140]   --->   Operation 1090 'add' 'add_ln140_4' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1091 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln140_5 = add i28 %add_ln140_4, i28 %add_ln140_3" [d1.cpp:140]   --->   Operation 1091 'add' 'add_ln140_5' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1092 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_10 = add i28 %add_ln140_5, i28 %add_ln140_2" [d1.cpp:140]   --->   Operation 1092 'add' 'out1_w_10' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1093 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_1 = add i28 %add_ln141, i28 %trunc_ln130_40" [d1.cpp:141]   --->   Operation 1093 'add' 'add_ln141_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1094 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln141_2 = add i28 %add_ln117_5, i28 %trunc_ln130_27" [d1.cpp:141]   --->   Operation 1094 'add' 'add_ln141_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1095 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%add_ln141_3 = add i28 %add_ln141_2, i28 %trunc_ln117_2" [d1.cpp:141]   --->   Operation 1095 'add' 'add_ln141_3' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 1096 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_11 = add i28 %add_ln141_3, i28 %add_ln141_1" [d1.cpp:141]   --->   Operation 1096 'add' 'out1_w_11' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 1097 [1/1] (0.00ns)   --->   "%add256_1431265_loc_load = load i64 %add256_1431265_loc"   --->   Operation 1097 'load' 'add256_1431265_loc_load' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1098 [1/1] (0.00ns)   --->   "%add2561262_loc_load = load i64 %add2561262_loc"   --->   Operation 1098 'load' 'add2561262_loc_load' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1099 [1/1] (0.00ns)   --->   "%zext_ln130_54 = zext i65 %add_ln130_30" [d1.cpp:130]   --->   Operation 1099 'zext' 'zext_ln130_54' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1100 [1/1] (0.00ns)   --->   "%zext_ln130_56 = zext i66 %add_ln130_37" [d1.cpp:130]   --->   Operation 1100 'zext' 'zext_ln130_56' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1101 [1/1] (1.10ns)   --->   "%add_ln130_29 = add i67 %zext_ln130_56, i67 %zext_ln130_54" [d1.cpp:130]   --->   Operation 1101 'add' 'add_ln130_29' <Predicate = true> <Delay = 1.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1102 [1/1] (0.00ns)   --->   "%trunc_ln130_31 = partselect i39 @_ssdm_op_PartSelect.i39.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 66" [d1.cpp:130]   --->   Operation 1102 'partselect' 'trunc_ln130_31' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1103 [1/1] (0.00ns)   --->   "%zext_ln130_57 = zext i39 %trunc_ln130_31" [d1.cpp:130]   --->   Operation 1103 'zext' 'zext_ln130_57' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1104 [1/1] (0.00ns)   --->   "%zext_ln130_58 = zext i64 %mul_ln130_24" [d1.cpp:130]   --->   Operation 1104 'zext' 'zext_ln130_58' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1105 [1/1] (0.00ns)   --->   "%zext_ln130_59 = zext i64 %arr_8" [d1.cpp:130]   --->   Operation 1105 'zext' 'zext_ln130_59' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1106 [1/1] (0.00ns)   --->   "%trunc_ln130_32 = partselect i28 @_ssdm_op_PartSelect.i28.i67.i32.i32, i67 %add_ln130_29, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1106 'partselect' 'trunc_ln130_32' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1107 [1/1] (1.08ns)   --->   "%add_ln130_38 = add i65 %zext_ln130_58, i65 %zext_ln130_57" [d1.cpp:130]   --->   Operation 1107 'add' 'add_ln130_38' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1108 [1/1] (0.00ns)   --->   "%zext_ln130_60 = zext i65 %add_ln130_38" [d1.cpp:130]   --->   Operation 1108 'zext' 'zext_ln130_60' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1109 [1/1] (1.09ns)   --->   "%add_ln130_31 = add i66 %zext_ln130_60, i66 %zext_ln130_59" [d1.cpp:130]   --->   Operation 1109 'add' 'add_ln130_31' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1110 [1/1] (0.00ns)   --->   "%tmp_s = partselect i38 @_ssdm_op_PartSelect.i38.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 65" [d1.cpp:130]   --->   Operation 1110 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1111 [1/1] (0.00ns)   --->   "%zext_ln130_64 = zext i38 %tmp_s" [d1.cpp:130]   --->   Operation 1111 'zext' 'zext_ln130_64' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1112 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_7 = add i64 %add_ln115_6, i64 %add_ln115_2" [d1.cpp:115]   --->   Operation 1112 'add' 'add_ln115_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1113 [1/1] (0.00ns)   --->   "%trunc_ln115_4 = trunc i64 %add256_1431265_loc_load" [d1.cpp:115]   --->   Operation 1113 'trunc' 'trunc_ln115_4' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1114 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln115_10 = add i28 %add_ln115_9, i28 %add_ln115_8" [d1.cpp:115]   --->   Operation 1114 'add' 'add_ln115_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1115 [1/1] (0.00ns)   --->   "%trunc_ln130_34 = partselect i28 @_ssdm_op_PartSelect.i28.i66.i32.i32, i66 %add_ln130_31, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1115 'partselect' 'trunc_ln130_34' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1116 [1/1] (1.08ns)   --->   "%add_ln130_39 = add i64 %add256_1431265_loc_load, i64 %zext_ln130_64" [d1.cpp:130]   --->   Operation 1116 'add' 'add_ln130_39' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1117 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_32 = add i64 %add_ln130_39, i64 %add_ln115_7" [d1.cpp:130]   --->   Operation 1117 'add' 'add_ln130_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1118 [1/1] (0.00ns)   --->   "%lshr_ln130_7 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 63" [d1.cpp:130]   --->   Operation 1118 'partselect' 'lshr_ln130_7' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1119 [1/1] (0.00ns)   --->   "%zext_ln130_65 = zext i36 %lshr_ln130_7" [d1.cpp:130]   --->   Operation 1119 'zext' 'zext_ln130_65' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1120 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_7 = add i64 %add_ln114_6, i64 %add_ln114_2" [d1.cpp:114]   --->   Operation 1120 'add' 'add_ln114_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1121 [1/1] (0.00ns)   --->   "%trunc_ln114_4 = trunc i64 %add2561262_loc_load" [d1.cpp:114]   --->   Operation 1121 'trunc' 'trunc_ln114_4' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1122 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln114_10 = add i28 %add_ln114_9, i28 %add_ln114_8" [d1.cpp:114]   --->   Operation 1122 'add' 'add_ln114_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1123 [1/1] (0.00ns)   --->   "%trunc_ln130_35 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_32, i32 28, i32 55" [d1.cpp:130]   --->   Operation 1123 'partselect' 'trunc_ln130_35' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1124 [1/1] (1.08ns)   --->   "%add_ln130_40 = add i64 %add2561262_loc_load, i64 %zext_ln130_65" [d1.cpp:130]   --->   Operation 1124 'add' 'add_ln130_40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1125 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln130_33 = add i64 %add_ln130_40, i64 %add_ln114_7" [d1.cpp:130]   --->   Operation 1125 'add' 'add_ln130_33' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1126 [1/1] (0.00ns)   --->   "%trunc_ln130_36 = partselect i36 @_ssdm_op_PartSelect.i36.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 63" [d1.cpp:130]   --->   Operation 1126 'partselect' 'trunc_ln130_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1127 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln142 = add i28 %add_ln116_9, i28 %trunc_ln116_4" [d1.cpp:142]   --->   Operation 1127 'add' 'add_ln142' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1128 [1/1] (0.97ns)   --->   "%add_ln142_1 = add i28 %trunc_ln130_42, i28 %trunc_ln130_32" [d1.cpp:142]   --->   Operation 1128 'add' 'add_ln142_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1129 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_12 = add i28 %add_ln142_1, i28 %add_ln142" [d1.cpp:142]   --->   Operation 1129 'add' 'out1_w_12' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1130 [1/1] (0.97ns)   --->   "%add_ln143 = add i28 %trunc_ln115_4, i28 %trunc_ln130_34" [d1.cpp:143]   --->   Operation 1130 'add' 'add_ln143' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1131 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_13 = add i28 %add_ln143, i28 %add_ln115_10" [d1.cpp:143]   --->   Operation 1131 'add' 'out1_w_13' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1132 [1/1] (0.97ns)   --->   "%add_ln144 = add i28 %trunc_ln114_4, i28 %trunc_ln130_35" [d1.cpp:144]   --->   Operation 1132 'add' 'add_ln144' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 1133 [1/1] (0.72ns) (root node of TernaryAdder)   --->   "%out1_w_14 = add i28 %add_ln144, i28 %add_ln114_10" [d1.cpp:144]   --->   Operation 1133 'add' 'out1_w_14' <Predicate = true> <Delay = 0.72> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 1134 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i28 @_ssdm_op_PartSelect.i28.i64.i32.i32, i64 %add_ln130_33, i32 28, i32 55" [d1.cpp:145]   --->   Operation 1134 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1135 [1/1] (0.00ns)   --->   "%sext_ln149 = sext i62 %trunc_ln149_1" [d1.cpp:149]   --->   Operation 1135 'sext' 'sext_ln149' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1136 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i32 %mem, i64 %sext_ln149" [d1.cpp:149]   --->   Operation 1136 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 1137 [1/1] (7.30ns)   --->   "%empty_35 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %mem_addr_2, i32 16" [d1.cpp:149]   --->   Operation 1137 'writereq' 'empty_35' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 4.24>
ST_29 : Operation 1138 [1/1] (0.00ns)   --->   "%zext_ln130_61 = zext i36 %trunc_ln130_36" [d1.cpp:130]   --->   Operation 1138 'zext' 'zext_ln130_61' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1139 [1/1] (0.00ns)   --->   "%zext_ln130_62 = zext i28 %add_ln130_41" [d1.cpp:130]   --->   Operation 1139 'zext' 'zext_ln130_62' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1140 [1/1] (1.02ns)   --->   "%add_ln130_34 = add i37 %zext_ln130_61, i37 %zext_ln130_62" [d1.cpp:130]   --->   Operation 1140 'add' 'add_ln130_34' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1141 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i9 @_ssdm_op_PartSelect.i9.i37.i32.i32, i37 %add_ln130_34, i32 28, i32 36" [d1.cpp:130]   --->   Operation 1141 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1142 [1/1] (0.00ns)   --->   "%zext_ln130_66 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1142 'zext' 'zext_ln130_66' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1143 [1/1] (0.00ns)   --->   "%zext_ln130_67 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1143 'zext' 'zext_ln130_67' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1144 [1/1] (0.00ns)   --->   "%zext_ln130_68 = zext i9 %tmp_12" [d1.cpp:130]   --->   Operation 1144 'zext' 'zext_ln130_68' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1145 [1/1] (0.97ns)   --->   "%out1_w = add i28 %zext_ln130_68, i28 %add_ln130_3" [d1.cpp:130]   --->   Operation 1145 'add' 'out1_w' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1146 [1/1] (0.00ns)   --->   "%zext_ln131 = zext i28 %add_ln130_3" [d1.cpp:131]   --->   Operation 1146 'zext' 'zext_ln131' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1147 [1/1] (0.97ns)   --->   "%add_ln131 = add i29 %zext_ln130_67, i29 %zext_ln131" [d1.cpp:131]   --->   Operation 1147 'add' 'add_ln131' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1148 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln131, i32 28" [d1.cpp:131]   --->   Operation 1148 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1149 [1/1] (0.00ns)   --->   "%zext_ln131_1 = zext i1 %tmp" [d1.cpp:131]   --->   Operation 1149 'zext' 'zext_ln131_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1150 [1/1] (0.00ns)   --->   "%zext_ln131_2 = zext i28 %add_ln131_3" [d1.cpp:131]   --->   Operation 1150 'zext' 'zext_ln131_2' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1151 [1/1] (0.97ns)   --->   "%out1_w_1 = add i29 %zext_ln131_2, i29 %zext_ln131_1" [d1.cpp:131]   --->   Operation 1151 'add' 'out1_w_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1152 [1/1] (0.00ns)   --->   "%zext_ln138_1 = zext i9 %tmp_13" [d1.cpp:138]   --->   Operation 1152 'zext' 'zext_ln138_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1153 [1/1] (0.77ns)   --->   "%add_ln138_12 = add i10 %zext_ln138_1, i10 %zext_ln130_66" [d1.cpp:138]   --->   Operation 1153 'add' 'add_ln138_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1154 [1/1] (0.00ns)   --->   "%zext_ln138_2 = zext i10 %add_ln138_12" [d1.cpp:138]   --->   Operation 1154 'zext' 'zext_ln138_2' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1155 [1/1] (0.97ns)   --->   "%out1_w_8 = add i28 %zext_ln138_2, i28 %add_ln138_3" [d1.cpp:138]   --->   Operation 1155 'add' 'out1_w_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1156 [1/1] (0.00ns)   --->   "%zext_ln139 = zext i28 %add_ln138_3" [d1.cpp:139]   --->   Operation 1156 'zext' 'zext_ln139' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1157 [1/1] (0.00ns)   --->   "%zext_ln139_1 = zext i10 %add_ln138_12" [d1.cpp:139]   --->   Operation 1157 'zext' 'zext_ln139_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1158 [1/1] (0.97ns)   --->   "%add_ln139 = add i29 %zext_ln139_1, i29 %zext_ln139" [d1.cpp:139]   --->   Operation 1158 'add' 'add_ln139' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1159 [1/1] (0.00ns)   --->   "%tmp_15 = bitselect i1 @_ssdm_op_BitSelect.i1.i29.i32, i29 %add_ln139, i32 28" [d1.cpp:139]   --->   Operation 1159 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1160 [1/1] (0.00ns)   --->   "%zext_ln139_2 = zext i1 %tmp_15" [d1.cpp:139]   --->   Operation 1160 'zext' 'zext_ln139_2' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1161 [1/1] (0.00ns)   --->   "%zext_ln139_3 = zext i28 %add_ln139_2" [d1.cpp:139]   --->   Operation 1161 'zext' 'zext_ln139_3' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 1162 [1/1] (0.97ns)   --->   "%out1_w_9 = add i29 %zext_ln139_3, i29 %zext_ln139_2" [d1.cpp:139]   --->   Operation 1162 'add' 'out1_w_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1163 [1/1] (0.97ns)   --->   "%out1_w_15 = add i28 %trunc_ln7, i28 %add_ln130_41" [d1.cpp:145]   --->   Operation 1163 'add' 'out1_w_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 1164 [2/2] (0.48ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 1164 'call' 'call_ln149' <Predicate = true> <Delay = 0.48> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 0.00>
ST_30 : Operation 1165 [1/2] (0.00ns)   --->   "%call_ln149 = call void @test_Pipeline_ARRAY_WRITE, i32 %mem, i62 %trunc_ln149_1, i28 %out1_w, i29 %out1_w_1, i28 %out1_w_2, i28 %out1_w_3, i28 %out1_w_4, i28 %out1_w_5, i28 %out1_w_6, i28 %out1_w_7, i28 %out1_w_8, i29 %out1_w_9, i28 %out1_w_10, i28 %out1_w_11, i28 %out1_w_12, i28 %out1_w_13, i28 %out1_w_14, i28 %out1_w_15" [d1.cpp:149]   --->   Operation 1165 'call' 'call_ln149' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 1166 [5/5] (7.30ns)   --->   "%empty_36 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1166 'writeresp' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 1167 [4/5] (7.30ns)   --->   "%empty_36 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1167 'writeresp' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 1168 [3/5] (7.30ns)   --->   "%empty_36 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1168 'writeresp' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 1169 [2/5] (7.30ns)   --->   "%empty_36 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1169 'writeresp' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 1170 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_14" [d1.cpp:3]   --->   Operation 1170 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1171 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_1, i32 0, i32 0, void @empty_2, i32 0, i32 16, void @empty_3, void @empty_4, void @empty_2, i32 16, i32 16, i32 16, i32 16, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 1171 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1172 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 1172 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1173 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1173 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1174 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1174 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1175 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_12, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1175 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1176 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1176 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1177 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_13, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1177 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1178 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 1178 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1179 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 1179 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1180 [1/5] (7.30ns)   --->   "%empty_36 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem_addr_2" [d1.cpp:153]   --->   Operation 1180 'writeresp' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 1181 [1/1] (0.00ns)   --->   "%ret_ln153 = ret" [d1.cpp:153]   --->   Operation 1181 'ret' 'ret_ln153' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d1.cpp:24) [73]  (0.000 ns)
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d1.cpp:24) on port 'mem' (d1.cpp:24) [74]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln24', d1.cpp:24) to 'test_Pipeline_ARRAY_1_READ' [75]  (1.216 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d1.cpp:31) [94]  (0.000 ns)
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d1.cpp:31) on port 'mem' (d1.cpp:31) [95]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.216ns
The critical path consists of the following:
	'call' operation ('call_ln31', d1.cpp:31) to 'test_Pipeline_ARRAY_2_READ' [96]  (1.216 ns)

 <State 22>: 0.000ns
The critical path consists of the following:

 <State 23>: 5.590ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (1.318 ns)
'mul' operation ('mul_ln78_37', d1.cpp:78) [211]  (2.102 ns)
	'add' operation ('add_ln78_23', d1.cpp:78) [266]  (1.085 ns)
	'add' operation ('add_ln78_24', d1.cpp:78) [267]  (1.085 ns)

 <State 24>: 6.945ns
The critical path consists of the following:
	'load' operation ('arg1_r_loc_load') on local variable 'arg1_r_loc' [91]  (0.000 ns)
	'add' operation ('add_ln70_1', d1.cpp:70) [478]  (1.016 ns)
	multiplexor before operation 'mul' with delay (0.476 ns)
'mul' operation ('mul_ln70_16', d1.cpp:70) [480]  (2.939 ns)
	'add' operation ('add_ln120_17', d1.cpp:120) [507]  (0.000 ns)
	'add' operation ('add_ln120_18', d1.cpp:120) [508]  (0.819 ns)
	'add' operation ('add_ln120_21', d1.cpp:120) [513]  (0.975 ns)
	'add' operation ('add_ln120_24', d1.cpp:120) [516]  (0.720 ns)

 <State 25>: 7.141ns
The critical path consists of the following:
	'add' operation ('add_ln120_14', d1.cpp:120) [504]  (0.000 ns)
	'add' operation ('add_ln120_22', d1.cpp:120) [514]  (0.819 ns)
	'add' operation ('arr', d1.cpp:120) [517]  (0.819 ns)
	'add' operation ('add_ln130_1', d1.cpp:130) [615]  (1.085 ns)
	'add' operation ('add_ln130', d1.cpp:130) [616]  (0.819 ns)
	'add' operation ('add_ln131_2', d1.cpp:131) [870]  (1.085 ns)
	'add' operation ('add_ln131_1', d1.cpp:131) [871]  (0.819 ns)
	'add' operation ('add_ln132_2', d1.cpp:132) [912]  (0.975 ns)
	'add' operation ('out1_w', d1.cpp:132) [913]  (0.720 ns)

 <State 26>: 6.531ns
The critical path consists of the following:
	'add' operation ('add_ln126_1', d1.cpp:126) [906]  (0.000 ns)
	'add' operation ('add_ln132', d1.cpp:132) [911]  (0.819 ns)
	'add' operation ('add_ln133_1', d1.cpp:133) [945]  (1.085 ns)
	'add' operation ('add_ln133', d1.cpp:133) [946]  (0.819 ns)
	'add' operation ('add_ln134_1', d1.cpp:134) [982]  (1.085 ns)
	'add' operation ('add_ln134', d1.cpp:134) [983]  (0.819 ns)
	'add' operation ('add_ln135_1', d1.cpp:135) [1020]  (1.085 ns)
	'add' operation ('add_ln135', d1.cpp:135) [1021]  (0.819 ns)

 <State 27>: 6.564ns
The critical path consists of the following:
	'add' operation ('add_ln130_19', d1.cpp:130) [715]  (1.108 ns)
	'add' operation ('add_ln130_27', d1.cpp:130) [742]  (1.085 ns)
	'add' operation ('add_ln130_28', d1.cpp:130) [745]  (1.093 ns)
	'add' operation ('add_ln130_25', d1.cpp:130) [749]  (1.100 ns)
	'add' operation ('add_ln130_36', d1.cpp:130) [765]  (1.085 ns)
	'add' operation ('add_ln130_37', d1.cpp:130) [767]  (1.093 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d1.cpp:149) [1123]  (0.000 ns)
	bus request operation ('empty_35', d1.cpp:149) on port 'mem' (d1.cpp:149) [1124]  (7.300 ns)

 <State 29>: 4.240ns
The critical path consists of the following:
	'add' operation ('add_ln130_34', d1.cpp:130) [826]  (1.025 ns)
	'add' operation ('add_ln138_12', d1.cpp:138) [1081]  (0.776 ns)
	'add' operation ('add_ln139', d1.cpp:139) [1086]  (0.975 ns)
	'add' operation ('out1_w', d1.cpp:139) [1099]  (0.975 ns)
	'call' operation ('call_ln149', d1.cpp:149) to 'test_Pipeline_ARRAY_WRITE' [1125]  (0.489 ns)

 <State 30>: 0.000ns
The critical path consists of the following:

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_36', d1.cpp:153) on port 'mem' (d1.cpp:153) [1126]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_36', d1.cpp:153) on port 'mem' (d1.cpp:153) [1126]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_36', d1.cpp:153) on port 'mem' (d1.cpp:153) [1126]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_36', d1.cpp:153) on port 'mem' (d1.cpp:153) [1126]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_36', d1.cpp:153) on port 'mem' (d1.cpp:153) [1126]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
