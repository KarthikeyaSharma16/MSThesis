

================================================================
== Vitis HLS Report for 'fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 14:13:09 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_17 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.751 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |        3|        3|         2|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.37>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%arr_9 = alloca i32 1"   --->   Operation 5 'alloca' 'arr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arr_10 = alloca i32 1"   --->   Operation 6 'alloca' 'arr_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arr_11 = alloca i32 1"   --->   Operation 7 'alloca' 'arr_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr_12 = alloca i32 1"   --->   Operation 8 'alloca' 'arr_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_13 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_14 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_15 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_16 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_17 = alloca i32 1"   --->   Operation 13 'alloca' 'arr_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 14 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 15 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 16 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 17 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 18 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 19 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 20 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 21 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 22 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 23 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 24 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 25 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 26 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 27 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 28 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 29 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 30 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 31 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 32 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 1, i4 %i1"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_17"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_16"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_15"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_14"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_13"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_12"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_11"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_10"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %arr_9"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31"   --->   Operation 43 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%i1_3 = load i4 %i1"   --->   Operation 44 'load' 'i1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.79ns)   --->   "%icmp_ln36 = icmp_ult  i4 %i1_3, i4 10" [d2.cpp:36]   --->   Operation 45 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.body91.preheader.exitStub, void %for.body31.split" [d2.cpp:36]   --->   Operation 46 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i4 %i1_3" [d2.cpp:36]   --->   Operation 47 'zext' 'zext_ln36' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i4 %i1_3" [d2.cpp:36]   --->   Operation 48 'trunc' 'trunc_ln36' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%empty = trunc i4 %i1_3"   --->   Operation 49 'trunc' 'empty' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.72ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i3 %trunc_ln36" [d2.cpp:49]   --->   Operation 50 'mux' 'tmp' <Predicate = (icmp_ln36)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.79ns)   --->   "%add_ln48 = add i4 %i1_3, i4 3" [d2.cpp:48]   --->   Operation 51 'add' 'add_ln48' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.79ns)   --->   "%icmp_ln48 = icmp_ugt  i4 %add_ln48, i4 9" [d2.cpp:48]   --->   Operation 52 'icmp' 'icmp_ln48' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln49)   --->   "%and_ln48 = and i1 %empty, i1 %icmp_ln48" [d2.cpp:48]   --->   Operation 53 'and' 'and_ln48' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49 = select i1 %and_ln48, i32 38, i32 19" [d2.cpp:49]   --->   Operation 54 'select' 'select_ln49' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 55 '%mul_ln49 = mul i32 %arg2_r_9_reload_read, i32 %select_ln49'
ST_1 : Operation 55 [1/1] (2.65ns)   --->   "%mul_ln49 = mul i32 %arg2_r_9_reload_read, i32 %select_ln49" [d2.cpp:49]   --->   Operation 55 'mul' 'mul_ln49' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.79ns)   --->   "%add_ln49 = add i4 %i1_3, i4 4" [d2.cpp:49]   --->   Operation 56 'add' 'add_ln49' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 57 '%mul_ln49_1 = mul i32 %arg2_r_8_reload_read, i32 19'
ST_1 : Operation 57 [1/1] (2.69ns)   --->   "%mul_ln49_1 = mul i32 %arg2_r_8_reload_read, i32 19" [d2.cpp:49]   --->   Operation 57 'mul' 'mul_ln49_1' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.79ns)   --->   "%icmp_ln49 = icmp_ugt  i4 %add_ln49, i4 9" [d2.cpp:49]   --->   Operation 58 'icmp' 'icmp_ln49' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%add_ln48_1 = add i4 %i1_3, i4 5" [d2.cpp:48]   --->   Operation 59 'add' 'add_ln48_1' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.79ns)   --->   "%icmp_ln48_1 = icmp_ugt  i4 %add_ln48_1, i4 9" [d2.cpp:48]   --->   Operation 60 'icmp' 'icmp_ln48_1' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_1)   --->   "%and_ln48_1 = and i1 %empty, i1 %icmp_ln48_1" [d2.cpp:48]   --->   Operation 61 'and' 'and_ln48_1' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_1 = select i1 %and_ln48_1, i32 38, i32 19" [d2.cpp:49]   --->   Operation 62 'select' 'select_ln49_1' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.79ns)   --->   "%sub_ln49 = sub i4 14, i4 %i1_3" [d2.cpp:49]   --->   Operation 63 'sub' 'sub_ln49' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.75ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49" [d2.cpp:49]   --->   Operation 64 'mux' 'tmp_3' <Predicate = (icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 65 '%mul_ln49_2 = mul i32 %tmp_3, i32 %select_ln49_1'
ST_1 : Operation 65 [1/1] (2.65ns)   --->   "%mul_ln49_2 = mul i32 %tmp_3, i32 %select_ln49_1" [d2.cpp:49]   --->   Operation 65 'mul' 'mul_ln49_2' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.79ns)   --->   "%add_ln49_1 = add i4 %i1_3, i4 6" [d2.cpp:49]   --->   Operation 66 'add' 'add_ln49_1' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%sub_ln49_1 = sub i4 13, i4 %i1_3" [d2.cpp:49]   --->   Operation 67 'sub' 'sub_ln49_1' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.75ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_1" [d2.cpp:49]   --->   Operation 68 'mux' 'tmp_4' <Predicate = (icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 69 '%mul_ln49_3 = mul i32 %tmp_4, i32 19'
ST_1 : Operation 69 [1/1] (2.69ns)   --->   "%mul_ln49_3 = mul i32 %tmp_4, i32 19" [d2.cpp:49]   --->   Operation 69 'mul' 'mul_ln49_3' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.79ns)   --->   "%icmp_ln49_1 = icmp_ugt  i4 %add_ln49_1, i4 9" [d2.cpp:49]   --->   Operation 70 'icmp' 'icmp_ln49_1' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.79ns)   --->   "%add_ln48_2 = add i5 %zext_ln36, i5 7" [d2.cpp:48]   --->   Operation 71 'add' 'add_ln48_2' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.78ns)   --->   "%icmp_ln48_2 = icmp_ugt  i5 %add_ln48_2, i5 9" [d2.cpp:48]   --->   Operation 72 'icmp' 'icmp_ln48_2' <Predicate = (icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_2)   --->   "%and_ln48_2 = and i1 %empty, i1 %icmp_ln48_2" [d2.cpp:48]   --->   Operation 73 'and' 'and_ln48_2' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_2 = select i1 %and_ln48_2, i32 38, i32 19" [d2.cpp:49]   --->   Operation 74 'select' 'select_ln49_2' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.79ns)   --->   "%sub_ln49_2 = sub i4 12, i4 %i1_3" [d2.cpp:49]   --->   Operation 75 'sub' 'sub_ln49_2' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.75ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_2" [d2.cpp:49]   --->   Operation 76 'mux' 'tmp_5' <Predicate = (icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 77 '%mul_ln49_4 = mul i32 %tmp_5, i32 %select_ln49_2'
ST_1 : Operation 77 [1/1] (2.65ns)   --->   "%mul_ln49_4 = mul i32 %tmp_5, i32 %select_ln49_2" [d2.cpp:49]   --->   Operation 77 'mul' 'mul_ln49_4' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.78ns)   --->   "%add_ln49_2 = add i5 %zext_ln36, i5 8" [d2.cpp:49]   --->   Operation 78 'add' 'add_ln49_2' <Predicate = (icmp_ln36)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.79ns)   --->   "%sub_ln49_3 = sub i4 11, i4 %i1_3" [d2.cpp:49]   --->   Operation 79 'sub' 'sub_ln49_3' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.75ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_3" [d2.cpp:49]   --->   Operation 80 'mux' 'tmp_6' <Predicate = (icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 81 '%mul_ln49_5 = mul i32 %tmp_6, i32 19'
ST_1 : Operation 81 [1/1] (2.69ns)   --->   "%mul_ln49_5 = mul i32 %tmp_6, i32 19" [d2.cpp:49]   --->   Operation 81 'mul' 'mul_ln49_5' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.78ns)   --->   "%icmp_ln49_2 = icmp_ugt  i5 %add_ln49_2, i5 9" [d2.cpp:49]   --->   Operation 82 'icmp' 'icmp_ln49_2' <Predicate = (icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.36ns)   --->   "%select_ln49_3 = select i1 %empty, i32 38, i32 19" [d2.cpp:49]   --->   Operation 83 'select' 'select_ln49_3' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.79ns)   --->   "%sub_ln49_4 = sub i4 10, i4 %i1_3" [d2.cpp:49]   --->   Operation 84 'sub' 'sub_ln49_4' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.75ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_4" [d2.cpp:49]   --->   Operation 85 'mux' 'tmp_7' <Predicate = (icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 86 '%mul_ln49_6 = mul i32 %tmp_7, i32 %select_ln49_3'
ST_1 : Operation 86 [1/1] (2.65ns)   --->   "%mul_ln49_6 = mul i32 %tmp_7, i32 %select_ln49_3" [d2.cpp:49]   --->   Operation 86 'mul' 'mul_ln49_6' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.28ns)   --->   "%cmp32_1 = xor i1 %empty, i1 1"   --->   Operation 87 'xor' 'cmp32_1' <Predicate = (icmp_ln36)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.72ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i3 %trunc_ln36" [d2.cpp:49]   --->   Operation 88 'mux' 'tmp_8' <Predicate = (icmp_ln36)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 89 '%mul_ln49_7 = mul i32 %arg2_r_9_reload_read, i32 19'
ST_1 : Operation 89 [1/1] (2.69ns)   --->   "%mul_ln49_7 = mul i32 %arg2_r_9_reload_read, i32 19" [d2.cpp:49]   --->   Operation 89 'mul' 'mul_ln49_7' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_4)   --->   "%and_ln48_3 = and i1 %icmp_ln49, i1 %cmp32_1" [d2.cpp:48]   --->   Operation 90 'and' 'and_ln48_3' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_4 = select i1 %and_ln48_3, i32 38, i32 19" [d2.cpp:49]   --->   Operation 91 'select' 'select_ln49_4' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 92 '%mul_ln49_8 = mul i32 %arg2_r_8_reload_read, i32 %select_ln49_4'
ST_1 : Operation 92 [1/1] (2.65ns)   --->   "%mul_ln49_8 = mul i32 %arg2_r_8_reload_read, i32 %select_ln49_4" [d2.cpp:49]   --->   Operation 92 'mul' 'mul_ln49_8' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 93 '%mul_ln49_9 = mul i32 %tmp_3, i32 19'
ST_1 : Operation 93 [1/1] (2.69ns)   --->   "%mul_ln49_9 = mul i32 %tmp_3, i32 19" [d2.cpp:49]   --->   Operation 93 'mul' 'mul_ln49_9' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_5)   --->   "%and_ln48_4 = and i1 %icmp_ln49_1, i1 %cmp32_1" [d2.cpp:48]   --->   Operation 94 'and' 'and_ln48_4' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_5 = select i1 %and_ln48_4, i32 38, i32 19" [d2.cpp:49]   --->   Operation 95 'select' 'select_ln49_5' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 96 '%mul_ln49_10 = mul i32 %tmp_4, i32 %select_ln49_5'
ST_1 : Operation 96 [1/1] (2.65ns)   --->   "%mul_ln49_10 = mul i32 %tmp_4, i32 %select_ln49_5" [d2.cpp:49]   --->   Operation 96 'mul' 'mul_ln49_10' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 97 '%mul_ln49_11 = mul i32 %tmp_5, i32 19'
ST_1 : Operation 97 [1/1] (2.69ns)   --->   "%mul_ln49_11 = mul i32 %tmp_5, i32 19" [d2.cpp:49]   --->   Operation 97 'mul' 'mul_ln49_11' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_6)   --->   "%and_ln48_5 = and i1 %icmp_ln49_2, i1 %cmp32_1" [d2.cpp:48]   --->   Operation 98 'and' 'and_ln48_5' <Predicate = (icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_6 = select i1 %and_ln48_5, i32 38, i32 19" [d2.cpp:49]   --->   Operation 99 'select' 'select_ln49_6' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 100 '%mul_ln49_12 = mul i32 %tmp_6, i32 %select_ln49_6'
ST_1 : Operation 100 [1/1] (2.65ns)   --->   "%mul_ln49_12 = mul i32 %tmp_6, i32 %select_ln49_6" [d2.cpp:49]   --->   Operation 100 'mul' 'mul_ln49_12' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 101 '%mul_ln49_13 = mul i32 %tmp_7, i32 19'
ST_1 : Operation 101 [1/1] (2.69ns)   --->   "%mul_ln49_13 = mul i32 %tmp_7, i32 19" [d2.cpp:49]   --->   Operation 101 'mul' 'mul_ln49_13' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.36ns)   --->   "%select_ln49_7 = select i1 %empty, i32 19, i32 38" [d2.cpp:49]   --->   Operation 102 'select' 'select_ln49_7' <Predicate = (icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.79ns)   --->   "%sub_ln49_5 = sub i4 9, i4 %i1_3" [d2.cpp:49]   --->   Operation 103 'sub' 'sub_ln49_5' <Predicate = (icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.77ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i4 %sub_ln49_5" [d2.cpp:49]   --->   Operation 104 'mux' 'tmp_9' <Predicate = (icmp_ln36)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 105 '%mul_ln49_14 = mul i32 %tmp_9, i32 %select_ln49_7'
ST_1 : Operation 105 [1/1] (2.65ns)   --->   "%mul_ln49_14 = mul i32 %tmp_9, i32 %select_ln49_7" [d2.cpp:49]   --->   Operation 105 'mul' 'mul_ln49_14' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.72ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i3 %trunc_ln36" [d2.cpp:49]   --->   Operation 106 'mux' 'tmp_s' <Predicate = (icmp_ln36)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 107 '%mul_ln49_33 = mul i32 %tmp_9, i32 19'
ST_1 : Operation 107 [1/1] (2.69ns)   --->   "%mul_ln49_33 = mul i32 %tmp_9, i32 19" [d2.cpp:49]   --->   Operation 107 'mul' 'mul_ln49_33' <Predicate = (icmp_ln36)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.67ns)   --->   "%sub_ln49_6 = sub i3 0, i3 %trunc_ln36" [d2.cpp:49]   --->   Operation 108 'sub' 'sub_ln49_6' <Predicate = (icmp_ln36)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.72ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i3 %sub_ln49_6" [d2.cpp:49]   --->   Operation 109 'mux' 'tmp_1' <Predicate = (icmp_ln36)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 110 '%mul_ln49_37 = mul i32 %tmp_1, i32 %select_ln49_3'
ST_1 : Operation 110 [1/1] (2.65ns)   --->   "%mul_ln49_37 = mul i32 %tmp_1, i32 %select_ln49_3" [d2.cpp:49]   --->   Operation 110 'mul' 'mul_ln49_37' <Predicate = (icmp_ln36)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.42ns)   --->   "%store_ln36 = store i4 %add_ln48, i4 %i1" [d2.cpp:36]   --->   Operation 111 'store' 'store_ln36' <Predicate = (icmp_ln36)> <Delay = 0.42>
ST_1 : Operation 226 [1/1] (0.00ns)   --->   "%arr_9_load_1 = load i64 %arr_9"   --->   Operation 226 'load' 'arr_9_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%arr_10_load_1 = load i64 %arr_10"   --->   Operation 227 'load' 'arr_10_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 228 [1/1] (0.00ns)   --->   "%arr_11_load_1 = load i64 %arr_11"   --->   Operation 228 'load' 'arr_11_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%arr_12_load_1 = load i64 %arr_12"   --->   Operation 229 'load' 'arr_12_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.00ns)   --->   "%arr_13_load_1 = load i64 %arr_13"   --->   Operation 230 'load' 'arr_13_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (0.00ns)   --->   "%arr_14_load_1 = load i64 %arr_14"   --->   Operation 231 'load' 'arr_14_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 232 [1/1] (0.00ns)   --->   "%arr_15_load_1 = load i64 %arr_15"   --->   Operation 232 'load' 'arr_15_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%arr_16_load_1 = load i64 %arr_16"   --->   Operation 233 'load' 'arr_16_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 234 [1/1] (0.00ns)   --->   "%arr_17_load_1 = load i64 %arr_17"   --->   Operation 234 'load' 'arr_17_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 235 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_9139_out, i64 %arr_17_load_1"   --->   Operation 235 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 236 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_8138_out, i64 %arr_16_load_1"   --->   Operation 236 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 237 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_7137_out, i64 %arr_15_load_1"   --->   Operation 237 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 238 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_6136_out, i64 %arr_14_load_1"   --->   Operation 238 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 239 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_5135_out, i64 %arr_13_load_1"   --->   Operation 239 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 240 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_4134_out, i64 %arr_12_load_1"   --->   Operation 240 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 241 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_3133_out, i64 %arr_11_load_1"   --->   Operation 241 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 242 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_2118132_out, i64 %arr_10_load_1"   --->   Operation 242 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 243 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1100131_out, i64 %arr_9_load_1"   --->   Operation 243 'write' 'write_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 244 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 244 'ret' 'ret_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.75>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%arr_9_load = load i64 %arr_9" [d2.cpp:49]   --->   Operation 112 'load' 'arr_9_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%arr_10_load = load i64 %arr_10" [d2.cpp:49]   --->   Operation 113 'load' 'arr_10_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%arr_11_load = load i64 %arr_11" [d2.cpp:49]   --->   Operation 114 'load' 'arr_11_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%arr_12_load = load i64 %arr_12" [d2.cpp:49]   --->   Operation 115 'load' 'arr_12_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%arr_13_load = load i64 %arr_13" [d2.cpp:49]   --->   Operation 116 'load' 'arr_13_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%arr_14_load = load i64 %arr_14" [d2.cpp:49]   --->   Operation 117 'load' 'arr_14_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%arr_15_load = load i64 %arr_15" [d2.cpp:49]   --->   Operation 118 'load' 'arr_15_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%arr_16_load = load i64 %arr_16" [d2.cpp:49]   --->   Operation 119 'load' 'arr_16_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%arr_17_load = load i64 %arr_17" [d2.cpp:49]   --->   Operation 120 'load' 'arr_17_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d2.cpp:38]   --->   Operation 121 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%speclooptripcount_ln36 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d2.cpp:36]   --->   Operation 122 'speclooptripcount' 'speclooptripcount_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d2.cpp:36]   --->   Operation 123 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i32 %tmp" [d2.cpp:49]   --->   Operation 124 'zext' 'zext_ln49' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i32 %mul_ln49" [d2.cpp:49]   --->   Operation 125 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i32 %mul_ln49_1" [d2.cpp:49]   --->   Operation 126 'zext' 'zext_ln49_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln49_3 = zext i32 %mul_ln49_2" [d2.cpp:49]   --->   Operation 127 'zext' 'zext_ln49_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln49_4 = zext i32 %mul_ln49_3" [d2.cpp:49]   --->   Operation 128 'zext' 'zext_ln49_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln49_5 = zext i32 %mul_ln49_4" [d2.cpp:49]   --->   Operation 129 'zext' 'zext_ln49_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln49_6 = zext i32 %mul_ln49_5" [d2.cpp:49]   --->   Operation 130 'zext' 'zext_ln49_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln49_7 = zext i32 %mul_ln49_6" [d2.cpp:49]   --->   Operation 131 'zext' 'zext_ln49_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln49_8 = zext i32 %tmp_8" [d2.cpp:49]   --->   Operation 132 'zext' 'zext_ln49_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln49_9 = zext i32 %mul_ln49_7" [d2.cpp:49]   --->   Operation 133 'zext' 'zext_ln49_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln49_10 = zext i32 %mul_ln49_8" [d2.cpp:49]   --->   Operation 134 'zext' 'zext_ln49_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln49_11 = zext i32 %mul_ln49_9" [d2.cpp:49]   --->   Operation 135 'zext' 'zext_ln49_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln49_12 = zext i32 %mul_ln49_10" [d2.cpp:49]   --->   Operation 136 'zext' 'zext_ln49_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln49_13 = zext i32 %mul_ln49_11" [d2.cpp:49]   --->   Operation 137 'zext' 'zext_ln49_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln49_14 = zext i32 %mul_ln49_12" [d2.cpp:49]   --->   Operation 138 'zext' 'zext_ln49_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln49_15 = zext i32 %mul_ln49_13" [d2.cpp:49]   --->   Operation 139 'zext' 'zext_ln49_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln49_16 = zext i32 %mul_ln49_14" [d2.cpp:49]   --->   Operation 140 'zext' 'zext_ln49_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln49_17 = zext i32 %tmp_s" [d2.cpp:49]   --->   Operation 141 'zext' 'zext_ln49_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 142 '%mul_ln49_15 = mul i64 %zext_ln49_17, i64 %zext_ln49_1'
ST_2 : Operation 142 [1/1] (2.56ns)   --->   "%mul_ln49_15 = mul i64 %zext_ln49_17, i64 %zext_ln49_1" [d2.cpp:49]   --->   Operation 142 'mul' 'mul_ln49_15' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.17ns)   --->   "%select_ln49_8 = select i1 %icmp_ln48, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 143 'select' 'select_ln49_8' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node arr)   --->   "%and_ln49 = and i64 %mul_ln49_15, i64 %select_ln49_8" [d2.cpp:49]   --->   Operation 144 'and' 'and_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (1.08ns) (out node of the LUT)   --->   "%arr = add i64 %and_ln49, i64 %arr_9_load" [d2.cpp:49]   --->   Operation 145 'add' 'arr' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 146 '%mul_ln49_16 = mul i64 %zext_ln49_8, i64 %zext_ln49_9'
ST_2 : Operation 146 [1/1] (2.56ns)   --->   "%mul_ln49_16 = mul i64 %zext_ln49_8, i64 %zext_ln49_9" [d2.cpp:49]   --->   Operation 146 'mul' 'mul_ln49_16' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.37ns)   --->   "%and_ln49_1 = and i64 %mul_ln49_16, i64 %select_ln49_8" [d2.cpp:49]   --->   Operation 147 'and' 'and_ln49_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 148 '%mul_ln49_17 = mul i64 %zext_ln49_17, i64 %zext_ln49_2'
ST_2 : Operation 148 [1/1] (2.56ns)   --->   "%mul_ln49_17 = mul i64 %zext_ln49_17, i64 %zext_ln49_2" [d2.cpp:49]   --->   Operation 148 'mul' 'mul_ln49_17' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.17ns)   --->   "%select_ln49_9 = select i1 %icmp_ln49, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 149 'select' 'select_ln49_9' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.37ns)   --->   "%and_ln49_2 = and i64 %mul_ln49_17, i64 %select_ln49_9" [d2.cpp:49]   --->   Operation 150 'and' 'and_ln49_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_4 = add i64 %and_ln49_2, i64 %and_ln49_1" [d2.cpp:49]   --->   Operation 151 'add' 'add_ln49_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 152 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_18 = add i64 %arr_10_load, i64 %add_ln49_4" [d2.cpp:49]   --->   Operation 152 'add' 'arr_18' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 153 '%mul_ln49_18 = mul i64 %zext_ln49_17, i64 %zext_ln49_3'
ST_2 : Operation 153 [1/1] (2.56ns)   --->   "%mul_ln49_18 = mul i64 %zext_ln49_17, i64 %zext_ln49_3" [d2.cpp:49]   --->   Operation 153 'mul' 'mul_ln49_18' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 154 '%mul_ln49_19 = mul i64 %zext_ln49_1, i64 %zext_ln49'
ST_2 : Operation 154 [1/1] (2.56ns)   --->   "%mul_ln49_19 = mul i64 %zext_ln49_1, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 154 'mul' 'mul_ln49_19' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 155 '%mul_ln49_20 = mul i64 %zext_ln49_8, i64 %zext_ln49_10'
ST_2 : Operation 155 [1/1] (2.56ns)   --->   "%mul_ln49_20 = mul i64 %zext_ln49_8, i64 %zext_ln49_10" [d2.cpp:49]   --->   Operation 155 'mul' 'mul_ln49_20' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.17ns)   --->   "%select_ln49_10 = select i1 %icmp_ln48_1, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 156 'select' 'select_ln49_10' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_6)   --->   "%and_ln49_3 = and i64 %mul_ln49_18, i64 %select_ln49_10" [d2.cpp:49]   --->   Operation 157 'and' 'and_ln49_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.37ns)   --->   "%and_ln49_4 = and i64 %mul_ln49_19, i64 %select_ln49_8" [d2.cpp:49]   --->   Operation 158 'and' 'and_ln49_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_6)   --->   "%and_ln49_5 = and i64 %mul_ln49_20, i64 %select_ln49_9" [d2.cpp:49]   --->   Operation 159 'and' 'and_ln49_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_6 = add i64 %and_ln49_5, i64 %and_ln49_3" [d2.cpp:49]   --->   Operation 160 'add' 'add_ln49_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_7 = add i64 %add_ln49_6, i64 %and_ln49_4" [d2.cpp:49]   --->   Operation 161 'add' 'add_ln49_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 162 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_19 = add i64 %arr_11_load, i64 %add_ln49_7" [d2.cpp:49]   --->   Operation 162 'add' 'arr_19' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 163 '%mul_ln49_21 = mul i64 %zext_ln49_17, i64 %zext_ln49_4'
ST_2 : Operation 163 [1/1] (2.56ns)   --->   "%mul_ln49_21 = mul i64 %zext_ln49_17, i64 %zext_ln49_4" [d2.cpp:49]   --->   Operation 163 'mul' 'mul_ln49_21' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 164 '%mul_ln49_22 = mul i64 %zext_ln49_2, i64 %zext_ln49'
ST_2 : Operation 164 [1/1] (2.56ns)   --->   "%mul_ln49_22 = mul i64 %zext_ln49_2, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 164 'mul' 'mul_ln49_22' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 165 '%mul_ln49_23 = mul i64 %zext_ln49_8, i64 %zext_ln49_11'
ST_2 : Operation 165 [1/1] (2.56ns)   --->   "%mul_ln49_23 = mul i64 %zext_ln49_8, i64 %zext_ln49_11" [d2.cpp:49]   --->   Operation 165 'mul' 'mul_ln49_23' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.17ns)   --->   "%select_ln49_11 = select i1 %icmp_ln49_1, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 166 'select' 'select_ln49_11' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_9)   --->   "%and_ln49_6 = and i64 %mul_ln49_21, i64 %select_ln49_11" [d2.cpp:49]   --->   Operation 167 'and' 'and_ln49_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.37ns)   --->   "%and_ln49_7 = and i64 %mul_ln49_22, i64 %select_ln49_9" [d2.cpp:49]   --->   Operation 168 'and' 'and_ln49_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_9)   --->   "%and_ln49_8 = and i64 %mul_ln49_23, i64 %select_ln49_10" [d2.cpp:49]   --->   Operation 169 'and' 'and_ln49_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_9 = add i64 %and_ln49_8, i64 %and_ln49_6" [d2.cpp:49]   --->   Operation 170 'add' 'add_ln49_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_10 = add i64 %add_ln49_9, i64 %and_ln49_7" [d2.cpp:49]   --->   Operation 171 'add' 'add_ln49_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 172 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_20 = add i64 %arr_12_load, i64 %add_ln49_10" [d2.cpp:49]   --->   Operation 172 'add' 'arr_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 173 '%mul_ln49_24 = mul i64 %zext_ln49_17, i64 %zext_ln49_5'
ST_2 : Operation 173 [1/1] (2.56ns)   --->   "%mul_ln49_24 = mul i64 %zext_ln49_17, i64 %zext_ln49_5" [d2.cpp:49]   --->   Operation 173 'mul' 'mul_ln49_24' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 174 '%mul_ln49_25 = mul i64 %zext_ln49_3, i64 %zext_ln49'
ST_2 : Operation 174 [1/1] (2.56ns)   --->   "%mul_ln49_25 = mul i64 %zext_ln49_3, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 174 'mul' 'mul_ln49_25' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 175 '%mul_ln49_26 = mul i64 %zext_ln49_8, i64 %zext_ln49_12'
ST_2 : Operation 175 [1/1] (2.56ns)   --->   "%mul_ln49_26 = mul i64 %zext_ln49_8, i64 %zext_ln49_12" [d2.cpp:49]   --->   Operation 175 'mul' 'mul_ln49_26' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (0.17ns)   --->   "%select_ln49_12 = select i1 %icmp_ln48_2, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 176 'select' 'select_ln49_12' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_12)   --->   "%and_ln49_9 = and i64 %mul_ln49_24, i64 %select_ln49_12" [d2.cpp:49]   --->   Operation 177 'and' 'and_ln49_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.37ns)   --->   "%and_ln49_10 = and i64 %mul_ln49_25, i64 %select_ln49_10" [d2.cpp:49]   --->   Operation 178 'and' 'and_ln49_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_12)   --->   "%and_ln49_11 = and i64 %mul_ln49_26, i64 %select_ln49_11" [d2.cpp:49]   --->   Operation 179 'and' 'and_ln49_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_12 = add i64 %and_ln49_11, i64 %and_ln49_9" [d2.cpp:49]   --->   Operation 180 'add' 'add_ln49_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_13 = add i64 %add_ln49_12, i64 %and_ln49_10" [d2.cpp:49]   --->   Operation 181 'add' 'add_ln49_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 182 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_21 = add i64 %arr_13_load, i64 %add_ln49_13" [d2.cpp:49]   --->   Operation 182 'add' 'arr_21' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 183 '%mul_ln49_27 = mul i64 %zext_ln49_17, i64 %zext_ln49_6'
ST_2 : Operation 183 [1/1] (2.56ns)   --->   "%mul_ln49_27 = mul i64 %zext_ln49_17, i64 %zext_ln49_6" [d2.cpp:49]   --->   Operation 183 'mul' 'mul_ln49_27' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 184 '%mul_ln49_28 = mul i64 %zext_ln49_4, i64 %zext_ln49'
ST_2 : Operation 184 [1/1] (2.56ns)   --->   "%mul_ln49_28 = mul i64 %zext_ln49_4, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 184 'mul' 'mul_ln49_28' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 185 '%mul_ln49_29 = mul i64 %zext_ln49_8, i64 %zext_ln49_13'
ST_2 : Operation 185 [1/1] (2.56ns)   --->   "%mul_ln49_29 = mul i64 %zext_ln49_8, i64 %zext_ln49_13" [d2.cpp:49]   --->   Operation 185 'mul' 'mul_ln49_29' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.17ns)   --->   "%select_ln49_13 = select i1 %icmp_ln49_2, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 186 'select' 'select_ln49_13' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_15)   --->   "%and_ln49_12 = and i64 %mul_ln49_27, i64 %select_ln49_13" [d2.cpp:49]   --->   Operation 187 'and' 'and_ln49_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (0.37ns)   --->   "%and_ln49_13 = and i64 %mul_ln49_28, i64 %select_ln49_11" [d2.cpp:49]   --->   Operation 188 'and' 'and_ln49_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_15)   --->   "%and_ln49_14 = and i64 %mul_ln49_29, i64 %select_ln49_12" [d2.cpp:49]   --->   Operation 189 'and' 'and_ln49_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_15 = add i64 %and_ln49_14, i64 %and_ln49_12" [d2.cpp:49]   --->   Operation 190 'add' 'add_ln49_15' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_16 = add i64 %add_ln49_15, i64 %and_ln49_13" [d2.cpp:49]   --->   Operation 191 'add' 'add_ln49_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 192 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_22 = add i64 %arr_14_load, i64 %add_ln49_16" [d2.cpp:49]   --->   Operation 192 'add' 'arr_22' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 193 '%mul_ln49_30 = mul i64 %zext_ln49_5, i64 %zext_ln49'
ST_2 : Operation 193 [1/1] (2.56ns)   --->   "%mul_ln49_30 = mul i64 %zext_ln49_5, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 193 'mul' 'mul_ln49_30' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 194 '%mul_ln49_31 = mul i64 %zext_ln49_8, i64 %zext_ln49_14'
ST_2 : Operation 194 [1/1] (2.56ns)   --->   "%mul_ln49_31 = mul i64 %zext_ln49_8, i64 %zext_ln49_14" [d2.cpp:49]   --->   Operation 194 'mul' 'mul_ln49_31' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.37ns)   --->   "%and_ln49_15 = and i64 %mul_ln49_30, i64 %select_ln49_12" [d2.cpp:49]   --->   Operation 195 'and' 'and_ln49_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_18)   --->   "%and_ln49_16 = and i64 %mul_ln49_31, i64 %select_ln49_13" [d2.cpp:49]   --->   Operation 196 'and' 'and_ln49_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 197 '%mul_ln49_32 = mul i64 %zext_ln49_17, i64 %zext_ln49_7'
ST_2 : Operation 197 [1/1] (2.56ns)   --->   "%mul_ln49_32 = mul i64 %zext_ln49_17, i64 %zext_ln49_7" [d2.cpp:49]   --->   Operation 197 'mul' 'mul_ln49_32' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_18 = add i64 %and_ln49_16, i64 %mul_ln49_32" [d2.cpp:49]   --->   Operation 198 'add' 'add_ln49_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 199 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_19 = add i64 %add_ln49_18, i64 %and_ln49_15" [d2.cpp:49]   --->   Operation 199 'add' 'add_ln49_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 200 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_23 = add i64 %arr_15_load, i64 %add_ln49_19" [d2.cpp:49]   --->   Operation 200 'add' 'arr_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln49_18 = zext i32 %mul_ln49_33" [d2.cpp:49]   --->   Operation 201 'zext' 'zext_ln49_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 202 '%mul_ln49_34 = mul i64 %zext_ln49_6, i64 %zext_ln49'
ST_2 : Operation 202 [1/1] (2.56ns)   --->   "%mul_ln49_34 = mul i64 %zext_ln49_6, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 202 'mul' 'mul_ln49_34' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.37ns)   --->   "%and_ln49_17 = and i64 %mul_ln49_34, i64 %select_ln49_13" [d2.cpp:49]   --->   Operation 203 'and' 'and_ln49_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 204 '%mul_ln49_35 = mul i64 %zext_ln49_17, i64 %zext_ln49_18'
ST_2 : Operation 204 [1/1] (2.56ns)   --->   "%mul_ln49_35 = mul i64 %zext_ln49_17, i64 %zext_ln49_18" [d2.cpp:49]   --->   Operation 204 'mul' 'mul_ln49_35' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 205 '%mul_ln49_36 = mul i64 %zext_ln49_8, i64 %zext_ln49_15'
ST_2 : Operation 205 [1/1] (2.56ns)   --->   "%mul_ln49_36 = mul i64 %zext_ln49_8, i64 %zext_ln49_15" [d2.cpp:49]   --->   Operation 205 'mul' 'mul_ln49_36' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 206 [1/1] (1.08ns)   --->   "%add_ln49_21 = add i64 %mul_ln49_36, i64 %mul_ln49_35" [d2.cpp:49]   --->   Operation 206 'add' 'add_ln49_21' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_22 = add i64 %add_ln49_21, i64 %and_ln49_17" [d2.cpp:49]   --->   Operation 207 'add' 'add_ln49_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 208 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_24 = add i64 %arr_16_load, i64 %add_ln49_22" [d2.cpp:49]   --->   Operation 208 'add' 'arr_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln49_19 = zext i32 %mul_ln49_37" [d2.cpp:49]   --->   Operation 209 'zext' 'zext_ln49_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 210 '%mul_ln49_38 = mul i64 %zext_ln49_19, i64 %zext_ln49_17'
ST_2 : Operation 210 [1/1] (2.56ns)   --->   "%mul_ln49_38 = mul i64 %zext_ln49_19, i64 %zext_ln49_17" [d2.cpp:49]   --->   Operation 210 'mul' 'mul_ln49_38' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 211 '%mul_ln49_39 = mul i64 %zext_ln49_7, i64 %zext_ln49'
ST_2 : Operation 211 [1/1] (2.56ns)   --->   "%mul_ln49_39 = mul i64 %zext_ln49_7, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 211 'mul' 'mul_ln49_39' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 212 '%mul_ln49_40 = mul i64 %zext_ln49_16, i64 %zext_ln49_8'
ST_2 : Operation 212 [1/1] (2.56ns)   --->   "%mul_ln49_40 = mul i64 %zext_ln49_16, i64 %zext_ln49_8" [d2.cpp:49]   --->   Operation 212 'mul' 'mul_ln49_40' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (1.08ns)   --->   "%add_ln49_24 = add i64 %mul_ln49_40, i64 %mul_ln49_38" [d2.cpp:49]   --->   Operation 213 'add' 'add_ln49_24' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_25 = add i64 %add_ln49_24, i64 %mul_ln49_39" [d2.cpp:49]   --->   Operation 214 'add' 'add_ln49_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 215 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%arr_25 = add i64 %arr_17_load, i64 %add_ln49_25" [d2.cpp:49]   --->   Operation 215 'add' 'arr_25' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 216 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_25, i64 %arr_17" [d2.cpp:36]   --->   Operation 216 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 217 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_24, i64 %arr_16" [d2.cpp:36]   --->   Operation 217 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 218 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_23, i64 %arr_15" [d2.cpp:36]   --->   Operation 218 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 219 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_22, i64 %arr_14" [d2.cpp:36]   --->   Operation 219 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 220 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_21, i64 %arr_13" [d2.cpp:36]   --->   Operation 220 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 221 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_20, i64 %arr_12" [d2.cpp:36]   --->   Operation 221 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 222 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_19, i64 %arr_11" [d2.cpp:36]   --->   Operation 222 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 223 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr_18, i64 %arr_10" [d2.cpp:36]   --->   Operation 223 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 224 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %arr, i64 %arr_9" [d2.cpp:36]   --->   Operation 224 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body31" [d2.cpp:36]   --->   Operation 225 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.374ns
The critical path consists of the following:
	'alloca' operation ('i1') [37]  (0.000 ns)
	'load' operation ('i1') on local variable 'i1' [68]  (0.000 ns)
	'add' operation ('add_ln48', d2.cpp:48) [89]  (0.797 ns)
	'icmp' operation ('icmp_ln48', d2.cpp:48) [90]  (0.797 ns)
	'and' operation ('and_ln48', d2.cpp:48) [91]  (0.000 ns)
	'select' operation ('select_ln49', d2.cpp:49) [92]  (0.360 ns)
	multiplexor before operation 'mul' with delay (0.770 ns)
'mul' operation ('mul_ln49', d2.cpp:49) [93]  (2.650 ns)

 <State 2>: 5.751ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.854 ns)
'mul' operation ('mul_ln49_40', d2.cpp:49) [236]  (2.566 ns)
	'add' operation ('add_ln49_24', d2.cpp:49) [237]  (1.085 ns)
	'add' operation ('add_ln49_25', d2.cpp:49) [238]  (0.000 ns)
	'add' operation ('arr', d2.cpp:49) [239]  (0.819 ns)
	'store' operation ('store_ln36', d2.cpp:36) of variable 'arr', d2.cpp:49 on local variable 'arr' [241]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
