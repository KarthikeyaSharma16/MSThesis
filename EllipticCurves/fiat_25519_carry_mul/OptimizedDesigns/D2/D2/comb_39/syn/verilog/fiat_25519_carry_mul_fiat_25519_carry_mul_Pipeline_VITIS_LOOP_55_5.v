// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add59_1_4211_reload,
        add59_1_3210_reload,
        add59_1_2119209_reload,
        add59_1_199208_reload,
        add59_1207_reload,
        add59_4206_reload,
        add59_3205_reload,
        add59_2190204_reload,
        add59_1172203_reload,
        arg1_r_reload,
        arg1_r_2_reload,
        arg1_r_4_reload,
        arg1_r_6_reload,
        arg1_r_8_reload,
        arg2_r_1_reload,
        arg2_r_3_reload,
        arg2_r_5_reload,
        arg2_r_7_reload,
        arg2_r_9_reload,
        arg2_r_reload,
        arg2_r_2_reload,
        arg2_r_4_reload,
        arg2_r_6_reload,
        arg2_r_8_reload,
        arg1_r_1_reload,
        arg1_r_3_reload,
        arg1_r_5_reload,
        arg1_r_7_reload,
        arg1_r_9_reload,
        add129_1_4201_out,
        add129_1_4201_out_ap_vld,
        add129_1_3200_out,
        add129_1_3200_out_ap_vld,
        add129_1_2199_out,
        add129_1_2199_out_ap_vld,
        add129_1_128198_out,
        add129_1_128198_out_ap_vld,
        add129_1197_out,
        add129_1197_out_ap_vld,
        add129_4196_out,
        add129_4196_out_ap_vld,
        add129_3195_out,
        add129_3195_out_ap_vld,
        add129_2194_out,
        add129_2194_out_ap_vld,
        add129_179193_out,
        add129_179193_out_ap_vld,
        add129192_out,
        add129192_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] add59_1_4211_reload;
input  [63:0] add59_1_3210_reload;
input  [63:0] add59_1_2119209_reload;
input  [63:0] add59_1_199208_reload;
input  [63:0] add59_1207_reload;
input  [63:0] add59_4206_reload;
input  [63:0] add59_3205_reload;
input  [63:0] add59_2190204_reload;
input  [63:0] add59_1172203_reload;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_9_reload;
output  [63:0] add129_1_4201_out;
output   add129_1_4201_out_ap_vld;
output  [63:0] add129_1_3200_out;
output   add129_1_3200_out_ap_vld;
output  [63:0] add129_1_2199_out;
output   add129_1_2199_out_ap_vld;
output  [63:0] add129_1_128198_out;
output   add129_1_128198_out_ap_vld;
output  [63:0] add129_1197_out;
output   add129_1197_out_ap_vld;
output  [63:0] add129_4196_out;
output   add129_4196_out_ap_vld;
output  [63:0] add129_3195_out;
output   add129_3195_out_ap_vld;
output  [63:0] add129_2194_out;
output   add129_2194_out_ap_vld;
output  [63:0] add129_179193_out;
output   add129_179193_out_ap_vld;
output  [63:0] add129192_out;
output   add129192_out_ap_vld;

reg ap_idle;
reg add129_1_4201_out_ap_vld;
reg add129_1_3200_out_ap_vld;
reg add129_1_2199_out_ap_vld;
reg add129_1_128198_out_ap_vld;
reg add129_1197_out_ap_vld;
reg add129_4196_out_ap_vld;
reg add129_3195_out_ap_vld;
reg add129_2194_out_ap_vld;
reg add129_179193_out_ap_vld;
reg add129192_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_582_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] add129192_fu_160;
wire   [63:0] add_ln68_4_fu_883_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] add129_179193_fu_164;
wire   [63:0] add_ln68_6_fu_928_p2;
reg   [63:0] add129_2194_fu_168;
wire   [63:0] add_ln68_8_fu_960_p2;
reg   [63:0] add129_3195_fu_172;
wire   [63:0] add_ln68_10_fu_1011_p2;
reg   [63:0] add129_4196_fu_176;
wire   [63:0] add_ln68_13_fu_1080_p2;
reg   [63:0] add129_1197_fu_180;
wire   [63:0] add_ln68_20_fu_1273_p2;
reg   [63:0] add129_1_128198_fu_184;
wire   [63:0] add_ln68_22_fu_1305_p2;
reg   [63:0] add129_1_2199_fu_188;
wire   [63:0] add_ln68_24_fu_1356_p2;
reg   [63:0] add129_1_3200_fu_192;
wire   [63:0] add_ln68_26_fu_1380_p2;
reg   [63:0] add129_1_4201_fu_196;
wire   [63:0] add_ln68_18_fu_1222_p2;
reg   [3:0] i1_fu_200;
wire   [3:0] add_ln68_fu_726_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln68_fu_448_p0;
wire   [31:0] mul_ln68_fu_448_p1;
wire   [63:0] zext_ln68_fu_649_p1;
wire   [31:0] mul_ln68_1_fu_452_p0;
wire   [63:0] zext_ln68_6_fu_864_p1;
wire   [31:0] mul_ln68_1_fu_452_p1;
wire   [63:0] zext_ln68_2_fu_720_p1;
wire   [31:0] mul_ln68_2_fu_456_p0;
wire   [31:0] mul_ln68_2_fu_456_p1;
wire   [31:0] mul_ln68_3_fu_460_p0;
wire   [31:0] mul_ln68_3_fu_460_p1;
wire   [31:0] mul_ln68_4_fu_464_p0;
wire   [31:0] mul_ln68_4_fu_464_p1;
wire   [31:0] mul_ln68_5_fu_468_p0;
wire   [31:0] mul_ln68_5_fu_468_p1;
wire   [63:0] zext_ln68_4_fu_795_p1;
wire   [31:0] mul_ln68_6_fu_472_p0;
wire   [31:0] mul_ln68_6_fu_472_p1;
wire   [31:0] mul_ln68_7_fu_476_p0;
wire   [31:0] mul_ln68_7_fu_476_p1;
wire   [31:0] mul_ln68_8_fu_480_p0;
wire   [31:0] mul_ln68_8_fu_480_p1;
wire   [31:0] mul_ln68_9_fu_484_p0;
wire   [63:0] zext_ln68_9_fu_1042_p1;
wire   [31:0] mul_ln68_9_fu_484_p1;
wire   [31:0] mul_ln68_10_fu_488_p0;
wire   [63:0] zext_ln68_13_fu_1196_p1;
wire   [31:0] mul_ln68_10_fu_488_p1;
wire   [31:0] mul_ln68_11_fu_492_p0;
wire   [31:0] mul_ln68_11_fu_492_p1;
wire   [31:0] mul_ln68_12_fu_496_p0;
wire   [31:0] mul_ln68_12_fu_496_p1;
wire   [31:0] mul_ln68_13_fu_500_p0;
wire   [31:0] mul_ln68_13_fu_500_p1;
wire   [31:0] mul_ln68_14_fu_504_p0;
wire   [63:0] zext_ln68_11_fu_1143_p1;
wire   [31:0] mul_ln68_14_fu_504_p1;
wire   [31:0] mul_ln68_15_fu_508_p0;
wire   [31:0] mul_ln68_15_fu_508_p1;
wire   [31:0] mul_ln68_16_fu_512_p0;
wire   [31:0] mul_ln68_16_fu_512_p1;
wire   [31:0] mul_ln68_17_fu_516_p0;
wire   [31:0] mul_ln68_17_fu_516_p1;
wire   [31:0] mul_ln68_18_fu_520_p0;
wire   [31:0] mul_ln68_18_fu_520_p1;
wire   [31:0] tmp_2_fu_630_p11;
wire   [3:0] tmp_s_fu_669_p11;
wire   [31:0] tmp_s_fu_669_p12;
wire   [3:0] tmp_1_fu_701_p10;
wire   [31:0] tmp_1_fu_701_p11;
wire   [2:0] trunc_ln55_1_fu_626_p1;
wire   [2:0] tmp_3_fu_738_p9;
wire   [31:0] tmp_3_fu_738_p10;
wire   [2:0] tmp_4_fu_779_p8;
wire   [31:0] tmp_4_fu_779_p9;
wire   [3:0] add_ln68_1_fu_767_p2;
wire   [2:0] tmp_5_fu_819_p7;
wire   [31:0] tmp_5_fu_819_p8;
wire   [3:0] add_ln68_2_fu_807_p2;
wire   [31:0] tmp_6_fu_845_p11;
wire   [63:0] mul_ln68_1_fu_452_p2;
wire   [63:0] mul_ln68_fu_448_p2;
wire   [63:0] add_ln68_3_fu_877_p2;
wire   [0:0] icmp_ln68_1_fu_761_p2;
wire   [31:0] shl_ln68_fu_889_p2;
wire   [31:0] select_ln68_fu_895_p3;
wire   [63:0] mul_ln68_3_fu_460_p2;
wire   [63:0] select_ln68_6_fu_908_p3;
wire   [63:0] and_ln68_fu_916_p2;
wire   [63:0] mul_ln68_2_fu_456_p2;
wire   [63:0] add_ln68_5_fu_922_p2;
wire   [63:0] mul_ln68_4_fu_464_p2;
wire   [0:0] icmp_ln68_2_fu_801_p2;
wire   [63:0] mul_ln68_5_fu_468_p2;
wire   [63:0] select_ln68_7_fu_940_p3;
wire   [63:0] and_ln68_2_fu_948_p2;
wire   [63:0] and_ln68_1_fu_934_p2;
wire   [63:0] add_ln68_7_fu_954_p2;
wire   [0:0] icmp_ln68_3_fu_839_p2;
wire   [31:0] shl_ln68_1_fu_966_p2;
wire   [31:0] select_ln68_1_fu_972_p3;
wire   [63:0] mul_ln68_6_fu_472_p2;
wire   [63:0] mul_ln68_7_fu_476_p2;
wire   [63:0] select_ln68_8_fu_991_p3;
wire   [63:0] and_ln68_4_fu_999_p2;
wire   [63:0] and_ln68_3_fu_985_p2;
wire   [63:0] add_ln68_9_fu_1005_p2;
wire   [2:0] tmp_7_fu_1029_p6;
wire   [31:0] tmp_7_fu_1029_p7;
wire   [3:0] add_ln68_11_fu_1017_p2;
wire   [63:0] mul_ln68_8_fu_480_p2;
wire   [0:0] icmp_ln68_4_fu_1048_p2;
wire   [63:0] mul_ln68_9_fu_484_p2;
wire   [63:0] select_ln68_9_fu_1060_p3;
wire   [63:0] and_ln68_6_fu_1068_p2;
wire   [63:0] and_ln68_5_fu_1054_p2;
wire   [63:0] add_ln68_12_fu_1074_p2;
wire   [1:0] trunc_ln55_fu_622_p1;
wire   [1:0] tmp_8_fu_1098_p5;
wire   [31:0] tmp_8_fu_1098_p6;
wire   [3:0] add_ln68_14_fu_1086_p2;
wire   [4:0] zext_ln68_16_fu_618_p1;
wire   [1:0] tmp_9_fu_1133_p4;
wire   [31:0] tmp_9_fu_1133_p5;
wire   [4:0] add_ln68_15_fu_1121_p2;
wire   [0:0] icmp_ln68_9_fu_1161_p2;
wire   [31:0] select_ln68_2_fu_1167_p3;
wire   [4:0] add_ln68_16_fu_1155_p2;
wire   [31:0] select_ln68_3_fu_1190_p3;
wire   [4:0] add_ln68_17_fu_1184_p2;
wire   [0:0] icmp_ln68_8_fu_1202_p2;
wire   [63:0] mul_ln68_10_fu_488_p2;
wire   [63:0] select_ln68_10_fu_1208_p3;
wire   [63:0] and_ln68_7_fu_1216_p2;
wire   [0:0] icmp_ln68_5_fu_1115_p2;
wire   [31:0] shl_ln68_2_fu_1228_p2;
wire   [31:0] select_ln68_4_fu_1234_p3;
wire   [63:0] mul_ln68_11_fu_492_p2;
wire   [63:0] mul_ln68_12_fu_496_p2;
wire   [63:0] select_ln68_11_fu_1253_p3;
wire   [63:0] and_ln68_9_fu_1261_p2;
wire   [63:0] and_ln68_8_fu_1247_p2;
wire   [63:0] add_ln68_19_fu_1267_p2;
wire   [63:0] mul_ln68_13_fu_500_p2;
wire   [0:0] icmp_ln68_6_fu_1149_p2;
wire   [63:0] mul_ln68_14_fu_504_p2;
wire   [63:0] select_ln68_12_fu_1285_p3;
wire   [63:0] and_ln68_11_fu_1293_p2;
wire   [63:0] and_ln68_10_fu_1279_p2;
wire   [63:0] add_ln68_21_fu_1299_p2;
wire   [0:0] icmp_ln68_7_fu_1178_p2;
wire   [31:0] shl_ln68_3_fu_1311_p2;
wire   [31:0] select_ln68_5_fu_1317_p3;
wire   [63:0] mul_ln68_15_fu_508_p2;
wire   [63:0] mul_ln68_16_fu_512_p2;
wire   [63:0] select_ln68_13_fu_1336_p3;
wire   [63:0] and_ln68_13_fu_1344_p2;
wire   [63:0] and_ln68_12_fu_1330_p2;
wire   [63:0] add_ln68_23_fu_1350_p2;
wire   [63:0] mul_ln68_17_fu_516_p2;
wire   [63:0] mul_ln68_18_fu_520_p2;
wire   [63:0] and_ln68_15_fu_1368_p2;
wire   [63:0] and_ln68_14_fu_1362_p2;
wire   [63:0] add_ln68_25_fu_1374_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln68_12_fu_496_p00;
wire   [63:0] mul_ln68_13_fu_500_p00;
wire   [63:0] mul_ln68_16_fu_512_p00;
wire   [63:0] mul_ln68_17_fu_516_p00;
wire   [63:0] mul_ln68_3_fu_460_p10;
wire   [63:0] mul_ln68_4_fu_464_p00;
wire   [63:0] mul_ln68_7_fu_476_p10;
wire   [63:0] mul_ln68_8_fu_480_p00;
wire   [63:0] mul_ln68_fu_448_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U109(
    .din0(mul_ln68_fu_448_p0),
    .din1(mul_ln68_fu_448_p1),
    .dout(mul_ln68_fu_448_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U110(
    .din0(mul_ln68_1_fu_452_p0),
    .din1(mul_ln68_1_fu_452_p1),
    .dout(mul_ln68_1_fu_452_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U111(
    .din0(mul_ln68_2_fu_456_p0),
    .din1(mul_ln68_2_fu_456_p1),
    .dout(mul_ln68_2_fu_456_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U112(
    .din0(mul_ln68_3_fu_460_p0),
    .din1(mul_ln68_3_fu_460_p1),
    .dout(mul_ln68_3_fu_460_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U113(
    .din0(mul_ln68_4_fu_464_p0),
    .din1(mul_ln68_4_fu_464_p1),
    .dout(mul_ln68_4_fu_464_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U114(
    .din0(mul_ln68_5_fu_468_p0),
    .din1(mul_ln68_5_fu_468_p1),
    .dout(mul_ln68_5_fu_468_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U115(
    .din0(mul_ln68_6_fu_472_p0),
    .din1(mul_ln68_6_fu_472_p1),
    .dout(mul_ln68_6_fu_472_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U116(
    .din0(mul_ln68_7_fu_476_p0),
    .din1(mul_ln68_7_fu_476_p1),
    .dout(mul_ln68_7_fu_476_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U117(
    .din0(mul_ln68_8_fu_480_p0),
    .din1(mul_ln68_8_fu_480_p1),
    .dout(mul_ln68_8_fu_480_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U118(
    .din0(mul_ln68_9_fu_484_p0),
    .din1(mul_ln68_9_fu_484_p1),
    .dout(mul_ln68_9_fu_484_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U119(
    .din0(mul_ln68_10_fu_488_p0),
    .din1(mul_ln68_10_fu_488_p1),
    .dout(mul_ln68_10_fu_488_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U120(
    .din0(mul_ln68_11_fu_492_p0),
    .din1(mul_ln68_11_fu_492_p1),
    .dout(mul_ln68_11_fu_492_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U121(
    .din0(mul_ln68_12_fu_496_p0),
    .din1(mul_ln68_12_fu_496_p1),
    .dout(mul_ln68_12_fu_496_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U122(
    .din0(mul_ln68_13_fu_500_p0),
    .din1(mul_ln68_13_fu_500_p1),
    .dout(mul_ln68_13_fu_500_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U123(
    .din0(mul_ln68_14_fu_504_p0),
    .din1(mul_ln68_14_fu_504_p1),
    .dout(mul_ln68_14_fu_504_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U124(
    .din0(mul_ln68_15_fu_508_p0),
    .din1(mul_ln68_15_fu_508_p1),
    .dout(mul_ln68_15_fu_508_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U125(
    .din0(mul_ln68_16_fu_512_p0),
    .din1(mul_ln68_16_fu_512_p1),
    .dout(mul_ln68_16_fu_512_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U126(
    .din0(mul_ln68_17_fu_516_p0),
    .din1(mul_ln68_17_fu_516_p1),
    .dout(mul_ln68_17_fu_516_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U127(
    .din0(mul_ln68_18_fu_520_p0),
    .din1(mul_ln68_18_fu_520_p1),
    .dout(mul_ln68_18_fu_520_p2)
);

fiat_25519_carry_mul_mux_9_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_x_U128(
    .din0(arg1_r_reload),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(32'd0),
    .din6(arg1_r_6_reload),
    .din7(32'd0),
    .din8(arg1_r_8_reload),
    .din9(i1_fu_200),
    .dout(tmp_2_fu_630_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_x_U129(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_s_fu_669_p11),
    .dout(tmp_s_fu_669_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_x_U130(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(tmp_1_fu_701_p10),
    .dout(tmp_1_fu_701_p11)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U131(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(tmp_3_fu_738_p9),
    .dout(tmp_3_fu_738_p10)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U132(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(tmp_4_fu_779_p8),
    .dout(tmp_4_fu_779_p9)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U133(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(tmp_5_fu_819_p7),
    .dout(tmp_5_fu_819_p8)
);

fiat_25519_carry_mul_mux_9_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_x_U134(
    .din0(arg1_r_1_reload),
    .din1(32'd0),
    .din2(arg1_r_3_reload),
    .din3(32'd0),
    .din4(arg1_r_5_reload),
    .din5(32'd0),
    .din6(arg1_r_7_reload),
    .din7(32'd0),
    .din8(arg1_r_9_reload),
    .din9(i1_fu_200),
    .dout(tmp_6_fu_845_p11)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U135(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(tmp_7_fu_1029_p6),
    .dout(tmp_7_fu_1029_p7)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U136(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(tmp_8_fu_1098_p5),
    .dout(tmp_8_fu_1098_p6)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U137(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(tmp_9_fu_1133_p4),
    .dout(tmp_9_fu_1133_p5)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129192_fu_160 <= 64'd0;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129192_fu_160 <= add_ln68_4_fu_883_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1197_fu_180 <= add59_1207_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_1197_fu_180 <= add_ln68_20_fu_1273_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_179193_fu_164 <= add59_1172203_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_179193_fu_164 <= add_ln68_6_fu_928_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_128198_fu_184 <= add59_1_199208_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_1_128198_fu_184 <= add_ln68_22_fu_1305_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_2199_fu_188 <= add59_1_2119209_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_1_2199_fu_188 <= add_ln68_24_fu_1356_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_3200_fu_192 <= add59_1_3210_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_1_3200_fu_192 <= add_ln68_26_fu_1380_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_4201_fu_196 <= add59_1_4211_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_1_4201_fu_196 <= add_ln68_18_fu_1222_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_2194_fu_168 <= add59_2190204_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_2194_fu_168 <= add_ln68_8_fu_960_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_3195_fu_172 <= add59_3205_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_3195_fu_172 <= add_ln68_10_fu_1011_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_4196_fu_176 <= add59_4206_reload;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add129_4196_fu_176 <= add_ln68_13_fu_1080_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_200 <= 4'd0;
        end else if (((icmp_ln68_fu_582_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_fu_200 <= add_ln68_fu_726_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129192_out_ap_vld = 1'b1;
    end else begin
        add129192_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1197_out_ap_vld = 1'b1;
    end else begin
        add129_1197_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_179193_out_ap_vld = 1'b1;
    end else begin
        add129_179193_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_128198_out_ap_vld = 1'b1;
    end else begin
        add129_1_128198_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_2199_out_ap_vld = 1'b1;
    end else begin
        add129_1_2199_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_3200_out_ap_vld = 1'b1;
    end else begin
        add129_1_3200_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_4201_out_ap_vld = 1'b1;
    end else begin
        add129_1_4201_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_2194_out_ap_vld = 1'b1;
    end else begin
        add129_2194_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_3195_out_ap_vld = 1'b1;
    end else begin
        add129_3195_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_4196_out_ap_vld = 1'b1;
    end else begin
        add129_4196_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_582_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add129192_out = add129192_fu_160;

assign add129_1197_out = add129_1197_fu_180;

assign add129_179193_out = add129_179193_fu_164;

assign add129_1_128198_out = add129_1_128198_fu_184;

assign add129_1_2199_out = add129_1_2199_fu_188;

assign add129_1_3200_out = add129_1_3200_fu_192;

assign add129_1_4201_out = add129_1_4201_fu_196;

assign add129_2194_out = add129_2194_fu_168;

assign add129_3195_out = add129_3195_fu_172;

assign add129_4196_out = add129_4196_fu_176;

assign add_ln68_10_fu_1011_p2 = (add129_3195_fu_172 + add_ln68_9_fu_1005_p2);

assign add_ln68_11_fu_1017_p2 = (i1_fu_200 + 4'd5);

assign add_ln68_12_fu_1074_p2 = (and_ln68_6_fu_1068_p2 + and_ln68_5_fu_1054_p2);

assign add_ln68_13_fu_1080_p2 = (add129_4196_fu_176 + add_ln68_12_fu_1074_p2);

assign add_ln68_14_fu_1086_p2 = (i1_fu_200 + 4'd6);

assign add_ln68_15_fu_1121_p2 = (zext_ln68_16_fu_618_p1 + 5'd7);

assign add_ln68_16_fu_1155_p2 = (zext_ln68_16_fu_618_p1 + 5'd8);

assign add_ln68_17_fu_1184_p2 = (zext_ln68_16_fu_618_p1 + 5'd9);

assign add_ln68_18_fu_1222_p2 = (and_ln68_7_fu_1216_p2 + add129_1_4201_fu_196);

assign add_ln68_19_fu_1267_p2 = (and_ln68_9_fu_1261_p2 + and_ln68_8_fu_1247_p2);

assign add_ln68_1_fu_767_p2 = (i1_fu_200 + 4'd3);

assign add_ln68_20_fu_1273_p2 = (add129_1197_fu_180 + add_ln68_19_fu_1267_p2);

assign add_ln68_21_fu_1299_p2 = (and_ln68_11_fu_1293_p2 + and_ln68_10_fu_1279_p2);

assign add_ln68_22_fu_1305_p2 = (add129_1_128198_fu_184 + add_ln68_21_fu_1299_p2);

assign add_ln68_23_fu_1350_p2 = (and_ln68_13_fu_1344_p2 + and_ln68_12_fu_1330_p2);

assign add_ln68_24_fu_1356_p2 = (add129_1_2199_fu_188 + add_ln68_23_fu_1350_p2);

assign add_ln68_25_fu_1374_p2 = (and_ln68_15_fu_1368_p2 + and_ln68_14_fu_1362_p2);

assign add_ln68_26_fu_1380_p2 = (add129_1_3200_fu_192 + add_ln68_25_fu_1374_p2);

assign add_ln68_2_fu_807_p2 = (i1_fu_200 + 4'd4);

assign add_ln68_3_fu_877_p2 = (mul_ln68_1_fu_452_p2 + mul_ln68_fu_448_p2);

assign add_ln68_4_fu_883_p2 = (add129192_fu_160 + add_ln68_3_fu_877_p2);

assign add_ln68_5_fu_922_p2 = (and_ln68_fu_916_p2 + mul_ln68_2_fu_456_p2);

assign add_ln68_6_fu_928_p2 = (add129_179193_fu_164 + add_ln68_5_fu_922_p2);

assign add_ln68_7_fu_954_p2 = (and_ln68_2_fu_948_p2 + and_ln68_1_fu_934_p2);

assign add_ln68_8_fu_960_p2 = (add129_2194_fu_168 + add_ln68_7_fu_954_p2);

assign add_ln68_9_fu_1005_p2 = (and_ln68_4_fu_999_p2 + and_ln68_3_fu_985_p2);

assign add_ln68_fu_726_p2 = (i1_fu_200 + 4'd2);

assign and_ln68_10_fu_1279_p2 = (select_ln68_11_fu_1253_p3 & mul_ln68_13_fu_500_p2);

assign and_ln68_11_fu_1293_p2 = (select_ln68_12_fu_1285_p3 & mul_ln68_14_fu_504_p2);

assign and_ln68_12_fu_1330_p2 = (select_ln68_12_fu_1285_p3 & mul_ln68_15_fu_508_p2);

assign and_ln68_13_fu_1344_p2 = (select_ln68_13_fu_1336_p3 & mul_ln68_16_fu_512_p2);

assign and_ln68_14_fu_1362_p2 = (select_ln68_13_fu_1336_p3 & mul_ln68_17_fu_516_p2);

assign and_ln68_15_fu_1368_p2 = (select_ln68_10_fu_1208_p3 & mul_ln68_18_fu_520_p2);

assign and_ln68_1_fu_934_p2 = (select_ln68_6_fu_908_p3 & mul_ln68_4_fu_464_p2);

assign and_ln68_2_fu_948_p2 = (select_ln68_7_fu_940_p3 & mul_ln68_5_fu_468_p2);

assign and_ln68_3_fu_985_p2 = (select_ln68_7_fu_940_p3 & mul_ln68_6_fu_472_p2);

assign and_ln68_4_fu_999_p2 = (select_ln68_8_fu_991_p3 & mul_ln68_7_fu_476_p2);

assign and_ln68_5_fu_1054_p2 = (select_ln68_8_fu_991_p3 & mul_ln68_8_fu_480_p2);

assign and_ln68_6_fu_1068_p2 = (select_ln68_9_fu_1060_p3 & mul_ln68_9_fu_484_p2);

assign and_ln68_7_fu_1216_p2 = (select_ln68_10_fu_1208_p3 & mul_ln68_10_fu_488_p2);

assign and_ln68_8_fu_1247_p2 = (select_ln68_9_fu_1060_p3 & mul_ln68_11_fu_492_p2);

assign and_ln68_9_fu_1261_p2 = (select_ln68_11_fu_1253_p3 & mul_ln68_12_fu_496_p2);

assign and_ln68_fu_916_p2 = (select_ln68_6_fu_908_p3 & mul_ln68_3_fu_460_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln68_1_fu_761_p2 = ((add_ln68_fu_726_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_801_p2 = ((add_ln68_1_fu_767_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_839_p2 = ((add_ln68_2_fu_807_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_1048_p2 = ((add_ln68_11_fu_1017_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_5_fu_1115_p2 = ((add_ln68_14_fu_1086_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_6_fu_1149_p2 = ((add_ln68_15_fu_1121_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_7_fu_1178_p2 = ((add_ln68_16_fu_1155_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_8_fu_1202_p2 = ((add_ln68_17_fu_1184_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_9_fu_1161_p2 = ((i1_fu_200 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_582_p2 = ((i1_fu_200 < 4'd10) ? 1'b1 : 1'b0);

assign mul_ln68_10_fu_488_p0 = zext_ln68_13_fu_1196_p1;

assign mul_ln68_10_fu_488_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_11_fu_492_p0 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_11_fu_492_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_12_fu_496_p0 = mul_ln68_12_fu_496_p00;

assign mul_ln68_12_fu_496_p00 = select_ln68_4_fu_1234_p3;

assign mul_ln68_12_fu_496_p1 = zext_ln68_6_fu_864_p1;

assign mul_ln68_13_fu_500_p0 = mul_ln68_13_fu_500_p00;

assign mul_ln68_13_fu_500_p00 = tmp_8_fu_1098_p6;

assign mul_ln68_13_fu_500_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_14_fu_504_p0 = zext_ln68_11_fu_1143_p1;

assign mul_ln68_14_fu_504_p1 = zext_ln68_6_fu_864_p1;

assign mul_ln68_15_fu_508_p0 = zext_ln68_11_fu_1143_p1;

assign mul_ln68_15_fu_508_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_16_fu_512_p0 = mul_ln68_16_fu_512_p00;

assign mul_ln68_16_fu_512_p00 = select_ln68_5_fu_1317_p3;

assign mul_ln68_16_fu_512_p1 = zext_ln68_6_fu_864_p1;

assign mul_ln68_17_fu_516_p0 = mul_ln68_17_fu_516_p00;

assign mul_ln68_17_fu_516_p00 = select_ln68_2_fu_1167_p3;

assign mul_ln68_17_fu_516_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_18_fu_520_p0 = zext_ln68_13_fu_1196_p1;

assign mul_ln68_18_fu_520_p1 = zext_ln68_6_fu_864_p1;

assign mul_ln68_1_fu_452_p0 = zext_ln68_6_fu_864_p1;

assign mul_ln68_1_fu_452_p1 = zext_ln68_2_fu_720_p1;

assign mul_ln68_2_fu_456_p0 = zext_ln68_2_fu_720_p1;

assign mul_ln68_2_fu_456_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_3_fu_460_p0 = zext_ln68_6_fu_864_p1;

assign mul_ln68_3_fu_460_p1 = mul_ln68_3_fu_460_p10;

assign mul_ln68_3_fu_460_p10 = select_ln68_fu_895_p3;

assign mul_ln68_4_fu_464_p0 = mul_ln68_4_fu_464_p00;

assign mul_ln68_4_fu_464_p00 = tmp_3_fu_738_p10;

assign mul_ln68_4_fu_464_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_5_fu_468_p0 = zext_ln68_6_fu_864_p1;

assign mul_ln68_5_fu_468_p1 = zext_ln68_4_fu_795_p1;

assign mul_ln68_6_fu_472_p0 = zext_ln68_4_fu_795_p1;

assign mul_ln68_6_fu_472_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_7_fu_476_p0 = zext_ln68_6_fu_864_p1;

assign mul_ln68_7_fu_476_p1 = mul_ln68_7_fu_476_p10;

assign mul_ln68_7_fu_476_p10 = select_ln68_1_fu_972_p3;

assign mul_ln68_8_fu_480_p0 = mul_ln68_8_fu_480_p00;

assign mul_ln68_8_fu_480_p00 = tmp_5_fu_819_p8;

assign mul_ln68_8_fu_480_p1 = zext_ln68_fu_649_p1;

assign mul_ln68_9_fu_484_p0 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_9_fu_484_p1 = zext_ln68_6_fu_864_p1;

assign mul_ln68_fu_448_p0 = mul_ln68_fu_448_p00;

assign mul_ln68_fu_448_p00 = tmp_s_fu_669_p12;

assign mul_ln68_fu_448_p1 = zext_ln68_fu_649_p1;

assign select_ln68_10_fu_1208_p3 = ((icmp_ln68_8_fu_1202_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_11_fu_1253_p3 = ((icmp_ln68_5_fu_1115_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_12_fu_1285_p3 = ((icmp_ln68_6_fu_1149_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_13_fu_1336_p3 = ((icmp_ln68_7_fu_1178_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_1_fu_972_p3 = ((icmp_ln68_3_fu_839_p2[0:0] == 1'b1) ? shl_ln68_1_fu_966_p2 : tmp_5_fu_819_p8);

assign select_ln68_2_fu_1167_p3 = ((icmp_ln68_9_fu_1161_p2[0:0] == 1'b1) ? arg2_r_9_reload : arg2_r_1_reload);

assign select_ln68_3_fu_1190_p3 = ((icmp_ln68_9_fu_1161_p2[0:0] == 1'b1) ? arg2_r_8_reload : arg2_r_reload);

assign select_ln68_4_fu_1234_p3 = ((icmp_ln68_5_fu_1115_p2[0:0] == 1'b1) ? shl_ln68_2_fu_1228_p2 : tmp_8_fu_1098_p6);

assign select_ln68_5_fu_1317_p3 = ((icmp_ln68_7_fu_1178_p2[0:0] == 1'b1) ? shl_ln68_3_fu_1311_p2 : select_ln68_2_fu_1167_p3);

assign select_ln68_6_fu_908_p3 = ((icmp_ln68_1_fu_761_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_7_fu_940_p3 = ((icmp_ln68_2_fu_801_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_8_fu_991_p3 = ((icmp_ln68_3_fu_839_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_9_fu_1060_p3 = ((icmp_ln68_4_fu_1048_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_fu_895_p3 = ((icmp_ln68_1_fu_761_p2[0:0] == 1'b1) ? shl_ln68_fu_889_p2 : tmp_3_fu_738_p10);

assign shl_ln68_1_fu_966_p2 = tmp_5_fu_819_p8 << 32'd1;

assign shl_ln68_2_fu_1228_p2 = tmp_8_fu_1098_p6 << 32'd1;

assign shl_ln68_3_fu_1311_p2 = select_ln68_2_fu_1167_p3 << 32'd1;

assign shl_ln68_fu_889_p2 = tmp_3_fu_738_p10 << 32'd1;

assign tmp_1_fu_701_p10 = ($signed(4'd8) - $signed(i1_fu_200));

assign tmp_3_fu_738_p9 = (trunc_ln55_1_fu_626_p1 ^ 3'd7);

assign tmp_4_fu_779_p8 = ($signed(3'd6) - $signed(trunc_ln55_1_fu_626_p1));

assign tmp_5_fu_819_p7 = ($signed(3'd5) - $signed(trunc_ln55_1_fu_626_p1));

assign tmp_7_fu_1029_p6 = ($signed(3'd4) - $signed(trunc_ln55_1_fu_626_p1));

assign tmp_8_fu_1098_p5 = (trunc_ln55_fu_622_p1 ^ 2'd3);

assign tmp_9_fu_1133_p4 = ($signed(2'd2) - $signed(trunc_ln55_fu_622_p1));

assign tmp_s_fu_669_p11 = ($signed(4'd9) - $signed(i1_fu_200));

assign trunc_ln55_1_fu_626_p1 = i1_fu_200[2:0];

assign trunc_ln55_fu_622_p1 = i1_fu_200[1:0];

assign zext_ln68_11_fu_1143_p1 = tmp_9_fu_1133_p5;

assign zext_ln68_13_fu_1196_p1 = select_ln68_3_fu_1190_p3;

assign zext_ln68_16_fu_618_p1 = i1_fu_200;

assign zext_ln68_2_fu_720_p1 = tmp_1_fu_701_p11;

assign zext_ln68_4_fu_795_p1 = tmp_4_fu_779_p9;

assign zext_ln68_6_fu_864_p1 = tmp_6_fu_845_p11;

assign zext_ln68_9_fu_1042_p1 = tmp_7_fu_1029_p7;

assign zext_ln68_fu_649_p1 = tmp_2_fu_630_p11;

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5
