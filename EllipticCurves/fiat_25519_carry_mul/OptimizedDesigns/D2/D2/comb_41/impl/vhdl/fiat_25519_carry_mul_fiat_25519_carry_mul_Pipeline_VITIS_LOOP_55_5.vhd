-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arr_8 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_7 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_6 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_5 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_4 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_3 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_2 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr : IN STD_LOGIC_VECTOR (63 downto 0);
    arg1_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln68_23 : IN STD_LOGIC_VECTOR (31 downto 0);
    add129_4_128417_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_4_128417_out_ap_vld : OUT STD_LOGIC;
    add129_4416_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_4416_out_ap_vld : OUT STD_LOGIC;
    add129_3_146415_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_3_146415_out_ap_vld : OUT STD_LOGIC;
    add129_3414_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_3414_out_ap_vld : OUT STD_LOGIC;
    add129_2_164413_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_2_164413_out_ap_vld : OUT STD_LOGIC;
    add129_2412_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_2412_out_ap_vld : OUT STD_LOGIC;
    add129_1_182411_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_1_182411_out_ap_vld : OUT STD_LOGIC;
    add129_1410_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_1410_out_ap_vld : OUT STD_LOGIC;
    add129_1204409_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129_1204409_out_ap_vld : OUT STD_LOGIC;
    add129408_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add129408_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln67_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln68_23_cast_fu_614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln68_23_cast_reg_2081 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln67_fu_682_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln67_reg_2090 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln55_fu_690_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln55_reg_2102 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln55_1_fu_694_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln55_1_reg_2107 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln68_fu_698_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln68_reg_2117 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln68_1_fu_704_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln68_1_reg_2122 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln68_2_fu_710_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln68_2_reg_2127 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln68_3_fu_716_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln68_3_reg_2132 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln67_1_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_1_reg_2137 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln68_4_fu_734_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln68_4_reg_2143 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln67_2_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_2_reg_2148 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_3_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_3_reg_2154 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln68_5_fu_764_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln68_5_reg_2160 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln67_4_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_4_reg_2165 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_5_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_5_reg_2171 : STD_LOGIC_VECTOR (0 downto 0);
    signal add129408_fu_160 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_4_fu_1157_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal add129_1204409_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_9_fu_1235_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_1410_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_14_fu_1337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_1_182411_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_19_fu_1425_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_2412_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_24_fu_1532_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_2_164413_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_29_fu_1622_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_3414_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_36_fu_1706_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_3_146415_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_32_fu_1658_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_4416_fu_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_39_fu_1742_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add129_4_128417_fu_196 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_37_fu_1718_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_200 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_3_fu_722_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i1_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln68_fu_454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_1_fu_458_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_3_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_1_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_2_fu_462_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_9_fu_1058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_2_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_10_fu_1069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_3_fu_466_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_12_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_3_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_13_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_4_fu_470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_6_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_4_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_7_fu_1009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_5_fu_474_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_5_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_6_fu_478_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_6_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_7_fu_482_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_11_fu_1099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_7_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_8_fu_486_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_14_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_8_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_9_fu_490_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_8_fu_1041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_9_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_10_fu_494_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_10_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_11_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_11_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_12_fu_502_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_12_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_13_fu_506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_17_fu_1287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_13_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_14_fu_510_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_15_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_14_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_15_fu_514_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_15_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_16_fu_518_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_16_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_17_fu_522_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_17_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_18_fu_526_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_18_fu_1369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_18_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_19_fu_530_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_16_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_19_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_20_fu_534_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_20_fu_534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_21_fu_538_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_19_fu_1431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_21_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_22_fu_542_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_22_fu_542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_23_fu_546_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_21_fu_1470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_23_fu_546_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_24_fu_550_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_24_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_25_fu_554_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_25_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_26_fu_558_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_26_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_27_fu_562_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_20_fu_1464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_27_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_28_fu_566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_22_fu_1554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_28_fu_566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_29_fu_570_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_29_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_30_fu_574_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_30_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_31_fu_578_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_31_fu_578_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_32_fu_582_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_32_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_33_fu_586_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_33_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_34_fu_590_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_34_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_35_fu_594_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_35_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_36_fu_598_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_36_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_37_fu_602_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_37_fu_602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_38_fu_606_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_38_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_39_fu_610_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_39_fu_610_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_1_fu_740_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln67_fu_686_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln67_2_fu_752_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln67_3_fu_770_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln67_4_fu_782_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_829_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_854_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_878_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln68_fu_895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_fu_901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_918_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_952_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_952_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln68_1_fu_968_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_1_fu_974_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_986_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1015_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln68_2_fu_1028_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_2_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1047_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1075_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln68_3_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_3_fu_1092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1105_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_fu_454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_1_fu_458_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_2_fu_462_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_3_fu_466_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_1_fu_1139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_4_fu_470_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_2_fu_1145_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_fu_1133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_3_fu_1151_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1167_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln67_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln68_4_fu_1177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_4_fu_1183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_8_fu_486_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln68_9_fu_1198_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_5_fu_474_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_6_fu_478_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_7_fu_482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_fu_1205_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_6_fu_1217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_9_fu_490_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_7_fu_1223_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_5_fu_1211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_8_fu_1229_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cmp95_185_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1257_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_1257_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln67_1_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln68_5_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_5_fu_1273_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_13_fu_506_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln68_10_fu_1294_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_14_fu_510_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_12_fu_502_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_10_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_2_fu_1307_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_1_fu_1301_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_11_fu_1319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_11_fu_498_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_12_fu_1325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_10_fu_1313_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_13_fu_1331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1347_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln67_2_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln68_6_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_6_fu_1361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_15_fu_514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_18_fu_526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln68_11_fu_1382_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_19_fu_530_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_16_fu_518_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_17_fu_522_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_5_fu_1395_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_4_fu_1389_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_16_fu_1407_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_3_fu_1376_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_17_fu_1413_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_15_fu_1401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_18_fu_1419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1442_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln67_3_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln68_7_fu_1450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_7_fu_1456_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_20_fu_534_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_21_fu_538_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_23_fu_546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln68_12_fu_1489_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_24_fu_550_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_22_fu_542_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_6_fu_1477_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_7_fu_1483_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_8_fu_1496_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_21_fu_1514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_9_fu_1502_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_22_fu_1520_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_20_fu_1508_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_23_fu_1526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln67_4_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln68_8_fu_1542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln68_8_fu_1547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_25_fu_554_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_26_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_27_fu_562_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_28_fu_566_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln68_13_fu_1579_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_29_fu_570_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_10_fu_1561_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_11_fu_1567_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_12_fu_1573_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_13_fu_1586_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_26_fu_1604_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_14_fu_1592_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_27_fu_1610_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_25_fu_1598_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_28_fu_1616_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_30_fu_574_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_31_fu_578_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_32_fu_582_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_17_fu_1640_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_15_fu_1628_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_30_fu_1646_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_16_fu_1634_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_31_fu_1652_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_33_fu_586_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_34_fu_590_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_35_fu_594_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_36_fu_598_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_21_fu_1682_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_19_fu_1670_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_20_fu_1676_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_18_fu_1664_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_34_fu_1694_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_33_fu_1688_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_35_fu_1700_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_37_fu_602_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_22_fu_1712_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_38_fu_606_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_39_fu_610_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_24_fu_1730_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln68_23_fu_1724_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_38_fu_1736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln68_1_fu_458_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_5_fu_474_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_6_fu_478_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_fu_454_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_6_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_7_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_5_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_3_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_2_1_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_fu_454_p0,
        din1 => mul_ln68_fu_454_p1,
        dout => mul_ln68_fu_454_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_1_fu_458_p0,
        din1 => mul_ln68_1_fu_458_p1,
        dout => mul_ln68_1_fu_458_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_2_fu_462_p0,
        din1 => mul_ln68_2_fu_462_p1,
        dout => mul_ln68_2_fu_462_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_3_fu_466_p0,
        din1 => mul_ln68_3_fu_466_p1,
        dout => mul_ln68_3_fu_466_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_4_fu_470_p0,
        din1 => mul_ln68_4_fu_470_p1,
        dout => mul_ln68_4_fu_470_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_5_fu_474_p0,
        din1 => mul_ln68_5_fu_474_p1,
        dout => mul_ln68_5_fu_474_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_6_fu_478_p0,
        din1 => mul_ln68_6_fu_478_p1,
        dout => mul_ln68_6_fu_478_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_7_fu_482_p0,
        din1 => mul_ln68_7_fu_482_p1,
        dout => mul_ln68_7_fu_482_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_8_fu_486_p0,
        din1 => mul_ln68_8_fu_486_p1,
        dout => mul_ln68_8_fu_486_p2);

    mul_32ns_32ns_64_1_1_U34 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_9_fu_490_p0,
        din1 => mul_ln68_9_fu_490_p1,
        dout => mul_ln68_9_fu_490_p2);

    mul_32ns_32ns_64_1_1_U35 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_10_fu_494_p0,
        din1 => mul_ln68_10_fu_494_p1,
        dout => mul_ln68_10_fu_494_p2);

    mul_32ns_32ns_64_1_1_U36 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_11_fu_498_p0,
        din1 => mul_ln68_11_fu_498_p1,
        dout => mul_ln68_11_fu_498_p2);

    mul_32ns_32ns_64_1_1_U37 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_12_fu_502_p0,
        din1 => mul_ln68_12_fu_502_p1,
        dout => mul_ln68_12_fu_502_p2);

    mul_32ns_32ns_64_1_1_U38 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_13_fu_506_p0,
        din1 => mul_ln68_13_fu_506_p1,
        dout => mul_ln68_13_fu_506_p2);

    mul_32ns_32ns_64_1_1_U39 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_14_fu_510_p0,
        din1 => mul_ln68_14_fu_510_p1,
        dout => mul_ln68_14_fu_510_p2);

    mul_32ns_32ns_64_1_1_U40 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_15_fu_514_p0,
        din1 => mul_ln68_15_fu_514_p1,
        dout => mul_ln68_15_fu_514_p2);

    mul_32ns_32ns_64_1_1_U41 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_16_fu_518_p0,
        din1 => mul_ln68_16_fu_518_p1,
        dout => mul_ln68_16_fu_518_p2);

    mul_32ns_32ns_64_1_1_U42 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_17_fu_522_p0,
        din1 => mul_ln68_17_fu_522_p1,
        dout => mul_ln68_17_fu_522_p2);

    mul_32ns_32ns_64_1_1_U43 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_18_fu_526_p0,
        din1 => mul_ln68_18_fu_526_p1,
        dout => mul_ln68_18_fu_526_p2);

    mul_32ns_32ns_64_1_1_U44 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_19_fu_530_p0,
        din1 => mul_ln68_19_fu_530_p1,
        dout => mul_ln68_19_fu_530_p2);

    mul_32ns_32ns_64_1_1_U45 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_20_fu_534_p0,
        din1 => mul_ln68_20_fu_534_p1,
        dout => mul_ln68_20_fu_534_p2);

    mul_32ns_32ns_64_1_1_U46 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_21_fu_538_p0,
        din1 => mul_ln68_21_fu_538_p1,
        dout => mul_ln68_21_fu_538_p2);

    mul_32ns_32ns_64_1_1_U47 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_22_fu_542_p0,
        din1 => mul_ln68_22_fu_542_p1,
        dout => mul_ln68_22_fu_542_p2);

    mul_32ns_32ns_64_1_1_U48 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_23_fu_546_p0,
        din1 => mul_ln68_23_fu_546_p1,
        dout => mul_ln68_23_fu_546_p2);

    mul_32ns_32ns_64_1_1_U49 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_24_fu_550_p0,
        din1 => mul_ln68_24_fu_550_p1,
        dout => mul_ln68_24_fu_550_p2);

    mul_32ns_32ns_64_1_1_U50 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_25_fu_554_p0,
        din1 => mul_ln68_25_fu_554_p1,
        dout => mul_ln68_25_fu_554_p2);

    mul_32ns_32ns_64_1_1_U51 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_26_fu_558_p0,
        din1 => mul_ln68_26_fu_558_p1,
        dout => mul_ln68_26_fu_558_p2);

    mul_32ns_32ns_64_1_1_U52 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_27_fu_562_p0,
        din1 => mul_ln68_27_fu_562_p1,
        dout => mul_ln68_27_fu_562_p2);

    mul_32ns_32ns_64_1_1_U53 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_28_fu_566_p0,
        din1 => mul_ln68_28_fu_566_p1,
        dout => mul_ln68_28_fu_566_p2);

    mul_32ns_32ns_64_1_1_U54 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_29_fu_570_p0,
        din1 => mul_ln68_29_fu_570_p1,
        dout => mul_ln68_29_fu_570_p2);

    mul_32ns_32ns_64_1_1_U55 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_30_fu_574_p0,
        din1 => mul_ln68_30_fu_574_p1,
        dout => mul_ln68_30_fu_574_p2);

    mul_32ns_32ns_64_1_1_U56 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_31_fu_578_p0,
        din1 => mul_ln68_31_fu_578_p1,
        dout => mul_ln68_31_fu_578_p2);

    mul_32ns_32ns_64_1_1_U57 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_32_fu_582_p0,
        din1 => mul_ln68_32_fu_582_p1,
        dout => mul_ln68_32_fu_582_p2);

    mul_32ns_32ns_64_1_1_U58 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_33_fu_586_p0,
        din1 => mul_ln68_33_fu_586_p1,
        dout => mul_ln68_33_fu_586_p2);

    mul_32ns_32ns_64_1_1_U59 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_34_fu_590_p0,
        din1 => mul_ln68_34_fu_590_p1,
        dout => mul_ln68_34_fu_590_p2);

    mul_32ns_32ns_64_1_1_U60 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_35_fu_594_p0,
        din1 => mul_ln68_35_fu_594_p1,
        dout => mul_ln68_35_fu_594_p2);

    mul_32ns_32ns_64_1_1_U61 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_36_fu_598_p0,
        din1 => mul_ln68_36_fu_598_p1,
        dout => mul_ln68_36_fu_598_p2);

    mul_32ns_32ns_64_1_1_U62 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_37_fu_602_p0,
        din1 => mul_ln68_37_fu_602_p1,
        dout => mul_ln68_37_fu_602_p2);

    mul_32ns_32ns_64_1_1_U63 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_38_fu_606_p0,
        din1 => mul_ln68_38_fu_606_p1,
        dout => mul_ln68_38_fu_606_p2);

    mul_32ns_32ns_64_1_1_U64 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln68_39_fu_610_p0,
        din1 => mul_ln68_39_fu_610_p1,
        dout => mul_ln68_39_fu_610_p2);

    mux_6_3_32_1_1_U65 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_reload,
        din1 => arg1_r_1_reload,
        din2 => arg1_r_2_reload,
        din3 => arg1_r_3_reload,
        din4 => arg1_r_4_reload,
        din5 => arg1_r_5_reload,
        din6 => trunc_ln55_1_reg_2107,
        dout => tmp_fu_829_p8);

    mux_10_4_32_1_1_U66 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => sub_ln68_reg_2117,
        dout => tmp_1_fu_854_p12);

    mux_9_4_32_1_1_U67 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => sub_ln68_1_reg_2122,
        dout => tmp_2_fu_878_p11);

    mux_6_3_32_1_1_U68 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_1_reload,
        din1 => arg1_r_2_reload,
        din2 => arg1_r_3_reload,
        din3 => arg1_r_4_reload,
        din4 => arg1_r_5_reload,
        din5 => arg1_r_6_reload,
        din6 => trunc_ln55_1_reg_2107,
        dout => tmp_3_fu_918_p8);

    mux_8_3_32_1_1_U69 : component fiat_25519_carry_mul_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => tmp_4_fu_952_p9,
        dout => tmp_4_fu_952_p10);

    mux_6_3_32_1_1_U70 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_2_reload,
        din1 => arg1_r_3_reload,
        din2 => arg1_r_4_reload,
        din3 => arg1_r_5_reload,
        din4 => arg1_r_6_reload,
        din5 => arg1_r_7_reload,
        din6 => trunc_ln55_1_reg_2107,
        dout => tmp_5_fu_986_p8);

    mux_7_3_32_1_1_U71 : component fiat_25519_carry_mul_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => sub_ln68_2_reg_2127,
        dout => tmp_6_fu_1015_p9);

    mux_6_3_32_1_1_U72 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_3_reload,
        din1 => arg1_r_4_reload,
        din2 => arg1_r_5_reload,
        din3 => arg1_r_6_reload,
        din4 => arg1_r_7_reload,
        din5 => arg1_r_8_reload,
        din6 => trunc_ln55_1_reg_2107,
        dout => tmp_7_fu_1047_p8);

    mux_6_3_32_1_1_U73 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => sub_ln68_3_reg_2132,
        dout => tmp_8_fu_1075_p8);

    mux_6_3_32_1_1_U74 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_4_reload,
        din1 => arg1_r_5_reload,
        din2 => arg1_r_6_reload,
        din3 => arg1_r_7_reload,
        din4 => arg1_r_8_reload,
        din5 => arg1_r_9_reload,
        din6 => trunc_ln55_1_reg_2107,
        dout => tmp_9_fu_1105_p8);

    mux_5_3_32_1_1_U75 : component fiat_25519_carry_mul_mux_5_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => sub_ln68_4_reg_2143,
        dout => tmp_s_fu_1167_p7);

    mux_4_2_32_1_1_U76 : component fiat_25519_carry_mul_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => tmp_10_fu_1257_p5,
        dout => tmp_10_fu_1257_p6);

    mux_3_2_32_1_1_U77 : component fiat_25519_carry_mul_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => sub_ln68_5_reg_2160,
        dout => tmp_11_fu_1347_p5);

    mux_2_1_32_1_1_U78 : component fiat_25519_carry_mul_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => cmp95_185_fu_913_p2,
        dout => tmp_12_fu_1442_p4);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    add129408_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129408_fu_160 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129408_fu_160 <= add_ln68_4_fu_1157_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_1204409_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_1204409_fu_164 <= arr;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_1204409_fu_164 <= add_ln68_9_fu_1235_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_1410_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_1410_fu_168 <= arr_1;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_1410_fu_168 <= add_ln68_14_fu_1337_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_1_182411_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_1_182411_fu_172 <= arr_2;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_1_182411_fu_172 <= add_ln68_19_fu_1425_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_2412_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_2412_fu_176 <= arr_3;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_2412_fu_176 <= add_ln68_24_fu_1532_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_2_164413_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_2_164413_fu_180 <= arr_4;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_2_164413_fu_180 <= add_ln68_29_fu_1622_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_3414_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_3414_fu_184 <= arr_5;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_3414_fu_184 <= add_ln68_36_fu_1706_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_3_146415_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_3_146415_fu_188 <= arr_6;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_3_146415_fu_188 <= add_ln68_32_fu_1658_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_4416_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_4416_fu_192 <= arr_7;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_4416_fu_192 <= add_ln68_39_fu_1742_p2;
                end if;
            end if; 
        end if;
    end process;

    add129_4_128417_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add129_4_128417_fu_196 <= arr_8;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add129_4_128417_fu_196 <= add_ln68_37_fu_1718_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln67_fu_676_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_200 <= i1_3_fu_722_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_200 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln67_fu_676_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln67_1_reg_2137 <= icmp_ln67_1_fu_728_p2;
                icmp_ln67_2_reg_2148 <= icmp_ln67_2_fu_746_p2;
                icmp_ln67_3_reg_2154 <= icmp_ln67_3_fu_758_p2;
                icmp_ln67_4_reg_2165 <= icmp_ln67_4_fu_776_p2;
                icmp_ln67_5_reg_2171 <= icmp_ln67_5_fu_788_p2;
                sub_ln68_1_reg_2122 <= sub_ln68_1_fu_704_p2;
                sub_ln68_2_reg_2127 <= sub_ln68_2_fu_710_p2;
                sub_ln68_3_reg_2132 <= sub_ln68_3_fu_716_p2;
                sub_ln68_4_reg_2143 <= sub_ln68_4_fu_734_p2;
                sub_ln68_5_reg_2160 <= sub_ln68_5_fu_764_p2;
                sub_ln68_reg_2117 <= sub_ln68_fu_698_p2;
                trunc_ln55_1_reg_2107 <= trunc_ln55_1_fu_694_p1;
                trunc_ln55_reg_2102 <= trunc_ln55_fu_690_p1;
                trunc_ln67_reg_2090 <= trunc_ln67_fu_682_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln68_23_cast_reg_2081(31 downto 0) <= zext_ln68_23_cast_fu_614_p1(31 downto 0);
            end if;
        end if;
    end process;
    zext_ln68_23_cast_reg_2081(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add129408_out <= add129408_fu_160;

    add129408_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129408_out_ap_vld <= ap_const_logic_1;
        else 
            add129408_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_1204409_out <= add129_1204409_fu_164;

    add129_1204409_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_1204409_out_ap_vld <= ap_const_logic_1;
        else 
            add129_1204409_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_1410_out <= add129_1410_fu_168;

    add129_1410_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_1410_out_ap_vld <= ap_const_logic_1;
        else 
            add129_1410_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_1_182411_out <= add129_1_182411_fu_172;

    add129_1_182411_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_1_182411_out_ap_vld <= ap_const_logic_1;
        else 
            add129_1_182411_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_2412_out <= add129_2412_fu_176;

    add129_2412_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_2412_out_ap_vld <= ap_const_logic_1;
        else 
            add129_2412_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_2_164413_out <= add129_2_164413_fu_180;

    add129_2_164413_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_2_164413_out_ap_vld <= ap_const_logic_1;
        else 
            add129_2_164413_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_3414_out <= add129_3414_fu_184;

    add129_3414_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_3414_out_ap_vld <= ap_const_logic_1;
        else 
            add129_3414_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_3_146415_out <= add129_3_146415_fu_188;

    add129_3_146415_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_3_146415_out_ap_vld <= ap_const_logic_1;
        else 
            add129_3_146415_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_4416_out <= add129_4416_fu_192;

    add129_4416_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_4416_out_ap_vld <= ap_const_logic_1;
        else 
            add129_4416_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add129_4_128417_out <= add129_4_128417_fu_196;

    add129_4_128417_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln67_fu_676_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add129_4_128417_out_ap_vld <= ap_const_logic_1;
        else 
            add129_4_128417_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln67_1_fu_740_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_2) + unsigned(ap_const_lv4_6));
    add_ln67_2_fu_752_p2 <= std_logic_vector(unsigned(zext_ln67_fu_686_p1) + unsigned(ap_const_lv5_7));
    add_ln67_3_fu_770_p2 <= std_logic_vector(unsigned(zext_ln67_fu_686_p1) + unsigned(ap_const_lv5_8));
    add_ln67_4_fu_782_p2 <= std_logic_vector(unsigned(zext_ln67_fu_686_p1) + unsigned(ap_const_lv5_9));
    add_ln68_10_fu_1313_p2 <= std_logic_vector(unsigned(mul_ln68_12_fu_502_p2) + unsigned(mul_ln68_10_fu_494_p2));
    add_ln68_11_fu_1319_p2 <= std_logic_vector(unsigned(and_ln68_2_fu_1307_p2) + unsigned(and_ln68_1_fu_1301_p2));
    add_ln68_12_fu_1325_p2 <= std_logic_vector(unsigned(add_ln68_11_fu_1319_p2) + unsigned(mul_ln68_11_fu_498_p2));
    add_ln68_13_fu_1331_p2 <= std_logic_vector(unsigned(add_ln68_12_fu_1325_p2) + unsigned(add_ln68_10_fu_1313_p2));
    add_ln68_14_fu_1337_p2 <= std_logic_vector(unsigned(add129_1410_fu_168) + unsigned(add_ln68_13_fu_1331_p2));
    add_ln68_15_fu_1401_p2 <= std_logic_vector(unsigned(mul_ln68_16_fu_518_p2) + unsigned(mul_ln68_17_fu_522_p2));
    add_ln68_16_fu_1407_p2 <= std_logic_vector(unsigned(and_ln68_5_fu_1395_p2) + unsigned(and_ln68_4_fu_1389_p2));
    add_ln68_17_fu_1413_p2 <= std_logic_vector(unsigned(add_ln68_16_fu_1407_p2) + unsigned(and_ln68_3_fu_1376_p2));
    add_ln68_18_fu_1419_p2 <= std_logic_vector(unsigned(add_ln68_17_fu_1413_p2) + unsigned(add_ln68_15_fu_1401_p2));
    add_ln68_19_fu_1425_p2 <= std_logic_vector(unsigned(add129_1_182411_fu_172) + unsigned(add_ln68_18_fu_1419_p2));
    add_ln68_1_fu_1139_p2 <= std_logic_vector(unsigned(mul_ln68_2_fu_462_p2) + unsigned(mul_ln68_3_fu_466_p2));
    add_ln68_20_fu_1508_p2 <= std_logic_vector(unsigned(mul_ln68_22_fu_542_p2) + unsigned(and_ln68_6_fu_1477_p2));
    add_ln68_21_fu_1514_p2 <= std_logic_vector(unsigned(and_ln68_7_fu_1483_p2) + unsigned(and_ln68_8_fu_1496_p2));
    add_ln68_22_fu_1520_p2 <= std_logic_vector(unsigned(add_ln68_21_fu_1514_p2) + unsigned(and_ln68_9_fu_1502_p2));
    add_ln68_23_fu_1526_p2 <= std_logic_vector(unsigned(add_ln68_22_fu_1520_p2) + unsigned(add_ln68_20_fu_1508_p2));
    add_ln68_24_fu_1532_p2 <= std_logic_vector(unsigned(add129_2412_fu_176) + unsigned(add_ln68_23_fu_1526_p2));
    add_ln68_25_fu_1598_p2 <= std_logic_vector(unsigned(and_ln68_10_fu_1561_p2) + unsigned(and_ln68_11_fu_1567_p2));
    add_ln68_26_fu_1604_p2 <= std_logic_vector(unsigned(and_ln68_12_fu_1573_p2) + unsigned(and_ln68_13_fu_1586_p2));
    add_ln68_27_fu_1610_p2 <= std_logic_vector(unsigned(add_ln68_26_fu_1604_p2) + unsigned(and_ln68_14_fu_1592_p2));
    add_ln68_28_fu_1616_p2 <= std_logic_vector(unsigned(add_ln68_27_fu_1610_p2) + unsigned(add_ln68_25_fu_1598_p2));
    add_ln68_29_fu_1622_p2 <= std_logic_vector(unsigned(add129_2_164413_fu_180) + unsigned(add_ln68_28_fu_1616_p2));
    add_ln68_2_fu_1145_p2 <= std_logic_vector(unsigned(add_ln68_1_fu_1139_p2) + unsigned(mul_ln68_4_fu_470_p2));
    add_ln68_30_fu_1646_p2 <= std_logic_vector(unsigned(and_ln68_17_fu_1640_p2) + unsigned(and_ln68_15_fu_1628_p2));
    add_ln68_31_fu_1652_p2 <= std_logic_vector(unsigned(add_ln68_30_fu_1646_p2) + unsigned(and_ln68_16_fu_1634_p2));
    add_ln68_32_fu_1658_p2 <= std_logic_vector(unsigned(add129_3_146415_fu_188) + unsigned(add_ln68_31_fu_1652_p2));
    add_ln68_33_fu_1688_p2 <= std_logic_vector(unsigned(and_ln68_21_fu_1682_p2) + unsigned(and_ln68_19_fu_1670_p2));
    add_ln68_34_fu_1694_p2 <= std_logic_vector(unsigned(and_ln68_20_fu_1676_p2) + unsigned(and_ln68_18_fu_1664_p2));
    add_ln68_35_fu_1700_p2 <= std_logic_vector(unsigned(add_ln68_34_fu_1694_p2) + unsigned(add_ln68_33_fu_1688_p2));
    add_ln68_36_fu_1706_p2 <= std_logic_vector(unsigned(add129_3414_fu_184) + unsigned(add_ln68_35_fu_1700_p2));
    add_ln68_37_fu_1718_p2 <= std_logic_vector(unsigned(and_ln68_22_fu_1712_p2) + unsigned(add129_4_128417_fu_196));
    add_ln68_38_fu_1736_p2 <= std_logic_vector(unsigned(and_ln68_24_fu_1730_p2) + unsigned(and_ln68_23_fu_1724_p2));
    add_ln68_39_fu_1742_p2 <= std_logic_vector(unsigned(add129_4416_fu_192) + unsigned(add_ln68_38_fu_1736_p2));
    add_ln68_3_fu_1151_p2 <= std_logic_vector(unsigned(add_ln68_2_fu_1145_p2) + unsigned(add_ln68_fu_1133_p2));
    add_ln68_4_fu_1157_p2 <= std_logic_vector(unsigned(add129408_fu_160) + unsigned(add_ln68_3_fu_1151_p2));
    add_ln68_5_fu_1211_p2 <= std_logic_vector(unsigned(mul_ln68_5_fu_474_p2) + unsigned(mul_ln68_6_fu_478_p2));
    add_ln68_6_fu_1217_p2 <= std_logic_vector(unsigned(mul_ln68_7_fu_482_p2) + unsigned(and_ln68_fu_1205_p2));
    add_ln68_7_fu_1223_p2 <= std_logic_vector(unsigned(add_ln68_6_fu_1217_p2) + unsigned(mul_ln68_9_fu_490_p2));
    add_ln68_8_fu_1229_p2 <= std_logic_vector(unsigned(add_ln68_7_fu_1223_p2) + unsigned(add_ln68_5_fu_1211_p2));
    add_ln68_9_fu_1235_p2 <= std_logic_vector(unsigned(add129_1204409_fu_164) + unsigned(add_ln68_8_fu_1229_p2));
    add_ln68_fu_1133_p2 <= std_logic_vector(unsigned(mul_ln68_fu_454_p2) + unsigned(mul_ln68_1_fu_458_p2));
    and_ln67_1_fu_1247_p2 <= (icmp_ln67_2_reg_2148 and cmp95_185_fu_913_p2);
    and_ln67_2_fu_1343_p2 <= (trunc_ln67_reg_2090 and icmp_ln67_3_reg_2154);
    and_ln67_3_fu_1437_p2 <= (icmp_ln67_4_reg_2165 and cmp95_185_fu_913_p2);
    and_ln67_4_fu_1538_p2 <= (trunc_ln67_reg_2090 and icmp_ln67_5_reg_2171);
    and_ln67_fu_1163_p2 <= (trunc_ln67_reg_2090 and icmp_ln67_1_reg_2137);
    and_ln68_10_fu_1561_p2 <= (select_ln68_9_fu_1198_p3 and mul_ln68_25_fu_554_p2);
    and_ln68_11_fu_1567_p2 <= (select_ln68_10_fu_1294_p3 and mul_ln68_26_fu_558_p2);
    and_ln68_12_fu_1573_p2 <= (select_ln68_12_fu_1489_p3 and mul_ln68_27_fu_562_p2);
    and_ln68_13_fu_1586_p2 <= (select_ln68_13_fu_1579_p3 and mul_ln68_28_fu_566_p2);
    and_ln68_14_fu_1592_p2 <= (select_ln68_11_fu_1382_p3 and mul_ln68_29_fu_570_p2);
    and_ln68_15_fu_1628_p2 <= (select_ln68_13_fu_1579_p3 and mul_ln68_30_fu_574_p2);
    and_ln68_16_fu_1634_p2 <= (select_ln68_11_fu_1382_p3 and mul_ln68_31_fu_578_p2);
    and_ln68_17_fu_1640_p2 <= (select_ln68_12_fu_1489_p3 and mul_ln68_32_fu_582_p2);
    and_ln68_18_fu_1664_p2 <= (select_ln68_13_fu_1579_p3 and mul_ln68_33_fu_586_p2);
    and_ln68_19_fu_1670_p2 <= (select_ln68_11_fu_1382_p3 and mul_ln68_34_fu_590_p2);
    and_ln68_1_fu_1301_p2 <= (select_ln68_10_fu_1294_p3 and mul_ln68_13_fu_506_p2);
    and_ln68_20_fu_1676_p2 <= (select_ln68_12_fu_1489_p3 and mul_ln68_35_fu_594_p2);
    and_ln68_21_fu_1682_p2 <= (select_ln68_10_fu_1294_p3 and mul_ln68_36_fu_598_p2);
    and_ln68_22_fu_1712_p2 <= (select_ln68_13_fu_1579_p3 and mul_ln68_37_fu_602_p2);
    and_ln68_23_fu_1724_p2 <= (select_ln68_12_fu_1489_p3 and mul_ln68_38_fu_606_p2);
    and_ln68_24_fu_1730_p2 <= (select_ln68_13_fu_1579_p3 and mul_ln68_39_fu_610_p2);
    and_ln68_2_fu_1307_p2 <= (select_ln68_9_fu_1198_p3 and mul_ln68_14_fu_510_p2);
    and_ln68_3_fu_1376_p2 <= (select_ln68_9_fu_1198_p3 and mul_ln68_15_fu_514_p2);
    and_ln68_4_fu_1389_p2 <= (select_ln68_11_fu_1382_p3 and mul_ln68_18_fu_526_p2);
    and_ln68_5_fu_1395_p2 <= (select_ln68_10_fu_1294_p3 and mul_ln68_19_fu_530_p2);
    and_ln68_6_fu_1477_p2 <= (select_ln68_9_fu_1198_p3 and mul_ln68_20_fu_534_p2);
    and_ln68_7_fu_1483_p2 <= (select_ln68_11_fu_1382_p3 and mul_ln68_21_fu_538_p2);
    and_ln68_8_fu_1496_p2 <= (select_ln68_12_fu_1489_p3 and mul_ln68_23_fu_546_p2);
    and_ln68_9_fu_1502_p2 <= (select_ln68_10_fu_1294_p3 and mul_ln68_24_fu_550_p2);
    and_ln68_fu_1205_p2 <= (select_ln68_9_fu_1198_p3 and mul_ln68_8_fu_486_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln67_fu_676_p2)
    begin
        if (((icmp_ln67_fu_676_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_200)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i1_2 <= i1_fu_200;
        end if; 
    end process;

    cmp95_185_fu_913_p2 <= (trunc_ln67_reg_2090 xor ap_const_lv1_1);
    i1_3_fu_722_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_2) + unsigned(ap_const_lv4_5));
    icmp_ln67_1_fu_728_p2 <= "1" when (unsigned(i1_3_fu_722_p2) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln67_2_fu_746_p2 <= "1" when (unsigned(add_ln67_1_fu_740_p2) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln67_3_fu_758_p2 <= "1" when (unsigned(add_ln67_2_fu_752_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln67_4_fu_776_p2 <= "1" when (unsigned(add_ln67_3_fu_770_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln67_5_fu_788_p2 <= "1" when (unsigned(add_ln67_4_fu_782_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln67_fu_676_p2 <= "1" when (unsigned(ap_sig_allocacmp_i1_2) < unsigned(ap_const_lv4_A)) else "0";
    mul_ln68_10_fu_494_p0 <= zext_ln68_10_fu_1069_p1(32 - 1 downto 0);
    mul_ln68_10_fu_494_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_11_fu_498_p0 <= zext_ln68_13_fu_1126_p1(32 - 1 downto 0);
    mul_ln68_11_fu_498_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_12_fu_502_p0 <= zext_ln68_7_fu_1009_p1(32 - 1 downto 0);
    mul_ln68_12_fu_502_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_13_fu_506_p0 <= zext_ln68_17_fu_1287_p1(32 - 1 downto 0);
    mul_ln68_13_fu_506_p1 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_14_fu_510_p0 <= zext_ln68_15_fu_1241_p1(32 - 1 downto 0);
    mul_ln68_14_fu_510_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_15_fu_514_p0 <= zext_ln68_14_fu_1191_p1(32 - 1 downto 0);
    mul_ln68_15_fu_514_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_16_fu_518_p0 <= zext_ln68_8_fu_1041_p1(32 - 1 downto 0);
    mul_ln68_16_fu_518_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_17_fu_522_p0 <= zext_ln68_11_fu_1099_p1(32 - 1 downto 0);
    mul_ln68_17_fu_522_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_18_fu_526_p0 <= zext_ln68_18_fu_1369_p1(32 - 1 downto 0);
    mul_ln68_18_fu_526_p1 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_19_fu_530_p0 <= zext_ln68_16_fu_1281_p1(32 - 1 downto 0);
    mul_ln68_19_fu_530_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_1_fu_458_p0 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_1_fu_458_p1 <= mul_ln68_1_fu_458_p10(32 - 1 downto 0);
    mul_ln68_1_fu_458_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_878_p11),64));
    mul_ln68_20_fu_534_p0 <= zext_ln68_15_fu_1241_p1(32 - 1 downto 0);
    mul_ln68_20_fu_534_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_21_fu_538_p0 <= zext_ln68_19_fu_1431_p1(32 - 1 downto 0);
    mul_ln68_21_fu_538_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_22_fu_542_p0 <= zext_ln68_13_fu_1126_p1(32 - 1 downto 0);
    mul_ln68_22_fu_542_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_23_fu_546_p0 <= zext_ln68_21_fu_1470_p1(32 - 1 downto 0);
    mul_ln68_23_fu_546_p1 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_24_fu_550_p0 <= zext_ln68_17_fu_1287_p1(32 - 1 downto 0);
    mul_ln68_24_fu_550_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_25_fu_554_p0 <= zext_ln68_14_fu_1191_p1(32 - 1 downto 0);
    mul_ln68_25_fu_554_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_26_fu_558_p0 <= zext_ln68_16_fu_1281_p1(32 - 1 downto 0);
    mul_ln68_26_fu_558_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_27_fu_562_p0 <= zext_ln68_20_fu_1464_p1(32 - 1 downto 0);
    mul_ln68_27_fu_562_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_28_fu_566_p0 <= zext_ln68_22_fu_1554_p1(32 - 1 downto 0);
    mul_ln68_28_fu_566_p1 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_29_fu_570_p0 <= zext_ln68_18_fu_1369_p1(32 - 1 downto 0);
    mul_ln68_29_fu_570_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_2_fu_462_p0 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_2_fu_462_p1 <= zext_ln68_10_fu_1069_p1(32 - 1 downto 0);
    mul_ln68_30_fu_574_p0 <= zext_ln68_22_fu_1554_p1(32 - 1 downto 0);
    mul_ln68_30_fu_574_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_31_fu_578_p0 <= zext_ln68_18_fu_1369_p1(32 - 1 downto 0);
    mul_ln68_31_fu_578_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_32_fu_582_p0 <= zext_ln68_20_fu_1464_p1(32 - 1 downto 0);
    mul_ln68_32_fu_582_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_33_fu_586_p0 <= zext_ln68_23_cast_reg_2081(32 - 1 downto 0);
    mul_ln68_33_fu_586_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_34_fu_590_p0 <= zext_ln68_19_fu_1431_p1(32 - 1 downto 0);
    mul_ln68_34_fu_590_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_35_fu_594_p0 <= zext_ln68_21_fu_1470_p1(32 - 1 downto 0);
    mul_ln68_35_fu_594_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_36_fu_598_p0 <= zext_ln68_17_fu_1287_p1(32 - 1 downto 0);
    mul_ln68_36_fu_598_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_37_fu_602_p0 <= zext_ln68_22_fu_1554_p1(32 - 1 downto 0);
    mul_ln68_37_fu_602_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_38_fu_606_p0 <= zext_ln68_21_fu_1470_p1(32 - 1 downto 0);
    mul_ln68_38_fu_606_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_39_fu_610_p0 <= zext_ln68_23_cast_reg_2081(32 - 1 downto 0);
    mul_ln68_39_fu_610_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_3_fu_466_p0 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_3_fu_466_p1 <= zext_ln68_13_fu_1126_p1(32 - 1 downto 0);
    mul_ln68_4_fu_470_p0 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_4_fu_470_p1 <= zext_ln68_7_fu_1009_p1(32 - 1 downto 0);
    mul_ln68_5_fu_474_p0 <= mul_ln68_5_fu_474_p00(32 - 1 downto 0);
    mul_ln68_5_fu_474_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_fu_901_p3),64));
    mul_ln68_5_fu_474_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    mul_ln68_6_fu_478_p0 <= mul_ln68_6_fu_478_p00(32 - 1 downto 0);
    mul_ln68_6_fu_478_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_1_fu_974_p3),64));
    mul_ln68_6_fu_478_p1 <= zext_ln68_3_fu_929_p1(32 - 1 downto 0);
    mul_ln68_7_fu_482_p0 <= zext_ln68_11_fu_1099_p1(32 - 1 downto 0);
    mul_ln68_7_fu_482_p1 <= zext_ln68_9_fu_1058_p1(32 - 1 downto 0);
    mul_ln68_8_fu_486_p0 <= zext_ln68_14_fu_1191_p1(32 - 1 downto 0);
    mul_ln68_8_fu_486_p1 <= zext_ln68_12_fu_1116_p1(32 - 1 downto 0);
    mul_ln68_9_fu_490_p0 <= zext_ln68_8_fu_1041_p1(32 - 1 downto 0);
    mul_ln68_9_fu_490_p1 <= zext_ln68_6_fu_997_p1(32 - 1 downto 0);
    mul_ln68_fu_454_p0 <= mul_ln68_fu_454_p00(32 - 1 downto 0);
    mul_ln68_fu_454_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_854_p12),64));
    mul_ln68_fu_454_p1 <= zext_ln68_fu_840_p1(32 - 1 downto 0);
    select_ln68_10_fu_1294_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln67_2_reg_2148(0) = '1') else 
        ap_const_lv64_0;
    select_ln68_11_fu_1382_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln67_3_reg_2154(0) = '1') else 
        ap_const_lv64_0;
    select_ln68_12_fu_1489_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln67_4_reg_2165(0) = '1') else 
        ap_const_lv64_0;
    select_ln68_13_fu_1579_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln67_5_reg_2171(0) = '1') else 
        ap_const_lv64_0;
    select_ln68_1_fu_974_p3 <= 
        tmp_4_fu_952_p10 when (trunc_ln67_reg_2090(0) = '1') else 
        shl_ln68_1_fu_968_p2;
    select_ln68_2_fu_1034_p3 <= 
        shl_ln68_2_fu_1028_p2 when (trunc_ln67_reg_2090(0) = '1') else 
        tmp_6_fu_1015_p9;
    select_ln68_3_fu_1092_p3 <= 
        tmp_8_fu_1075_p8 when (trunc_ln67_reg_2090(0) = '1') else 
        shl_ln68_3_fu_1086_p2;
    select_ln68_4_fu_1183_p3 <= 
        shl_ln68_4_fu_1177_p2 when (and_ln67_fu_1163_p2(0) = '1') else 
        tmp_s_fu_1167_p7;
    select_ln68_5_fu_1273_p3 <= 
        shl_ln68_5_fu_1267_p2 when (and_ln67_1_fu_1247_p2(0) = '1') else 
        tmp_10_fu_1257_p6;
    select_ln68_6_fu_1361_p3 <= 
        shl_ln68_6_fu_1355_p2 when (and_ln67_2_fu_1343_p2(0) = '1') else 
        tmp_11_fu_1347_p5;
    select_ln68_7_fu_1456_p3 <= 
        shl_ln68_7_fu_1450_p2 when (and_ln67_3_fu_1437_p2(0) = '1') else 
        tmp_12_fu_1442_p4;
    select_ln68_8_fu_1547_p3 <= 
        shl_ln68_8_fu_1542_p2 when (and_ln67_4_fu_1538_p2(0) = '1') else 
        arg2_r_reload;
    select_ln68_9_fu_1198_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln67_1_reg_2137(0) = '1') else 
        ap_const_lv64_0;
    select_ln68_fu_901_p3 <= 
        shl_ln68_fu_895_p2 when (trunc_ln67_reg_2090(0) = '1') else 
        tmp_2_fu_878_p11;
    shl_ln68_1_fu_968_p2 <= std_logic_vector(shift_left(unsigned(tmp_4_fu_952_p10),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_2_fu_1028_p2 <= std_logic_vector(shift_left(unsigned(tmp_6_fu_1015_p9),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_3_fu_1086_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_fu_1075_p8),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_4_fu_1177_p2 <= std_logic_vector(shift_left(unsigned(tmp_s_fu_1167_p7),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_5_fu_1267_p2 <= std_logic_vector(shift_left(unsigned(tmp_10_fu_1257_p6),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_6_fu_1355_p2 <= std_logic_vector(shift_left(unsigned(tmp_11_fu_1347_p5),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_7_fu_1450_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_fu_1442_p4),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_8_fu_1542_p2 <= std_logic_vector(shift_left(unsigned(arg2_r_reload),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln68_fu_895_p2 <= std_logic_vector(shift_left(unsigned(tmp_2_fu_878_p11),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    sub_ln68_1_fu_704_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(ap_sig_allocacmp_i1_2));
    sub_ln68_2_fu_710_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln55_1_fu_694_p1));
    sub_ln68_3_fu_716_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln55_1_fu_694_p1));
    sub_ln68_4_fu_734_p2 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln55_1_fu_694_p1));
    sub_ln68_5_fu_764_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln55_fu_690_p1));
    sub_ln68_fu_698_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(ap_sig_allocacmp_i1_2));
    tmp_10_fu_1257_p5 <= (trunc_ln55_reg_2102 xor ap_const_lv2_3);
    tmp_4_fu_952_p9 <= (trunc_ln55_1_reg_2107 xor ap_const_lv3_7);
    trunc_ln55_1_fu_694_p1 <= ap_sig_allocacmp_i1_2(3 - 1 downto 0);
    trunc_ln55_fu_690_p1 <= ap_sig_allocacmp_i1_2(2 - 1 downto 0);
    trunc_ln67_fu_682_p1 <= ap_sig_allocacmp_i1_2(1 - 1 downto 0);
    zext_ln67_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i1_2),5));
    zext_ln68_10_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1015_p9),64));
    zext_ln68_11_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_3_fu_1092_p3),64));
    zext_ln68_12_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1105_p8),64));
    zext_ln68_13_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1075_p8),64));
    zext_ln68_14_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_4_fu_1183_p3),64));
    zext_ln68_15_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1167_p7),64));
    zext_ln68_16_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_5_fu_1273_p3),64));
    zext_ln68_17_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1257_p6),64));
    zext_ln68_18_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_6_fu_1361_p3),64));
    zext_ln68_19_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1347_p5),64));
    zext_ln68_20_fu_1464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_7_fu_1456_p3),64));
    zext_ln68_21_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1442_p4),64));
    zext_ln68_22_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_8_fu_1547_p3),64));
    zext_ln68_23_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln68_23),64));
    zext_ln68_3_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_918_p8),64));
    zext_ln68_6_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_986_p8),64));
    zext_ln68_7_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_952_p10),64));
    zext_ln68_8_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln68_2_fu_1034_p3),64));
    zext_ln68_9_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1047_p8),64));
    zext_ln68_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_829_p8),64));
end behav;
