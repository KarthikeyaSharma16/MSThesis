

================================================================
== Vitis HLS Report for 'fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 14:21:19 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_38 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.374 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.110 us|  0.110 us|   11|   11|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |        9|        9|         2|          1|          1|     9|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.37>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add59_1205208 = alloca i32 1"   --->   Operation 5 'alloca' 'add59_1205208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add59_2209 = alloca i32 1"   --->   Operation 6 'alloca' 'add59_2209' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add59_3210 = alloca i32 1"   --->   Operation 7 'alloca' 'add59_3210' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add59_4211 = alloca i32 1"   --->   Operation 8 'alloca' 'add59_4211' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add59_1212 = alloca i32 1"   --->   Operation 9 'alloca' 'add59_1212' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add59_1_1213 = alloca i32 1"   --->   Operation 10 'alloca' 'add59_1_1213' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add59_1_2214 = alloca i32 1"   --->   Operation 11 'alloca' 'add59_1_2214' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add59_1_3215 = alloca i32 1"   --->   Operation 12 'alloca' 'add59_1_3215' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add59_1_4216 = alloca i32 1"   --->   Operation 13 'alloca' 'add59_1_4216' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 14 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 15 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 16 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 17 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 18 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 19 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 20 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 21 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 22 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 23 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 24 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 25 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 26 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 27 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 28 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 29 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 30 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 31 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 32 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 33 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 1, i4 %i1"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1_4216"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1_3215"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1_2214"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1_1213"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1212"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_4211"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_3210"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_2209"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add59_1205208"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31"   --->   Operation 44 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%i1_1 = load i4 %i1"   --->   Operation 45 'load' 'i1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.79ns)   --->   "%icmp_ln36 = icmp_eq  i4 %i1_1, i4 10" [d2.cpp:36]   --->   Operation 46 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.body31.split, void %for.body91.exitStub" [d2.cpp:36]   --->   Operation 47 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i4 %i1_1" [d2.cpp:36]   --->   Operation 48 'zext' 'zext_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%empty = trunc i4 %i1_1"   --->   Operation 49 'trunc' 'empty' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.79ns)   --->   "%add_ln48 = add i4 %i1_1, i4 1" [d2.cpp:48]   --->   Operation 50 'add' 'add_ln48' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.79ns)   --->   "%icmp_ln48 = icmp_ugt  i4 %add_ln48, i4 9" [d2.cpp:48]   --->   Operation 51 'icmp' 'icmp_ln48' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node select_ln49)   --->   "%and_ln48 = and i1 %empty, i1 %icmp_ln48" [d2.cpp:48]   --->   Operation 52 'and' 'and_ln48' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49 = select i1 %and_ln48, i32 38, i32 19" [d2.cpp:49]   --->   Operation 53 'select' 'select_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.75ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i4 %i1_1" [d2.cpp:49]   --->   Operation 54 'mux' 'tmp' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.79ns)   --->   "%sub_ln49 = sub i4 2, i4 %i1_1" [d2.cpp:49]   --->   Operation 55 'sub' 'sub_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.75ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i4 %sub_ln49" [d2.cpp:49]   --->   Operation 56 'mux' 'tmp_1' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.57ns)   --->   Input mux for Operation 57 '%mul_ln49 = mul i32 %tmp_1, i32 %select_ln49'
ST_1 : Operation 57 [1/1] (2.84ns)   --->   "%mul_ln49 = mul i32 %tmp_1, i32 %select_ln49" [d2.cpp:49]   --->   Operation 57 'mul' 'mul_ln49' <Predicate = (!icmp_ln36)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.79ns)   --->   "%add_ln49_1 = add i4 %i1_1, i4 2" [d2.cpp:49]   --->   Operation 58 'add' 'add_ln49_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%sub_ln49_1 = sub i4 1, i4 %i1_1" [d2.cpp:49]   --->   Operation 59 'sub' 'sub_ln49_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.75ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 %arg2_r_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_1" [d2.cpp:49]   --->   Operation 60 'mux' 'tmp_2' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 61 '%mul_ln49_2 = mul i32 %tmp_2, i32 19'
ST_1 : Operation 61 [1/1] (2.89ns)   --->   "%mul_ln49_2 = mul i32 %tmp_2, i32 19" [d2.cpp:49]   --->   Operation 61 'mul' 'mul_ln49_2' <Predicate = (!icmp_ln36)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.79ns)   --->   "%icmp_ln49 = icmp_ugt  i4 %add_ln49_1, i4 9" [d2.cpp:49]   --->   Operation 62 'icmp' 'icmp_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.79ns)   --->   "%add_ln48_1 = add i4 %i1_1, i4 3" [d2.cpp:48]   --->   Operation 63 'add' 'add_ln48_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.79ns)   --->   "%icmp_ln48_1 = icmp_ugt  i4 %add_ln48_1, i4 9" [d2.cpp:48]   --->   Operation 64 'icmp' 'icmp_ln48_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_3)   --->   "%and_ln48_1 = and i1 %empty, i1 %icmp_ln48_1" [d2.cpp:48]   --->   Operation 65 'and' 'and_ln48_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_3 = select i1 %and_ln48_1, i32 38, i32 19" [d2.cpp:49]   --->   Operation 66 'select' 'select_ln49_3' <Predicate = (!icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%sub_ln49_2 = sub i4 0, i4 %i1_1" [d2.cpp:49]   --->   Operation 67 'sub' 'sub_ln49_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.75ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_2" [d2.cpp:49]   --->   Operation 68 'mux' 'tmp_3' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.57ns)   --->   Input mux for Operation 69 '%mul_ln49_4 = mul i32 %tmp_3, i32 %select_ln49_3'
ST_1 : Operation 69 [1/1] (2.84ns)   --->   "%mul_ln49_4 = mul i32 %tmp_3, i32 %select_ln49_3" [d2.cpp:49]   --->   Operation 69 'mul' 'mul_ln49_4' <Predicate = (!icmp_ln36)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.79ns)   --->   "%add_ln49_4 = add i4 %i1_1, i4 4" [d2.cpp:49]   --->   Operation 70 'add' 'add_ln49_4' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.35ns)   --->   "%xor_ln49 = xor i4 %i1_1, i4 15" [d2.cpp:49]   --->   Operation 71 'xor' 'xor_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.75ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %xor_ln49" [d2.cpp:49]   --->   Operation 72 'mux' 'tmp_4' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 73 '%mul_ln49_6 = mul i32 %tmp_4, i32 19'
ST_1 : Operation 73 [1/1] (2.89ns)   --->   "%mul_ln49_6 = mul i32 %tmp_4, i32 19" [d2.cpp:49]   --->   Operation 73 'mul' 'mul_ln49_6' <Predicate = (!icmp_ln36)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.79ns)   --->   "%icmp_ln49_1 = icmp_ugt  i4 %add_ln49_4, i4 9" [d2.cpp:49]   --->   Operation 74 'icmp' 'icmp_ln49_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.79ns)   --->   "%empty_22 = add i4 %i1_1, i4 5"   --->   Operation 75 'add' 'empty_22' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.79ns)   --->   "%icmp_ln48_2 = icmp_ugt  i4 %empty_22, i4 9" [d2.cpp:48]   --->   Operation 76 'icmp' 'icmp_ln48_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_6)   --->   "%and_ln48_2 = and i1 %empty, i1 %icmp_ln48_2" [d2.cpp:48]   --->   Operation 77 'and' 'and_ln48_2' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_6 = select i1 %and_ln48_2, i32 38, i32 19" [d2.cpp:49]   --->   Operation 78 'select' 'select_ln49_6' <Predicate = (!icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.79ns)   --->   "%sub_ln49_3 = sub i4 14, i4 %i1_1" [d2.cpp:49]   --->   Operation 79 'sub' 'sub_ln49_3' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.75ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_3" [d2.cpp:49]   --->   Operation 80 'mux' 'tmp_5' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.57ns)   --->   Input mux for Operation 81 '%mul_ln49_8 = mul i32 %tmp_5, i32 %select_ln49_6'
ST_1 : Operation 81 [1/1] (2.84ns)   --->   "%mul_ln49_8 = mul i32 %tmp_5, i32 %select_ln49_6" [d2.cpp:49]   --->   Operation 81 'mul' 'mul_ln49_8' <Predicate = (!icmp_ln36)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.79ns)   --->   "%sub_ln49_4 = sub i4 13, i4 %i1_1" [d2.cpp:49]   --->   Operation 82 'sub' 'sub_ln49_4' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.75ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_4" [d2.cpp:49]   --->   Operation 83 'mux' 'tmp_6' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 84 '%mul_ln49_10 = mul i32 %tmp_6, i32 19'
ST_1 : Operation 84 [1/1] (2.89ns)   --->   "%mul_ln49_10 = mul i32 %tmp_6, i32 19" [d2.cpp:49]   --->   Operation 84 'mul' 'mul_ln49_10' <Predicate = (!icmp_ln36)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.79ns)   --->   "%add_ln49_7 = add i4 %i1_1, i4 6" [d2.cpp:49]   --->   Operation 85 'add' 'add_ln49_7' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%icmp_ln49_2 = icmp_ugt  i4 %add_ln49_7, i4 9" [d2.cpp:49]   --->   Operation 86 'icmp' 'icmp_ln49_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%add_ln48_2 = add i5 %zext_ln36, i5 7" [d2.cpp:48]   --->   Operation 87 'add' 'add_ln48_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.78ns)   --->   "%icmp_ln48_3 = icmp_ugt  i5 %add_ln48_2, i5 9" [d2.cpp:48]   --->   Operation 88 'icmp' 'icmp_ln48_3' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_9)   --->   "%and_ln48_3 = and i1 %empty, i1 %icmp_ln48_3" [d2.cpp:48]   --->   Operation 89 'and' 'and_ln48_3' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln49_9 = select i1 %and_ln48_3, i32 38, i32 19" [d2.cpp:49]   --->   Operation 90 'select' 'select_ln49_9' <Predicate = (!icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%sub_ln49_5 = sub i4 12, i4 %i1_1" [d2.cpp:49]   --->   Operation 91 'sub' 'sub_ln49_5' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.75ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_5" [d2.cpp:49]   --->   Operation 92 'mux' 'tmp_7' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.57ns)   --->   Input mux for Operation 93 '%mul_ln49_12 = mul i32 %tmp_7, i32 %select_ln49_9'
ST_1 : Operation 93 [1/1] (2.84ns)   --->   "%mul_ln49_12 = mul i32 %tmp_7, i32 %select_ln49_9" [d2.cpp:49]   --->   Operation 93 'mul' 'mul_ln49_12' <Predicate = (!icmp_ln36)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.79ns)   --->   "%sub_ln49_6 = sub i4 11, i4 %i1_1" [d2.cpp:49]   --->   Operation 94 'sub' 'sub_ln49_6' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.75ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_6" [d2.cpp:49]   --->   Operation 95 'mux' 'tmp_8' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 96 '%mul_ln49_14 = mul i32 %tmp_8, i32 19'
ST_1 : Operation 96 [1/1] (2.89ns)   --->   "%mul_ln49_14 = mul i32 %tmp_8, i32 19" [d2.cpp:49]   --->   Operation 96 'mul' 'mul_ln49_14' <Predicate = (!icmp_ln36)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.78ns)   --->   "%add_ln49_10 = add i5 %zext_ln36, i5 8" [d2.cpp:49]   --->   Operation 97 'add' 'add_ln49_10' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.78ns)   --->   "%icmp_ln49_3 = icmp_ugt  i5 %add_ln49_10, i5 9" [d2.cpp:49]   --->   Operation 98 'icmp' 'icmp_ln49_3' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.36ns)   --->   "%select_ln49_12 = select i1 %empty, i32 38, i32 19" [d2.cpp:49]   --->   Operation 99 'select' 'select_ln49_12' <Predicate = (!icmp_ln36)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.79ns)   --->   "%sub_ln49_7 = sub i4 10, i4 %i1_1" [d2.cpp:49]   --->   Operation 100 'sub' 'sub_ln49_7' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.75ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln49_7" [d2.cpp:49]   --->   Operation 101 'mux' 'tmp_9' <Predicate = (!icmp_ln36)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.57ns)   --->   Input mux for Operation 102 '%mul_ln49_16 = mul i32 %tmp_9, i32 %select_ln49_12'
ST_1 : Operation 102 [1/1] (2.84ns)   --->   "%mul_ln49_16 = mul i32 %tmp_9, i32 %select_ln49_12" [d2.cpp:49]   --->   Operation 102 'mul' 'mul_ln49_16' <Predicate = (!icmp_ln36)> <Delay = 2.84> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.42ns)   --->   "%store_ln36 = store i4 %add_ln48, i4 %i1" [d2.cpp:36]   --->   Operation 103 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%add59_1205208_load_1 = load i64 %add59_1205208"   --->   Operation 170 'load' 'add59_1205208_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%add59_2209_load_1 = load i64 %add59_2209"   --->   Operation 171 'load' 'add59_2209_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%add59_3210_load_1 = load i64 %add59_3210"   --->   Operation 172 'load' 'add59_3210_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%add59_4211_load_1 = load i64 %add59_4211"   --->   Operation 173 'load' 'add59_4211_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%add59_1212_load_1 = load i64 %add59_1212"   --->   Operation 174 'load' 'add59_1212_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%add59_1_1213_load_1 = load i64 %add59_1_1213"   --->   Operation 175 'load' 'add59_1_1213_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%add59_1_2214_load_1 = load i64 %add59_1_2214"   --->   Operation 176 'load' 'add59_1_2214_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%add59_1_3215_load_1 = load i64 %add59_1_3215"   --->   Operation 177 'load' 'add59_1_3215_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%add59_1_4216_load_1 = load i64 %add59_1_4216"   --->   Operation 178 'load' 'add59_1_4216_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1_4216_out, i64 %add59_1_4216_load_1"   --->   Operation 179 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1_3215_out, i64 %add59_1_3215_load_1"   --->   Operation 180 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1_2214_out, i64 %add59_1_2214_load_1"   --->   Operation 181 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1_1213_out, i64 %add59_1_1213_load_1"   --->   Operation 182 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1212_out, i64 %add59_1212_load_1"   --->   Operation 183 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_4211_out, i64 %add59_4211_load_1"   --->   Operation 184 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_3210_out, i64 %add59_3210_load_1"   --->   Operation 185 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_2209_out, i64 %add59_2209_load_1"   --->   Operation 186 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add59_1205208_out, i64 %add59_1205208_load_1"   --->   Operation 187 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 188 'ret' 'ret_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.93>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%add59_1205208_load = load i64 %add59_1205208" [d2.cpp:49]   --->   Operation 104 'load' 'add59_1205208_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%add59_2209_load = load i64 %add59_2209" [d2.cpp:49]   --->   Operation 105 'load' 'add59_2209_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%add59_3210_load = load i64 %add59_3210" [d2.cpp:49]   --->   Operation 106 'load' 'add59_3210_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%add59_4211_load = load i64 %add59_4211" [d2.cpp:49]   --->   Operation 107 'load' 'add59_4211_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%add59_1212_load = load i64 %add59_1212" [d2.cpp:49]   --->   Operation 108 'load' 'add59_1212_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%add59_1_1213_load = load i64 %add59_1_1213" [d2.cpp:49]   --->   Operation 109 'load' 'add59_1_1213_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%add59_1_2214_load = load i64 %add59_1_2214" [d2.cpp:49]   --->   Operation 110 'load' 'add59_1_2214_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%add59_1_3215_load = load i64 %add59_1_3215" [d2.cpp:49]   --->   Operation 111 'load' 'add59_1_3215_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%add59_1_4216_load = load i64 %add59_1_4216" [d2.cpp:49]   --->   Operation 112 'load' 'add59_1_4216_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d2.cpp:38]   --->   Operation 113 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%speclooptripcount_ln36 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [d2.cpp:36]   --->   Operation 114 'speclooptripcount' 'speclooptripcount_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d2.cpp:36]   --->   Operation 115 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i32 %tmp" [d2.cpp:49]   --->   Operation 116 'zext' 'zext_ln49' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i32 %mul_ln49" [d2.cpp:49]   --->   Operation 117 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 118 '%mul_ln49_1 = mul i64 %zext_ln49_1, i64 %zext_ln49'
ST_2 : Operation 118 [1/1] (2.56ns)   --->   "%mul_ln49_1 = mul i64 %zext_ln49_1, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 118 'mul' 'mul_ln49_1' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node add_ln49)   --->   "%select_ln49_1 = select i1 %icmp_ln48, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 119 'select' 'select_ln49_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln49)   --->   "%and_ln49 = and i64 %mul_ln49_1, i64 %select_ln49_1" [d2.cpp:49]   --->   Operation 120 'and' 'and_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49 = add i64 %and_ln49, i64 %add59_1205208_load" [d2.cpp:49]   --->   Operation 121 'add' 'add_ln49' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i32 %mul_ln49_2" [d2.cpp:49]   --->   Operation 122 'zext' 'zext_ln49_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 123 '%mul_ln49_3 = mul i64 %zext_ln49_2, i64 %zext_ln49'
ST_2 : Operation 123 [1/1] (2.56ns)   --->   "%mul_ln49_3 = mul i64 %zext_ln49_2, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 123 'mul' 'mul_ln49_3' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_2)   --->   "%select_ln49_2 = select i1 %icmp_ln49, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 124 'select' 'select_ln49_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_2)   --->   "%and_ln49_1 = and i64 %mul_ln49_3, i64 %select_ln49_2" [d2.cpp:49]   --->   Operation 125 'and' 'and_ln49_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_2 = add i64 %and_ln49_1, i64 %add59_2209_load" [d2.cpp:49]   --->   Operation 126 'add' 'add_ln49_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln49_3 = zext i32 %mul_ln49_4" [d2.cpp:49]   --->   Operation 127 'zext' 'zext_ln49_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 128 '%mul_ln49_5 = mul i64 %zext_ln49_3, i64 %zext_ln49'
ST_2 : Operation 128 [1/1] (2.56ns)   --->   "%mul_ln49_5 = mul i64 %zext_ln49_3, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 128 'mul' 'mul_ln49_5' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_3)   --->   "%select_ln49_4 = select i1 %icmp_ln48_1, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 129 'select' 'select_ln49_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_3)   --->   "%and_ln49_2 = and i64 %mul_ln49_5, i64 %select_ln49_4" [d2.cpp:49]   --->   Operation 130 'and' 'and_ln49_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_3 = add i64 %and_ln49_2, i64 %add59_3210_load" [d2.cpp:49]   --->   Operation 131 'add' 'add_ln49_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln49_4 = zext i32 %mul_ln49_6" [d2.cpp:49]   --->   Operation 132 'zext' 'zext_ln49_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 133 '%mul_ln49_7 = mul i64 %zext_ln49_4, i64 %zext_ln49'
ST_2 : Operation 133 [1/1] (2.56ns)   --->   "%mul_ln49_7 = mul i64 %zext_ln49_4, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 133 'mul' 'mul_ln49_7' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_5)   --->   "%select_ln49_5 = select i1 %icmp_ln49_1, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 134 'select' 'select_ln49_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_5)   --->   "%and_ln49_3 = and i64 %mul_ln49_7, i64 %select_ln49_5" [d2.cpp:49]   --->   Operation 135 'and' 'and_ln49_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_5 = add i64 %and_ln49_3, i64 %add59_4211_load" [d2.cpp:49]   --->   Operation 136 'add' 'add_ln49_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln49_5 = zext i32 %mul_ln49_8" [d2.cpp:49]   --->   Operation 137 'zext' 'zext_ln49_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 138 '%mul_ln49_9 = mul i64 %zext_ln49_5, i64 %zext_ln49'
ST_2 : Operation 138 [1/1] (2.56ns)   --->   "%mul_ln49_9 = mul i64 %zext_ln49_5, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 138 'mul' 'mul_ln49_9' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_6)   --->   "%select_ln49_7 = select i1 %icmp_ln48_2, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 139 'select' 'select_ln49_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_6)   --->   "%and_ln49_4 = and i64 %mul_ln49_9, i64 %select_ln49_7" [d2.cpp:49]   --->   Operation 140 'and' 'and_ln49_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 141 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_6 = add i64 %and_ln49_4, i64 %add59_1212_load" [d2.cpp:49]   --->   Operation 141 'add' 'add_ln49_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln49_6 = zext i32 %mul_ln49_10" [d2.cpp:49]   --->   Operation 142 'zext' 'zext_ln49_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 143 '%mul_ln49_11 = mul i64 %zext_ln49_6, i64 %zext_ln49'
ST_2 : Operation 143 [1/1] (2.56ns)   --->   "%mul_ln49_11 = mul i64 %zext_ln49_6, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 143 'mul' 'mul_ln49_11' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_8)   --->   "%select_ln49_8 = select i1 %icmp_ln49_2, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 144 'select' 'select_ln49_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_8)   --->   "%and_ln49_5 = and i64 %mul_ln49_11, i64 %select_ln49_8" [d2.cpp:49]   --->   Operation 145 'and' 'and_ln49_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_8 = add i64 %and_ln49_5, i64 %add59_1_1213_load" [d2.cpp:49]   --->   Operation 146 'add' 'add_ln49_8' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln49_7 = zext i32 %mul_ln49_12" [d2.cpp:49]   --->   Operation 147 'zext' 'zext_ln49_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 148 '%mul_ln49_13 = mul i64 %zext_ln49_7, i64 %zext_ln49'
ST_2 : Operation 148 [1/1] (2.56ns)   --->   "%mul_ln49_13 = mul i64 %zext_ln49_7, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 148 'mul' 'mul_ln49_13' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_9)   --->   "%select_ln49_10 = select i1 %icmp_ln48_3, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 149 'select' 'select_ln49_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_9)   --->   "%and_ln49_6 = and i64 %mul_ln49_13, i64 %select_ln49_10" [d2.cpp:49]   --->   Operation 150 'and' 'and_ln49_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_9 = add i64 %and_ln49_6, i64 %add59_1_2214_load" [d2.cpp:49]   --->   Operation 151 'add' 'add_ln49_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln49_8 = zext i32 %mul_ln49_14" [d2.cpp:49]   --->   Operation 152 'zext' 'zext_ln49_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 153 '%mul_ln49_15 = mul i64 %zext_ln49_8, i64 %zext_ln49'
ST_2 : Operation 153 [1/1] (2.56ns)   --->   "%mul_ln49_15 = mul i64 %zext_ln49_8, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 153 'mul' 'mul_ln49_15' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_11)   --->   "%select_ln49_11 = select i1 %icmp_ln49_3, i64 18446744073709551615, i64 0" [d2.cpp:49]   --->   Operation 154 'select' 'select_ln49_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_11)   --->   "%and_ln49_7 = and i64 %mul_ln49_15, i64 %select_ln49_11" [d2.cpp:49]   --->   Operation 155 'and' 'and_ln49_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln49_11 = add i64 %and_ln49_7, i64 %add59_1_3215_load" [d2.cpp:49]   --->   Operation 156 'add' 'add_ln49_11' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln49_9 = zext i32 %mul_ln49_16" [d2.cpp:49]   --->   Operation 157 'zext' 'zext_ln49_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.85ns)   --->   Input mux for Operation 158 '%mul_ln49_17 = mul i64 %zext_ln49_9, i64 %zext_ln49'
ST_2 : Operation 158 [1/1] (2.56ns)   --->   "%mul_ln49_17 = mul i64 %zext_ln49_9, i64 %zext_ln49" [d2.cpp:49]   --->   Operation 158 'mul' 'mul_ln49_17' <Predicate = true> <Delay = 2.56> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (1.08ns)   --->   "%add_ln49_12 = add i64 %mul_ln49_17, i64 %add59_1_4216_load" [d2.cpp:49]   --->   Operation 159 'add' 'add_ln49_12' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_12, i64 %add59_1_4216" [d2.cpp:36]   --->   Operation 160 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 161 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_11, i64 %add59_1_3215" [d2.cpp:36]   --->   Operation 161 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 162 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_9, i64 %add59_1_2214" [d2.cpp:36]   --->   Operation 162 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 163 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_8, i64 %add59_1_1213" [d2.cpp:36]   --->   Operation 163 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 164 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_6, i64 %add59_1212" [d2.cpp:36]   --->   Operation 164 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 165 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_5, i64 %add59_4211" [d2.cpp:36]   --->   Operation 165 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 166 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_3, i64 %add59_3210" [d2.cpp:36]   --->   Operation 166 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 167 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49_2, i64 %add59_2209" [d2.cpp:36]   --->   Operation 167 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 168 [1/1] (0.42ns)   --->   "%store_ln36 = store i64 %add_ln49, i64 %add59_1205208" [d2.cpp:36]   --->   Operation 168 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 169 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body31" [d2.cpp:36]   --->   Operation 169 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.374ns
The critical path consists of the following:
	'alloca' operation ('i1') [38]  (0.000 ns)
	'load' operation ('i1') on local variable 'i1' [70]  (0.000 ns)
	'add' operation ('add_ln48', d2.cpp:48) [88]  (0.797 ns)
	'icmp' operation ('icmp_ln48', d2.cpp:48) [89]  (0.797 ns)
	'and' operation ('and_ln48', d2.cpp:48) [90]  (0.000 ns)
	'select' operation ('select_ln49', d2.cpp:49) [91]  (0.360 ns)
	multiplexor before operation 'mul' with delay (0.574 ns)
'mul' operation ('mul_ln49', d2.cpp:49) [96]  (2.846 ns)

 <State 2>: 4.932ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.854 ns)
'mul' operation ('mul_ln49_17', d2.cpp:49) [183]  (2.566 ns)
	'add' operation ('add_ln49_12', d2.cpp:49) [184]  (1.085 ns)
	'store' operation ('store_ln36', d2.cpp:36) of variable 'add_ln49_12', d2.cpp:49 on local variable 'add59_1_4216' [186]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
