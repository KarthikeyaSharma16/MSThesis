-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add59_4_1243_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_4_1243_out_ap_vld : OUT STD_LOGIC;
    add59_4242_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_4242_out_ap_vld : OUT STD_LOGIC;
    add59_3_1241_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_3_1241_out_ap_vld : OUT STD_LOGIC;
    add59_3240_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_3240_out_ap_vld : OUT STD_LOGIC;
    add59_2_1239_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_2_1239_out_ap_vld : OUT STD_LOGIC;
    add59_2238_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_2238_out_ap_vld : OUT STD_LOGIC;
    add59_1_1237_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_1_1237_out_ap_vld : OUT STD_LOGIC;
    add59_1236_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_1236_out_ap_vld : OUT STD_LOGIC;
    add59_1222235_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add59_1222235_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln36_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal icmp_ln48_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_fu_509_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_reg_1381 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_fu_395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_reg_1386 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_1_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_1_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_4_fu_379_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_4_reg_1401 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_fu_400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_1_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_1_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_2_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_2_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_8_fu_383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_8_reg_1421 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_10_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_10_reg_1426 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_2_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_2_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_3_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_3_reg_1436 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_12_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_12_reg_1441 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_14_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_14_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_3_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_3_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_16_fu_391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_16_reg_1456 : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_9_fu_122 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_fu_1031_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal arr_10_fu_126 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_18_fu_1054_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_11_fu_130 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_19_fu_1077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_12_fu_134 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_20_fu_1100_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_13_fu_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_21_fu_1123_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_14_fu_142 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_22_fu_1146_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_15_fu_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_23_fu_1169_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_16_fu_150 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_24_fu_1192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_17_fu_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_25_fu_1202_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_158 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln48_fu_482_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i1_3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln49_1_fu_339_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_1_fu_339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_fu_1002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_3_fu_343_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_3_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_fu_347_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_fu_347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_7_fu_351_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_7_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_9_fu_355_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_9_fu_355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_11_fu_359_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_11_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_13_fu_363_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_13_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_15_fu_367_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_15_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_fu_371_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_fu_371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_541_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_fu_375_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_646_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_4_fu_379_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_fu_751_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_8_fu_383_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_856_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_12_fu_387_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_943_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_16_fu_391_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_580_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_fu_395_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_685_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_fu_400_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_790_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_10_fu_405_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_895_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_14_fu_410_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_478_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_541_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_580_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_23_fu_568_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln48_1_fu_613_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln48_1_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_646_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_685_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_24_fu_673_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln48_2_fu_718_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln48_2_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_751_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_790_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_25_fu_778_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_fu_474_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln48_3_fu_823_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln48_3_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_856_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_895_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_26_fu_883_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_943_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln49_1_fu_339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_1_fu_1018_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_fu_1025_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_3_fu_343_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_2_fu_1041_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_1_fu_1048_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_5_fu_347_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_4_fu_1064_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_2_fu_1071_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_7_fu_351_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_5_fu_1087_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_3_fu_1094_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_9_fu_355_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_7_fu_1110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_4_fu_1117_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_11_fu_359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_8_fu_1133_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_5_fu_1140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_13_fu_363_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_10_fu_1156_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_6_fu_1163_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_15_fu_367_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_11_fu_1179_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_7_fu_1186_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_17_fu_371_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln49_11_fu_359_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_12_fu_387_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_13_fu_363_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_15_fu_367_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_16_fu_391_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_fu_371_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_1_fu_339_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_3_fu_343_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_4_fu_379_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_fu_347_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_7_fu_351_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_8_fu_383_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_9_fu_355_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_fu_375_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_6ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_1_fu_339_p0,
        din1 => mul_ln49_1_fu_339_p1,
        dout => mul_ln49_1_fu_339_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_3_fu_343_p0,
        din1 => mul_ln49_3_fu_343_p1,
        dout => mul_ln49_3_fu_343_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_5_fu_347_p0,
        din1 => mul_ln49_5_fu_347_p1,
        dout => mul_ln49_5_fu_347_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_7_fu_351_p0,
        din1 => mul_ln49_7_fu_351_p1,
        dout => mul_ln49_7_fu_351_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_9_fu_355_p0,
        din1 => mul_ln49_9_fu_355_p1,
        dout => mul_ln49_9_fu_355_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_11_fu_359_p0,
        din1 => mul_ln49_11_fu_359_p1,
        dout => mul_ln49_11_fu_359_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_13_fu_363_p0,
        din1 => mul_ln49_13_fu_363_p1,
        dout => mul_ln49_13_fu_363_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_15_fu_367_p0,
        din1 => mul_ln49_15_fu_367_p1,
        dout => mul_ln49_15_fu_367_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_17_fu_371_p0,
        din1 => mul_ln49_17_fu_371_p1,
        dout => mul_ln49_17_fu_371_p2);

    mul_32s_7s_32_1_1_U34 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_1_fu_541_p12,
        din1 => mul_ln49_fu_375_p1,
        dout => mul_ln49_fu_375_p2);

    mul_32s_7s_32_1_1_U35 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_3_fu_646_p12,
        din1 => mul_ln49_4_fu_379_p1,
        dout => mul_ln49_4_fu_379_p2);

    mul_32s_7s_32_1_1_U36 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_5_fu_751_p12,
        din1 => mul_ln49_8_fu_383_p1,
        dout => mul_ln49_8_fu_383_p2);

    mul_32s_7s_32_1_1_U37 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_7_fu_856_p12,
        din1 => mul_ln49_12_fu_387_p1,
        dout => mul_ln49_12_fu_387_p2);

    mul_32s_7s_32_1_1_U38 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_9_fu_943_p12,
        din1 => mul_ln49_16_fu_391_p1,
        dout => mul_ln49_16_fu_391_p2);

    mul_32s_6ns_32_1_1_U39 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_2_fu_580_p12,
        din1 => mul_ln49_2_fu_395_p1,
        dout => mul_ln49_2_fu_395_p2);

    mul_32s_6ns_32_1_1_U40 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_4_fu_685_p12,
        din1 => mul_ln49_6_fu_400_p1,
        dout => mul_ln49_6_fu_400_p2);

    mul_32s_6ns_32_1_1_U41 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_790_p12,
        din1 => mul_ln49_10_fu_405_p1,
        dout => mul_ln49_10_fu_405_p2);

    mul_32s_6ns_32_1_1_U42 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_895_p12,
        din1 => mul_ln49_14_fu_410_p1,
        dout => mul_ln49_14_fu_410_p2);

    mux_10_4_32_1_1_U43 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg1_r_1_reload,
        din2 => arg1_r_2_reload,
        din3 => arg1_r_3_reload,
        din4 => arg1_r_4_reload,
        din5 => arg1_r_5_reload,
        din6 => arg1_r_6_reload,
        din7 => arg1_r_7_reload,
        din8 => arg1_r_8_reload,
        din9 => arg1_r_9_reload,
        din10 => ap_sig_allocacmp_i1_3,
        dout => tmp_fu_509_p12);

    mux_10_4_32_1_1_U44 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_1_fu_541_p11,
        dout => tmp_1_fu_541_p12);

    mux_10_4_32_1_1_U45 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_2_fu_580_p11,
        dout => tmp_2_fu_580_p12);

    mux_10_4_32_1_1_U46 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_3_fu_646_p11,
        dout => tmp_3_fu_646_p12);

    mux_10_4_32_1_1_U47 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_4_fu_685_p11,
        dout => tmp_4_fu_685_p12);

    mux_10_4_32_1_1_U48 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_5_fu_751_p11,
        dout => tmp_5_fu_751_p12);

    mux_10_4_32_1_1_U49 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_6_fu_790_p11,
        dout => tmp_6_fu_790_p12);

    mux_10_4_32_1_1_U50 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_7_fu_856_p11,
        dout => tmp_7_fu_856_p12);

    mux_10_4_32_1_1_U51 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_8_fu_895_p11,
        dout => tmp_8_fu_895_p12);

    mux_10_4_32_1_1_U52 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_9_fu_943_p11,
        dout => tmp_9_fu_943_p12);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    arr_10_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_10_fu_126 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_10_fu_126 <= arr_18_fu_1054_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_11_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_11_fu_130 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_11_fu_130 <= arr_19_fu_1077_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_12_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_12_fu_134 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_12_fu_134 <= arr_20_fu_1100_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_13_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_13_fu_138 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_13_fu_138 <= arr_21_fu_1123_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_14_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_14_fu_142 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_14_fu_142 <= arr_22_fu_1146_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_15_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_15_fu_146 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_15_fu_146 <= arr_23_fu_1169_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_16_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_16_fu_150 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_16_fu_150 <= arr_24_fu_1192_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_17_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_17_fu_154 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_17_fu_154 <= arr_25_fu_1202_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_9_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_9_fu_122 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_9_fu_122 <= arr_fu_1031_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln36_fu_468_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_158 <= add_ln48_fu_482_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_158 <= ap_const_lv4_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln36_fu_468_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln48_1_reg_1396 <= icmp_ln48_1_fu_619_p2;
                icmp_ln48_2_reg_1416 <= icmp_ln48_2_fu_724_p2;
                icmp_ln48_3_reg_1436 <= icmp_ln48_3_fu_829_p2;
                icmp_ln48_reg_1371 <= icmp_ln48_fu_488_p2;
                icmp_ln49_1_reg_1411 <= icmp_ln49_1_fu_712_p2;
                icmp_ln49_2_reg_1431 <= icmp_ln49_2_fu_817_p2;
                icmp_ln49_3_reg_1451 <= icmp_ln49_3_fu_922_p2;
                icmp_ln49_reg_1391 <= icmp_ln49_fu_607_p2;
                mul_ln49_10_reg_1426 <= mul_ln49_10_fu_405_p2;
                mul_ln49_12_reg_1441 <= mul_ln49_12_fu_387_p2;
                mul_ln49_14_reg_1446 <= mul_ln49_14_fu_410_p2;
                mul_ln49_16_reg_1456 <= mul_ln49_16_fu_391_p2;
                mul_ln49_2_reg_1386 <= mul_ln49_2_fu_395_p2;
                mul_ln49_4_reg_1401 <= mul_ln49_4_fu_379_p2;
                mul_ln49_6_reg_1406 <= mul_ln49_6_fu_400_p2;
                mul_ln49_8_reg_1421 <= mul_ln49_8_fu_383_p2;
                mul_ln49_reg_1381 <= mul_ln49_fu_375_p2;
                tmp_reg_1376 <= tmp_fu_509_p12;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add59_1222235_out <= arr_9_fu_122;

    add59_1222235_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_1222235_out_ap_vld <= ap_const_logic_1;
        else 
            add59_1222235_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_1236_out <= arr_10_fu_126;

    add59_1236_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_1236_out_ap_vld <= ap_const_logic_1;
        else 
            add59_1236_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_1_1237_out <= arr_11_fu_130;

    add59_1_1237_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_1_1237_out_ap_vld <= ap_const_logic_1;
        else 
            add59_1_1237_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_2238_out <= arr_12_fu_134;

    add59_2238_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_2238_out_ap_vld <= ap_const_logic_1;
        else 
            add59_2238_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_2_1239_out <= arr_13_fu_138;

    add59_2_1239_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_2_1239_out_ap_vld <= ap_const_logic_1;
        else 
            add59_2_1239_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_3240_out <= arr_14_fu_142;

    add59_3240_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_3240_out_ap_vld <= ap_const_logic_1;
        else 
            add59_3240_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_3_1241_out <= arr_15_fu_146;

    add59_3_1241_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_3_1241_out_ap_vld <= ap_const_logic_1;
        else 
            add59_3_1241_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_4242_out <= arr_16_fu_150;

    add59_4242_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_4242_out_ap_vld <= ap_const_logic_1;
        else 
            add59_4242_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add59_4_1243_out <= arr_17_fu_154;

    add59_4_1243_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_468_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add59_4_1243_out_ap_vld <= ap_const_logic_1;
        else 
            add59_4_1243_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln48_1_fu_613_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_3));
    add_ln48_2_fu_718_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_5));
    add_ln48_3_fu_823_p2 <= std_logic_vector(unsigned(zext_ln36_fu_474_p1) + unsigned(ap_const_lv5_7));
    add_ln48_fu_482_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_1));
    and_ln48_1_fu_625_p2 <= (icmp_ln48_1_fu_619_p2 and empty_fu_478_p1);
    and_ln48_2_fu_730_p2 <= (icmp_ln48_2_fu_724_p2 and empty_fu_478_p1);
    and_ln48_3_fu_835_p2 <= (icmp_ln48_3_fu_829_p2 and empty_fu_478_p1);
    and_ln48_fu_494_p2 <= (icmp_ln48_fu_488_p2 and empty_fu_478_p1);
    and_ln49_1_fu_1048_p2 <= (select_ln49_2_fu_1041_p3 and mul_ln49_3_fu_343_p2);
    and_ln49_2_fu_1071_p2 <= (select_ln49_4_fu_1064_p3 and mul_ln49_5_fu_347_p2);
    and_ln49_3_fu_1094_p2 <= (select_ln49_5_fu_1087_p3 and mul_ln49_7_fu_351_p2);
    and_ln49_4_fu_1117_p2 <= (select_ln49_7_fu_1110_p3 and mul_ln49_9_fu_355_p2);
    and_ln49_5_fu_1140_p2 <= (select_ln49_8_fu_1133_p3 and mul_ln49_11_fu_359_p2);
    and_ln49_6_fu_1163_p2 <= (select_ln49_10_fu_1156_p3 and mul_ln49_13_fu_363_p2);
    and_ln49_7_fu_1186_p2 <= (select_ln49_11_fu_1179_p3 and mul_ln49_15_fu_367_p2);
    and_ln49_fu_1025_p2 <= (select_ln49_1_fu_1018_p3 and mul_ln49_1_fu_339_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln36_fu_468_p2)
    begin
        if (((icmp_ln36_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_158)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_3 <= ap_const_lv4_1;
        else 
            ap_sig_allocacmp_i1_3 <= i1_fu_158;
        end if; 
    end process;

    arr_18_fu_1054_p2 <= std_logic_vector(unsigned(and_ln49_1_fu_1048_p2) + unsigned(arr_10_fu_126));
    arr_19_fu_1077_p2 <= std_logic_vector(unsigned(and_ln49_2_fu_1071_p2) + unsigned(arr_11_fu_130));
    arr_20_fu_1100_p2 <= std_logic_vector(unsigned(and_ln49_3_fu_1094_p2) + unsigned(arr_12_fu_134));
    arr_21_fu_1123_p2 <= std_logic_vector(unsigned(and_ln49_4_fu_1117_p2) + unsigned(arr_13_fu_138));
    arr_22_fu_1146_p2 <= std_logic_vector(unsigned(and_ln49_5_fu_1140_p2) + unsigned(arr_14_fu_142));
    arr_23_fu_1169_p2 <= std_logic_vector(unsigned(and_ln49_6_fu_1163_p2) + unsigned(arr_15_fu_146));
    arr_24_fu_1192_p2 <= std_logic_vector(unsigned(and_ln49_7_fu_1186_p2) + unsigned(arr_16_fu_150));
    arr_25_fu_1202_p2 <= std_logic_vector(unsigned(mul_ln49_17_fu_371_p2) + unsigned(arr_17_fu_154));
    arr_fu_1031_p2 <= std_logic_vector(unsigned(and_ln49_fu_1025_p2) + unsigned(arr_9_fu_122));
    empty_23_fu_568_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_2));
    empty_24_fu_673_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_4));
    empty_25_fu_778_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_3) + unsigned(ap_const_lv4_6));
    empty_26_fu_883_p2 <= std_logic_vector(unsigned(zext_ln36_fu_474_p1) + unsigned(ap_const_lv5_8));
    empty_fu_478_p1 <= ap_sig_allocacmp_i1_3(1 - 1 downto 0);
    icmp_ln36_fu_468_p2 <= "1" when (ap_sig_allocacmp_i1_3 = ap_const_lv4_A) else "0";
    icmp_ln48_1_fu_619_p2 <= "1" when (unsigned(add_ln48_1_fu_613_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln48_2_fu_724_p2 <= "1" when (unsigned(add_ln48_2_fu_718_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln48_3_fu_829_p2 <= "1" when (unsigned(add_ln48_3_fu_823_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln48_fu_488_p2 <= "1" when (unsigned(add_ln48_fu_482_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_1_fu_712_p2 <= "1" when (unsigned(empty_24_fu_673_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_2_fu_817_p2 <= "1" when (unsigned(empty_25_fu_778_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_3_fu_922_p2 <= "1" when (unsigned(empty_26_fu_883_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln49_fu_607_p2 <= "1" when (unsigned(empty_23_fu_568_p2) > unsigned(ap_const_lv4_9)) else "0";
    mul_ln49_10_fu_405_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_11_fu_359_p0 <= mul_ln49_11_fu_359_p00(32 - 1 downto 0);
    mul_ln49_11_fu_359_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_10_reg_1426),64));
    mul_ln49_11_fu_359_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_12_fu_387_p1 <= mul_ln49_12_fu_387_p10(7 - 1 downto 0);
    mul_ln49_12_fu_387_p10 <= 
        ap_const_lv32_26 when (and_ln48_3_fu_835_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln49_13_fu_363_p0 <= mul_ln49_13_fu_363_p00(32 - 1 downto 0);
    mul_ln49_13_fu_363_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_12_reg_1441),64));
    mul_ln49_13_fu_363_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_14_fu_410_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_15_fu_367_p0 <= mul_ln49_15_fu_367_p00(32 - 1 downto 0);
    mul_ln49_15_fu_367_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_14_reg_1446),64));
    mul_ln49_15_fu_367_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_16_fu_391_p1 <= mul_ln49_16_fu_391_p10(7 - 1 downto 0);
    mul_ln49_16_fu_391_p10 <= 
        ap_const_lv32_26 when (empty_fu_478_p1(0) = '1') else 
        ap_const_lv32_13;
    mul_ln49_17_fu_371_p0 <= mul_ln49_17_fu_371_p00(32 - 1 downto 0);
    mul_ln49_17_fu_371_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_16_reg_1456),64));
    mul_ln49_17_fu_371_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_1_fu_339_p0 <= mul_ln49_1_fu_339_p00(32 - 1 downto 0);
    mul_ln49_1_fu_339_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_reg_1381),64));
    mul_ln49_1_fu_339_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_2_fu_395_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_3_fu_343_p0 <= mul_ln49_3_fu_343_p00(32 - 1 downto 0);
    mul_ln49_3_fu_343_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_2_reg_1386),64));
    mul_ln49_3_fu_343_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_4_fu_379_p1 <= mul_ln49_4_fu_379_p10(7 - 1 downto 0);
    mul_ln49_4_fu_379_p10 <= 
        ap_const_lv32_26 when (and_ln48_1_fu_625_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln49_5_fu_347_p0 <= mul_ln49_5_fu_347_p00(32 - 1 downto 0);
    mul_ln49_5_fu_347_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_4_reg_1401),64));
    mul_ln49_5_fu_347_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_6_fu_400_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_7_fu_351_p0 <= mul_ln49_7_fu_351_p00(32 - 1 downto 0);
    mul_ln49_7_fu_351_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_6_reg_1406),64));
    mul_ln49_7_fu_351_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_8_fu_383_p1 <= mul_ln49_8_fu_383_p10(7 - 1 downto 0);
    mul_ln49_8_fu_383_p10 <= 
        ap_const_lv32_26 when (and_ln48_2_fu_730_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln49_9_fu_355_p0 <= mul_ln49_9_fu_355_p00(32 - 1 downto 0);
    mul_ln49_9_fu_355_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_8_reg_1421),64));
    mul_ln49_9_fu_355_p1 <= zext_ln49_fu_1002_p1(32 - 1 downto 0);
    mul_ln49_fu_375_p1 <= mul_ln49_fu_375_p10(7 - 1 downto 0);
    mul_ln49_fu_375_p10 <= 
        ap_const_lv32_26 when (and_ln48_fu_494_p2(0) = '1') else 
        ap_const_lv32_13;
    select_ln49_10_fu_1156_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln48_3_reg_1436(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_11_fu_1179_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_3_reg_1451(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_1_fu_1018_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln48_reg_1371(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_2_fu_1041_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_reg_1391(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_4_fu_1064_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln48_1_reg_1396(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_5_fu_1087_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_1_reg_1411(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_7_fu_1110_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln48_2_reg_1416(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_8_fu_1133_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_2_reg_1431(0) = '1') else 
        ap_const_lv64_0;
    tmp_1_fu_541_p11 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(ap_sig_allocacmp_i1_3));
    tmp_2_fu_580_p11 <= std_logic_vector(unsigned(ap_const_lv4_1) - unsigned(ap_sig_allocacmp_i1_3));
    tmp_3_fu_646_p11 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(ap_sig_allocacmp_i1_3));
    tmp_4_fu_685_p11 <= (ap_sig_allocacmp_i1_3 xor ap_const_lv4_F);
    tmp_5_fu_751_p11 <= std_logic_vector(signed(ap_const_lv4_E) - signed(ap_sig_allocacmp_i1_3));
    tmp_6_fu_790_p11 <= std_logic_vector(signed(ap_const_lv4_D) - signed(ap_sig_allocacmp_i1_3));
    tmp_7_fu_856_p11 <= std_logic_vector(signed(ap_const_lv4_C) - signed(ap_sig_allocacmp_i1_3));
    tmp_8_fu_895_p11 <= std_logic_vector(signed(ap_const_lv4_B) - signed(ap_sig_allocacmp_i1_3));
    tmp_9_fu_943_p11 <= std_logic_vector(signed(ap_const_lv4_A) - signed(ap_sig_allocacmp_i1_3));
    zext_ln36_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i1_3),5));
    zext_ln49_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1376),64));
end behav;
