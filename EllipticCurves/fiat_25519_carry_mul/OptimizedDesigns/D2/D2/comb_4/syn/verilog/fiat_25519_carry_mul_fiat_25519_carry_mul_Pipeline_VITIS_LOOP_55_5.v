// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add59_1_4321_reload,
        add59_1_3320_reload,
        add59_1_2229319_reload,
        add59_1_1209318_reload,
        add59_1317_reload,
        add59_4316_reload,
        add59_3315_reload,
        add59_2300314_reload,
        add59_1282313_reload,
        arg1_r_reload,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg2_r_6_reload,
        arg2_r_7_reload,
        arg2_r_8_reload,
        arg2_r_9_reload,
        arg2_r_3_reload,
        arg2_r_2_reload,
        arg2_r_1_reload,
        arg2_r_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        zext_ln68_23,
        add129_1_482311_out,
        add129_1_482311_out_ap_vld,
        add129_1_364310_out,
        add129_1_364310_out_ap_vld,
        add129_1_246309_out,
        add129_1_246309_out_ap_vld,
        add129_1_128308_out,
        add129_1_128308_out_ap_vld,
        add129_1307_out,
        add129_1307_out_ap_vld,
        add129_4189306_out,
        add129_4189306_out_ap_vld,
        add129_3171305_out,
        add129_3171305_out_ap_vld,
        add129_2153304_out,
        add129_2153304_out_ap_vld,
        add129_1135303_out,
        add129_1135303_out_ap_vld,
        add129302_out,
        add129302_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] add59_1_4321_reload;
input  [63:0] add59_1_3320_reload;
input  [63:0] add59_1_2229319_reload;
input  [63:0] add59_1_1209318_reload;
input  [63:0] add59_1317_reload;
input  [63:0] add59_4316_reload;
input  [63:0] add59_3315_reload;
input  [63:0] add59_2300314_reload;
input  [63:0] add59_1282313_reload;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_9_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] zext_ln68_23;
output  [63:0] add129_1_482311_out;
output   add129_1_482311_out_ap_vld;
output  [63:0] add129_1_364310_out;
output   add129_1_364310_out_ap_vld;
output  [63:0] add129_1_246309_out;
output   add129_1_246309_out_ap_vld;
output  [63:0] add129_1_128308_out;
output   add129_1_128308_out_ap_vld;
output  [63:0] add129_1307_out;
output   add129_1307_out_ap_vld;
output  [63:0] add129_4189306_out;
output   add129_4189306_out_ap_vld;
output  [63:0] add129_3171305_out;
output   add129_3171305_out_ap_vld;
output  [63:0] add129_2153304_out;
output   add129_2153304_out_ap_vld;
output  [63:0] add129_1135303_out;
output   add129_1135303_out_ap_vld;
output  [63:0] add129302_out;
output   add129302_out_ap_vld;

reg ap_idle;
reg add129_1_482311_out_ap_vld;
reg add129_1_364310_out_ap_vld;
reg add129_1_246309_out_ap_vld;
reg add129_1_128308_out_ap_vld;
reg add129_1307_out_ap_vld;
reg add129_4189306_out_ap_vld;
reg add129_3171305_out_ap_vld;
reg add129_2153304_out_ap_vld;
reg add129_1135303_out_ap_vld;
reg add129302_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_676_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln68_23_cast_fu_614_p1;
reg   [63:0] zext_ln68_23_cast_reg_2081;
wire   [0:0] trunc_ln68_fu_682_p1;
reg   [0:0] trunc_ln68_reg_2090;
wire   [1:0] trunc_ln55_fu_690_p1;
reg   [1:0] trunc_ln55_reg_2102;
wire   [2:0] trunc_ln55_1_fu_694_p1;
reg   [2:0] trunc_ln55_1_reg_2107;
wire   [3:0] sub_ln68_fu_698_p2;
reg   [3:0] sub_ln68_reg_2117;
wire   [3:0] sub_ln68_1_fu_704_p2;
reg   [3:0] sub_ln68_1_reg_2122;
wire   [2:0] sub_ln68_2_fu_710_p2;
reg   [2:0] sub_ln68_2_reg_2127;
wire   [2:0] sub_ln68_3_fu_716_p2;
reg   [2:0] sub_ln68_3_reg_2132;
wire   [2:0] sub_ln68_4_fu_728_p2;
reg   [2:0] sub_ln68_4_reg_2137;
wire   [0:0] icmp_ln68_1_fu_734_p2;
reg   [0:0] icmp_ln68_1_reg_2142;
wire   [0:0] icmp_ln68_2_fu_746_p2;
reg   [0:0] icmp_ln68_2_reg_2148;
wire   [1:0] sub_ln68_5_fu_758_p2;
reg   [1:0] sub_ln68_5_reg_2154;
wire   [0:0] icmp_ln68_3_fu_764_p2;
reg   [0:0] icmp_ln68_3_reg_2159;
wire   [0:0] icmp_ln68_4_fu_776_p2;
reg   [0:0] icmp_ln68_4_reg_2165;
wire   [0:0] icmp_ln67_fu_788_p2;
reg   [0:0] icmp_ln67_reg_2171;
reg   [63:0] add129302_fu_160;
wire   [63:0] add_ln68_7_fu_1259_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [63:0] add129_1135303_fu_164;
wire   [63:0] add_ln68_12_fu_1302_p2;
reg   [63:0] add129_2153304_fu_168;
wire   [63:0] add_ln68_17_fu_1351_p2;
reg   [63:0] add129_3171305_fu_172;
wire   [63:0] add_ln68_22_fu_1431_p2;
reg   [63:0] add129_4189306_fu_176;
wire   [63:0] add_ln68_28_fu_1507_p2;
reg   [63:0] add129_1307_fu_180;
wire   [63:0] add_ln68_43_fu_1742_p2;
reg   [63:0] add129_1_128308_fu_184;
wire   [63:0] add_ln68_38_fu_1682_p2;
reg   [63:0] add129_1_246309_fu_188;
wire   [63:0] add_ln68_34_fu_1634_p2;
reg   [63:0] add129_1_364310_fu_192;
wire   [63:0] add_ln68_31_fu_1598_p2;
reg   [63:0] add129_1_482311_fu_196;
wire   [63:0] add_ln68_29_fu_1549_p2;
reg   [3:0] i1_fu_200;
wire   [3:0] i1_2_fu_722_p2;
reg   [3:0] ap_sig_allocacmp_i1_1;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln68_fu_454_p0;
wire   [31:0] mul_ln68_fu_454_p1;
wire   [63:0] zext_ln68_fu_840_p1;
wire   [31:0] mul_ln68_1_fu_458_p0;
wire   [63:0] zext_ln68_6_fu_1006_p1;
wire   [31:0] mul_ln68_1_fu_458_p1;
wire   [31:0] mul_ln68_2_fu_462_p0;
wire   [63:0] zext_ln68_15_fu_1164_p1;
wire   [31:0] mul_ln68_2_fu_462_p1;
wire   [63:0] zext_ln68_9_fu_1042_p1;
wire   [31:0] mul_ln68_3_fu_466_p0;
wire   [63:0] zext_ln68_18_fu_1225_p1;
wire   [31:0] mul_ln68_3_fu_466_p1;
wire   [63:0] zext_ln68_5_fu_983_p1;
wire   [31:0] mul_ln68_4_fu_470_p0;
wire   [63:0] zext_ln68_12_fu_1094_p1;
wire   [31:0] mul_ln68_4_fu_470_p1;
wire   [63:0] zext_ln68_3_fu_934_p1;
wire   [31:0] mul_ln68_5_fu_474_p0;
wire   [31:0] mul_ln68_5_fu_474_p1;
wire   [31:0] mul_ln68_6_fu_478_p0;
wire   [31:0] mul_ln68_6_fu_478_p1;
wire   [31:0] mul_ln68_7_fu_482_p0;
wire   [31:0] mul_ln68_7_fu_482_p1;
wire   [63:0] zext_ln68_10_fu_1061_p1;
wire   [31:0] mul_ln68_8_fu_486_p0;
wire   [31:0] mul_ln68_8_fu_486_p1;
wire   [63:0] zext_ln68_13_fu_1124_p1;
wire   [31:0] mul_ln68_9_fu_490_p0;
wire   [31:0] mul_ln68_9_fu_490_p1;
wire   [63:0] zext_ln68_4_fu_966_p1;
wire   [31:0] mul_ln68_10_fu_494_p0;
wire   [31:0] mul_ln68_10_fu_494_p1;
wire   [31:0] mul_ln68_11_fu_498_p0;
wire   [31:0] mul_ln68_11_fu_498_p1;
wire   [31:0] mul_ln68_12_fu_502_p0;
wire   [31:0] mul_ln68_12_fu_502_p1;
wire   [31:0] mul_ln68_13_fu_506_p0;
wire   [31:0] mul_ln68_13_fu_506_p1;
wire   [63:0] zext_ln68_14_fu_1146_p1;
wire   [31:0] mul_ln68_14_fu_510_p0;
wire   [31:0] mul_ln68_14_fu_510_p1;
wire   [63:0] zext_ln68_11_fu_1077_p1;
wire   [31:0] mul_ln68_15_fu_514_p0;
wire   [31:0] mul_ln68_15_fu_514_p1;
wire   [31:0] mul_ln68_16_fu_518_p0;
wire   [31:0] mul_ln68_16_fu_518_p1;
wire   [31:0] mul_ln68_17_fu_522_p0;
wire   [31:0] mul_ln68_17_fu_522_p1;
wire   [31:0] mul_ln68_18_fu_526_p0;
wire   [31:0] mul_ln68_18_fu_526_p1;
wire   [63:0] zext_ln68_19_fu_1375_p1;
wire   [31:0] mul_ln68_19_fu_530_p0;
wire   [31:0] mul_ln68_19_fu_530_p1;
wire   [63:0] zext_ln68_16_fu_1194_p1;
wire   [31:0] mul_ln68_20_fu_534_p0;
wire   [31:0] mul_ln68_20_fu_534_p1;
wire   [31:0] mul_ln68_21_fu_538_p0;
wire   [63:0] zext_ln68_17_fu_1208_p1;
wire   [31:0] mul_ln68_21_fu_538_p1;
wire   [31:0] mul_ln68_22_fu_542_p0;
wire   [31:0] mul_ln68_22_fu_542_p1;
wire   [31:0] mul_ln68_23_fu_546_p0;
wire   [63:0] zext_ln68_20_fu_1445_p1;
wire   [31:0] mul_ln68_23_fu_546_p1;
wire   [31:0] mul_ln68_24_fu_550_p0;
wire   [31:0] mul_ln68_24_fu_550_p1;
wire   [31:0] mul_ln68_25_fu_554_p0;
wire   [63:0] zext_ln68_21_fu_1529_p1;
wire   [31:0] mul_ln68_25_fu_554_p1;
wire   [31:0] mul_ln68_26_fu_558_p0;
wire   [31:0] mul_ln68_26_fu_558_p1;
wire   [31:0] mul_ln68_27_fu_562_p0;
wire   [31:0] mul_ln68_27_fu_562_p1;
wire   [31:0] mul_ln68_28_fu_566_p0;
wire   [31:0] mul_ln68_28_fu_566_p1;
wire   [31:0] mul_ln68_29_fu_570_p0;
wire   [31:0] mul_ln68_29_fu_570_p1;
wire   [31:0] mul_ln68_30_fu_574_p0;
wire   [63:0] zext_ln68_22_fu_1574_p1;
wire   [31:0] mul_ln68_30_fu_574_p1;
wire   [31:0] mul_ln68_31_fu_578_p0;
wire   [31:0] mul_ln68_31_fu_578_p1;
wire   [31:0] mul_ln68_32_fu_582_p0;
wire   [31:0] mul_ln68_32_fu_582_p1;
wire   [31:0] mul_ln68_33_fu_586_p0;
wire   [31:0] mul_ln68_33_fu_586_p1;
wire   [31:0] mul_ln68_34_fu_590_p0;
wire   [31:0] mul_ln68_34_fu_590_p1;
wire   [31:0] mul_ln68_35_fu_594_p0;
wire   [31:0] mul_ln68_35_fu_594_p1;
wire   [31:0] mul_ln68_36_fu_598_p0;
wire   [31:0] mul_ln68_36_fu_598_p1;
wire   [31:0] mul_ln68_37_fu_602_p0;
wire   [31:0] mul_ln68_37_fu_602_p1;
wire   [31:0] mul_ln68_38_fu_606_p0;
wire   [31:0] mul_ln68_38_fu_606_p1;
wire   [31:0] mul_ln68_39_fu_610_p0;
wire   [31:0] mul_ln68_39_fu_610_p1;
wire   [3:0] add_ln68_1_fu_740_p2;
wire   [4:0] zext_ln68_24_fu_686_p1;
wire   [4:0] add_ln68_2_fu_752_p2;
wire   [4:0] add_ln68_23_fu_770_p2;
wire   [4:0] add_ln67_fu_782_p2;
wire   [31:0] tmp_2_fu_829_p8;
wire   [31:0] tmp_s_fu_854_p12;
wire   [31:0] tmp_1_fu_878_p11;
wire   [31:0] shl_ln68_fu_895_p2;
wire   [31:0] select_ln68_fu_901_p3;
wire   [2:0] tmp_3_fu_918_p9;
wire   [31:0] tmp_3_fu_918_p10;
wire   [31:0] tmp_4_fu_940_p9;
wire   [31:0] shl_ln68_1_fu_953_p2;
wire   [31:0] select_ln68_1_fu_959_p3;
wire   [31:0] tmp_5_fu_972_p8;
wire   [31:0] tmp_6_fu_995_p8;
wire   [31:0] shl_ln68_2_fu_1024_p2;
wire   [31:0] select_ln68_2_fu_1030_p3;
wire   [31:0] shl_ln68_3_fu_1048_p2;
wire   [31:0] select_ln68_3_fu_1054_p3;
wire   [31:0] tmp_7_fu_1067_p7;
wire   [31:0] tmp_8_fu_1083_p8;
wire   [0:0] and_ln67_fu_1106_p2;
wire   [31:0] shl_ln68_4_fu_1110_p2;
wire   [31:0] select_ln68_4_fu_1116_p3;
wire   [1:0] tmp_9_fu_1136_p5;
wire   [31:0] tmp_9_fu_1136_p6;
wire   [31:0] tmp_10_fu_1153_p8;
wire   [0:0] cmp95_185_fu_990_p2;
wire   [0:0] and_ln67_1_fu_1175_p2;
wire   [31:0] shl_ln68_5_fu_1180_p2;
wire   [31:0] select_ln68_5_fu_1186_p3;
wire   [31:0] tmp_11_fu_1200_p5;
wire   [31:0] tmp_12_fu_1214_p8;
wire   [63:0] mul_ln68_fu_454_p2;
wire   [63:0] mul_ln68_1_fu_458_p2;
wire   [63:0] mul_ln68_2_fu_462_p2;
wire   [63:0] mul_ln68_3_fu_466_p2;
wire   [63:0] add_ln68_4_fu_1241_p2;
wire   [63:0] mul_ln68_4_fu_470_p2;
wire   [63:0] add_ln68_5_fu_1247_p2;
wire   [63:0] add_ln68_3_fu_1235_p2;
wire   [63:0] add_ln68_6_fu_1253_p2;
wire   [63:0] mul_ln68_8_fu_486_p2;
wire   [63:0] select_ln68_9_fu_1265_p3;
wire   [63:0] mul_ln68_5_fu_474_p2;
wire   [63:0] mul_ln68_6_fu_478_p2;
wire   [63:0] mul_ln68_7_fu_482_p2;
wire   [63:0] and_ln68_fu_1272_p2;
wire   [63:0] add_ln68_9_fu_1284_p2;
wire   [63:0] mul_ln68_9_fu_490_p2;
wire   [63:0] add_ln68_10_fu_1290_p2;
wire   [63:0] add_ln68_8_fu_1278_p2;
wire   [63:0] add_ln68_11_fu_1296_p2;
wire   [63:0] mul_ln68_13_fu_506_p2;
wire   [63:0] select_ln68_10_fu_1308_p3;
wire   [63:0] mul_ln68_14_fu_510_p2;
wire   [63:0] mul_ln68_12_fu_502_p2;
wire   [63:0] mul_ln68_10_fu_494_p2;
wire   [63:0] and_ln68_2_fu_1321_p2;
wire   [63:0] and_ln68_1_fu_1315_p2;
wire   [63:0] add_ln68_14_fu_1333_p2;
wire   [63:0] mul_ln68_11_fu_498_p2;
wire   [63:0] add_ln68_15_fu_1339_p2;
wire   [63:0] add_ln68_13_fu_1327_p2;
wire   [63:0] add_ln68_16_fu_1345_p2;
wire   [0:0] and_ln67_2_fu_1357_p2;
wire   [31:0] shl_ln68_6_fu_1361_p2;
wire   [31:0] select_ln68_6_fu_1367_p3;
wire   [63:0] mul_ln68_15_fu_514_p2;
wire   [63:0] mul_ln68_18_fu_526_p2;
wire   [63:0] select_ln68_11_fu_1388_p3;
wire   [63:0] mul_ln68_19_fu_530_p2;
wire   [63:0] mul_ln68_16_fu_518_p2;
wire   [63:0] mul_ln68_17_fu_522_p2;
wire   [63:0] and_ln68_5_fu_1401_p2;
wire   [63:0] and_ln68_4_fu_1395_p2;
wire   [63:0] add_ln68_19_fu_1413_p2;
wire   [63:0] and_ln68_3_fu_1382_p2;
wire   [63:0] add_ln68_20_fu_1419_p2;
wire   [63:0] add_ln68_18_fu_1407_p2;
wire   [63:0] add_ln68_21_fu_1425_p2;
wire   [31:0] tmp_13_fu_1437_p4;
wire   [63:0] mul_ln68_20_fu_534_p2;
wire   [63:0] mul_ln68_21_fu_538_p2;
wire   [63:0] mul_ln68_23_fu_546_p2;
wire   [63:0] select_ln68_12_fu_1464_p3;
wire   [63:0] mul_ln68_24_fu_550_p2;
wire   [63:0] mul_ln68_22_fu_542_p2;
wire   [63:0] and_ln68_6_fu_1452_p2;
wire   [63:0] and_ln68_7_fu_1458_p2;
wire   [63:0] and_ln68_8_fu_1471_p2;
wire   [63:0] add_ln68_25_fu_1489_p2;
wire   [63:0] and_ln68_9_fu_1477_p2;
wire   [63:0] add_ln68_26_fu_1495_p2;
wire   [63:0] add_ln68_24_fu_1483_p2;
wire   [63:0] add_ln68_27_fu_1501_p2;
wire   [0:0] and_ln67_3_fu_1513_p2;
wire   [31:0] shl_ln68_7_fu_1517_p2;
wire   [31:0] select_ln68_7_fu_1522_p3;
wire   [63:0] mul_ln68_25_fu_554_p2;
wire   [63:0] select_ln68_13_fu_1536_p3;
wire   [63:0] and_ln68_10_fu_1543_p2;
wire   [0:0] and_ln67_4_fu_1555_p2;
wire   [31:0] shl_ln68_8_fu_1560_p2;
wire   [31:0] select_ln68_8_fu_1566_p3;
wire   [63:0] mul_ln68_26_fu_558_p2;
wire   [63:0] mul_ln68_27_fu_562_p2;
wire   [63:0] and_ln68_12_fu_1586_p2;
wire   [63:0] and_ln68_11_fu_1580_p2;
wire   [63:0] add_ln68_30_fu_1592_p2;
wire   [63:0] mul_ln68_28_fu_566_p2;
wire   [63:0] mul_ln68_29_fu_570_p2;
wire   [63:0] mul_ln68_30_fu_574_p2;
wire   [63:0] and_ln68_15_fu_1616_p2;
wire   [63:0] and_ln68_13_fu_1604_p2;
wire   [63:0] add_ln68_32_fu_1622_p2;
wire   [63:0] and_ln68_14_fu_1610_p2;
wire   [63:0] add_ln68_33_fu_1628_p2;
wire   [63:0] mul_ln68_31_fu_578_p2;
wire   [63:0] mul_ln68_32_fu_582_p2;
wire   [63:0] mul_ln68_33_fu_586_p2;
wire   [63:0] mul_ln68_34_fu_590_p2;
wire   [63:0] and_ln68_19_fu_1658_p2;
wire   [63:0] and_ln68_17_fu_1646_p2;
wire   [63:0] and_ln68_18_fu_1652_p2;
wire   [63:0] and_ln68_16_fu_1640_p2;
wire   [63:0] add_ln68_36_fu_1670_p2;
wire   [63:0] add_ln68_35_fu_1664_p2;
wire   [63:0] add_ln68_37_fu_1676_p2;
wire   [63:0] mul_ln68_35_fu_594_p2;
wire   [63:0] mul_ln68_36_fu_598_p2;
wire   [63:0] mul_ln68_37_fu_602_p2;
wire   [63:0] mul_ln68_38_fu_606_p2;
wire   [63:0] mul_ln68_39_fu_610_p2;
wire   [63:0] and_ln68_20_fu_1688_p2;
wire   [63:0] and_ln68_21_fu_1694_p2;
wire   [63:0] and_ln68_22_fu_1700_p2;
wire   [63:0] and_ln68_23_fu_1706_p2;
wire   [63:0] add_ln68_40_fu_1724_p2;
wire   [63:0] and_ln68_24_fu_1712_p2;
wire   [63:0] add_ln68_41_fu_1730_p2;
wire   [63:0] add_ln68_39_fu_1718_p2;
wire   [63:0] add_ln68_42_fu_1736_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln68_1_fu_458_p10;
wire   [63:0] mul_ln68_5_fu_474_p00;
wire   [63:0] mul_ln68_6_fu_478_p10;
wire   [63:0] mul_ln68_fu_454_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U109(
    .din0(mul_ln68_fu_454_p0),
    .din1(mul_ln68_fu_454_p1),
    .dout(mul_ln68_fu_454_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U110(
    .din0(mul_ln68_1_fu_458_p0),
    .din1(mul_ln68_1_fu_458_p1),
    .dout(mul_ln68_1_fu_458_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U111(
    .din0(mul_ln68_2_fu_462_p0),
    .din1(mul_ln68_2_fu_462_p1),
    .dout(mul_ln68_2_fu_462_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U112(
    .din0(mul_ln68_3_fu_466_p0),
    .din1(mul_ln68_3_fu_466_p1),
    .dout(mul_ln68_3_fu_466_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U113(
    .din0(mul_ln68_4_fu_470_p0),
    .din1(mul_ln68_4_fu_470_p1),
    .dout(mul_ln68_4_fu_470_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U114(
    .din0(mul_ln68_5_fu_474_p0),
    .din1(mul_ln68_5_fu_474_p1),
    .dout(mul_ln68_5_fu_474_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U115(
    .din0(mul_ln68_6_fu_478_p0),
    .din1(mul_ln68_6_fu_478_p1),
    .dout(mul_ln68_6_fu_478_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U116(
    .din0(mul_ln68_7_fu_482_p0),
    .din1(mul_ln68_7_fu_482_p1),
    .dout(mul_ln68_7_fu_482_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U117(
    .din0(mul_ln68_8_fu_486_p0),
    .din1(mul_ln68_8_fu_486_p1),
    .dout(mul_ln68_8_fu_486_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U118(
    .din0(mul_ln68_9_fu_490_p0),
    .din1(mul_ln68_9_fu_490_p1),
    .dout(mul_ln68_9_fu_490_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U119(
    .din0(mul_ln68_10_fu_494_p0),
    .din1(mul_ln68_10_fu_494_p1),
    .dout(mul_ln68_10_fu_494_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U120(
    .din0(mul_ln68_11_fu_498_p0),
    .din1(mul_ln68_11_fu_498_p1),
    .dout(mul_ln68_11_fu_498_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U121(
    .din0(mul_ln68_12_fu_502_p0),
    .din1(mul_ln68_12_fu_502_p1),
    .dout(mul_ln68_12_fu_502_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U122(
    .din0(mul_ln68_13_fu_506_p0),
    .din1(mul_ln68_13_fu_506_p1),
    .dout(mul_ln68_13_fu_506_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U123(
    .din0(mul_ln68_14_fu_510_p0),
    .din1(mul_ln68_14_fu_510_p1),
    .dout(mul_ln68_14_fu_510_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U124(
    .din0(mul_ln68_15_fu_514_p0),
    .din1(mul_ln68_15_fu_514_p1),
    .dout(mul_ln68_15_fu_514_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U125(
    .din0(mul_ln68_16_fu_518_p0),
    .din1(mul_ln68_16_fu_518_p1),
    .dout(mul_ln68_16_fu_518_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U126(
    .din0(mul_ln68_17_fu_522_p0),
    .din1(mul_ln68_17_fu_522_p1),
    .dout(mul_ln68_17_fu_522_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U127(
    .din0(mul_ln68_18_fu_526_p0),
    .din1(mul_ln68_18_fu_526_p1),
    .dout(mul_ln68_18_fu_526_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U128(
    .din0(mul_ln68_19_fu_530_p0),
    .din1(mul_ln68_19_fu_530_p1),
    .dout(mul_ln68_19_fu_530_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U129(
    .din0(mul_ln68_20_fu_534_p0),
    .din1(mul_ln68_20_fu_534_p1),
    .dout(mul_ln68_20_fu_534_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U130(
    .din0(mul_ln68_21_fu_538_p0),
    .din1(mul_ln68_21_fu_538_p1),
    .dout(mul_ln68_21_fu_538_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U131(
    .din0(mul_ln68_22_fu_542_p0),
    .din1(mul_ln68_22_fu_542_p1),
    .dout(mul_ln68_22_fu_542_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U132(
    .din0(mul_ln68_23_fu_546_p0),
    .din1(mul_ln68_23_fu_546_p1),
    .dout(mul_ln68_23_fu_546_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U133(
    .din0(mul_ln68_24_fu_550_p0),
    .din1(mul_ln68_24_fu_550_p1),
    .dout(mul_ln68_24_fu_550_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U134(
    .din0(mul_ln68_25_fu_554_p0),
    .din1(mul_ln68_25_fu_554_p1),
    .dout(mul_ln68_25_fu_554_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U135(
    .din0(mul_ln68_26_fu_558_p0),
    .din1(mul_ln68_26_fu_558_p1),
    .dout(mul_ln68_26_fu_558_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U136(
    .din0(mul_ln68_27_fu_562_p0),
    .din1(mul_ln68_27_fu_562_p1),
    .dout(mul_ln68_27_fu_562_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U137(
    .din0(mul_ln68_28_fu_566_p0),
    .din1(mul_ln68_28_fu_566_p1),
    .dout(mul_ln68_28_fu_566_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U138(
    .din0(mul_ln68_29_fu_570_p0),
    .din1(mul_ln68_29_fu_570_p1),
    .dout(mul_ln68_29_fu_570_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U139(
    .din0(mul_ln68_30_fu_574_p0),
    .din1(mul_ln68_30_fu_574_p1),
    .dout(mul_ln68_30_fu_574_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U140(
    .din0(mul_ln68_31_fu_578_p0),
    .din1(mul_ln68_31_fu_578_p1),
    .dout(mul_ln68_31_fu_578_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U141(
    .din0(mul_ln68_32_fu_582_p0),
    .din1(mul_ln68_32_fu_582_p1),
    .dout(mul_ln68_32_fu_582_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U142(
    .din0(mul_ln68_33_fu_586_p0),
    .din1(mul_ln68_33_fu_586_p1),
    .dout(mul_ln68_33_fu_586_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U143(
    .din0(mul_ln68_34_fu_590_p0),
    .din1(mul_ln68_34_fu_590_p1),
    .dout(mul_ln68_34_fu_590_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U144(
    .din0(mul_ln68_35_fu_594_p0),
    .din1(mul_ln68_35_fu_594_p1),
    .dout(mul_ln68_35_fu_594_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U145(
    .din0(mul_ln68_36_fu_598_p0),
    .din1(mul_ln68_36_fu_598_p1),
    .dout(mul_ln68_36_fu_598_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U146(
    .din0(mul_ln68_37_fu_602_p0),
    .din1(mul_ln68_37_fu_602_p1),
    .dout(mul_ln68_37_fu_602_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U147(
    .din0(mul_ln68_38_fu_606_p0),
    .din1(mul_ln68_38_fu_606_p1),
    .dout(mul_ln68_38_fu_606_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U148(
    .din0(mul_ln68_39_fu_610_p0),
    .din1(mul_ln68_39_fu_610_p1),
    .dout(mul_ln68_39_fu_610_p2)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U149(
    .din0(arg1_r_reload),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(trunc_ln55_1_reg_2107),
    .dout(tmp_2_fu_829_p8)
);

fiat_25519_carry_mul_mux_10_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_x_U150(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(sub_ln68_reg_2117),
    .dout(tmp_s_fu_854_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_x_U151(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(sub_ln68_1_reg_2122),
    .dout(tmp_1_fu_878_p11)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U152(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_3_fu_918_p9),
    .dout(tmp_3_fu_918_p10)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U153(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(sub_ln68_2_reg_2127),
    .dout(tmp_4_fu_940_p9)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U154(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(sub_ln68_3_reg_2132),
    .dout(tmp_5_fu_972_p8)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U155(
    .din0(arg1_r_1_reload),
    .din1(arg1_r_2_reload),
    .din2(arg1_r_3_reload),
    .din3(arg1_r_4_reload),
    .din4(arg1_r_5_reload),
    .din5(arg1_r_6_reload),
    .din6(trunc_ln55_1_reg_2107),
    .dout(tmp_6_fu_995_p8)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U156(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(sub_ln68_4_reg_2137),
    .dout(tmp_7_fu_1067_p7)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U157(
    .din0(arg1_r_2_reload),
    .din1(arg1_r_3_reload),
    .din2(arg1_r_4_reload),
    .din3(arg1_r_5_reload),
    .din4(arg1_r_6_reload),
    .din5(arg1_r_7_reload),
    .din6(trunc_ln55_1_reg_2107),
    .dout(tmp_8_fu_1083_p8)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U158(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_9_fu_1136_p5),
    .dout(tmp_9_fu_1136_p6)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U159(
    .din0(arg1_r_3_reload),
    .din1(arg1_r_4_reload),
    .din2(arg1_r_5_reload),
    .din3(arg1_r_6_reload),
    .din4(arg1_r_7_reload),
    .din5(arg1_r_8_reload),
    .din6(trunc_ln55_1_reg_2107),
    .dout(tmp_10_fu_1153_p8)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U160(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(sub_ln68_5_reg_2154),
    .dout(tmp_11_fu_1200_p5)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U161(
    .din0(arg1_r_4_reload),
    .din1(arg1_r_5_reload),
    .din2(arg1_r_6_reload),
    .din3(arg1_r_7_reload),
    .din4(arg1_r_8_reload),
    .din5(arg1_r_9_reload),
    .din6(trunc_ln55_1_reg_2107),
    .dout(tmp_12_fu_1214_p8)
);

fiat_25519_carry_mul_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U162(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(cmp95_185_fu_990_p2),
    .dout(tmp_13_fu_1437_p4)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129302_fu_160 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129302_fu_160 <= add_ln68_7_fu_1259_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1135303_fu_164 <= add59_1282313_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1135303_fu_164 <= add_ln68_12_fu_1302_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1307_fu_180 <= add59_1317_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1307_fu_180 <= add_ln68_43_fu_1742_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_128308_fu_184 <= add59_1_1209318_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1_128308_fu_184 <= add_ln68_38_fu_1682_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_246309_fu_188 <= add59_1_2229319_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1_246309_fu_188 <= add_ln68_34_fu_1634_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_364310_fu_192 <= add59_1_3320_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1_364310_fu_192 <= add_ln68_31_fu_1598_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_1_482311_fu_196 <= add59_1_4321_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_1_482311_fu_196 <= add_ln68_29_fu_1549_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_2153304_fu_168 <= add59_2300314_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_2153304_fu_168 <= add_ln68_17_fu_1351_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_3171305_fu_172 <= add59_3315_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_3171305_fu_172 <= add_ln68_22_fu_1431_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add129_4189306_fu_176 <= add59_4316_reload;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add129_4189306_fu_176 <= add_ln68_28_fu_1507_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln68_fu_676_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i1_fu_200 <= i1_2_fu_722_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i1_fu_200 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_676_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln67_reg_2171 <= icmp_ln67_fu_788_p2;
        icmp_ln68_1_reg_2142 <= icmp_ln68_1_fu_734_p2;
        icmp_ln68_2_reg_2148 <= icmp_ln68_2_fu_746_p2;
        icmp_ln68_3_reg_2159 <= icmp_ln68_3_fu_764_p2;
        icmp_ln68_4_reg_2165 <= icmp_ln68_4_fu_776_p2;
        sub_ln68_1_reg_2122 <= sub_ln68_1_fu_704_p2;
        sub_ln68_2_reg_2127 <= sub_ln68_2_fu_710_p2;
        sub_ln68_3_reg_2132 <= sub_ln68_3_fu_716_p2;
        sub_ln68_4_reg_2137 <= sub_ln68_4_fu_728_p2;
        sub_ln68_5_reg_2154 <= sub_ln68_5_fu_758_p2;
        sub_ln68_reg_2117 <= sub_ln68_fu_698_p2;
        trunc_ln55_1_reg_2107 <= trunc_ln55_1_fu_694_p1;
        trunc_ln55_reg_2102 <= trunc_ln55_fu_690_p1;
        trunc_ln68_reg_2090 <= trunc_ln68_fu_682_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln68_23_cast_reg_2081[31 : 0] <= zext_ln68_23_cast_fu_614_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129302_out_ap_vld = 1'b1;
    end else begin
        add129302_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1135303_out_ap_vld = 1'b1;
    end else begin
        add129_1135303_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1307_out_ap_vld = 1'b1;
    end else begin
        add129_1307_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_128308_out_ap_vld = 1'b1;
    end else begin
        add129_1_128308_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_246309_out_ap_vld = 1'b1;
    end else begin
        add129_1_246309_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_364310_out_ap_vld = 1'b1;
    end else begin
        add129_1_364310_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_1_482311_out_ap_vld = 1'b1;
    end else begin
        add129_1_482311_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_2153304_out_ap_vld = 1'b1;
    end else begin
        add129_2153304_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_3171305_out_ap_vld = 1'b1;
    end else begin
        add129_3171305_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add129_4189306_out_ap_vld = 1'b1;
    end else begin
        add129_4189306_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_676_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i1_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i1_1 = i1_fu_200;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add129302_out = add129302_fu_160;

assign add129_1135303_out = add129_1135303_fu_164;

assign add129_1307_out = add129_1307_fu_180;

assign add129_1_128308_out = add129_1_128308_fu_184;

assign add129_1_246309_out = add129_1_246309_fu_188;

assign add129_1_364310_out = add129_1_364310_fu_192;

assign add129_1_482311_out = add129_1_482311_fu_196;

assign add129_2153304_out = add129_2153304_fu_168;

assign add129_3171305_out = add129_3171305_fu_172;

assign add129_4189306_out = add129_4189306_fu_176;

assign add_ln67_fu_782_p2 = (zext_ln68_24_fu_686_p1 + 5'd9);

assign add_ln68_10_fu_1290_p2 = (add_ln68_9_fu_1284_p2 + mul_ln68_9_fu_490_p2);

assign add_ln68_11_fu_1296_p2 = (add_ln68_10_fu_1290_p2 + add_ln68_8_fu_1278_p2);

assign add_ln68_12_fu_1302_p2 = (add129_1135303_fu_164 + add_ln68_11_fu_1296_p2);

assign add_ln68_13_fu_1327_p2 = (mul_ln68_12_fu_502_p2 + mul_ln68_10_fu_494_p2);

assign add_ln68_14_fu_1333_p2 = (and_ln68_2_fu_1321_p2 + and_ln68_1_fu_1315_p2);

assign add_ln68_15_fu_1339_p2 = (add_ln68_14_fu_1333_p2 + mul_ln68_11_fu_498_p2);

assign add_ln68_16_fu_1345_p2 = (add_ln68_15_fu_1339_p2 + add_ln68_13_fu_1327_p2);

assign add_ln68_17_fu_1351_p2 = (add129_2153304_fu_168 + add_ln68_16_fu_1345_p2);

assign add_ln68_18_fu_1407_p2 = (mul_ln68_16_fu_518_p2 + mul_ln68_17_fu_522_p2);

assign add_ln68_19_fu_1413_p2 = (and_ln68_5_fu_1401_p2 + and_ln68_4_fu_1395_p2);

assign add_ln68_1_fu_740_p2 = (ap_sig_allocacmp_i1_1 + 4'd6);

assign add_ln68_20_fu_1419_p2 = (add_ln68_19_fu_1413_p2 + and_ln68_3_fu_1382_p2);

assign add_ln68_21_fu_1425_p2 = (add_ln68_20_fu_1419_p2 + add_ln68_18_fu_1407_p2);

assign add_ln68_22_fu_1431_p2 = (add129_3171305_fu_172 + add_ln68_21_fu_1425_p2);

assign add_ln68_23_fu_770_p2 = (zext_ln68_24_fu_686_p1 + 5'd8);

assign add_ln68_24_fu_1483_p2 = (mul_ln68_22_fu_542_p2 + and_ln68_6_fu_1452_p2);

assign add_ln68_25_fu_1489_p2 = (and_ln68_7_fu_1458_p2 + and_ln68_8_fu_1471_p2);

assign add_ln68_26_fu_1495_p2 = (add_ln68_25_fu_1489_p2 + and_ln68_9_fu_1477_p2);

assign add_ln68_27_fu_1501_p2 = (add_ln68_26_fu_1495_p2 + add_ln68_24_fu_1483_p2);

assign add_ln68_28_fu_1507_p2 = (add129_4189306_fu_176 + add_ln68_27_fu_1501_p2);

assign add_ln68_29_fu_1549_p2 = (and_ln68_10_fu_1543_p2 + add129_1_482311_fu_196);

assign add_ln68_2_fu_752_p2 = (zext_ln68_24_fu_686_p1 + 5'd7);

assign add_ln68_30_fu_1592_p2 = (and_ln68_12_fu_1586_p2 + and_ln68_11_fu_1580_p2);

assign add_ln68_31_fu_1598_p2 = (add129_1_364310_fu_192 + add_ln68_30_fu_1592_p2);

assign add_ln68_32_fu_1622_p2 = (and_ln68_15_fu_1616_p2 + and_ln68_13_fu_1604_p2);

assign add_ln68_33_fu_1628_p2 = (add_ln68_32_fu_1622_p2 + and_ln68_14_fu_1610_p2);

assign add_ln68_34_fu_1634_p2 = (add129_1_246309_fu_188 + add_ln68_33_fu_1628_p2);

assign add_ln68_35_fu_1664_p2 = (and_ln68_19_fu_1658_p2 + and_ln68_17_fu_1646_p2);

assign add_ln68_36_fu_1670_p2 = (and_ln68_18_fu_1652_p2 + and_ln68_16_fu_1640_p2);

assign add_ln68_37_fu_1676_p2 = (add_ln68_36_fu_1670_p2 + add_ln68_35_fu_1664_p2);

assign add_ln68_38_fu_1682_p2 = (add129_1_128308_fu_184 + add_ln68_37_fu_1676_p2);

assign add_ln68_39_fu_1718_p2 = (and_ln68_20_fu_1688_p2 + and_ln68_21_fu_1694_p2);

assign add_ln68_3_fu_1235_p2 = (mul_ln68_fu_454_p2 + mul_ln68_1_fu_458_p2);

assign add_ln68_40_fu_1724_p2 = (and_ln68_22_fu_1700_p2 + and_ln68_23_fu_1706_p2);

assign add_ln68_41_fu_1730_p2 = (add_ln68_40_fu_1724_p2 + and_ln68_24_fu_1712_p2);

assign add_ln68_42_fu_1736_p2 = (add_ln68_41_fu_1730_p2 + add_ln68_39_fu_1718_p2);

assign add_ln68_43_fu_1742_p2 = (add129_1307_fu_180 + add_ln68_42_fu_1736_p2);

assign add_ln68_4_fu_1241_p2 = (mul_ln68_2_fu_462_p2 + mul_ln68_3_fu_466_p2);

assign add_ln68_5_fu_1247_p2 = (add_ln68_4_fu_1241_p2 + mul_ln68_4_fu_470_p2);

assign add_ln68_6_fu_1253_p2 = (add_ln68_5_fu_1247_p2 + add_ln68_3_fu_1235_p2);

assign add_ln68_7_fu_1259_p2 = (add129302_fu_160 + add_ln68_6_fu_1253_p2);

assign add_ln68_8_fu_1278_p2 = (mul_ln68_5_fu_474_p2 + mul_ln68_6_fu_478_p2);

assign add_ln68_9_fu_1284_p2 = (mul_ln68_7_fu_482_p2 + and_ln68_fu_1272_p2);

assign and_ln67_1_fu_1175_p2 = (icmp_ln68_2_reg_2148 & cmp95_185_fu_990_p2);

assign and_ln67_2_fu_1357_p2 = (trunc_ln68_reg_2090 & icmp_ln68_3_reg_2159);

assign and_ln67_3_fu_1513_p2 = (trunc_ln68_reg_2090 & icmp_ln67_reg_2171);

assign and_ln67_4_fu_1555_p2 = (icmp_ln68_4_reg_2165 & cmp95_185_fu_990_p2);

assign and_ln67_fu_1106_p2 = (trunc_ln68_reg_2090 & icmp_ln68_1_reg_2142);

assign and_ln68_10_fu_1543_p2 = (select_ln68_13_fu_1536_p3 & mul_ln68_25_fu_554_p2);

assign and_ln68_11_fu_1580_p2 = (select_ln68_12_fu_1464_p3 & mul_ln68_26_fu_558_p2);

assign and_ln68_12_fu_1586_p2 = (select_ln68_13_fu_1536_p3 & mul_ln68_27_fu_562_p2);

assign and_ln68_13_fu_1604_p2 = (select_ln68_13_fu_1536_p3 & mul_ln68_28_fu_566_p2);

assign and_ln68_14_fu_1610_p2 = (select_ln68_11_fu_1388_p3 & mul_ln68_29_fu_570_p2);

assign and_ln68_15_fu_1616_p2 = (select_ln68_12_fu_1464_p3 & mul_ln68_30_fu_574_p2);

assign and_ln68_16_fu_1640_p2 = (select_ln68_13_fu_1536_p3 & mul_ln68_31_fu_578_p2);

assign and_ln68_17_fu_1646_p2 = (select_ln68_11_fu_1388_p3 & mul_ln68_32_fu_582_p2);

assign and_ln68_18_fu_1652_p2 = (select_ln68_12_fu_1464_p3 & mul_ln68_33_fu_586_p2);

assign and_ln68_19_fu_1658_p2 = (select_ln68_10_fu_1308_p3 & mul_ln68_34_fu_590_p2);

assign and_ln68_1_fu_1315_p2 = (select_ln68_10_fu_1308_p3 & mul_ln68_13_fu_506_p2);

assign and_ln68_20_fu_1688_p2 = (select_ln68_9_fu_1265_p3 & mul_ln68_35_fu_594_p2);

assign and_ln68_21_fu_1694_p2 = (select_ln68_10_fu_1308_p3 & mul_ln68_36_fu_598_p2);

assign and_ln68_22_fu_1700_p2 = (select_ln68_12_fu_1464_p3 & mul_ln68_37_fu_602_p2);

assign and_ln68_23_fu_1706_p2 = (select_ln68_13_fu_1536_p3 & mul_ln68_38_fu_606_p2);

assign and_ln68_24_fu_1712_p2 = (select_ln68_11_fu_1388_p3 & mul_ln68_39_fu_610_p2);

assign and_ln68_2_fu_1321_p2 = (select_ln68_9_fu_1265_p3 & mul_ln68_14_fu_510_p2);

assign and_ln68_3_fu_1382_p2 = (select_ln68_9_fu_1265_p3 & mul_ln68_15_fu_514_p2);

assign and_ln68_4_fu_1395_p2 = (select_ln68_11_fu_1388_p3 & mul_ln68_18_fu_526_p2);

assign and_ln68_5_fu_1401_p2 = (select_ln68_10_fu_1308_p3 & mul_ln68_19_fu_530_p2);

assign and_ln68_6_fu_1452_p2 = (select_ln68_9_fu_1265_p3 & mul_ln68_20_fu_534_p2);

assign and_ln68_7_fu_1458_p2 = (select_ln68_11_fu_1388_p3 & mul_ln68_21_fu_538_p2);

assign and_ln68_8_fu_1471_p2 = (select_ln68_12_fu_1464_p3 & mul_ln68_23_fu_546_p2);

assign and_ln68_9_fu_1477_p2 = (select_ln68_10_fu_1308_p3 & mul_ln68_24_fu_550_p2);

assign and_ln68_fu_1272_p2 = (select_ln68_9_fu_1265_p3 & mul_ln68_8_fu_486_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cmp95_185_fu_990_p2 = (trunc_ln68_reg_2090 ^ 1'd1);

assign i1_2_fu_722_p2 = (ap_sig_allocacmp_i1_1 + 4'd5);

assign icmp_ln67_fu_788_p2 = ((add_ln67_fu_782_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_1_fu_734_p2 = ((i1_2_fu_722_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_746_p2 = ((add_ln68_1_fu_740_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_764_p2 = ((add_ln68_2_fu_752_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_776_p2 = ((add_ln68_23_fu_770_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_676_p2 = ((ap_sig_allocacmp_i1_1 < 4'd10) ? 1'b1 : 1'b0);

assign mul_ln68_10_fu_494_p0 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_10_fu_494_p1 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_11_fu_498_p0 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_11_fu_498_p1 = zext_ln68_5_fu_983_p1;

assign mul_ln68_12_fu_502_p0 = zext_ln68_3_fu_934_p1;

assign mul_ln68_12_fu_502_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_13_fu_506_p0 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_13_fu_506_p1 = zext_ln68_14_fu_1146_p1;

assign mul_ln68_14_fu_510_p0 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_14_fu_510_p1 = zext_ln68_11_fu_1077_p1;

assign mul_ln68_15_fu_514_p0 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_15_fu_514_p1 = zext_ln68_13_fu_1124_p1;

assign mul_ln68_16_fu_518_p0 = zext_ln68_4_fu_966_p1;

assign mul_ln68_16_fu_518_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_17_fu_522_p0 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_17_fu_522_p1 = zext_ln68_10_fu_1061_p1;

assign mul_ln68_18_fu_526_p0 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_18_fu_526_p1 = zext_ln68_19_fu_1375_p1;

assign mul_ln68_19_fu_530_p0 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_19_fu_530_p1 = zext_ln68_16_fu_1194_p1;

assign mul_ln68_1_fu_458_p0 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_1_fu_458_p1 = mul_ln68_1_fu_458_p10;

assign mul_ln68_1_fu_458_p10 = tmp_1_fu_878_p11;

assign mul_ln68_20_fu_534_p0 = zext_ln68_11_fu_1077_p1;

assign mul_ln68_20_fu_534_p1 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_21_fu_538_p0 = zext_ln68_17_fu_1208_p1;

assign mul_ln68_21_fu_538_p1 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_22_fu_542_p0 = zext_ln68_5_fu_983_p1;

assign mul_ln68_22_fu_542_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_23_fu_546_p0 = zext_ln68_20_fu_1445_p1;

assign mul_ln68_23_fu_546_p1 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_24_fu_550_p0 = zext_ln68_14_fu_1146_p1;

assign mul_ln68_24_fu_550_p1 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_25_fu_554_p0 = zext_ln68_21_fu_1529_p1;

assign mul_ln68_25_fu_554_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_26_fu_558_p0 = zext_ln68_20_fu_1445_p1;

assign mul_ln68_26_fu_558_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_27_fu_562_p0 = zext_ln68_23_cast_reg_2081;

assign mul_ln68_27_fu_562_p1 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_28_fu_566_p0 = zext_ln68_21_fu_1529_p1;

assign mul_ln68_28_fu_566_p1 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_29_fu_570_p0 = zext_ln68_19_fu_1375_p1;

assign mul_ln68_29_fu_570_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_2_fu_462_p0 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_2_fu_462_p1 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_30_fu_574_p0 = zext_ln68_22_fu_1574_p1;

assign mul_ln68_30_fu_574_p1 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_31_fu_578_p0 = zext_ln68_23_cast_reg_2081;

assign mul_ln68_31_fu_578_p1 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_32_fu_582_p0 = zext_ln68_17_fu_1208_p1;

assign mul_ln68_32_fu_582_p1 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_33_fu_586_p0 = zext_ln68_20_fu_1445_p1;

assign mul_ln68_33_fu_586_p1 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_34_fu_590_p0 = zext_ln68_14_fu_1146_p1;

assign mul_ln68_34_fu_590_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_35_fu_594_p0 = zext_ln68_13_fu_1124_p1;

assign mul_ln68_35_fu_594_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_36_fu_598_p0 = zext_ln68_16_fu_1194_p1;

assign mul_ln68_36_fu_598_p1 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_37_fu_602_p0 = zext_ln68_22_fu_1574_p1;

assign mul_ln68_37_fu_602_p1 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_38_fu_606_p0 = zext_ln68_21_fu_1529_p1;

assign mul_ln68_38_fu_606_p1 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_39_fu_610_p0 = zext_ln68_19_fu_1375_p1;

assign mul_ln68_39_fu_610_p1 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_3_fu_466_p0 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_3_fu_466_p1 = zext_ln68_5_fu_983_p1;

assign mul_ln68_4_fu_470_p0 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_4_fu_470_p1 = zext_ln68_3_fu_934_p1;

assign mul_ln68_5_fu_474_p0 = mul_ln68_5_fu_474_p00;

assign mul_ln68_5_fu_474_p00 = select_ln68_fu_901_p3;

assign mul_ln68_5_fu_474_p1 = zext_ln68_fu_840_p1;

assign mul_ln68_6_fu_478_p0 = zext_ln68_6_fu_1006_p1;

assign mul_ln68_6_fu_478_p1 = mul_ln68_6_fu_478_p10;

assign mul_ln68_6_fu_478_p10 = select_ln68_2_fu_1030_p3;

assign mul_ln68_7_fu_482_p0 = zext_ln68_15_fu_1164_p1;

assign mul_ln68_7_fu_482_p1 = zext_ln68_10_fu_1061_p1;

assign mul_ln68_8_fu_486_p0 = zext_ln68_18_fu_1225_p1;

assign mul_ln68_8_fu_486_p1 = zext_ln68_13_fu_1124_p1;

assign mul_ln68_9_fu_490_p0 = zext_ln68_12_fu_1094_p1;

assign mul_ln68_9_fu_490_p1 = zext_ln68_4_fu_966_p1;

assign mul_ln68_fu_454_p0 = mul_ln68_fu_454_p00;

assign mul_ln68_fu_454_p00 = tmp_s_fu_854_p12;

assign mul_ln68_fu_454_p1 = zext_ln68_fu_840_p1;

assign select_ln68_10_fu_1308_p3 = ((icmp_ln68_2_reg_2148[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_11_fu_1388_p3 = ((icmp_ln68_3_reg_2159[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_12_fu_1464_p3 = ((icmp_ln68_4_reg_2165[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_13_fu_1536_p3 = ((icmp_ln67_reg_2171[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_1_fu_959_p3 = ((trunc_ln68_reg_2090[0:0] == 1'b1) ? shl_ln68_1_fu_953_p2 : tmp_4_fu_940_p9);

assign select_ln68_2_fu_1030_p3 = ((trunc_ln68_reg_2090[0:0] == 1'b1) ? tmp_3_fu_918_p10 : shl_ln68_2_fu_1024_p2);

assign select_ln68_3_fu_1054_p3 = ((trunc_ln68_reg_2090[0:0] == 1'b1) ? tmp_5_fu_972_p8 : shl_ln68_3_fu_1048_p2);

assign select_ln68_4_fu_1116_p3 = ((and_ln67_fu_1106_p2[0:0] == 1'b1) ? shl_ln68_4_fu_1110_p2 : tmp_7_fu_1067_p7);

assign select_ln68_5_fu_1186_p3 = ((and_ln67_1_fu_1175_p2[0:0] == 1'b1) ? shl_ln68_5_fu_1180_p2 : tmp_9_fu_1136_p6);

assign select_ln68_6_fu_1367_p3 = ((and_ln67_2_fu_1357_p2[0:0] == 1'b1) ? shl_ln68_6_fu_1361_p2 : tmp_11_fu_1200_p5);

assign select_ln68_7_fu_1522_p3 = ((and_ln67_3_fu_1513_p2[0:0] == 1'b1) ? shl_ln68_7_fu_1517_p2 : arg2_r_reload);

assign select_ln68_8_fu_1566_p3 = ((and_ln67_4_fu_1555_p2[0:0] == 1'b1) ? shl_ln68_8_fu_1560_p2 : tmp_13_fu_1437_p4);

assign select_ln68_9_fu_1265_p3 = ((icmp_ln68_1_reg_2142[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_fu_901_p3 = ((trunc_ln68_reg_2090[0:0] == 1'b1) ? shl_ln68_fu_895_p2 : tmp_1_fu_878_p11);

assign shl_ln68_1_fu_953_p2 = tmp_4_fu_940_p9 << 32'd1;

assign shl_ln68_2_fu_1024_p2 = tmp_3_fu_918_p10 << 32'd1;

assign shl_ln68_3_fu_1048_p2 = tmp_5_fu_972_p8 << 32'd1;

assign shl_ln68_4_fu_1110_p2 = tmp_7_fu_1067_p7 << 32'd1;

assign shl_ln68_5_fu_1180_p2 = tmp_9_fu_1136_p6 << 32'd1;

assign shl_ln68_6_fu_1361_p2 = tmp_11_fu_1200_p5 << 32'd1;

assign shl_ln68_7_fu_1517_p2 = arg2_r_reload << 32'd1;

assign shl_ln68_8_fu_1560_p2 = tmp_13_fu_1437_p4 << 32'd1;

assign shl_ln68_fu_895_p2 = tmp_1_fu_878_p11 << 32'd1;

assign sub_ln68_1_fu_704_p2 = ($signed(4'd8) - $signed(ap_sig_allocacmp_i1_1));

assign sub_ln68_2_fu_710_p2 = ($signed(3'd6) - $signed(trunc_ln55_1_fu_694_p1));

assign sub_ln68_3_fu_716_p2 = ($signed(3'd5) - $signed(trunc_ln55_1_fu_694_p1));

assign sub_ln68_4_fu_728_p2 = ($signed(3'd4) - $signed(trunc_ln55_1_fu_694_p1));

assign sub_ln68_5_fu_758_p2 = ($signed(2'd2) - $signed(trunc_ln55_fu_690_p1));

assign sub_ln68_fu_698_p2 = ($signed(4'd9) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_3_fu_918_p9 = (trunc_ln55_1_reg_2107 ^ 3'd7);

assign tmp_9_fu_1136_p5 = (trunc_ln55_reg_2102 ^ 2'd3);

assign trunc_ln55_1_fu_694_p1 = ap_sig_allocacmp_i1_1[2:0];

assign trunc_ln55_fu_690_p1 = ap_sig_allocacmp_i1_1[1:0];

assign trunc_ln68_fu_682_p1 = ap_sig_allocacmp_i1_1[0:0];

assign zext_ln68_10_fu_1061_p1 = select_ln68_3_fu_1054_p3;

assign zext_ln68_11_fu_1077_p1 = tmp_7_fu_1067_p7;

assign zext_ln68_12_fu_1094_p1 = tmp_8_fu_1083_p8;

assign zext_ln68_13_fu_1124_p1 = select_ln68_4_fu_1116_p3;

assign zext_ln68_14_fu_1146_p1 = tmp_9_fu_1136_p6;

assign zext_ln68_15_fu_1164_p1 = tmp_10_fu_1153_p8;

assign zext_ln68_16_fu_1194_p1 = select_ln68_5_fu_1186_p3;

assign zext_ln68_17_fu_1208_p1 = tmp_11_fu_1200_p5;

assign zext_ln68_18_fu_1225_p1 = tmp_12_fu_1214_p8;

assign zext_ln68_19_fu_1375_p1 = select_ln68_6_fu_1367_p3;

assign zext_ln68_20_fu_1445_p1 = tmp_13_fu_1437_p4;

assign zext_ln68_21_fu_1529_p1 = select_ln68_7_fu_1522_p3;

assign zext_ln68_22_fu_1574_p1 = select_ln68_8_fu_1566_p3;

assign zext_ln68_23_cast_fu_614_p1 = zext_ln68_23;

assign zext_ln68_24_fu_686_p1 = ap_sig_allocacmp_i1_1;

assign zext_ln68_3_fu_934_p1 = tmp_3_fu_918_p10;

assign zext_ln68_4_fu_966_p1 = select_ln68_1_fu_959_p3;

assign zext_ln68_5_fu_983_p1 = tmp_5_fu_972_p8;

assign zext_ln68_6_fu_1006_p1 = tmp_6_fu_995_p8;

assign zext_ln68_9_fu_1042_p1 = tmp_4_fu_940_p9;

assign zext_ln68_fu_840_p1 = tmp_2_fu_829_p8;

always @ (posedge ap_clk) begin
    zext_ln68_23_cast_reg_2081[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5
