

================================================================
== Vitis HLS Report for 'fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1'
================================================================
* Date:           Thu May  9 14:37:22 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_26 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.273 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        7|        7|  70.000 ns|  70.000 ns|    7|    7|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_39_1  |        5|        5|         2|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.35>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add65325 = alloca i32 1"   --->   Operation 5 'alloca' 'add65325' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add65_1157326 = alloca i32 1"   --->   Operation 6 'alloca' 'add65_1157326' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add65_1327 = alloca i32 1"   --->   Operation 7 'alloca' 'add65_1327' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add65_1_1101328 = alloca i32 1"   --->   Operation 8 'alloca' 'add65_1_1101328' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add65_2329 = alloca i32 1"   --->   Operation 9 'alloca' 'add65_2329' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add65_2_178330 = alloca i32 1"   --->   Operation 10 'alloca' 'add65_2_178330' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add65_3331 = alloca i32 1"   --->   Operation 11 'alloca' 'add65_3331' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add65_3_155332 = alloca i32 1"   --->   Operation 12 'alloca' 'add65_3_155332' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add65_4333 = alloca i32 1"   --->   Operation 13 'alloca' 'add65_4333' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add65_4_132334 = alloca i32 1"   --->   Operation 14 'alloca' 'add65_4_132334' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 15 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 16 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 17 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 18 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 19 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 20 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 21 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 22 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 23 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 24 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 25 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 26 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 27 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 28 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 29 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 30 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 31 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 32 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 33 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 34 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 35 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 9, i5 %i1"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_4_132334"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_4333"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_3_155332"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_3331"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_2_178330"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_2329"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_1_1101328"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_1327"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_1157326"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65325"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31"   --->   Operation 47 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%i1_1 = load i5 %i1" [d5.cpp:39]   --->   Operation 48 'load' 'i1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_17 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i1_1, i32 4" [d5.cpp:39]   --->   Operation 49 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %tmp_17, void %for.body31.split, void %for.end141.exitStub" [d5.cpp:39]   --->   Operation 50 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i5 %i1_1" [d5.cpp:39]   --->   Operation 51 'trunc' 'trunc_ln39' <Predicate = (!tmp_17)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln39_2 = trunc i5 %i1_1" [d5.cpp:39]   --->   Operation 52 'trunc' 'trunc_ln39_2' <Predicate = (!tmp_17)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.75ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 53 'mux' 'tmp' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.78ns)   --->   "%add_ln51 = add i5 %i1_1, i5 1" [d5.cpp:51]   --->   Operation 54 'add' 'add_ln51' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.78ns)   --->   "%icmp_ln51 = icmp_sgt  i5 %add_ln51, i5 9" [d5.cpp:51]   --->   Operation 55 'icmp' 'icmp_ln51' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.36ns)   --->   "%select_ln52 = select i1 %icmp_ln51, i32 38, i32 19" [d5.cpp:52]   --->   Operation 56 'select' 'select_ln52' <Predicate = (!tmp_17)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.79ns)   --->   "%sub_ln52 = sub i4 2, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 57 'sub' 'sub_ln52' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.75ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_9_reload_read, i4 %sub_ln52" [d5.cpp:67]   --->   Operation 58 'mux' 'tmp_1' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 59 '%mul_ln52 = mul i32 %tmp_1, i32 %select_ln52'
ST_1 : Operation 59 [1/1] (2.89ns)   --->   "%mul_ln52 = mul i32 %tmp_1, i32 %select_ln52" [d5.cpp:52]   --->   Operation 59 'mul' 'mul_ln52' <Predicate = (!tmp_17)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.75ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 60 'mux' 'tmp_2' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.79ns)   --->   "%sub_ln52_1 = sub i4 1, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 61 'sub' 'sub_ln52_1' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.75ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 %arg2_r_reload_read, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_1" [d5.cpp:52]   --->   Operation 62 'mux' 'tmp_3' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 63 '%mul_ln52_1 = mul i32 %tmp_3, i32 19'
ST_1 : Operation 63 [1/1] (2.65ns)   --->   "%mul_ln52_1 = mul i32 %tmp_3, i32 19" [d5.cpp:52]   --->   Operation 63 'mul' 'mul_ln52_1' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.78ns)   --->   "%add_ln51_1 = add i5 %i1_1, i5 3" [d5.cpp:51]   --->   Operation 64 'add' 'add_ln51_1' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.78ns)   --->   "%icmp_ln51_1 = icmp_sgt  i5 %add_ln51_1, i5 9" [d5.cpp:51]   --->   Operation 65 'icmp' 'icmp_ln51_1' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.36ns)   --->   "%select_ln52_1 = select i1 %icmp_ln51_1, i32 38, i32 19" [d5.cpp:52]   --->   Operation 66 'select' 'select_ln52_1' <Predicate = (!tmp_17)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%sub_ln52_2 = sub i4 0, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 67 'sub' 'sub_ln52_2' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.75ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_2" [d5.cpp:52]   --->   Operation 68 'mux' 'tmp_4' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 69 '%mul_ln52_2 = mul i32 %tmp_4, i32 %select_ln52_1'
ST_1 : Operation 69 [1/1] (2.89ns)   --->   "%mul_ln52_2 = mul i32 %tmp_4, i32 %select_ln52_1" [d5.cpp:52]   --->   Operation 69 'mul' 'mul_ln52_2' <Predicate = (!tmp_17)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 70 '%mul_ln52_3 = mul i32 %tmp_1, i32 19'
ST_1 : Operation 70 [1/1] (2.65ns)   --->   "%mul_ln52_3 = mul i32 %tmp_1, i32 19" [d5.cpp:52]   --->   Operation 70 'mul' 'mul_ln52_3' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.35ns)   --->   "%xor_ln52 = xor i4 %trunc_ln39, i4 15" [d5.cpp:52]   --->   Operation 71 'xor' 'xor_ln52' <Predicate = (!tmp_17)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.75ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %xor_ln52" [d5.cpp:52]   --->   Operation 72 'mux' 'tmp_5' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 73 '%mul_ln52_4 = mul i32 %tmp_5, i32 19'
ST_1 : Operation 73 [1/1] (2.65ns)   --->   "%mul_ln52_4 = mul i32 %tmp_5, i32 19" [d5.cpp:52]   --->   Operation 73 'mul' 'mul_ln52_4' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.78ns)   --->   "%add_ln51_2 = add i5 %i1_1, i5 5" [d5.cpp:51]   --->   Operation 74 'add' 'add_ln51_2' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.78ns)   --->   "%icmp_ln51_2 = icmp_sgt  i5 %add_ln51_2, i5 9" [d5.cpp:51]   --->   Operation 75 'icmp' 'icmp_ln51_2' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.36ns)   --->   "%select_ln52_2 = select i1 %icmp_ln51_2, i32 38, i32 19" [d5.cpp:52]   --->   Operation 76 'select' 'select_ln52_2' <Predicate = (!tmp_17)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%sub_ln52_3 = sub i4 14, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 77 'sub' 'sub_ln52_3' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.75ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_3" [d5.cpp:52]   --->   Operation 78 'mux' 'tmp_6' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 79 '%mul_ln52_5 = mul i32 %tmp_6, i32 %select_ln52_2'
ST_1 : Operation 79 [1/1] (2.89ns)   --->   "%mul_ln52_5 = mul i32 %tmp_6, i32 %select_ln52_2" [d5.cpp:52]   --->   Operation 79 'mul' 'mul_ln52_5' <Predicate = (!tmp_17)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 80 '%mul_ln52_6 = mul i32 %tmp_4, i32 19'
ST_1 : Operation 80 [1/1] (2.65ns)   --->   "%mul_ln52_6 = mul i32 %tmp_4, i32 19" [d5.cpp:52]   --->   Operation 80 'mul' 'mul_ln52_6' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%sub_ln52_4 = sub i4 13, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 81 'sub' 'sub_ln52_4' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.75ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_4" [d5.cpp:52]   --->   Operation 82 'mux' 'tmp_7' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 83 '%mul_ln52_7 = mul i32 %tmp_7, i32 19'
ST_1 : Operation 83 [1/1] (2.65ns)   --->   "%mul_ln52_7 = mul i32 %tmp_7, i32 19" [d5.cpp:52]   --->   Operation 83 'mul' 'mul_ln52_7' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.78ns)   --->   "%add_ln51_3 = add i5 %i1_1, i5 7" [d5.cpp:51]   --->   Operation 84 'add' 'add_ln51_3' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.78ns)   --->   "%icmp_ln51_3 = icmp_ugt  i5 %add_ln51_3, i5 9" [d5.cpp:51]   --->   Operation 85 'icmp' 'icmp_ln51_3' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.36ns)   --->   "%select_ln52_3 = select i1 %icmp_ln51_3, i32 38, i32 19" [d5.cpp:52]   --->   Operation 86 'select' 'select_ln52_3' <Predicate = (!tmp_17)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%sub_ln52_5 = sub i4 12, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 87 'sub' 'sub_ln52_5' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.75ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_5" [d5.cpp:52]   --->   Operation 88 'mux' 'tmp_8' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.52ns)   --->   Input mux for Operation 89 '%mul_ln52_8 = mul i32 %tmp_8, i32 %select_ln52_3'
ST_1 : Operation 89 [1/1] (2.89ns)   --->   "%mul_ln52_8 = mul i32 %tmp_8, i32 %select_ln52_3" [d5.cpp:52]   --->   Operation 89 'mul' 'mul_ln52_8' <Predicate = (!tmp_17)> <Delay = 2.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 90 '%mul_ln52_9 = mul i32 %tmp_6, i32 19'
ST_1 : Operation 90 [1/1] (2.65ns)   --->   "%mul_ln52_9 = mul i32 %tmp_6, i32 19" [d5.cpp:52]   --->   Operation 90 'mul' 'mul_ln52_9' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%sub_ln52_6 = sub i4 11, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 91 'sub' 'sub_ln52_6' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.75ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_6" [d5.cpp:52]   --->   Operation 92 'mux' 'tmp_9' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 93 '%mul_ln52_10 = mul i32 %tmp_9, i32 19'
ST_1 : Operation 93 [1/1] (2.65ns)   --->   "%mul_ln52_10 = mul i32 %tmp_9, i32 19" [d5.cpp:52]   --->   Operation 93 'mul' 'mul_ln52_10' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.79ns)   --->   "%sub_ln52_7 = sub i4 10, i4 %trunc_ln39" [d5.cpp:52]   --->   Operation 94 'sub' 'sub_ln52_7' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.75ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_7" [d5.cpp:52]   --->   Operation 95 'mux' 'tmp_s' <Predicate = (!tmp_17)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 96 '%mul_ln52_11 = mul i32 %tmp_s, i32 38'
ST_1 : Operation 96 [1/1] (2.65ns)   --->   "%mul_ln52_11 = mul i32 %tmp_s, i32 38" [d5.cpp:52]   --->   Operation 96 'mul' 'mul_ln52_11' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 97 '%mul_ln52_12 = mul i32 %tmp_8, i32 19'
ST_1 : Operation 97 [1/1] (2.65ns)   --->   "%mul_ln52_12 = mul i32 %tmp_8, i32 19" [d5.cpp:52]   --->   Operation 97 'mul' 'mul_ln52_12' <Predicate = (!tmp_17)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%sub_ln67 = sub i4 9, i4 %trunc_ln39" [d5.cpp:67]   --->   Operation 98 'sub' 'sub_ln67' <Predicate = (!tmp_17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.78ns)   --->   "%icmp_ln66 = icmp_slt  i5 %add_ln51, i5 10" [d5.cpp:66]   --->   Operation 99 'icmp' 'icmp_ln66' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.67ns)   --->   "%sub_ln67_1 = sub i3 0, i3 %trunc_ln39_2" [d5.cpp:67]   --->   Operation 100 'sub' 'sub_ln67_1' <Predicate = (!tmp_17)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.78ns)   --->   "%icmp_ln66_1 = icmp_slt  i5 %add_ln51_1, i5 10" [d5.cpp:66]   --->   Operation 101 'icmp' 'icmp_ln66_1' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.67ns)   --->   "%sub_ln67_2 = sub i3 6, i3 %trunc_ln39_2" [d5.cpp:67]   --->   Operation 102 'sub' 'sub_ln67_2' <Predicate = (!tmp_17)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.78ns)   --->   "%icmp_ln66_2 = icmp_slt  i5 %add_ln51_2, i5 10" [d5.cpp:66]   --->   Operation 103 'icmp' 'icmp_ln66_2' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.78ns)   --->   "%icmp_ln66_3 = icmp_ult  i5 %add_ln51_3, i5 10" [d5.cpp:66]   --->   Operation 104 'icmp' 'icmp_ln66_3' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.78ns)   --->   "%add_ln39 = add i5 %i1_1, i5 30" [d5.cpp:39]   --->   Operation 105 'add' 'add_ln39' <Predicate = (!tmp_17)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.42ns)   --->   "%store_ln39 = store i5 %add_ln39, i5 %i1" [d5.cpp:39]   --->   Operation 106 'store' 'store_ln39' <Predicate = (!tmp_17)> <Delay = 0.42>
ST_1 : Operation 312 [1/1] (0.00ns)   --->   "%add65325_load_1 = load i64 %add65325"   --->   Operation 312 'load' 'add65325_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 313 [1/1] (0.00ns)   --->   "%add65_1157326_load_1 = load i64 %add65_1157326"   --->   Operation 313 'load' 'add65_1157326_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 314 [1/1] (0.00ns)   --->   "%add65_1327_load_1 = load i64 %add65_1327"   --->   Operation 314 'load' 'add65_1327_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 315 [1/1] (0.00ns)   --->   "%add65_1_1101328_load_1 = load i64 %add65_1_1101328"   --->   Operation 315 'load' 'add65_1_1101328_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 316 [1/1] (0.00ns)   --->   "%add65_2329_load_1 = load i64 %add65_2329"   --->   Operation 316 'load' 'add65_2329_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 317 [1/1] (0.00ns)   --->   "%add65_2_178330_load_1 = load i64 %add65_2_178330"   --->   Operation 317 'load' 'add65_2_178330_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 318 [1/1] (0.00ns)   --->   "%add65_3331_load_1 = load i64 %add65_3331"   --->   Operation 318 'load' 'add65_3331_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 319 [1/1] (0.00ns)   --->   "%add65_3_155332_load_1 = load i64 %add65_3_155332"   --->   Operation 319 'load' 'add65_3_155332_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 320 [1/1] (0.00ns)   --->   "%add65_4333_load_1 = load i64 %add65_4333"   --->   Operation 320 'load' 'add65_4333_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 321 [1/1] (0.00ns)   --->   "%add65_4_132334_load_1 = load i64 %add65_4_132334"   --->   Operation 321 'load' 'add65_4_132334_load_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 322 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_4_132334_out, i64 %add65_4_132334_load_1"   --->   Operation 322 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 323 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_4333_out, i64 %add65_4333_load_1"   --->   Operation 323 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 324 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_3_155332_out, i64 %add65_3_155332_load_1"   --->   Operation 324 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 325 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_3331_out, i64 %add65_3331_load_1"   --->   Operation 325 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 326 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_2_178330_out, i64 %add65_2_178330_load_1"   --->   Operation 326 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 327 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_2329_out, i64 %add65_2329_load_1"   --->   Operation 327 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 328 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_1_1101328_out, i64 %add65_1_1101328_load_1"   --->   Operation 328 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 329 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_1327_out, i64 %add65_1327_load_1"   --->   Operation 329 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 330 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_1157326_out, i64 %add65_1157326_load_1"   --->   Operation 330 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 331 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65325_out, i64 %add65325_load_1"   --->   Operation 331 'write' 'write_ln0' <Predicate = (tmp_17)> <Delay = 0.00>
ST_1 : Operation 332 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 332 'ret' 'ret_ln0' <Predicate = (tmp_17)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.27>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%add65325_load = load i64 %add65325" [d5.cpp:67]   --->   Operation 107 'load' 'add65325_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%add65_1157326_load = load i64 %add65_1157326" [d5.cpp:67]   --->   Operation 108 'load' 'add65_1157326_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%add65_1327_load = load i64 %add65_1327" [d5.cpp:67]   --->   Operation 109 'load' 'add65_1327_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%add65_1_1101328_load = load i64 %add65_1_1101328" [d5.cpp:67]   --->   Operation 110 'load' 'add65_1_1101328_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%add65_2329_load = load i64 %add65_2329" [d5.cpp:67]   --->   Operation 111 'load' 'add65_2329_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%add65_2_178330_load = load i64 %add65_2_178330" [d5.cpp:67]   --->   Operation 112 'load' 'add65_2_178330_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%add65_3331_load = load i64 %add65_3331" [d5.cpp:67]   --->   Operation 113 'load' 'add65_3331_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%add65_3_155332_load = load i64 %add65_3_155332" [d5.cpp:67]   --->   Operation 114 'load' 'add65_3_155332_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%add65_4333_load = load i64 %add65_4333" [d5.cpp:67]   --->   Operation 115 'load' 'add65_4333_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%add65_4_132334_load = load i64 %add65_4_132334" [d5.cpp:67]   --->   Operation 116 'load' 'add65_4_132334_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%specpipeline_ln41 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d5.cpp:41]   --->   Operation 117 'specpipeline' 'specpipeline_ln41' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%speclooptripcount_ln39 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d5.cpp:39]   --->   Operation 118 'speclooptripcount' 'speclooptripcount_ln39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d5.cpp:39]   --->   Operation 119 'specloopname' 'specloopname_ln39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%trunc_ln39_1 = trunc i5 %i1_1" [d5.cpp:39]   --->   Operation 120 'trunc' 'trunc_ln39_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i32 %tmp" [d5.cpp:52]   --->   Operation 121 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i32 %mul_ln52" [d5.cpp:52]   --->   Operation 122 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i32 %tmp_2" [d5.cpp:52]   --->   Operation 123 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.78ns)   --->   "%empty = add i5 %i1_1, i5 2" [d5.cpp:39]   --->   Operation 124 'add' 'empty' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i32 %mul_ln52_1" [d5.cpp:52]   --->   Operation 125 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.78ns)   --->   "%icmp_ln52 = icmp_sgt  i5 %empty, i5 9" [d5.cpp:52]   --->   Operation 126 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i32 %mul_ln52_2" [d5.cpp:52]   --->   Operation 127 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i32 %mul_ln52_3" [d5.cpp:52]   --->   Operation 128 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.78ns)   --->   "%empty_22 = add i5 %i1_1, i5 4" [d5.cpp:39]   --->   Operation 129 'add' 'empty_22' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i32 %mul_ln52_4" [d5.cpp:52]   --->   Operation 130 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_sgt  i5 %empty_22, i5 9" [d5.cpp:52]   --->   Operation 131 'icmp' 'icmp_ln52_1' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i32 %mul_ln52_5" [d5.cpp:52]   --->   Operation 132 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln52_8 = zext i32 %mul_ln52_6" [d5.cpp:52]   --->   Operation 133 'zext' 'zext_ln52_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.78ns)   --->   "%empty_23 = add i5 %i1_1, i5 6" [d5.cpp:39]   --->   Operation 134 'add' 'empty_23' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln52_9 = zext i32 %mul_ln52_7" [d5.cpp:52]   --->   Operation 135 'zext' 'zext_ln52_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.78ns)   --->   "%icmp_ln52_2 = icmp_sgt  i5 %empty_23, i5 9" [d5.cpp:52]   --->   Operation 136 'icmp' 'icmp_ln52_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln52_10 = zext i32 %mul_ln52_8" [d5.cpp:52]   --->   Operation 137 'zext' 'zext_ln52_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln52_11 = zext i32 %mul_ln52_9" [d5.cpp:52]   --->   Operation 138 'zext' 'zext_ln52_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.78ns)   --->   "%empty_24 = add i5 %i1_1, i5 8" [d5.cpp:39]   --->   Operation 139 'add' 'empty_24' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln52_12 = zext i32 %mul_ln52_10" [d5.cpp:52]   --->   Operation 140 'zext' 'zext_ln52_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.78ns)   --->   "%icmp_ln52_3 = icmp_ugt  i5 %empty_24, i5 9" [d5.cpp:52]   --->   Operation 141 'icmp' 'icmp_ln52_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln52_13 = zext i32 %mul_ln52_11" [d5.cpp:52]   --->   Operation 142 'zext' 'zext_ln52_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln52_14 = zext i32 %mul_ln52_12" [d5.cpp:52]   --->   Operation 143 'zext' 'zext_ln52_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 144 [1/1] (0.77ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i4 %sub_ln67" [d5.cpp:67]   --->   Operation 144 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln67 = zext i32 %tmp_10" [d5.cpp:67]   --->   Operation 145 'zext' 'zext_ln67' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 146 [1/1] (0.72ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i3 %sub_ln67_1" [d5.cpp:67]   --->   Operation 146 'mux' 'tmp_11' <Predicate = true> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node select_ln67)   --->   "%shl_ln67 = shl i32 %tmp_11, i32 1" [d5.cpp:67]   --->   Operation 147 'shl' 'shl_ln67' <Predicate = (icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 148 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln67 = select i1 %icmp_ln66, i32 %shl_ln67, i32 %tmp_11" [d5.cpp:67]   --->   Operation 148 'select' 'select_ln67' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln67_1 = zext i32 %select_ln67" [d5.cpp:67]   --->   Operation 149 'zext' 'zext_ln67_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln67_2 = zext i32 %tmp_s" [d5.cpp:67]   --->   Operation 150 'zext' 'zext_ln67_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 151 '%mul_ln67 = mul i64 %zext_ln67, i64 %zext_ln52'
ST_2 : Operation 151 [1/1] (2.60ns)   --->   "%mul_ln67 = mul i64 %zext_ln67, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 151 'mul' 'mul_ln67' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 152 '%mul_ln67_1 = mul i64 %zext_ln67_2, i64 %zext_ln52_2'
ST_2 : Operation 152 [1/1] (2.60ns)   --->   "%mul_ln67_1 = mul i64 %zext_ln67_2, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 152 'mul' 'mul_ln67_1' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67 = add i64 %mul_ln67, i64 %mul_ln67_1" [d5.cpp:67]   --->   Operation 153 'add' 'add_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 154 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_1 = add i64 %add65325_load, i64 %add_ln67" [d5.cpp:67]   --->   Operation 154 'add' 'add_ln67_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 155 '%mul_ln67_2 = mul i64 %zext_ln52_1, i64 %zext_ln52'
ST_2 : Operation 155 [1/1] (2.60ns)   --->   "%mul_ln67_2 = mul i64 %zext_ln52_1, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 155 'mul' 'mul_ln67_2' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 156 '%mul_ln67_3 = mul i64 %zext_ln67_1, i64 %zext_ln52'
ST_2 : Operation 156 [1/1] (2.60ns)   --->   "%mul_ln67_3 = mul i64 %zext_ln67_1, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 156 'mul' 'mul_ln67_3' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.17ns)   --->   "%select_ln67_4 = select i1 %icmp_ln51, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 157 'select' 'select_ln67_4' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.37ns)   --->   "%and_ln67 = and i64 %mul_ln67_2, i64 %select_ln67_4" [d5.cpp:67]   --->   Operation 158 'and' 'and_ln67' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.17ns)   --->   "%select_ln67_5 = select i1 %icmp_ln66, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 159 'select' 'select_ln67_5' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_2)   --->   "%and_ln67_1 = and i64 %mul_ln67_3, i64 %select_ln67_5" [d5.cpp:67]   --->   Operation 160 'and' 'and_ln67_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 161 '%mul_ln67_4 = mul i64 %zext_ln67, i64 %zext_ln52_2'
ST_2 : Operation 161 [1/1] (2.60ns)   --->   "%mul_ln67_4 = mul i64 %zext_ln67, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 161 'mul' 'mul_ln67_4' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_2 = add i64 %mul_ln67_4, i64 %and_ln67_1" [d5.cpp:67]   --->   Operation 162 'add' 'add_ln67_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_3 = add i64 %add_ln67_2, i64 %and_ln67" [d5.cpp:67]   --->   Operation 163 'add' 'add_ln67_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 164 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_4 = add i64 %add65_1157326_load, i64 %add_ln67_3" [d5.cpp:67]   --->   Operation 164 'add' 'add_ln67_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 165 [1/1] (0.12ns)   --->   "%xor_ln67 = xor i3 %trunc_ln39_2, i3 7" [d5.cpp:67]   --->   Operation 165 'xor' 'xor_ln67' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (0.67ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i3 %xor_ln67" [d5.cpp:67]   --->   Operation 166 'mux' 'tmp_12' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln67_3 = zext i32 %tmp_12" [d5.cpp:67]   --->   Operation 167 'zext' 'zext_ln67_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 168 [1/1] (0.78ns)   --->   "%icmp_ln67 = icmp_slt  i5 %empty, i5 10" [d5.cpp:67]   --->   Operation 168 'icmp' 'icmp_ln67' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.62ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.6i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i3 %sub_ln67_2" [d5.cpp:67]   --->   Operation 169 'mux' 'tmp_13' <Predicate = true> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node select_ln67_1)   --->   "%shl_ln67_1 = shl i32 %tmp_13, i32 1" [d5.cpp:67]   --->   Operation 170 'shl' 'shl_ln67_1' <Predicate = (icmp_ln66_1)> <Delay = 0.00>
ST_2 : Operation 171 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln67_1 = select i1 %icmp_ln66_1, i32 %shl_ln67_1, i32 %tmp_13" [d5.cpp:67]   --->   Operation 171 'select' 'select_ln67_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln67_4 = zext i32 %select_ln67_1" [d5.cpp:67]   --->   Operation 172 'zext' 'zext_ln67_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln67_5 = zext i32 %tmp_11" [d5.cpp:67]   --->   Operation 173 'zext' 'zext_ln67_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 174 '%mul_ln67_5 = mul i64 %zext_ln67_5, i64 %zext_ln52_2'
ST_2 : Operation 174 [1/1] (2.60ns)   --->   "%mul_ln67_5 = mul i64 %zext_ln67_5, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 174 'mul' 'mul_ln67_5' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_6)   --->   "%and_ln67_2 = and i64 %mul_ln67_5, i64 %select_ln67_5" [d5.cpp:67]   --->   Operation 175 'and' 'and_ln67_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 176 '%mul_ln67_6 = mul i64 %zext_ln52_5, i64 %zext_ln52_2'
ST_2 : Operation 176 [1/1] (2.60ns)   --->   "%mul_ln67_6 = mul i64 %zext_ln52_5, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 176 'mul' 'mul_ln67_6' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 177 '%mul_ln67_7 = mul i64 %zext_ln67_3, i64 %zext_ln52'
ST_2 : Operation 177 [1/1] (2.60ns)   --->   "%mul_ln67_7 = mul i64 %zext_ln67_3, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 177 'mul' 'mul_ln67_7' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 178 '%mul_ln67_8 = mul i64 %zext_ln52_3, i64 %zext_ln52'
ST_2 : Operation 178 [1/1] (2.60ns)   --->   "%mul_ln67_8 = mul i64 %zext_ln52_3, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 178 'mul' 'mul_ln67_8' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_5)   --->   "%and_ln67_3 = and i64 %mul_ln67_6, i64 %select_ln67_4" [d5.cpp:67]   --->   Operation 179 'and' 'and_ln67_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (0.17ns)   --->   "%select_ln67_6 = select i1 %icmp_ln67, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 180 'select' 'select_ln67_6' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_6)   --->   "%and_ln67_4 = and i64 %mul_ln67_7, i64 %select_ln67_6" [d5.cpp:67]   --->   Operation 181 'and' 'and_ln67_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.17ns)   --->   "%select_ln67_7 = select i1 %icmp_ln52, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 182 'select' 'select_ln67_7' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_5)   --->   "%and_ln67_5 = and i64 %mul_ln67_8, i64 %select_ln67_7" [d5.cpp:67]   --->   Operation 183 'and' 'and_ln67_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_5 = add i64 %and_ln67_3, i64 %and_ln67_5" [d5.cpp:67]   --->   Operation 184 'add' 'add_ln67_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 185 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_6 = add i64 %and_ln67_2, i64 %and_ln67_4" [d5.cpp:67]   --->   Operation 185 'add' 'add_ln67_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_7 = add i64 %add_ln67_6, i64 %add_ln67_5" [d5.cpp:67]   --->   Operation 186 'add' 'add_ln67_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 187 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_8 = add i64 %add65_1327_load, i64 %add_ln67_7" [d5.cpp:67]   --->   Operation 187 'add' 'add_ln67_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 188 '%mul_ln67_9 = mul i64 %zext_ln67_3, i64 %zext_ln52_2'
ST_2 : Operation 188 [1/1] (2.60ns)   --->   "%mul_ln67_9 = mul i64 %zext_ln67_3, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 188 'mul' 'mul_ln67_9' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_10)   --->   "%and_ln67_6 = and i64 %mul_ln67_9, i64 %select_ln67_6" [d5.cpp:67]   --->   Operation 189 'and' 'and_ln67_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 190 '%mul_ln67_10 = mul i64 %zext_ln52_3, i64 %zext_ln52_2'
ST_2 : Operation 190 [1/1] (2.60ns)   --->   "%mul_ln67_10 = mul i64 %zext_ln52_3, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 190 'mul' 'mul_ln67_10' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 191 '%mul_ln67_11 = mul i64 %zext_ln67_4, i64 %zext_ln52'
ST_2 : Operation 191 [1/1] (2.60ns)   --->   "%mul_ln67_11 = mul i64 %zext_ln67_4, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 191 'mul' 'mul_ln67_11' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 192 '%mul_ln67_12 = mul i64 %zext_ln52_4, i64 %zext_ln52'
ST_2 : Operation 192 [1/1] (2.60ns)   --->   "%mul_ln67_12 = mul i64 %zext_ln52_4, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 192 'mul' 'mul_ln67_12' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_9)   --->   "%and_ln67_7 = and i64 %mul_ln67_10, i64 %select_ln67_7" [d5.cpp:67]   --->   Operation 193 'and' 'and_ln67_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 194 [1/1] (0.17ns)   --->   "%select_ln67_8 = select i1 %icmp_ln66_1, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 194 'select' 'select_ln67_8' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_10)   --->   "%and_ln67_8 = and i64 %mul_ln67_11, i64 %select_ln67_8" [d5.cpp:67]   --->   Operation 195 'and' 'and_ln67_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.17ns)   --->   "%select_ln67_9 = select i1 %icmp_ln51_1, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 196 'select' 'select_ln67_9' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_9)   --->   "%and_ln67_9 = and i64 %mul_ln67_12, i64 %select_ln67_9" [d5.cpp:67]   --->   Operation 197 'and' 'and_ln67_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_9 = add i64 %and_ln67_7, i64 %and_ln67_9" [d5.cpp:67]   --->   Operation 198 'add' 'add_ln67_9' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 199 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_10 = add i64 %and_ln67_6, i64 %and_ln67_8" [d5.cpp:67]   --->   Operation 199 'add' 'add_ln67_10' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_11 = add i64 %add_ln67_10, i64 %add_ln67_9" [d5.cpp:67]   --->   Operation 200 'add' 'add_ln67_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 201 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_12 = add i64 %add65_1_1101328_load, i64 %add_ln67_11" [d5.cpp:67]   --->   Operation 201 'add' 'add_ln67_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 202 [1/1] (0.67ns)   --->   "%sub_ln67_3 = sub i3 5, i3 %trunc_ln39_2" [d5.cpp:67]   --->   Operation 202 'sub' 'sub_ln67_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.57ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.5i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i3 %sub_ln67_3" [d5.cpp:67]   --->   Operation 203 'mux' 'tmp_14' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln67_6 = zext i32 %tmp_14" [d5.cpp:67]   --->   Operation 204 'zext' 'zext_ln67_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 205 [1/1] (0.78ns)   --->   "%icmp_ln67_1 = icmp_slt  i5 %empty_22, i5 10" [d5.cpp:67]   --->   Operation 205 'icmp' 'icmp_ln67_1' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 206 [1/1] (0.54ns)   --->   "%sub_ln67_4 = sub i2 0, i2 %trunc_ln39_1" [d5.cpp:67]   --->   Operation 206 'sub' 'sub_ln67_4' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.52ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i2 %sub_ln67_4" [d5.cpp:67]   --->   Operation 207 'mux' 'tmp_15' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node select_ln67_2)   --->   "%shl_ln67_2 = shl i32 %tmp_15, i32 1" [d5.cpp:67]   --->   Operation 208 'shl' 'shl_ln67_2' <Predicate = (icmp_ln66_2)> <Delay = 0.00>
ST_2 : Operation 209 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln67_2 = select i1 %icmp_ln66_2, i32 %shl_ln67_2, i32 %tmp_15" [d5.cpp:67]   --->   Operation 209 'select' 'select_ln67_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.00ns)   --->   "%zext_ln67_7 = zext i32 %select_ln67_2" [d5.cpp:67]   --->   Operation 210 'zext' 'zext_ln67_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln67_8 = zext i32 %tmp_13" [d5.cpp:67]   --->   Operation 211 'zext' 'zext_ln67_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 212 '%mul_ln67_13 = mul i64 %zext_ln67_8, i64 %zext_ln52_2'
ST_2 : Operation 212 [1/1] (2.60ns)   --->   "%mul_ln67_13 = mul i64 %zext_ln67_8, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 212 'mul' 'mul_ln67_13' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_14)   --->   "%and_ln67_10 = and i64 %mul_ln67_13, i64 %select_ln67_8" [d5.cpp:67]   --->   Operation 213 'and' 'and_ln67_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 214 '%mul_ln67_14 = mul i64 %zext_ln52_8, i64 %zext_ln52_2'
ST_2 : Operation 214 [1/1] (2.60ns)   --->   "%mul_ln67_14 = mul i64 %zext_ln52_8, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 214 'mul' 'mul_ln67_14' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 215 '%mul_ln67_15 = mul i64 %zext_ln67_6, i64 %zext_ln52'
ST_2 : Operation 215 [1/1] (2.60ns)   --->   "%mul_ln67_15 = mul i64 %zext_ln67_6, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 215 'mul' 'mul_ln67_15' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 216 '%mul_ln67_16 = mul i64 %zext_ln52_6, i64 %zext_ln52'
ST_2 : Operation 216 [1/1] (2.60ns)   --->   "%mul_ln67_16 = mul i64 %zext_ln52_6, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 216 'mul' 'mul_ln67_16' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_13)   --->   "%and_ln67_11 = and i64 %mul_ln67_14, i64 %select_ln67_9" [d5.cpp:67]   --->   Operation 217 'and' 'and_ln67_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 218 [1/1] (0.17ns)   --->   "%select_ln67_10 = select i1 %icmp_ln67_1, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 218 'select' 'select_ln67_10' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_14)   --->   "%and_ln67_12 = and i64 %mul_ln67_15, i64 %select_ln67_10" [d5.cpp:67]   --->   Operation 219 'and' 'and_ln67_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 220 [1/1] (0.17ns)   --->   "%select_ln67_11 = select i1 %icmp_ln52_1, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 220 'select' 'select_ln67_11' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_13)   --->   "%and_ln67_13 = and i64 %mul_ln67_16, i64 %select_ln67_11" [d5.cpp:67]   --->   Operation 221 'and' 'and_ln67_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 222 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_13 = add i64 %and_ln67_11, i64 %and_ln67_13" [d5.cpp:67]   --->   Operation 222 'add' 'add_ln67_13' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 223 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_14 = add i64 %and_ln67_10, i64 %and_ln67_12" [d5.cpp:67]   --->   Operation 223 'add' 'add_ln67_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 224 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_15 = add i64 %add_ln67_14, i64 %add_ln67_13" [d5.cpp:67]   --->   Operation 224 'add' 'add_ln67_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 225 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_16 = add i64 %add65_2329_load, i64 %add_ln67_15" [d5.cpp:67]   --->   Operation 225 'add' 'add_ln67_16' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 226 '%mul_ln67_17 = mul i64 %zext_ln67_6, i64 %zext_ln52_2'
ST_2 : Operation 226 [1/1] (2.60ns)   --->   "%mul_ln67_17 = mul i64 %zext_ln67_6, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 226 'mul' 'mul_ln67_17' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_18)   --->   "%and_ln67_14 = and i64 %mul_ln67_17, i64 %select_ln67_10" [d5.cpp:67]   --->   Operation 227 'and' 'and_ln67_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 228 '%mul_ln67_18 = mul i64 %zext_ln52_6, i64 %zext_ln52_2'
ST_2 : Operation 228 [1/1] (2.60ns)   --->   "%mul_ln67_18 = mul i64 %zext_ln52_6, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 228 'mul' 'mul_ln67_18' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 229 '%mul_ln67_19 = mul i64 %zext_ln67_7, i64 %zext_ln52'
ST_2 : Operation 229 [1/1] (2.60ns)   --->   "%mul_ln67_19 = mul i64 %zext_ln67_7, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 229 'mul' 'mul_ln67_19' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 230 '%mul_ln67_20 = mul i64 %zext_ln52_7, i64 %zext_ln52'
ST_2 : Operation 230 [1/1] (2.60ns)   --->   "%mul_ln67_20 = mul i64 %zext_ln52_7, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 230 'mul' 'mul_ln67_20' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_17)   --->   "%and_ln67_15 = and i64 %mul_ln67_18, i64 %select_ln67_11" [d5.cpp:67]   --->   Operation 231 'and' 'and_ln67_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 232 [1/1] (0.17ns)   --->   "%select_ln67_12 = select i1 %icmp_ln66_2, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 232 'select' 'select_ln67_12' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_18)   --->   "%and_ln67_16 = and i64 %mul_ln67_19, i64 %select_ln67_12" [d5.cpp:67]   --->   Operation 233 'and' 'and_ln67_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.17ns)   --->   "%select_ln67_13 = select i1 %icmp_ln51_2, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 234 'select' 'select_ln67_13' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_17)   --->   "%and_ln67_17 = and i64 %mul_ln67_20, i64 %select_ln67_13" [d5.cpp:67]   --->   Operation 235 'and' 'and_ln67_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 236 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_17 = add i64 %and_ln67_15, i64 %and_ln67_17" [d5.cpp:67]   --->   Operation 236 'add' 'add_ln67_17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_18 = add i64 %and_ln67_14, i64 %and_ln67_16" [d5.cpp:67]   --->   Operation 237 'add' 'add_ln67_18' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_19 = add i64 %add_ln67_18, i64 %add_ln67_17" [d5.cpp:67]   --->   Operation 238 'add' 'add_ln67_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 239 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_20 = add i64 %add65_2_178330_load, i64 %add_ln67_19" [d5.cpp:67]   --->   Operation 239 'add' 'add_ln67_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 240 [1/1] (0.28ns)   --->   "%xor_ln67_1 = xor i2 %trunc_ln39_1, i2 3" [d5.cpp:67]   --->   Operation 240 'xor' 'xor_ln67_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 241 [1/1] (0.47ns)   --->   "%tmp_16 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i2 %xor_ln67_1" [d5.cpp:67]   --->   Operation 241 'mux' 'tmp_16' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln67_9 = zext i32 %tmp_16" [d5.cpp:67]   --->   Operation 242 'zext' 'zext_ln67_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 243 [1/1] (0.78ns)   --->   "%icmp_ln67_2 = icmp_slt  i5 %empty_23, i5 10" [d5.cpp:67]   --->   Operation 243 'icmp' 'icmp_ln67_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node select_ln67_3)   --->   "%shl_ln67_3 = shl i32 %tmp_1, i32 1" [d5.cpp:67]   --->   Operation 244 'shl' 'shl_ln67_3' <Predicate = (icmp_ln66_3)> <Delay = 0.00>
ST_2 : Operation 245 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln67_3 = select i1 %icmp_ln66_3, i32 %shl_ln67_3, i32 %tmp_1" [d5.cpp:67]   --->   Operation 245 'select' 'select_ln67_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 246 [1/1] (0.00ns)   --->   "%zext_ln67_10 = zext i32 %select_ln67_3" [d5.cpp:67]   --->   Operation 246 'zext' 'zext_ln67_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln67_11 = zext i32 %tmp_15" [d5.cpp:67]   --->   Operation 247 'zext' 'zext_ln67_11' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 248 '%mul_ln67_21 = mul i64 %zext_ln67_11, i64 %zext_ln52_2'
ST_2 : Operation 248 [1/1] (2.60ns)   --->   "%mul_ln67_21 = mul i64 %zext_ln67_11, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 248 'mul' 'mul_ln67_21' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_22)   --->   "%and_ln67_18 = and i64 %mul_ln67_21, i64 %select_ln67_12" [d5.cpp:67]   --->   Operation 249 'and' 'and_ln67_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 250 '%mul_ln67_22 = mul i64 %zext_ln52_11, i64 %zext_ln52_2'
ST_2 : Operation 250 [1/1] (2.60ns)   --->   "%mul_ln67_22 = mul i64 %zext_ln52_11, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 250 'mul' 'mul_ln67_22' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 251 '%mul_ln67_23 = mul i64 %zext_ln67_9, i64 %zext_ln52'
ST_2 : Operation 251 [1/1] (2.60ns)   --->   "%mul_ln67_23 = mul i64 %zext_ln67_9, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 251 'mul' 'mul_ln67_23' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 252 '%mul_ln67_24 = mul i64 %zext_ln52_9, i64 %zext_ln52'
ST_2 : Operation 252 [1/1] (2.60ns)   --->   "%mul_ln67_24 = mul i64 %zext_ln52_9, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 252 'mul' 'mul_ln67_24' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_21)   --->   "%and_ln67_19 = and i64 %mul_ln67_22, i64 %select_ln67_13" [d5.cpp:67]   --->   Operation 253 'and' 'and_ln67_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.17ns)   --->   "%select_ln67_14 = select i1 %icmp_ln67_2, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 254 'select' 'select_ln67_14' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_22)   --->   "%and_ln67_20 = and i64 %mul_ln67_23, i64 %select_ln67_14" [d5.cpp:67]   --->   Operation 255 'and' 'and_ln67_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 256 [1/1] (0.17ns)   --->   "%select_ln67_15 = select i1 %icmp_ln52_2, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 256 'select' 'select_ln67_15' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_21)   --->   "%and_ln67_21 = and i64 %mul_ln67_24, i64 %select_ln67_15" [d5.cpp:67]   --->   Operation 257 'and' 'and_ln67_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 258 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_21 = add i64 %and_ln67_19, i64 %and_ln67_21" [d5.cpp:67]   --->   Operation 258 'add' 'add_ln67_21' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 259 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_22 = add i64 %and_ln67_18, i64 %and_ln67_20" [d5.cpp:67]   --->   Operation 259 'add' 'add_ln67_22' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 260 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_23 = add i64 %add_ln67_22, i64 %add_ln67_21" [d5.cpp:67]   --->   Operation 260 'add' 'add_ln67_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 261 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_24 = add i64 %add65_3331_load, i64 %add_ln67_23" [d5.cpp:67]   --->   Operation 261 'add' 'add_ln67_24' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 262 '%mul_ln67_25 = mul i64 %zext_ln67_9, i64 %zext_ln52_2'
ST_2 : Operation 262 [1/1] (2.60ns)   --->   "%mul_ln67_25 = mul i64 %zext_ln67_9, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 262 'mul' 'mul_ln67_25' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_26)   --->   "%and_ln67_22 = and i64 %mul_ln67_25, i64 %select_ln67_14" [d5.cpp:67]   --->   Operation 263 'and' 'and_ln67_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 264 '%mul_ln67_26 = mul i64 %zext_ln52_9, i64 %zext_ln52_2'
ST_2 : Operation 264 [1/1] (2.60ns)   --->   "%mul_ln67_26 = mul i64 %zext_ln52_9, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 264 'mul' 'mul_ln67_26' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 265 '%mul_ln67_27 = mul i64 %zext_ln67_10, i64 %zext_ln52'
ST_2 : Operation 265 [1/1] (2.60ns)   --->   "%mul_ln67_27 = mul i64 %zext_ln67_10, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 265 'mul' 'mul_ln67_27' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 266 '%mul_ln67_28 = mul i64 %zext_ln52_10, i64 %zext_ln52'
ST_2 : Operation 266 [1/1] (2.60ns)   --->   "%mul_ln67_28 = mul i64 %zext_ln52_10, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 266 'mul' 'mul_ln67_28' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_25)   --->   "%and_ln67_23 = and i64 %mul_ln67_26, i64 %select_ln67_15" [d5.cpp:67]   --->   Operation 267 'and' 'and_ln67_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.17ns)   --->   "%select_ln67_16 = select i1 %icmp_ln66_3, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 268 'select' 'select_ln67_16' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_25)   --->   "%and_ln67_24 = and i64 %mul_ln67_27, i64 %select_ln67_16" [d5.cpp:67]   --->   Operation 269 'and' 'and_ln67_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.17ns)   --->   "%select_ln67_17 = select i1 %icmp_ln51_3, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 270 'select' 'select_ln67_17' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_26)   --->   "%and_ln67_25 = and i64 %mul_ln67_28, i64 %select_ln67_17" [d5.cpp:67]   --->   Operation 271 'and' 'and_ln67_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_25 = add i64 %and_ln67_24, i64 %and_ln67_23" [d5.cpp:67]   --->   Operation 272 'add' 'add_ln67_25' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_26 = add i64 %and_ln67_25, i64 %and_ln67_22" [d5.cpp:67]   --->   Operation 273 'add' 'add_ln67_26' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 274 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_27 = add i64 %add_ln67_26, i64 %add_ln67_25" [d5.cpp:67]   --->   Operation 274 'add' 'add_ln67_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 275 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_28 = add i64 %add65_3_155332_load, i64 %add_ln67_27" [d5.cpp:67]   --->   Operation 275 'add' 'add_ln67_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln67_12 = zext i32 %tmp_3" [d5.cpp:67]   --->   Operation 276 'zext' 'zext_ln67_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 277 [1/1] (0.78ns)   --->   "%icmp_ln67_3 = icmp_ult  i5 %empty_24, i5 10" [d5.cpp:67]   --->   Operation 277 'icmp' 'icmp_ln67_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln67_13 = zext i32 %tmp_1" [d5.cpp:67]   --->   Operation 278 'zext' 'zext_ln67_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 279 '%mul_ln67_29 = mul i64 %zext_ln52_2, i64 %zext_ln67_13'
ST_2 : Operation 279 [1/1] (2.60ns)   --->   "%mul_ln67_29 = mul i64 %zext_ln52_2, i64 %zext_ln67_13" [d5.cpp:67]   --->   Operation 279 'mul' 'mul_ln67_29' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_29)   --->   "%and_ln67_26 = and i64 %mul_ln67_29, i64 %select_ln67_16" [d5.cpp:67]   --->   Operation 280 'and' 'and_ln67_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 281 '%mul_ln67_30 = mul i64 %zext_ln52_14, i64 %zext_ln52_2'
ST_2 : Operation 281 [1/1] (2.60ns)   --->   "%mul_ln67_30 = mul i64 %zext_ln52_14, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 281 'mul' 'mul_ln67_30' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 282 '%mul_ln67_31 = mul i64 %zext_ln67_12, i64 %zext_ln52'
ST_2 : Operation 282 [1/1] (2.60ns)   --->   "%mul_ln67_31 = mul i64 %zext_ln67_12, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 282 'mul' 'mul_ln67_31' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 283 '%mul_ln67_32 = mul i64 %zext_ln52_12, i64 %zext_ln52'
ST_2 : Operation 283 [1/1] (2.60ns)   --->   "%mul_ln67_32 = mul i64 %zext_ln52_12, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 283 'mul' 'mul_ln67_32' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_30)   --->   "%and_ln67_27 = and i64 %mul_ln67_30, i64 %select_ln67_17" [d5.cpp:67]   --->   Operation 284 'and' 'and_ln67_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.17ns)   --->   "%select_ln67_18 = select i1 %icmp_ln67_3, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 285 'select' 'select_ln67_18' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_29)   --->   "%and_ln67_28 = and i64 %mul_ln67_31, i64 %select_ln67_18" [d5.cpp:67]   --->   Operation 286 'and' 'and_ln67_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (0.17ns)   --->   "%select_ln67_19 = select i1 %icmp_ln52_3, i64 18446744073709551615, i64 0" [d5.cpp:67]   --->   Operation 287 'select' 'select_ln67_19' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_30)   --->   "%and_ln67_29 = and i64 %mul_ln67_32, i64 %select_ln67_19" [d5.cpp:67]   --->   Operation 288 'and' 'and_ln67_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 289 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_29 = add i64 %and_ln67_26, i64 %and_ln67_28" [d5.cpp:67]   --->   Operation 289 'add' 'add_ln67_29' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 290 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_30 = add i64 %and_ln67_27, i64 %and_ln67_29" [d5.cpp:67]   --->   Operation 290 'add' 'add_ln67_30' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 291 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_31 = add i64 %add_ln67_30, i64 %add_ln67_29" [d5.cpp:67]   --->   Operation 291 'add' 'add_ln67_31' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 292 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_32 = add i64 %add65_4333_load, i64 %add_ln67_31" [d5.cpp:67]   --->   Operation 292 'add' 'add_ln67_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 293 '%mul_ln67_33 = mul i64 %zext_ln67_12, i64 %zext_ln52_2'
ST_2 : Operation 293 [1/1] (2.60ns)   --->   "%mul_ln67_33 = mul i64 %zext_ln67_12, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 293 'mul' 'mul_ln67_33' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 294 '%mul_ln67_34 = mul i64 %zext_ln52_12, i64 %zext_ln52_2'
ST_2 : Operation 294 [1/1] (2.60ns)   --->   "%mul_ln67_34 = mul i64 %zext_ln52_12, i64 %zext_ln52_2" [d5.cpp:67]   --->   Operation 294 'mul' 'mul_ln67_34' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.37ns)   --->   "%and_ln67_30 = and i64 %mul_ln67_33, i64 %select_ln67_18" [d5.cpp:67]   --->   Operation 295 'and' 'and_ln67_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_33)   --->   "%and_ln67_31 = and i64 %mul_ln67_34, i64 %select_ln67_19" [d5.cpp:67]   --->   Operation 296 'and' 'and_ln67_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.81ns)   --->   Input mux for Operation 297 '%mul_ln67_35 = mul i64 %zext_ln52_13, i64 %zext_ln52'
ST_2 : Operation 297 [1/1] (2.60ns)   --->   "%mul_ln67_35 = mul i64 %zext_ln52_13, i64 %zext_ln52" [d5.cpp:67]   --->   Operation 297 'mul' 'mul_ln67_35' <Predicate = true> <Delay = 2.60> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln67_33 = add i64 %and_ln67_31, i64 %mul_ln67_35" [d5.cpp:67]   --->   Operation 298 'add' 'add_ln67_33' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_34 = add i64 %add_ln67_33, i64 %and_ln67_30" [d5.cpp:67]   --->   Operation 299 'add' 'add_ln67_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 300 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln67_35 = add i64 %add65_4_132334_load, i64 %add_ln67_34" [d5.cpp:67]   --->   Operation 300 'add' 'add_ln67_35' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 301 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_35, i64 %add65_4_132334" [d5.cpp:39]   --->   Operation 301 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 302 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_32, i64 %add65_4333" [d5.cpp:39]   --->   Operation 302 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 303 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_28, i64 %add65_3_155332" [d5.cpp:39]   --->   Operation 303 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 304 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_24, i64 %add65_3331" [d5.cpp:39]   --->   Operation 304 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 305 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_20, i64 %add65_2_178330" [d5.cpp:39]   --->   Operation 305 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 306 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_16, i64 %add65_2329" [d5.cpp:39]   --->   Operation 306 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 307 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_12, i64 %add65_1_1101328" [d5.cpp:39]   --->   Operation 307 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 308 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_8, i64 %add65_1327" [d5.cpp:39]   --->   Operation 308 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 309 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_4, i64 %add65_1157326" [d5.cpp:39]   --->   Operation 309 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 310 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln67_1, i64 %add65325" [d5.cpp:39]   --->   Operation 310 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 311 [1/1] (0.00ns)   --->   "%br_ln39 = br void %for.body31" [d5.cpp:39]   --->   Operation 311 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.358ns
The critical path consists of the following:
	'alloca' operation ('i1') [41]  (0.000 ns)
	'load' operation ('i1', d5.cpp:39) on local variable 'i1' [75]  (0.000 ns)
	'add' operation ('add_ln51', d5.cpp:51) [97]  (0.789 ns)
	'icmp' operation ('icmp_ln51', d5.cpp:51) [98]  (0.789 ns)
	'select' operation ('select_ln52', d5.cpp:52) [99]  (0.360 ns)
	multiplexor before operation 'mul' with delay (0.525 ns)
'mul' operation ('mul_ln52', d5.cpp:52) [102]  (2.895 ns)

 <State 2>: 7.273ns
The critical path consists of the following:
	'sub' operation ('sub_ln67_4', d5.cpp:67) [231]  (0.548 ns)
	'mux' operation ('tmp_15', d5.cpp:67) [232]  (0.525 ns)
	'select' operation ('select_ln67_2', d5.cpp:67) [234]  (0.449 ns)
	multiplexor before operation 'mul' with delay (0.816 ns)
'mul' operation ('mul_ln67_19', d5.cpp:67) [254]  (2.604 ns)
	'and' operation ('and_ln67_16', d5.cpp:67) [258]  (0.000 ns)
	'add' operation ('add_ln67_18', d5.cpp:67) [262]  (1.085 ns)
	'add' operation ('add_ln67_19', d5.cpp:67) [263]  (0.000 ns)
	'add' operation ('add_ln67_20', d5.cpp:67) [264]  (0.819 ns)
	'store' operation ('store_ln39', d5.cpp:39) of variable 'add_ln67_20', d5.cpp:67 on local variable 'add65_2_178330' [333]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
