// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_reload,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg2_r_reload,
        arg2_r_1_reload,
        arg2_r_2_reload,
        arg2_r_9_reload,
        arg2_r_8_reload,
        arg2_r_7_reload,
        arg2_r_6_reload,
        arg2_r_5_reload,
        arg2_r_4_reload,
        arg2_r_3_reload,
        add65_1_464_out,
        add65_1_464_out_ap_vld,
        add65_1_363_out,
        add65_1_363_out_ap_vld,
        add65_1_262_out,
        add65_1_262_out_ap_vld,
        add65_1_161_out,
        add65_1_161_out_ap_vld,
        add65_160_out,
        add65_160_out_ap_vld,
        add65_459_out,
        add65_459_out_ap_vld,
        add65_358_out,
        add65_358_out_ap_vld,
        add65_257_out,
        add65_257_out_ap_vld,
        add65_13256_out,
        add65_13256_out_ap_vld,
        add6555_out,
        add6555_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_9_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_3_reload;
output  [63:0] add65_1_464_out;
output   add65_1_464_out_ap_vld;
output  [63:0] add65_1_363_out;
output   add65_1_363_out_ap_vld;
output  [63:0] add65_1_262_out;
output   add65_1_262_out_ap_vld;
output  [63:0] add65_1_161_out;
output   add65_1_161_out_ap_vld;
output  [63:0] add65_160_out;
output   add65_160_out_ap_vld;
output  [63:0] add65_459_out;
output   add65_459_out_ap_vld;
output  [63:0] add65_358_out;
output   add65_358_out_ap_vld;
output  [63:0] add65_257_out;
output   add65_257_out_ap_vld;
output  [63:0] add65_13256_out;
output   add65_13256_out_ap_vld;
output  [63:0] add6555_out;
output   add6555_out_ap_vld;

reg ap_idle;
reg add65_1_464_out_ap_vld;
reg add65_1_363_out_ap_vld;
reg add65_1_262_out_ap_vld;
reg add65_1_161_out_ap_vld;
reg add65_160_out_ap_vld;
reg add65_459_out_ap_vld;
reg add65_358_out_ap_vld;
reg add65_257_out_ap_vld;
reg add65_13256_out_ap_vld;
reg add6555_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_16_fu_572_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] i1_1_reg_2138;
wire   [3:0] trunc_ln39_fu_580_p1;
reg   [3:0] trunc_ln39_reg_2152;
wire   [0:0] empty_fu_584_p1;
reg   [0:0] empty_reg_2158;
wire   [31:0] tmp_fu_588_p12;
reg   [31:0] tmp_reg_2167;
wire   [0:0] icmp_ln51_fu_620_p2;
reg   [0:0] icmp_ln51_reg_2172;
wire  signed [31:0] tmp_1_fu_647_p12;
reg  signed [31:0] tmp_1_reg_2177;
wire   [31:0] mul_ln52_fu_474_p2;
reg   [31:0] mul_ln52_reg_2183;
wire  signed [31:0] tmp_2_fu_680_p12;
reg  signed [31:0] tmp_2_reg_2188;
wire   [31:0] mul_ln52_1_fu_494_p2;
reg   [31:0] mul_ln52_1_reg_2193;
wire   [0:0] icmp_ln51_1_fu_713_p2;
reg   [0:0] icmp_ln51_1_reg_2198;
wire  signed [31:0] tmp_3_fu_740_p12;
reg  signed [31:0] tmp_3_reg_2203;
wire   [31:0] mul_ln52_2_fu_478_p2;
reg   [31:0] mul_ln52_2_reg_2209;
wire   [31:0] mul_ln52_3_fu_499_p2;
reg   [31:0] mul_ln52_3_reg_2214;
wire   [0:0] icmp_ln51_2_fu_806_p2;
reg   [0:0] icmp_ln51_2_reg_2219;
wire   [31:0] mul_ln52_4_fu_482_p2;
reg   [31:0] mul_ln52_4_reg_2224;
wire   [31:0] mul_ln52_5_fu_504_p2;
reg   [31:0] mul_ln52_5_reg_2229;
wire   [0:0] icmp_ln51_3_fu_899_p2;
reg   [0:0] icmp_ln51_3_reg_2234;
wire   [31:0] mul_ln52_6_fu_486_p2;
reg   [31:0] mul_ln52_6_reg_2239;
wire   [31:0] mul_ln52_7_fu_509_p2;
reg   [31:0] mul_ln52_7_reg_2244;
wire   [0:0] icmp_ln51_4_fu_986_p2;
reg   [0:0] icmp_ln51_4_reg_2249;
wire   [31:0] mul_ln52_8_fu_490_p2;
reg   [31:0] mul_ln52_8_reg_2254;
wire   [0:0] icmp_ln66_fu_1040_p2;
reg   [0:0] icmp_ln66_reg_2259;
wire   [0:0] icmp_ln66_1_fu_1046_p2;
reg   [0:0] icmp_ln66_1_reg_2265;
wire   [0:0] icmp_ln66_2_fu_1052_p2;
reg   [0:0] icmp_ln66_2_reg_2271;
wire   [0:0] icmp_ln66_3_fu_1058_p2;
reg   [0:0] icmp_ln66_3_reg_2277;
reg   [63:0] add6555_fu_164;
wire   [63:0] add_ln67_fu_1244_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [63:0] add65_13256_fu_168;
wire   [63:0] add_ln67_2_fu_1325_p2;
reg   [63:0] add65_257_fu_172;
wire   [63:0] add_ln67_4_fu_1396_p2;
reg   [63:0] add65_358_fu_176;
wire   [63:0] add_ln67_6_fu_1476_p2;
reg   [63:0] add65_459_fu_180;
wire   [63:0] add_ln67_8_fu_1545_p2;
reg   [63:0] add65_160_fu_184;
wire   [63:0] add_ln67_10_fu_1623_p2;
reg   [63:0] add65_1_161_fu_188;
wire   [63:0] add_ln67_12_fu_1690_p2;
reg   [63:0] add65_1_262_fu_192;
wire   [63:0] add_ln67_14_fu_1749_p2;
reg   [63:0] add65_1_363_fu_196;
wire   [63:0] add_ln67_16_fu_1799_p2;
reg   [63:0] add65_1_464_fu_200;
wire   [63:0] add_ln67_18_fu_1866_p2;
reg   [4:0] i1_fu_204;
wire   [4:0] add_ln39_fu_1064_p2;
reg   [4:0] ap_sig_allocacmp_i1_1;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln67_fu_398_p0;
wire   [31:0] mul_ln67_fu_398_p1;
wire   [63:0] zext_ln52_fu_1111_p1;
wire   [31:0] mul_ln67_1_fu_402_p0;
wire   [31:0] mul_ln67_1_fu_402_p1;
wire   [31:0] mul_ln67_2_fu_406_p0;
wire   [31:0] mul_ln67_2_fu_406_p1;
wire   [31:0] mul_ln67_3_fu_410_p0;
wire   [31:0] mul_ln67_3_fu_410_p1;
wire   [31:0] mul_ln67_4_fu_414_p0;
wire   [31:0] mul_ln67_4_fu_414_p1;
wire   [31:0] mul_ln67_5_fu_418_p0;
wire   [31:0] mul_ln67_5_fu_418_p1;
wire   [31:0] mul_ln67_6_fu_422_p0;
wire   [31:0] mul_ln67_6_fu_422_p1;
wire   [31:0] mul_ln67_7_fu_426_p0;
wire   [31:0] mul_ln67_7_fu_426_p1;
wire   [31:0] mul_ln67_8_fu_430_p0;
wire   [31:0] mul_ln67_8_fu_430_p1;
wire   [31:0] mul_ln67_9_fu_434_p0;
wire   [31:0] mul_ln67_9_fu_434_p1;
wire   [31:0] mul_ln67_10_fu_438_p0;
wire   [31:0] mul_ln67_10_fu_438_p1;
wire   [31:0] mul_ln67_11_fu_442_p0;
wire   [31:0] mul_ln67_11_fu_442_p1;
wire   [31:0] mul_ln67_12_fu_446_p0;
wire   [31:0] mul_ln67_12_fu_446_p1;
wire   [31:0] mul_ln67_13_fu_450_p0;
wire   [31:0] mul_ln67_13_fu_450_p1;
wire   [31:0] mul_ln67_14_fu_454_p0;
wire   [31:0] mul_ln67_14_fu_454_p1;
wire   [31:0] mul_ln67_15_fu_458_p0;
wire   [31:0] mul_ln67_15_fu_458_p1;
wire   [31:0] mul_ln67_16_fu_462_p0;
wire   [31:0] mul_ln67_16_fu_462_p1;
wire   [31:0] mul_ln67_17_fu_466_p0;
wire   [31:0] mul_ln67_17_fu_466_p1;
wire   [31:0] mul_ln67_18_fu_470_p0;
wire   [31:0] mul_ln67_18_fu_470_p1;
wire  signed [6:0] mul_ln52_fu_474_p1;
wire  signed [6:0] mul_ln52_2_fu_478_p1;
wire  signed [31:0] tmp_5_fu_833_p12;
wire  signed [6:0] mul_ln52_4_fu_482_p1;
wire  signed [31:0] tmp_7_fu_926_p12;
wire  signed [6:0] mul_ln52_6_fu_486_p1;
wire  signed [31:0] tmp_9_fu_1013_p12;
wire  signed [6:0] mul_ln52_8_fu_490_p1;
wire   [5:0] mul_ln52_1_fu_494_p1;
wire  signed [31:0] tmp_4_fu_773_p12;
wire   [5:0] mul_ln52_3_fu_499_p1;
wire  signed [31:0] tmp_6_fu_866_p12;
wire   [5:0] mul_ln52_5_fu_504_p1;
wire  signed [31:0] tmp_8_fu_959_p12;
wire   [5:0] mul_ln52_7_fu_509_p1;
wire   [4:0] add_ln51_fu_614_p2;
wire   [0:0] and_ln51_fu_626_p2;
wire   [3:0] tmp_1_fu_647_p11;
wire   [3:0] tmp_2_fu_680_p11;
wire   [4:0] add_ln51_1_fu_707_p2;
wire   [0:0] and_ln51_1_fu_719_p2;
wire   [3:0] tmp_3_fu_740_p11;
wire   [3:0] tmp_4_fu_773_p11;
wire   [4:0] empty_22_fu_800_p2;
wire   [0:0] and_ln51_2_fu_812_p2;
wire   [3:0] tmp_5_fu_833_p11;
wire   [3:0] tmp_6_fu_866_p11;
wire   [4:0] add_ln51_2_fu_893_p2;
wire   [0:0] and_ln51_3_fu_905_p2;
wire   [3:0] tmp_7_fu_926_p11;
wire   [3:0] tmp_8_fu_959_p11;
wire   [0:0] and_ln51_4_fu_992_p2;
wire   [3:0] tmp_9_fu_1013_p11;
wire   [4:0] add_ln52_fu_1137_p2;
wire   [4:0] add_ln52_1_fu_1156_p2;
wire   [4:0] add_ln52_2_fu_1175_p2;
wire   [4:0] add_ln52_3_fu_1194_p2;
wire   [3:0] tmp_s_fu_1223_p11;
wire   [31:0] tmp_s_fu_1223_p12;
wire   [63:0] mul_ln67_fu_398_p2;
wire   [3:0] tmp_10_fu_1259_p10;
wire   [31:0] tmp_10_fu_1259_p11;
wire   [0:0] and_ln66_fu_1250_p2;
wire   [31:0] shl_ln67_fu_1274_p2;
wire   [31:0] select_ln67_fu_1280_p3;
wire   [63:0] mul_ln67_1_fu_402_p2;
wire   [63:0] select_ln67_5_fu_1293_p3;
wire   [63:0] mul_ln67_2_fu_406_p2;
wire   [63:0] select_ln67_6_fu_1306_p3;
wire   [63:0] and_ln67_1_fu_1313_p2;
wire   [63:0] and_ln67_fu_1300_p2;
wire   [63:0] add_ln67_1_fu_1319_p2;
wire   [2:0] trunc_ln39_2_fu_1108_p1;
wire   [2:0] tmp_11_fu_1337_p9;
wire   [31:0] tmp_11_fu_1337_p10;
wire   [0:0] icmp_ln52_fu_1146_p2;
wire   [63:0] mul_ln67_3_fu_410_p2;
wire   [63:0] select_ln67_7_fu_1362_p3;
wire   [0:0] icmp_ln67_fu_1356_p2;
wire   [63:0] mul_ln67_4_fu_414_p2;
wire   [63:0] select_ln67_8_fu_1376_p3;
wire   [63:0] and_ln67_3_fu_1384_p2;
wire   [63:0] and_ln67_2_fu_1370_p2;
wire   [63:0] add_ln67_3_fu_1390_p2;
wire   [2:0] tmp_12_fu_1412_p8;
wire   [31:0] tmp_12_fu_1412_p9;
wire   [0:0] and_ln66_1_fu_1402_p2;
wire   [31:0] shl_ln67_1_fu_1425_p2;
wire   [31:0] select_ln67_1_fu_1431_p3;
wire   [63:0] mul_ln67_5_fu_418_p2;
wire   [63:0] select_ln67_9_fu_1444_p3;
wire   [63:0] mul_ln67_6_fu_422_p2;
wire   [63:0] select_ln67_10_fu_1457_p3;
wire   [63:0] and_ln67_5_fu_1464_p2;
wire   [63:0] and_ln67_4_fu_1451_p2;
wire   [63:0] add_ln67_5_fu_1470_p2;
wire   [2:0] tmp_13_fu_1488_p7;
wire   [31:0] tmp_13_fu_1488_p8;
wire   [0:0] icmp_ln52_1_fu_1165_p2;
wire   [63:0] mul_ln67_7_fu_426_p2;
wire   [63:0] select_ln67_11_fu_1511_p3;
wire   [0:0] icmp_ln67_1_fu_1505_p2;
wire   [63:0] mul_ln67_8_fu_430_p2;
wire   [63:0] select_ln67_12_fu_1525_p3;
wire   [63:0] and_ln67_7_fu_1533_p2;
wire   [63:0] and_ln67_6_fu_1519_p2;
wire   [63:0] add_ln67_7_fu_1539_p2;
wire   [2:0] tmp_14_fu_1561_p6;
wire   [31:0] tmp_14_fu_1561_p7;
wire   [0:0] and_ln66_2_fu_1551_p2;
wire   [31:0] shl_ln67_2_fu_1572_p2;
wire   [31:0] select_ln67_2_fu_1578_p3;
wire   [63:0] mul_ln67_9_fu_434_p2;
wire   [63:0] select_ln67_13_fu_1591_p3;
wire   [63:0] mul_ln67_10_fu_438_p2;
wire   [63:0] select_ln67_14_fu_1604_p3;
wire   [63:0] and_ln67_9_fu_1611_p2;
wire   [63:0] and_ln67_8_fu_1598_p2;
wire   [63:0] add_ln67_9_fu_1617_p2;
wire   [1:0] trunc_ln39_1_fu_1105_p1;
wire   [1:0] tmp_15_fu_1635_p5;
wire   [31:0] tmp_15_fu_1635_p6;
wire   [0:0] icmp_ln52_2_fu_1184_p2;
wire   [63:0] mul_ln67_11_fu_442_p2;
wire   [63:0] select_ln67_15_fu_1656_p3;
wire   [0:0] icmp_ln67_2_fu_1650_p2;
wire   [63:0] mul_ln67_12_fu_446_p2;
wire   [63:0] select_ln67_16_fu_1670_p3;
wire   [63:0] and_ln67_11_fu_1678_p2;
wire   [63:0] and_ln67_10_fu_1664_p2;
wire   [63:0] add_ln67_11_fu_1684_p2;
wire   [0:0] and_ln66_3_fu_1696_p2;
wire   [31:0] shl_ln67_3_fu_1700_p2;
wire   [31:0] select_ln67_3_fu_1705_p3;
wire   [63:0] mul_ln67_13_fu_450_p2;
wire   [63:0] select_ln67_17_fu_1717_p3;
wire   [63:0] mul_ln67_14_fu_454_p2;
wire   [63:0] select_ln67_18_fu_1730_p3;
wire   [63:0] and_ln67_12_fu_1724_p2;
wire   [63:0] and_ln67_13_fu_1737_p2;
wire   [63:0] add_ln67_13_fu_1743_p2;
wire   [0:0] icmp_ln52_3_fu_1203_p2;
wire   [63:0] mul_ln67_15_fu_458_p2;
wire   [63:0] select_ln67_19_fu_1765_p3;
wire   [0:0] icmp_ln67_3_fu_1759_p2;
wire   [63:0] mul_ln67_16_fu_462_p2;
wire   [63:0] select_ln67_20_fu_1779_p3;
wire   [63:0] and_ln67_14_fu_1773_p2;
wire   [63:0] and_ln67_15_fu_1787_p2;
wire   [63:0] add_ln67_15_fu_1793_p2;
wire   [4:0] add_ln51_3_fu_1209_p2;
wire   [0:0] icmp_ln66_4_fu_1805_p2;
wire   [0:0] and_ln66_4_fu_1811_p2;
wire   [31:0] shl_ln67_4_fu_1816_p2;
wire   [31:0] select_ln67_4_fu_1821_p3;
wire   [63:0] mul_ln67_17_fu_466_p2;
wire   [63:0] select_ln67_21_fu_1833_p3;
wire   [63:0] mul_ln67_18_fu_470_p2;
wire   [63:0] select_ln67_22_fu_1846_p3;
wire   [63:0] and_ln67_16_fu_1840_p2;
wire   [63:0] and_ln67_17_fu_1854_p2;
wire   [63:0] add_ln67_17_fu_1860_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire  signed [31:0] mul_ln52_2_fu_478_p10;
wire  signed [31:0] mul_ln52_4_fu_482_p10;
wire  signed [31:0] mul_ln52_6_fu_486_p10;
wire  signed [31:0] mul_ln52_8_fu_490_p10;
wire  signed [31:0] mul_ln52_fu_474_p10;
wire   [63:0] mul_ln67_10_fu_438_p00;
wire   [63:0] mul_ln67_11_fu_442_p00;
wire   [63:0] mul_ln67_12_fu_446_p00;
wire   [63:0] mul_ln67_13_fu_450_p00;
wire   [63:0] mul_ln67_14_fu_454_p00;
wire   [63:0] mul_ln67_15_fu_458_p00;
wire   [63:0] mul_ln67_16_fu_462_p00;
wire   [63:0] mul_ln67_17_fu_466_p00;
wire   [63:0] mul_ln67_18_fu_470_p00;
wire   [63:0] mul_ln67_1_fu_402_p00;
wire   [63:0] mul_ln67_2_fu_406_p00;
wire   [63:0] mul_ln67_3_fu_410_p00;
wire   [63:0] mul_ln67_4_fu_414_p00;
wire   [63:0] mul_ln67_5_fu_418_p00;
wire   [63:0] mul_ln67_6_fu_422_p00;
wire   [63:0] mul_ln67_7_fu_426_p00;
wire   [63:0] mul_ln67_8_fu_430_p00;
wire   [63:0] mul_ln67_9_fu_434_p00;
wire   [63:0] mul_ln67_fu_398_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U25(
    .din0(mul_ln67_fu_398_p0),
    .din1(mul_ln67_fu_398_p1),
    .dout(mul_ln67_fu_398_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U26(
    .din0(mul_ln67_1_fu_402_p0),
    .din1(mul_ln67_1_fu_402_p1),
    .dout(mul_ln67_1_fu_402_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U27(
    .din0(mul_ln67_2_fu_406_p0),
    .din1(mul_ln67_2_fu_406_p1),
    .dout(mul_ln67_2_fu_406_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U28(
    .din0(mul_ln67_3_fu_410_p0),
    .din1(mul_ln67_3_fu_410_p1),
    .dout(mul_ln67_3_fu_410_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U29(
    .din0(mul_ln67_4_fu_414_p0),
    .din1(mul_ln67_4_fu_414_p1),
    .dout(mul_ln67_4_fu_414_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln67_5_fu_418_p0),
    .din1(mul_ln67_5_fu_418_p1),
    .dout(mul_ln67_5_fu_418_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln67_6_fu_422_p0),
    .din1(mul_ln67_6_fu_422_p1),
    .dout(mul_ln67_6_fu_422_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln67_7_fu_426_p0),
    .din1(mul_ln67_7_fu_426_p1),
    .dout(mul_ln67_7_fu_426_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln67_8_fu_430_p0),
    .din1(mul_ln67_8_fu_430_p1),
    .dout(mul_ln67_8_fu_430_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln67_9_fu_434_p0),
    .din1(mul_ln67_9_fu_434_p1),
    .dout(mul_ln67_9_fu_434_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln67_10_fu_438_p0),
    .din1(mul_ln67_10_fu_438_p1),
    .dout(mul_ln67_10_fu_438_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln67_11_fu_442_p0),
    .din1(mul_ln67_11_fu_442_p1),
    .dout(mul_ln67_11_fu_442_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln67_12_fu_446_p0),
    .din1(mul_ln67_12_fu_446_p1),
    .dout(mul_ln67_12_fu_446_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln67_13_fu_450_p0),
    .din1(mul_ln67_13_fu_450_p1),
    .dout(mul_ln67_13_fu_450_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln67_14_fu_454_p0),
    .din1(mul_ln67_14_fu_454_p1),
    .dout(mul_ln67_14_fu_454_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U40(
    .din0(mul_ln67_15_fu_458_p0),
    .din1(mul_ln67_15_fu_458_p1),
    .dout(mul_ln67_15_fu_458_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U41(
    .din0(mul_ln67_16_fu_462_p0),
    .din1(mul_ln67_16_fu_462_p1),
    .dout(mul_ln67_16_fu_462_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U42(
    .din0(mul_ln67_17_fu_466_p0),
    .din1(mul_ln67_17_fu_466_p1),
    .dout(mul_ln67_17_fu_466_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U43(
    .din0(mul_ln67_18_fu_470_p0),
    .din1(mul_ln67_18_fu_470_p1),
    .dout(mul_ln67_18_fu_470_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U44(
    .din0(tmp_1_fu_647_p12),
    .din1(mul_ln52_fu_474_p1),
    .dout(mul_ln52_fu_474_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U45(
    .din0(tmp_3_fu_740_p12),
    .din1(mul_ln52_2_fu_478_p1),
    .dout(mul_ln52_2_fu_478_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U46(
    .din0(tmp_5_fu_833_p12),
    .din1(mul_ln52_4_fu_482_p1),
    .dout(mul_ln52_4_fu_482_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U47(
    .din0(tmp_7_fu_926_p12),
    .din1(mul_ln52_6_fu_486_p1),
    .dout(mul_ln52_6_fu_486_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U48(
    .din0(tmp_9_fu_1013_p12),
    .din1(mul_ln52_8_fu_490_p1),
    .dout(mul_ln52_8_fu_490_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U49(
    .din0(tmp_2_fu_680_p12),
    .din1(mul_ln52_1_fu_494_p1),
    .dout(mul_ln52_1_fu_494_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U50(
    .din0(tmp_4_fu_773_p12),
    .din1(mul_ln52_3_fu_499_p1),
    .dout(mul_ln52_3_fu_499_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U51(
    .din0(tmp_6_fu_866_p12),
    .din1(mul_ln52_5_fu_504_p1),
    .dout(mul_ln52_5_fu_504_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U52(
    .din0(tmp_8_fu_959_p12),
    .din1(mul_ln52_7_fu_509_p1),
    .dout(mul_ln52_7_fu_509_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U53(
    .din0(arg1_r_reload),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(trunc_ln39_fu_580_p1),
    .dout(tmp_fu_588_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U54(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_1_fu_647_p11),
    .dout(tmp_1_fu_647_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U55(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_2_fu_680_p11),
    .dout(tmp_2_fu_680_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U56(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_3_fu_740_p11),
    .dout(tmp_3_fu_740_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U57(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_4_fu_773_p11),
    .dout(tmp_4_fu_773_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U58(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_5_fu_833_p11),
    .dout(tmp_5_fu_833_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U59(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_6_fu_866_p11),
    .dout(tmp_6_fu_866_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U60(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_7_fu_926_p11),
    .dout(tmp_7_fu_926_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U61(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_8_fu_959_p11),
    .dout(tmp_8_fu_959_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U62(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_9_fu_1013_p11),
    .dout(tmp_9_fu_1013_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U63(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_s_fu_1223_p11),
    .dout(tmp_s_fu_1223_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U64(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_10_fu_1259_p10),
    .dout(tmp_10_fu_1259_p11)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U65(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_11_fu_1337_p9),
    .dout(tmp_11_fu_1337_p10)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U66(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_12_fu_1412_p8),
    .dout(tmp_12_fu_1412_p9)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U67(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_13_fu_1488_p7),
    .dout(tmp_13_fu_1488_p8)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U68(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_14_fu_1561_p6),
    .dout(tmp_14_fu_1561_p7)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U69(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_15_fu_1635_p5),
    .dout(tmp_15_fu_1635_p6)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add6555_fu_164 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add6555_fu_164 <= add_ln67_fu_1244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_13256_fu_168 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_13256_fu_168 <= add_ln67_2_fu_1325_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_160_fu_184 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_160_fu_184 <= add_ln67_10_fu_1623_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_161_fu_188 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_161_fu_188 <= add_ln67_12_fu_1690_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_262_fu_192 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_262_fu_192 <= add_ln67_14_fu_1749_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_363_fu_196 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_363_fu_196 <= add_ln67_16_fu_1799_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_464_fu_200 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_464_fu_200 <= add_ln67_18_fu_1866_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_257_fu_172 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_257_fu_172 <= add_ln67_4_fu_1396_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_358_fu_176 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_358_fu_176 <= add_ln67_6_fu_1476_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_459_fu_180 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_459_fu_180 <= add_ln67_8_fu_1545_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_16_fu_572_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i1_fu_204 <= add_ln39_fu_1064_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i1_fu_204 <= 5'd9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_572_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_2158 <= empty_fu_584_p1;
        icmp_ln51_1_reg_2198 <= icmp_ln51_1_fu_713_p2;
        icmp_ln51_2_reg_2219 <= icmp_ln51_2_fu_806_p2;
        icmp_ln51_3_reg_2234 <= icmp_ln51_3_fu_899_p2;
        icmp_ln51_4_reg_2249 <= icmp_ln51_4_fu_986_p2;
        icmp_ln51_reg_2172 <= icmp_ln51_fu_620_p2;
        icmp_ln66_1_reg_2265 <= icmp_ln66_1_fu_1046_p2;
        icmp_ln66_2_reg_2271 <= icmp_ln66_2_fu_1052_p2;
        icmp_ln66_3_reg_2277 <= icmp_ln66_3_fu_1058_p2;
        icmp_ln66_reg_2259 <= icmp_ln66_fu_1040_p2;
        mul_ln52_1_reg_2193 <= mul_ln52_1_fu_494_p2;
        mul_ln52_2_reg_2209 <= mul_ln52_2_fu_478_p2;
        mul_ln52_3_reg_2214 <= mul_ln52_3_fu_499_p2;
        mul_ln52_4_reg_2224 <= mul_ln52_4_fu_482_p2;
        mul_ln52_5_reg_2229 <= mul_ln52_5_fu_504_p2;
        mul_ln52_6_reg_2239 <= mul_ln52_6_fu_486_p2;
        mul_ln52_7_reg_2244 <= mul_ln52_7_fu_509_p2;
        mul_ln52_8_reg_2254 <= mul_ln52_8_fu_490_p2;
        mul_ln52_reg_2183 <= mul_ln52_fu_474_p2;
        tmp_1_reg_2177 <= tmp_1_fu_647_p12;
        tmp_2_reg_2188 <= tmp_2_fu_680_p12;
        tmp_3_reg_2203 <= tmp_3_fu_740_p12;
        tmp_reg_2167 <= tmp_fu_588_p12;
        trunc_ln39_reg_2152 <= trunc_ln39_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i1_1_reg_2138 <= ap_sig_allocacmp_i1_1;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add6555_out_ap_vld = 1'b1;
    end else begin
        add6555_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_13256_out_ap_vld = 1'b1;
    end else begin
        add65_13256_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_160_out_ap_vld = 1'b1;
    end else begin
        add65_160_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_161_out_ap_vld = 1'b1;
    end else begin
        add65_1_161_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_262_out_ap_vld = 1'b1;
    end else begin
        add65_1_262_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_363_out_ap_vld = 1'b1;
    end else begin
        add65_1_363_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_464_out_ap_vld = 1'b1;
    end else begin
        add65_1_464_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_257_out_ap_vld = 1'b1;
    end else begin
        add65_257_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_358_out_ap_vld = 1'b1;
    end else begin
        add65_358_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_459_out_ap_vld = 1'b1;
    end else begin
        add65_459_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i1_1 = 5'd9;
    end else begin
        ap_sig_allocacmp_i1_1 = i1_fu_204;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add6555_out = add6555_fu_164;

assign add65_13256_out = add65_13256_fu_168;

assign add65_160_out = add65_160_fu_184;

assign add65_1_161_out = add65_1_161_fu_188;

assign add65_1_262_out = add65_1_262_fu_192;

assign add65_1_363_out = add65_1_363_fu_196;

assign add65_1_464_out = add65_1_464_fu_200;

assign add65_257_out = add65_257_fu_172;

assign add65_358_out = add65_358_fu_176;

assign add65_459_out = add65_459_fu_180;

assign add_ln39_fu_1064_p2 = ($signed(ap_sig_allocacmp_i1_1) + $signed(5'd31));

assign add_ln51_1_fu_707_p2 = (ap_sig_allocacmp_i1_1 + 5'd3);

assign add_ln51_2_fu_893_p2 = (ap_sig_allocacmp_i1_1 + 5'd7);

assign add_ln51_3_fu_1209_p2 = (i1_1_reg_2138 + 5'd9);

assign add_ln51_fu_614_p2 = (ap_sig_allocacmp_i1_1 + 5'd1);

assign add_ln52_1_fu_1156_p2 = (i1_1_reg_2138 + 5'd4);

assign add_ln52_2_fu_1175_p2 = (i1_1_reg_2138 + 5'd6);

assign add_ln52_3_fu_1194_p2 = (i1_1_reg_2138 + 5'd8);

assign add_ln52_fu_1137_p2 = (i1_1_reg_2138 + 5'd2);

assign add_ln67_10_fu_1623_p2 = (add65_160_fu_184 + add_ln67_9_fu_1617_p2);

assign add_ln67_11_fu_1684_p2 = (and_ln67_11_fu_1678_p2 + and_ln67_10_fu_1664_p2);

assign add_ln67_12_fu_1690_p2 = (add65_1_161_fu_188 + add_ln67_11_fu_1684_p2);

assign add_ln67_13_fu_1743_p2 = (and_ln67_12_fu_1724_p2 + and_ln67_13_fu_1737_p2);

assign add_ln67_14_fu_1749_p2 = (add65_1_262_fu_192 + add_ln67_13_fu_1743_p2);

assign add_ln67_15_fu_1793_p2 = (and_ln67_14_fu_1773_p2 + and_ln67_15_fu_1787_p2);

assign add_ln67_16_fu_1799_p2 = (add65_1_363_fu_196 + add_ln67_15_fu_1793_p2);

assign add_ln67_17_fu_1860_p2 = (and_ln67_16_fu_1840_p2 + and_ln67_17_fu_1854_p2);

assign add_ln67_18_fu_1866_p2 = (add65_1_464_fu_200 + add_ln67_17_fu_1860_p2);

assign add_ln67_1_fu_1319_p2 = (and_ln67_1_fu_1313_p2 + and_ln67_fu_1300_p2);

assign add_ln67_2_fu_1325_p2 = (add65_13256_fu_168 + add_ln67_1_fu_1319_p2);

assign add_ln67_3_fu_1390_p2 = (and_ln67_3_fu_1384_p2 + and_ln67_2_fu_1370_p2);

assign add_ln67_4_fu_1396_p2 = (add65_257_fu_172 + add_ln67_3_fu_1390_p2);

assign add_ln67_5_fu_1470_p2 = (and_ln67_5_fu_1464_p2 + and_ln67_4_fu_1451_p2);

assign add_ln67_6_fu_1476_p2 = (add65_358_fu_176 + add_ln67_5_fu_1470_p2);

assign add_ln67_7_fu_1539_p2 = (and_ln67_7_fu_1533_p2 + and_ln67_6_fu_1519_p2);

assign add_ln67_8_fu_1545_p2 = (add65_459_fu_180 + add_ln67_7_fu_1539_p2);

assign add_ln67_9_fu_1617_p2 = (and_ln67_9_fu_1611_p2 + and_ln67_8_fu_1598_p2);

assign add_ln67_fu_1244_p2 = (mul_ln67_fu_398_p2 + add6555_fu_164);

assign and_ln51_1_fu_719_p2 = (icmp_ln51_1_fu_713_p2 & empty_fu_584_p1);

assign and_ln51_2_fu_812_p2 = (icmp_ln51_2_fu_806_p2 & empty_fu_584_p1);

assign and_ln51_3_fu_905_p2 = (icmp_ln51_3_fu_899_p2 & empty_fu_584_p1);

assign and_ln51_4_fu_992_p2 = (icmp_ln51_4_fu_986_p2 & empty_fu_584_p1);

assign and_ln51_fu_626_p2 = (icmp_ln51_fu_620_p2 & empty_fu_584_p1);

assign and_ln66_1_fu_1402_p2 = (icmp_ln66_1_reg_2265 & empty_reg_2158);

assign and_ln66_2_fu_1551_p2 = (icmp_ln66_2_reg_2271 & empty_reg_2158);

assign and_ln66_3_fu_1696_p2 = (icmp_ln66_3_reg_2277 & empty_reg_2158);

assign and_ln66_4_fu_1811_p2 = (icmp_ln66_4_fu_1805_p2 & empty_reg_2158);

assign and_ln66_fu_1250_p2 = (icmp_ln66_reg_2259 & empty_reg_2158);

assign and_ln67_10_fu_1664_p2 = (select_ln67_15_fu_1656_p3 & mul_ln67_11_fu_442_p2);

assign and_ln67_11_fu_1678_p2 = (select_ln67_16_fu_1670_p3 & mul_ln67_12_fu_446_p2);

assign and_ln67_12_fu_1724_p2 = (select_ln67_17_fu_1717_p3 & mul_ln67_13_fu_450_p2);

assign and_ln67_13_fu_1737_p2 = (select_ln67_18_fu_1730_p3 & mul_ln67_14_fu_454_p2);

assign and_ln67_14_fu_1773_p2 = (select_ln67_19_fu_1765_p3 & mul_ln67_15_fu_458_p2);

assign and_ln67_15_fu_1787_p2 = (select_ln67_20_fu_1779_p3 & mul_ln67_16_fu_462_p2);

assign and_ln67_16_fu_1840_p2 = (select_ln67_21_fu_1833_p3 & mul_ln67_17_fu_466_p2);

assign and_ln67_17_fu_1854_p2 = (select_ln67_22_fu_1846_p3 & mul_ln67_18_fu_470_p2);

assign and_ln67_1_fu_1313_p2 = (select_ln67_6_fu_1306_p3 & mul_ln67_2_fu_406_p2);

assign and_ln67_2_fu_1370_p2 = (select_ln67_7_fu_1362_p3 & mul_ln67_3_fu_410_p2);

assign and_ln67_3_fu_1384_p2 = (select_ln67_8_fu_1376_p3 & mul_ln67_4_fu_414_p2);

assign and_ln67_4_fu_1451_p2 = (select_ln67_9_fu_1444_p3 & mul_ln67_5_fu_418_p2);

assign and_ln67_5_fu_1464_p2 = (select_ln67_10_fu_1457_p3 & mul_ln67_6_fu_422_p2);

assign and_ln67_6_fu_1519_p2 = (select_ln67_11_fu_1511_p3 & mul_ln67_7_fu_426_p2);

assign and_ln67_7_fu_1533_p2 = (select_ln67_12_fu_1525_p3 & mul_ln67_8_fu_430_p2);

assign and_ln67_8_fu_1598_p2 = (select_ln67_13_fu_1591_p3 & mul_ln67_9_fu_434_p2);

assign and_ln67_9_fu_1611_p2 = (select_ln67_14_fu_1604_p3 & mul_ln67_10_fu_438_p2);

assign and_ln67_fu_1300_p2 = (select_ln67_5_fu_1293_p3 & mul_ln67_1_fu_402_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_22_fu_800_p2 = (ap_sig_allocacmp_i1_1 + 5'd5);

assign empty_fu_584_p1 = ap_sig_allocacmp_i1_1[0:0];

assign icmp_ln51_1_fu_713_p2 = (($signed(add_ln51_1_fu_707_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_806_p2 = (($signed(empty_22_fu_800_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln51_3_fu_899_p2 = ((add_ln51_2_fu_893_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln51_4_fu_986_p2 = (($signed(ap_sig_allocacmp_i1_1) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_620_p2 = (($signed(add_ln51_fu_614_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_1165_p2 = (($signed(add_ln52_1_fu_1156_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_1184_p2 = (($signed(add_ln52_2_fu_1175_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_1203_p2 = ((add_ln52_3_fu_1194_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1146_p2 = (($signed(add_ln52_fu_1137_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln66_1_fu_1046_p2 = (($signed(add_ln51_1_fu_707_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_1052_p2 = (($signed(empty_22_fu_800_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln66_3_fu_1058_p2 = ((add_ln51_2_fu_893_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln66_4_fu_1805_p2 = ((add_ln51_3_fu_1209_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1040_p2 = (($signed(add_ln51_fu_614_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_1505_p2 = (($signed(add_ln52_1_fu_1156_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln67_2_fu_1650_p2 = (($signed(add_ln52_2_fu_1175_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln67_3_fu_1759_p2 = ((add_ln52_3_fu_1194_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1356_p2 = (($signed(add_ln52_fu_1137_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign mul_ln52_1_fu_494_p1 = 32'd19;

assign mul_ln52_2_fu_478_p1 = mul_ln52_2_fu_478_p10;

assign mul_ln52_2_fu_478_p10 = ((and_ln51_1_fu_719_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_3_fu_499_p1 = 32'd19;

assign mul_ln52_4_fu_482_p1 = mul_ln52_4_fu_482_p10;

assign mul_ln52_4_fu_482_p10 = ((and_ln51_2_fu_812_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_5_fu_504_p1 = 32'd19;

assign mul_ln52_6_fu_486_p1 = mul_ln52_6_fu_486_p10;

assign mul_ln52_6_fu_486_p10 = ((and_ln51_3_fu_905_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_7_fu_509_p1 = 32'd19;

assign mul_ln52_8_fu_490_p1 = mul_ln52_8_fu_490_p10;

assign mul_ln52_8_fu_490_p10 = ((and_ln51_4_fu_992_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_fu_474_p1 = mul_ln52_fu_474_p10;

assign mul_ln52_fu_474_p10 = ((and_ln51_fu_626_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln67_10_fu_438_p0 = mul_ln67_10_fu_438_p00;

assign mul_ln67_10_fu_438_p00 = select_ln67_2_fu_1578_p3;

assign mul_ln67_10_fu_438_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_11_fu_442_p0 = mul_ln67_11_fu_442_p00;

assign mul_ln67_11_fu_442_p00 = mul_ln52_5_reg_2229;

assign mul_ln67_11_fu_442_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_12_fu_446_p0 = mul_ln67_12_fu_446_p00;

assign mul_ln67_12_fu_446_p00 = tmp_15_fu_1635_p6;

assign mul_ln67_12_fu_446_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_13_fu_450_p0 = mul_ln67_13_fu_450_p00;

assign mul_ln67_13_fu_450_p00 = mul_ln52_6_reg_2239;

assign mul_ln67_13_fu_450_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_14_fu_454_p0 = mul_ln67_14_fu_454_p00;

assign mul_ln67_14_fu_454_p00 = select_ln67_3_fu_1705_p3;

assign mul_ln67_14_fu_454_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_15_fu_458_p0 = mul_ln67_15_fu_458_p00;

assign mul_ln67_15_fu_458_p00 = mul_ln52_7_reg_2244;

assign mul_ln67_15_fu_458_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_16_fu_462_p0 = mul_ln67_16_fu_462_p00;

assign mul_ln67_16_fu_462_p00 = $unsigned(tmp_2_reg_2188);

assign mul_ln67_16_fu_462_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_17_fu_466_p0 = mul_ln67_17_fu_466_p00;

assign mul_ln67_17_fu_466_p00 = mul_ln52_8_reg_2254;

assign mul_ln67_17_fu_466_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_18_fu_470_p0 = mul_ln67_18_fu_470_p00;

assign mul_ln67_18_fu_470_p00 = select_ln67_4_fu_1821_p3;

assign mul_ln67_18_fu_470_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_1_fu_402_p0 = mul_ln67_1_fu_402_p00;

assign mul_ln67_1_fu_402_p00 = mul_ln52_reg_2183;

assign mul_ln67_1_fu_402_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_2_fu_406_p0 = mul_ln67_2_fu_406_p00;

assign mul_ln67_2_fu_406_p00 = select_ln67_fu_1280_p3;

assign mul_ln67_2_fu_406_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_3_fu_410_p0 = mul_ln67_3_fu_410_p00;

assign mul_ln67_3_fu_410_p00 = mul_ln52_1_reg_2193;

assign mul_ln67_3_fu_410_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_4_fu_414_p0 = mul_ln67_4_fu_414_p00;

assign mul_ln67_4_fu_414_p00 = tmp_11_fu_1337_p10;

assign mul_ln67_4_fu_414_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_5_fu_418_p0 = mul_ln67_5_fu_418_p00;

assign mul_ln67_5_fu_418_p00 = mul_ln52_2_reg_2209;

assign mul_ln67_5_fu_418_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_6_fu_422_p0 = mul_ln67_6_fu_422_p00;

assign mul_ln67_6_fu_422_p00 = select_ln67_1_fu_1431_p3;

assign mul_ln67_6_fu_422_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_7_fu_426_p0 = mul_ln67_7_fu_426_p00;

assign mul_ln67_7_fu_426_p00 = mul_ln52_3_reg_2214;

assign mul_ln67_7_fu_426_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_8_fu_430_p0 = mul_ln67_8_fu_430_p00;

assign mul_ln67_8_fu_430_p00 = tmp_13_fu_1488_p8;

assign mul_ln67_8_fu_430_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_9_fu_434_p0 = mul_ln67_9_fu_434_p00;

assign mul_ln67_9_fu_434_p00 = mul_ln52_4_reg_2224;

assign mul_ln67_9_fu_434_p1 = zext_ln52_fu_1111_p1;

assign mul_ln67_fu_398_p0 = mul_ln67_fu_398_p00;

assign mul_ln67_fu_398_p00 = tmp_s_fu_1223_p12;

assign mul_ln67_fu_398_p1 = zext_ln52_fu_1111_p1;

assign select_ln67_10_fu_1457_p3 = ((icmp_ln66_1_reg_2265[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_11_fu_1511_p3 = ((icmp_ln52_1_fu_1165_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_12_fu_1525_p3 = ((icmp_ln67_1_fu_1505_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_13_fu_1591_p3 = ((icmp_ln51_2_reg_2219[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_14_fu_1604_p3 = ((icmp_ln66_2_reg_2271[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_15_fu_1656_p3 = ((icmp_ln52_2_fu_1184_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_16_fu_1670_p3 = ((icmp_ln67_2_fu_1650_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_17_fu_1717_p3 = ((icmp_ln51_3_reg_2234[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_18_fu_1730_p3 = ((icmp_ln66_3_reg_2277[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_19_fu_1765_p3 = ((icmp_ln52_3_fu_1203_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_1_fu_1431_p3 = ((and_ln66_1_fu_1402_p2[0:0] == 1'b1) ? shl_ln67_1_fu_1425_p2 : tmp_12_fu_1412_p9);

assign select_ln67_20_fu_1779_p3 = ((icmp_ln67_3_fu_1759_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_21_fu_1833_p3 = ((icmp_ln51_4_reg_2249[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_22_fu_1846_p3 = ((icmp_ln66_4_fu_1805_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_2_fu_1578_p3 = ((and_ln66_2_fu_1551_p2[0:0] == 1'b1) ? shl_ln67_2_fu_1572_p2 : tmp_14_fu_1561_p7);

assign select_ln67_3_fu_1705_p3 = ((and_ln66_3_fu_1696_p2[0:0] == 1'b1) ? shl_ln67_3_fu_1700_p2 : tmp_1_reg_2177);

assign select_ln67_4_fu_1821_p3 = ((and_ln66_4_fu_1811_p2[0:0] == 1'b1) ? shl_ln67_4_fu_1816_p2 : tmp_3_reg_2203);

assign select_ln67_5_fu_1293_p3 = ((icmp_ln51_reg_2172[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_6_fu_1306_p3 = ((icmp_ln66_reg_2259[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_7_fu_1362_p3 = ((icmp_ln52_fu_1146_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_8_fu_1376_p3 = ((icmp_ln67_fu_1356_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_9_fu_1444_p3 = ((icmp_ln51_1_reg_2198[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln67_fu_1280_p3 = ((and_ln66_fu_1250_p2[0:0] == 1'b1) ? shl_ln67_fu_1274_p2 : tmp_10_fu_1259_p11);

assign shl_ln67_1_fu_1425_p2 = tmp_12_fu_1412_p9 << 32'd1;

assign shl_ln67_2_fu_1572_p2 = tmp_14_fu_1561_p7 << 32'd1;

assign shl_ln67_3_fu_1700_p2 = tmp_1_reg_2177 << 32'd1;

assign shl_ln67_4_fu_1816_p2 = tmp_3_reg_2203 << 32'd1;

assign shl_ln67_fu_1274_p2 = tmp_10_fu_1259_p11 << 32'd1;

assign tmp_10_fu_1259_p10 = ($signed(4'd8) - $signed(trunc_ln39_reg_2152));

assign tmp_11_fu_1337_p9 = (trunc_ln39_2_fu_1108_p1 ^ 3'd7);

assign tmp_12_fu_1412_p8 = ($signed(3'd6) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_13_fu_1488_p7 = ($signed(3'd5) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_14_fu_1561_p6 = ($signed(3'd4) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_15_fu_1635_p5 = (trunc_ln39_1_fu_1105_p1 ^ 2'd3);

assign tmp_16_fu_572_p3 = ap_sig_allocacmp_i1_1[32'd4];

assign tmp_1_fu_647_p11 = (4'd2 - trunc_ln39_fu_580_p1);

assign tmp_2_fu_680_p11 = (4'd1 - trunc_ln39_fu_580_p1);

assign tmp_3_fu_740_p11 = (4'd0 - trunc_ln39_fu_580_p1);

assign tmp_4_fu_773_p11 = (trunc_ln39_fu_580_p1 ^ 4'd15);

assign tmp_5_fu_833_p11 = ($signed(4'd14) - $signed(trunc_ln39_fu_580_p1));

assign tmp_6_fu_866_p11 = ($signed(4'd13) - $signed(trunc_ln39_fu_580_p1));

assign tmp_7_fu_926_p11 = ($signed(4'd12) - $signed(trunc_ln39_fu_580_p1));

assign tmp_8_fu_959_p11 = ($signed(4'd11) - $signed(trunc_ln39_fu_580_p1));

assign tmp_9_fu_1013_p11 = ($signed(4'd10) - $signed(trunc_ln39_fu_580_p1));

assign tmp_s_fu_1223_p11 = ($signed(4'd9) - $signed(trunc_ln39_reg_2152));

assign trunc_ln39_1_fu_1105_p1 = i1_1_reg_2138[1:0];

assign trunc_ln39_2_fu_1108_p1 = i1_1_reg_2138[2:0];

assign trunc_ln39_fu_580_p1 = ap_sig_allocacmp_i1_1[3:0];

assign zext_ln52_fu_1111_p1 = tmp_reg_2167;

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1
