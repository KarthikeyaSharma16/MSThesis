// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_reload,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg2_r_reload,
        arg2_r_1_reload,
        arg2_r_2_reload,
        arg2_r_3_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg2_r_6_reload,
        arg2_r_7_reload,
        arg2_r_8_reload,
        arg2_r_9_reload,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld,
        p_out2,
        p_out2_ap_vld,
        p_out3,
        p_out3_ap_vld,
        p_out4,
        p_out4_ap_vld,
        p_out5,
        p_out5_ap_vld,
        p_out6,
        p_out6_ap_vld,
        p_out7,
        p_out7_ap_vld,
        p_out8,
        p_out8_ap_vld,
        add7135_out,
        add7135_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_9_reload;
output  [63:0] p_out;
output   p_out_ap_vld;
output  [63:0] p_out1;
output   p_out1_ap_vld;
output  [63:0] p_out2;
output   p_out2_ap_vld;
output  [63:0] p_out3;
output   p_out3_ap_vld;
output  [63:0] p_out4;
output   p_out4_ap_vld;
output  [63:0] p_out5;
output   p_out5_ap_vld;
output  [63:0] p_out6;
output   p_out6_ap_vld;
output  [63:0] p_out7;
output   p_out7_ap_vld;
output  [63:0] p_out8;
output   p_out8_ap_vld;
output  [63:0] add7135_out;
output   add7135_out_ap_vld;

reg ap_idle;
reg p_out_ap_vld;
reg p_out1_ap_vld;
reg p_out2_ap_vld;
reg p_out3_ap_vld;
reg p_out4_ap_vld;
reg p_out5_ap_vld;
reg p_out6_ap_vld;
reg p_out7_ap_vld;
reg p_out8_ap_vld;
reg add7135_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln35_fu_520_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln55_fu_567_p1;
reg   [63:0] zext_ln55_reg_1705;
wire   [31:0] select_ln49_fu_688_p3;
reg   [31:0] select_ln49_reg_1718;
wire   [31:0] select_ln49_1_fu_757_p3;
reg   [31:0] select_ln49_1_reg_1723;
wire   [31:0] select_ln49_2_fu_839_p3;
reg   [31:0] select_ln49_2_reg_1728;
wire   [31:0] select_ln49_3_fu_906_p3;
reg   [31:0] select_ln49_3_reg_1733;
wire   [31:0] select_ln49_4_fu_985_p3;
reg   [31:0] select_ln49_4_reg_1738;
wire   [31:0] select_ln49_5_fu_1048_p3;
reg   [31:0] select_ln49_5_reg_1743;
wire   [31:0] select_ln49_6_fu_1108_p3;
reg   [31:0] select_ln49_6_reg_1748;
wire   [31:0] select_ln49_7_fu_1153_p3;
reg   [31:0] select_ln49_7_reg_1753;
wire   [31:0] select_ln49_8_fu_1203_p3;
reg   [31:0] select_ln49_8_reg_1758;
reg   [63:0] add7135_fu_148;
wire   [63:0] add_ln55_fu_599_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] empty_fu_152;
wire   [63:0] add_ln55_1_fu_1252_p2;
reg   [63:0] empty_22_fu_156;
wire   [63:0] add_ln55_2_fu_1262_p2;
reg   [63:0] empty_23_fu_160;
wire   [63:0] add_ln55_3_fu_1272_p2;
reg   [63:0] empty_24_fu_164;
wire   [63:0] add_ln55_4_fu_1282_p2;
reg   [63:0] empty_25_fu_168;
wire   [63:0] add_ln55_5_fu_1292_p2;
reg   [63:0] empty_26_fu_172;
wire   [63:0] add_ln55_6_fu_1302_p2;
reg   [63:0] empty_27_fu_176;
wire   [63:0] add_ln55_7_fu_1312_p2;
reg   [63:0] empty_28_fu_180;
wire   [63:0] add_ln55_8_fu_1322_p2;
reg   [63:0] empty_29_fu_184;
wire   [63:0] add_ln55_9_fu_1332_p2;
reg   [3:0] i1_fu_188;
wire   [3:0] add_ln49_fu_526_p2;
wire    ap_block_pp0_stage0_01001;
wire  signed [6:0] mul_ln51_fu_382_p0;
wire  signed [31:0] select_ln51_fu_640_p3;
wire  signed [31:0] tmp_2_fu_617_p12;
wire  signed [6:0] mul_ln51_2_fu_386_p0;
wire  signed [31:0] tmp_7_fu_783_p12;
wire  signed [6:0] mul_ln51_4_fu_390_p0;
wire  signed [31:0] tmp_4_fu_932_p12;
wire  signed [6:0] mul_ln51_6_fu_394_p0;
wire  signed [31:0] tmp_13_fu_1074_p12;
wire  signed [6:0] mul_ln51_8_fu_398_p0;
wire  signed [31:0] tmp_15_fu_1173_p12;
wire   [31:0] mul_ln55_fu_402_p0;
wire   [31:0] mul_ln55_fu_402_p1;
wire   [31:0] mul_ln55_1_fu_406_p0;
wire   [31:0] mul_ln55_1_fu_406_p1;
wire   [31:0] mul_ln55_2_fu_410_p0;
wire   [31:0] mul_ln55_2_fu_410_p1;
wire   [31:0] mul_ln55_3_fu_414_p0;
wire   [31:0] mul_ln55_3_fu_414_p1;
wire   [31:0] mul_ln55_4_fu_418_p0;
wire   [31:0] mul_ln55_4_fu_418_p1;
wire   [31:0] mul_ln55_5_fu_422_p0;
wire   [31:0] mul_ln55_5_fu_422_p1;
wire   [31:0] mul_ln55_6_fu_426_p0;
wire   [31:0] mul_ln55_6_fu_426_p1;
wire   [31:0] mul_ln55_7_fu_430_p0;
wire   [31:0] mul_ln55_7_fu_430_p1;
wire   [31:0] mul_ln55_8_fu_434_p0;
wire   [31:0] mul_ln55_8_fu_434_p1;
wire   [31:0] mul_ln55_9_fu_438_p0;
wire   [31:0] mul_ln55_9_fu_438_p1;
wire  signed [31:0] tmp_5_fu_714_p12;
wire   [5:0] mul_ln51_1_fu_442_p1;
wire  signed [31:0] tmp_9_fu_865_p12;
wire   [5:0] mul_ln51_3_fu_447_p1;
wire  signed [31:0] tmp_11_fu_1011_p12;
wire   [5:0] mul_ln51_5_fu_452_p1;
wire  signed [31:0] tmp_14_fu_1134_p12;
wire   [5:0] mul_ln51_7_fu_457_p1;
wire   [31:0] tmp_fu_551_p12;
wire   [3:0] tmp_1_fu_578_p11;
wire   [31:0] tmp_1_fu_578_p12;
wire   [63:0] mul_ln55_fu_402_p2;
wire   [3:0] tmp_2_fu_617_p11;
wire   [0:0] empty_30_fu_547_p1;
wire   [3:0] tmp_3_fu_659_p10;
wire   [31:0] tmp_3_fu_659_p11;
wire   [31:0] shl_ln55_fu_674_p2;
wire   [0:0] icmp_ln49_fu_605_p2;
wire   [31:0] mul_ln51_fu_382_p2;
wire   [31:0] select_ln55_fu_680_p3;
wire   [3:0] add_ln49_1_fu_696_p2;
wire   [3:0] tmp_5_fu_714_p11;
wire   [2:0] trunc_ln35_1_fu_543_p1;
wire   [2:0] tmp_6_fu_743_p9;
wire   [0:0] icmp_ln49_1_fu_702_p2;
wire   [31:0] mul_ln51_1_fu_442_p2;
wire   [31:0] tmp_6_fu_743_p10;
wire   [3:0] add_ln49_2_fu_765_p2;
wire   [3:0] tmp_7_fu_783_p11;
wire   [2:0] tmp_8_fu_812_p8;
wire   [31:0] tmp_8_fu_812_p9;
wire   [31:0] shl_ln55_1_fu_825_p2;
wire   [0:0] icmp_ln49_2_fu_771_p2;
wire   [31:0] mul_ln51_2_fu_386_p2;
wire   [31:0] select_ln55_1_fu_831_p3;
wire   [3:0] add_ln49_3_fu_847_p2;
wire   [3:0] tmp_9_fu_865_p11;
wire   [2:0] tmp_s_fu_894_p7;
wire   [0:0] icmp_ln49_3_fu_853_p2;
wire   [31:0] mul_ln51_3_fu_447_p2;
wire   [31:0] tmp_s_fu_894_p8;
wire   [3:0] add_ln49_4_fu_914_p2;
wire   [3:0] tmp_4_fu_932_p11;
wire   [2:0] tmp_10_fu_960_p6;
wire   [31:0] tmp_10_fu_960_p7;
wire   [31:0] shl_ln55_2_fu_971_p2;
wire   [0:0] icmp_ln49_4_fu_920_p2;
wire   [31:0] mul_ln51_4_fu_390_p2;
wire   [31:0] select_ln55_2_fu_977_p3;
wire   [3:0] add_ln49_5_fu_993_p2;
wire   [3:0] tmp_11_fu_1011_p11;
wire   [1:0] trunc_ln35_fu_539_p1;
wire   [1:0] tmp_12_fu_1038_p5;
wire   [0:0] icmp_ln49_5_fu_999_p2;
wire   [31:0] mul_ln51_5_fu_452_p2;
wire   [31:0] tmp_12_fu_1038_p6;
wire   [4:0] zext_ln35_fu_535_p1;
wire   [4:0] add_ln49_6_fu_1056_p2;
wire   [3:0] tmp_13_fu_1074_p11;
wire   [31:0] shl_ln55_3_fu_1094_p2;
wire   [0:0] icmp_ln49_6_fu_1062_p2;
wire   [31:0] mul_ln51_6_fu_394_p2;
wire   [31:0] select_ln55_3_fu_1100_p3;
wire   [4:0] add_ln49_7_fu_1116_p2;
wire   [3:0] tmp_14_fu_1134_p11;
wire   [0:0] icmp_ln49_7_fu_1122_p2;
wire   [31:0] mul_ln51_7_fu_457_p2;
wire   [3:0] tmp_15_fu_1173_p11;
wire   [31:0] shl_ln55_4_fu_1191_p2;
wire   [0:0] icmp_ln49_8_fu_1161_p2;
wire   [31:0] mul_ln51_8_fu_398_p2;
wire   [31:0] select_ln55_4_fu_1196_p3;
wire   [63:0] mul_ln55_1_fu_406_p2;
wire   [63:0] mul_ln55_2_fu_410_p2;
wire   [63:0] mul_ln55_3_fu_414_p2;
wire   [63:0] mul_ln55_4_fu_418_p2;
wire   [63:0] mul_ln55_5_fu_422_p2;
wire   [63:0] mul_ln55_6_fu_426_p2;
wire   [63:0] mul_ln55_7_fu_430_p2;
wire   [63:0] mul_ln55_8_fu_434_p2;
wire   [63:0] mul_ln55_9_fu_438_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln55_1_fu_406_p00;
wire   [63:0] mul_ln55_2_fu_410_p00;
wire   [63:0] mul_ln55_3_fu_414_p00;
wire   [63:0] mul_ln55_4_fu_418_p00;
wire   [63:0] mul_ln55_5_fu_422_p00;
wire   [63:0] mul_ln55_6_fu_426_p00;
wire   [63:0] mul_ln55_7_fu_430_p00;
wire   [63:0] mul_ln55_8_fu_434_p00;
wire   [63:0] mul_ln55_9_fu_438_p00;
wire   [63:0] mul_ln55_fu_402_p00;
wire   [63:0] mul_ln55_fu_402_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_7s_32s_32_1_1_U25(
    .din0(mul_ln51_fu_382_p0),
    .din1(tmp_2_fu_617_p12),
    .dout(mul_ln51_fu_382_p2)
);

fiat_25519_carry_mul_mul_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_7s_32s_32_1_1_U26(
    .din0(mul_ln51_2_fu_386_p0),
    .din1(tmp_7_fu_783_p12),
    .dout(mul_ln51_2_fu_386_p2)
);

fiat_25519_carry_mul_mul_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_7s_32s_32_1_1_U27(
    .din0(mul_ln51_4_fu_390_p0),
    .din1(tmp_4_fu_932_p12),
    .dout(mul_ln51_4_fu_390_p2)
);

fiat_25519_carry_mul_mul_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_7s_32s_32_1_1_U28(
    .din0(mul_ln51_6_fu_394_p0),
    .din1(tmp_13_fu_1074_p12),
    .dout(mul_ln51_6_fu_394_p2)
);

fiat_25519_carry_mul_mul_7s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_7s_32s_32_1_1_U29(
    .din0(mul_ln51_8_fu_398_p0),
    .din1(tmp_15_fu_1173_p12),
    .dout(mul_ln51_8_fu_398_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln55_fu_402_p0),
    .din1(mul_ln55_fu_402_p1),
    .dout(mul_ln55_fu_402_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln55_1_fu_406_p0),
    .din1(mul_ln55_1_fu_406_p1),
    .dout(mul_ln55_1_fu_406_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln55_2_fu_410_p0),
    .din1(mul_ln55_2_fu_410_p1),
    .dout(mul_ln55_2_fu_410_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln55_3_fu_414_p0),
    .din1(mul_ln55_3_fu_414_p1),
    .dout(mul_ln55_3_fu_414_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln55_4_fu_418_p0),
    .din1(mul_ln55_4_fu_418_p1),
    .dout(mul_ln55_4_fu_418_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln55_5_fu_422_p0),
    .din1(mul_ln55_5_fu_422_p1),
    .dout(mul_ln55_5_fu_422_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln55_6_fu_426_p0),
    .din1(mul_ln55_6_fu_426_p1),
    .dout(mul_ln55_6_fu_426_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln55_7_fu_430_p0),
    .din1(mul_ln55_7_fu_430_p1),
    .dout(mul_ln55_7_fu_430_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln55_8_fu_434_p0),
    .din1(mul_ln55_8_fu_434_p1),
    .dout(mul_ln55_8_fu_434_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln55_9_fu_438_p0),
    .din1(mul_ln55_9_fu_438_p1),
    .dout(mul_ln55_9_fu_438_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U40(
    .din0(tmp_5_fu_714_p12),
    .din1(mul_ln51_1_fu_442_p1),
    .dout(mul_ln51_1_fu_442_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U41(
    .din0(tmp_9_fu_865_p12),
    .din1(mul_ln51_3_fu_447_p1),
    .dout(mul_ln51_3_fu_447_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U42(
    .din0(tmp_11_fu_1011_p12),
    .din1(mul_ln51_5_fu_452_p1),
    .dout(mul_ln51_5_fu_452_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U43(
    .din0(tmp_14_fu_1134_p12),
    .din1(mul_ln51_7_fu_457_p1),
    .dout(mul_ln51_7_fu_457_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U44(
    .din0(arg1_r_reload),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(i1_fu_188),
    .dout(tmp_fu_551_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U45(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_1_fu_578_p11),
    .dout(tmp_1_fu_578_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U46(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_2_fu_617_p11),
    .dout(tmp_2_fu_617_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U47(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_3_fu_659_p10),
    .dout(tmp_3_fu_659_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U48(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_5_fu_714_p11),
    .dout(tmp_5_fu_714_p12)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U49(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_6_fu_743_p9),
    .dout(tmp_6_fu_743_p10)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U50(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_7_fu_783_p11),
    .dout(tmp_7_fu_783_p12)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U51(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_8_fu_812_p8),
    .dout(tmp_8_fu_812_p9)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U52(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_9_fu_865_p11),
    .dout(tmp_9_fu_865_p12)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U53(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_s_fu_894_p7),
    .dout(tmp_s_fu_894_p8)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U54(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_4_fu_932_p11),
    .dout(tmp_4_fu_932_p12)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U55(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_10_fu_960_p6),
    .dout(tmp_10_fu_960_p7)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U56(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_11_fu_1011_p11),
    .dout(tmp_11_fu_1011_p12)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U57(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_12_fu_1038_p5),
    .dout(tmp_12_fu_1038_p6)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U58(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_13_fu_1074_p11),
    .dout(tmp_13_fu_1074_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U59(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_14_fu_1134_p11),
    .dout(tmp_14_fu_1134_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U60(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_15_fu_1173_p11),
    .dout(tmp_15_fu_1173_p12)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add7135_fu_148 <= 64'd0;
        end else if (((icmp_ln35_fu_520_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add7135_fu_148 <= add_ln55_fu_599_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_22_fu_156 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_22_fu_156 <= add_ln55_2_fu_1262_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_23_fu_160 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_23_fu_160 <= add_ln55_3_fu_1272_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_24_fu_164 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_24_fu_164 <= add_ln55_4_fu_1282_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_25_fu_168 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_25_fu_168 <= add_ln55_5_fu_1292_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_26_fu_172 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_26_fu_172 <= add_ln55_6_fu_1302_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_27_fu_176 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_27_fu_176 <= add_ln55_7_fu_1312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_28_fu_180 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_28_fu_180 <= add_ln55_8_fu_1322_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_29_fu_184 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_29_fu_184 <= add_ln55_9_fu_1332_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_fu_152 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_fu_152 <= add_ln55_1_fu_1252_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_188 <= 4'd0;
        end else if (((icmp_ln35_fu_520_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_fu_188 <= add_ln49_fu_526_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_520_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln49_1_reg_1723 <= select_ln49_1_fu_757_p3;
        select_ln49_2_reg_1728 <= select_ln49_2_fu_839_p3;
        select_ln49_3_reg_1733 <= select_ln49_3_fu_906_p3;
        select_ln49_4_reg_1738 <= select_ln49_4_fu_985_p3;
        select_ln49_5_reg_1743 <= select_ln49_5_fu_1048_p3;
        select_ln49_6_reg_1748 <= select_ln49_6_fu_1108_p3;
        select_ln49_7_reg_1753 <= select_ln49_7_fu_1153_p3;
        select_ln49_8_reg_1758 <= select_ln49_8_fu_1203_p3;
        select_ln49_reg_1718 <= select_ln49_fu_688_p3;
        zext_ln55_reg_1705[31 : 0] <= zext_ln55_fu_567_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add7135_out_ap_vld = 1'b1;
    end else begin
        add7135_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out2_ap_vld = 1'b1;
    end else begin
        p_out2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out3_ap_vld = 1'b1;
    end else begin
        p_out3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out4_ap_vld = 1'b1;
    end else begin
        p_out4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out5_ap_vld = 1'b1;
    end else begin
        p_out5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out6_ap_vld = 1'b1;
    end else begin
        p_out6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out7_ap_vld = 1'b1;
    end else begin
        p_out7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out8_ap_vld = 1'b1;
    end else begin
        p_out8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add7135_out = add7135_fu_148;

assign add_ln49_1_fu_696_p2 = (i1_fu_188 + 4'd2);

assign add_ln49_2_fu_765_p2 = (i1_fu_188 + 4'd3);

assign add_ln49_3_fu_847_p2 = (i1_fu_188 + 4'd4);

assign add_ln49_4_fu_914_p2 = (i1_fu_188 + 4'd5);

assign add_ln49_5_fu_993_p2 = (i1_fu_188 + 4'd6);

assign add_ln49_6_fu_1056_p2 = (zext_ln35_fu_535_p1 + 5'd7);

assign add_ln49_7_fu_1116_p2 = (zext_ln35_fu_535_p1 + 5'd8);

assign add_ln49_fu_526_p2 = (i1_fu_188 + 4'd1);

assign add_ln55_1_fu_1252_p2 = (mul_ln55_1_fu_406_p2 + empty_fu_152);

assign add_ln55_2_fu_1262_p2 = (mul_ln55_2_fu_410_p2 + empty_22_fu_156);

assign add_ln55_3_fu_1272_p2 = (mul_ln55_3_fu_414_p2 + empty_23_fu_160);

assign add_ln55_4_fu_1282_p2 = (mul_ln55_4_fu_418_p2 + empty_24_fu_164);

assign add_ln55_5_fu_1292_p2 = (mul_ln55_5_fu_422_p2 + empty_25_fu_168);

assign add_ln55_6_fu_1302_p2 = (mul_ln55_6_fu_426_p2 + empty_26_fu_172);

assign add_ln55_7_fu_1312_p2 = (mul_ln55_7_fu_430_p2 + empty_27_fu_176);

assign add_ln55_8_fu_1322_p2 = (mul_ln55_8_fu_434_p2 + empty_28_fu_180);

assign add_ln55_9_fu_1332_p2 = (mul_ln55_9_fu_438_p2 + empty_29_fu_184);

assign add_ln55_fu_599_p2 = (mul_ln55_fu_402_p2 + add7135_fu_148);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_30_fu_547_p1 = i1_fu_188[0:0];

assign icmp_ln35_fu_520_p2 = ((i1_fu_188 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_702_p2 = ((add_ln49_1_fu_696_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_2_fu_771_p2 = ((add_ln49_2_fu_765_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_3_fu_853_p2 = ((add_ln49_3_fu_847_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_4_fu_920_p2 = ((add_ln49_4_fu_914_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_5_fu_999_p2 = ((add_ln49_5_fu_993_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_6_fu_1062_p2 = ((add_ln49_6_fu_1056_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_7_fu_1122_p2 = ((add_ln49_7_fu_1116_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_8_fu_1161_p2 = ((i1_fu_188 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_605_p2 = ((add_ln49_fu_526_p2 > 4'd9) ? 1'b1 : 1'b0);

assign mul_ln51_1_fu_442_p1 = 32'd19;

assign mul_ln51_2_fu_386_p0 = select_ln51_fu_640_p3;

assign mul_ln51_3_fu_447_p1 = 32'd19;

assign mul_ln51_4_fu_390_p0 = select_ln51_fu_640_p3;

assign mul_ln51_5_fu_452_p1 = 32'd19;

assign mul_ln51_6_fu_394_p0 = select_ln51_fu_640_p3;

assign mul_ln51_7_fu_457_p1 = 32'd19;

assign mul_ln51_8_fu_398_p0 = select_ln51_fu_640_p3;

assign mul_ln51_fu_382_p0 = select_ln51_fu_640_p3;

assign mul_ln55_1_fu_406_p0 = mul_ln55_1_fu_406_p00;

assign mul_ln55_1_fu_406_p00 = select_ln49_reg_1718;

assign mul_ln55_1_fu_406_p1 = zext_ln55_reg_1705;

assign mul_ln55_2_fu_410_p0 = mul_ln55_2_fu_410_p00;

assign mul_ln55_2_fu_410_p00 = select_ln49_1_reg_1723;

assign mul_ln55_2_fu_410_p1 = zext_ln55_reg_1705;

assign mul_ln55_3_fu_414_p0 = mul_ln55_3_fu_414_p00;

assign mul_ln55_3_fu_414_p00 = select_ln49_2_reg_1728;

assign mul_ln55_3_fu_414_p1 = zext_ln55_reg_1705;

assign mul_ln55_4_fu_418_p0 = mul_ln55_4_fu_418_p00;

assign mul_ln55_4_fu_418_p00 = select_ln49_3_reg_1733;

assign mul_ln55_4_fu_418_p1 = zext_ln55_reg_1705;

assign mul_ln55_5_fu_422_p0 = mul_ln55_5_fu_422_p00;

assign mul_ln55_5_fu_422_p00 = select_ln49_4_reg_1738;

assign mul_ln55_5_fu_422_p1 = zext_ln55_reg_1705;

assign mul_ln55_6_fu_426_p0 = mul_ln55_6_fu_426_p00;

assign mul_ln55_6_fu_426_p00 = select_ln49_5_reg_1743;

assign mul_ln55_6_fu_426_p1 = zext_ln55_reg_1705;

assign mul_ln55_7_fu_430_p0 = mul_ln55_7_fu_430_p00;

assign mul_ln55_7_fu_430_p00 = select_ln49_6_reg_1748;

assign mul_ln55_7_fu_430_p1 = zext_ln55_reg_1705;

assign mul_ln55_8_fu_434_p0 = mul_ln55_8_fu_434_p00;

assign mul_ln55_8_fu_434_p00 = select_ln49_7_reg_1753;

assign mul_ln55_8_fu_434_p1 = zext_ln55_reg_1705;

assign mul_ln55_9_fu_438_p0 = mul_ln55_9_fu_438_p00;

assign mul_ln55_9_fu_438_p00 = select_ln49_8_reg_1758;

assign mul_ln55_9_fu_438_p1 = zext_ln55_reg_1705;

assign mul_ln55_fu_402_p0 = mul_ln55_fu_402_p00;

assign mul_ln55_fu_402_p00 = tmp_1_fu_578_p12;

assign mul_ln55_fu_402_p1 = mul_ln55_fu_402_p10;

assign mul_ln55_fu_402_p10 = tmp_fu_551_p12;

assign p_out = empty_29_fu_184;

assign p_out1 = empty_28_fu_180;

assign p_out2 = empty_27_fu_176;

assign p_out3 = empty_26_fu_172;

assign p_out4 = empty_25_fu_168;

assign p_out5 = empty_24_fu_164;

assign p_out6 = empty_23_fu_160;

assign p_out7 = empty_22_fu_156;

assign p_out8 = empty_fu_152;

assign select_ln49_1_fu_757_p3 = ((icmp_ln49_1_fu_702_p2[0:0] == 1'b1) ? mul_ln51_1_fu_442_p2 : tmp_6_fu_743_p10);

assign select_ln49_2_fu_839_p3 = ((icmp_ln49_2_fu_771_p2[0:0] == 1'b1) ? mul_ln51_2_fu_386_p2 : select_ln55_1_fu_831_p3);

assign select_ln49_3_fu_906_p3 = ((icmp_ln49_3_fu_853_p2[0:0] == 1'b1) ? mul_ln51_3_fu_447_p2 : tmp_s_fu_894_p8);

assign select_ln49_4_fu_985_p3 = ((icmp_ln49_4_fu_920_p2[0:0] == 1'b1) ? mul_ln51_4_fu_390_p2 : select_ln55_2_fu_977_p3);

assign select_ln49_5_fu_1048_p3 = ((icmp_ln49_5_fu_999_p2[0:0] == 1'b1) ? mul_ln51_5_fu_452_p2 : tmp_12_fu_1038_p6);

assign select_ln49_6_fu_1108_p3 = ((icmp_ln49_6_fu_1062_p2[0:0] == 1'b1) ? mul_ln51_6_fu_394_p2 : select_ln55_3_fu_1100_p3);

assign select_ln49_7_fu_1153_p3 = ((icmp_ln49_7_fu_1122_p2[0:0] == 1'b1) ? mul_ln51_7_fu_457_p2 : tmp_5_fu_714_p12);

assign select_ln49_8_fu_1203_p3 = ((icmp_ln49_8_fu_1161_p2[0:0] == 1'b1) ? mul_ln51_8_fu_398_p2 : select_ln55_4_fu_1196_p3);

assign select_ln49_fu_688_p3 = ((icmp_ln49_fu_605_p2[0:0] == 1'b1) ? mul_ln51_fu_382_p2 : select_ln55_fu_680_p3);

assign select_ln51_fu_640_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign select_ln55_1_fu_831_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? shl_ln55_1_fu_825_p2 : tmp_8_fu_812_p9);

assign select_ln55_2_fu_977_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? shl_ln55_2_fu_971_p2 : tmp_10_fu_960_p7);

assign select_ln55_3_fu_1100_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? shl_ln55_3_fu_1094_p2 : tmp_2_fu_617_p12);

assign select_ln55_4_fu_1196_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? shl_ln55_4_fu_1191_p2 : arg2_r_reload);

assign select_ln55_fu_680_p3 = ((empty_30_fu_547_p1[0:0] == 1'b1) ? shl_ln55_fu_674_p2 : tmp_3_fu_659_p11);

assign shl_ln55_1_fu_825_p2 = tmp_8_fu_812_p9 << 32'd1;

assign shl_ln55_2_fu_971_p2 = tmp_10_fu_960_p7 << 32'd1;

assign shl_ln55_3_fu_1094_p2 = tmp_2_fu_617_p12 << 32'd1;

assign shl_ln55_4_fu_1191_p2 = arg2_r_reload << 32'd1;

assign shl_ln55_fu_674_p2 = tmp_3_fu_659_p11 << 32'd1;

assign tmp_10_fu_960_p6 = ($signed(3'd4) - $signed(trunc_ln35_1_fu_543_p1));

assign tmp_11_fu_1011_p11 = ($signed(4'd13) - $signed(i1_fu_188));

assign tmp_12_fu_1038_p5 = (trunc_ln35_fu_539_p1 ^ 2'd3);

assign tmp_13_fu_1074_p11 = ($signed(4'd12) - $signed(i1_fu_188));

assign tmp_14_fu_1134_p11 = ($signed(4'd11) - $signed(i1_fu_188));

assign tmp_15_fu_1173_p11 = ($signed(4'd10) - $signed(i1_fu_188));

assign tmp_1_fu_578_p11 = ($signed(4'd9) - $signed(i1_fu_188));

assign tmp_2_fu_617_p11 = (4'd2 - i1_fu_188);

assign tmp_3_fu_659_p10 = ($signed(4'd8) - $signed(i1_fu_188));

assign tmp_4_fu_932_p11 = ($signed(4'd14) - $signed(i1_fu_188));

assign tmp_5_fu_714_p11 = (4'd1 - i1_fu_188);

assign tmp_6_fu_743_p9 = (trunc_ln35_1_fu_543_p1 ^ 3'd7);

assign tmp_7_fu_783_p11 = (4'd0 - i1_fu_188);

assign tmp_8_fu_812_p8 = ($signed(3'd6) - $signed(trunc_ln35_1_fu_543_p1));

assign tmp_9_fu_865_p11 = (i1_fu_188 ^ 4'd15);

assign tmp_s_fu_894_p7 = ($signed(3'd5) - $signed(trunc_ln35_1_fu_543_p1));

assign trunc_ln35_1_fu_543_p1 = i1_fu_188[2:0];

assign trunc_ln35_fu_539_p1 = i1_fu_188[1:0];

assign zext_ln35_fu_535_p1 = i1_fu_188;

assign zext_ln55_fu_567_p1 = tmp_fu_551_p12;

always @ (posedge ap_clk) begin
    zext_ln55_reg_1705[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1
