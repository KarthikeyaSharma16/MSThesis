

================================================================
== Vitis HLS Report for 'fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1'
================================================================
* Date:           Thu May  9 14:08:15 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_5 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.436 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        7|        7|  70.000 ns|  70.000 ns|    7|    7|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_35_1  |        5|        5|         2|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.43>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add7141 = alloca i32 1"   --->   Operation 5 'alloca' 'add7141' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty_22 = alloca i32 1"   --->   Operation 7 'alloca' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_23 = alloca i32 1"   --->   Operation 8 'alloca' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%empty_24 = alloca i32 1"   --->   Operation 9 'alloca' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty_25 = alloca i32 1"   --->   Operation 10 'alloca' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_26 = alloca i32 1"   --->   Operation 11 'alloca' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_27 = alloca i32 1"   --->   Operation 12 'alloca' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_28 = alloca i32 1"   --->   Operation 13 'alloca' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_29 = alloca i32 1"   --->   Operation 14 'alloca' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 15 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 16 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 17 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 18 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 19 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 20 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 21 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 22 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 23 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 24 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 25 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 26 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 27 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 28 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 29 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 30 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 31 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 32 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 33 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 34 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 35 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %i1"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_29"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_28"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_27"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_26"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_25"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_24"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_23"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty_22"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %empty"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add7141"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31.1.1"   --->   Operation 47 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%i1_1 = load i4 %i1" [d1.cpp:35]   --->   Operation 48 'load' 'i1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.79ns)   --->   "%icmp_ln35 = icmp_ult  i4 %i1_1, i4 10" [d1.cpp:35]   --->   Operation 49 'icmp' 'icmp_ln35' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln35 = br i1 %icmp_ln35, void %for.end83.exitStub, void %for.body31.1.1.split_ifconv" [d1.cpp:35]   --->   Operation 50 'br' 'br_ln35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i4 %i1_1" [d1.cpp:35]   --->   Operation 51 'zext' 'zext_ln35' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln35 = trunc i4 %i1_1" [d1.cpp:35]   --->   Operation 52 'trunc' 'trunc_ln35' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln35_1 = trunc i4 %i1_1" [d1.cpp:35]   --->   Operation 53 'trunc' 'trunc_ln35_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.77ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 %arg1_r_reload_read, i32 0, i32 %arg1_r_2_reload_read, i32 0, i32 %arg1_r_4_reload_read, i32 0, i32 %arg1_r_6_reload_read, i32 0, i32 %arg1_r_8_reload_read, i4 %i1_1" [d1.cpp:55]   --->   Operation 54 'mux' 'tmp' <Predicate = (icmp_ln35)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.79ns)   --->   "%sub_ln55 = sub i4 9, i4 %i1_1" [d1.cpp:55]   --->   Operation 55 'sub' 'sub_ln55' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.75ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i32 0, i32 %arg2_r_5_reload_read, i32 0, i32 %arg2_r_7_reload_read, i32 0, i32 %arg2_r_9_reload_read, i4 %sub_ln55" [d1.cpp:55]   --->   Operation 56 'mux' 'tmp_1' <Predicate = (icmp_ln35)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.77ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 %arg1_r_1_reload_read, i32 0, i32 %arg1_r_3_reload_read, i32 0, i32 %arg1_r_5_reload_read, i32 0, i32 %arg1_r_7_reload_read, i32 0, i32 %arg1_r_9_reload_read, i4 %i1_1" [d1.cpp:55]   --->   Operation 57 'mux' 'tmp_2' <Predicate = (icmp_ln35)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node sub_ln55_1)   --->   "%or_ln55 = or i4 %i1_1, i4 1" [d1.cpp:55]   --->   Operation 58 'or' 'or_ln55' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln55_1 = sub i4 9, i4 %or_ln55" [d1.cpp:55]   --->   Operation 59 'sub' 'sub_ln55_1' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.77ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 %arg2_r_4_reload_read, i32 0, i32 %arg2_r_6_reload_read, i32 0, i32 %arg2_r_8_reload_read, i4 %sub_ln55_1" [d1.cpp:55]   --->   Operation 60 'mux' 'tmp_3' <Predicate = (icmp_ln35)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.79ns)   --->   "%add_ln49 = add i4 %i1_1, i4 2" [d1.cpp:49]   --->   Operation 61 'add' 'add_ln49' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.79ns)   --->   "%icmp_ln49 = icmp_ugt  i4 %add_ln49, i4 9" [d1.cpp:49]   --->   Operation 62 'icmp' 'icmp_ln49' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.79ns)   --->   "%icmp_ln51 = icmp_eq  i4 %i1_1, i4 8" [d1.cpp:51]   --->   Operation 63 'icmp' 'icmp_ln51' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.44ns)   --->   "%select_ln51 = select i1 %icmp_ln51, i32 %arg2_r_9_reload_read, i32 %arg2_r_1_reload_read" [d1.cpp:51]   --->   Operation 64 'select' 'select_ln51' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 65 '%mul_ln51 = mul i32 %select_ln51, i32 38'
ST_1 : Operation 65 [1/1] (2.75ns)   --->   "%mul_ln51 = mul i32 %select_ln51, i32 38" [d1.cpp:51]   --->   Operation 65 'mul' 'mul_ln51' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 66 '%mul_ln51_1 = mul i32 %select_ln51, i32 19'
ST_1 : Operation 66 [1/1] (2.75ns)   --->   "%mul_ln51_1 = mul i32 %select_ln51, i32 19" [d1.cpp:51]   --->   Operation 66 'mul' 'mul_ln51_1' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.12ns)   --->   "%xor_ln55 = xor i3 %trunc_ln35_1, i3 7" [d1.cpp:55]   --->   Operation 67 'xor' 'xor_ln55' <Predicate = (icmp_ln35)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.72ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i32 0, i32 %arg2_r_5_reload_read, i32 0, i32 %arg2_r_7_reload_read, i3 %xor_ln55" [d1.cpp:55]   --->   Operation 68 'mux' 'tmp_5' <Predicate = (icmp_ln35)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln49)   --->   "%shl_ln55 = shl i32 %tmp_5, i32 1" [d1.cpp:55]   --->   Operation 69 'shl' 'shl_ln55' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln49 = select i1 %icmp_ln49, i32 %mul_ln51, i32 %shl_ln55" [d1.cpp:49]   --->   Operation 70 'select' 'select_ln49' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.44ns)   --->   "%select_ln49_1 = select i1 %icmp_ln49, i32 %mul_ln51_1, i32 %tmp_5" [d1.cpp:49]   --->   Operation 71 'select' 'select_ln49_1' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.79ns)   --->   "%add_ln49_1 = add i4 %i1_1, i4 3" [d1.cpp:49]   --->   Operation 72 'add' 'add_ln49_1' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.79ns)   --->   "%icmp_ln49_1 = icmp_ugt  i4 %add_ln49_1, i4 9" [d1.cpp:49]   --->   Operation 73 'icmp' 'icmp_ln49_1' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.44ns)   --->   "%select_ln51_1 = select i1 %icmp_ln51, i32 %arg2_r_8_reload_read, i32 %arg2_r_reload_read" [d1.cpp:51]   --->   Operation 74 'select' 'select_ln51_1' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 75 '%mul_ln51_4 = mul i32 %select_ln51_1, i32 19'
ST_1 : Operation 75 [1/1] (2.75ns)   --->   "%mul_ln51_4 = mul i32 %select_ln51_1, i32 19" [d1.cpp:51]   --->   Operation 75 'mul' 'mul_ln51_4' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.67ns)   --->   "%sub_ln55_2 = sub i3 6, i3 %trunc_ln35_1" [d1.cpp:55]   --->   Operation 76 'sub' 'sub_ln55_2' <Predicate = (icmp_ln35)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.67ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 %arg2_r_4_reload_read, i32 0, i32 %arg2_r_6_reload_read, i3 %sub_ln55_2" [d1.cpp:55]   --->   Operation 77 'mux' 'tmp_8' <Predicate = (icmp_ln35)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.44ns)   --->   "%select_ln49_2 = select i1 %icmp_ln49_1, i32 %mul_ln51_4, i32 %tmp_8" [d1.cpp:49]   --->   Operation 78 'select' 'select_ln49_2' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.79ns)   --->   "%add_ln49_2 = add i4 %i1_1, i4 4" [d1.cpp:49]   --->   Operation 79 'add' 'add_ln49_2' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%icmp_ln49_2 = icmp_ugt  i4 %add_ln49_2, i4 9" [d1.cpp:49]   --->   Operation 80 'icmp' 'icmp_ln49_2' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%icmp_ln51_1 = icmp_eq  i4 %i1_1, i4 6" [d1.cpp:51]   --->   Operation 81 'icmp' 'icmp_ln51_1' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.44ns)   --->   "%select_ln51_2 = select i1 %icmp_ln51_1, i32 %arg2_r_9_reload_read, i32 %arg2_r_7_reload_read" [d1.cpp:51]   --->   Operation 82 'select' 'select_ln51_2' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 83 '%mul_ln51_7 = mul i32 %select_ln51_2, i32 38'
ST_1 : Operation 83 [1/1] (2.75ns)   --->   "%mul_ln51_7 = mul i32 %select_ln51_2, i32 38" [d1.cpp:51]   --->   Operation 83 'mul' 'mul_ln51_7' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 84 '%mul_ln51_8 = mul i32 %select_ln51_2, i32 19'
ST_1 : Operation 84 [1/1] (2.75ns)   --->   "%mul_ln51_8 = mul i32 %select_ln51_2, i32 19" [d1.cpp:51]   --->   Operation 84 'mul' 'mul_ln51_8' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.67ns)   --->   "%sub_ln55_3 = sub i3 5, i3 %trunc_ln35_1" [d1.cpp:55]   --->   Operation 85 'sub' 'sub_ln55_3' <Predicate = (icmp_ln35)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.62ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.6i32.i3, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i32 0, i32 %arg2_r_5_reload_read, i3 %sub_ln55_3" [d1.cpp:55]   --->   Operation 86 'mux' 'tmp_s' <Predicate = (icmp_ln35)> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_3)   --->   "%shl_ln55_1 = shl i32 %tmp_s, i32 1" [d1.cpp:55]   --->   Operation 87 'shl' 'shl_ln55_1' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln49_3 = select i1 %icmp_ln49_2, i32 %mul_ln51_7, i32 %shl_ln55_1" [d1.cpp:49]   --->   Operation 88 'select' 'select_ln49_3' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.44ns)   --->   "%select_ln49_4 = select i1 %icmp_ln49_2, i32 %mul_ln51_8, i32 %tmp_s" [d1.cpp:49]   --->   Operation 89 'select' 'select_ln49_4' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.79ns)   --->   "%add_ln49_3 = add i4 %i1_1, i4 5" [d1.cpp:49]   --->   Operation 90 'add' 'add_ln49_3' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%icmp_ln49_3 = icmp_ugt  i4 %add_ln49_3, i4 9" [d1.cpp:49]   --->   Operation 91 'icmp' 'icmp_ln49_3' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.44ns)   --->   "%select_ln51_3 = select i1 %icmp_ln51_1, i32 %arg2_r_8_reload_read, i32 %arg2_r_6_reload_read" [d1.cpp:51]   --->   Operation 92 'select' 'select_ln51_3' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 93 '%mul_ln51_11 = mul i32 %select_ln51_3, i32 19'
ST_1 : Operation 93 [1/1] (2.75ns)   --->   "%mul_ln51_11 = mul i32 %select_ln51_3, i32 19" [d1.cpp:51]   --->   Operation 93 'mul' 'mul_ln51_11' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.67ns)   --->   "%sub_ln55_4 = sub i3 4, i3 %trunc_ln35_1" [d1.cpp:55]   --->   Operation 94 'sub' 'sub_ln55_4' <Predicate = (icmp_ln35)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.57ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.5i32.i3, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 %arg2_r_4_reload_read, i3 %sub_ln55_4" [d1.cpp:55]   --->   Operation 95 'mux' 'tmp_4' <Predicate = (icmp_ln35)> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.44ns)   --->   "%select_ln49_5 = select i1 %icmp_ln49_3, i32 %mul_ln51_11, i32 %tmp_4" [d1.cpp:49]   --->   Operation 96 'select' 'select_ln49_5' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.79ns)   --->   "%add_ln49_4 = add i4 %i1_1, i4 6" [d1.cpp:49]   --->   Operation 97 'add' 'add_ln49_4' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%icmp_ln49_4 = icmp_ugt  i4 %add_ln49_4, i4 9" [d1.cpp:49]   --->   Operation 98 'icmp' 'icmp_ln49_4' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.79ns)   --->   "%sub_ln51 = sub i4 13, i4 %i1_1" [d1.cpp:51]   --->   Operation 99 'sub' 'sub_ln51' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.75ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 0, i32 %arg2_r_7_reload_read, i32 0, i32 %arg2_r_9_reload_read, i4 %sub_ln51" [d1.cpp:51]   --->   Operation 100 'mux' 'tmp_7' <Predicate = (icmp_ln35)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 101 '%mul_ln51_14 = mul i32 %tmp_7, i32 38'
ST_1 : Operation 101 [1/1] (2.75ns)   --->   "%mul_ln51_14 = mul i32 %tmp_7, i32 38" [d1.cpp:51]   --->   Operation 101 'mul' 'mul_ln51_14' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 102 '%mul_ln51_15 = mul i32 %tmp_7, i32 19'
ST_1 : Operation 102 [1/1] (2.75ns)   --->   "%mul_ln51_15 = mul i32 %tmp_7, i32 19" [d1.cpp:51]   --->   Operation 102 'mul' 'mul_ln51_15' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.28ns)   --->   "%xor_ln55_1 = xor i2 %trunc_ln35, i2 3" [d1.cpp:55]   --->   Operation 103 'xor' 'xor_ln55_1' <Predicate = (icmp_ln35)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.52ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 0, i32 %arg2_r_1_reload_read, i32 0, i32 %arg2_r_3_reload_read, i2 %xor_ln55_1" [d1.cpp:55]   --->   Operation 104 'mux' 'tmp_9' <Predicate = (icmp_ln35)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_6)   --->   "%shl_ln55_2 = shl i32 %tmp_9, i32 1" [d1.cpp:55]   --->   Operation 105 'shl' 'shl_ln55_2' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln49_6 = select i1 %icmp_ln49_4, i32 %mul_ln51_14, i32 %shl_ln55_2" [d1.cpp:49]   --->   Operation 106 'select' 'select_ln49_6' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.44ns)   --->   "%select_ln49_7 = select i1 %icmp_ln49_4, i32 %mul_ln51_15, i32 %tmp_9" [d1.cpp:49]   --->   Operation 107 'select' 'select_ln49_7' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.79ns)   --->   "%add_ln49_5 = add i5 %zext_ln35, i5 7" [d1.cpp:49]   --->   Operation 108 'add' 'add_ln49_5' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.78ns)   --->   "%icmp_ln49_5 = icmp_ugt  i5 %add_ln49_5, i5 9" [d1.cpp:49]   --->   Operation 109 'icmp' 'icmp_ln49_5' <Predicate = (icmp_ln35)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.79ns)   --->   "%sub_ln51_1 = sub i4 12, i4 %i1_1" [d1.cpp:51]   --->   Operation 110 'sub' 'sub_ln51_1' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.77ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 0, i32 %arg2_r_6_reload_read, i32 0, i32 %arg2_r_8_reload_read, i4 %sub_ln51_1" [d1.cpp:51]   --->   Operation 111 'mux' 'tmp_6' <Predicate = (icmp_ln35)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 112 '%mul_ln51_18 = mul i32 %tmp_6, i32 19'
ST_1 : Operation 112 [1/1] (2.75ns)   --->   "%mul_ln51_18 = mul i32 %tmp_6, i32 19" [d1.cpp:51]   --->   Operation 112 'mul' 'mul_ln51_18' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (0.54ns)   --->   "%sub_ln55_5 = sub i2 2, i2 %trunc_ln35" [d1.cpp:55]   --->   Operation 113 'sub' 'sub_ln55_5' <Predicate = (icmp_ln35)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.47ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg2_r_reload_read, i32 0, i32 %arg2_r_2_reload_read, i2 %sub_ln55_5" [d1.cpp:55]   --->   Operation 114 'mux' 'tmp_10' <Predicate = (icmp_ln35)> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.44ns)   --->   "%select_ln49_8 = select i1 %icmp_ln49_5, i32 %mul_ln51_18, i32 %tmp_10" [d1.cpp:49]   --->   Operation 115 'select' 'select_ln49_8' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.78ns)   --->   "%add_ln49_6 = add i5 %zext_ln35, i5 8" [d1.cpp:49]   --->   Operation 116 'add' 'add_ln49_6' <Predicate = (icmp_ln35)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 117 [1/1] (0.78ns)   --->   "%icmp_ln49_6 = icmp_ugt  i5 %add_ln49_6, i5 9" [d1.cpp:49]   --->   Operation 117 'icmp' 'icmp_ln49_6' <Predicate = (icmp_ln35)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.79ns)   --->   "%sub_ln51_2 = sub i4 11, i4 %i1_1" [d1.cpp:51]   --->   Operation 118 'sub' 'sub_ln51_2' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.75ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 0, i32 %arg2_r_5_reload_read, i32 0, i32 %arg2_r_7_reload_read, i32 0, i32 %arg2_r_9_reload_read, i4 %sub_ln51_2" [d1.cpp:51]   --->   Operation 119 'mux' 'tmp_11' <Predicate = (icmp_ln35)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 120 '%mul_ln51_21 = mul i32 %tmp_11, i32 38'
ST_1 : Operation 120 [1/1] (2.75ns)   --->   "%mul_ln51_21 = mul i32 %tmp_11, i32 38" [d1.cpp:51]   --->   Operation 120 'mul' 'mul_ln51_21' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 121 '%mul_ln51_22 = mul i32 %tmp_11, i32 19'
ST_1 : Operation 121 [1/1] (2.75ns)   --->   "%mul_ln51_22 = mul i32 %tmp_11, i32 19" [d1.cpp:51]   --->   Operation 121 'mul' 'mul_ln51_22' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_9)   --->   "%shl_ln55_3 = shl i32 %select_ln51, i32 1" [d1.cpp:55]   --->   Operation 122 'shl' 'shl_ln55_3' <Predicate = (icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln49_9 = select i1 %icmp_ln49_6, i32 %mul_ln51_21, i32 %shl_ln55_3" [d1.cpp:49]   --->   Operation 123 'select' 'select_ln49_9' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.44ns)   --->   "%select_ln49_10 = select i1 %icmp_ln49_6, i32 %mul_ln51_22, i32 %select_ln51" [d1.cpp:49]   --->   Operation 124 'select' 'select_ln49_10' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.79ns)   --->   "%icmp_ln49_7 = icmp_ne  i4 %i1_1, i4 0" [d1.cpp:49]   --->   Operation 125 'icmp' 'icmp_ln49_7' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.79ns)   --->   "%sub_ln51_3 = sub i4 10, i4 %i1_1" [d1.cpp:51]   --->   Operation 126 'sub' 'sub_ln51_3' <Predicate = (icmp_ln35)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [1/1] (0.77ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 0, i32 %arg2_r_4_reload_read, i32 0, i32 %arg2_r_6_reload_read, i32 0, i32 %arg2_r_8_reload_read, i4 %sub_ln51_3" [d1.cpp:51]   --->   Operation 127 'mux' 'tmp_12' <Predicate = (icmp_ln35)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 128 '%mul_ln51_25 = mul i32 %tmp_12, i32 19'
ST_1 : Operation 128 [1/1] (2.75ns)   --->   "%mul_ln51_25 = mul i32 %tmp_12, i32 19" [d1.cpp:51]   --->   Operation 128 'mul' 'mul_ln51_25' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.44ns)   --->   "%select_ln49_11 = select i1 %icmp_ln49_7, i32 %mul_ln51_25, i32 %arg2_r_reload_read" [d1.cpp:49]   --->   Operation 129 'select' 'select_ln49_11' <Predicate = (icmp_ln35)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.66ns)   --->   Input mux for Operation 130 '%mul_ln51_28 = mul i32 %tmp_1, i32 38'
ST_1 : Operation 130 [1/1] (2.75ns)   --->   "%mul_ln51_28 = mul i32 %tmp_1, i32 38" [d1.cpp:51]   --->   Operation 130 'mul' 'mul_ln51_28' <Predicate = (icmp_ln35)> <Delay = 2.75> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 131 [1/1] (0.42ns)   --->   "%store_ln35 = store i4 %add_ln49, i4 %i1" [d1.cpp:35]   --->   Operation 131 'store' 'store_ln35' <Predicate = (icmp_ln35)> <Delay = 0.42>
ST_1 : Operation 213 [1/1] (0.00ns)   --->   "%add7141_load_1 = load i64 %add7141"   --->   Operation 213 'load' 'add7141_load_1' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 214 [1/1] (0.00ns)   --->   "%p_load45 = load i64 %empty"   --->   Operation 214 'load' 'p_load45' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%p_load43 = load i64 %empty_22"   --->   Operation 215 'load' 'p_load43' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.00ns)   --->   "%p_load41 = load i64 %empty_23"   --->   Operation 216 'load' 'p_load41' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 217 [1/1] (0.00ns)   --->   "%p_load39 = load i64 %empty_24"   --->   Operation 217 'load' 'p_load39' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 218 [1/1] (0.00ns)   --->   "%p_load37 = load i64 %empty_25"   --->   Operation 218 'load' 'p_load37' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 219 [1/1] (0.00ns)   --->   "%p_load35 = load i64 %empty_26"   --->   Operation 219 'load' 'p_load35' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 220 [1/1] (0.00ns)   --->   "%p_load33 = load i64 %empty_27"   --->   Operation 220 'load' 'p_load33' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 221 [1/1] (0.00ns)   --->   "%p_load31 = load i64 %empty_28"   --->   Operation 221 'load' 'p_load31' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 222 [1/1] (0.00ns)   --->   "%p_load29 = load i64 %empty_29"   --->   Operation 222 'load' 'p_load29' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out, i64 %p_load29"   --->   Operation 223 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out1, i64 %p_load31"   --->   Operation 224 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 225 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out2, i64 %p_load33"   --->   Operation 225 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 226 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out3, i64 %p_load35"   --->   Operation 226 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out4, i64 %p_load37"   --->   Operation 227 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 228 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out5, i64 %p_load39"   --->   Operation 228 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out6, i64 %p_load41"   --->   Operation 229 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out7, i64 %p_load43"   --->   Operation 230 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %p_out8, i64 %p_load45"   --->   Operation 231 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 232 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add7141_out, i64 %add7141_load_1"   --->   Operation 232 'write' 'write_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 233 'ret' 'ret_ln0' <Predicate = (!icmp_ln35)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.66>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%add7141_load = load i64 %add7141" [d1.cpp:55]   --->   Operation 132 'load' 'add7141_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%p_load44 = load i64 %empty" [d1.cpp:51]   --->   Operation 133 'load' 'p_load44' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%p_load42 = load i64 %empty_22" [d1.cpp:51]   --->   Operation 134 'load' 'p_load42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%p_load40 = load i64 %empty_23" [d1.cpp:51]   --->   Operation 135 'load' 'p_load40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%p_load38 = load i64 %empty_24" [d1.cpp:51]   --->   Operation 136 'load' 'p_load38' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%p_load36 = load i64 %empty_25" [d1.cpp:51]   --->   Operation 137 'load' 'p_load36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%p_load34 = load i64 %empty_26" [d1.cpp:51]   --->   Operation 138 'load' 'p_load34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%p_load32 = load i64 %empty_27" [d1.cpp:51]   --->   Operation 139 'load' 'p_load32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%p_load30 = load i64 %empty_28" [d1.cpp:51]   --->   Operation 140 'load' 'p_load30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.00ns)   --->   "%p_load = load i64 %empty_29" [d1.cpp:51]   --->   Operation 141 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%specpipeline_ln37 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d1.cpp:37]   --->   Operation 142 'specpipeline' 'specpipeline_ln37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.00ns)   --->   "%speclooptripcount_ln35 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d1.cpp:35]   --->   Operation 143 'speclooptripcount' 'speclooptripcount_ln35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 144 [1/1] (0.00ns)   --->   "%specloopname_ln35 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d1.cpp:35]   --->   Operation 144 'specloopname' 'specloopname_ln35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i32 %tmp" [d1.cpp:55]   --->   Operation 145 'zext' 'zext_ln55' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln55_1 = zext i32 %tmp_1" [d1.cpp:55]   --->   Operation 146 'zext' 'zext_ln55_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln55_2 = zext i32 %tmp_2" [d1.cpp:55]   --->   Operation 147 'zext' 'zext_ln55_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln55_3 = zext i32 %tmp_3" [d1.cpp:55]   --->   Operation 148 'zext' 'zext_ln55_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 149 '%mul_ln55 = mul i64 %zext_ln55_1, i64 %zext_ln55'
ST_2 : Operation 149 [1/1] (2.68ns)   --->   "%mul_ln55 = mul i64 %zext_ln55_1, i64 %zext_ln55" [d1.cpp:55]   --->   Operation 149 'mul' 'mul_ln55' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 150 '%mul_ln55_1 = mul i64 %zext_ln55_3, i64 %zext_ln55_2'
ST_2 : Operation 150 [1/1] (2.68ns)   --->   "%mul_ln55_1 = mul i64 %zext_ln55_3, i64 %zext_ln55_2" [d1.cpp:55]   --->   Operation 150 'mul' 'mul_ln55_1' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln55 = add i64 %mul_ln55_1, i64 %mul_ln55" [d1.cpp:55]   --->   Operation 151 'add' 'add_ln55' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 152 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln55_1 = add i64 %add7141_load, i64 %add_ln55" [d1.cpp:55]   --->   Operation 152 'add' 'add_ln55_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 153 '%mul_ln55_2 = mul i64 %zext_ln55_3, i64 %zext_ln55'
ST_2 : Operation 153 [1/1] (2.68ns)   --->   "%mul_ln55_2 = mul i64 %zext_ln55_3, i64 %zext_ln55" [d1.cpp:55]   --->   Operation 153 'mul' 'mul_ln55_2' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i32 %select_ln49_1" [d1.cpp:51]   --->   Operation 154 'zext' 'zext_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i32 %select_ln49" [d1.cpp:51]   --->   Operation 155 'zext' 'zext_ln51_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 156 '%mul_ln51_2 = mul i64 %zext_ln51, i64 %zext_ln55'
ST_2 : Operation 156 [1/1] (2.68ns)   --->   "%mul_ln51_2 = mul i64 %zext_ln51, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 156 'mul' 'mul_ln51_2' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 157 '%mul_ln51_3 = mul i64 %zext_ln51_1, i64 %zext_ln55_2'
ST_2 : Operation 157 [1/1] (2.68ns)   --->   "%mul_ln51_3 = mul i64 %zext_ln51_1, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 157 'mul' 'mul_ln51_3' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51 = add i64 %mul_ln51_3, i64 %mul_ln55_2" [d1.cpp:51]   --->   Operation 158 'add' 'add_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 159 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_1 = add i64 %p_load44, i64 %add_ln51" [d1.cpp:51]   --->   Operation 159 'add' 'add_ln51_1' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i32 %select_ln49_2" [d1.cpp:51]   --->   Operation 160 'zext' 'zext_ln51_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 161 '%mul_ln51_5 = mul i64 %zext_ln51_2, i64 %zext_ln55'
ST_2 : Operation 161 [1/1] (2.68ns)   --->   "%mul_ln51_5 = mul i64 %zext_ln51_2, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 161 'mul' 'mul_ln51_5' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 162 '%mul_ln51_6 = mul i64 %zext_ln51_2, i64 %zext_ln55_2'
ST_2 : Operation 162 [1/1] (2.68ns)   --->   "%mul_ln51_6 = mul i64 %zext_ln51_2, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 162 'mul' 'mul_ln51_6' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_2 = add i64 %mul_ln51_6, i64 %mul_ln51_2" [d1.cpp:51]   --->   Operation 163 'add' 'add_ln51_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 164 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_3 = add i64 %p_load42, i64 %add_ln51_2" [d1.cpp:51]   --->   Operation 164 'add' 'add_ln51_3' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln51_3 = zext i32 %select_ln49_4" [d1.cpp:51]   --->   Operation 165 'zext' 'zext_ln51_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln51_4 = zext i32 %select_ln49_3" [d1.cpp:51]   --->   Operation 166 'zext' 'zext_ln51_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 167 '%mul_ln51_9 = mul i64 %zext_ln51_3, i64 %zext_ln55'
ST_2 : Operation 167 [1/1] (2.68ns)   --->   "%mul_ln51_9 = mul i64 %zext_ln51_3, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 167 'mul' 'mul_ln51_9' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 168 '%mul_ln51_10 = mul i64 %zext_ln51_4, i64 %zext_ln55_2'
ST_2 : Operation 168 [1/1] (2.68ns)   --->   "%mul_ln51_10 = mul i64 %zext_ln51_4, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 168 'mul' 'mul_ln51_10' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_4 = add i64 %mul_ln51_10, i64 %mul_ln51_5" [d1.cpp:51]   --->   Operation 169 'add' 'add_ln51_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 170 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_5 = add i64 %p_load40, i64 %add_ln51_4" [d1.cpp:51]   --->   Operation 170 'add' 'add_ln51_5' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln51_5 = zext i32 %select_ln49_5" [d1.cpp:51]   --->   Operation 171 'zext' 'zext_ln51_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 172 '%mul_ln51_12 = mul i64 %zext_ln51_5, i64 %zext_ln55'
ST_2 : Operation 172 [1/1] (2.68ns)   --->   "%mul_ln51_12 = mul i64 %zext_ln51_5, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 172 'mul' 'mul_ln51_12' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 173 '%mul_ln51_13 = mul i64 %zext_ln51_5, i64 %zext_ln55_2'
ST_2 : Operation 173 [1/1] (2.68ns)   --->   "%mul_ln51_13 = mul i64 %zext_ln51_5, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 173 'mul' 'mul_ln51_13' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_6 = add i64 %mul_ln51_13, i64 %mul_ln51_9" [d1.cpp:51]   --->   Operation 174 'add' 'add_ln51_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 175 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_7 = add i64 %p_load38, i64 %add_ln51_6" [d1.cpp:51]   --->   Operation 175 'add' 'add_ln51_7' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln51_6 = zext i32 %select_ln49_7" [d1.cpp:51]   --->   Operation 176 'zext' 'zext_ln51_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln51_7 = zext i32 %select_ln49_6" [d1.cpp:51]   --->   Operation 177 'zext' 'zext_ln51_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 178 '%mul_ln51_16 = mul i64 %zext_ln51_6, i64 %zext_ln55'
ST_2 : Operation 178 [1/1] (2.68ns)   --->   "%mul_ln51_16 = mul i64 %zext_ln51_6, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 178 'mul' 'mul_ln51_16' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 179 '%mul_ln51_17 = mul i64 %zext_ln51_7, i64 %zext_ln55_2'
ST_2 : Operation 179 [1/1] (2.68ns)   --->   "%mul_ln51_17 = mul i64 %zext_ln51_7, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 179 'mul' 'mul_ln51_17' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_8 = add i64 %mul_ln51_17, i64 %mul_ln51_12" [d1.cpp:51]   --->   Operation 180 'add' 'add_ln51_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 181 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_9 = add i64 %p_load36, i64 %add_ln51_8" [d1.cpp:51]   --->   Operation 181 'add' 'add_ln51_9' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln51_8 = zext i32 %select_ln49_8" [d1.cpp:51]   --->   Operation 182 'zext' 'zext_ln51_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 183 '%mul_ln51_19 = mul i64 %zext_ln51_8, i64 %zext_ln55'
ST_2 : Operation 183 [1/1] (2.68ns)   --->   "%mul_ln51_19 = mul i64 %zext_ln51_8, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 183 'mul' 'mul_ln51_19' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 184 '%mul_ln51_20 = mul i64 %zext_ln51_8, i64 %zext_ln55_2'
ST_2 : Operation 184 [1/1] (2.68ns)   --->   "%mul_ln51_20 = mul i64 %zext_ln51_8, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 184 'mul' 'mul_ln51_20' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 185 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_10 = add i64 %mul_ln51_20, i64 %mul_ln51_16" [d1.cpp:51]   --->   Operation 185 'add' 'add_ln51_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 186 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_11 = add i64 %p_load34, i64 %add_ln51_10" [d1.cpp:51]   --->   Operation 186 'add' 'add_ln51_11' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln51_9 = zext i32 %select_ln49_10" [d1.cpp:51]   --->   Operation 187 'zext' 'zext_ln51_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln51_10 = zext i32 %select_ln49_9" [d1.cpp:51]   --->   Operation 188 'zext' 'zext_ln51_10' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 189 '%mul_ln51_23 = mul i64 %zext_ln51_9, i64 %zext_ln55'
ST_2 : Operation 189 [1/1] (2.68ns)   --->   "%mul_ln51_23 = mul i64 %zext_ln51_9, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 189 'mul' 'mul_ln51_23' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 190 '%mul_ln51_24 = mul i64 %zext_ln51_10, i64 %zext_ln55_2'
ST_2 : Operation 190 [1/1] (2.68ns)   --->   "%mul_ln51_24 = mul i64 %zext_ln51_10, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 190 'mul' 'mul_ln51_24' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_12 = add i64 %mul_ln51_24, i64 %mul_ln51_19" [d1.cpp:51]   --->   Operation 191 'add' 'add_ln51_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 192 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_13 = add i64 %p_load32, i64 %add_ln51_12" [d1.cpp:51]   --->   Operation 192 'add' 'add_ln51_13' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln51_11 = zext i32 %select_ln49_11" [d1.cpp:51]   --->   Operation 193 'zext' 'zext_ln51_11' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 194 '%mul_ln51_26 = mul i64 %zext_ln51_11, i64 %zext_ln55'
ST_2 : Operation 194 [1/1] (2.68ns)   --->   "%mul_ln51_26 = mul i64 %zext_ln51_11, i64 %zext_ln55" [d1.cpp:51]   --->   Operation 194 'mul' 'mul_ln51_26' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 195 '%mul_ln51_27 = mul i64 %zext_ln51_11, i64 %zext_ln55_2'
ST_2 : Operation 195 [1/1] (2.68ns)   --->   "%mul_ln51_27 = mul i64 %zext_ln51_11, i64 %zext_ln55_2" [d1.cpp:51]   --->   Operation 195 'mul' 'mul_ln51_27' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_14 = add i64 %mul_ln51_27, i64 %mul_ln51_23" [d1.cpp:51]   --->   Operation 196 'add' 'add_ln51_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 197 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_15 = add i64 %p_load30, i64 %add_ln51_14" [d1.cpp:51]   --->   Operation 197 'add' 'add_ln51_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln51_12 = zext i32 %mul_ln51_28" [d1.cpp:51]   --->   Operation 198 'zext' 'zext_ln51_12' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.73ns)   --->   Input mux for Operation 199 '%mul_ln51_29 = mul i64 %zext_ln55_2, i64 %zext_ln51_12'
ST_2 : Operation 199 [1/1] (2.68ns)   --->   "%mul_ln51_29 = mul i64 %zext_ln55_2, i64 %zext_ln51_12" [d1.cpp:51]   --->   Operation 199 'mul' 'mul_ln51_29' <Predicate = true> <Delay = 2.68> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_16 = add i64 %mul_ln51_26, i64 %mul_ln51_29" [d1.cpp:51]   --->   Operation 200 'add' 'add_ln51_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 201 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln51_17 = add i64 %p_load, i64 %add_ln51_16" [d1.cpp:51]   --->   Operation 201 'add' 'add_ln51_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 202 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_17, i64 %empty_29" [d1.cpp:35]   --->   Operation 202 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 203 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_15, i64 %empty_28" [d1.cpp:35]   --->   Operation 203 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 204 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_13, i64 %empty_27" [d1.cpp:35]   --->   Operation 204 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 205 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_11, i64 %empty_26" [d1.cpp:35]   --->   Operation 205 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 206 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_9, i64 %empty_25" [d1.cpp:35]   --->   Operation 206 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 207 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_7, i64 %empty_24" [d1.cpp:35]   --->   Operation 207 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 208 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_5, i64 %empty_23" [d1.cpp:35]   --->   Operation 208 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 209 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_3, i64 %empty_22" [d1.cpp:35]   --->   Operation 209 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 210 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln51_1, i64 %empty" [d1.cpp:35]   --->   Operation 210 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 211 [1/1] (0.42ns)   --->   "%store_ln35 = store i64 %add_ln55_1, i64 %add7141" [d1.cpp:35]   --->   Operation 211 'store' 'store_ln35' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 212 [1/1] (0.00ns)   --->   "%br_ln35 = br void %for.body31.1.1" [d1.cpp:35]   --->   Operation 212 'br' 'br_ln35' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.436ns
The critical path consists of the following:
	'alloca' operation ('i1') [41]  (0.000 ns)
	'load' operation ('i1', d1.cpp:35) on local variable 'i1' [75]  (0.000 ns)
	'sub' operation ('sub_ln51_1', d1.cpp:51) [188]  (0.797 ns)
	'mux' operation ('tmp_6', d1.cpp:51) [189]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.664 ns)
'mul' operation ('mul_ln51_18', d1.cpp:51) [190]  (2.756 ns)
	'select' operation ('select_ln49_8', d1.cpp:49) [193]  (0.449 ns)

 <State 2>: 4.666ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.738 ns)
'mul' operation ('mul_ln51_26', d1.cpp:51) [220]  (2.682 ns)
	'add' operation ('add_ln51_16', d1.cpp:51) [227]  (0.000 ns)
	'add' operation ('add_ln51_17', d1.cpp:51) [228]  (0.819 ns)
	'store' operation ('store_ln35', d1.cpp:35) of variable 'add_ln51_17', d1.cpp:51 on local variable 'empty_29' [230]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
