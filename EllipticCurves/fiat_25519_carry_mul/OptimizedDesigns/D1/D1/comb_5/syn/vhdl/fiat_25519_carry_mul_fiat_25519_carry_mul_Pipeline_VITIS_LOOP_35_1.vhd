-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arg1_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    p_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    p_out1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out1_ap_vld : OUT STD_LOGIC;
    p_out2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out2_ap_vld : OUT STD_LOGIC;
    p_out3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out3_ap_vld : OUT STD_LOGIC;
    p_out4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out4_ap_vld : OUT STD_LOGIC;
    p_out5 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out5_ap_vld : OUT STD_LOGIC;
    p_out6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out6_ap_vld : OUT STD_LOGIC;
    p_out7 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out7_ap_vld : OUT STD_LOGIC;
    p_out8 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_out8_ap_vld : OUT STD_LOGIC;
    add7141_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add7141_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln35_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal tmp_fu_603_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_1_fu_633_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1679 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_660_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1684 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_696_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_fu_782_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_1_fu_790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_1_reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_2_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_2_reg_1704 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_3_fu_911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_3_reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_4_fu_919_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_4_reg_1714 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_5_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_5_reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_6_fu_1050_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_6_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_7_fu_1058_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_7_reg_1729 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_8_fu_1127_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_8_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_9_fu_1187_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_9_reg_1739 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_10_fu_1195_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_10_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_11_fu_1240_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_11_reg_1749 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_28_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_28_reg_1754 : STD_LOGIC_VECTOR (31 downto 0);
    signal add7141_fu_148 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_1_fu_1324_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal empty_fu_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_1_fu_1344_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_22_fu_156 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_3_fu_1361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_23_fu_160 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_5_fu_1381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_24_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_7_fu_1398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_25_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_9_fu_1418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_26_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_11_fu_1435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_27_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_13_fu_1455_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_28_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_15_fu_1472_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_29_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_17_fu_1488_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_188 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln49_fu_720_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i1_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln55_fu_382_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_fu_1283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_1_fu_386_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_3_fu_1313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_1_fu_386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_2_fu_1300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_2_fu_390_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_2_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_2_fu_394_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_2_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_3_fu_398_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_3_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_5_fu_402_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln51_2_fu_1350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_5_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_6_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_6_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_9_fu_410_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_9_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_10_fu_414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_10_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_12_fu_418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln51_5_fu_1387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_12_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_13_fu_422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_13_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_16_fu_426_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_16_fu_426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_17_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_17_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_19_fu_434_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln51_8_fu_1424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_19_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_20_fu_438_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_20_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_23_fu_442_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_23_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_24_fu_446_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_24_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_26_fu_450_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln51_11_fu_1461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_26_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_27_fu_454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_27_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_29_fu_458_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_29_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_fu_738_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_fu_462_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln51_1_fu_467_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln51_4_fu_472_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_4_fu_472_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln51_2_fu_871_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_7_fu_477_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln51_8_fu_482_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln51_11_fu_487_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_11_fu_487_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_996_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_14_fu_492_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln51_15_fu_497_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_1084_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_18_fu_502_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_1153_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_21_fu_507_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln51_22_fu_512_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1215_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_25_fu_517_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln51_28_fu_522_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_633_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln55_fu_684_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_696_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln51_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln35_1_fu_599_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_754_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_754_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_1_fu_467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_1_fu_798_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_825_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln49_1_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_4_fu_472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_825_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_2_fu_853_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln51_1_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_887_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_887_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_2_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_7_fu_477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_1_fu_905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_8_fu_482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_3_fu_927_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_954_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln49_3_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_11_fu_487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_954_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_4_fu_978_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_996_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln35_fu_595_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_1030_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_1030_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_4_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_14_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_2_fu_1044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_15_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln35_fu_591_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln49_5_fu_1066_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_1084_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_1115_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln49_5_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_18_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1115_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_6_fu_1135_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_1153_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln49_6_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_21_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_3_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln51_22_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1215_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln49_7_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_25_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_1_fu_386_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_fu_382_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_fu_1318_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_3_fu_398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_2_fu_390_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_fu_1338_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_6_fu_406_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_2_fu_394_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_2_fu_1355_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_10_fu_414_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_5_fu_402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_4_fu_1375_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_13_fu_422_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_9_fu_410_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_6_fu_1392_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_17_fu_430_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_12_fu_418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_8_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_20_fu_438_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_16_fu_426_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_10_fu_1429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_24_fu_446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_19_fu_434_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_12_fu_1449_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_27_fu_454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_23_fu_442_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_14_fu_1466_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_26_fu_450_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_29_fu_458_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_16_fu_1482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln51_10_fu_414_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_16_fu_426_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_17_fu_430_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_23_fu_442_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_24_fu_446_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_29_fu_458_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_2_fu_394_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_3_fu_398_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln51_9_fu_410_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln55_fu_382_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_6ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_7_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_6_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_5_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_3_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln55_fu_382_p0,
        din1 => mul_ln55_fu_382_p1,
        dout => mul_ln55_fu_382_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln55_1_fu_386_p0,
        din1 => mul_ln55_1_fu_386_p1,
        dout => mul_ln55_1_fu_386_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln55_2_fu_390_p0,
        din1 => mul_ln55_2_fu_390_p1,
        dout => mul_ln55_2_fu_390_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_2_fu_394_p0,
        din1 => mul_ln51_2_fu_394_p1,
        dout => mul_ln51_2_fu_394_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_3_fu_398_p0,
        din1 => mul_ln51_3_fu_398_p1,
        dout => mul_ln51_3_fu_398_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_5_fu_402_p0,
        din1 => mul_ln51_5_fu_402_p1,
        dout => mul_ln51_5_fu_402_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_6_fu_406_p0,
        din1 => mul_ln51_6_fu_406_p1,
        dout => mul_ln51_6_fu_406_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_9_fu_410_p0,
        din1 => mul_ln51_9_fu_410_p1,
        dout => mul_ln51_9_fu_410_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_10_fu_414_p0,
        din1 => mul_ln51_10_fu_414_p1,
        dout => mul_ln51_10_fu_414_p2);

    mul_32ns_32ns_64_1_1_U34 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_12_fu_418_p0,
        din1 => mul_ln51_12_fu_418_p1,
        dout => mul_ln51_12_fu_418_p2);

    mul_32ns_32ns_64_1_1_U35 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_13_fu_422_p0,
        din1 => mul_ln51_13_fu_422_p1,
        dout => mul_ln51_13_fu_422_p2);

    mul_32ns_32ns_64_1_1_U36 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_16_fu_426_p0,
        din1 => mul_ln51_16_fu_426_p1,
        dout => mul_ln51_16_fu_426_p2);

    mul_32ns_32ns_64_1_1_U37 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_17_fu_430_p0,
        din1 => mul_ln51_17_fu_430_p1,
        dout => mul_ln51_17_fu_430_p2);

    mul_32ns_32ns_64_1_1_U38 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_19_fu_434_p0,
        din1 => mul_ln51_19_fu_434_p1,
        dout => mul_ln51_19_fu_434_p2);

    mul_32ns_32ns_64_1_1_U39 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_20_fu_438_p0,
        din1 => mul_ln51_20_fu_438_p1,
        dout => mul_ln51_20_fu_438_p2);

    mul_32ns_32ns_64_1_1_U40 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_23_fu_442_p0,
        din1 => mul_ln51_23_fu_442_p1,
        dout => mul_ln51_23_fu_442_p2);

    mul_32ns_32ns_64_1_1_U41 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_24_fu_446_p0,
        din1 => mul_ln51_24_fu_446_p1,
        dout => mul_ln51_24_fu_446_p2);

    mul_32ns_32ns_64_1_1_U42 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_26_fu_450_p0,
        din1 => mul_ln51_26_fu_450_p1,
        dout => mul_ln51_26_fu_450_p2);

    mul_32ns_32ns_64_1_1_U43 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_27_fu_454_p0,
        din1 => mul_ln51_27_fu_454_p1,
        dout => mul_ln51_27_fu_454_p2);

    mul_32ns_32ns_64_1_1_U44 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln51_29_fu_458_p0,
        din1 => mul_ln51_29_fu_458_p1,
        dout => mul_ln51_29_fu_458_p2);

    mul_32s_7ns_32_1_1_U45 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln51_fu_738_p3,
        din1 => mul_ln51_fu_462_p1,
        dout => mul_ln51_fu_462_p2);

    mul_32s_6ns_32_1_1_U46 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln51_fu_738_p3,
        din1 => mul_ln51_1_fu_467_p1,
        dout => mul_ln51_1_fu_467_p2);

    mul_32s_6ns_32_1_1_U47 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln51_4_fu_472_p0,
        din1 => mul_ln51_4_fu_472_p1,
        dout => mul_ln51_4_fu_472_p2);

    mul_32s_7ns_32_1_1_U48 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln51_2_fu_871_p3,
        din1 => mul_ln51_7_fu_477_p1,
        dout => mul_ln51_7_fu_477_p2);

    mul_32s_6ns_32_1_1_U49 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln51_2_fu_871_p3,
        din1 => mul_ln51_8_fu_482_p1,
        dout => mul_ln51_8_fu_482_p2);

    mul_32s_6ns_32_1_1_U50 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln51_11_fu_487_p0,
        din1 => mul_ln51_11_fu_487_p1,
        dout => mul_ln51_11_fu_487_p2);

    mul_32s_7ns_32_1_1_U51 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_7_fu_996_p12,
        din1 => mul_ln51_14_fu_492_p1,
        dout => mul_ln51_14_fu_492_p2);

    mul_32s_6ns_32_1_1_U52 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_7_fu_996_p12,
        din1 => mul_ln51_15_fu_497_p1,
        dout => mul_ln51_15_fu_497_p2);

    mul_32s_6ns_32_1_1_U53 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_1084_p11,
        din1 => mul_ln51_18_fu_502_p1,
        dout => mul_ln51_18_fu_502_p2);

    mul_32s_7ns_32_1_1_U54 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_fu_1153_p12,
        din1 => mul_ln51_21_fu_507_p1,
        dout => mul_ln51_21_fu_507_p2);

    mul_32s_6ns_32_1_1_U55 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_fu_1153_p12,
        din1 => mul_ln51_22_fu_512_p1,
        dout => mul_ln51_22_fu_512_p2);

    mul_32s_6ns_32_1_1_U56 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_12_fu_1215_p11,
        din1 => mul_ln51_25_fu_517_p1,
        dout => mul_ln51_25_fu_517_p2);

    mul_32s_7ns_32_1_1_U57 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_1_fu_633_p12,
        din1 => mul_ln51_28_fu_522_p1,
        dout => mul_ln51_28_fu_522_p2);

    mux_9_4_32_1_1_U58 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_reload,
        din1 => ap_const_lv32_0,
        din2 => arg1_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => arg1_r_4_reload,
        din5 => ap_const_lv32_0,
        din6 => arg1_r_6_reload,
        din7 => ap_const_lv32_0,
        din8 => arg1_r_8_reload,
        din9 => ap_sig_allocacmp_i1_1,
        dout => tmp_fu_603_p11);

    mux_10_4_32_1_1_U59 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_1_fu_633_p11,
        dout => tmp_1_fu_633_p12);

    mux_9_4_32_1_1_U60 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_1_reload,
        din1 => ap_const_lv32_0,
        din2 => arg1_r_3_reload,
        din3 => ap_const_lv32_0,
        din4 => arg1_r_5_reload,
        din5 => ap_const_lv32_0,
        din6 => arg1_r_7_reload,
        din7 => ap_const_lv32_0,
        din8 => arg1_r_9_reload,
        din9 => ap_sig_allocacmp_i1_1,
        dout => tmp_2_fu_660_p11);

    mux_9_4_32_1_1_U61 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => tmp_3_fu_696_p10,
        dout => tmp_3_fu_696_p11);

    mux_8_3_32_1_1_U62 : component fiat_25519_carry_mul_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => tmp_5_fu_754_p9,
        dout => tmp_5_fu_754_p10);

    mux_7_3_32_1_1_U63 : component fiat_25519_carry_mul_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => tmp_8_fu_825_p8,
        dout => tmp_8_fu_825_p9);

    mux_6_3_32_1_1_U64 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => tmp_s_fu_887_p7,
        dout => tmp_s_fu_887_p8);

    mux_5_3_32_1_1_U65 : component fiat_25519_carry_mul_mux_5_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => tmp_4_fu_954_p6,
        dout => tmp_4_fu_954_p7);

    mux_10_4_32_1_1_U66 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_7_fu_996_p11,
        dout => tmp_7_fu_996_p12);

    mux_4_2_32_1_1_U67 : component fiat_25519_carry_mul_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => tmp_9_fu_1030_p5,
        dout => tmp_9_fu_1030_p6);

    mux_9_4_32_1_1_U68 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => tmp_6_fu_1084_p10,
        dout => tmp_6_fu_1084_p11);

    mux_3_2_32_1_1_U69 : component fiat_25519_carry_mul_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => tmp_10_fu_1115_p4,
        dout => tmp_10_fu_1115_p5);

    mux_10_4_32_1_1_U70 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_11_fu_1153_p11,
        dout => tmp_11_fu_1153_p12);

    mux_9_4_32_1_1_U71 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => tmp_12_fu_1215_p10,
        dout => tmp_12_fu_1215_p11);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    add7141_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add7141_fu_148 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add7141_fu_148 <= add_ln55_1_fu_1324_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_22_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_22_fu_156 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_22_fu_156 <= add_ln51_3_fu_1361_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_23_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_23_fu_160 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_23_fu_160 <= add_ln51_5_fu_1381_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_24_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_24_fu_164 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_24_fu_164 <= add_ln51_7_fu_1398_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_25_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_25_fu_168 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_25_fu_168 <= add_ln51_9_fu_1418_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_26_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_26_fu_172 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_26_fu_172 <= add_ln51_11_fu_1435_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_27_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_27_fu_176 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_27_fu_176 <= add_ln51_13_fu_1455_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_28_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_28_fu_180 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_28_fu_180 <= add_ln51_15_fu_1472_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_29_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_29_fu_184 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_29_fu_184 <= add_ln51_17_fu_1488_p2;
                end if;
            end if; 
        end if;
    end process;

    empty_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_fu_152 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    empty_fu_152 <= add_ln51_1_fu_1344_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln35_fu_585_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_188 <= add_ln49_fu_720_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_188 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_585_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln51_28_reg_1754 <= mul_ln51_28_fu_522_p2;
                select_ln49_10_reg_1744 <= select_ln49_10_fu_1195_p3;
                select_ln49_11_reg_1749 <= select_ln49_11_fu_1240_p3;
                select_ln49_1_reg_1699 <= select_ln49_1_fu_790_p3;
                select_ln49_2_reg_1704 <= select_ln49_2_fu_845_p3;
                select_ln49_3_reg_1709 <= select_ln49_3_fu_911_p3;
                select_ln49_4_reg_1714 <= select_ln49_4_fu_919_p3;
                select_ln49_5_reg_1719 <= select_ln49_5_fu_970_p3;
                select_ln49_6_reg_1724 <= select_ln49_6_fu_1050_p3;
                select_ln49_7_reg_1729 <= select_ln49_7_fu_1058_p3;
                select_ln49_8_reg_1734 <= select_ln49_8_fu_1127_p3;
                select_ln49_9_reg_1739 <= select_ln49_9_fu_1187_p3;
                select_ln49_reg_1694 <= select_ln49_fu_782_p3;
                tmp_1_reg_1679 <= tmp_1_fu_633_p12;
                tmp_2_reg_1684 <= tmp_2_fu_660_p11;
                tmp_3_reg_1689 <= tmp_3_fu_696_p11;
                tmp_reg_1674 <= tmp_fu_603_p11;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add7141_out <= add7141_fu_148;

    add7141_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add7141_out_ap_vld <= ap_const_logic_1;
        else 
            add7141_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln49_1_fu_798_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv4_3));
    add_ln49_2_fu_853_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv4_4));
    add_ln49_3_fu_927_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv4_5));
    add_ln49_4_fu_978_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv4_6));
    add_ln49_5_fu_1066_p2 <= std_logic_vector(unsigned(zext_ln35_fu_591_p1) + unsigned(ap_const_lv5_7));
    add_ln49_6_fu_1135_p2 <= std_logic_vector(unsigned(zext_ln35_fu_591_p1) + unsigned(ap_const_lv5_8));
    add_ln49_fu_720_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv4_2));
    add_ln51_10_fu_1429_p2 <= std_logic_vector(unsigned(mul_ln51_20_fu_438_p2) + unsigned(mul_ln51_16_fu_426_p2));
    add_ln51_11_fu_1435_p2 <= std_logic_vector(unsigned(empty_26_fu_172) + unsigned(add_ln51_10_fu_1429_p2));
    add_ln51_12_fu_1449_p2 <= std_logic_vector(unsigned(mul_ln51_24_fu_446_p2) + unsigned(mul_ln51_19_fu_434_p2));
    add_ln51_13_fu_1455_p2 <= std_logic_vector(unsigned(empty_27_fu_176) + unsigned(add_ln51_12_fu_1449_p2));
    add_ln51_14_fu_1466_p2 <= std_logic_vector(unsigned(mul_ln51_27_fu_454_p2) + unsigned(mul_ln51_23_fu_442_p2));
    add_ln51_15_fu_1472_p2 <= std_logic_vector(unsigned(empty_28_fu_180) + unsigned(add_ln51_14_fu_1466_p2));
    add_ln51_16_fu_1482_p2 <= std_logic_vector(unsigned(mul_ln51_26_fu_450_p2) + unsigned(mul_ln51_29_fu_458_p2));
    add_ln51_17_fu_1488_p2 <= std_logic_vector(unsigned(empty_29_fu_184) + unsigned(add_ln51_16_fu_1482_p2));
    add_ln51_1_fu_1344_p2 <= std_logic_vector(unsigned(empty_fu_152) + unsigned(add_ln51_fu_1338_p2));
    add_ln51_2_fu_1355_p2 <= std_logic_vector(unsigned(mul_ln51_6_fu_406_p2) + unsigned(mul_ln51_2_fu_394_p2));
    add_ln51_3_fu_1361_p2 <= std_logic_vector(unsigned(empty_22_fu_156) + unsigned(add_ln51_2_fu_1355_p2));
    add_ln51_4_fu_1375_p2 <= std_logic_vector(unsigned(mul_ln51_10_fu_414_p2) + unsigned(mul_ln51_5_fu_402_p2));
    add_ln51_5_fu_1381_p2 <= std_logic_vector(unsigned(empty_23_fu_160) + unsigned(add_ln51_4_fu_1375_p2));
    add_ln51_6_fu_1392_p2 <= std_logic_vector(unsigned(mul_ln51_13_fu_422_p2) + unsigned(mul_ln51_9_fu_410_p2));
    add_ln51_7_fu_1398_p2 <= std_logic_vector(unsigned(empty_24_fu_164) + unsigned(add_ln51_6_fu_1392_p2));
    add_ln51_8_fu_1412_p2 <= std_logic_vector(unsigned(mul_ln51_17_fu_430_p2) + unsigned(mul_ln51_12_fu_418_p2));
    add_ln51_9_fu_1418_p2 <= std_logic_vector(unsigned(empty_25_fu_168) + unsigned(add_ln51_8_fu_1412_p2));
    add_ln51_fu_1338_p2 <= std_logic_vector(unsigned(mul_ln51_3_fu_398_p2) + unsigned(mul_ln55_2_fu_390_p2));
    add_ln55_1_fu_1324_p2 <= std_logic_vector(unsigned(add7141_fu_148) + unsigned(add_ln55_fu_1318_p2));
    add_ln55_fu_1318_p2 <= std_logic_vector(unsigned(mul_ln55_1_fu_386_p2) + unsigned(mul_ln55_fu_382_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln35_fu_585_p2)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_188)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i1_1 <= i1_fu_188;
        end if; 
    end process;

    icmp_ln35_fu_585_p2 <= "1" when (unsigned(ap_sig_allocacmp_i1_1) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln49_1_fu_804_p2 <= "1" when (unsigned(add_ln49_1_fu_798_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_2_fu_859_p2 <= "1" when (unsigned(add_ln49_2_fu_853_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_3_fu_933_p2 <= "1" when (unsigned(add_ln49_3_fu_927_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_4_fu_984_p2 <= "1" when (unsigned(add_ln49_4_fu_978_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_5_fu_1072_p2 <= "1" when (unsigned(add_ln49_5_fu_1066_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln49_6_fu_1141_p2 <= "1" when (unsigned(add_ln49_6_fu_1135_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln49_7_fu_1203_p2 <= "0" when (ap_sig_allocacmp_i1_1 = ap_const_lv4_0) else "1";
    icmp_ln49_fu_726_p2 <= "1" when (unsigned(add_ln49_fu_720_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln51_1_fu_865_p2 <= "1" when (ap_sig_allocacmp_i1_1 = ap_const_lv4_6) else "0";
    icmp_ln51_fu_732_p2 <= "1" when (ap_sig_allocacmp_i1_1 = ap_const_lv4_8) else "0";
    mul_ln51_10_fu_414_p0 <= mul_ln51_10_fu_414_p00(32 - 1 downto 0);
    mul_ln51_10_fu_414_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_3_reg_1709),64));
    mul_ln51_10_fu_414_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_11_fu_487_p0 <= 
        arg2_r_8_reload when (icmp_ln51_1_fu_865_p2(0) = '1') else 
        arg2_r_6_reload;
    mul_ln51_11_fu_487_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_12_fu_418_p0 <= zext_ln51_5_fu_1387_p1(32 - 1 downto 0);
    mul_ln51_12_fu_418_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_13_fu_422_p0 <= zext_ln51_5_fu_1387_p1(32 - 1 downto 0);
    mul_ln51_13_fu_422_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_14_fu_492_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln51_15_fu_497_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_16_fu_426_p0 <= mul_ln51_16_fu_426_p00(32 - 1 downto 0);
    mul_ln51_16_fu_426_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_7_reg_1729),64));
    mul_ln51_16_fu_426_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_17_fu_430_p0 <= mul_ln51_17_fu_430_p00(32 - 1 downto 0);
    mul_ln51_17_fu_430_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_6_reg_1724),64));
    mul_ln51_17_fu_430_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_18_fu_502_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_19_fu_434_p0 <= zext_ln51_8_fu_1424_p1(32 - 1 downto 0);
    mul_ln51_19_fu_434_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_1_fu_467_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_20_fu_438_p0 <= zext_ln51_8_fu_1424_p1(32 - 1 downto 0);
    mul_ln51_20_fu_438_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_21_fu_507_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln51_22_fu_512_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_23_fu_442_p0 <= mul_ln51_23_fu_442_p00(32 - 1 downto 0);
    mul_ln51_23_fu_442_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_10_reg_1744),64));
    mul_ln51_23_fu_442_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_24_fu_446_p0 <= mul_ln51_24_fu_446_p00(32 - 1 downto 0);
    mul_ln51_24_fu_446_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_9_reg_1739),64));
    mul_ln51_24_fu_446_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_25_fu_517_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_26_fu_450_p0 <= zext_ln51_11_fu_1461_p1(32 - 1 downto 0);
    mul_ln51_26_fu_450_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_27_fu_454_p0 <= zext_ln51_11_fu_1461_p1(32 - 1 downto 0);
    mul_ln51_27_fu_454_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_28_fu_522_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln51_29_fu_458_p0 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_29_fu_458_p1 <= mul_ln51_29_fu_458_p10(32 - 1 downto 0);
    mul_ln51_29_fu_458_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln51_28_reg_1754),64));
    mul_ln51_2_fu_394_p0 <= mul_ln51_2_fu_394_p00(32 - 1 downto 0);
    mul_ln51_2_fu_394_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_1_reg_1699),64));
    mul_ln51_2_fu_394_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_3_fu_398_p0 <= mul_ln51_3_fu_398_p00(32 - 1 downto 0);
    mul_ln51_3_fu_398_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_reg_1694),64));
    mul_ln51_3_fu_398_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_4_fu_472_p0 <= 
        arg2_r_8_reload when (icmp_ln51_fu_732_p2(0) = '1') else 
        arg2_r_reload;
    mul_ln51_4_fu_472_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_5_fu_402_p0 <= zext_ln51_2_fu_1350_p1(32 - 1 downto 0);
    mul_ln51_5_fu_402_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_6_fu_406_p0 <= zext_ln51_2_fu_1350_p1(32 - 1 downto 0);
    mul_ln51_6_fu_406_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln51_7_fu_477_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln51_8_fu_482_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln51_9_fu_410_p0 <= mul_ln51_9_fu_410_p00(32 - 1 downto 0);
    mul_ln51_9_fu_410_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_4_reg_1714),64));
    mul_ln51_9_fu_410_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln51_fu_462_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln55_1_fu_386_p0 <= zext_ln55_3_fu_1313_p1(32 - 1 downto 0);
    mul_ln55_1_fu_386_p1 <= zext_ln55_2_fu_1300_p1(32 - 1 downto 0);
    mul_ln55_2_fu_390_p0 <= zext_ln55_3_fu_1313_p1(32 - 1 downto 0);
    mul_ln55_2_fu_390_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    mul_ln55_fu_382_p0 <= mul_ln55_fu_382_p00(32 - 1 downto 0);
    mul_ln55_fu_382_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1679),64));
    mul_ln55_fu_382_p1 <= zext_ln55_fu_1283_p1(32 - 1 downto 0);
    or_ln55_fu_684_p2 <= (ap_sig_allocacmp_i1_1 or ap_const_lv4_1);
    p_out <= empty_29_fu_184;
    p_out1 <= empty_28_fu_180;

    p_out1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out1_ap_vld <= ap_const_logic_1;
        else 
            p_out1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out2 <= empty_27_fu_176;

    p_out2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out2_ap_vld <= ap_const_logic_1;
        else 
            p_out2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out3 <= empty_26_fu_172;

    p_out3_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out3_ap_vld <= ap_const_logic_1;
        else 
            p_out3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out4 <= empty_25_fu_168;

    p_out4_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out4_ap_vld <= ap_const_logic_1;
        else 
            p_out4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out5 <= empty_24_fu_164;

    p_out5_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out5_ap_vld <= ap_const_logic_1;
        else 
            p_out5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out6 <= empty_23_fu_160;

    p_out6_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out6_ap_vld <= ap_const_logic_1;
        else 
            p_out6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out7 <= empty_22_fu_156;

    p_out7_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out7_ap_vld <= ap_const_logic_1;
        else 
            p_out7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out8 <= empty_fu_152;

    p_out8_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out8_ap_vld <= ap_const_logic_1;
        else 
            p_out8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln35_fu_585_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln35_fu_585_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln49_10_fu_1195_p3 <= 
        mul_ln51_22_fu_512_p2 when (icmp_ln49_6_fu_1141_p2(0) = '1') else 
        select_ln51_fu_738_p3;
    select_ln49_11_fu_1240_p3 <= 
        mul_ln51_25_fu_517_p2 when (icmp_ln49_7_fu_1203_p2(0) = '1') else 
        arg2_r_reload;
    select_ln49_1_fu_790_p3 <= 
        mul_ln51_1_fu_467_p2 when (icmp_ln49_fu_726_p2(0) = '1') else 
        tmp_5_fu_754_p10;
    select_ln49_2_fu_845_p3 <= 
        mul_ln51_4_fu_472_p2 when (icmp_ln49_1_fu_804_p2(0) = '1') else 
        tmp_8_fu_825_p9;
    select_ln49_3_fu_911_p3 <= 
        mul_ln51_7_fu_477_p2 when (icmp_ln49_2_fu_859_p2(0) = '1') else 
        shl_ln55_1_fu_905_p2;
    select_ln49_4_fu_919_p3 <= 
        mul_ln51_8_fu_482_p2 when (icmp_ln49_2_fu_859_p2(0) = '1') else 
        tmp_s_fu_887_p8;
    select_ln49_5_fu_970_p3 <= 
        mul_ln51_11_fu_487_p2 when (icmp_ln49_3_fu_933_p2(0) = '1') else 
        tmp_4_fu_954_p7;
    select_ln49_6_fu_1050_p3 <= 
        mul_ln51_14_fu_492_p2 when (icmp_ln49_4_fu_984_p2(0) = '1') else 
        shl_ln55_2_fu_1044_p2;
    select_ln49_7_fu_1058_p3 <= 
        mul_ln51_15_fu_497_p2 when (icmp_ln49_4_fu_984_p2(0) = '1') else 
        tmp_9_fu_1030_p6;
    select_ln49_8_fu_1127_p3 <= 
        mul_ln51_18_fu_502_p2 when (icmp_ln49_5_fu_1072_p2(0) = '1') else 
        tmp_10_fu_1115_p5;
    select_ln49_9_fu_1187_p3 <= 
        mul_ln51_21_fu_507_p2 when (icmp_ln49_6_fu_1141_p2(0) = '1') else 
        shl_ln55_3_fu_1181_p2;
    select_ln49_fu_782_p3 <= 
        mul_ln51_fu_462_p2 when (icmp_ln49_fu_726_p2(0) = '1') else 
        shl_ln55_fu_776_p2;
    select_ln51_2_fu_871_p3 <= 
        arg2_r_9_reload when (icmp_ln51_1_fu_865_p2(0) = '1') else 
        arg2_r_7_reload;
    select_ln51_fu_738_p3 <= 
        arg2_r_9_reload when (icmp_ln51_fu_732_p2(0) = '1') else 
        arg2_r_1_reload;
    shl_ln55_1_fu_905_p2 <= std_logic_vector(shift_left(unsigned(tmp_s_fu_887_p8),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln55_2_fu_1044_p2 <= std_logic_vector(shift_left(unsigned(tmp_9_fu_1030_p6),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln55_3_fu_1181_p2 <= std_logic_vector(shift_left(unsigned(select_ln51_fu_738_p3),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln55_fu_776_p2 <= std_logic_vector(shift_left(unsigned(tmp_5_fu_754_p10),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_10_fu_1115_p4 <= std_logic_vector(signed(ap_const_lv2_2) - signed(trunc_ln35_fu_595_p1));
    tmp_11_fu_1153_p11 <= std_logic_vector(signed(ap_const_lv4_B) - signed(ap_sig_allocacmp_i1_1));
    tmp_12_fu_1215_p10 <= std_logic_vector(signed(ap_const_lv4_A) - signed(ap_sig_allocacmp_i1_1));
    tmp_1_fu_633_p11 <= std_logic_vector(signed(ap_const_lv4_9) - signed(ap_sig_allocacmp_i1_1));
    tmp_3_fu_696_p10 <= std_logic_vector(signed(ap_const_lv4_9) - signed(or_ln55_fu_684_p2));
    tmp_4_fu_954_p6 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln35_1_fu_599_p1));
    tmp_5_fu_754_p9 <= (trunc_ln35_1_fu_599_p1 xor ap_const_lv3_7);
    tmp_6_fu_1084_p10 <= std_logic_vector(signed(ap_const_lv4_C) - signed(ap_sig_allocacmp_i1_1));
    tmp_7_fu_996_p11 <= std_logic_vector(signed(ap_const_lv4_D) - signed(ap_sig_allocacmp_i1_1));
    tmp_8_fu_825_p8 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln35_1_fu_599_p1));
    tmp_9_fu_1030_p5 <= (trunc_ln35_fu_595_p1 xor ap_const_lv2_3);
    tmp_s_fu_887_p7 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln35_1_fu_599_p1));
    trunc_ln35_1_fu_599_p1 <= ap_sig_allocacmp_i1_1(3 - 1 downto 0);
    trunc_ln35_fu_595_p1 <= ap_sig_allocacmp_i1_1(2 - 1 downto 0);
    zext_ln35_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i1_1),5));
    zext_ln51_11_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_11_reg_1749),64));
    zext_ln51_2_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_2_reg_1704),64));
    zext_ln51_5_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_5_reg_1719),64));
    zext_ln51_8_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_8_reg_1734),64));
    zext_ln55_2_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1684),64));
    zext_ln55_3_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1689),64));
    zext_ln55_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1674),64));
end behav;
