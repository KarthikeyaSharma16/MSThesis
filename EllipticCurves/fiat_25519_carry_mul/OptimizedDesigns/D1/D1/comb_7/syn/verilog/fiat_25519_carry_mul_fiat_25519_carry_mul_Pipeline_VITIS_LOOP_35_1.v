// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_reload,
        arg1_r_2_reload,
        arg1_r_4_reload,
        arg1_r_6_reload,
        arg1_r_8_reload,
        arg2_r_1_reload,
        arg2_r_3_reload,
        arg2_r_5_reload,
        arg2_r_7_reload,
        arg2_r_9_reload,
        arg2_r_reload,
        arg2_r_2_reload,
        arg2_r_4_reload,
        arg2_r_6_reload,
        arg2_r_8_reload,
        arg1_r_1_reload,
        arg1_r_3_reload,
        arg1_r_5_reload,
        arg1_r_7_reload,
        arg1_r_9_reload,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld,
        p_out2,
        p_out2_ap_vld,
        p_out3,
        p_out3_ap_vld,
        p_out4,
        p_out4_ap_vld,
        p_out5,
        p_out5_ap_vld,
        p_out6,
        p_out6_ap_vld,
        p_out7,
        p_out7_ap_vld,
        p_out8,
        p_out8_ap_vld,
        add71176_out,
        add71176_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_9_reload;
output  [63:0] p_out;
output   p_out_ap_vld;
output  [63:0] p_out1;
output   p_out1_ap_vld;
output  [63:0] p_out2;
output   p_out2_ap_vld;
output  [63:0] p_out3;
output   p_out3_ap_vld;
output  [63:0] p_out4;
output   p_out4_ap_vld;
output  [63:0] p_out5;
output   p_out5_ap_vld;
output  [63:0] p_out6;
output   p_out6_ap_vld;
output  [63:0] p_out7;
output   p_out7_ap_vld;
output  [63:0] p_out8;
output   p_out8_ap_vld;
output  [63:0] add71176_out;
output   add71176_out_ap_vld;

reg ap_idle;
reg p_out_ap_vld;
reg p_out1_ap_vld;
reg p_out2_ap_vld;
reg p_out3_ap_vld;
reg p_out4_ap_vld;
reg p_out5_ap_vld;
reg p_out6_ap_vld;
reg p_out7_ap_vld;
reg p_out8_ap_vld;
reg add71176_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln35_fu_583_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] tmp_fu_601_p11;
reg   [31:0] tmp_reg_1666;
wire    ap_block_pp0_stage0_11001;
wire  signed [31:0] tmp_1_fu_631_p12;
reg  signed [31:0] tmp_1_reg_1671;
wire   [31:0] tmp_2_fu_664_p11;
reg   [31:0] tmp_2_reg_1676;
wire   [31:0] tmp_3_fu_688_p11;
reg   [31:0] tmp_3_reg_1681;
wire   [31:0] select_ln49_fu_774_p3;
reg   [31:0] select_ln49_reg_1686;
wire   [31:0] select_ln49_1_fu_782_p3;
reg   [31:0] select_ln49_1_reg_1691;
wire   [31:0] select_ln49_2_fu_837_p3;
reg   [31:0] select_ln49_2_reg_1696;
wire   [31:0] select_ln49_3_fu_903_p3;
reg   [31:0] select_ln49_3_reg_1701;
wire   [31:0] select_ln49_4_fu_911_p3;
reg   [31:0] select_ln49_4_reg_1706;
wire   [31:0] select_ln49_5_fu_962_p3;
reg   [31:0] select_ln49_5_reg_1711;
wire   [31:0] select_ln49_6_fu_1042_p3;
reg   [31:0] select_ln49_6_reg_1716;
wire   [31:0] select_ln49_7_fu_1050_p3;
reg   [31:0] select_ln49_7_reg_1721;
wire   [31:0] select_ln49_8_fu_1119_p3;
reg   [31:0] select_ln49_8_reg_1726;
wire   [31:0] select_ln49_9_fu_1179_p3;
reg   [31:0] select_ln49_9_reg_1731;
wire   [31:0] select_ln49_10_fu_1187_p3;
reg   [31:0] select_ln49_10_reg_1736;
wire   [31:0] select_ln49_11_fu_1232_p3;
reg   [31:0] select_ln49_11_reg_1741;
wire   [31:0] mul_ln51_20_fu_520_p2;
reg   [31:0] mul_ln51_20_reg_1746;
reg   [63:0] add71176_fu_146;
wire   [63:0] add_ln55_1_fu_1316_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [63:0] empty_fu_150;
wire   [63:0] add_ln51_1_fu_1336_p2;
reg   [63:0] empty_22_fu_154;
wire   [63:0] add_ln55_3_fu_1353_p2;
reg   [63:0] empty_23_fu_158;
wire   [63:0] add_ln51_3_fu_1373_p2;
reg   [63:0] empty_24_fu_162;
wire   [63:0] add_ln55_5_fu_1390_p2;
reg   [63:0] empty_25_fu_166;
wire   [63:0] add_ln51_5_fu_1410_p2;
reg   [63:0] empty_26_fu_170;
wire   [63:0] add_ln55_7_fu_1427_p2;
reg   [63:0] empty_27_fu_174;
wire   [63:0] add_ln51_7_fu_1447_p2;
reg   [63:0] empty_28_fu_178;
wire   [63:0] add_ln55_9_fu_1464_p2;
reg   [63:0] empty_29_fu_182;
wire   [63:0] add_ln51_9_fu_1480_p2;
reg   [3:0] i1_fu_186;
wire   [3:0] add_ln49_fu_712_p2;
reg   [3:0] ap_sig_allocacmp_i1_1;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln55_fu_380_p0;
wire   [63:0] zext_ln55_2_fu_1292_p1;
wire   [31:0] mul_ln55_fu_380_p1;
wire   [63:0] zext_ln55_fu_1275_p1;
wire   [31:0] mul_ln55_1_fu_384_p0;
wire   [31:0] mul_ln55_1_fu_384_p1;
wire   [31:0] mul_ln55_2_fu_388_p0;
wire   [63:0] zext_ln55_3_fu_1297_p1;
wire   [31:0] mul_ln55_2_fu_388_p1;
wire   [31:0] mul_ln51_2_fu_392_p0;
wire   [31:0] mul_ln51_2_fu_392_p1;
wire   [31:0] mul_ln51_3_fu_396_p0;
wire   [31:0] mul_ln51_3_fu_396_p1;
wire   [31:0] mul_ln55_3_fu_400_p0;
wire   [63:0] zext_ln55_4_fu_1342_p1;
wire   [31:0] mul_ln55_3_fu_400_p1;
wire   [31:0] mul_ln55_4_fu_404_p0;
wire   [31:0] mul_ln55_4_fu_404_p1;
wire   [31:0] mul_ln51_7_fu_408_p0;
wire   [31:0] mul_ln51_7_fu_408_p1;
wire   [31:0] mul_ln51_8_fu_412_p0;
wire   [31:0] mul_ln51_8_fu_412_p1;
wire   [31:0] mul_ln55_5_fu_416_p0;
wire   [63:0] zext_ln55_5_fu_1379_p1;
wire   [31:0] mul_ln55_5_fu_416_p1;
wire   [31:0] mul_ln55_6_fu_420_p0;
wire   [31:0] mul_ln55_6_fu_420_p1;
wire   [31:0] mul_ln51_12_fu_424_p0;
wire   [31:0] mul_ln51_12_fu_424_p1;
wire   [31:0] mul_ln51_13_fu_428_p0;
wire   [31:0] mul_ln51_13_fu_428_p1;
wire   [31:0] mul_ln55_7_fu_432_p0;
wire   [63:0] zext_ln55_6_fu_1416_p1;
wire   [31:0] mul_ln55_7_fu_432_p1;
wire   [31:0] mul_ln55_8_fu_436_p0;
wire   [31:0] mul_ln55_8_fu_436_p1;
wire   [31:0] mul_ln51_17_fu_440_p0;
wire   [31:0] mul_ln51_17_fu_440_p1;
wire   [31:0] mul_ln51_18_fu_444_p0;
wire   [31:0] mul_ln51_18_fu_444_p1;
wire   [31:0] mul_ln55_9_fu_448_p0;
wire   [63:0] zext_ln55_7_fu_1453_p1;
wire   [31:0] mul_ln55_9_fu_448_p1;
wire   [31:0] mul_ln55_10_fu_452_p0;
wire   [31:0] mul_ln55_10_fu_452_p1;
wire   [31:0] mul_ln51_21_fu_456_p0;
wire   [31:0] mul_ln51_21_fu_456_p1;
wire  signed [31:0] select_ln51_fu_730_p3;
wire   [6:0] mul_ln51_fu_460_p1;
wire   [5:0] mul_ln51_1_fu_465_p1;
wire  signed [31:0] mul_ln51_4_fu_470_p0;
wire   [5:0] mul_ln51_4_fu_470_p1;
wire  signed [31:0] select_ln51_2_fu_863_p3;
wire   [6:0] mul_ln51_5_fu_475_p1;
wire   [5:0] mul_ln51_6_fu_480_p1;
wire  signed [31:0] mul_ln51_9_fu_485_p0;
wire   [5:0] mul_ln51_9_fu_485_p1;
wire  signed [31:0] tmp_7_fu_988_p12;
wire   [6:0] mul_ln51_10_fu_490_p1;
wire   [5:0] mul_ln51_11_fu_495_p1;
wire  signed [31:0] tmp_6_fu_1076_p11;
wire   [5:0] mul_ln51_14_fu_500_p1;
wire  signed [31:0] tmp_11_fu_1145_p12;
wire   [6:0] mul_ln51_15_fu_505_p1;
wire   [5:0] mul_ln51_16_fu_510_p1;
wire  signed [31:0] tmp_12_fu_1207_p11;
wire   [5:0] mul_ln51_19_fu_515_p1;
wire   [6:0] mul_ln51_20_fu_520_p1;
wire   [3:0] tmp_1_fu_631_p11;
wire   [3:0] tmp_2_fu_664_p10;
wire   [0:0] icmp_ln51_fu_724_p2;
wire   [2:0] trunc_ln35_1_fu_597_p1;
wire   [2:0] tmp_5_fu_746_p9;
wire   [31:0] tmp_5_fu_746_p10;
wire   [0:0] icmp_ln49_fu_718_p2;
wire   [31:0] mul_ln51_fu_460_p2;
wire   [31:0] shl_ln55_fu_768_p2;
wire   [31:0] mul_ln51_1_fu_465_p2;
wire   [3:0] add_ln49_1_fu_790_p2;
wire   [2:0] tmp_8_fu_817_p8;
wire   [0:0] icmp_ln49_1_fu_796_p2;
wire   [31:0] mul_ln51_4_fu_470_p2;
wire   [31:0] tmp_8_fu_817_p9;
wire   [3:0] add_ln49_2_fu_845_p2;
wire   [0:0] icmp_ln51_1_fu_857_p2;
wire   [2:0] tmp_s_fu_879_p7;
wire   [31:0] tmp_s_fu_879_p8;
wire   [0:0] icmp_ln49_2_fu_851_p2;
wire   [31:0] mul_ln51_5_fu_475_p2;
wire   [31:0] shl_ln55_1_fu_897_p2;
wire   [31:0] mul_ln51_6_fu_480_p2;
wire   [3:0] add_ln49_3_fu_919_p2;
wire   [2:0] tmp_4_fu_946_p6;
wire   [0:0] icmp_ln49_3_fu_925_p2;
wire   [31:0] mul_ln51_9_fu_485_p2;
wire   [31:0] tmp_4_fu_946_p7;
wire   [3:0] add_ln49_4_fu_970_p2;
wire   [3:0] tmp_7_fu_988_p11;
wire   [1:0] trunc_ln35_fu_593_p1;
wire   [1:0] tmp_9_fu_1022_p5;
wire   [31:0] tmp_9_fu_1022_p6;
wire   [0:0] icmp_ln49_4_fu_976_p2;
wire   [31:0] mul_ln51_10_fu_490_p2;
wire   [31:0] shl_ln55_2_fu_1036_p2;
wire   [31:0] mul_ln51_11_fu_495_p2;
wire   [4:0] zext_ln35_fu_589_p1;
wire   [4:0] add_ln49_5_fu_1058_p2;
wire   [3:0] tmp_6_fu_1076_p10;
wire   [1:0] tmp_10_fu_1107_p4;
wire   [0:0] icmp_ln49_5_fu_1064_p2;
wire   [31:0] mul_ln51_14_fu_500_p2;
wire   [31:0] tmp_10_fu_1107_p5;
wire   [4:0] add_ln49_6_fu_1127_p2;
wire   [3:0] tmp_11_fu_1145_p11;
wire   [0:0] icmp_ln49_6_fu_1133_p2;
wire   [31:0] mul_ln51_15_fu_505_p2;
wire   [31:0] shl_ln55_3_fu_1173_p2;
wire   [31:0] mul_ln51_16_fu_510_p2;
wire   [3:0] tmp_12_fu_1207_p10;
wire   [0:0] icmp_ln49_7_fu_1195_p2;
wire   [31:0] mul_ln51_19_fu_515_p2;
wire   [63:0] mul_ln55_2_fu_388_p2;
wire   [63:0] mul_ln55_1_fu_384_p2;
wire   [63:0] add_ln55_fu_1310_p2;
wire   [63:0] mul_ln51_3_fu_396_p2;
wire   [63:0] mul_ln55_fu_380_p2;
wire   [63:0] add_ln51_fu_1330_p2;
wire   [63:0] mul_ln55_3_fu_400_p2;
wire   [63:0] mul_ln51_2_fu_392_p2;
wire   [63:0] add_ln55_2_fu_1347_p2;
wire   [63:0] mul_ln51_8_fu_412_p2;
wire   [63:0] mul_ln55_4_fu_404_p2;
wire   [63:0] add_ln51_2_fu_1367_p2;
wire   [63:0] mul_ln55_5_fu_416_p2;
wire   [63:0] mul_ln51_7_fu_408_p2;
wire   [63:0] add_ln55_4_fu_1384_p2;
wire   [63:0] mul_ln51_13_fu_428_p2;
wire   [63:0] mul_ln55_6_fu_420_p2;
wire   [63:0] add_ln51_4_fu_1404_p2;
wire   [63:0] mul_ln55_7_fu_432_p2;
wire   [63:0] mul_ln51_12_fu_424_p2;
wire   [63:0] add_ln55_6_fu_1421_p2;
wire   [63:0] mul_ln51_18_fu_444_p2;
wire   [63:0] mul_ln55_8_fu_436_p2;
wire   [63:0] add_ln51_6_fu_1441_p2;
wire   [63:0] mul_ln55_9_fu_448_p2;
wire   [63:0] mul_ln51_17_fu_440_p2;
wire   [63:0] add_ln55_8_fu_1458_p2;
wire   [63:0] mul_ln55_10_fu_452_p2;
wire   [63:0] mul_ln51_21_fu_456_p2;
wire   [63:0] add_ln51_8_fu_1474_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln51_12_fu_424_p00;
wire   [63:0] mul_ln51_13_fu_428_p00;
wire   [63:0] mul_ln51_17_fu_440_p00;
wire   [63:0] mul_ln51_18_fu_444_p00;
wire   [63:0] mul_ln51_21_fu_456_p10;
wire   [63:0] mul_ln51_2_fu_392_p00;
wire   [63:0] mul_ln51_3_fu_396_p00;
wire   [63:0] mul_ln51_7_fu_408_p00;
wire   [63:0] mul_ln51_8_fu_412_p00;
wire   [63:0] mul_ln55_1_fu_384_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U25(
    .din0(mul_ln55_fu_380_p0),
    .din1(mul_ln55_fu_380_p1),
    .dout(mul_ln55_fu_380_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U26(
    .din0(mul_ln55_1_fu_384_p0),
    .din1(mul_ln55_1_fu_384_p1),
    .dout(mul_ln55_1_fu_384_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U27(
    .din0(mul_ln55_2_fu_388_p0),
    .din1(mul_ln55_2_fu_388_p1),
    .dout(mul_ln55_2_fu_388_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U28(
    .din0(mul_ln51_2_fu_392_p0),
    .din1(mul_ln51_2_fu_392_p1),
    .dout(mul_ln51_2_fu_392_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U29(
    .din0(mul_ln51_3_fu_396_p0),
    .din1(mul_ln51_3_fu_396_p1),
    .dout(mul_ln51_3_fu_396_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln55_3_fu_400_p0),
    .din1(mul_ln55_3_fu_400_p1),
    .dout(mul_ln55_3_fu_400_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln55_4_fu_404_p0),
    .din1(mul_ln55_4_fu_404_p1),
    .dout(mul_ln55_4_fu_404_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln51_7_fu_408_p0),
    .din1(mul_ln51_7_fu_408_p1),
    .dout(mul_ln51_7_fu_408_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln51_8_fu_412_p0),
    .din1(mul_ln51_8_fu_412_p1),
    .dout(mul_ln51_8_fu_412_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln55_5_fu_416_p0),
    .din1(mul_ln55_5_fu_416_p1),
    .dout(mul_ln55_5_fu_416_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln55_6_fu_420_p0),
    .din1(mul_ln55_6_fu_420_p1),
    .dout(mul_ln55_6_fu_420_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln51_12_fu_424_p0),
    .din1(mul_ln51_12_fu_424_p1),
    .dout(mul_ln51_12_fu_424_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln51_13_fu_428_p0),
    .din1(mul_ln51_13_fu_428_p1),
    .dout(mul_ln51_13_fu_428_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln55_7_fu_432_p0),
    .din1(mul_ln55_7_fu_432_p1),
    .dout(mul_ln55_7_fu_432_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln55_8_fu_436_p0),
    .din1(mul_ln55_8_fu_436_p1),
    .dout(mul_ln55_8_fu_436_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U40(
    .din0(mul_ln51_17_fu_440_p0),
    .din1(mul_ln51_17_fu_440_p1),
    .dout(mul_ln51_17_fu_440_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U41(
    .din0(mul_ln51_18_fu_444_p0),
    .din1(mul_ln51_18_fu_444_p1),
    .dout(mul_ln51_18_fu_444_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U42(
    .din0(mul_ln55_9_fu_448_p0),
    .din1(mul_ln55_9_fu_448_p1),
    .dout(mul_ln55_9_fu_448_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U43(
    .din0(mul_ln55_10_fu_452_p0),
    .din1(mul_ln55_10_fu_452_p1),
    .dout(mul_ln55_10_fu_452_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U44(
    .din0(mul_ln51_21_fu_456_p0),
    .din1(mul_ln51_21_fu_456_p1),
    .dout(mul_ln51_21_fu_456_p2)
);

fiat_25519_carry_mul_mul_32s_7ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7ns_32_1_1_U45(
    .din0(select_ln51_fu_730_p3),
    .din1(mul_ln51_fu_460_p1),
    .dout(mul_ln51_fu_460_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U46(
    .din0(select_ln51_fu_730_p3),
    .din1(mul_ln51_1_fu_465_p1),
    .dout(mul_ln51_1_fu_465_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U47(
    .din0(mul_ln51_4_fu_470_p0),
    .din1(mul_ln51_4_fu_470_p1),
    .dout(mul_ln51_4_fu_470_p2)
);

fiat_25519_carry_mul_mul_32s_7ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7ns_32_1_1_U48(
    .din0(select_ln51_2_fu_863_p3),
    .din1(mul_ln51_5_fu_475_p1),
    .dout(mul_ln51_5_fu_475_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U49(
    .din0(select_ln51_2_fu_863_p3),
    .din1(mul_ln51_6_fu_480_p1),
    .dout(mul_ln51_6_fu_480_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U50(
    .din0(mul_ln51_9_fu_485_p0),
    .din1(mul_ln51_9_fu_485_p1),
    .dout(mul_ln51_9_fu_485_p2)
);

fiat_25519_carry_mul_mul_32s_7ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7ns_32_1_1_U51(
    .din0(tmp_7_fu_988_p12),
    .din1(mul_ln51_10_fu_490_p1),
    .dout(mul_ln51_10_fu_490_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U52(
    .din0(tmp_7_fu_988_p12),
    .din1(mul_ln51_11_fu_495_p1),
    .dout(mul_ln51_11_fu_495_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U53(
    .din0(tmp_6_fu_1076_p11),
    .din1(mul_ln51_14_fu_500_p1),
    .dout(mul_ln51_14_fu_500_p2)
);

fiat_25519_carry_mul_mul_32s_7ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7ns_32_1_1_U54(
    .din0(tmp_11_fu_1145_p12),
    .din1(mul_ln51_15_fu_505_p1),
    .dout(mul_ln51_15_fu_505_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U55(
    .din0(tmp_11_fu_1145_p12),
    .din1(mul_ln51_16_fu_510_p1),
    .dout(mul_ln51_16_fu_510_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U56(
    .din0(tmp_12_fu_1207_p11),
    .din1(mul_ln51_19_fu_515_p1),
    .dout(mul_ln51_19_fu_515_p2)
);

fiat_25519_carry_mul_mul_32s_7ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7ns_32_1_1_U57(
    .din0(tmp_1_fu_631_p12),
    .din1(mul_ln51_20_fu_520_p1),
    .dout(mul_ln51_20_fu_520_p2)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U58(
    .din0(arg1_r_reload),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(32'd0),
    .din6(arg1_r_6_reload),
    .din7(32'd0),
    .din8(arg1_r_8_reload),
    .din9(ap_sig_allocacmp_i1_1),
    .dout(tmp_fu_601_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U59(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_1_fu_631_p11),
    .dout(tmp_1_fu_631_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U60(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(tmp_2_fu_664_p10),
    .dout(tmp_2_fu_664_p11)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U61(
    .din0(arg1_r_1_reload),
    .din1(32'd0),
    .din2(arg1_r_3_reload),
    .din3(32'd0),
    .din4(arg1_r_5_reload),
    .din5(32'd0),
    .din6(arg1_r_7_reload),
    .din7(32'd0),
    .din8(arg1_r_9_reload),
    .din9(ap_sig_allocacmp_i1_1),
    .dout(tmp_3_fu_688_p11)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U62(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(tmp_5_fu_746_p9),
    .dout(tmp_5_fu_746_p10)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U63(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(tmp_8_fu_817_p8),
    .dout(tmp_8_fu_817_p9)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U64(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(tmp_s_fu_879_p7),
    .dout(tmp_s_fu_879_p8)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U65(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(tmp_4_fu_946_p6),
    .dout(tmp_4_fu_946_p7)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U66(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_7_fu_988_p11),
    .dout(tmp_7_fu_988_p12)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U67(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(tmp_9_fu_1022_p5),
    .dout(tmp_9_fu_1022_p6)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U68(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(tmp_6_fu_1076_p10),
    .dout(tmp_6_fu_1076_p11)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U69(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(tmp_10_fu_1107_p4),
    .dout(tmp_10_fu_1107_p5)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U70(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_11_fu_1145_p11),
    .dout(tmp_11_fu_1145_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U71(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(tmp_12_fu_1207_p10),
    .dout(tmp_12_fu_1207_p11)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add71176_fu_146 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add71176_fu_146 <= add_ln55_1_fu_1316_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_22_fu_154 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_22_fu_154 <= add_ln55_3_fu_1353_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_23_fu_158 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_23_fu_158 <= add_ln51_3_fu_1373_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_24_fu_162 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_24_fu_162 <= add_ln55_5_fu_1390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_25_fu_166 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_25_fu_166 <= add_ln51_5_fu_1410_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_26_fu_170 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_26_fu_170 <= add_ln55_7_fu_1427_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_27_fu_174 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_27_fu_174 <= add_ln51_7_fu_1447_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_28_fu_178 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_28_fu_178 <= add_ln55_9_fu_1464_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_29_fu_182 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_29_fu_182 <= add_ln51_9_fu_1480_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_150 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            empty_fu_150 <= add_ln51_1_fu_1336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln35_fu_583_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i1_fu_186 <= add_ln49_fu_712_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i1_fu_186 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_583_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln51_20_reg_1746 <= mul_ln51_20_fu_520_p2;
        select_ln49_10_reg_1736 <= select_ln49_10_fu_1187_p3;
        select_ln49_11_reg_1741 <= select_ln49_11_fu_1232_p3;
        select_ln49_1_reg_1691 <= select_ln49_1_fu_782_p3;
        select_ln49_2_reg_1696 <= select_ln49_2_fu_837_p3;
        select_ln49_3_reg_1701 <= select_ln49_3_fu_903_p3;
        select_ln49_4_reg_1706 <= select_ln49_4_fu_911_p3;
        select_ln49_5_reg_1711 <= select_ln49_5_fu_962_p3;
        select_ln49_6_reg_1716 <= select_ln49_6_fu_1042_p3;
        select_ln49_7_reg_1721 <= select_ln49_7_fu_1050_p3;
        select_ln49_8_reg_1726 <= select_ln49_8_fu_1119_p3;
        select_ln49_9_reg_1731 <= select_ln49_9_fu_1179_p3;
        select_ln49_reg_1686 <= select_ln49_fu_774_p3;
        tmp_1_reg_1671 <= tmp_1_fu_631_p12;
        tmp_2_reg_1676 <= tmp_2_fu_664_p11;
        tmp_3_reg_1681 <= tmp_3_fu_688_p11;
        tmp_reg_1666 <= tmp_fu_601_p11;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add71176_out_ap_vld = 1'b1;
    end else begin
        add71176_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i1_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i1_1 = i1_fu_186;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out2_ap_vld = 1'b1;
    end else begin
        p_out2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out3_ap_vld = 1'b1;
    end else begin
        p_out3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out4_ap_vld = 1'b1;
    end else begin
        p_out4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out5_ap_vld = 1'b1;
    end else begin
        p_out5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out6_ap_vld = 1'b1;
    end else begin
        p_out6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out7_ap_vld = 1'b1;
    end else begin
        p_out7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out8_ap_vld = 1'b1;
    end else begin
        p_out8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln35_fu_583_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add71176_out = add71176_fu_146;

assign add_ln49_1_fu_790_p2 = (ap_sig_allocacmp_i1_1 + 4'd3);

assign add_ln49_2_fu_845_p2 = (ap_sig_allocacmp_i1_1 + 4'd4);

assign add_ln49_3_fu_919_p2 = (ap_sig_allocacmp_i1_1 + 4'd5);

assign add_ln49_4_fu_970_p2 = (ap_sig_allocacmp_i1_1 + 4'd6);

assign add_ln49_5_fu_1058_p2 = (zext_ln35_fu_589_p1 + 5'd7);

assign add_ln49_6_fu_1127_p2 = (zext_ln35_fu_589_p1 + 5'd8);

assign add_ln49_fu_712_p2 = (ap_sig_allocacmp_i1_1 + 4'd2);

assign add_ln51_1_fu_1336_p2 = (empty_fu_150 + add_ln51_fu_1330_p2);

assign add_ln51_2_fu_1367_p2 = (mul_ln51_8_fu_412_p2 + mul_ln55_4_fu_404_p2);

assign add_ln51_3_fu_1373_p2 = (empty_23_fu_158 + add_ln51_2_fu_1367_p2);

assign add_ln51_4_fu_1404_p2 = (mul_ln51_13_fu_428_p2 + mul_ln55_6_fu_420_p2);

assign add_ln51_5_fu_1410_p2 = (empty_25_fu_166 + add_ln51_4_fu_1404_p2);

assign add_ln51_6_fu_1441_p2 = (mul_ln51_18_fu_444_p2 + mul_ln55_8_fu_436_p2);

assign add_ln51_7_fu_1447_p2 = (empty_27_fu_174 + add_ln51_6_fu_1441_p2);

assign add_ln51_8_fu_1474_p2 = (mul_ln55_10_fu_452_p2 + mul_ln51_21_fu_456_p2);

assign add_ln51_9_fu_1480_p2 = (empty_29_fu_182 + add_ln51_8_fu_1474_p2);

assign add_ln51_fu_1330_p2 = (mul_ln51_3_fu_396_p2 + mul_ln55_fu_380_p2);

assign add_ln55_1_fu_1316_p2 = (add71176_fu_146 + add_ln55_fu_1310_p2);

assign add_ln55_2_fu_1347_p2 = (mul_ln55_3_fu_400_p2 + mul_ln51_2_fu_392_p2);

assign add_ln55_3_fu_1353_p2 = (empty_22_fu_154 + add_ln55_2_fu_1347_p2);

assign add_ln55_4_fu_1384_p2 = (mul_ln55_5_fu_416_p2 + mul_ln51_7_fu_408_p2);

assign add_ln55_5_fu_1390_p2 = (empty_24_fu_162 + add_ln55_4_fu_1384_p2);

assign add_ln55_6_fu_1421_p2 = (mul_ln55_7_fu_432_p2 + mul_ln51_12_fu_424_p2);

assign add_ln55_7_fu_1427_p2 = (empty_26_fu_170 + add_ln55_6_fu_1421_p2);

assign add_ln55_8_fu_1458_p2 = (mul_ln55_9_fu_448_p2 + mul_ln51_17_fu_440_p2);

assign add_ln55_9_fu_1464_p2 = (empty_28_fu_178 + add_ln55_8_fu_1458_p2);

assign add_ln55_fu_1310_p2 = (mul_ln55_2_fu_388_p2 + mul_ln55_1_fu_384_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln35_fu_583_p2 = ((ap_sig_allocacmp_i1_1 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_796_p2 = ((add_ln49_1_fu_790_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_2_fu_851_p2 = ((add_ln49_2_fu_845_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_3_fu_925_p2 = ((add_ln49_3_fu_919_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_4_fu_976_p2 = ((add_ln49_4_fu_970_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_5_fu_1064_p2 = ((add_ln49_5_fu_1058_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_6_fu_1133_p2 = ((add_ln49_6_fu_1127_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln49_7_fu_1195_p2 = ((ap_sig_allocacmp_i1_1 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_718_p2 = ((add_ln49_fu_712_p2 > 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_857_p2 = ((ap_sig_allocacmp_i1_1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_724_p2 = ((ap_sig_allocacmp_i1_1 == 4'd8) ? 1'b1 : 1'b0);

assign mul_ln51_10_fu_490_p1 = 32'd38;

assign mul_ln51_11_fu_495_p1 = 32'd19;

assign mul_ln51_12_fu_424_p0 = mul_ln51_12_fu_424_p00;

assign mul_ln51_12_fu_424_p00 = select_ln49_7_reg_1721;

assign mul_ln51_12_fu_424_p1 = zext_ln55_fu_1275_p1;

assign mul_ln51_13_fu_428_p0 = mul_ln51_13_fu_428_p00;

assign mul_ln51_13_fu_428_p00 = select_ln49_6_reg_1716;

assign mul_ln51_13_fu_428_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln51_14_fu_500_p1 = 32'd19;

assign mul_ln51_15_fu_505_p1 = 32'd38;

assign mul_ln51_16_fu_510_p1 = 32'd19;

assign mul_ln51_17_fu_440_p0 = mul_ln51_17_fu_440_p00;

assign mul_ln51_17_fu_440_p00 = select_ln49_10_reg_1736;

assign mul_ln51_17_fu_440_p1 = zext_ln55_fu_1275_p1;

assign mul_ln51_18_fu_444_p0 = mul_ln51_18_fu_444_p00;

assign mul_ln51_18_fu_444_p00 = select_ln49_9_reg_1731;

assign mul_ln51_18_fu_444_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln51_19_fu_515_p1 = 32'd19;

assign mul_ln51_1_fu_465_p1 = 32'd19;

assign mul_ln51_20_fu_520_p1 = 32'd38;

assign mul_ln51_21_fu_456_p0 = zext_ln55_3_fu_1297_p1;

assign mul_ln51_21_fu_456_p1 = mul_ln51_21_fu_456_p10;

assign mul_ln51_21_fu_456_p10 = mul_ln51_20_reg_1746;

assign mul_ln51_2_fu_392_p0 = mul_ln51_2_fu_392_p00;

assign mul_ln51_2_fu_392_p00 = select_ln49_1_reg_1691;

assign mul_ln51_2_fu_392_p1 = zext_ln55_fu_1275_p1;

assign mul_ln51_3_fu_396_p0 = mul_ln51_3_fu_396_p00;

assign mul_ln51_3_fu_396_p00 = select_ln49_reg_1686;

assign mul_ln51_3_fu_396_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln51_4_fu_470_p0 = ((icmp_ln51_fu_724_p2[0:0] == 1'b1) ? arg2_r_8_reload : arg2_r_reload);

assign mul_ln51_4_fu_470_p1 = 32'd19;

assign mul_ln51_5_fu_475_p1 = 32'd38;

assign mul_ln51_6_fu_480_p1 = 32'd19;

assign mul_ln51_7_fu_408_p0 = mul_ln51_7_fu_408_p00;

assign mul_ln51_7_fu_408_p00 = select_ln49_4_reg_1706;

assign mul_ln51_7_fu_408_p1 = zext_ln55_fu_1275_p1;

assign mul_ln51_8_fu_412_p0 = mul_ln51_8_fu_412_p00;

assign mul_ln51_8_fu_412_p00 = select_ln49_3_reg_1701;

assign mul_ln51_8_fu_412_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln51_9_fu_485_p0 = ((icmp_ln51_1_fu_857_p2[0:0] == 1'b1) ? arg2_r_8_reload : arg2_r_6_reload);

assign mul_ln51_9_fu_485_p1 = 32'd19;

assign mul_ln51_fu_460_p1 = 32'd38;

assign mul_ln55_10_fu_452_p0 = zext_ln55_7_fu_1453_p1;

assign mul_ln55_10_fu_452_p1 = zext_ln55_fu_1275_p1;

assign mul_ln55_1_fu_384_p0 = mul_ln55_1_fu_384_p00;

assign mul_ln55_1_fu_384_p00 = $unsigned(tmp_1_reg_1671);

assign mul_ln55_1_fu_384_p1 = zext_ln55_fu_1275_p1;

assign mul_ln55_2_fu_388_p0 = zext_ln55_3_fu_1297_p1;

assign mul_ln55_2_fu_388_p1 = zext_ln55_2_fu_1292_p1;

assign mul_ln55_3_fu_400_p0 = zext_ln55_4_fu_1342_p1;

assign mul_ln55_3_fu_400_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln55_4_fu_404_p0 = zext_ln55_4_fu_1342_p1;

assign mul_ln55_4_fu_404_p1 = zext_ln55_fu_1275_p1;

assign mul_ln55_5_fu_416_p0 = zext_ln55_5_fu_1379_p1;

assign mul_ln55_5_fu_416_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln55_6_fu_420_p0 = zext_ln55_5_fu_1379_p1;

assign mul_ln55_6_fu_420_p1 = zext_ln55_fu_1275_p1;

assign mul_ln55_7_fu_432_p0 = zext_ln55_6_fu_1416_p1;

assign mul_ln55_7_fu_432_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln55_8_fu_436_p0 = zext_ln55_6_fu_1416_p1;

assign mul_ln55_8_fu_436_p1 = zext_ln55_fu_1275_p1;

assign mul_ln55_9_fu_448_p0 = zext_ln55_7_fu_1453_p1;

assign mul_ln55_9_fu_448_p1 = zext_ln55_3_fu_1297_p1;

assign mul_ln55_fu_380_p0 = zext_ln55_2_fu_1292_p1;

assign mul_ln55_fu_380_p1 = zext_ln55_fu_1275_p1;

assign p_out = empty_29_fu_182;

assign p_out1 = empty_28_fu_178;

assign p_out2 = empty_27_fu_174;

assign p_out3 = empty_26_fu_170;

assign p_out4 = empty_25_fu_166;

assign p_out5 = empty_24_fu_162;

assign p_out6 = empty_23_fu_158;

assign p_out7 = empty_22_fu_154;

assign p_out8 = empty_fu_150;

assign select_ln49_10_fu_1187_p3 = ((icmp_ln49_6_fu_1133_p2[0:0] == 1'b1) ? mul_ln51_16_fu_510_p2 : select_ln51_fu_730_p3);

assign select_ln49_11_fu_1232_p3 = ((icmp_ln49_7_fu_1195_p2[0:0] == 1'b1) ? mul_ln51_19_fu_515_p2 : arg2_r_reload);

assign select_ln49_1_fu_782_p3 = ((icmp_ln49_fu_718_p2[0:0] == 1'b1) ? mul_ln51_1_fu_465_p2 : tmp_5_fu_746_p10);

assign select_ln49_2_fu_837_p3 = ((icmp_ln49_1_fu_796_p2[0:0] == 1'b1) ? mul_ln51_4_fu_470_p2 : tmp_8_fu_817_p9);

assign select_ln49_3_fu_903_p3 = ((icmp_ln49_2_fu_851_p2[0:0] == 1'b1) ? mul_ln51_5_fu_475_p2 : shl_ln55_1_fu_897_p2);

assign select_ln49_4_fu_911_p3 = ((icmp_ln49_2_fu_851_p2[0:0] == 1'b1) ? mul_ln51_6_fu_480_p2 : tmp_s_fu_879_p8);

assign select_ln49_5_fu_962_p3 = ((icmp_ln49_3_fu_925_p2[0:0] == 1'b1) ? mul_ln51_9_fu_485_p2 : tmp_4_fu_946_p7);

assign select_ln49_6_fu_1042_p3 = ((icmp_ln49_4_fu_976_p2[0:0] == 1'b1) ? mul_ln51_10_fu_490_p2 : shl_ln55_2_fu_1036_p2);

assign select_ln49_7_fu_1050_p3 = ((icmp_ln49_4_fu_976_p2[0:0] == 1'b1) ? mul_ln51_11_fu_495_p2 : tmp_9_fu_1022_p6);

assign select_ln49_8_fu_1119_p3 = ((icmp_ln49_5_fu_1064_p2[0:0] == 1'b1) ? mul_ln51_14_fu_500_p2 : tmp_10_fu_1107_p5);

assign select_ln49_9_fu_1179_p3 = ((icmp_ln49_6_fu_1133_p2[0:0] == 1'b1) ? mul_ln51_15_fu_505_p2 : shl_ln55_3_fu_1173_p2);

assign select_ln49_fu_774_p3 = ((icmp_ln49_fu_718_p2[0:0] == 1'b1) ? mul_ln51_fu_460_p2 : shl_ln55_fu_768_p2);

assign select_ln51_2_fu_863_p3 = ((icmp_ln51_1_fu_857_p2[0:0] == 1'b1) ? arg2_r_9_reload : arg2_r_7_reload);

assign select_ln51_fu_730_p3 = ((icmp_ln51_fu_724_p2[0:0] == 1'b1) ? arg2_r_9_reload : arg2_r_1_reload);

assign shl_ln55_1_fu_897_p2 = tmp_s_fu_879_p8 << 32'd1;

assign shl_ln55_2_fu_1036_p2 = tmp_9_fu_1022_p6 << 32'd1;

assign shl_ln55_3_fu_1173_p2 = select_ln51_fu_730_p3 << 32'd1;

assign shl_ln55_fu_768_p2 = tmp_5_fu_746_p10 << 32'd1;

assign tmp_10_fu_1107_p4 = ($signed(2'd2) - $signed(trunc_ln35_fu_593_p1));

assign tmp_11_fu_1145_p11 = ($signed(4'd11) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_12_fu_1207_p10 = ($signed(4'd10) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_1_fu_631_p11 = ($signed(4'd9) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_2_fu_664_p10 = ($signed(4'd8) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_4_fu_946_p6 = ($signed(3'd4) - $signed(trunc_ln35_1_fu_597_p1));

assign tmp_5_fu_746_p9 = (trunc_ln35_1_fu_597_p1 ^ 3'd7);

assign tmp_6_fu_1076_p10 = ($signed(4'd12) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_7_fu_988_p11 = ($signed(4'd13) - $signed(ap_sig_allocacmp_i1_1));

assign tmp_8_fu_817_p8 = ($signed(3'd6) - $signed(trunc_ln35_1_fu_597_p1));

assign tmp_9_fu_1022_p5 = (trunc_ln35_fu_593_p1 ^ 2'd3);

assign tmp_s_fu_879_p7 = ($signed(3'd5) - $signed(trunc_ln35_1_fu_597_p1));

assign trunc_ln35_1_fu_597_p1 = ap_sig_allocacmp_i1_1[2:0];

assign trunc_ln35_fu_593_p1 = ap_sig_allocacmp_i1_1[1:0];

assign zext_ln35_fu_589_p1 = ap_sig_allocacmp_i1_1;

assign zext_ln55_2_fu_1292_p1 = tmp_2_reg_1676;

assign zext_ln55_3_fu_1297_p1 = tmp_3_reg_1681;

assign zext_ln55_4_fu_1342_p1 = select_ln49_2_reg_1696;

assign zext_ln55_5_fu_1379_p1 = select_ln49_5_reg_1711;

assign zext_ln55_6_fu_1416_p1 = select_ln49_8_reg_1726;

assign zext_ln55_7_fu_1453_p1 = select_ln49_11_reg_1741;

assign zext_ln55_fu_1275_p1 = tmp_reg_1666;

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_35_1
