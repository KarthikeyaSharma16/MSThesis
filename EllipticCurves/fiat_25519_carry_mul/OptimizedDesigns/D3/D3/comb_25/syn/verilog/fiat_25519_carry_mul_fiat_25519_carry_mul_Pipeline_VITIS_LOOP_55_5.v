// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr,
        arr_1,
        arr_2,
        arr_3,
        arr_4,
        arr_5,
        arr_6,
        arr_7,
        arr_8,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg2_r_reload,
        arg2_r_8_reload,
        arg2_r_9_reload,
        arg2_r_1_reload,
        arg2_r_2_reload,
        arg2_r_3_reload,
        arg1_r_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg2_r_6_reload,
        arg2_r_7_reload,
        add120_1_4206_out,
        add120_1_4206_out_ap_vld,
        add120_1_3205_out,
        add120_1_3205_out_ap_vld,
        add120_1_2204_out,
        add120_1_2204_out_ap_vld,
        add120_1_124203_out,
        add120_1_124203_out_ap_vld,
        add120_1202_out,
        add120_1202_out_ap_vld,
        add120_4201_out,
        add120_4201_out_ap_vld,
        add120_3200_out,
        add120_3200_out_ap_vld,
        add120_2199_out,
        add120_2199_out_ap_vld,
        add120_171198_out,
        add120_171198_out_ap_vld,
        add120197_out,
        add120197_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr;
input  [63:0] arr_1;
input  [63:0] arr_2;
input  [63:0] arr_3;
input  [63:0] arr_4;
input  [63:0] arr_5;
input  [63:0] arr_6;
input  [63:0] arr_7;
input  [63:0] arr_8;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_9_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg1_r_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_7_reload;
output  [63:0] add120_1_4206_out;
output   add120_1_4206_out_ap_vld;
output  [63:0] add120_1_3205_out;
output   add120_1_3205_out_ap_vld;
output  [63:0] add120_1_2204_out;
output   add120_1_2204_out_ap_vld;
output  [63:0] add120_1_124203_out;
output   add120_1_124203_out_ap_vld;
output  [63:0] add120_1202_out;
output   add120_1202_out_ap_vld;
output  [63:0] add120_4201_out;
output   add120_4201_out_ap_vld;
output  [63:0] add120_3200_out;
output   add120_3200_out_ap_vld;
output  [63:0] add120_2199_out;
output   add120_2199_out_ap_vld;
output  [63:0] add120_171198_out;
output   add120_171198_out_ap_vld;
output  [63:0] add120197_out;
output   add120197_out_ap_vld;

reg ap_idle;
reg add120_1_4206_out_ap_vld;
reg add120_1_3205_out_ap_vld;
reg add120_1_2204_out_ap_vld;
reg add120_1_124203_out_ap_vld;
reg add120_1202_out_ap_vld;
reg add120_4201_out_ap_vld;
reg add120_3200_out_ap_vld;
reg add120_2199_out_ap_vld;
reg add120_171198_out_ap_vld;
reg add120197_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_11_fu_590_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] add120197_fu_168;
wire   [63:0] add_ln68_4_fu_886_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] add120_171198_fu_172;
wire   [63:0] add_ln68_6_fu_923_p2;
reg   [63:0] add120_2199_fu_176;
wire   [63:0] add_ln68_8_fu_955_p2;
reg   [63:0] add120_3200_fu_180;
wire   [63:0] add_ln68_10_fu_992_p2;
reg   [63:0] add120_4201_fu_184;
wire   [63:0] add_ln68_13_fu_1059_p2;
reg   [63:0] add120_1202_fu_188;
wire   [63:0] add_ln68_18_fu_1244_p2;
reg   [63:0] add120_1_124203_fu_192;
wire   [63:0] add_ln68_20_fu_1276_p2;
reg   [63:0] add120_1_2204_fu_196;
wire   [63:0] add_ln68_22_fu_1313_p2;
reg   [63:0] add120_1_3205_fu_200;
wire   [63:0] add_ln68_24_fu_1331_p2;
reg   [63:0] add120_1_4206_fu_204;
wire   [63:0] add_ln68_26_fu_1371_p2;
reg   [4:0] i1_fu_208;
wire   [4:0] add_ln55_fu_1377_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln68_fu_456_p0;
wire   [63:0] zext_ln68_5_fu_858_p1;
wire   [31:0] mul_ln68_fu_456_p1;
wire   [63:0] zext_ln68_1_fu_705_p1;
wire   [31:0] mul_ln68_1_fu_460_p0;
wire   [31:0] mul_ln68_1_fu_460_p1;
wire   [63:0] zext_ln68_fu_657_p1;
wire   [31:0] mul_ln68_2_fu_464_p0;
wire   [31:0] mul_ln68_2_fu_464_p1;
wire   [31:0] mul_ln68_3_fu_468_p0;
wire   [31:0] mul_ln68_3_fu_468_p1;
wire   [31:0] mul_ln68_4_fu_472_p0;
wire   [31:0] mul_ln68_4_fu_472_p1;
wire   [63:0] zext_ln68_3_fu_790_p1;
wire   [31:0] mul_ln68_5_fu_476_p0;
wire   [31:0] mul_ln68_5_fu_476_p1;
wire   [31:0] mul_ln68_6_fu_480_p0;
wire   [31:0] mul_ln68_6_fu_480_p1;
wire   [31:0] mul_ln68_7_fu_484_p0;
wire   [31:0] mul_ln68_7_fu_484_p1;
wire   [31:0] mul_ln68_8_fu_488_p0;
wire   [63:0] zext_ln68_8_fu_1021_p1;
wire   [31:0] mul_ln68_8_fu_488_p1;
wire   [31:0] mul_ln68_9_fu_492_p0;
wire   [31:0] mul_ln68_9_fu_492_p1;
wire   [31:0] mul_ln68_10_fu_496_p0;
wire   [31:0] mul_ln68_10_fu_496_p1;
wire   [31:0] mul_ln68_11_fu_500_p0;
wire   [31:0] mul_ln68_11_fu_500_p1;
wire   [31:0] mul_ln68_12_fu_504_p0;
wire   [63:0] zext_ln68_10_fu_1131_p1;
wire   [31:0] mul_ln68_12_fu_504_p1;
wire   [31:0] mul_ln68_13_fu_508_p0;
wire   [31:0] mul_ln68_13_fu_508_p1;
wire   [31:0] mul_ln68_14_fu_512_p0;
wire   [31:0] mul_ln68_14_fu_512_p1;
wire   [31:0] mul_ln68_15_fu_516_p0;
wire   [31:0] mul_ln68_15_fu_516_p1;
wire   [31:0] mul_ln68_16_fu_520_p0;
wire   [63:0] zext_ln68_12_fu_1207_p1;
wire   [31:0] mul_ln68_16_fu_520_p1;
wire   [31:0] mul_ln68_17_fu_524_p0;
wire   [31:0] mul_ln68_17_fu_524_p1;
wire   [31:0] mul_ln68_18_fu_528_p0;
wire   [31:0] mul_ln68_18_fu_528_p1;
wire   [3:0] trunc_ln55_fu_628_p1;
wire   [31:0] tmp_fu_640_p12;
wire   [3:0] tmp_1_fu_682_p11;
wire   [31:0] tmp_1_fu_682_p12;
wire   [4:0] add_ln68_fu_670_p2;
wire   [3:0] tmp_2_fu_729_p11;
wire   [31:0] tmp_2_fu_729_p12;
wire   [31:0] shl_ln68_fu_752_p2;
wire   [4:0] add_ln68_1_fu_717_p2;
wire   [1:0] trunc_ln55_2_fu_636_p1;
wire   [1:0] tmp_3_fu_781_p4;
wire   [31:0] tmp_3_fu_781_p5;
wire   [4:0] add_ln68_2_fu_769_p2;
wire   [1:0] tmp_4_fu_814_p5;
wire   [31:0] tmp_4_fu_814_p6;
wire   [31:0] shl_ln68_1_fu_824_p2;
wire   [4:0] add_ln68_3_fu_802_p2;
wire   [31:0] tmp_5_fu_841_p12;
wire   [0:0] icmp_ln68_fu_711_p2;
wire   [63:0] mul_ln68_fu_456_p2;
wire   [63:0] select_ln68_fu_872_p3;
wire   [63:0] and_ln68_fu_880_p2;
wire   [63:0] mul_ln68_1_fu_460_p2;
wire   [0:0] icmp_ln68_1_fu_763_p2;
wire   [63:0] mul_ln68_2_fu_464_p2;
wire   [63:0] select_ln68_1_fu_903_p3;
wire   [63:0] and_ln68_2_fu_911_p2;
wire   [63:0] and_ln68_1_fu_897_p2;
wire   [63:0] add_ln68_5_fu_917_p2;
wire   [63:0] mul_ln68_3_fu_468_p2;
wire   [0:0] icmp_ln68_2_fu_796_p2;
wire   [63:0] mul_ln68_4_fu_472_p2;
wire   [63:0] select_ln68_2_fu_935_p3;
wire   [63:0] and_ln68_4_fu_943_p2;
wire   [63:0] and_ln68_3_fu_929_p2;
wire   [63:0] add_ln68_7_fu_949_p2;
wire   [63:0] mul_ln68_5_fu_476_p2;
wire   [0:0] icmp_ln68_3_fu_835_p2;
wire   [63:0] mul_ln68_6_fu_480_p2;
wire   [63:0] select_ln68_3_fu_972_p3;
wire   [63:0] and_ln68_6_fu_980_p2;
wire   [63:0] and_ln68_5_fu_966_p2;
wire   [63:0] add_ln68_9_fu_986_p2;
wire   [2:0] trunc_ln55_1_fu_632_p1;
wire   [2:0] tmp_6_fu_1010_p6;
wire   [31:0] tmp_6_fu_1010_p7;
wire   [4:0] add_ln68_11_fu_998_p2;
wire   [63:0] mul_ln68_7_fu_484_p2;
wire   [0:0] icmp_ln68_4_fu_1027_p2;
wire   [63:0] mul_ln68_8_fu_488_p2;
wire   [63:0] select_ln68_4_fu_1039_p3;
wire   [63:0] and_ln68_8_fu_1047_p2;
wire   [63:0] and_ln68_7_fu_1033_p2;
wire   [63:0] add_ln68_12_fu_1053_p2;
wire   [2:0] tmp_7_fu_1077_p7;
wire   [31:0] tmp_7_fu_1077_p8;
wire   [31:0] shl_ln68_2_fu_1089_p2;
wire   [4:0] add_ln68_14_fu_1065_p2;
wire   [2:0] tmp_8_fu_1118_p8;
wire   [31:0] tmp_8_fu_1118_p9;
wire   [4:0] add_ln68_15_fu_1106_p2;
wire   [2:0] tmp_9_fu_1155_p9;
wire   [31:0] tmp_9_fu_1155_p10;
wire   [31:0] shl_ln68_3_fu_1169_p2;
wire   [4:0] add_ln68_16_fu_1143_p2;
wire   [3:0] tmp_s_fu_1192_p10;
wire   [31:0] tmp_s_fu_1192_p11;
wire   [63:0] mul_ln68_9_fu_492_p2;
wire   [0:0] icmp_ln68_5_fu_1100_p2;
wire   [63:0] mul_ln68_10_fu_496_p2;
wire   [63:0] select_ln68_5_fu_1224_p3;
wire   [63:0] and_ln68_10_fu_1232_p2;
wire   [63:0] and_ln68_9_fu_1218_p2;
wire   [63:0] add_ln68_17_fu_1238_p2;
wire   [63:0] mul_ln68_11_fu_500_p2;
wire   [0:0] icmp_ln68_6_fu_1137_p2;
wire   [63:0] mul_ln68_12_fu_504_p2;
wire   [63:0] select_ln68_6_fu_1256_p3;
wire   [63:0] and_ln68_11_fu_1250_p2;
wire   [63:0] and_ln68_12_fu_1264_p2;
wire   [63:0] add_ln68_19_fu_1270_p2;
wire   [63:0] mul_ln68_13_fu_508_p2;
wire   [0:0] icmp_ln68_7_fu_1180_p2;
wire   [63:0] mul_ln68_14_fu_512_p2;
wire   [63:0] select_ln68_7_fu_1293_p3;
wire   [63:0] and_ln68_14_fu_1301_p2;
wire   [63:0] and_ln68_13_fu_1287_p2;
wire   [63:0] add_ln68_21_fu_1307_p2;
wire   [63:0] mul_ln68_15_fu_516_p2;
wire   [63:0] and_ln68_15_fu_1319_p2;
wire   [63:0] mul_ln68_16_fu_520_p2;
wire   [63:0] add_ln68_23_fu_1325_p2;
wire   [3:0] tmp_10_fu_1343_p11;
wire   [31:0] tmp_10_fu_1343_p12;
wire   [63:0] mul_ln68_18_fu_528_p2;
wire   [63:0] mul_ln68_17_fu_524_p2;
wire   [63:0] add_ln68_25_fu_1365_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln68_10_fu_496_p00;
wire   [63:0] mul_ln68_11_fu_500_p00;
wire   [63:0] mul_ln68_14_fu_512_p00;
wire   [63:0] mul_ln68_15_fu_516_p00;
wire   [63:0] mul_ln68_18_fu_528_p00;
wire   [63:0] mul_ln68_2_fu_464_p10;
wire   [63:0] mul_ln68_3_fu_468_p00;
wire   [63:0] mul_ln68_6_fu_480_p10;
wire   [63:0] mul_ln68_7_fu_484_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U25(
    .din0(mul_ln68_fu_456_p0),
    .din1(mul_ln68_fu_456_p1),
    .dout(mul_ln68_fu_456_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U26(
    .din0(mul_ln68_1_fu_460_p0),
    .din1(mul_ln68_1_fu_460_p1),
    .dout(mul_ln68_1_fu_460_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U27(
    .din0(mul_ln68_2_fu_464_p0),
    .din1(mul_ln68_2_fu_464_p1),
    .dout(mul_ln68_2_fu_464_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U28(
    .din0(mul_ln68_3_fu_468_p0),
    .din1(mul_ln68_3_fu_468_p1),
    .dout(mul_ln68_3_fu_468_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U29(
    .din0(mul_ln68_4_fu_472_p0),
    .din1(mul_ln68_4_fu_472_p1),
    .dout(mul_ln68_4_fu_472_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln68_5_fu_476_p0),
    .din1(mul_ln68_5_fu_476_p1),
    .dout(mul_ln68_5_fu_476_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln68_6_fu_480_p0),
    .din1(mul_ln68_6_fu_480_p1),
    .dout(mul_ln68_6_fu_480_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln68_7_fu_484_p0),
    .din1(mul_ln68_7_fu_484_p1),
    .dout(mul_ln68_7_fu_484_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln68_8_fu_488_p0),
    .din1(mul_ln68_8_fu_488_p1),
    .dout(mul_ln68_8_fu_488_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln68_9_fu_492_p0),
    .din1(mul_ln68_9_fu_492_p1),
    .dout(mul_ln68_9_fu_492_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln68_10_fu_496_p0),
    .din1(mul_ln68_10_fu_496_p1),
    .dout(mul_ln68_10_fu_496_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln68_11_fu_500_p0),
    .din1(mul_ln68_11_fu_500_p1),
    .dout(mul_ln68_11_fu_500_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln68_12_fu_504_p0),
    .din1(mul_ln68_12_fu_504_p1),
    .dout(mul_ln68_12_fu_504_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln68_13_fu_508_p0),
    .din1(mul_ln68_13_fu_508_p1),
    .dout(mul_ln68_13_fu_508_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln68_14_fu_512_p0),
    .din1(mul_ln68_14_fu_512_p1),
    .dout(mul_ln68_14_fu_512_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U40(
    .din0(mul_ln68_15_fu_516_p0),
    .din1(mul_ln68_15_fu_516_p1),
    .dout(mul_ln68_15_fu_516_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U41(
    .din0(mul_ln68_16_fu_520_p0),
    .din1(mul_ln68_16_fu_520_p1),
    .dout(mul_ln68_16_fu_520_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U42(
    .din0(mul_ln68_17_fu_524_p0),
    .din1(mul_ln68_17_fu_524_p1),
    .dout(mul_ln68_17_fu_524_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U43(
    .din0(mul_ln68_18_fu_528_p0),
    .din1(mul_ln68_18_fu_528_p1),
    .dout(mul_ln68_18_fu_528_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U44(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(trunc_ln55_fu_628_p1),
    .dout(tmp_fu_640_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U45(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_1_fu_682_p11),
    .dout(tmp_1_fu_682_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U46(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_2_fu_729_p11),
    .dout(tmp_2_fu_729_p12)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U47(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(tmp_3_fu_781_p4),
    .dout(tmp_3_fu_781_p5)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U48(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_4_fu_814_p5),
    .dout(tmp_4_fu_814_p6)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U49(
    .din0(32'd0),
    .din1(arg1_r_reload),
    .din2(arg1_r_1_reload),
    .din3(arg1_r_2_reload),
    .din4(arg1_r_3_reload),
    .din5(arg1_r_4_reload),
    .din6(arg1_r_5_reload),
    .din7(arg1_r_6_reload),
    .din8(arg1_r_7_reload),
    .din9(arg1_r_8_reload),
    .din10(trunc_ln55_fu_628_p1),
    .dout(tmp_5_fu_841_p12)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U50(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_6_fu_1010_p6),
    .dout(tmp_6_fu_1010_p7)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U51(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_7_fu_1077_p7),
    .dout(tmp_7_fu_1077_p8)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U52(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_8_fu_1118_p8),
    .dout(tmp_8_fu_1118_p9)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U53(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_9_fu_1155_p9),
    .dout(tmp_9_fu_1155_p10)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U54(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_s_fu_1192_p10),
    .dout(tmp_s_fu_1192_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U55(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_10_fu_1343_p11),
    .dout(tmp_10_fu_1343_p12)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120197_fu_168 <= arr_8;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120197_fu_168 <= add_ln68_4_fu_886_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1202_fu_188 <= arr_3;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1202_fu_188 <= add_ln68_18_fu_1244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_171198_fu_172 <= arr_7;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_171198_fu_172 <= add_ln68_6_fu_923_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1_124203_fu_192 <= arr_2;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1_124203_fu_192 <= add_ln68_20_fu_1276_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1_2204_fu_196 <= arr_1;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1_2204_fu_196 <= add_ln68_22_fu_1313_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1_3205_fu_200 <= arr;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1_3205_fu_200 <= add_ln68_24_fu_1331_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1_4206_fu_204 <= 64'd0;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1_4206_fu_204 <= add_ln68_26_fu_1371_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_2199_fu_176 <= arr_6;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_2199_fu_176 <= add_ln68_8_fu_955_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_3200_fu_180 <= arr_5;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_3200_fu_180 <= add_ln68_10_fu_992_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_4201_fu_184 <= arr_4;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_4201_fu_184 <= add_ln68_13_fu_1059_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_208 <= 5'd9;
        end else if (((tmp_11_fu_590_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_fu_208 <= add_ln55_fu_1377_p2;
        end
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120197_out_ap_vld = 1'b1;
    end else begin
        add120197_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1202_out_ap_vld = 1'b1;
    end else begin
        add120_1202_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_171198_out_ap_vld = 1'b1;
    end else begin
        add120_171198_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1_124203_out_ap_vld = 1'b1;
    end else begin
        add120_1_124203_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1_2204_out_ap_vld = 1'b1;
    end else begin
        add120_1_2204_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1_3205_out_ap_vld = 1'b1;
    end else begin
        add120_1_3205_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1_4206_out_ap_vld = 1'b1;
    end else begin
        add120_1_4206_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_2199_out_ap_vld = 1'b1;
    end else begin
        add120_2199_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_3200_out_ap_vld = 1'b1;
    end else begin
        add120_3200_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_4201_out_ap_vld = 1'b1;
    end else begin
        add120_4201_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_fu_590_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add120197_out = add120197_fu_168;

assign add120_1202_out = add120_1202_fu_188;

assign add120_171198_out = add120_171198_fu_172;

assign add120_1_124203_out = add120_1_124203_fu_192;

assign add120_1_2204_out = add120_1_2204_fu_196;

assign add120_1_3205_out = add120_1_3205_fu_200;

assign add120_1_4206_out = add120_1_4206_fu_204;

assign add120_2199_out = add120_2199_fu_176;

assign add120_3200_out = add120_3200_fu_180;

assign add120_4201_out = add120_4201_fu_184;

assign add_ln55_fu_1377_p2 = ($signed(i1_fu_208) + $signed(5'd30));

assign add_ln68_10_fu_992_p2 = (add120_3200_fu_180 + add_ln68_9_fu_986_p2);

assign add_ln68_11_fu_998_p2 = (i1_fu_208 + 5'd4);

assign add_ln68_12_fu_1053_p2 = (and_ln68_8_fu_1047_p2 + and_ln68_7_fu_1033_p2);

assign add_ln68_13_fu_1059_p2 = (add120_4201_fu_184 + add_ln68_12_fu_1053_p2);

assign add_ln68_14_fu_1065_p2 = (i1_fu_208 + 5'd3);

assign add_ln68_15_fu_1106_p2 = (i1_fu_208 + 5'd2);

assign add_ln68_16_fu_1143_p2 = (i1_fu_208 + 5'd1);

assign add_ln68_17_fu_1238_p2 = (and_ln68_10_fu_1232_p2 + and_ln68_9_fu_1218_p2);

assign add_ln68_18_fu_1244_p2 = (add120_1202_fu_188 + add_ln68_17_fu_1238_p2);

assign add_ln68_19_fu_1270_p2 = (and_ln68_11_fu_1250_p2 + and_ln68_12_fu_1264_p2);

assign add_ln68_1_fu_717_p2 = (i1_fu_208 + 5'd7);

assign add_ln68_20_fu_1276_p2 = (add120_1_124203_fu_192 + add_ln68_19_fu_1270_p2);

assign add_ln68_21_fu_1307_p2 = (and_ln68_14_fu_1301_p2 + and_ln68_13_fu_1287_p2);

assign add_ln68_22_fu_1313_p2 = (add120_1_2204_fu_196 + add_ln68_21_fu_1307_p2);

assign add_ln68_23_fu_1325_p2 = (and_ln68_15_fu_1319_p2 + mul_ln68_16_fu_520_p2);

assign add_ln68_24_fu_1331_p2 = (add120_1_3205_fu_200 + add_ln68_23_fu_1325_p2);

assign add_ln68_25_fu_1365_p2 = (mul_ln68_18_fu_528_p2 + mul_ln68_17_fu_524_p2);

assign add_ln68_26_fu_1371_p2 = (add120_1_4206_fu_204 + add_ln68_25_fu_1365_p2);

assign add_ln68_2_fu_769_p2 = (i1_fu_208 + 5'd6);

assign add_ln68_3_fu_802_p2 = (i1_fu_208 + 5'd5);

assign add_ln68_4_fu_886_p2 = (and_ln68_fu_880_p2 + add120197_fu_168);

assign add_ln68_5_fu_917_p2 = (and_ln68_2_fu_911_p2 + and_ln68_1_fu_897_p2);

assign add_ln68_6_fu_923_p2 = (add120_171198_fu_172 + add_ln68_5_fu_917_p2);

assign add_ln68_7_fu_949_p2 = (and_ln68_4_fu_943_p2 + and_ln68_3_fu_929_p2);

assign add_ln68_8_fu_955_p2 = (add120_2199_fu_176 + add_ln68_7_fu_949_p2);

assign add_ln68_9_fu_986_p2 = (and_ln68_6_fu_980_p2 + and_ln68_5_fu_966_p2);

assign add_ln68_fu_670_p2 = (i1_fu_208 + 5'd8);

assign and_ln68_10_fu_1232_p2 = (select_ln68_5_fu_1224_p3 & mul_ln68_10_fu_496_p2);

assign and_ln68_11_fu_1250_p2 = (select_ln68_5_fu_1224_p3 & mul_ln68_11_fu_500_p2);

assign and_ln68_12_fu_1264_p2 = (select_ln68_6_fu_1256_p3 & mul_ln68_12_fu_504_p2);

assign and_ln68_13_fu_1287_p2 = (select_ln68_6_fu_1256_p3 & mul_ln68_13_fu_508_p2);

assign and_ln68_14_fu_1301_p2 = (select_ln68_7_fu_1293_p3 & mul_ln68_14_fu_512_p2);

assign and_ln68_15_fu_1319_p2 = (select_ln68_7_fu_1293_p3 & mul_ln68_15_fu_516_p2);

assign and_ln68_1_fu_897_p2 = (select_ln68_fu_872_p3 & mul_ln68_1_fu_460_p2);

assign and_ln68_2_fu_911_p2 = (select_ln68_1_fu_903_p3 & mul_ln68_2_fu_464_p2);

assign and_ln68_3_fu_929_p2 = (select_ln68_1_fu_903_p3 & mul_ln68_3_fu_468_p2);

assign and_ln68_4_fu_943_p2 = (select_ln68_2_fu_935_p3 & mul_ln68_4_fu_472_p2);

assign and_ln68_5_fu_966_p2 = (select_ln68_2_fu_935_p3 & mul_ln68_5_fu_476_p2);

assign and_ln68_6_fu_980_p2 = (select_ln68_3_fu_972_p3 & mul_ln68_6_fu_480_p2);

assign and_ln68_7_fu_1033_p2 = (select_ln68_3_fu_972_p3 & mul_ln68_7_fu_484_p2);

assign and_ln68_8_fu_1047_p2 = (select_ln68_4_fu_1039_p3 & mul_ln68_8_fu_488_p2);

assign and_ln68_9_fu_1218_p2 = (select_ln68_4_fu_1039_p3 & mul_ln68_9_fu_492_p2);

assign and_ln68_fu_880_p2 = (select_ln68_fu_872_p3 & mul_ln68_fu_456_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln68_1_fu_763_p2 = ((add_ln68_1_fu_717_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_796_p2 = (($signed(add_ln68_2_fu_769_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_835_p2 = (($signed(add_ln68_3_fu_802_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_1027_p2 = (($signed(add_ln68_11_fu_998_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_5_fu_1100_p2 = (($signed(add_ln68_14_fu_1065_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_6_fu_1137_p2 = (($signed(add_ln68_15_fu_1106_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_7_fu_1180_p2 = (($signed(add_ln68_16_fu_1143_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_711_p2 = ((add_ln68_fu_670_p2 < 5'd10) ? 1'b1 : 1'b0);

assign mul_ln68_10_fu_496_p0 = mul_ln68_10_fu_496_p00;

assign mul_ln68_10_fu_496_p00 = tmp_7_fu_1077_p8;

assign mul_ln68_10_fu_496_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_11_fu_500_p0 = mul_ln68_11_fu_500_p00;

assign mul_ln68_11_fu_500_p00 = shl_ln68_2_fu_1089_p2;

assign mul_ln68_11_fu_500_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_12_fu_504_p0 = zext_ln68_10_fu_1131_p1;

assign mul_ln68_12_fu_504_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_13_fu_508_p0 = zext_ln68_10_fu_1131_p1;

assign mul_ln68_13_fu_508_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_14_fu_512_p0 = mul_ln68_14_fu_512_p00;

assign mul_ln68_14_fu_512_p00 = tmp_9_fu_1155_p10;

assign mul_ln68_14_fu_512_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_15_fu_516_p0 = mul_ln68_15_fu_516_p00;

assign mul_ln68_15_fu_516_p00 = shl_ln68_3_fu_1169_p2;

assign mul_ln68_15_fu_516_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_16_fu_520_p0 = zext_ln68_12_fu_1207_p1;

assign mul_ln68_16_fu_520_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_17_fu_524_p0 = zext_ln68_12_fu_1207_p1;

assign mul_ln68_17_fu_524_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_18_fu_528_p0 = mul_ln68_18_fu_528_p00;

assign mul_ln68_18_fu_528_p00 = tmp_10_fu_1343_p12;

assign mul_ln68_18_fu_528_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_1_fu_460_p0 = zext_ln68_1_fu_705_p1;

assign mul_ln68_1_fu_460_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_2_fu_464_p0 = zext_ln68_5_fu_858_p1;

assign mul_ln68_2_fu_464_p1 = mul_ln68_2_fu_464_p10;

assign mul_ln68_2_fu_464_p10 = tmp_2_fu_729_p12;

assign mul_ln68_3_fu_468_p0 = mul_ln68_3_fu_468_p00;

assign mul_ln68_3_fu_468_p00 = shl_ln68_fu_752_p2;

assign mul_ln68_3_fu_468_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_4_fu_472_p0 = zext_ln68_5_fu_858_p1;

assign mul_ln68_4_fu_472_p1 = zext_ln68_3_fu_790_p1;

assign mul_ln68_5_fu_476_p0 = zext_ln68_3_fu_790_p1;

assign mul_ln68_5_fu_476_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_6_fu_480_p0 = zext_ln68_5_fu_858_p1;

assign mul_ln68_6_fu_480_p1 = mul_ln68_6_fu_480_p10;

assign mul_ln68_6_fu_480_p10 = tmp_4_fu_814_p6;

assign mul_ln68_7_fu_484_p0 = mul_ln68_7_fu_484_p00;

assign mul_ln68_7_fu_484_p00 = shl_ln68_1_fu_824_p2;

assign mul_ln68_7_fu_484_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_8_fu_488_p0 = zext_ln68_8_fu_1021_p1;

assign mul_ln68_8_fu_488_p1 = zext_ln68_5_fu_858_p1;

assign mul_ln68_9_fu_492_p0 = zext_ln68_8_fu_1021_p1;

assign mul_ln68_9_fu_492_p1 = zext_ln68_fu_657_p1;

assign mul_ln68_fu_456_p0 = zext_ln68_5_fu_858_p1;

assign mul_ln68_fu_456_p1 = zext_ln68_1_fu_705_p1;

assign select_ln68_1_fu_903_p3 = ((icmp_ln68_1_fu_763_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_2_fu_935_p3 = ((icmp_ln68_2_fu_796_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_3_fu_972_p3 = ((icmp_ln68_3_fu_835_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_4_fu_1039_p3 = ((icmp_ln68_4_fu_1027_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_5_fu_1224_p3 = ((icmp_ln68_5_fu_1100_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_6_fu_1256_p3 = ((icmp_ln68_6_fu_1137_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_7_fu_1293_p3 = ((icmp_ln68_7_fu_1180_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_fu_872_p3 = ((icmp_ln68_fu_711_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign shl_ln68_1_fu_824_p2 = tmp_4_fu_814_p6 << 32'd1;

assign shl_ln68_2_fu_1089_p2 = tmp_7_fu_1077_p8 << 32'd1;

assign shl_ln68_3_fu_1169_p2 = tmp_9_fu_1155_p10 << 32'd1;

assign shl_ln68_fu_752_p2 = tmp_2_fu_729_p12 << 32'd1;

assign tmp_10_fu_1343_p11 = ($signed(4'd10) - $signed(trunc_ln55_fu_628_p1));

assign tmp_11_fu_590_p3 = i1_fu_208[32'd4];

assign tmp_1_fu_682_p11 = (4'd1 - trunc_ln55_fu_628_p1);

assign tmp_2_fu_729_p11 = (4'd2 - trunc_ln55_fu_628_p1);

assign tmp_3_fu_781_p4 = (trunc_ln55_2_fu_636_p1 ^ 2'd3);

assign tmp_4_fu_814_p5 = (2'd0 - trunc_ln55_2_fu_636_p1);

assign tmp_6_fu_1010_p6 = ($signed(3'd5) - $signed(trunc_ln55_1_fu_632_p1));

assign tmp_7_fu_1077_p7 = ($signed(3'd6) - $signed(trunc_ln55_1_fu_632_p1));

assign tmp_8_fu_1118_p8 = (trunc_ln55_1_fu_632_p1 ^ 3'd7);

assign tmp_9_fu_1155_p9 = (3'd0 - trunc_ln55_1_fu_632_p1);

assign tmp_s_fu_1192_p10 = ($signed(4'd9) - $signed(trunc_ln55_fu_628_p1));

assign trunc_ln55_1_fu_632_p1 = i1_fu_208[2:0];

assign trunc_ln55_2_fu_636_p1 = i1_fu_208[1:0];

assign trunc_ln55_fu_628_p1 = i1_fu_208[3:0];

assign zext_ln68_10_fu_1131_p1 = tmp_8_fu_1118_p9;

assign zext_ln68_12_fu_1207_p1 = tmp_s_fu_1192_p11;

assign zext_ln68_1_fu_705_p1 = tmp_1_fu_682_p12;

assign zext_ln68_3_fu_790_p1 = tmp_3_fu_781_p5;

assign zext_ln68_5_fu_858_p1 = tmp_5_fu_841_p12;

assign zext_ln68_8_fu_1021_p1 = tmp_6_fu_1010_p7;

assign zext_ln68_fu_657_p1 = tmp_fu_640_p12;

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5
