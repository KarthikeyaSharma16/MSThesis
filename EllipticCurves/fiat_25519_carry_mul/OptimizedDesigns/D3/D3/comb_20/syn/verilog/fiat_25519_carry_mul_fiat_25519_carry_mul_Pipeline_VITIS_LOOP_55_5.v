// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr,
        arr_1,
        arr_2,
        arr_3,
        arr_4,
        arr_5,
        arr_6,
        arr_7,
        arr_8,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg2_r_reload,
        arg2_r_1_reload,
        arg2_r_2_reload,
        arg2_r_3_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg1_r_3_reload,
        arg2_r_6_reload,
        arg1_r_2_reload,
        arg2_r_7_reload,
        arg1_r_1_reload,
        arg2_r_8_reload,
        arg1_r_reload,
        zext_ln68_8,
        arg2_r_9_reload,
        add120_9280_out,
        add120_9280_out_ap_vld,
        add120_8279_out,
        add120_8279_out_ap_vld,
        add120_7278_out,
        add120_7278_out_ap_vld,
        add120_6277_out,
        add120_6277_out_ap_vld,
        add120_5276_out,
        add120_5276_out_ap_vld,
        add120_474275_out,
        add120_474275_out_ap_vld,
        add120_358274_out,
        add120_358274_out_ap_vld,
        add120_242273_out,
        add120_242273_out_ap_vld,
        add120_126272_out,
        add120_126272_out_ap_vld,
        add120271_out,
        add120271_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr;
input  [63:0] arr_1;
input  [63:0] arr_2;
input  [63:0] arr_3;
input  [63:0] arr_4;
input  [63:0] arr_5;
input  [63:0] arr_6;
input  [63:0] arr_7;
input  [63:0] arr_8;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg1_r_reload;
input  [31:0] zext_ln68_8;
input  [31:0] arg2_r_9_reload;
output  [63:0] add120_9280_out;
output   add120_9280_out_ap_vld;
output  [63:0] add120_8279_out;
output   add120_8279_out_ap_vld;
output  [63:0] add120_7278_out;
output   add120_7278_out_ap_vld;
output  [63:0] add120_6277_out;
output   add120_6277_out_ap_vld;
output  [63:0] add120_5276_out;
output   add120_5276_out_ap_vld;
output  [63:0] add120_474275_out;
output   add120_474275_out_ap_vld;
output  [63:0] add120_358274_out;
output   add120_358274_out_ap_vld;
output  [63:0] add120_242273_out;
output   add120_242273_out_ap_vld;
output  [63:0] add120_126272_out;
output   add120_126272_out_ap_vld;
output  [63:0] add120271_out;
output   add120271_out_ap_vld;

reg ap_idle;
reg add120_9280_out_ap_vld;
reg add120_8279_out_ap_vld;
reg add120_7278_out_ap_vld;
reg add120_6277_out_ap_vld;
reg add120_5276_out_ap_vld;
reg add120_474275_out_ap_vld;
reg add120_358274_out_ap_vld;
reg add120_242273_out_ap_vld;
reg add120_126272_out_ap_vld;
reg add120271_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_13_fu_693_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln68_8_cast_fu_626_p1;
reg   [63:0] zext_ln68_8_cast_reg_2166;
wire   [63:0] and_ln68_12_fu_1485_p2;
reg   [63:0] and_ln68_12_reg_2175;
wire   [63:0] add_ln68_17_fu_1523_p2;
reg   [63:0] add_ln68_17_reg_2180;
wire   [63:0] add_ln68_25_fu_1601_p2;
reg   [63:0] add_ln68_25_reg_2185;
wire   [63:0] add_ln68_27_fu_1613_p2;
reg   [63:0] add_ln68_27_reg_2190;
wire   [63:0] add_ln68_35_fu_1686_p2;
reg   [63:0] add_ln68_35_reg_2195;
wire   [63:0] add_ln68_37_fu_1698_p2;
reg   [63:0] add_ln68_37_reg_2200;
reg   [3:0] i1_2_fu_168;
wire   [3:0] i1_4_fu_1771_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] add120271_fu_172;
wire   [63:0] add_ln68_5_fu_1335_p2;
reg   [63:0] add120_126272_fu_176;
wire   [63:0] add_ln68_7_fu_1367_p2;
reg   [63:0] add120_242273_fu_180;
wire   [63:0] add_ln68_10_fu_1411_p2;
reg   [63:0] add120_358274_fu_184;
wire   [63:0] add_ln68_14_fu_1467_p2;
reg   [63:0] add120_474275_fu_188;
wire   [63:0] add_ln68_19_fu_1835_p2;
reg   [63:0] add120_5276_fu_192;
wire   [63:0] add_ln68_24_fu_1577_p2;
reg   [63:0] add120_6277_fu_196;
wire   [63:0] add_ln68_29_fu_1845_p2;
reg   [63:0] add120_7278_fu_200;
wire   [63:0] add_ln68_34_fu_1655_p2;
reg   [63:0] add120_8279_fu_204;
wire   [63:0] add_ln68_39_fu_1855_p2;
reg   [63:0] add120_9280_fu_208;
wire   [63:0] add_ln68_44_fu_1759_p2;
reg   [4:0] i1_fu_212;
wire   [4:0] add_ln55_fu_1765_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln68_fu_466_p0;
wire   [63:0] zext_ln68_21_fu_1307_p1;
wire   [31:0] mul_ln68_fu_466_p1;
wire   [63:0] zext_ln68_1_fu_793_p1;
wire   [31:0] mul_ln68_1_fu_470_p0;
wire   [63:0] zext_ln68_18_fu_1226_p1;
wire   [31:0] mul_ln68_1_fu_470_p1;
wire   [31:0] mul_ln68_2_fu_474_p0;
wire   [31:0] mul_ln68_2_fu_474_p1;
wire   [63:0] zext_ln68_2_fu_826_p1;
wire   [31:0] mul_ln68_3_fu_478_p0;
wire   [31:0] mul_ln68_3_fu_478_p1;
wire   [63:0] zext_ln68_3_fu_874_p1;
wire   [31:0] mul_ln68_4_fu_482_p0;
wire   [63:0] zext_ln68_15_fu_1146_p1;
wire   [31:0] mul_ln68_4_fu_482_p1;
wire   [31:0] mul_ln68_5_fu_486_p0;
wire   [31:0] mul_ln68_5_fu_486_p1;
wire   [63:0] zext_ln68_9_fu_1042_p1;
wire   [31:0] mul_ln68_6_fu_490_p0;
wire   [31:0] mul_ln68_6_fu_490_p1;
wire   [63:0] zext_ln68_4_fu_909_p1;
wire   [31:0] mul_ln68_7_fu_494_p0;
wire   [31:0] mul_ln68_7_fu_494_p1;
wire   [31:0] mul_ln68_8_fu_498_p0;
wire   [31:0] mul_ln68_8_fu_498_p1;
wire   [63:0] zext_ln68_10_fu_1048_p1;
wire   [31:0] mul_ln68_9_fu_502_p0;
wire   [63:0] zext_ln68_7_fu_1017_p1;
wire   [31:0] mul_ln68_9_fu_502_p1;
wire   [31:0] mul_ln68_10_fu_506_p0;
wire   [31:0] mul_ln68_10_fu_506_p1;
wire   [63:0] zext_ln68_fu_765_p1;
wire   [31:0] mul_ln68_11_fu_510_p0;
wire   [31:0] mul_ln68_11_fu_510_p1;
wire   [31:0] mul_ln68_12_fu_514_p0;
wire   [31:0] mul_ln68_12_fu_514_p1;
wire   [63:0] zext_ln68_11_fu_1068_p1;
wire   [31:0] mul_ln68_13_fu_518_p0;
wire   [31:0] mul_ln68_13_fu_518_p1;
wire   [63:0] zext_ln68_5_fu_959_p1;
wire   [31:0] mul_ln68_14_fu_522_p0;
wire   [31:0] mul_ln68_14_fu_522_p1;
wire   [31:0] mul_ln68_15_fu_526_p0;
wire   [31:0] mul_ln68_15_fu_526_p1;
wire   [31:0] mul_ln68_16_fu_530_p0;
wire   [31:0] mul_ln68_16_fu_530_p1;
wire   [63:0] zext_ln68_12_fu_1074_p1;
wire   [31:0] mul_ln68_17_fu_534_p0;
wire   [31:0] mul_ln68_17_fu_534_p1;
wire   [63:0] zext_ln68_6_fu_990_p1;
wire   [31:0] mul_ln68_18_fu_538_p0;
wire   [31:0] mul_ln68_18_fu_538_p1;
wire   [31:0] mul_ln68_19_fu_542_p0;
wire   [31:0] mul_ln68_19_fu_542_p1;
wire   [31:0] mul_ln68_20_fu_546_p0;
wire   [31:0] mul_ln68_20_fu_546_p1;
wire   [31:0] mul_ln68_21_fu_550_p0;
wire   [31:0] mul_ln68_21_fu_550_p1;
wire   [63:0] zext_ln68_16_fu_1172_p1;
wire   [31:0] mul_ln68_22_fu_554_p0;
wire   [31:0] mul_ln68_22_fu_554_p1;
wire   [63:0] zext_ln68_13_fu_1094_p1;
wire   [31:0] mul_ln68_23_fu_558_p0;
wire   [31:0] mul_ln68_23_fu_558_p1;
wire   [31:0] mul_ln68_24_fu_562_p0;
wire   [31:0] mul_ln68_24_fu_562_p1;
wire   [31:0] mul_ln68_25_fu_566_p0;
wire   [31:0] mul_ln68_25_fu_566_p1;
wire   [63:0] zext_ln68_17_fu_1200_p1;
wire   [31:0] mul_ln68_26_fu_570_p0;
wire   [31:0] mul_ln68_26_fu_570_p1;
wire   [31:0] mul_ln68_27_fu_574_p0;
wire   [31:0] mul_ln68_27_fu_574_p1;
wire   [63:0] zext_ln68_14_fu_1120_p1;
wire   [31:0] mul_ln68_28_fu_578_p0;
wire   [31:0] mul_ln68_28_fu_578_p1;
wire   [31:0] mul_ln68_29_fu_582_p0;
wire   [31:0] mul_ln68_29_fu_582_p1;
wire   [31:0] mul_ln68_30_fu_586_p0;
wire   [31:0] mul_ln68_30_fu_586_p1;
wire   [31:0] mul_ln68_31_fu_590_p0;
wire   [31:0] mul_ln68_31_fu_590_p1;
wire   [31:0] mul_ln68_32_fu_594_p0;
wire   [31:0] mul_ln68_32_fu_594_p1;
wire   [31:0] mul_ln68_33_fu_598_p0;
wire   [31:0] mul_ln68_33_fu_598_p1;
wire   [31:0] mul_ln68_34_fu_602_p0;
wire   [31:0] mul_ln68_34_fu_602_p1;
wire   [31:0] mul_ln68_35_fu_606_p0;
wire   [31:0] mul_ln68_35_fu_606_p1;
wire   [31:0] mul_ln68_36_fu_610_p0;
wire   [31:0] mul_ln68_36_fu_610_p1;
wire   [31:0] mul_ln68_37_fu_614_p0;
wire   [31:0] mul_ln68_37_fu_614_p1;
wire   [31:0] mul_ln68_38_fu_618_p0;
wire   [31:0] mul_ln68_38_fu_618_p1;
wire   [31:0] mul_ln68_39_fu_622_p0;
wire   [31:0] mul_ln68_39_fu_622_p1;
wire   [3:0] trunc_ln55_1_fu_729_p1;
wire   [31:0] tmp_fu_745_p12;
wire   [0:0] trunc_ln55_fu_725_p1;
wire   [31:0] shl_ln68_fu_781_p2;
wire   [31:0] select_ln68_fu_786_p3;
wire   [4:0] add_ln68_fu_775_p2;
wire   [0:0] trunc_ln55_4_fu_741_p1;
wire   [0:0] tmp_2_fu_818_p3;
wire   [31:0] tmp_2_fu_818_p4;
wire   [4:0] add_ln68_1_fu_806_p2;
wire   [1:0] trunc_ln55_3_fu_737_p1;
wire   [1:0] tmp_3_fu_851_p4;
wire   [31:0] tmp_3_fu_851_p5;
wire   [31:0] shl_ln68_1_fu_860_p2;
wire   [31:0] select_ln68_1_fu_866_p3;
wire   [4:0] add_ln68_2_fu_839_p2;
wire   [1:0] tmp_4_fu_899_p5;
wire   [31:0] tmp_4_fu_899_p6;
wire   [4:0] add_ln68_3_fu_887_p2;
wire   [2:0] trunc_ln55_2_fu_733_p1;
wire   [2:0] tmp_5_fu_934_p6;
wire   [31:0] tmp_5_fu_934_p7;
wire   [31:0] shl_ln68_2_fu_945_p2;
wire   [31:0] select_ln68_2_fu_951_p3;
wire   [4:0] add_ln68_4_fu_922_p2;
wire   [2:0] tmp_6_fu_978_p7;
wire   [31:0] tmp_6_fu_978_p8;
wire   [31:0] tmp_7_fu_997_p12;
wire   [31:0] shl_ln68_3_fu_1028_p2;
wire   [31:0] select_ln68_3_fu_1034_p3;
wire   [31:0] shl_ln68_4_fu_1054_p2;
wire   [31:0] select_ln68_4_fu_1060_p3;
wire   [31:0] shl_ln68_5_fu_1080_p2;
wire   [31:0] select_ln68_5_fu_1086_p3;
wire   [2:0] tmp_8_fu_1106_p8;
wire   [31:0] tmp_8_fu_1106_p9;
wire   [31:0] tmp_9_fu_1126_p12;
wire   [31:0] shl_ln68_6_fu_1158_p2;
wire   [31:0] select_ln68_6_fu_1164_p3;
wire   [2:0] tmp_s_fu_1184_p9;
wire   [31:0] tmp_s_fu_1184_p10;
wire   [31:0] tmp_1_fu_1206_p12;
wire   [31:0] shl_ln68_7_fu_1239_p2;
wire   [31:0] select_ln68_7_fu_1245_p3;
wire   [3:0] tmp_10_fu_1264_p10;
wire   [31:0] tmp_10_fu_1264_p11;
wire   [31:0] tmp_11_fu_1287_p12;
wire   [0:0] icmp_ln68_fu_800_p2;
wire   [63:0] mul_ln68_fu_466_p2;
wire   [63:0] select_ln68_9_fu_1321_p3;
wire   [63:0] and_ln68_fu_1329_p2;
wire   [63:0] mul_ln68_1_fu_470_p2;
wire   [0:0] icmp_ln68_1_fu_833_p2;
wire   [63:0] mul_ln68_2_fu_474_p2;
wire   [63:0] select_ln68_10_fu_1347_p3;
wire   [63:0] and_ln68_2_fu_1355_p2;
wire   [63:0] and_ln68_1_fu_1341_p2;
wire   [63:0] add_ln68_6_fu_1361_p2;
wire   [0:0] icmp_ln68_2_fu_881_p2;
wire   [63:0] mul_ln68_3_fu_478_p2;
wire   [63:0] select_ln68_11_fu_1373_p3;
wire   [63:0] mul_ln68_4_fu_482_p2;
wire   [63:0] mul_ln68_5_fu_486_p2;
wire   [63:0] and_ln68_5_fu_1393_p2;
wire   [63:0] and_ln68_3_fu_1381_p2;
wire   [63:0] add_ln68_8_fu_1399_p2;
wire   [63:0] and_ln68_4_fu_1387_p2;
wire   [63:0] add_ln68_9_fu_1405_p2;
wire   [0:0] icmp_ln68_3_fu_916_p2;
wire   [63:0] mul_ln68_6_fu_490_p2;
wire   [63:0] select_ln68_12_fu_1417_p3;
wire   [63:0] mul_ln68_7_fu_494_p2;
wire   [63:0] mul_ln68_8_fu_498_p2;
wire   [63:0] mul_ln68_9_fu_502_p2;
wire   [63:0] and_ln68_9_fu_1443_p2;
wire   [63:0] and_ln68_7_fu_1431_p2;
wire   [63:0] and_ln68_8_fu_1437_p2;
wire   [63:0] and_ln68_6_fu_1425_p2;
wire   [63:0] add_ln68_12_fu_1455_p2;
wire   [63:0] add_ln68_11_fu_1449_p2;
wire   [63:0] add_ln68_13_fu_1461_p2;
wire   [63:0] mul_ln68_10_fu_506_p2;
wire   [63:0] mul_ln68_11_fu_510_p2;
wire   [63:0] mul_ln68_12_fu_514_p2;
wire   [0:0] icmp_ln68_4_fu_966_p2;
wire   [63:0] mul_ln68_13_fu_518_p2;
wire   [63:0] select_ln68_13_fu_1491_p3;
wire   [63:0] mul_ln68_14_fu_522_p2;
wire   [63:0] and_ln68_14_fu_1505_p2;
wire   [63:0] and_ln68_10_fu_1473_p2;
wire   [63:0] add_ln68_16_fu_1511_p2;
wire   [63:0] and_ln68_13_fu_1499_p2;
wire   [63:0] add_ln68_15_fu_1517_p2;
wire   [63:0] and_ln68_11_fu_1479_p2;
wire   [63:0] mul_ln68_15_fu_526_p2;
wire   [63:0] mul_ln68_16_fu_530_p2;
wire   [63:0] mul_ln68_18_fu_538_p2;
wire   [63:0] mul_ln68_19_fu_542_p2;
wire   [63:0] and_ln68_18_fu_1547_p2;
wire   [63:0] and_ln68_15_fu_1529_p2;
wire   [63:0] and_ln68_16_fu_1535_p2;
wire   [63:0] mul_ln68_17_fu_534_p2;
wire   [63:0] add_ln68_21_fu_1559_p2;
wire   [63:0] and_ln68_17_fu_1541_p2;
wire   [63:0] add_ln68_22_fu_1565_p2;
wire   [63:0] add_ln68_20_fu_1553_p2;
wire   [63:0] add_ln68_23_fu_1571_p2;
wire   [63:0] mul_ln68_20_fu_546_p2;
wire   [63:0] mul_ln68_23_fu_558_p2;
wire   [63:0] mul_ln68_24_fu_562_p2;
wire   [63:0] and_ln68_21_fu_1595_p2;
wire   [63:0] and_ln68_19_fu_1583_p2;
wire   [63:0] mul_ln68_22_fu_554_p2;
wire   [63:0] mul_ln68_21_fu_550_p2;
wire   [63:0] add_ln68_26_fu_1607_p2;
wire   [63:0] and_ln68_20_fu_1589_p2;
wire   [63:0] mul_ln68_28_fu_578_p2;
wire   [63:0] mul_ln68_29_fu_582_p2;
wire   [63:0] and_ln68_22_fu_1619_p2;
wire   [63:0] and_ln68_23_fu_1625_p2;
wire   [63:0] mul_ln68_27_fu_574_p2;
wire   [63:0] mul_ln68_25_fu_566_p2;
wire   [63:0] add_ln68_31_fu_1637_p2;
wire   [63:0] mul_ln68_26_fu_570_p2;
wire   [63:0] add_ln68_32_fu_1643_p2;
wire   [63:0] add_ln68_30_fu_1631_p2;
wire   [63:0] add_ln68_33_fu_1649_p2;
wire   [31:0] shl_ln68_8_fu_1661_p2;
wire   [31:0] select_ln68_8_fu_1667_p3;
wire   [63:0] mul_ln68_33_fu_598_p2;
wire   [63:0] mul_ln68_31_fu_590_p2;
wire   [63:0] and_ln68_24_fu_1680_p2;
wire   [63:0] mul_ln68_32_fu_594_p2;
wire   [63:0] mul_ln68_34_fu_602_p2;
wire   [63:0] add_ln68_36_fu_1692_p2;
wire   [63:0] mul_ln68_30_fu_586_p2;
wire   [3:0] tmp_12_fu_1710_p11;
wire   [31:0] tmp_12_fu_1710_p12;
wire   [63:0] mul_ln68_35_fu_606_p2;
wire   [63:0] mul_ln68_36_fu_610_p2;
wire   [63:0] mul_ln68_37_fu_614_p2;
wire   [63:0] mul_ln68_38_fu_618_p2;
wire   [63:0] add_ln68_41_fu_1741_p2;
wire   [63:0] mul_ln68_39_fu_622_p2;
wire   [63:0] add_ln68_42_fu_1747_p2;
wire   [63:0] add_ln68_40_fu_1735_p2;
wire   [63:0] add_ln68_43_fu_1753_p2;
wire   [63:0] add_ln68_18_fu_1831_p2;
wire   [63:0] add_ln68_28_fu_1841_p2;
wire   [63:0] add_ln68_38_fu_1851_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln68_32_fu_594_p00;
wire   [63:0] mul_ln68_34_fu_602_p00;
wire   [63:0] mul_ln68_37_fu_614_p00;
wire   [63:0] mul_ln68_38_fu_618_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U25(
    .din0(mul_ln68_fu_466_p0),
    .din1(mul_ln68_fu_466_p1),
    .dout(mul_ln68_fu_466_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U26(
    .din0(mul_ln68_1_fu_470_p0),
    .din1(mul_ln68_1_fu_470_p1),
    .dout(mul_ln68_1_fu_470_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U27(
    .din0(mul_ln68_2_fu_474_p0),
    .din1(mul_ln68_2_fu_474_p1),
    .dout(mul_ln68_2_fu_474_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U28(
    .din0(mul_ln68_3_fu_478_p0),
    .din1(mul_ln68_3_fu_478_p1),
    .dout(mul_ln68_3_fu_478_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U29(
    .din0(mul_ln68_4_fu_482_p0),
    .din1(mul_ln68_4_fu_482_p1),
    .dout(mul_ln68_4_fu_482_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln68_5_fu_486_p0),
    .din1(mul_ln68_5_fu_486_p1),
    .dout(mul_ln68_5_fu_486_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln68_6_fu_490_p0),
    .din1(mul_ln68_6_fu_490_p1),
    .dout(mul_ln68_6_fu_490_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln68_7_fu_494_p0),
    .din1(mul_ln68_7_fu_494_p1),
    .dout(mul_ln68_7_fu_494_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln68_8_fu_498_p0),
    .din1(mul_ln68_8_fu_498_p1),
    .dout(mul_ln68_8_fu_498_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln68_9_fu_502_p0),
    .din1(mul_ln68_9_fu_502_p1),
    .dout(mul_ln68_9_fu_502_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln68_10_fu_506_p0),
    .din1(mul_ln68_10_fu_506_p1),
    .dout(mul_ln68_10_fu_506_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln68_11_fu_510_p0),
    .din1(mul_ln68_11_fu_510_p1),
    .dout(mul_ln68_11_fu_510_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln68_12_fu_514_p0),
    .din1(mul_ln68_12_fu_514_p1),
    .dout(mul_ln68_12_fu_514_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln68_13_fu_518_p0),
    .din1(mul_ln68_13_fu_518_p1),
    .dout(mul_ln68_13_fu_518_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln68_14_fu_522_p0),
    .din1(mul_ln68_14_fu_522_p1),
    .dout(mul_ln68_14_fu_522_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U40(
    .din0(mul_ln68_15_fu_526_p0),
    .din1(mul_ln68_15_fu_526_p1),
    .dout(mul_ln68_15_fu_526_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U41(
    .din0(mul_ln68_16_fu_530_p0),
    .din1(mul_ln68_16_fu_530_p1),
    .dout(mul_ln68_16_fu_530_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U42(
    .din0(mul_ln68_17_fu_534_p0),
    .din1(mul_ln68_17_fu_534_p1),
    .dout(mul_ln68_17_fu_534_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U43(
    .din0(mul_ln68_18_fu_538_p0),
    .din1(mul_ln68_18_fu_538_p1),
    .dout(mul_ln68_18_fu_538_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U44(
    .din0(mul_ln68_19_fu_542_p0),
    .din1(mul_ln68_19_fu_542_p1),
    .dout(mul_ln68_19_fu_542_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U45(
    .din0(mul_ln68_20_fu_546_p0),
    .din1(mul_ln68_20_fu_546_p1),
    .dout(mul_ln68_20_fu_546_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U46(
    .din0(mul_ln68_21_fu_550_p0),
    .din1(mul_ln68_21_fu_550_p1),
    .dout(mul_ln68_21_fu_550_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U47(
    .din0(mul_ln68_22_fu_554_p0),
    .din1(mul_ln68_22_fu_554_p1),
    .dout(mul_ln68_22_fu_554_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U48(
    .din0(mul_ln68_23_fu_558_p0),
    .din1(mul_ln68_23_fu_558_p1),
    .dout(mul_ln68_23_fu_558_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U49(
    .din0(mul_ln68_24_fu_562_p0),
    .din1(mul_ln68_24_fu_562_p1),
    .dout(mul_ln68_24_fu_562_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U50(
    .din0(mul_ln68_25_fu_566_p0),
    .din1(mul_ln68_25_fu_566_p1),
    .dout(mul_ln68_25_fu_566_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U51(
    .din0(mul_ln68_26_fu_570_p0),
    .din1(mul_ln68_26_fu_570_p1),
    .dout(mul_ln68_26_fu_570_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U52(
    .din0(mul_ln68_27_fu_574_p0),
    .din1(mul_ln68_27_fu_574_p1),
    .dout(mul_ln68_27_fu_574_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U53(
    .din0(mul_ln68_28_fu_578_p0),
    .din1(mul_ln68_28_fu_578_p1),
    .dout(mul_ln68_28_fu_578_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U54(
    .din0(mul_ln68_29_fu_582_p0),
    .din1(mul_ln68_29_fu_582_p1),
    .dout(mul_ln68_29_fu_582_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U55(
    .din0(mul_ln68_30_fu_586_p0),
    .din1(mul_ln68_30_fu_586_p1),
    .dout(mul_ln68_30_fu_586_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U56(
    .din0(mul_ln68_31_fu_590_p0),
    .din1(mul_ln68_31_fu_590_p1),
    .dout(mul_ln68_31_fu_590_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U57(
    .din0(mul_ln68_32_fu_594_p0),
    .din1(mul_ln68_32_fu_594_p1),
    .dout(mul_ln68_32_fu_594_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U58(
    .din0(mul_ln68_33_fu_598_p0),
    .din1(mul_ln68_33_fu_598_p1),
    .dout(mul_ln68_33_fu_598_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U59(
    .din0(mul_ln68_34_fu_602_p0),
    .din1(mul_ln68_34_fu_602_p1),
    .dout(mul_ln68_34_fu_602_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U60(
    .din0(mul_ln68_35_fu_606_p0),
    .din1(mul_ln68_35_fu_606_p1),
    .dout(mul_ln68_35_fu_606_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U61(
    .din0(mul_ln68_36_fu_610_p0),
    .din1(mul_ln68_36_fu_610_p1),
    .dout(mul_ln68_36_fu_610_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U62(
    .din0(mul_ln68_37_fu_614_p0),
    .din1(mul_ln68_37_fu_614_p1),
    .dout(mul_ln68_37_fu_614_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U63(
    .din0(mul_ln68_38_fu_618_p0),
    .din1(mul_ln68_38_fu_618_p1),
    .dout(mul_ln68_38_fu_618_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U64(
    .din0(mul_ln68_39_fu_622_p0),
    .din1(mul_ln68_39_fu_622_p1),
    .dout(mul_ln68_39_fu_622_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U65(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_fu_745_p12)
);

fiat_25519_carry_mul_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U66(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(tmp_2_fu_818_p3),
    .dout(tmp_2_fu_818_p4)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U67(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(tmp_3_fu_851_p4),
    .dout(tmp_3_fu_851_p5)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U68(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_4_fu_899_p5),
    .dout(tmp_4_fu_899_p6)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U69(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_5_fu_934_p6),
    .dout(tmp_5_fu_934_p7)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U70(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_6_fu_978_p7),
    .dout(tmp_6_fu_978_p8)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U71(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_3_reload),
    .din5(arg1_r_4_reload),
    .din6(arg1_r_5_reload),
    .din7(arg1_r_6_reload),
    .din8(arg1_r_7_reload),
    .din9(arg1_r_8_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_7_fu_997_p12)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U72(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_8_fu_1106_p8),
    .dout(tmp_8_fu_1106_p9)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U73(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_2_reload),
    .din5(arg1_r_3_reload),
    .din6(arg1_r_4_reload),
    .din7(arg1_r_5_reload),
    .din8(arg1_r_6_reload),
    .din9(arg1_r_7_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_9_fu_1126_p12)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U74(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_s_fu_1184_p9),
    .dout(tmp_s_fu_1184_p10)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U75(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_1_reload),
    .din5(arg1_r_2_reload),
    .din6(arg1_r_3_reload),
    .din7(arg1_r_4_reload),
    .din8(arg1_r_5_reload),
    .din9(arg1_r_6_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_1_fu_1206_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U76(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_10_fu_1264_p10),
    .dout(tmp_10_fu_1264_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U77(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_reload),
    .din5(arg1_r_1_reload),
    .din6(arg1_r_2_reload),
    .din7(arg1_r_3_reload),
    .din8(arg1_r_4_reload),
    .din9(arg1_r_5_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_11_fu_1287_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U78(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_12_fu_1710_p11),
    .dout(tmp_12_fu_1710_p12)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120271_fu_172 <= arr_8;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120271_fu_172 <= add_ln68_5_fu_1335_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_126272_fu_176 <= arr_7;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_126272_fu_176 <= add_ln68_7_fu_1367_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_242273_fu_180 <= arr_6;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_242273_fu_180 <= add_ln68_10_fu_1411_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_358274_fu_184 <= arr_5;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_358274_fu_184 <= add_ln68_14_fu_1467_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_474275_fu_188 <= arr_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_474275_fu_188 <= add_ln68_19_fu_1835_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_5276_fu_192 <= arr_3;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_5276_fu_192 <= add_ln68_24_fu_1577_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_6277_fu_196 <= arr_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_6277_fu_196 <= add_ln68_29_fu_1845_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_7278_fu_200 <= arr_1;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_7278_fu_200 <= add_ln68_34_fu_1655_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_8279_fu_204 <= arr;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_8279_fu_204 <= add_ln68_39_fu_1855_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_9280_fu_208 <= 64'd0;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_9280_fu_208 <= add_ln68_44_fu_1759_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_2_fu_168 <= 4'd9;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_2_fu_168 <= i1_4_fu_1771_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_212 <= 5'd9;
        end else if (((tmp_13_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_fu_212 <= add_ln55_fu_1765_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_13_fu_693_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln68_17_reg_2180 <= add_ln68_17_fu_1523_p2;
        add_ln68_25_reg_2185 <= add_ln68_25_fu_1601_p2;
        add_ln68_27_reg_2190 <= add_ln68_27_fu_1613_p2;
        add_ln68_35_reg_2195 <= add_ln68_35_fu_1686_p2;
        add_ln68_37_reg_2200 <= add_ln68_37_fu_1698_p2;
        and_ln68_12_reg_2175 <= and_ln68_12_fu_1485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln68_8_cast_reg_2166[31 : 0] <= zext_ln68_8_cast_fu_626_p1[31 : 0];
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120271_out_ap_vld = 1'b1;
    end else begin
        add120271_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_126272_out_ap_vld = 1'b1;
    end else begin
        add120_126272_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_242273_out_ap_vld = 1'b1;
    end else begin
        add120_242273_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_358274_out_ap_vld = 1'b1;
    end else begin
        add120_358274_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_474275_out_ap_vld = 1'b1;
    end else begin
        add120_474275_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_5276_out_ap_vld = 1'b1;
    end else begin
        add120_5276_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_6277_out_ap_vld = 1'b1;
    end else begin
        add120_6277_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_7278_out_ap_vld = 1'b1;
    end else begin
        add120_7278_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_8279_out_ap_vld = 1'b1;
    end else begin
        add120_8279_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_9280_out_ap_vld = 1'b1;
    end else begin
        add120_9280_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add120271_out = add120271_fu_172;

assign add120_126272_out = add120_126272_fu_176;

assign add120_242273_out = add120_242273_fu_180;

assign add120_358274_out = add120_358274_fu_184;

assign add120_474275_out = add120_474275_fu_188;

assign add120_5276_out = add120_5276_fu_192;

assign add120_6277_out = add120_6277_fu_196;

assign add120_7278_out = add120_7278_fu_200;

assign add120_8279_out = add120_8279_fu_204;

assign add120_9280_out = add120_9280_fu_208;

assign add_ln55_fu_1765_p2 = ($signed(i1_fu_212) + $signed(5'd27));

assign add_ln68_10_fu_1411_p2 = (add120_242273_fu_180 + add_ln68_9_fu_1405_p2);

assign add_ln68_11_fu_1449_p2 = (and_ln68_9_fu_1443_p2 + and_ln68_7_fu_1431_p2);

assign add_ln68_12_fu_1455_p2 = (and_ln68_8_fu_1437_p2 + and_ln68_6_fu_1425_p2);

assign add_ln68_13_fu_1461_p2 = (add_ln68_12_fu_1455_p2 + add_ln68_11_fu_1449_p2);

assign add_ln68_14_fu_1467_p2 = (add120_358274_fu_184 + add_ln68_13_fu_1461_p2);

assign add_ln68_15_fu_1517_p2 = (add_ln68_16_fu_1511_p2 + and_ln68_13_fu_1499_p2);

assign add_ln68_16_fu_1511_p2 = (and_ln68_14_fu_1505_p2 + and_ln68_10_fu_1473_p2);

assign add_ln68_17_fu_1523_p2 = (add_ln68_15_fu_1517_p2 + and_ln68_11_fu_1479_p2);

assign add_ln68_18_fu_1831_p2 = (add_ln68_17_reg_2180 + and_ln68_12_reg_2175);

assign add_ln68_19_fu_1835_p2 = (add_ln68_18_fu_1831_p2 + add120_474275_fu_188);

assign add_ln68_1_fu_806_p2 = (i1_fu_212 + 5'd4);

assign add_ln68_20_fu_1553_p2 = (and_ln68_18_fu_1547_p2 + and_ln68_15_fu_1529_p2);

assign add_ln68_21_fu_1559_p2 = (and_ln68_16_fu_1535_p2 + mul_ln68_17_fu_534_p2);

assign add_ln68_22_fu_1565_p2 = (add_ln68_21_fu_1559_p2 + and_ln68_17_fu_1541_p2);

assign add_ln68_23_fu_1571_p2 = (add_ln68_22_fu_1565_p2 + add_ln68_20_fu_1553_p2);

assign add_ln68_24_fu_1577_p2 = (add120_5276_fu_192 + add_ln68_23_fu_1571_p2);

assign add_ln68_25_fu_1601_p2 = (and_ln68_21_fu_1595_p2 + and_ln68_19_fu_1583_p2);

assign add_ln68_26_fu_1607_p2 = (mul_ln68_22_fu_554_p2 + mul_ln68_21_fu_550_p2);

assign add_ln68_27_fu_1613_p2 = (add_ln68_26_fu_1607_p2 + and_ln68_20_fu_1589_p2);

assign add_ln68_28_fu_1841_p2 = (add_ln68_27_reg_2190 + add_ln68_25_reg_2185);

assign add_ln68_29_fu_1845_p2 = (add120_6277_fu_196 + add_ln68_28_fu_1841_p2);

assign add_ln68_2_fu_839_p2 = (i1_fu_212 + 5'd3);

assign add_ln68_30_fu_1631_p2 = (and_ln68_22_fu_1619_p2 + and_ln68_23_fu_1625_p2);

assign add_ln68_31_fu_1637_p2 = (mul_ln68_27_fu_574_p2 + mul_ln68_25_fu_566_p2);

assign add_ln68_32_fu_1643_p2 = (add_ln68_31_fu_1637_p2 + mul_ln68_26_fu_570_p2);

assign add_ln68_33_fu_1649_p2 = (add_ln68_32_fu_1643_p2 + add_ln68_30_fu_1631_p2);

assign add_ln68_34_fu_1655_p2 = (add120_7278_fu_200 + add_ln68_33_fu_1649_p2);

assign add_ln68_35_fu_1686_p2 = (mul_ln68_31_fu_590_p2 + and_ln68_24_fu_1680_p2);

assign add_ln68_36_fu_1692_p2 = (mul_ln68_32_fu_594_p2 + mul_ln68_34_fu_602_p2);

assign add_ln68_37_fu_1698_p2 = (add_ln68_36_fu_1692_p2 + mul_ln68_30_fu_586_p2);

assign add_ln68_38_fu_1851_p2 = (add_ln68_37_reg_2200 + add_ln68_35_reg_2195);

assign add_ln68_39_fu_1855_p2 = (add120_8279_fu_204 + add_ln68_38_fu_1851_p2);

assign add_ln68_3_fu_887_p2 = (i1_fu_212 + 5'd2);

assign add_ln68_40_fu_1735_p2 = (mul_ln68_35_fu_606_p2 + mul_ln68_36_fu_610_p2);

assign add_ln68_41_fu_1741_p2 = (mul_ln68_37_fu_614_p2 + mul_ln68_38_fu_618_p2);

assign add_ln68_42_fu_1747_p2 = (add_ln68_41_fu_1741_p2 + mul_ln68_39_fu_622_p2);

assign add_ln68_43_fu_1753_p2 = (add_ln68_42_fu_1747_p2 + add_ln68_40_fu_1735_p2);

assign add_ln68_44_fu_1759_p2 = (add120_9280_fu_208 + add_ln68_43_fu_1753_p2);

assign add_ln68_4_fu_922_p2 = (i1_fu_212 + 5'd1);

assign add_ln68_5_fu_1335_p2 = (and_ln68_fu_1329_p2 + add120271_fu_172);

assign add_ln68_6_fu_1361_p2 = (and_ln68_2_fu_1355_p2 + and_ln68_1_fu_1341_p2);

assign add_ln68_7_fu_1367_p2 = (add120_126272_fu_176 + add_ln68_6_fu_1361_p2);

assign add_ln68_8_fu_1399_p2 = (and_ln68_5_fu_1393_p2 + and_ln68_3_fu_1381_p2);

assign add_ln68_9_fu_1405_p2 = (add_ln68_8_fu_1399_p2 + and_ln68_4_fu_1387_p2);

assign add_ln68_fu_775_p2 = (i1_fu_212 + 5'd5);

assign and_ln68_10_fu_1473_p2 = (select_ln68_9_fu_1321_p3 & mul_ln68_10_fu_506_p2);

assign and_ln68_11_fu_1479_p2 = (select_ln68_10_fu_1347_p3 & mul_ln68_11_fu_510_p2);

assign and_ln68_12_fu_1485_p2 = (select_ln68_12_fu_1417_p3 & mul_ln68_12_fu_514_p2);

assign and_ln68_13_fu_1499_p2 = (select_ln68_13_fu_1491_p3 & mul_ln68_13_fu_518_p2);

assign and_ln68_14_fu_1505_p2 = (select_ln68_11_fu_1373_p3 & mul_ln68_14_fu_522_p2);

assign and_ln68_15_fu_1529_p2 = (select_ln68_11_fu_1373_p3 & mul_ln68_15_fu_526_p2);

assign and_ln68_16_fu_1535_p2 = (select_ln68_13_fu_1491_p3 & mul_ln68_16_fu_530_p2);

assign and_ln68_17_fu_1541_p2 = (select_ln68_12_fu_1417_p3 & mul_ln68_18_fu_538_p2);

assign and_ln68_18_fu_1547_p2 = (select_ln68_10_fu_1347_p3 & mul_ln68_19_fu_542_p2);

assign and_ln68_19_fu_1583_p2 = (select_ln68_12_fu_1417_p3 & mul_ln68_20_fu_546_p2);

assign and_ln68_1_fu_1341_p2 = (select_ln68_9_fu_1321_p3 & mul_ln68_1_fu_470_p2);

assign and_ln68_20_fu_1589_p2 = (select_ln68_13_fu_1491_p3 & mul_ln68_23_fu_558_p2);

assign and_ln68_21_fu_1595_p2 = (select_ln68_11_fu_1373_p3 & mul_ln68_24_fu_562_p2);

assign and_ln68_22_fu_1619_p2 = (select_ln68_12_fu_1417_p3 & mul_ln68_28_fu_578_p2);

assign and_ln68_23_fu_1625_p2 = (select_ln68_13_fu_1491_p3 & mul_ln68_29_fu_582_p2);

assign and_ln68_24_fu_1680_p2 = (select_ln68_13_fu_1491_p3 & mul_ln68_33_fu_598_p2);

assign and_ln68_2_fu_1355_p2 = (select_ln68_10_fu_1347_p3 & mul_ln68_2_fu_474_p2);

assign and_ln68_3_fu_1381_p2 = (select_ln68_11_fu_1373_p3 & mul_ln68_3_fu_478_p2);

assign and_ln68_4_fu_1387_p2 = (select_ln68_9_fu_1321_p3 & mul_ln68_4_fu_482_p2);

assign and_ln68_5_fu_1393_p2 = (select_ln68_10_fu_1347_p3 & mul_ln68_5_fu_486_p2);

assign and_ln68_6_fu_1425_p2 = (select_ln68_12_fu_1417_p3 & mul_ln68_6_fu_490_p2);

assign and_ln68_7_fu_1431_p2 = (select_ln68_10_fu_1347_p3 & mul_ln68_7_fu_494_p2);

assign and_ln68_8_fu_1437_p2 = (select_ln68_11_fu_1373_p3 & mul_ln68_8_fu_498_p2);

assign and_ln68_9_fu_1443_p2 = (select_ln68_9_fu_1321_p3 & mul_ln68_9_fu_502_p2);

assign and_ln68_fu_1329_p2 = (select_ln68_9_fu_1321_p3 & mul_ln68_fu_466_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i1_4_fu_1771_p2 = ($signed(i1_2_fu_168) + $signed(4'd11));

assign icmp_ln68_1_fu_833_p2 = (($signed(add_ln68_1_fu_806_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_881_p2 = (($signed(add_ln68_2_fu_839_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_916_p2 = (($signed(add_ln68_3_fu_887_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_966_p2 = (($signed(add_ln68_4_fu_922_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_800_p2 = (($signed(add_ln68_fu_775_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign mul_ln68_10_fu_506_p0 = zext_ln68_1_fu_793_p1;

assign mul_ln68_10_fu_506_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_11_fu_510_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_11_fu_510_p1 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_12_fu_514_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_12_fu_514_p1 = zext_ln68_11_fu_1068_p1;

assign mul_ln68_13_fu_518_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_13_fu_518_p1 = zext_ln68_5_fu_959_p1;

assign mul_ln68_14_fu_522_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_14_fu_522_p1 = zext_ln68_3_fu_874_p1;

assign mul_ln68_15_fu_526_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_15_fu_526_p1 = zext_ln68_10_fu_1048_p1;

assign mul_ln68_16_fu_530_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_16_fu_530_p1 = zext_ln68_12_fu_1074_p1;

assign mul_ln68_17_fu_534_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_17_fu_534_p1 = zext_ln68_6_fu_990_p1;

assign mul_ln68_18_fu_538_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_18_fu_538_p1 = zext_ln68_4_fu_909_p1;

assign mul_ln68_19_fu_542_p0 = zext_ln68_2_fu_826_p1;

assign mul_ln68_19_fu_542_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_1_fu_470_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_1_fu_470_p1 = zext_ln68_8_cast_reg_2166;

assign mul_ln68_20_fu_546_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_20_fu_546_p1 = zext_ln68_11_fu_1068_p1;

assign mul_ln68_21_fu_550_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_21_fu_550_p1 = zext_ln68_16_fu_1172_p1;

assign mul_ln68_22_fu_554_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_22_fu_554_p1 = zext_ln68_13_fu_1094_p1;

assign mul_ln68_23_fu_558_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_23_fu_558_p1 = zext_ln68_5_fu_959_p1;

assign mul_ln68_24_fu_562_p0 = zext_ln68_3_fu_874_p1;

assign mul_ln68_24_fu_562_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_25_fu_566_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_25_fu_566_p1 = zext_ln68_17_fu_1200_p1;

assign mul_ln68_26_fu_570_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_26_fu_570_p1 = zext_ln68_6_fu_990_p1;

assign mul_ln68_27_fu_574_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_27_fu_574_p1 = zext_ln68_14_fu_1120_p1;

assign mul_ln68_28_fu_578_p0 = zext_ln68_4_fu_909_p1;

assign mul_ln68_28_fu_578_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_29_fu_582_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_29_fu_582_p1 = zext_ln68_12_fu_1074_p1;

assign mul_ln68_2_fu_474_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_2_fu_474_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_30_fu_586_p0 = zext_ln68_16_fu_1172_p1;

assign mul_ln68_30_fu_586_p1 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_31_fu_590_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_31_fu_590_p1 = zext_ln68_13_fu_1094_p1;

assign mul_ln68_32_fu_594_p0 = mul_ln68_32_fu_594_p00;

assign mul_ln68_32_fu_594_p00 = select_ln68_7_fu_1245_p3;

assign mul_ln68_32_fu_594_p1 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_33_fu_598_p0 = zext_ln68_5_fu_959_p1;

assign mul_ln68_33_fu_598_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_34_fu_602_p0 = mul_ln68_34_fu_602_p00;

assign mul_ln68_34_fu_602_p00 = select_ln68_8_fu_1667_p3;

assign mul_ln68_34_fu_602_p1 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_35_fu_606_p0 = zext_ln68_6_fu_990_p1;

assign mul_ln68_35_fu_606_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_36_fu_610_p0 = zext_ln68_14_fu_1120_p1;

assign mul_ln68_36_fu_610_p1 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_37_fu_614_p0 = mul_ln68_37_fu_614_p00;

assign mul_ln68_37_fu_614_p00 = tmp_10_fu_1264_p11;

assign mul_ln68_37_fu_614_p1 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_38_fu_618_p0 = mul_ln68_38_fu_618_p00;

assign mul_ln68_38_fu_618_p00 = tmp_12_fu_1710_p12;

assign mul_ln68_38_fu_618_p1 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_39_fu_622_p0 = zext_ln68_17_fu_1200_p1;

assign mul_ln68_39_fu_622_p1 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_3_fu_478_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_3_fu_478_p1 = zext_ln68_3_fu_874_p1;

assign mul_ln68_4_fu_482_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_4_fu_482_p1 = zext_ln68_1_fu_793_p1;

assign mul_ln68_5_fu_486_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_5_fu_486_p1 = zext_ln68_9_fu_1042_p1;

assign mul_ln68_6_fu_490_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_6_fu_490_p1 = zext_ln68_4_fu_909_p1;

assign mul_ln68_7_fu_494_p0 = zext_ln68_15_fu_1146_p1;

assign mul_ln68_7_fu_494_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_8_fu_498_p0 = zext_ln68_18_fu_1226_p1;

assign mul_ln68_8_fu_498_p1 = zext_ln68_10_fu_1048_p1;

assign mul_ln68_9_fu_502_p0 = zext_ln68_7_fu_1017_p1;

assign mul_ln68_9_fu_502_p1 = zext_ln68_8_cast_reg_2166;

assign mul_ln68_fu_466_p0 = zext_ln68_21_fu_1307_p1;

assign mul_ln68_fu_466_p1 = zext_ln68_1_fu_793_p1;

assign select_ln68_10_fu_1347_p3 = ((icmp_ln68_1_fu_833_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_11_fu_1373_p3 = ((icmp_ln68_2_fu_881_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_12_fu_1417_p3 = ((icmp_ln68_3_fu_916_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_13_fu_1491_p3 = ((icmp_ln68_4_fu_966_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_1_fu_866_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_1_fu_860_p2 : tmp_3_fu_851_p5);

assign select_ln68_2_fu_951_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_2_fu_945_p2 : tmp_5_fu_934_p7);

assign select_ln68_3_fu_1034_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_2_fu_818_p4 : shl_ln68_3_fu_1028_p2);

assign select_ln68_4_fu_1060_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_4_fu_899_p6 : shl_ln68_4_fu_1054_p2);

assign select_ln68_5_fu_1086_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_6_fu_978_p8 : shl_ln68_5_fu_1080_p2);

assign select_ln68_6_fu_1164_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_6_fu_1158_p2 : tmp_8_fu_1106_p9);

assign select_ln68_7_fu_1245_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_s_fu_1184_p10 : shl_ln68_7_fu_1239_p2);

assign select_ln68_8_fu_1667_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_8_fu_1661_p2 : tmp_10_fu_1264_p11);

assign select_ln68_9_fu_1321_p3 = ((icmp_ln68_fu_800_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_fu_786_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_fu_781_p2 : arg2_r_reload);

assign shl_ln68_1_fu_860_p2 = tmp_3_fu_851_p5 << 32'd1;

assign shl_ln68_2_fu_945_p2 = tmp_5_fu_934_p7 << 32'd1;

assign shl_ln68_3_fu_1028_p2 = tmp_2_fu_818_p4 << 32'd1;

assign shl_ln68_4_fu_1054_p2 = tmp_4_fu_899_p6 << 32'd1;

assign shl_ln68_5_fu_1080_p2 = tmp_6_fu_978_p8 << 32'd1;

assign shl_ln68_6_fu_1158_p2 = tmp_8_fu_1106_p9 << 32'd1;

assign shl_ln68_7_fu_1239_p2 = tmp_s_fu_1184_p10 << 32'd1;

assign shl_ln68_8_fu_1661_p2 = tmp_10_fu_1264_p11 << 32'd1;

assign shl_ln68_fu_781_p2 = arg2_r_reload << 32'd1;

assign tmp_10_fu_1264_p10 = ($signed(4'd12) - $signed(trunc_ln55_1_fu_729_p1));

assign tmp_12_fu_1710_p11 = ($signed(4'd13) - $signed(trunc_ln55_1_fu_729_p1));

assign tmp_13_fu_693_p3 = i1_fu_212[32'd4];

assign tmp_2_fu_818_p3 = (trunc_ln55_4_fu_741_p1 ^ 1'd1);

assign tmp_3_fu_851_p4 = ($signed(2'd2) - $signed(trunc_ln55_3_fu_737_p1));

assign tmp_4_fu_899_p5 = (trunc_ln55_3_fu_737_p1 ^ 2'd3);

assign tmp_5_fu_934_p6 = (3'd0 - trunc_ln55_2_fu_733_p1);

assign tmp_6_fu_978_p7 = (3'd1 - trunc_ln55_2_fu_733_p1);

assign tmp_8_fu_1106_p8 = (3'd2 - trunc_ln55_2_fu_733_p1);

assign tmp_s_fu_1184_p9 = (3'd3 - trunc_ln55_2_fu_733_p1);

assign trunc_ln55_1_fu_729_p1 = i1_fu_212[3:0];

assign trunc_ln55_2_fu_733_p1 = i1_fu_212[2:0];

assign trunc_ln55_3_fu_737_p1 = i1_fu_212[1:0];

assign trunc_ln55_4_fu_741_p1 = i1_fu_212[0:0];

assign trunc_ln55_fu_725_p1 = i1_2_fu_168[0:0];

assign zext_ln68_10_fu_1048_p1 = tmp_3_fu_851_p5;

assign zext_ln68_11_fu_1068_p1 = select_ln68_4_fu_1060_p3;

assign zext_ln68_12_fu_1074_p1 = tmp_5_fu_934_p7;

assign zext_ln68_13_fu_1094_p1 = select_ln68_5_fu_1086_p3;

assign zext_ln68_14_fu_1120_p1 = tmp_8_fu_1106_p9;

assign zext_ln68_15_fu_1146_p1 = tmp_9_fu_1126_p12;

assign zext_ln68_16_fu_1172_p1 = select_ln68_6_fu_1164_p3;

assign zext_ln68_17_fu_1200_p1 = tmp_s_fu_1184_p10;

assign zext_ln68_18_fu_1226_p1 = tmp_1_fu_1206_p12;

assign zext_ln68_1_fu_793_p1 = select_ln68_fu_786_p3;

assign zext_ln68_21_fu_1307_p1 = tmp_11_fu_1287_p12;

assign zext_ln68_2_fu_826_p1 = tmp_2_fu_818_p4;

assign zext_ln68_3_fu_874_p1 = select_ln68_1_fu_866_p3;

assign zext_ln68_4_fu_909_p1 = tmp_4_fu_899_p6;

assign zext_ln68_5_fu_959_p1 = select_ln68_2_fu_951_p3;

assign zext_ln68_6_fu_990_p1 = tmp_6_fu_978_p8;

assign zext_ln68_7_fu_1017_p1 = tmp_7_fu_997_p12;

assign zext_ln68_8_cast_fu_626_p1 = zext_ln68_8;

assign zext_ln68_9_fu_1042_p1 = select_ln68_3_fu_1034_p3;

assign zext_ln68_fu_765_p1 = tmp_fu_745_p12;

always @ (posedge ap_clk) begin
    zext_ln68_8_cast_reg_2166[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5
