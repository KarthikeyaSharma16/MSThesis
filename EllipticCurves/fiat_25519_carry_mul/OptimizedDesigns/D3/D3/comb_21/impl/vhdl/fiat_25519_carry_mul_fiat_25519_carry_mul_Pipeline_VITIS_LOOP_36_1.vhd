-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add55_988_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_988_out_ap_vld : OUT STD_LOGIC;
    add55_887_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_887_out_ap_vld : OUT STD_LOGIC;
    add55_786_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_786_out_ap_vld : OUT STD_LOGIC;
    add55_685_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_685_out_ap_vld : OUT STD_LOGIC;
    add55_584_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_584_out_ap_vld : OUT STD_LOGIC;
    add55_483_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_483_out_ap_vld : OUT STD_LOGIC;
    add55_382_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_382_out_ap_vld : OUT STD_LOGIC;
    add55_281_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_281_out_ap_vld : OUT STD_LOGIC;
    add55_180_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add55_180_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_36_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln36_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i1_2_reg_1578 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_fu_568_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1591 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_598_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1596 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_624_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1601 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_fu_425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_reg_1606 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_fu_463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_2_reg_1611 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_3_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_3_reg_1616 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_reg_1621 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_7_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_7_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_11_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_11_reg_1631 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_12_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_12_reg_1636 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_16_fu_439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_16_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_21_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_21_reg_1651 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_22_fu_490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_22_reg_1656 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_26_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_26_reg_1661 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_27_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_27_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_31_fu_495_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_31_reg_1671 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_32_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_32_reg_1676 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_36_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_36_reg_1681 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_37_fu_459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_37_reg_1686 : STD_LOGIC_VECTOR (31 downto 0);
    signal arr_9_fu_118 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_fu_1007_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal arr_10_fu_122 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_18_fu_1059_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_11_fu_126 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_19_fu_1123_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_12_fu_130 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_20_fu_1187_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_13_fu_134 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_21_fu_1251_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_14_fu_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_22_fu_1315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_15_fu_142 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_23_fu_1354_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_16_fu_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_24_fu_1386_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_17_fu_150 : STD_LOGIC_VECTOR (63 downto 0);
    signal arr_25_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_154 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_fu_906_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i1_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln49_1_fu_329_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_3_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_1_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_fu_944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_4_fu_333_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_4_fu_1018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_4_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_fu_337_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_5_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_1_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_8_fu_341_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_8_fu_341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_2_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_9_fu_345_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_6_fu_1070_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_9_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_10_fu_349_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_10_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_13_fu_353_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_13_fu_353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_14_fu_357_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_8_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_14_fu_357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_15_fu_361_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_15_fu_361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_18_fu_365_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_18_fu_365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_19_fu_369_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_10_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_19_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_20_fu_373_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_20_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_23_fu_377_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_23_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_24_fu_381_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_12_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_24_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_25_fu_385_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_25_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_28_fu_389_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_28_fu_389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_29_fu_393_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_29_fu_393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_30_fu_397_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln49_14_fu_1321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_30_fu_397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_33_fu_401_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_33_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_34_fu_405_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_34_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_35_fu_409_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_35_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_38_fu_413_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_38_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_39_fu_417_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_39_fu_417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_40_fu_421_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_40_fu_421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_fu_425_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln49_fu_650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_681_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_6_fu_430_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln49_7_fu_434_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln48_1_cast_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_749_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_16_fu_439_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_715_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_17_fu_443_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_817_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_26_fu_447_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_783_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_27_fu_451_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_883_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_36_fu_455_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_851_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln49_37_fu_459_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln49_2_fu_463_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_3_fu_469_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_11_fu_475_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_12_fu_480_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_21_fu_485_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_22_fu_490_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_31_fu_495_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln49_32_fu_500_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_594_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_681_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_715_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_749_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_783_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_817_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_851_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln36_fu_564_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_883_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_24_fu_977_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln49_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_1_fu_329_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_1_fu_993_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_fu_1001_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_25_fu_1013_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln49_1_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_4_fu_333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_2_fu_1033_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_5_fu_337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_1_fu_1041_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_2_fu_1047_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_fu_1053_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_26_fu_1065_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln49_8_fu_341_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln49_2_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_9_fu_345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_3_fu_1091_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_10_fu_349_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_5_fu_1105_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_4_fu_1099_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_2_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_3_fu_1085_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_3_fu_1117_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_27_fu_1129_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln49_13_fu_353_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln49_3_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_14_fu_357_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_4_fu_1155_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_15_fu_361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_8_fu_1169_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_7_fu_1163_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_5_fu_1175_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_6_fu_1149_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_6_fu_1181_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_28_fu_1193_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln49_18_fu_365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln49_4_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_19_fu_369_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_5_fu_1219_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_20_fu_373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_11_fu_1233_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_10_fu_1227_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_8_fu_1239_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_9_fu_1213_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_9_fu_1245_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_29_fu_1257_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln49_23_fu_377_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln49_5_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln49_24_fu_381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln49_6_fu_1283_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_25_fu_385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_14_fu_1297_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_13_fu_1291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_11_fu_1303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_12_fu_1277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_12_fu_1309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_28_fu_389_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_29_fu_393_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_16_fu_1336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_30_fu_397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_14_fu_1342_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_15_fu_1330_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_15_fu_1348_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_33_fu_401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_35_fu_409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_34_fu_405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_17_fu_1374_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln49_17_fu_1368_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_18_fu_1380_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_40_fu_421_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_39_fu_417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_20_fu_1400_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_38_fu_413_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_21_fu_1406_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln49_10_fu_349_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_15_fu_361_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_20_fu_373_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_25_fu_385_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_29_fu_393_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_34_fu_405_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_35_fu_409_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_39_fu_417_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_40_fu_421_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln49_5_fu_337_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_6ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_1_fu_329_p0,
        din1 => mul_ln49_1_fu_329_p1,
        dout => mul_ln49_1_fu_329_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_4_fu_333_p0,
        din1 => mul_ln49_4_fu_333_p1,
        dout => mul_ln49_4_fu_333_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_5_fu_337_p0,
        din1 => mul_ln49_5_fu_337_p1,
        dout => mul_ln49_5_fu_337_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_8_fu_341_p0,
        din1 => mul_ln49_8_fu_341_p1,
        dout => mul_ln49_8_fu_341_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_9_fu_345_p0,
        din1 => mul_ln49_9_fu_345_p1,
        dout => mul_ln49_9_fu_345_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_10_fu_349_p0,
        din1 => mul_ln49_10_fu_349_p1,
        dout => mul_ln49_10_fu_349_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_13_fu_353_p0,
        din1 => mul_ln49_13_fu_353_p1,
        dout => mul_ln49_13_fu_353_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_14_fu_357_p0,
        din1 => mul_ln49_14_fu_357_p1,
        dout => mul_ln49_14_fu_357_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_15_fu_361_p0,
        din1 => mul_ln49_15_fu_361_p1,
        dout => mul_ln49_15_fu_361_p2);

    mul_32ns_32ns_64_1_1_U34 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_18_fu_365_p0,
        din1 => mul_ln49_18_fu_365_p1,
        dout => mul_ln49_18_fu_365_p2);

    mul_32ns_32ns_64_1_1_U35 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_19_fu_369_p0,
        din1 => mul_ln49_19_fu_369_p1,
        dout => mul_ln49_19_fu_369_p2);

    mul_32ns_32ns_64_1_1_U36 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_20_fu_373_p0,
        din1 => mul_ln49_20_fu_373_p1,
        dout => mul_ln49_20_fu_373_p2);

    mul_32ns_32ns_64_1_1_U37 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_23_fu_377_p0,
        din1 => mul_ln49_23_fu_377_p1,
        dout => mul_ln49_23_fu_377_p2);

    mul_32ns_32ns_64_1_1_U38 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_24_fu_381_p0,
        din1 => mul_ln49_24_fu_381_p1,
        dout => mul_ln49_24_fu_381_p2);

    mul_32ns_32ns_64_1_1_U39 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_25_fu_385_p0,
        din1 => mul_ln49_25_fu_385_p1,
        dout => mul_ln49_25_fu_385_p2);

    mul_32ns_32ns_64_1_1_U40 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_28_fu_389_p0,
        din1 => mul_ln49_28_fu_389_p1,
        dout => mul_ln49_28_fu_389_p2);

    mul_32ns_32ns_64_1_1_U41 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_29_fu_393_p0,
        din1 => mul_ln49_29_fu_393_p1,
        dout => mul_ln49_29_fu_393_p2);

    mul_32ns_32ns_64_1_1_U42 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_30_fu_397_p0,
        din1 => mul_ln49_30_fu_397_p1,
        dout => mul_ln49_30_fu_397_p2);

    mul_32ns_32ns_64_1_1_U43 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_33_fu_401_p0,
        din1 => mul_ln49_33_fu_401_p1,
        dout => mul_ln49_33_fu_401_p2);

    mul_32ns_32ns_64_1_1_U44 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_34_fu_405_p0,
        din1 => mul_ln49_34_fu_405_p1,
        dout => mul_ln49_34_fu_405_p2);

    mul_32ns_32ns_64_1_1_U45 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_35_fu_409_p0,
        din1 => mul_ln49_35_fu_409_p1,
        dout => mul_ln49_35_fu_409_p2);

    mul_32ns_32ns_64_1_1_U46 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_38_fu_413_p0,
        din1 => mul_ln49_38_fu_413_p1,
        dout => mul_ln49_38_fu_413_p2);

    mul_32ns_32ns_64_1_1_U47 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_39_fu_417_p0,
        din1 => mul_ln49_39_fu_417_p1,
        dout => mul_ln49_39_fu_417_p2);

    mul_32ns_32ns_64_1_1_U48 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln49_40_fu_421_p0,
        din1 => mul_ln49_40_fu_421_p1,
        dout => mul_ln49_40_fu_421_p2);

    mul_32s_7s_32_1_1_U49 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_9_reload,
        din1 => mul_ln49_fu_425_p1,
        dout => mul_ln49_fu_425_p2);

    mul_32s_7s_32_1_1_U50 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_5_fu_681_p12,
        din1 => mul_ln49_6_fu_430_p1,
        dout => mul_ln49_6_fu_430_p2);

    mul_32s_7s_32_1_1_U51 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_8_reload,
        din1 => mul_ln49_7_fu_434_p1,
        dout => mul_ln49_7_fu_434_p2);

    mul_32s_7s_32_1_1_U52 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_7_fu_749_p12,
        din1 => mul_ln49_16_fu_439_p1,
        dout => mul_ln49_16_fu_439_p2);

    mul_32s_7s_32_1_1_U53 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_715_p12,
        din1 => mul_ln49_17_fu_443_p1,
        dout => mul_ln49_17_fu_443_p2);

    mul_32s_7s_32_1_1_U54 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_9_fu_817_p12,
        din1 => mul_ln49_26_fu_447_p1,
        dout => mul_ln49_26_fu_447_p2);

    mul_32s_7s_32_1_1_U55 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_783_p12,
        din1 => mul_ln49_27_fu_451_p1,
        dout => mul_ln49_27_fu_451_p2);

    mul_32s_7s_32_1_1_U56 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_3_fu_883_p10,
        din1 => mul_ln49_36_fu_455_p1,
        dout => mul_ln49_36_fu_455_p2);

    mul_32s_7s_32_1_1_U57 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_s_fu_851_p11,
        din1 => mul_ln49_37_fu_459_p1,
        dout => mul_ln49_37_fu_459_p2);

    mul_32s_6ns_32_1_1_U58 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_8_reload,
        din1 => mul_ln49_2_fu_463_p1,
        dout => mul_ln49_2_fu_463_p2);

    mul_32s_6ns_32_1_1_U59 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_9_reload,
        din1 => mul_ln49_3_fu_469_p1,
        dout => mul_ln49_3_fu_469_p2);

    mul_32s_6ns_32_1_1_U60 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_715_p12,
        din1 => mul_ln49_11_fu_475_p1,
        dout => mul_ln49_11_fu_475_p2);

    mul_32s_6ns_32_1_1_U61 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_5_fu_681_p12,
        din1 => mul_ln49_12_fu_480_p1,
        dout => mul_ln49_12_fu_480_p2);

    mul_32s_6ns_32_1_1_U62 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_783_p12,
        din1 => mul_ln49_21_fu_485_p1,
        dout => mul_ln49_21_fu_485_p2);

    mul_32s_6ns_32_1_1_U63 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_7_fu_749_p12,
        din1 => mul_ln49_22_fu_490_p1,
        dout => mul_ln49_22_fu_490_p2);

    mul_32s_6ns_32_1_1_U64 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_s_fu_851_p11,
        din1 => mul_ln49_31_fu_495_p1,
        dout => mul_ln49_31_fu_495_p2);

    mul_32s_6ns_32_1_1_U65 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_9_fu_817_p12,
        din1 => mul_ln49_32_fu_500_p1,
        dout => mul_ln49_32_fu_500_p2);

    mux_10_4_32_1_1_U66 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg1_r_3_reload,
        din4 => arg1_r_4_reload,
        din5 => arg1_r_5_reload,
        din6 => arg1_r_6_reload,
        din7 => arg1_r_7_reload,
        din8 => arg1_r_8_reload,
        din9 => arg1_r_9_reload,
        din10 => ap_sig_allocacmp_i1_2,
        dout => tmp_fu_568_p12);

    mux_10_4_32_1_1_U67 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg1_r_2_reload,
        din4 => arg1_r_3_reload,
        din5 => arg1_r_4_reload,
        din6 => arg1_r_5_reload,
        din7 => arg1_r_6_reload,
        din8 => arg1_r_7_reload,
        din9 => arg1_r_8_reload,
        din10 => ap_sig_allocacmp_i1_2,
        dout => tmp_1_fu_598_p12);

    mux_10_4_32_1_1_U68 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg1_r_1_reload,
        din4 => arg1_r_2_reload,
        din5 => arg1_r_3_reload,
        din6 => arg1_r_4_reload,
        din7 => arg1_r_5_reload,
        din8 => arg1_r_6_reload,
        din9 => arg1_r_7_reload,
        din10 => ap_sig_allocacmp_i1_2,
        dout => tmp_2_fu_624_p12);

    mux_10_4_32_1_1_U69 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_5_fu_681_p11,
        dout => tmp_5_fu_681_p12);

    mux_10_4_32_1_1_U70 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_6_fu_715_p11,
        dout => tmp_6_fu_715_p12);

    mux_10_4_32_1_1_U71 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_7_fu_749_p11,
        dout => tmp_7_fu_749_p12);

    mux_10_4_32_1_1_U72 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_8_fu_783_p11,
        dout => tmp_8_fu_783_p12);

    mux_10_4_32_1_1_U73 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_9_fu_817_p11,
        dout => tmp_9_fu_817_p12);

    mux_9_4_32_1_1_U74 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => tmp_s_fu_851_p10,
        dout => tmp_s_fu_851_p11);

    mux_8_3_32_1_1_U75 : component fiat_25519_carry_mul_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => tmp_3_fu_883_p9,
        dout => tmp_3_fu_883_p10);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    arr_10_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_10_fu_122 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_10_fu_122 <= arr_18_fu_1059_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_11_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_11_fu_126 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_11_fu_126 <= arr_19_fu_1123_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_12_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_12_fu_130 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_12_fu_130 <= arr_20_fu_1187_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_13_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_13_fu_134 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_13_fu_134 <= arr_21_fu_1251_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_14_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_14_fu_138 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_14_fu_138 <= arr_22_fu_1315_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_15_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_15_fu_142 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_15_fu_142 <= arr_23_fu_1354_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_16_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_16_fu_146 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_16_fu_146 <= arr_24_fu_1386_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_17_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_17_fu_150 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_17_fu_150 <= arr_25_fu_1412_p2;
                end if;
            end if; 
        end if;
    end process;

    arr_9_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    arr_9_fu_118 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    arr_9_fu_118 <= arr_fu_1007_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln36_fu_558_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_154 <= add_ln36_fu_906_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_154 <= ap_const_lv4_9;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i1_2_reg_1578 <= ap_sig_allocacmp_i1_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln36_fu_558_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln49_11_reg_1631 <= mul_ln49_11_fu_475_p2;
                mul_ln49_12_reg_1636 <= mul_ln49_12_fu_480_p2;
                mul_ln49_16_reg_1641 <= mul_ln49_16_fu_439_p2;
                mul_ln49_17_reg_1646 <= mul_ln49_17_fu_443_p2;
                mul_ln49_21_reg_1651 <= mul_ln49_21_fu_485_p2;
                mul_ln49_22_reg_1656 <= mul_ln49_22_fu_490_p2;
                mul_ln49_26_reg_1661 <= mul_ln49_26_fu_447_p2;
                mul_ln49_27_reg_1666 <= mul_ln49_27_fu_451_p2;
                mul_ln49_2_reg_1611 <= mul_ln49_2_fu_463_p2;
                mul_ln49_31_reg_1671 <= mul_ln49_31_fu_495_p2;
                mul_ln49_32_reg_1676 <= mul_ln49_32_fu_500_p2;
                mul_ln49_36_reg_1681 <= mul_ln49_36_fu_455_p2;
                mul_ln49_37_reg_1686 <= mul_ln49_37_fu_459_p2;
                mul_ln49_3_reg_1616 <= mul_ln49_3_fu_469_p2;
                mul_ln49_6_reg_1621 <= mul_ln49_6_fu_430_p2;
                mul_ln49_7_reg_1626 <= mul_ln49_7_fu_434_p2;
                mul_ln49_reg_1606 <= mul_ln49_fu_425_p2;
                tmp_1_reg_1596 <= tmp_1_fu_598_p12;
                tmp_2_reg_1601 <= tmp_2_fu_624_p12;
                tmp_reg_1591 <= tmp_fu_568_p12;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add55_180_out <= arr_9_fu_118;

    add55_180_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_180_out_ap_vld <= ap_const_logic_1;
        else 
            add55_180_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_281_out <= arr_10_fu_122;

    add55_281_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_281_out_ap_vld <= ap_const_logic_1;
        else 
            add55_281_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_382_out <= arr_11_fu_126;

    add55_382_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_382_out_ap_vld <= ap_const_logic_1;
        else 
            add55_382_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_483_out <= arr_12_fu_130;

    add55_483_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_483_out_ap_vld <= ap_const_logic_1;
        else 
            add55_483_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_584_out <= arr_13_fu_134;

    add55_584_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_584_out_ap_vld <= ap_const_logic_1;
        else 
            add55_584_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_685_out <= arr_14_fu_138;

    add55_685_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_685_out_ap_vld <= ap_const_logic_1;
        else 
            add55_685_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_786_out <= arr_15_fu_142;

    add55_786_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_786_out_ap_vld <= ap_const_logic_1;
        else 
            add55_786_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_887_out <= arr_16_fu_146;

    add55_887_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_887_out_ap_vld <= ap_const_logic_1;
        else 
            add55_887_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add55_988_out <= arr_17_fu_150;

    add55_988_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln36_fu_558_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add55_988_out_ap_vld <= ap_const_logic_1;
        else 
            add55_988_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln36_fu_906_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_2) + unsigned(ap_const_lv4_D));
    add_ln49_11_fu_1303_p2 <= std_logic_vector(unsigned(and_ln49_14_fu_1297_p2) + unsigned(and_ln49_13_fu_1291_p2));
    add_ln49_12_fu_1309_p2 <= std_logic_vector(unsigned(add_ln49_11_fu_1303_p2) + unsigned(and_ln49_12_fu_1277_p2));
    add_ln49_14_fu_1342_p2 <= std_logic_vector(unsigned(and_ln49_16_fu_1336_p2) + unsigned(mul_ln49_30_fu_397_p2));
    add_ln49_15_fu_1348_p2 <= std_logic_vector(unsigned(add_ln49_14_fu_1342_p2) + unsigned(and_ln49_15_fu_1330_p2));
    add_ln49_17_fu_1374_p2 <= std_logic_vector(unsigned(mul_ln49_35_fu_409_p2) + unsigned(mul_ln49_34_fu_405_p2));
    add_ln49_18_fu_1380_p2 <= std_logic_vector(unsigned(add_ln49_17_fu_1374_p2) + unsigned(and_ln49_17_fu_1368_p2));
    add_ln49_20_fu_1400_p2 <= std_logic_vector(unsigned(mul_ln49_40_fu_421_p2) + unsigned(mul_ln49_39_fu_417_p2));
    add_ln49_21_fu_1406_p2 <= std_logic_vector(unsigned(add_ln49_20_fu_1400_p2) + unsigned(mul_ln49_38_fu_413_p2));
    add_ln49_2_fu_1111_p2 <= std_logic_vector(unsigned(and_ln49_5_fu_1105_p2) + unsigned(and_ln49_4_fu_1099_p2));
    add_ln49_3_fu_1117_p2 <= std_logic_vector(unsigned(add_ln49_2_fu_1111_p2) + unsigned(and_ln49_3_fu_1085_p2));
    add_ln49_5_fu_1175_p2 <= std_logic_vector(unsigned(and_ln49_8_fu_1169_p2) + unsigned(and_ln49_7_fu_1163_p2));
    add_ln49_6_fu_1181_p2 <= std_logic_vector(unsigned(add_ln49_5_fu_1175_p2) + unsigned(and_ln49_6_fu_1149_p2));
    add_ln49_8_fu_1239_p2 <= std_logic_vector(unsigned(and_ln49_11_fu_1233_p2) + unsigned(and_ln49_10_fu_1227_p2));
    add_ln49_9_fu_1245_p2 <= std_logic_vector(unsigned(add_ln49_8_fu_1239_p2) + unsigned(and_ln49_9_fu_1213_p2));
    add_ln49_fu_1053_p2 <= std_logic_vector(unsigned(and_ln49_1_fu_1041_p2) + unsigned(and_ln49_2_fu_1047_p2));
    and_ln49_10_fu_1227_p2 <= (select_ln49_5_fu_1219_p3 and mul_ln49_19_fu_369_p2);
    and_ln49_11_fu_1233_p2 <= (select_ln49_4_fu_1155_p3 and mul_ln49_20_fu_373_p2);
    and_ln49_12_fu_1277_p2 <= (select_ln49_4_fu_1155_p3 and mul_ln49_23_fu_377_p2);
    and_ln49_13_fu_1291_p2 <= (select_ln49_6_fu_1283_p3 and mul_ln49_24_fu_381_p2);
    and_ln49_14_fu_1297_p2 <= (select_ln49_5_fu_1219_p3 and mul_ln49_25_fu_385_p2);
    and_ln49_15_fu_1330_p2 <= (select_ln49_5_fu_1219_p3 and mul_ln49_28_fu_389_p2);
    and_ln49_16_fu_1336_p2 <= (select_ln49_6_fu_1283_p3 and mul_ln49_29_fu_393_p2);
    and_ln49_17_fu_1368_p2 <= (select_ln49_6_fu_1283_p3 and mul_ln49_33_fu_401_p2);
    and_ln49_1_fu_1041_p2 <= (select_ln49_2_fu_1033_p3 and mul_ln49_4_fu_333_p2);
    and_ln49_2_fu_1047_p2 <= (select_ln49_1_fu_993_p3 and mul_ln49_5_fu_337_p2);
    and_ln49_3_fu_1085_p2 <= (select_ln49_1_fu_993_p3 and mul_ln49_8_fu_341_p2);
    and_ln49_4_fu_1099_p2 <= (select_ln49_3_fu_1091_p3 and mul_ln49_9_fu_345_p2);
    and_ln49_5_fu_1105_p2 <= (select_ln49_2_fu_1033_p3 and mul_ln49_10_fu_349_p2);
    and_ln49_6_fu_1149_p2 <= (select_ln49_2_fu_1033_p3 and mul_ln49_13_fu_353_p2);
    and_ln49_7_fu_1163_p2 <= (select_ln49_4_fu_1155_p3 and mul_ln49_14_fu_357_p2);
    and_ln49_8_fu_1169_p2 <= (select_ln49_3_fu_1091_p3 and mul_ln49_15_fu_361_p2);
    and_ln49_9_fu_1213_p2 <= (select_ln49_3_fu_1091_p3 and mul_ln49_18_fu_365_p2);
    and_ln49_fu_1001_p2 <= (select_ln49_1_fu_993_p3 and mul_ln49_1_fu_329_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln36_fu_558_p2)
    begin
        if (((icmp_ln36_fu_558_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_154)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_2 <= ap_const_lv4_9;
        else 
            ap_sig_allocacmp_i1_2 <= i1_fu_154;
        end if; 
    end process;

    arr_18_fu_1059_p2 <= std_logic_vector(unsigned(arr_10_fu_122) + unsigned(add_ln49_fu_1053_p2));
    arr_19_fu_1123_p2 <= std_logic_vector(unsigned(arr_11_fu_126) + unsigned(add_ln49_3_fu_1117_p2));
    arr_20_fu_1187_p2 <= std_logic_vector(unsigned(arr_12_fu_130) + unsigned(add_ln49_6_fu_1181_p2));
    arr_21_fu_1251_p2 <= std_logic_vector(unsigned(arr_13_fu_134) + unsigned(add_ln49_9_fu_1245_p2));
    arr_22_fu_1315_p2 <= std_logic_vector(unsigned(arr_14_fu_138) + unsigned(add_ln49_12_fu_1309_p2));
    arr_23_fu_1354_p2 <= std_logic_vector(unsigned(arr_15_fu_142) + unsigned(add_ln49_15_fu_1348_p2));
    arr_24_fu_1386_p2 <= std_logic_vector(unsigned(arr_16_fu_146) + unsigned(add_ln49_18_fu_1380_p2));
    arr_25_fu_1412_p2 <= std_logic_vector(unsigned(arr_17_fu_150) + unsigned(add_ln49_21_fu_1406_p2));
    arr_fu_1007_p2 <= std_logic_vector(unsigned(and_ln49_fu_1001_p2) + unsigned(arr_9_fu_118));
    empty_24_fu_977_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_1));
    empty_25_fu_1013_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_2));
    empty_26_fu_1065_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_3));
    empty_27_fu_1129_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_4));
    empty_28_fu_1193_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_5));
    empty_29_fu_1257_p2 <= std_logic_vector(unsigned(i1_2_reg_1578) + unsigned(ap_const_lv4_6));
    empty_fu_594_p1 <= ap_sig_allocacmp_i1_2(1 - 1 downto 0);
    icmp_ln36_fu_558_p2 <= "1" when (ap_sig_allocacmp_i1_2 = ap_const_lv4_0) else "0";
    icmp_ln49_1_fu_1023_p2 <= "1" when (unsigned(empty_25_fu_1013_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_2_fu_1075_p2 <= "1" when (unsigned(empty_26_fu_1065_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_3_fu_1139_p2 <= "1" when (unsigned(empty_27_fu_1129_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_4_fu_1203_p2 <= "1" when (unsigned(empty_28_fu_1193_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_5_fu_1267_p2 <= "1" when (unsigned(empty_29_fu_1257_p2) > unsigned(ap_const_lv4_9)) else "0";
    icmp_ln49_fu_987_p2 <= "1" when (unsigned(empty_24_fu_977_p2) > unsigned(ap_const_lv4_9)) else "0";
    mul_ln49_10_fu_349_p0 <= mul_ln49_10_fu_349_p00(32 - 1 downto 0);
    mul_ln49_10_fu_349_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_7_reg_1626),64));
    mul_ln49_10_fu_349_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_11_fu_475_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_12_fu_480_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_13_fu_353_p0 <= zext_ln49_4_fu_1018_p1(32 - 1 downto 0);
    mul_ln49_13_fu_353_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_14_fu_357_p0 <= zext_ln49_8_fu_1134_p1(32 - 1 downto 0);
    mul_ln49_14_fu_357_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_15_fu_361_p0 <= mul_ln49_15_fu_361_p00(32 - 1 downto 0);
    mul_ln49_15_fu_361_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_12_reg_1636),64));
    mul_ln49_15_fu_361_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_16_fu_439_p1 <= select_ln49_fu_650_p3(7 - 1 downto 0);
    mul_ln49_17_fu_443_p1 <= select_ln48_1_cast_fu_663_p3(7 - 1 downto 0);
    mul_ln49_18_fu_365_p0 <= zext_ln49_6_fu_1070_p1(32 - 1 downto 0);
    mul_ln49_18_fu_365_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_19_fu_369_p0 <= zext_ln49_10_fu_1198_p1(32 - 1 downto 0);
    mul_ln49_19_fu_369_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_1_fu_329_p0 <= zext_ln49_3_fu_982_p1(32 - 1 downto 0);
    mul_ln49_1_fu_329_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_20_fu_373_p0 <= mul_ln49_20_fu_373_p00(32 - 1 downto 0);
    mul_ln49_20_fu_373_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_17_reg_1646),64));
    mul_ln49_20_fu_373_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_21_fu_485_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_22_fu_490_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_23_fu_377_p0 <= zext_ln49_8_fu_1134_p1(32 - 1 downto 0);
    mul_ln49_23_fu_377_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_24_fu_381_p0 <= zext_ln49_12_fu_1262_p1(32 - 1 downto 0);
    mul_ln49_24_fu_381_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_25_fu_385_p0 <= mul_ln49_25_fu_385_p00(32 - 1 downto 0);
    mul_ln49_25_fu_385_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_22_reg_1656),64));
    mul_ln49_25_fu_385_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_26_fu_447_p1 <= select_ln49_fu_650_p3(7 - 1 downto 0);
    mul_ln49_27_fu_451_p1 <= select_ln48_1_cast_fu_663_p3(7 - 1 downto 0);
    mul_ln49_28_fu_389_p0 <= zext_ln49_10_fu_1198_p1(32 - 1 downto 0);
    mul_ln49_28_fu_389_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_29_fu_393_p0 <= mul_ln49_29_fu_393_p00(32 - 1 downto 0);
    mul_ln49_29_fu_393_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_27_reg_1666),64));
    mul_ln49_29_fu_393_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_2_fu_463_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_30_fu_397_p0 <= zext_ln49_14_fu_1321_p1(32 - 1 downto 0);
    mul_ln49_30_fu_397_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_31_fu_495_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_32_fu_500_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_33_fu_401_p0 <= zext_ln49_12_fu_1262_p1(32 - 1 downto 0);
    mul_ln49_33_fu_401_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_34_fu_405_p0 <= mul_ln49_34_fu_405_p00(32 - 1 downto 0);
    mul_ln49_34_fu_405_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_31_reg_1671),64));
    mul_ln49_34_fu_405_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_35_fu_409_p0 <= mul_ln49_35_fu_409_p00(32 - 1 downto 0);
    mul_ln49_35_fu_409_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_32_reg_1676),64));
    mul_ln49_35_fu_409_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_36_fu_455_p1 <= select_ln49_fu_650_p3(7 - 1 downto 0);
    mul_ln49_37_fu_459_p1 <= select_ln48_1_cast_fu_663_p3(7 - 1 downto 0);
    mul_ln49_38_fu_413_p0 <= zext_ln49_14_fu_1321_p1(32 - 1 downto 0);
    mul_ln49_38_fu_413_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_39_fu_417_p0 <= mul_ln49_39_fu_417_p00(32 - 1 downto 0);
    mul_ln49_39_fu_417_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_36_reg_1681),64));
    mul_ln49_39_fu_417_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_3_fu_469_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln49_40_fu_421_p0 <= mul_ln49_40_fu_421_p00(32 - 1 downto 0);
    mul_ln49_40_fu_421_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_37_reg_1686),64));
    mul_ln49_40_fu_421_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_4_fu_333_p0 <= zext_ln49_4_fu_1018_p1(32 - 1 downto 0);
    mul_ln49_4_fu_333_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_5_fu_337_p0 <= mul_ln49_5_fu_337_p00(32 - 1 downto 0);
    mul_ln49_5_fu_337_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_3_reg_1616),64));
    mul_ln49_5_fu_337_p1 <= zext_ln49_1_fu_956_p1(32 - 1 downto 0);
    mul_ln49_6_fu_430_p1 <= select_ln49_fu_650_p3(7 - 1 downto 0);
    mul_ln49_7_fu_434_p1 <= select_ln48_1_cast_fu_663_p3(7 - 1 downto 0);
    mul_ln49_8_fu_341_p0 <= zext_ln49_3_fu_982_p1(32 - 1 downto 0);
    mul_ln49_8_fu_341_p1 <= zext_ln49_2_fu_967_p1(32 - 1 downto 0);
    mul_ln49_9_fu_345_p0 <= zext_ln49_6_fu_1070_p1(32 - 1 downto 0);
    mul_ln49_9_fu_345_p1 <= zext_ln49_fu_944_p1(32 - 1 downto 0);
    mul_ln49_fu_425_p1 <= select_ln49_fu_650_p3(7 - 1 downto 0);
    select_ln48_1_cast_fu_663_p3 <= 
        ap_const_lv32_13 when (empty_fu_594_p1(0) = '1') else 
        ap_const_lv32_26;
    select_ln49_1_fu_993_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_fu_987_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_2_fu_1033_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_1_fu_1023_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_3_fu_1091_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_2_fu_1075_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_4_fu_1155_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_3_fu_1139_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_5_fu_1219_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_4_fu_1203_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_6_fu_1283_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln49_5_fu_1267_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln49_fu_650_p3 <= 
        ap_const_lv32_26 when (empty_fu_594_p1(0) = '1') else 
        ap_const_lv32_13;
    tmp_3_fu_883_p9 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln36_fu_564_p1));
    tmp_5_fu_681_p11 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(ap_sig_allocacmp_i1_2));
    tmp_6_fu_715_p11 <= (ap_sig_allocacmp_i1_2 xor ap_const_lv4_F);
    tmp_7_fu_749_p11 <= std_logic_vector(signed(ap_const_lv4_E) - signed(ap_sig_allocacmp_i1_2));
    tmp_8_fu_783_p11 <= std_logic_vector(signed(ap_const_lv4_D) - signed(ap_sig_allocacmp_i1_2));
    tmp_9_fu_817_p11 <= std_logic_vector(signed(ap_const_lv4_C) - signed(ap_sig_allocacmp_i1_2));
    tmp_s_fu_851_p10 <= std_logic_vector(signed(ap_const_lv4_B) - signed(ap_sig_allocacmp_i1_2));
    trunc_ln36_fu_564_p1 <= ap_sig_allocacmp_i1_2(3 - 1 downto 0);
    zext_ln49_10_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_16_reg_1641),64));
    zext_ln49_12_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_21_reg_1651),64));
    zext_ln49_14_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_26_reg_1661),64));
    zext_ln49_1_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1596),64));
    zext_ln49_2_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1601),64));
    zext_ln49_3_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_reg_1606),64));
    zext_ln49_4_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_2_reg_1611),64));
    zext_ln49_6_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_6_reg_1621),64));
    zext_ln49_8_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln49_11_reg_1631),64));
    zext_ln49_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1591),64));
end behav;
