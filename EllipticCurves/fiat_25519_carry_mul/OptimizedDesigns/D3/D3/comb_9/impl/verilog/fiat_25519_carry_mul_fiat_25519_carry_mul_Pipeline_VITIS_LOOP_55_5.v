// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add55_1219257_reload,
        add55_1258_reload,
        add55_1_1158259_reload,
        add55_2260_reload,
        add55_2_1143261_reload,
        add55_3262_reload,
        add55_3_1128263_reload,
        add55_4264_reload,
        add55_4_1113265_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg1_r_3_reload,
        arg1_r_2_reload,
        arg1_r_1_reload,
        arg1_r_reload,
        arg2_r_reload,
        arg2_r_1_reload,
        zext_ln68_6,
        arg2_r_2_reload,
        arg2_r_3_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg2_r_6_reload,
        arg2_r_7_reload,
        arg2_r_8_reload,
        arg2_r_9_reload,
        add120_9255_out,
        add120_9255_out_ap_vld,
        add120_8254_out,
        add120_8254_out_ap_vld,
        add120_7253_out,
        add120_7253_out_ap_vld,
        add120_6252_out,
        add120_6252_out_ap_vld,
        add120_5251_out,
        add120_5251_out_ap_vld,
        add120_4250_out,
        add120_4250_out_ap_vld,
        add120_3249_out,
        add120_3249_out_ap_vld,
        add120_2248_out,
        add120_2248_out_ap_vld,
        add120_1247_out,
        add120_1247_out_ap_vld,
        add120246_out,
        add120246_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] add55_1219257_reload;
input  [63:0] add55_1258_reload;
input  [63:0] add55_1_1158259_reload;
input  [63:0] add55_2260_reload;
input  [63:0] add55_2_1143261_reload;
input  [63:0] add55_3262_reload;
input  [63:0] add55_3_1128263_reload;
input  [63:0] add55_4264_reload;
input  [63:0] add55_4_1113265_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] zext_ln68_6;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_9_reload;
output  [63:0] add120_9255_out;
output   add120_9255_out_ap_vld;
output  [63:0] add120_8254_out;
output   add120_8254_out_ap_vld;
output  [63:0] add120_7253_out;
output   add120_7253_out_ap_vld;
output  [63:0] add120_6252_out;
output   add120_6252_out_ap_vld;
output  [63:0] add120_5251_out;
output   add120_5251_out_ap_vld;
output  [63:0] add120_4250_out;
output   add120_4250_out_ap_vld;
output  [63:0] add120_3249_out;
output   add120_3249_out_ap_vld;
output  [63:0] add120_2248_out;
output   add120_2248_out_ap_vld;
output  [63:0] add120_1247_out;
output   add120_1247_out_ap_vld;
output  [63:0] add120246_out;
output   add120246_out_ap_vld;

reg ap_idle;
reg add120_9255_out_ap_vld;
reg add120_8254_out_ap_vld;
reg add120_7253_out_ap_vld;
reg add120_6252_out_ap_vld;
reg add120_5251_out_ap_vld;
reg add120_4250_out_ap_vld;
reg add120_3249_out_ap_vld;
reg add120_2248_out_ap_vld;
reg add120_1247_out_ap_vld;
reg add120246_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_693_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln68_6_cast_fu_626_p1;
reg   [63:0] zext_ln68_6_cast_reg_2166;
wire   [63:0] and_ln68_13_fu_1326_p2;
reg   [63:0] and_ln68_13_reg_2175;
wire   [63:0] add_ln68_12_fu_1350_p2;
reg   [63:0] add_ln68_12_reg_2180;
wire   [63:0] add_ln68_20_fu_1519_p2;
reg   [63:0] add_ln68_20_reg_2185;
wire   [63:0] add_ln68_22_fu_1531_p2;
reg   [63:0] add_ln68_22_reg_2190;
wire   [63:0] add_ln68_30_fu_1681_p2;
reg   [63:0] add_ln68_30_reg_2195;
wire   [63:0] add_ln68_32_fu_1693_p2;
reg   [63:0] add_ln68_32_reg_2200;
reg   [3:0] i1_fu_168;
wire   [3:0] i1_4_fu_1771_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] add120246_fu_172;
wire   [63:0] add_ln68_fu_950_p2;
reg   [63:0] add120_1247_fu_176;
wire   [63:0] add_ln68_2_fu_1015_p2;
reg   [63:0] add120_2248_fu_180;
wire   [63:0] add_ln68_5_fu_1127_p2;
reg   [63:0] add120_3249_fu_184;
wire   [63:0] add_ln68_9_fu_1224_p2;
reg   [63:0] add120_4250_fu_188;
wire   [63:0] add_ln68_14_fu_1835_p2;
reg   [63:0] add120_5251_fu_192;
wire   [63:0] add_ln68_19_fu_1435_p2;
reg   [63:0] add120_6252_fu_196;
wire   [63:0] add_ln68_24_fu_1845_p2;
reg   [63:0] add120_7253_fu_200;
wire   [63:0] add_ln68_29_fu_1607_p2;
reg   [63:0] add120_8254_fu_204;
wire   [63:0] add_ln68_34_fu_1855_p2;
reg   [63:0] add120_9255_fu_208;
wire   [63:0] add_ln68_39_fu_1759_p2;
reg   [4:0] i1_1_fu_212;
wire   [4:0] add_ln55_fu_1765_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln68_fu_466_p0;
wire   [63:0] zext_ln68_5_fu_923_p1;
wire   [31:0] mul_ln68_fu_466_p1;
wire   [63:0] zext_ln68_4_fu_897_p1;
wire   [31:0] mul_ln68_1_fu_470_p0;
wire   [31:0] mul_ln68_1_fu_470_p1;
wire   [63:0] zext_ln68_3_fu_858_p1;
wire   [31:0] mul_ln68_2_fu_474_p0;
wire   [63:0] zext_ln68_7_fu_976_p1;
wire   [31:0] mul_ln68_2_fu_474_p1;
wire   [31:0] mul_ln68_3_fu_478_p0;
wire   [63:0] zext_ln68_9_fu_1076_p1;
wire   [31:0] mul_ln68_3_fu_478_p1;
wire   [31:0] mul_ln68_4_fu_482_p0;
wire   [31:0] mul_ln68_4_fu_482_p1;
wire   [63:0] zext_ln68_2_fu_826_p1;
wire   [31:0] mul_ln68_5_fu_486_p0;
wire   [63:0] zext_ln68_8_fu_1035_p1;
wire   [31:0] mul_ln68_5_fu_486_p1;
wire   [31:0] mul_ln68_6_fu_490_p0;
wire   [63:0] zext_ln68_11_fu_1161_p1;
wire   [31:0] mul_ln68_6_fu_490_p1;
wire   [31:0] mul_ln68_7_fu_494_p0;
wire   [31:0] mul_ln68_7_fu_494_p1;
wire   [31:0] mul_ln68_8_fu_498_p0;
wire   [63:0] zext_ln68_10_fu_1133_p1;
wire   [31:0] mul_ln68_8_fu_498_p1;
wire   [31:0] mul_ln68_9_fu_502_p0;
wire   [31:0] mul_ln68_9_fu_502_p1;
wire   [63:0] zext_ln68_1_fu_795_p1;
wire   [31:0] mul_ln68_10_fu_506_p0;
wire   [31:0] mul_ln68_10_fu_506_p1;
wire   [63:0] zext_ln68_fu_765_p1;
wire   [31:0] mul_ln68_11_fu_510_p0;
wire   [31:0] mul_ln68_11_fu_510_p1;
wire   [31:0] mul_ln68_12_fu_514_p0;
wire   [63:0] zext_ln68_12_fu_1244_p1;
wire   [31:0] mul_ln68_12_fu_514_p1;
wire   [31:0] mul_ln68_13_fu_518_p0;
wire   [63:0] zext_ln68_13_fu_1287_p1;
wire   [31:0] mul_ln68_13_fu_518_p1;
wire   [31:0] mul_ln68_14_fu_522_p0;
wire   [31:0] mul_ln68_14_fu_522_p1;
wire   [31:0] mul_ln68_15_fu_526_p0;
wire   [31:0] mul_ln68_15_fu_526_p1;
wire   [31:0] mul_ln68_16_fu_530_p0;
wire   [63:0] zext_ln68_14_fu_1356_p1;
wire   [31:0] mul_ln68_16_fu_530_p1;
wire   [31:0] mul_ln68_17_fu_534_p0;
wire   [63:0] zext_ln68_15_fu_1380_p1;
wire   [31:0] mul_ln68_17_fu_534_p1;
wire   [31:0] mul_ln68_18_fu_538_p0;
wire   [31:0] mul_ln68_18_fu_538_p1;
wire   [31:0] mul_ln68_19_fu_542_p0;
wire   [31:0] mul_ln68_19_fu_542_p1;
wire   [31:0] mul_ln68_20_fu_546_p0;
wire   [31:0] mul_ln68_20_fu_546_p1;
wire   [31:0] mul_ln68_21_fu_550_p0;
wire   [63:0] zext_ln68_17_fu_1495_p1;
wire   [31:0] mul_ln68_21_fu_550_p1;
wire   [31:0] mul_ln68_22_fu_554_p0;
wire   [63:0] zext_ln68_16_fu_1455_p1;
wire   [31:0] mul_ln68_22_fu_554_p1;
wire   [31:0] mul_ln68_23_fu_558_p0;
wire   [31:0] mul_ln68_23_fu_558_p1;
wire   [31:0] mul_ln68_24_fu_562_p0;
wire   [31:0] mul_ln68_24_fu_562_p1;
wire   [31:0] mul_ln68_25_fu_566_p0;
wire   [63:0] zext_ln68_19_fu_1565_p1;
wire   [31:0] mul_ln68_25_fu_566_p1;
wire   [31:0] mul_ln68_26_fu_570_p0;
wire   [31:0] mul_ln68_26_fu_570_p1;
wire   [31:0] mul_ln68_27_fu_574_p0;
wire   [63:0] zext_ln68_18_fu_1537_p1;
wire   [31:0] mul_ln68_27_fu_574_p1;
wire   [31:0] mul_ln68_28_fu_578_p0;
wire   [31:0] mul_ln68_28_fu_578_p1;
wire   [31:0] mul_ln68_29_fu_582_p0;
wire   [31:0] mul_ln68_29_fu_582_p1;
wire   [31:0] mul_ln68_30_fu_586_p0;
wire   [31:0] mul_ln68_30_fu_586_p1;
wire   [31:0] mul_ln68_31_fu_590_p0;
wire   [31:0] mul_ln68_31_fu_590_p1;
wire   [31:0] mul_ln68_32_fu_594_p0;
wire   [31:0] mul_ln68_32_fu_594_p1;
wire   [31:0] mul_ln68_33_fu_598_p0;
wire   [31:0] mul_ln68_33_fu_598_p1;
wire   [31:0] mul_ln68_34_fu_602_p0;
wire   [31:0] mul_ln68_34_fu_602_p1;
wire   [31:0] mul_ln68_35_fu_606_p0;
wire   [31:0] mul_ln68_35_fu_606_p1;
wire   [31:0] mul_ln68_36_fu_610_p0;
wire   [31:0] mul_ln68_36_fu_610_p1;
wire   [31:0] mul_ln68_37_fu_614_p0;
wire   [31:0] mul_ln68_37_fu_614_p1;
wire   [31:0] mul_ln68_38_fu_618_p0;
wire   [31:0] mul_ln68_38_fu_618_p1;
wire   [31:0] mul_ln68_39_fu_622_p0;
wire   [31:0] mul_ln68_39_fu_622_p1;
wire   [3:0] trunc_ln55_1_fu_729_p1;
wire   [31:0] tmp_4_fu_745_p12;
wire   [31:0] tmp_s_fu_775_p12;
wire   [31:0] tmp_1_fu_806_p12;
wire   [31:0] tmp_2_fu_838_p12;
wire   [31:0] tmp_3_fu_877_p12;
wire   [0:0] trunc_ln55_fu_725_p1;
wire   [31:0] shl_ln68_fu_911_p2;
wire   [31:0] select_ln68_fu_916_p3;
wire   [4:0] empty_fu_871_p2;
wire   [0:0] icmp_ln68_fu_930_p2;
wire   [63:0] mul_ln68_fu_466_p2;
wire   [63:0] select_ln68_9_fu_936_p3;
wire   [63:0] and_ln68_fu_944_p2;
wire   [0:0] trunc_ln55_4_fu_741_p1;
wire   [0:0] tmp_5_fu_968_p3;
wire   [31:0] tmp_5_fu_968_p4;
wire   [4:0] empty_23_fu_956_p2;
wire   [63:0] mul_ln68_1_fu_470_p2;
wire   [0:0] icmp_ln68_1_fu_983_p2;
wire   [63:0] mul_ln68_2_fu_474_p2;
wire   [63:0] select_ln68_10_fu_995_p3;
wire   [63:0] and_ln68_2_fu_1003_p2;
wire   [63:0] and_ln68_1_fu_989_p2;
wire   [63:0] add_ln68_1_fu_1009_p2;
wire   [31:0] shl_ln68_1_fu_1021_p2;
wire   [31:0] select_ln68_1_fu_1027_p3;
wire   [1:0] trunc_ln55_3_fu_737_p1;
wire   [1:0] tmp_6_fu_1053_p4;
wire   [31:0] tmp_6_fu_1053_p5;
wire   [31:0] shl_ln68_2_fu_1062_p2;
wire   [31:0] select_ln68_2_fu_1068_p3;
wire   [4:0] empty_24_fu_1041_p2;
wire   [0:0] icmp_ln68_2_fu_1083_p2;
wire   [63:0] mul_ln68_3_fu_478_p2;
wire   [63:0] select_ln68_11_fu_1089_p3;
wire   [63:0] mul_ln68_4_fu_482_p2;
wire   [63:0] mul_ln68_5_fu_486_p2;
wire   [63:0] and_ln68_5_fu_1109_p2;
wire   [63:0] and_ln68_3_fu_1097_p2;
wire   [63:0] add_ln68_3_fu_1115_p2;
wire   [63:0] and_ln68_4_fu_1103_p2;
wire   [63:0] add_ln68_4_fu_1121_p2;
wire   [1:0] tmp_7_fu_1151_p5;
wire   [31:0] tmp_7_fu_1151_p6;
wire   [4:0] empty_25_fu_1139_p2;
wire   [0:0] icmp_ln68_3_fu_1168_p2;
wire   [63:0] mul_ln68_6_fu_490_p2;
wire   [63:0] select_ln68_12_fu_1174_p3;
wire   [63:0] mul_ln68_7_fu_494_p2;
wire   [63:0] mul_ln68_8_fu_498_p2;
wire   [63:0] mul_ln68_9_fu_502_p2;
wire   [63:0] and_ln68_9_fu_1200_p2;
wire   [63:0] and_ln68_7_fu_1188_p2;
wire   [63:0] and_ln68_8_fu_1194_p2;
wire   [63:0] and_ln68_6_fu_1182_p2;
wire   [63:0] add_ln68_7_fu_1212_p2;
wire   [63:0] add_ln68_6_fu_1206_p2;
wire   [63:0] add_ln68_8_fu_1218_p2;
wire   [31:0] shl_ln68_3_fu_1230_p2;
wire   [31:0] select_ln68_3_fu_1236_p3;
wire   [2:0] trunc_ln55_2_fu_733_p1;
wire   [2:0] tmp_8_fu_1262_p6;
wire   [31:0] tmp_8_fu_1262_p7;
wire   [31:0] shl_ln68_4_fu_1273_p2;
wire   [31:0] select_ln68_4_fu_1279_p3;
wire   [4:0] empty_26_fu_1250_p2;
wire   [63:0] mul_ln68_10_fu_506_p2;
wire   [63:0] mul_ln68_11_fu_510_p2;
wire   [63:0] mul_ln68_12_fu_514_p2;
wire   [0:0] icmp_ln68_4_fu_1294_p2;
wire   [63:0] mul_ln68_13_fu_518_p2;
wire   [63:0] select_ln68_13_fu_1318_p3;
wire   [63:0] mul_ln68_14_fu_522_p2;
wire   [63:0] and_ln68_11_fu_1306_p2;
wire   [63:0] and_ln68_10_fu_1300_p2;
wire   [63:0] add_ln68_10_fu_1338_p2;
wire   [63:0] and_ln68_14_fu_1332_p2;
wire   [63:0] add_ln68_11_fu_1344_p2;
wire   [63:0] and_ln68_12_fu_1312_p2;
wire   [2:0] tmp_9_fu_1368_p7;
wire   [31:0] tmp_9_fu_1368_p8;
wire   [63:0] mul_ln68_15_fu_526_p2;
wire   [63:0] mul_ln68_16_fu_530_p2;
wire   [63:0] mul_ln68_18_fu_538_p2;
wire   [63:0] mul_ln68_19_fu_542_p2;
wire   [63:0] and_ln68_18_fu_1405_p2;
wire   [63:0] and_ln68_15_fu_1387_p2;
wire   [63:0] and_ln68_16_fu_1393_p2;
wire   [63:0] mul_ln68_17_fu_534_p2;
wire   [63:0] add_ln68_16_fu_1417_p2;
wire   [63:0] and_ln68_17_fu_1399_p2;
wire   [63:0] add_ln68_17_fu_1423_p2;
wire   [63:0] add_ln68_15_fu_1411_p2;
wire   [63:0] add_ln68_18_fu_1429_p2;
wire   [31:0] shl_ln68_5_fu_1441_p2;
wire   [31:0] select_ln68_5_fu_1447_p3;
wire   [2:0] tmp_10_fu_1467_p8;
wire   [31:0] tmp_10_fu_1467_p9;
wire   [31:0] shl_ln68_6_fu_1481_p2;
wire   [31:0] select_ln68_6_fu_1487_p3;
wire   [63:0] mul_ln68_20_fu_546_p2;
wire   [63:0] mul_ln68_23_fu_558_p2;
wire   [63:0] mul_ln68_24_fu_562_p2;
wire   [63:0] and_ln68_21_fu_1513_p2;
wire   [63:0] and_ln68_19_fu_1501_p2;
wire   [63:0] mul_ln68_22_fu_554_p2;
wire   [63:0] mul_ln68_21_fu_550_p2;
wire   [63:0] add_ln68_21_fu_1525_p2;
wire   [63:0] and_ln68_20_fu_1507_p2;
wire   [2:0] tmp_11_fu_1549_p9;
wire   [31:0] tmp_11_fu_1549_p10;
wire   [63:0] mul_ln68_28_fu_578_p2;
wire   [63:0] mul_ln68_29_fu_582_p2;
wire   [63:0] and_ln68_22_fu_1571_p2;
wire   [63:0] and_ln68_23_fu_1577_p2;
wire   [63:0] mul_ln68_27_fu_574_p2;
wire   [63:0] mul_ln68_25_fu_566_p2;
wire   [63:0] add_ln68_26_fu_1589_p2;
wire   [63:0] mul_ln68_26_fu_570_p2;
wire   [63:0] add_ln68_27_fu_1595_p2;
wire   [63:0] add_ln68_25_fu_1583_p2;
wire   [63:0] add_ln68_28_fu_1601_p2;
wire   [31:0] shl_ln68_7_fu_1613_p2;
wire   [31:0] select_ln68_7_fu_1619_p3;
wire   [3:0] tmp_12_fu_1638_p10;
wire   [31:0] tmp_12_fu_1638_p11;
wire   [31:0] shl_ln68_8_fu_1656_p2;
wire   [31:0] select_ln68_8_fu_1662_p3;
wire   [63:0] mul_ln68_33_fu_598_p2;
wire   [63:0] and_ln68_24_fu_1675_p2;
wire   [63:0] mul_ln68_31_fu_590_p2;
wire   [63:0] mul_ln68_32_fu_594_p2;
wire   [63:0] mul_ln68_34_fu_602_p2;
wire   [63:0] add_ln68_31_fu_1687_p2;
wire   [63:0] mul_ln68_30_fu_586_p2;
wire   [3:0] tmp_13_fu_1710_p11;
wire   [31:0] tmp_13_fu_1710_p12;
wire   [63:0] mul_ln68_35_fu_606_p2;
wire   [63:0] mul_ln68_36_fu_610_p2;
wire   [63:0] mul_ln68_37_fu_614_p2;
wire   [63:0] mul_ln68_38_fu_618_p2;
wire   [63:0] add_ln68_36_fu_1741_p2;
wire   [63:0] mul_ln68_39_fu_622_p2;
wire   [63:0] add_ln68_37_fu_1747_p2;
wire   [63:0] add_ln68_35_fu_1735_p2;
wire   [63:0] add_ln68_38_fu_1753_p2;
wire   [63:0] add_ln68_13_fu_1831_p2;
wire   [63:0] add_ln68_23_fu_1841_p2;
wire   [63:0] add_ln68_33_fu_1851_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln68_32_fu_594_p00;
wire   [63:0] mul_ln68_34_fu_602_p00;
wire   [63:0] mul_ln68_37_fu_614_p00;
wire   [63:0] mul_ln68_38_fu_618_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U110(
    .din0(mul_ln68_fu_466_p0),
    .din1(mul_ln68_fu_466_p1),
    .dout(mul_ln68_fu_466_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U111(
    .din0(mul_ln68_1_fu_470_p0),
    .din1(mul_ln68_1_fu_470_p1),
    .dout(mul_ln68_1_fu_470_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U112(
    .din0(mul_ln68_2_fu_474_p0),
    .din1(mul_ln68_2_fu_474_p1),
    .dout(mul_ln68_2_fu_474_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U113(
    .din0(mul_ln68_3_fu_478_p0),
    .din1(mul_ln68_3_fu_478_p1),
    .dout(mul_ln68_3_fu_478_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U114(
    .din0(mul_ln68_4_fu_482_p0),
    .din1(mul_ln68_4_fu_482_p1),
    .dout(mul_ln68_4_fu_482_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U115(
    .din0(mul_ln68_5_fu_486_p0),
    .din1(mul_ln68_5_fu_486_p1),
    .dout(mul_ln68_5_fu_486_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U116(
    .din0(mul_ln68_6_fu_490_p0),
    .din1(mul_ln68_6_fu_490_p1),
    .dout(mul_ln68_6_fu_490_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U117(
    .din0(mul_ln68_7_fu_494_p0),
    .din1(mul_ln68_7_fu_494_p1),
    .dout(mul_ln68_7_fu_494_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U118(
    .din0(mul_ln68_8_fu_498_p0),
    .din1(mul_ln68_8_fu_498_p1),
    .dout(mul_ln68_8_fu_498_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U119(
    .din0(mul_ln68_9_fu_502_p0),
    .din1(mul_ln68_9_fu_502_p1),
    .dout(mul_ln68_9_fu_502_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U120(
    .din0(mul_ln68_10_fu_506_p0),
    .din1(mul_ln68_10_fu_506_p1),
    .dout(mul_ln68_10_fu_506_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U121(
    .din0(mul_ln68_11_fu_510_p0),
    .din1(mul_ln68_11_fu_510_p1),
    .dout(mul_ln68_11_fu_510_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U122(
    .din0(mul_ln68_12_fu_514_p0),
    .din1(mul_ln68_12_fu_514_p1),
    .dout(mul_ln68_12_fu_514_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U123(
    .din0(mul_ln68_13_fu_518_p0),
    .din1(mul_ln68_13_fu_518_p1),
    .dout(mul_ln68_13_fu_518_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U124(
    .din0(mul_ln68_14_fu_522_p0),
    .din1(mul_ln68_14_fu_522_p1),
    .dout(mul_ln68_14_fu_522_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U125(
    .din0(mul_ln68_15_fu_526_p0),
    .din1(mul_ln68_15_fu_526_p1),
    .dout(mul_ln68_15_fu_526_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U126(
    .din0(mul_ln68_16_fu_530_p0),
    .din1(mul_ln68_16_fu_530_p1),
    .dout(mul_ln68_16_fu_530_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U127(
    .din0(mul_ln68_17_fu_534_p0),
    .din1(mul_ln68_17_fu_534_p1),
    .dout(mul_ln68_17_fu_534_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U128(
    .din0(mul_ln68_18_fu_538_p0),
    .din1(mul_ln68_18_fu_538_p1),
    .dout(mul_ln68_18_fu_538_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U129(
    .din0(mul_ln68_19_fu_542_p0),
    .din1(mul_ln68_19_fu_542_p1),
    .dout(mul_ln68_19_fu_542_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U130(
    .din0(mul_ln68_20_fu_546_p0),
    .din1(mul_ln68_20_fu_546_p1),
    .dout(mul_ln68_20_fu_546_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U131(
    .din0(mul_ln68_21_fu_550_p0),
    .din1(mul_ln68_21_fu_550_p1),
    .dout(mul_ln68_21_fu_550_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U132(
    .din0(mul_ln68_22_fu_554_p0),
    .din1(mul_ln68_22_fu_554_p1),
    .dout(mul_ln68_22_fu_554_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U133(
    .din0(mul_ln68_23_fu_558_p0),
    .din1(mul_ln68_23_fu_558_p1),
    .dout(mul_ln68_23_fu_558_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U134(
    .din0(mul_ln68_24_fu_562_p0),
    .din1(mul_ln68_24_fu_562_p1),
    .dout(mul_ln68_24_fu_562_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U135(
    .din0(mul_ln68_25_fu_566_p0),
    .din1(mul_ln68_25_fu_566_p1),
    .dout(mul_ln68_25_fu_566_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U136(
    .din0(mul_ln68_26_fu_570_p0),
    .din1(mul_ln68_26_fu_570_p1),
    .dout(mul_ln68_26_fu_570_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U137(
    .din0(mul_ln68_27_fu_574_p0),
    .din1(mul_ln68_27_fu_574_p1),
    .dout(mul_ln68_27_fu_574_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U138(
    .din0(mul_ln68_28_fu_578_p0),
    .din1(mul_ln68_28_fu_578_p1),
    .dout(mul_ln68_28_fu_578_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U139(
    .din0(mul_ln68_29_fu_582_p0),
    .din1(mul_ln68_29_fu_582_p1),
    .dout(mul_ln68_29_fu_582_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U140(
    .din0(mul_ln68_30_fu_586_p0),
    .din1(mul_ln68_30_fu_586_p1),
    .dout(mul_ln68_30_fu_586_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U141(
    .din0(mul_ln68_31_fu_590_p0),
    .din1(mul_ln68_31_fu_590_p1),
    .dout(mul_ln68_31_fu_590_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U142(
    .din0(mul_ln68_32_fu_594_p0),
    .din1(mul_ln68_32_fu_594_p1),
    .dout(mul_ln68_32_fu_594_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U143(
    .din0(mul_ln68_33_fu_598_p0),
    .din1(mul_ln68_33_fu_598_p1),
    .dout(mul_ln68_33_fu_598_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U144(
    .din0(mul_ln68_34_fu_602_p0),
    .din1(mul_ln68_34_fu_602_p1),
    .dout(mul_ln68_34_fu_602_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U145(
    .din0(mul_ln68_35_fu_606_p0),
    .din1(mul_ln68_35_fu_606_p1),
    .dout(mul_ln68_35_fu_606_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U146(
    .din0(mul_ln68_36_fu_610_p0),
    .din1(mul_ln68_36_fu_610_p1),
    .dout(mul_ln68_36_fu_610_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U147(
    .din0(mul_ln68_37_fu_614_p0),
    .din1(mul_ln68_37_fu_614_p1),
    .dout(mul_ln68_37_fu_614_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U148(
    .din0(mul_ln68_38_fu_618_p0),
    .din1(mul_ln68_38_fu_618_p1),
    .dout(mul_ln68_38_fu_618_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U149(
    .din0(mul_ln68_39_fu_622_p0),
    .din1(mul_ln68_39_fu_622_p1),
    .dout(mul_ln68_39_fu_622_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U150(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_4_fu_745_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U151(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_3_reload),
    .din5(arg1_r_4_reload),
    .din6(arg1_r_5_reload),
    .din7(arg1_r_6_reload),
    .din8(arg1_r_7_reload),
    .din9(arg1_r_8_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_s_fu_775_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U152(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_2_reload),
    .din5(arg1_r_3_reload),
    .din6(arg1_r_4_reload),
    .din7(arg1_r_5_reload),
    .din8(arg1_r_6_reload),
    .din9(arg1_r_7_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_1_fu_806_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U153(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_1_reload),
    .din5(arg1_r_2_reload),
    .din6(arg1_r_3_reload),
    .din7(arg1_r_4_reload),
    .din8(arg1_r_5_reload),
    .din9(arg1_r_6_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_2_fu_838_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U154(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_reload),
    .din5(arg1_r_1_reload),
    .din6(arg1_r_2_reload),
    .din7(arg1_r_3_reload),
    .din8(arg1_r_4_reload),
    .din9(arg1_r_5_reload),
    .din10(trunc_ln55_1_fu_729_p1),
    .dout(tmp_3_fu_877_p12)
);

fiat_25519_carry_mul_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U155(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(tmp_5_fu_968_p3),
    .dout(tmp_5_fu_968_p4)
);

fiat_25519_carry_mul_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U156(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(tmp_6_fu_1053_p4),
    .dout(tmp_6_fu_1053_p5)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U157(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_7_fu_1151_p5),
    .dout(tmp_7_fu_1151_p6)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U158(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_8_fu_1262_p6),
    .dout(tmp_8_fu_1262_p7)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U159(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_9_fu_1368_p7),
    .dout(tmp_9_fu_1368_p8)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U160(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_10_fu_1467_p8),
    .dout(tmp_10_fu_1467_p9)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U161(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_11_fu_1549_p9),
    .dout(tmp_11_fu_1549_p10)
);

fiat_25519_carry_mul_mux_9_4_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_x_U162(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_12_fu_1638_p10),
    .dout(tmp_12_fu_1638_p11)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U163(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_13_fu_1710_p11),
    .dout(tmp_13_fu_1710_p12)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120246_fu_172 <= add55_4_1113265_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120246_fu_172 <= add_ln68_fu_950_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_1247_fu_176 <= add55_4264_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_1247_fu_176 <= add_ln68_2_fu_1015_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_2248_fu_180 <= add55_3_1128263_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_2248_fu_180 <= add_ln68_5_fu_1127_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_3249_fu_184 <= add55_3262_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_3249_fu_184 <= add_ln68_9_fu_1224_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_4250_fu_188 <= add55_2_1143261_reload;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_4250_fu_188 <= add_ln68_14_fu_1835_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_5251_fu_192 <= add55_2260_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_5251_fu_192 <= add_ln68_19_fu_1435_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_6252_fu_196 <= add55_1_1158259_reload;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_6252_fu_196 <= add_ln68_24_fu_1845_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_7253_fu_200 <= add55_1258_reload;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_7253_fu_200 <= add_ln68_29_fu_1607_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add120_8254_fu_204 <= add55_1219257_reload;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add120_8254_fu_204 <= add_ln68_34_fu_1855_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add120_9255_fu_208 <= 64'd0;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add120_9255_fu_208 <= add_ln68_39_fu_1759_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_1_fu_212 <= 5'd9;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_1_fu_212 <= add_ln55_fu_1765_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_168 <= 4'd9;
        end else if (((tmp_fu_693_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i1_fu_168 <= i1_4_fu_1771_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_693_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln68_12_reg_2180 <= add_ln68_12_fu_1350_p2;
        add_ln68_20_reg_2185 <= add_ln68_20_fu_1519_p2;
        add_ln68_22_reg_2190 <= add_ln68_22_fu_1531_p2;
        add_ln68_30_reg_2195 <= add_ln68_30_fu_1681_p2;
        add_ln68_32_reg_2200 <= add_ln68_32_fu_1693_p2;
        and_ln68_13_reg_2175 <= and_ln68_13_fu_1326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln68_6_cast_reg_2166[31 : 0] <= zext_ln68_6_cast_fu_626_p1[31 : 0];
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120246_out_ap_vld = 1'b1;
    end else begin
        add120246_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_1247_out_ap_vld = 1'b1;
    end else begin
        add120_1247_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_2248_out_ap_vld = 1'b1;
    end else begin
        add120_2248_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_3249_out_ap_vld = 1'b1;
    end else begin
        add120_3249_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_4250_out_ap_vld = 1'b1;
    end else begin
        add120_4250_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_5251_out_ap_vld = 1'b1;
    end else begin
        add120_5251_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_6252_out_ap_vld = 1'b1;
    end else begin
        add120_6252_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_7253_out_ap_vld = 1'b1;
    end else begin
        add120_7253_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_8254_out_ap_vld = 1'b1;
    end else begin
        add120_8254_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add120_9255_out_ap_vld = 1'b1;
    end else begin
        add120_9255_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_693_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add120246_out = add120246_fu_172;

assign add120_1247_out = add120_1247_fu_176;

assign add120_2248_out = add120_2248_fu_180;

assign add120_3249_out = add120_3249_fu_184;

assign add120_4250_out = add120_4250_fu_188;

assign add120_5251_out = add120_5251_fu_192;

assign add120_6252_out = add120_6252_fu_196;

assign add120_7253_out = add120_7253_fu_200;

assign add120_8254_out = add120_8254_fu_204;

assign add120_9255_out = add120_9255_fu_208;

assign add_ln55_fu_1765_p2 = ($signed(i1_1_fu_212) + $signed(5'd27));

assign add_ln68_10_fu_1338_p2 = (and_ln68_11_fu_1306_p2 + and_ln68_10_fu_1300_p2);

assign add_ln68_11_fu_1344_p2 = (add_ln68_10_fu_1338_p2 + and_ln68_14_fu_1332_p2);

assign add_ln68_12_fu_1350_p2 = (add_ln68_11_fu_1344_p2 + and_ln68_12_fu_1312_p2);

assign add_ln68_13_fu_1831_p2 = (add_ln68_12_reg_2180 + and_ln68_13_reg_2175);

assign add_ln68_14_fu_1835_p2 = (add_ln68_13_fu_1831_p2 + add120_4250_fu_188);

assign add_ln68_15_fu_1411_p2 = (and_ln68_18_fu_1405_p2 + and_ln68_15_fu_1387_p2);

assign add_ln68_16_fu_1417_p2 = (and_ln68_16_fu_1393_p2 + mul_ln68_17_fu_534_p2);

assign add_ln68_17_fu_1423_p2 = (add_ln68_16_fu_1417_p2 + and_ln68_17_fu_1399_p2);

assign add_ln68_18_fu_1429_p2 = (add_ln68_17_fu_1423_p2 + add_ln68_15_fu_1411_p2);

assign add_ln68_19_fu_1435_p2 = (add120_5251_fu_192 + add_ln68_18_fu_1429_p2);

assign add_ln68_1_fu_1009_p2 = (and_ln68_2_fu_1003_p2 + and_ln68_1_fu_989_p2);

assign add_ln68_20_fu_1519_p2 = (and_ln68_21_fu_1513_p2 + and_ln68_19_fu_1501_p2);

assign add_ln68_21_fu_1525_p2 = (mul_ln68_22_fu_554_p2 + mul_ln68_21_fu_550_p2);

assign add_ln68_22_fu_1531_p2 = (add_ln68_21_fu_1525_p2 + and_ln68_20_fu_1507_p2);

assign add_ln68_23_fu_1841_p2 = (add_ln68_22_reg_2190 + add_ln68_20_reg_2185);

assign add_ln68_24_fu_1845_p2 = (add120_6252_fu_196 + add_ln68_23_fu_1841_p2);

assign add_ln68_25_fu_1583_p2 = (and_ln68_22_fu_1571_p2 + and_ln68_23_fu_1577_p2);

assign add_ln68_26_fu_1589_p2 = (mul_ln68_27_fu_574_p2 + mul_ln68_25_fu_566_p2);

assign add_ln68_27_fu_1595_p2 = (add_ln68_26_fu_1589_p2 + mul_ln68_26_fu_570_p2);

assign add_ln68_28_fu_1601_p2 = (add_ln68_27_fu_1595_p2 + add_ln68_25_fu_1583_p2);

assign add_ln68_29_fu_1607_p2 = (add120_7253_fu_200 + add_ln68_28_fu_1601_p2);

assign add_ln68_2_fu_1015_p2 = (add120_1247_fu_176 + add_ln68_1_fu_1009_p2);

assign add_ln68_30_fu_1681_p2 = (and_ln68_24_fu_1675_p2 + mul_ln68_31_fu_590_p2);

assign add_ln68_31_fu_1687_p2 = (mul_ln68_32_fu_594_p2 + mul_ln68_34_fu_602_p2);

assign add_ln68_32_fu_1693_p2 = (add_ln68_31_fu_1687_p2 + mul_ln68_30_fu_586_p2);

assign add_ln68_33_fu_1851_p2 = (add_ln68_32_reg_2200 + add_ln68_30_reg_2195);

assign add_ln68_34_fu_1855_p2 = (add120_8254_fu_204 + add_ln68_33_fu_1851_p2);

assign add_ln68_35_fu_1735_p2 = (mul_ln68_35_fu_606_p2 + mul_ln68_36_fu_610_p2);

assign add_ln68_36_fu_1741_p2 = (mul_ln68_37_fu_614_p2 + mul_ln68_38_fu_618_p2);

assign add_ln68_37_fu_1747_p2 = (add_ln68_36_fu_1741_p2 + mul_ln68_39_fu_622_p2);

assign add_ln68_38_fu_1753_p2 = (add_ln68_37_fu_1747_p2 + add_ln68_35_fu_1735_p2);

assign add_ln68_39_fu_1759_p2 = (add120_9255_fu_208 + add_ln68_38_fu_1753_p2);

assign add_ln68_3_fu_1115_p2 = (and_ln68_5_fu_1109_p2 + and_ln68_3_fu_1097_p2);

assign add_ln68_4_fu_1121_p2 = (add_ln68_3_fu_1115_p2 + and_ln68_4_fu_1103_p2);

assign add_ln68_5_fu_1127_p2 = (add120_2248_fu_180 + add_ln68_4_fu_1121_p2);

assign add_ln68_6_fu_1206_p2 = (and_ln68_9_fu_1200_p2 + and_ln68_7_fu_1188_p2);

assign add_ln68_7_fu_1212_p2 = (and_ln68_8_fu_1194_p2 + and_ln68_6_fu_1182_p2);

assign add_ln68_8_fu_1218_p2 = (add_ln68_7_fu_1212_p2 + add_ln68_6_fu_1206_p2);

assign add_ln68_9_fu_1224_p2 = (add120_3249_fu_184 + add_ln68_8_fu_1218_p2);

assign add_ln68_fu_950_p2 = (and_ln68_fu_944_p2 + add120246_fu_172);

assign and_ln68_10_fu_1300_p2 = (select_ln68_9_fu_936_p3 & mul_ln68_10_fu_506_p2);

assign and_ln68_11_fu_1306_p2 = (select_ln68_10_fu_995_p3 & mul_ln68_11_fu_510_p2);

assign and_ln68_12_fu_1312_p2 = (select_ln68_12_fu_1174_p3 & mul_ln68_12_fu_514_p2);

assign and_ln68_13_fu_1326_p2 = (select_ln68_13_fu_1318_p3 & mul_ln68_13_fu_518_p2);

assign and_ln68_14_fu_1332_p2 = (select_ln68_11_fu_1089_p3 & mul_ln68_14_fu_522_p2);

assign and_ln68_15_fu_1387_p2 = (select_ln68_11_fu_1089_p3 & mul_ln68_15_fu_526_p2);

assign and_ln68_16_fu_1393_p2 = (select_ln68_13_fu_1318_p3 & mul_ln68_16_fu_530_p2);

assign and_ln68_17_fu_1399_p2 = (select_ln68_12_fu_1174_p3 & mul_ln68_18_fu_538_p2);

assign and_ln68_18_fu_1405_p2 = (select_ln68_10_fu_995_p3 & mul_ln68_19_fu_542_p2);

assign and_ln68_19_fu_1501_p2 = (select_ln68_12_fu_1174_p3 & mul_ln68_20_fu_546_p2);

assign and_ln68_1_fu_989_p2 = (select_ln68_9_fu_936_p3 & mul_ln68_1_fu_470_p2);

assign and_ln68_20_fu_1507_p2 = (select_ln68_13_fu_1318_p3 & mul_ln68_23_fu_558_p2);

assign and_ln68_21_fu_1513_p2 = (select_ln68_11_fu_1089_p3 & mul_ln68_24_fu_562_p2);

assign and_ln68_22_fu_1571_p2 = (select_ln68_12_fu_1174_p3 & mul_ln68_28_fu_578_p2);

assign and_ln68_23_fu_1577_p2 = (select_ln68_13_fu_1318_p3 & mul_ln68_29_fu_582_p2);

assign and_ln68_24_fu_1675_p2 = (select_ln68_13_fu_1318_p3 & mul_ln68_33_fu_598_p2);

assign and_ln68_2_fu_1003_p2 = (select_ln68_10_fu_995_p3 & mul_ln68_2_fu_474_p2);

assign and_ln68_3_fu_1097_p2 = (select_ln68_11_fu_1089_p3 & mul_ln68_3_fu_478_p2);

assign and_ln68_4_fu_1103_p2 = (select_ln68_9_fu_936_p3 & mul_ln68_4_fu_482_p2);

assign and_ln68_5_fu_1109_p2 = (select_ln68_10_fu_995_p3 & mul_ln68_5_fu_486_p2);

assign and_ln68_6_fu_1182_p2 = (select_ln68_12_fu_1174_p3 & mul_ln68_6_fu_490_p2);

assign and_ln68_7_fu_1188_p2 = (select_ln68_10_fu_995_p3 & mul_ln68_7_fu_494_p2);

assign and_ln68_8_fu_1194_p2 = (select_ln68_11_fu_1089_p3 & mul_ln68_8_fu_498_p2);

assign and_ln68_9_fu_1200_p2 = (select_ln68_9_fu_936_p3 & mul_ln68_9_fu_502_p2);

assign and_ln68_fu_944_p2 = (select_ln68_9_fu_936_p3 & mul_ln68_fu_466_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_23_fu_956_p2 = (i1_1_fu_212 + 5'd4);

assign empty_24_fu_1041_p2 = (i1_1_fu_212 + 5'd3);

assign empty_25_fu_1139_p2 = (i1_1_fu_212 + 5'd2);

assign empty_26_fu_1250_p2 = (i1_1_fu_212 + 5'd1);

assign empty_fu_871_p2 = (i1_1_fu_212 + 5'd5);

assign i1_4_fu_1771_p2 = ($signed(i1_fu_168) + $signed(4'd11));

assign icmp_ln68_1_fu_983_p2 = (($signed(empty_23_fu_956_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_2_fu_1083_p2 = (($signed(empty_24_fu_1041_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_3_fu_1168_p2 = (($signed(empty_25_fu_1139_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_4_fu_1294_p2 = (($signed(empty_26_fu_1250_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_930_p2 = (($signed(empty_fu_871_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign mul_ln68_10_fu_506_p0 = zext_ln68_5_fu_923_p1;

assign mul_ln68_10_fu_506_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_11_fu_510_p0 = zext_ln68_8_fu_1035_p1;

assign mul_ln68_11_fu_510_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_12_fu_514_p0 = zext_ln68_12_fu_1244_p1;

assign mul_ln68_12_fu_514_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_13_fu_518_p0 = zext_ln68_13_fu_1287_p1;

assign mul_ln68_13_fu_518_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_14_fu_522_p0 = zext_ln68_9_fu_1076_p1;

assign mul_ln68_14_fu_522_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_15_fu_526_p0 = zext_ln68_10_fu_1133_p1;

assign mul_ln68_15_fu_526_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_16_fu_530_p0 = zext_ln68_14_fu_1356_p1;

assign mul_ln68_16_fu_530_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_17_fu_534_p0 = zext_ln68_15_fu_1380_p1;

assign mul_ln68_17_fu_534_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_18_fu_538_p0 = zext_ln68_11_fu_1161_p1;

assign mul_ln68_18_fu_538_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_19_fu_542_p0 = zext_ln68_7_fu_976_p1;

assign mul_ln68_19_fu_542_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_1_fu_470_p0 = zext_ln68_6_cast_reg_2166;

assign mul_ln68_1_fu_470_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_20_fu_546_p0 = zext_ln68_12_fu_1244_p1;

assign mul_ln68_20_fu_546_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_21_fu_550_p0 = zext_ln68_17_fu_1495_p1;

assign mul_ln68_21_fu_550_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_22_fu_554_p0 = zext_ln68_16_fu_1455_p1;

assign mul_ln68_22_fu_554_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_23_fu_558_p0 = zext_ln68_13_fu_1287_p1;

assign mul_ln68_23_fu_558_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_24_fu_562_p0 = zext_ln68_9_fu_1076_p1;

assign mul_ln68_24_fu_562_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_25_fu_566_p0 = zext_ln68_19_fu_1565_p1;

assign mul_ln68_25_fu_566_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_26_fu_570_p0 = zext_ln68_15_fu_1380_p1;

assign mul_ln68_26_fu_570_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_27_fu_574_p0 = zext_ln68_18_fu_1537_p1;

assign mul_ln68_27_fu_574_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_28_fu_578_p0 = zext_ln68_11_fu_1161_p1;

assign mul_ln68_28_fu_578_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_29_fu_582_p0 = zext_ln68_14_fu_1356_p1;

assign mul_ln68_29_fu_582_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_2_fu_474_p0 = zext_ln68_7_fu_976_p1;

assign mul_ln68_2_fu_474_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_30_fu_586_p0 = zext_ln68_17_fu_1495_p1;

assign mul_ln68_30_fu_586_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_31_fu_590_p0 = zext_ln68_16_fu_1455_p1;

assign mul_ln68_31_fu_590_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_32_fu_594_p0 = mul_ln68_32_fu_594_p00;

assign mul_ln68_32_fu_594_p00 = select_ln68_7_fu_1619_p3;

assign mul_ln68_32_fu_594_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_33_fu_598_p0 = zext_ln68_13_fu_1287_p1;

assign mul_ln68_33_fu_598_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_34_fu_602_p0 = mul_ln68_34_fu_602_p00;

assign mul_ln68_34_fu_602_p00 = select_ln68_8_fu_1662_p3;

assign mul_ln68_34_fu_602_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_35_fu_606_p0 = zext_ln68_15_fu_1380_p1;

assign mul_ln68_35_fu_606_p1 = zext_ln68_fu_765_p1;

assign mul_ln68_36_fu_610_p0 = zext_ln68_18_fu_1537_p1;

assign mul_ln68_36_fu_610_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_37_fu_614_p0 = mul_ln68_37_fu_614_p00;

assign mul_ln68_37_fu_614_p00 = tmp_12_fu_1638_p11;

assign mul_ln68_37_fu_614_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_38_fu_618_p0 = mul_ln68_38_fu_618_p00;

assign mul_ln68_38_fu_618_p00 = tmp_13_fu_1710_p12;

assign mul_ln68_38_fu_618_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_39_fu_622_p0 = zext_ln68_19_fu_1565_p1;

assign mul_ln68_39_fu_622_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_3_fu_478_p0 = zext_ln68_9_fu_1076_p1;

assign mul_ln68_3_fu_478_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_4_fu_482_p0 = zext_ln68_5_fu_923_p1;

assign mul_ln68_4_fu_482_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_5_fu_486_p0 = zext_ln68_8_fu_1035_p1;

assign mul_ln68_5_fu_486_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_6_fu_490_p0 = zext_ln68_11_fu_1161_p1;

assign mul_ln68_6_fu_490_p1 = zext_ln68_4_fu_897_p1;

assign mul_ln68_7_fu_494_p0 = zext_ln68_7_fu_976_p1;

assign mul_ln68_7_fu_494_p1 = zext_ln68_2_fu_826_p1;

assign mul_ln68_8_fu_498_p0 = zext_ln68_10_fu_1133_p1;

assign mul_ln68_8_fu_498_p1 = zext_ln68_3_fu_858_p1;

assign mul_ln68_9_fu_502_p0 = zext_ln68_6_cast_reg_2166;

assign mul_ln68_9_fu_502_p1 = zext_ln68_1_fu_795_p1;

assign mul_ln68_fu_466_p0 = zext_ln68_5_fu_923_p1;

assign mul_ln68_fu_466_p1 = zext_ln68_4_fu_897_p1;

assign select_ln68_10_fu_995_p3 = ((icmp_ln68_1_fu_983_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_11_fu_1089_p3 = ((icmp_ln68_2_fu_1083_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_12_fu_1174_p3 = ((icmp_ln68_3_fu_1168_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_13_fu_1318_p3 = ((icmp_ln68_4_fu_1294_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_1_fu_1027_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_5_fu_968_p4 : shl_ln68_1_fu_1021_p2);

assign select_ln68_2_fu_1068_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_2_fu_1062_p2 : tmp_6_fu_1053_p5);

assign select_ln68_3_fu_1236_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_7_fu_1151_p6 : shl_ln68_3_fu_1230_p2);

assign select_ln68_4_fu_1279_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_4_fu_1273_p2 : tmp_8_fu_1262_p7);

assign select_ln68_5_fu_1447_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_9_fu_1368_p8 : shl_ln68_5_fu_1441_p2);

assign select_ln68_6_fu_1487_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_6_fu_1481_p2 : tmp_10_fu_1467_p9);

assign select_ln68_7_fu_1619_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? tmp_11_fu_1549_p10 : shl_ln68_7_fu_1613_p2);

assign select_ln68_8_fu_1662_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_8_fu_1656_p2 : tmp_12_fu_1638_p11);

assign select_ln68_9_fu_936_p3 = ((icmp_ln68_fu_930_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln68_fu_916_p3 = ((trunc_ln55_fu_725_p1[0:0] == 1'b1) ? shl_ln68_fu_911_p2 : arg2_r_reload);

assign shl_ln68_1_fu_1021_p2 = tmp_5_fu_968_p4 << 32'd1;

assign shl_ln68_2_fu_1062_p2 = tmp_6_fu_1053_p5 << 32'd1;

assign shl_ln68_3_fu_1230_p2 = tmp_7_fu_1151_p6 << 32'd1;

assign shl_ln68_4_fu_1273_p2 = tmp_8_fu_1262_p7 << 32'd1;

assign shl_ln68_5_fu_1441_p2 = tmp_9_fu_1368_p8 << 32'd1;

assign shl_ln68_6_fu_1481_p2 = tmp_10_fu_1467_p9 << 32'd1;

assign shl_ln68_7_fu_1613_p2 = tmp_11_fu_1549_p10 << 32'd1;

assign shl_ln68_8_fu_1656_p2 = tmp_12_fu_1638_p11 << 32'd1;

assign shl_ln68_fu_911_p2 = arg2_r_reload << 32'd1;

assign tmp_10_fu_1467_p8 = (3'd2 - trunc_ln55_2_fu_733_p1);

assign tmp_11_fu_1549_p9 = (3'd3 - trunc_ln55_2_fu_733_p1);

assign tmp_12_fu_1638_p10 = ($signed(4'd12) - $signed(trunc_ln55_1_fu_729_p1));

assign tmp_13_fu_1710_p11 = ($signed(4'd13) - $signed(trunc_ln55_1_fu_729_p1));

assign tmp_5_fu_968_p3 = (trunc_ln55_4_fu_741_p1 ^ 1'd1);

assign tmp_6_fu_1053_p4 = ($signed(2'd2) - $signed(trunc_ln55_3_fu_737_p1));

assign tmp_7_fu_1151_p5 = (trunc_ln55_3_fu_737_p1 ^ 2'd3);

assign tmp_8_fu_1262_p6 = (3'd0 - trunc_ln55_2_fu_733_p1);

assign tmp_9_fu_1368_p7 = (3'd1 - trunc_ln55_2_fu_733_p1);

assign tmp_fu_693_p3 = i1_1_fu_212[32'd4];

assign trunc_ln55_1_fu_729_p1 = i1_1_fu_212[3:0];

assign trunc_ln55_2_fu_733_p1 = i1_1_fu_212[2:0];

assign trunc_ln55_3_fu_737_p1 = i1_1_fu_212[1:0];

assign trunc_ln55_4_fu_741_p1 = i1_1_fu_212[0:0];

assign trunc_ln55_fu_725_p1 = i1_fu_168[0:0];

assign zext_ln68_10_fu_1133_p1 = tmp_6_fu_1053_p5;

assign zext_ln68_11_fu_1161_p1 = tmp_7_fu_1151_p6;

assign zext_ln68_12_fu_1244_p1 = select_ln68_3_fu_1236_p3;

assign zext_ln68_13_fu_1287_p1 = select_ln68_4_fu_1279_p3;

assign zext_ln68_14_fu_1356_p1 = tmp_8_fu_1262_p7;

assign zext_ln68_15_fu_1380_p1 = tmp_9_fu_1368_p8;

assign zext_ln68_16_fu_1455_p1 = select_ln68_5_fu_1447_p3;

assign zext_ln68_17_fu_1495_p1 = select_ln68_6_fu_1487_p3;

assign zext_ln68_18_fu_1537_p1 = tmp_10_fu_1467_p9;

assign zext_ln68_19_fu_1565_p1 = tmp_11_fu_1549_p10;

assign zext_ln68_1_fu_795_p1 = tmp_s_fu_775_p12;

assign zext_ln68_2_fu_826_p1 = tmp_1_fu_806_p12;

assign zext_ln68_3_fu_858_p1 = tmp_2_fu_838_p12;

assign zext_ln68_4_fu_897_p1 = tmp_3_fu_877_p12;

assign zext_ln68_5_fu_923_p1 = select_ln68_fu_916_p3;

assign zext_ln68_6_cast_fu_626_p1 = zext_ln68_6;

assign zext_ln68_7_fu_976_p1 = tmp_5_fu_968_p4;

assign zext_ln68_8_fu_1035_p1 = select_ln68_1_fu_1027_p3;

assign zext_ln68_9_fu_1076_p1 = select_ln68_2_fu_1068_p3;

assign zext_ln68_fu_765_p1 = tmp_4_fu_745_p12;

always @ (posedge ap_clk) begin
    zext_ln68_6_cast_reg_2166[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_55_5
