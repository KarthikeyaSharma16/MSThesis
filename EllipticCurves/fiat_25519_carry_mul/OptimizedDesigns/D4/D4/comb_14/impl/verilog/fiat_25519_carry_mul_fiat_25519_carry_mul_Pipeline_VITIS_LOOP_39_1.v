// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_reload,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        arg2_r_reload,
        arg2_r_1_reload,
        arg2_r_2_reload,
        arg2_r_3_reload,
        arg2_r_4_reload,
        arg2_r_5_reload,
        arg2_r_6_reload,
        arg2_r_7_reload,
        arg2_r_8_reload,
        arg2_r_9_reload,
        add65_1_481_out,
        add65_1_481_out_ap_vld,
        add65_1_380_out,
        add65_1_380_out_ap_vld,
        add65_1_279_out,
        add65_1_279_out_ap_vld,
        add65_1_178_out,
        add65_1_178_out_ap_vld,
        add65_177_out,
        add65_177_out_ap_vld,
        add65_476_out,
        add65_476_out_ap_vld,
        add65_375_out,
        add65_375_out_ap_vld,
        add65_274_out,
        add65_274_out_ap_vld,
        add65_12973_out,
        add65_12973_out_ap_vld,
        add6572_out,
        add6572_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] arg2_r_reload;
input  [31:0] arg2_r_1_reload;
input  [31:0] arg2_r_2_reload;
input  [31:0] arg2_r_3_reload;
input  [31:0] arg2_r_4_reload;
input  [31:0] arg2_r_5_reload;
input  [31:0] arg2_r_6_reload;
input  [31:0] arg2_r_7_reload;
input  [31:0] arg2_r_8_reload;
input  [31:0] arg2_r_9_reload;
output  [63:0] add65_1_481_out;
output   add65_1_481_out_ap_vld;
output  [63:0] add65_1_380_out;
output   add65_1_380_out_ap_vld;
output  [63:0] add65_1_279_out;
output   add65_1_279_out_ap_vld;
output  [63:0] add65_1_178_out;
output   add65_1_178_out_ap_vld;
output  [63:0] add65_177_out;
output   add65_177_out_ap_vld;
output  [63:0] add65_476_out;
output   add65_476_out_ap_vld;
output  [63:0] add65_375_out;
output   add65_375_out_ap_vld;
output  [63:0] add65_274_out;
output   add65_274_out_ap_vld;
output  [63:0] add65_12973_out;
output   add65_12973_out_ap_vld;
output  [63:0] add6572_out;
output   add6572_out_ap_vld;

reg ap_idle;
reg add65_1_481_out_ap_vld;
reg add65_1_380_out_ap_vld;
reg add65_1_279_out_ap_vld;
reg add65_1_178_out_ap_vld;
reg add65_177_out_ap_vld;
reg add65_476_out_ap_vld;
reg add65_375_out_ap_vld;
reg add65_274_out_ap_vld;
reg add65_12973_out_ap_vld;
reg add6572_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_16_fu_572_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] i1_1_reg_2138;
wire   [3:0] trunc_ln39_fu_580_p1;
reg   [3:0] trunc_ln39_reg_2152;
wire   [0:0] empty_fu_584_p1;
reg   [0:0] empty_reg_2158;
wire   [31:0] tmp_fu_588_p12;
reg   [31:0] tmp_reg_2167;
wire   [0:0] icmp_ln51_fu_620_p2;
reg   [0:0] icmp_ln51_reg_2172;
wire  signed [31:0] tmp_2_fu_647_p12;
reg  signed [31:0] tmp_2_reg_2177;
wire   [31:0] mul_ln52_fu_474_p2;
reg   [31:0] mul_ln52_reg_2183;
wire   [0:0] icmp_ln53_fu_674_p2;
reg   [0:0] icmp_ln53_reg_2188;
wire  signed [31:0] tmp_4_fu_686_p12;
reg  signed [31:0] tmp_4_reg_2194;
wire   [31:0] mul_ln52_1_fu_494_p2;
reg   [31:0] mul_ln52_1_reg_2199;
wire   [0:0] icmp_ln51_1_fu_719_p2;
reg   [0:0] icmp_ln51_1_reg_2204;
wire  signed [31:0] tmp_6_fu_746_p12;
reg  signed [31:0] tmp_6_reg_2209;
wire   [31:0] mul_ln52_2_fu_478_p2;
reg   [31:0] mul_ln52_2_reg_2215;
wire   [0:0] icmp_ln53_1_fu_773_p2;
reg   [0:0] icmp_ln53_1_reg_2220;
wire   [31:0] mul_ln52_3_fu_499_p2;
reg   [31:0] mul_ln52_3_reg_2226;
wire   [0:0] icmp_ln51_2_fu_818_p2;
reg   [0:0] icmp_ln51_2_reg_2231;
wire   [31:0] mul_ln52_4_fu_482_p2;
reg   [31:0] mul_ln52_4_reg_2236;
wire   [0:0] icmp_ln53_2_fu_872_p2;
reg   [0:0] icmp_ln53_2_reg_2241;
wire   [31:0] mul_ln52_5_fu_504_p2;
reg   [31:0] mul_ln52_5_reg_2247;
wire   [0:0] icmp_ln51_3_fu_917_p2;
reg   [0:0] icmp_ln51_3_reg_2252;
wire   [31:0] mul_ln52_6_fu_486_p2;
reg   [31:0] mul_ln52_6_reg_2257;
wire   [0:0] icmp_ln53_3_fu_971_p2;
reg   [0:0] icmp_ln53_3_reg_2262;
wire   [31:0] mul_ln52_7_fu_509_p2;
reg   [31:0] mul_ln52_7_reg_2268;
wire   [0:0] icmp_ln51_4_fu_1010_p2;
reg   [0:0] icmp_ln51_4_reg_2273;
wire   [31:0] mul_ln52_8_fu_490_p2;
reg   [31:0] mul_ln52_8_reg_2278;
reg   [63:0] add6572_fu_164;
wire   [63:0] add_ln54_fu_1159_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [63:0] add65_12973_fu_168;
wire   [63:0] add_ln54_2_fu_1244_p2;
reg   [63:0] add65_274_fu_172;
wire   [63:0] add_ln54_4_fu_1330_p2;
reg   [63:0] add65_375_fu_176;
wire   [63:0] add_ln54_6_fu_1414_p2;
reg   [63:0] add65_476_fu_180;
wire   [63:0] add_ln54_8_fu_1498_p2;
reg   [63:0] add65_177_fu_184;
wire   [63:0] add_ln54_10_fu_1580_p2;
reg   [63:0] add65_1_178_fu_188;
wire   [63:0] add_ln54_12_fu_1662_p2;
reg   [63:0] add65_1_279_fu_192;
wire   [63:0] add_ln54_14_fu_1725_p2;
reg   [63:0] add65_1_380_fu_196;
wire   [63:0] add_ln54_16_fu_1790_p2;
reg   [63:0] add65_1_481_fu_200;
wire   [63:0] add_ln54_18_fu_1866_p2;
reg   [4:0] i1_fu_204;
wire   [4:0] add_ln39_fu_1064_p2;
reg   [4:0] ap_sig_allocacmp_i1_1;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln54_fu_398_p0;
wire   [31:0] mul_ln54_fu_398_p1;
wire   [63:0] zext_ln52_fu_1111_p1;
wire   [31:0] mul_ln54_1_fu_402_p0;
wire   [31:0] mul_ln54_1_fu_402_p1;
wire   [31:0] mul_ln54_2_fu_406_p0;
wire   [31:0] mul_ln54_2_fu_406_p1;
wire   [31:0] mul_ln54_3_fu_410_p0;
wire   [31:0] mul_ln54_3_fu_410_p1;
wire   [31:0] mul_ln54_4_fu_414_p0;
wire   [31:0] mul_ln54_4_fu_414_p1;
wire   [31:0] mul_ln54_5_fu_418_p0;
wire   [31:0] mul_ln54_5_fu_418_p1;
wire   [31:0] mul_ln54_6_fu_422_p0;
wire   [31:0] mul_ln54_6_fu_422_p1;
wire   [31:0] mul_ln54_7_fu_426_p0;
wire   [31:0] mul_ln54_7_fu_426_p1;
wire   [31:0] mul_ln54_8_fu_430_p0;
wire   [31:0] mul_ln54_8_fu_430_p1;
wire   [31:0] mul_ln54_9_fu_434_p0;
wire   [31:0] mul_ln54_9_fu_434_p1;
wire   [31:0] mul_ln54_10_fu_438_p0;
wire   [31:0] mul_ln54_10_fu_438_p1;
wire   [31:0] mul_ln54_11_fu_442_p0;
wire   [31:0] mul_ln54_11_fu_442_p1;
wire   [31:0] mul_ln54_12_fu_446_p0;
wire   [31:0] mul_ln54_12_fu_446_p1;
wire   [31:0] mul_ln54_13_fu_450_p0;
wire   [31:0] mul_ln54_13_fu_450_p1;
wire   [31:0] mul_ln54_14_fu_454_p0;
wire   [31:0] mul_ln54_14_fu_454_p1;
wire   [31:0] mul_ln54_15_fu_458_p0;
wire   [31:0] mul_ln54_15_fu_458_p1;
wire   [31:0] mul_ln54_16_fu_462_p0;
wire   [31:0] mul_ln54_16_fu_462_p1;
wire   [31:0] mul_ln54_17_fu_466_p0;
wire   [31:0] mul_ln54_17_fu_466_p1;
wire   [31:0] mul_ln54_18_fu_470_p0;
wire   [31:0] mul_ln54_18_fu_470_p1;
wire  signed [6:0] mul_ln52_fu_474_p1;
wire  signed [6:0] mul_ln52_2_fu_478_p1;
wire  signed [31:0] tmp_s_fu_845_p12;
wire  signed [6:0] mul_ln52_4_fu_482_p1;
wire  signed [31:0] tmp_13_fu_944_p12;
wire  signed [6:0] mul_ln52_6_fu_486_p1;
wire  signed [31:0] tmp_15_fu_1037_p12;
wire  signed [6:0] mul_ln52_8_fu_490_p1;
wire   [5:0] mul_ln52_1_fu_494_p1;
wire  signed [31:0] tmp_8_fu_785_p12;
wire   [5:0] mul_ln52_3_fu_499_p1;
wire  signed [31:0] tmp_11_fu_884_p12;
wire   [5:0] mul_ln52_5_fu_504_p1;
wire  signed [31:0] tmp_14_fu_983_p12;
wire   [5:0] mul_ln52_7_fu_509_p1;
wire   [4:0] add_ln51_fu_614_p2;
wire   [0:0] and_ln51_fu_626_p2;
wire   [3:0] tmp_2_fu_647_p11;
wire   [3:0] tmp_4_fu_686_p11;
wire   [4:0] add_ln51_1_fu_713_p2;
wire   [0:0] and_ln51_1_fu_725_p2;
wire   [3:0] tmp_6_fu_746_p11;
wire   [3:0] tmp_8_fu_785_p11;
wire   [4:0] empty_22_fu_812_p2;
wire   [0:0] and_ln51_2_fu_824_p2;
wire   [3:0] tmp_s_fu_845_p11;
wire   [3:0] tmp_11_fu_884_p11;
wire   [4:0] add_ln51_2_fu_911_p2;
wire   [0:0] and_ln51_3_fu_923_p2;
wire   [3:0] tmp_13_fu_944_p11;
wire   [3:0] tmp_14_fu_983_p11;
wire   [0:0] and_ln51_4_fu_1016_p2;
wire   [3:0] tmp_15_fu_1037_p11;
wire   [3:0] tmp_1_fu_1138_p11;
wire   [31:0] tmp_1_fu_1138_p12;
wire   [63:0] mul_ln54_fu_398_p2;
wire   [3:0] tmp_3_fu_1178_p10;
wire   [31:0] tmp_3_fu_1178_p11;
wire   [0:0] and_ln53_fu_1169_p2;
wire   [31:0] shl_ln54_fu_1193_p2;
wire   [31:0] select_ln54_fu_1199_p3;
wire   [63:0] mul_ln54_1_fu_402_p2;
wire   [63:0] select_ln54_5_fu_1212_p3;
wire   [63:0] mul_ln54_2_fu_406_p2;
wire   [63:0] select_ln54_6_fu_1225_p3;
wire   [63:0] and_ln54_1_fu_1232_p2;
wire   [63:0] and_ln54_fu_1219_p2;
wire   [63:0] add_ln54_1_fu_1238_p2;
wire   [4:0] add_ln52_fu_1250_p2;
wire   [2:0] trunc_ln39_2_fu_1108_p1;
wire   [2:0] tmp_5_fu_1271_p9;
wire   [31:0] tmp_5_fu_1271_p10;
wire   [0:0] icmp_ln52_fu_1259_p2;
wire   [63:0] mul_ln54_3_fu_410_p2;
wire   [63:0] select_ln54_7_fu_1296_p3;
wire   [0:0] icmp_ln54_fu_1290_p2;
wire   [63:0] mul_ln54_4_fu_414_p2;
wire   [63:0] select_ln54_8_fu_1310_p3;
wire   [63:0] and_ln54_3_fu_1318_p2;
wire   [63:0] and_ln54_2_fu_1304_p2;
wire   [63:0] add_ln54_3_fu_1324_p2;
wire   [2:0] tmp_7_fu_1350_p8;
wire   [31:0] tmp_7_fu_1350_p9;
wire   [0:0] and_ln53_1_fu_1340_p2;
wire   [31:0] shl_ln54_1_fu_1363_p2;
wire   [31:0] select_ln54_1_fu_1369_p3;
wire   [63:0] mul_ln54_5_fu_418_p2;
wire   [63:0] select_ln54_9_fu_1382_p3;
wire   [63:0] mul_ln54_6_fu_422_p2;
wire   [63:0] select_ln54_10_fu_1395_p3;
wire   [63:0] and_ln54_5_fu_1402_p2;
wire   [63:0] and_ln54_4_fu_1389_p2;
wire   [63:0] add_ln54_5_fu_1408_p2;
wire   [4:0] add_ln52_1_fu_1420_p2;
wire   [2:0] tmp_9_fu_1441_p7;
wire   [31:0] tmp_9_fu_1441_p8;
wire   [0:0] icmp_ln52_1_fu_1429_p2;
wire   [63:0] mul_ln54_7_fu_426_p2;
wire   [63:0] select_ln54_11_fu_1464_p3;
wire   [0:0] icmp_ln54_1_fu_1458_p2;
wire   [63:0] mul_ln54_8_fu_430_p2;
wire   [63:0] select_ln54_12_fu_1478_p3;
wire   [63:0] and_ln54_7_fu_1486_p2;
wire   [63:0] and_ln54_6_fu_1472_p2;
wire   [63:0] add_ln54_7_fu_1492_p2;
wire   [2:0] tmp_10_fu_1518_p6;
wire   [31:0] tmp_10_fu_1518_p7;
wire   [0:0] and_ln53_2_fu_1508_p2;
wire   [31:0] shl_ln54_2_fu_1529_p2;
wire   [31:0] select_ln54_2_fu_1535_p3;
wire   [63:0] mul_ln54_9_fu_434_p2;
wire   [63:0] select_ln54_13_fu_1548_p3;
wire   [63:0] mul_ln54_10_fu_438_p2;
wire   [63:0] select_ln54_14_fu_1561_p3;
wire   [63:0] and_ln54_9_fu_1568_p2;
wire   [63:0] and_ln54_8_fu_1555_p2;
wire   [63:0] add_ln54_9_fu_1574_p2;
wire   [4:0] add_ln52_2_fu_1586_p2;
wire   [1:0] trunc_ln39_1_fu_1105_p1;
wire   [1:0] tmp_12_fu_1607_p5;
wire   [31:0] tmp_12_fu_1607_p6;
wire   [0:0] icmp_ln52_2_fu_1595_p2;
wire   [63:0] mul_ln54_11_fu_442_p2;
wire   [63:0] select_ln54_15_fu_1628_p3;
wire   [0:0] icmp_ln54_2_fu_1622_p2;
wire   [63:0] mul_ln54_12_fu_446_p2;
wire   [63:0] select_ln54_16_fu_1642_p3;
wire   [63:0] and_ln54_11_fu_1650_p2;
wire   [63:0] and_ln54_10_fu_1636_p2;
wire   [63:0] add_ln54_11_fu_1656_p2;
wire   [0:0] and_ln53_3_fu_1672_p2;
wire   [31:0] shl_ln54_3_fu_1676_p2;
wire   [31:0] select_ln54_3_fu_1681_p3;
wire   [63:0] mul_ln54_13_fu_450_p2;
wire   [63:0] select_ln54_17_fu_1693_p3;
wire   [63:0] mul_ln54_14_fu_454_p2;
wire   [63:0] select_ln54_18_fu_1706_p3;
wire   [63:0] and_ln54_12_fu_1700_p2;
wire   [63:0] and_ln54_13_fu_1713_p2;
wire   [63:0] add_ln54_13_fu_1719_p2;
wire   [4:0] add_ln52_3_fu_1731_p2;
wire   [0:0] icmp_ln52_3_fu_1740_p2;
wire   [63:0] mul_ln54_15_fu_458_p2;
wire   [63:0] select_ln54_19_fu_1756_p3;
wire   [0:0] icmp_ln54_3_fu_1750_p2;
wire   [63:0] mul_ln54_16_fu_462_p2;
wire   [63:0] select_ln54_20_fu_1770_p3;
wire   [63:0] and_ln54_14_fu_1764_p2;
wire   [63:0] and_ln54_15_fu_1778_p2;
wire   [63:0] add_ln54_15_fu_1784_p2;
wire   [4:0] add_ln51_3_fu_1796_p2;
wire   [0:0] icmp_ln53_4_fu_1805_p2;
wire   [0:0] and_ln53_4_fu_1811_p2;
wire   [31:0] shl_ln54_4_fu_1816_p2;
wire   [31:0] select_ln54_4_fu_1821_p3;
wire   [63:0] mul_ln54_17_fu_466_p2;
wire   [63:0] select_ln54_21_fu_1833_p3;
wire   [63:0] mul_ln54_18_fu_470_p2;
wire   [63:0] select_ln54_22_fu_1846_p3;
wire   [63:0] and_ln54_16_fu_1840_p2;
wire   [63:0] and_ln54_17_fu_1854_p2;
wire   [63:0] add_ln54_17_fu_1860_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire  signed [31:0] mul_ln52_2_fu_478_p10;
wire  signed [31:0] mul_ln52_4_fu_482_p10;
wire  signed [31:0] mul_ln52_6_fu_486_p10;
wire  signed [31:0] mul_ln52_8_fu_490_p10;
wire  signed [31:0] mul_ln52_fu_474_p10;
wire   [63:0] mul_ln54_10_fu_438_p00;
wire   [63:0] mul_ln54_11_fu_442_p00;
wire   [63:0] mul_ln54_12_fu_446_p00;
wire   [63:0] mul_ln54_13_fu_450_p00;
wire   [63:0] mul_ln54_14_fu_454_p00;
wire   [63:0] mul_ln54_15_fu_458_p00;
wire   [63:0] mul_ln54_16_fu_462_p00;
wire   [63:0] mul_ln54_17_fu_466_p00;
wire   [63:0] mul_ln54_18_fu_470_p00;
wire   [63:0] mul_ln54_1_fu_402_p00;
wire   [63:0] mul_ln54_2_fu_406_p00;
wire   [63:0] mul_ln54_3_fu_410_p00;
wire   [63:0] mul_ln54_4_fu_414_p00;
wire   [63:0] mul_ln54_5_fu_418_p00;
wire   [63:0] mul_ln54_6_fu_422_p00;
wire   [63:0] mul_ln54_7_fu_426_p00;
wire   [63:0] mul_ln54_8_fu_430_p00;
wire   [63:0] mul_ln54_9_fu_434_p00;
wire   [63:0] mul_ln54_fu_398_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U25(
    .din0(mul_ln54_fu_398_p0),
    .din1(mul_ln54_fu_398_p1),
    .dout(mul_ln54_fu_398_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U26(
    .din0(mul_ln54_1_fu_402_p0),
    .din1(mul_ln54_1_fu_402_p1),
    .dout(mul_ln54_1_fu_402_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U27(
    .din0(mul_ln54_2_fu_406_p0),
    .din1(mul_ln54_2_fu_406_p1),
    .dout(mul_ln54_2_fu_406_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U28(
    .din0(mul_ln54_3_fu_410_p0),
    .din1(mul_ln54_3_fu_410_p1),
    .dout(mul_ln54_3_fu_410_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U29(
    .din0(mul_ln54_4_fu_414_p0),
    .din1(mul_ln54_4_fu_414_p1),
    .dout(mul_ln54_4_fu_414_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U30(
    .din0(mul_ln54_5_fu_418_p0),
    .din1(mul_ln54_5_fu_418_p1),
    .dout(mul_ln54_5_fu_418_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U31(
    .din0(mul_ln54_6_fu_422_p0),
    .din1(mul_ln54_6_fu_422_p1),
    .dout(mul_ln54_6_fu_422_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U32(
    .din0(mul_ln54_7_fu_426_p0),
    .din1(mul_ln54_7_fu_426_p1),
    .dout(mul_ln54_7_fu_426_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U33(
    .din0(mul_ln54_8_fu_430_p0),
    .din1(mul_ln54_8_fu_430_p1),
    .dout(mul_ln54_8_fu_430_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U34(
    .din0(mul_ln54_9_fu_434_p0),
    .din1(mul_ln54_9_fu_434_p1),
    .dout(mul_ln54_9_fu_434_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U35(
    .din0(mul_ln54_10_fu_438_p0),
    .din1(mul_ln54_10_fu_438_p1),
    .dout(mul_ln54_10_fu_438_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U36(
    .din0(mul_ln54_11_fu_442_p0),
    .din1(mul_ln54_11_fu_442_p1),
    .dout(mul_ln54_11_fu_442_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U37(
    .din0(mul_ln54_12_fu_446_p0),
    .din1(mul_ln54_12_fu_446_p1),
    .dout(mul_ln54_12_fu_446_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U38(
    .din0(mul_ln54_13_fu_450_p0),
    .din1(mul_ln54_13_fu_450_p1),
    .dout(mul_ln54_13_fu_450_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U39(
    .din0(mul_ln54_14_fu_454_p0),
    .din1(mul_ln54_14_fu_454_p1),
    .dout(mul_ln54_14_fu_454_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U40(
    .din0(mul_ln54_15_fu_458_p0),
    .din1(mul_ln54_15_fu_458_p1),
    .dout(mul_ln54_15_fu_458_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U41(
    .din0(mul_ln54_16_fu_462_p0),
    .din1(mul_ln54_16_fu_462_p1),
    .dout(mul_ln54_16_fu_462_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U42(
    .din0(mul_ln54_17_fu_466_p0),
    .din1(mul_ln54_17_fu_466_p1),
    .dout(mul_ln54_17_fu_466_p2)
);

fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U43(
    .din0(mul_ln54_18_fu_470_p0),
    .din1(mul_ln54_18_fu_470_p1),
    .dout(mul_ln54_18_fu_470_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U44(
    .din0(tmp_2_fu_647_p12),
    .din1(mul_ln52_fu_474_p1),
    .dout(mul_ln52_fu_474_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U45(
    .din0(tmp_6_fu_746_p12),
    .din1(mul_ln52_2_fu_478_p1),
    .dout(mul_ln52_2_fu_478_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U46(
    .din0(tmp_s_fu_845_p12),
    .din1(mul_ln52_4_fu_482_p1),
    .dout(mul_ln52_4_fu_482_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U47(
    .din0(tmp_13_fu_944_p12),
    .din1(mul_ln52_6_fu_486_p1),
    .dout(mul_ln52_6_fu_486_p2)
);

fiat_25519_carry_mul_mul_32s_7s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mul_32s_7s_32_1_1_U48(
    .din0(tmp_15_fu_1037_p12),
    .din1(mul_ln52_8_fu_490_p1),
    .dout(mul_ln52_8_fu_490_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U49(
    .din0(tmp_4_fu_686_p12),
    .din1(mul_ln52_1_fu_494_p1),
    .dout(mul_ln52_1_fu_494_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U50(
    .din0(tmp_8_fu_785_p12),
    .din1(mul_ln52_3_fu_499_p1),
    .dout(mul_ln52_3_fu_499_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U51(
    .din0(tmp_11_fu_884_p12),
    .din1(mul_ln52_5_fu_504_p1),
    .dout(mul_ln52_5_fu_504_p2)
);

fiat_25519_carry_mul_mul_32s_6ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mul_32s_6ns_32_1_1_U52(
    .din0(tmp_14_fu_983_p12),
    .din1(mul_ln52_7_fu_509_p1),
    .dout(mul_ln52_7_fu_509_p2)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U53(
    .din0(arg1_r_reload),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(trunc_ln39_fu_580_p1),
    .dout(tmp_fu_588_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U54(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(32'd0),
    .din9(arg2_r_9_reload),
    .din10(tmp_2_fu_647_p11),
    .dout(tmp_2_fu_647_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U55(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_4_fu_686_p11),
    .dout(tmp_4_fu_686_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U56(
    .din0(arg2_r_reload),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(32'd0),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_6_fu_746_p11),
    .dout(tmp_6_fu_746_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U57(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(32'd0),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_8_fu_785_p11),
    .dout(tmp_8_fu_785_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U58(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_s_fu_845_p11),
    .dout(tmp_s_fu_845_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U59(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_11_fu_884_p11),
    .dout(tmp_11_fu_884_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U60(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_13_fu_944_p11),
    .dout(tmp_13_fu_944_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U61(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_14_fu_983_p11),
    .dout(tmp_14_fu_983_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U62(
    .din0(32'd0),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_15_fu_1037_p11),
    .dout(tmp_15_fu_1037_p12)
);

fiat_25519_carry_mul_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U63(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(arg2_r_9_reload),
    .din10(tmp_1_fu_1138_p11),
    .dout(tmp_1_fu_1138_p12)
);

fiat_25519_carry_mul_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U64(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(arg2_r_8_reload),
    .din9(tmp_3_fu_1178_p10),
    .dout(tmp_3_fu_1178_p11)
);

fiat_25519_carry_mul_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U65(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(arg2_r_7_reload),
    .din8(tmp_5_fu_1271_p9),
    .dout(tmp_5_fu_1271_p10)
);

fiat_25519_carry_mul_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U66(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(arg2_r_6_reload),
    .din7(tmp_7_fu_1350_p8),
    .dout(tmp_7_fu_1350_p9)
);

fiat_25519_carry_mul_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U67(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(arg2_r_5_reload),
    .din6(tmp_9_fu_1441_p7),
    .dout(tmp_9_fu_1441_p8)
);

fiat_25519_carry_mul_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U68(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(arg2_r_4_reload),
    .din5(tmp_10_fu_1518_p6),
    .dout(tmp_10_fu_1518_p7)
);

fiat_25519_carry_mul_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U69(
    .din0(arg2_r_reload),
    .din1(arg2_r_1_reload),
    .din2(arg2_r_2_reload),
    .din3(arg2_r_3_reload),
    .din4(tmp_12_fu_1607_p5),
    .dout(tmp_12_fu_1607_p6)
);

fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add6572_fu_164 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add6572_fu_164 <= add_ln54_fu_1159_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_12973_fu_168 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_12973_fu_168 <= add_ln54_2_fu_1244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_177_fu_184 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_177_fu_184 <= add_ln54_10_fu_1580_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_178_fu_188 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_178_fu_188 <= add_ln54_12_fu_1662_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_279_fu_192 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_279_fu_192 <= add_ln54_14_fu_1725_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_380_fu_196 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_380_fu_196 <= add_ln54_16_fu_1790_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_1_481_fu_200 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_1_481_fu_200 <= add_ln54_18_fu_1866_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_274_fu_172 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_274_fu_172 <= add_ln54_4_fu_1330_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_375_fu_176 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_375_fu_176 <= add_ln54_6_fu_1414_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add65_476_fu_180 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            add65_476_fu_180 <= add_ln54_8_fu_1498_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_16_fu_572_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i1_fu_204 <= add_ln39_fu_1064_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i1_fu_204 <= 5'd9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_572_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_2158 <= empty_fu_584_p1;
        icmp_ln51_1_reg_2204 <= icmp_ln51_1_fu_719_p2;
        icmp_ln51_2_reg_2231 <= icmp_ln51_2_fu_818_p2;
        icmp_ln51_3_reg_2252 <= icmp_ln51_3_fu_917_p2;
        icmp_ln51_4_reg_2273 <= icmp_ln51_4_fu_1010_p2;
        icmp_ln51_reg_2172 <= icmp_ln51_fu_620_p2;
        icmp_ln53_1_reg_2220 <= icmp_ln53_1_fu_773_p2;
        icmp_ln53_2_reg_2241 <= icmp_ln53_2_fu_872_p2;
        icmp_ln53_3_reg_2262 <= icmp_ln53_3_fu_971_p2;
        icmp_ln53_reg_2188 <= icmp_ln53_fu_674_p2;
        mul_ln52_1_reg_2199 <= mul_ln52_1_fu_494_p2;
        mul_ln52_2_reg_2215 <= mul_ln52_2_fu_478_p2;
        mul_ln52_3_reg_2226 <= mul_ln52_3_fu_499_p2;
        mul_ln52_4_reg_2236 <= mul_ln52_4_fu_482_p2;
        mul_ln52_5_reg_2247 <= mul_ln52_5_fu_504_p2;
        mul_ln52_6_reg_2257 <= mul_ln52_6_fu_486_p2;
        mul_ln52_7_reg_2268 <= mul_ln52_7_fu_509_p2;
        mul_ln52_8_reg_2278 <= mul_ln52_8_fu_490_p2;
        mul_ln52_reg_2183 <= mul_ln52_fu_474_p2;
        tmp_2_reg_2177 <= tmp_2_fu_647_p12;
        tmp_4_reg_2194 <= tmp_4_fu_686_p12;
        tmp_6_reg_2209 <= tmp_6_fu_746_p12;
        tmp_reg_2167 <= tmp_fu_588_p12;
        trunc_ln39_reg_2152 <= trunc_ln39_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i1_1_reg_2138 <= ap_sig_allocacmp_i1_1;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add6572_out_ap_vld = 1'b1;
    end else begin
        add6572_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_12973_out_ap_vld = 1'b1;
    end else begin
        add65_12973_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_177_out_ap_vld = 1'b1;
    end else begin
        add65_177_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_178_out_ap_vld = 1'b1;
    end else begin
        add65_1_178_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_279_out_ap_vld = 1'b1;
    end else begin
        add65_1_279_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_380_out_ap_vld = 1'b1;
    end else begin
        add65_1_380_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_1_481_out_ap_vld = 1'b1;
    end else begin
        add65_1_481_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_274_out_ap_vld = 1'b1;
    end else begin
        add65_274_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_375_out_ap_vld = 1'b1;
    end else begin
        add65_375_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add65_476_out_ap_vld = 1'b1;
    end else begin
        add65_476_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_fu_572_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i1_1 = 5'd9;
    end else begin
        ap_sig_allocacmp_i1_1 = i1_fu_204;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add6572_out = add6572_fu_164;

assign add65_12973_out = add65_12973_fu_168;

assign add65_177_out = add65_177_fu_184;

assign add65_1_178_out = add65_1_178_fu_188;

assign add65_1_279_out = add65_1_279_fu_192;

assign add65_1_380_out = add65_1_380_fu_196;

assign add65_1_481_out = add65_1_481_fu_200;

assign add65_274_out = add65_274_fu_172;

assign add65_375_out = add65_375_fu_176;

assign add65_476_out = add65_476_fu_180;

assign add_ln39_fu_1064_p2 = ($signed(ap_sig_allocacmp_i1_1) + $signed(5'd31));

assign add_ln51_1_fu_713_p2 = (ap_sig_allocacmp_i1_1 + 5'd3);

assign add_ln51_2_fu_911_p2 = (ap_sig_allocacmp_i1_1 + 5'd7);

assign add_ln51_3_fu_1796_p2 = (i1_1_reg_2138 + 5'd9);

assign add_ln51_fu_614_p2 = (ap_sig_allocacmp_i1_1 + 5'd1);

assign add_ln52_1_fu_1420_p2 = (i1_1_reg_2138 + 5'd4);

assign add_ln52_2_fu_1586_p2 = (i1_1_reg_2138 + 5'd6);

assign add_ln52_3_fu_1731_p2 = (i1_1_reg_2138 + 5'd8);

assign add_ln52_fu_1250_p2 = (i1_1_reg_2138 + 5'd2);

assign add_ln54_10_fu_1580_p2 = (add65_177_fu_184 + add_ln54_9_fu_1574_p2);

assign add_ln54_11_fu_1656_p2 = (and_ln54_11_fu_1650_p2 + and_ln54_10_fu_1636_p2);

assign add_ln54_12_fu_1662_p2 = (add65_1_178_fu_188 + add_ln54_11_fu_1656_p2);

assign add_ln54_13_fu_1719_p2 = (and_ln54_12_fu_1700_p2 + and_ln54_13_fu_1713_p2);

assign add_ln54_14_fu_1725_p2 = (add65_1_279_fu_192 + add_ln54_13_fu_1719_p2);

assign add_ln54_15_fu_1784_p2 = (and_ln54_14_fu_1764_p2 + and_ln54_15_fu_1778_p2);

assign add_ln54_16_fu_1790_p2 = (add65_1_380_fu_196 + add_ln54_15_fu_1784_p2);

assign add_ln54_17_fu_1860_p2 = (and_ln54_16_fu_1840_p2 + and_ln54_17_fu_1854_p2);

assign add_ln54_18_fu_1866_p2 = (add65_1_481_fu_200 + add_ln54_17_fu_1860_p2);

assign add_ln54_1_fu_1238_p2 = (and_ln54_1_fu_1232_p2 + and_ln54_fu_1219_p2);

assign add_ln54_2_fu_1244_p2 = (add65_12973_fu_168 + add_ln54_1_fu_1238_p2);

assign add_ln54_3_fu_1324_p2 = (and_ln54_3_fu_1318_p2 + and_ln54_2_fu_1304_p2);

assign add_ln54_4_fu_1330_p2 = (add65_274_fu_172 + add_ln54_3_fu_1324_p2);

assign add_ln54_5_fu_1408_p2 = (and_ln54_5_fu_1402_p2 + and_ln54_4_fu_1389_p2);

assign add_ln54_6_fu_1414_p2 = (add65_375_fu_176 + add_ln54_5_fu_1408_p2);

assign add_ln54_7_fu_1492_p2 = (and_ln54_7_fu_1486_p2 + and_ln54_6_fu_1472_p2);

assign add_ln54_8_fu_1498_p2 = (add65_476_fu_180 + add_ln54_7_fu_1492_p2);

assign add_ln54_9_fu_1574_p2 = (and_ln54_9_fu_1568_p2 + and_ln54_8_fu_1555_p2);

assign add_ln54_fu_1159_p2 = (mul_ln54_fu_398_p2 + add6572_fu_164);

assign and_ln51_1_fu_725_p2 = (icmp_ln51_1_fu_719_p2 & empty_fu_584_p1);

assign and_ln51_2_fu_824_p2 = (icmp_ln51_2_fu_818_p2 & empty_fu_584_p1);

assign and_ln51_3_fu_923_p2 = (icmp_ln51_3_fu_917_p2 & empty_fu_584_p1);

assign and_ln51_4_fu_1016_p2 = (icmp_ln51_4_fu_1010_p2 & empty_fu_584_p1);

assign and_ln51_fu_626_p2 = (icmp_ln51_fu_620_p2 & empty_fu_584_p1);

assign and_ln53_1_fu_1340_p2 = (icmp_ln53_1_reg_2220 & empty_reg_2158);

assign and_ln53_2_fu_1508_p2 = (icmp_ln53_2_reg_2241 & empty_reg_2158);

assign and_ln53_3_fu_1672_p2 = (icmp_ln53_3_reg_2262 & empty_reg_2158);

assign and_ln53_4_fu_1811_p2 = (icmp_ln53_4_fu_1805_p2 & empty_reg_2158);

assign and_ln53_fu_1169_p2 = (icmp_ln53_reg_2188 & empty_reg_2158);

assign and_ln54_10_fu_1636_p2 = (select_ln54_15_fu_1628_p3 & mul_ln54_11_fu_442_p2);

assign and_ln54_11_fu_1650_p2 = (select_ln54_16_fu_1642_p3 & mul_ln54_12_fu_446_p2);

assign and_ln54_12_fu_1700_p2 = (select_ln54_17_fu_1693_p3 & mul_ln54_13_fu_450_p2);

assign and_ln54_13_fu_1713_p2 = (select_ln54_18_fu_1706_p3 & mul_ln54_14_fu_454_p2);

assign and_ln54_14_fu_1764_p2 = (select_ln54_19_fu_1756_p3 & mul_ln54_15_fu_458_p2);

assign and_ln54_15_fu_1778_p2 = (select_ln54_20_fu_1770_p3 & mul_ln54_16_fu_462_p2);

assign and_ln54_16_fu_1840_p2 = (select_ln54_21_fu_1833_p3 & mul_ln54_17_fu_466_p2);

assign and_ln54_17_fu_1854_p2 = (select_ln54_22_fu_1846_p3 & mul_ln54_18_fu_470_p2);

assign and_ln54_1_fu_1232_p2 = (select_ln54_6_fu_1225_p3 & mul_ln54_2_fu_406_p2);

assign and_ln54_2_fu_1304_p2 = (select_ln54_7_fu_1296_p3 & mul_ln54_3_fu_410_p2);

assign and_ln54_3_fu_1318_p2 = (select_ln54_8_fu_1310_p3 & mul_ln54_4_fu_414_p2);

assign and_ln54_4_fu_1389_p2 = (select_ln54_9_fu_1382_p3 & mul_ln54_5_fu_418_p2);

assign and_ln54_5_fu_1402_p2 = (select_ln54_10_fu_1395_p3 & mul_ln54_6_fu_422_p2);

assign and_ln54_6_fu_1472_p2 = (select_ln54_11_fu_1464_p3 & mul_ln54_7_fu_426_p2);

assign and_ln54_7_fu_1486_p2 = (select_ln54_12_fu_1478_p3 & mul_ln54_8_fu_430_p2);

assign and_ln54_8_fu_1555_p2 = (select_ln54_13_fu_1548_p3 & mul_ln54_9_fu_434_p2);

assign and_ln54_9_fu_1568_p2 = (select_ln54_14_fu_1561_p3 & mul_ln54_10_fu_438_p2);

assign and_ln54_fu_1219_p2 = (select_ln54_5_fu_1212_p3 & mul_ln54_1_fu_402_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_22_fu_812_p2 = (ap_sig_allocacmp_i1_1 + 5'd5);

assign empty_fu_584_p1 = ap_sig_allocacmp_i1_1[0:0];

assign icmp_ln51_1_fu_719_p2 = (($signed(add_ln51_1_fu_713_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_818_p2 = (($signed(empty_22_fu_812_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln51_3_fu_917_p2 = ((add_ln51_2_fu_911_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln51_4_fu_1010_p2 = (($signed(ap_sig_allocacmp_i1_1) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_620_p2 = (($signed(add_ln51_fu_614_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_1429_p2 = (($signed(add_ln52_1_fu_1420_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_1595_p2 = (($signed(add_ln52_2_fu_1586_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_1740_p2 = ((add_ln52_3_fu_1731_p2 > 5'd9) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1259_p2 = (($signed(add_ln52_fu_1250_p2) > $signed(5'd9)) ? 1'b1 : 1'b0);

assign icmp_ln53_1_fu_773_p2 = (($signed(add_ln51_1_fu_713_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln53_2_fu_872_p2 = (($signed(empty_22_fu_812_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln53_3_fu_971_p2 = ((add_ln51_2_fu_911_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln53_4_fu_1805_p2 = ((add_ln51_3_fu_1796_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_674_p2 = (($signed(add_ln51_fu_614_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1458_p2 = (($signed(add_ln52_1_fu_1420_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1622_p2 = (($signed(add_ln52_2_fu_1586_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign icmp_ln54_3_fu_1750_p2 = ((add_ln52_3_fu_1731_p2 < 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1290_p2 = (($signed(add_ln52_fu_1250_p2) < $signed(5'd10)) ? 1'b1 : 1'b0);

assign mul_ln52_1_fu_494_p1 = 32'd19;

assign mul_ln52_2_fu_478_p1 = mul_ln52_2_fu_478_p10;

assign mul_ln52_2_fu_478_p10 = ((and_ln51_1_fu_725_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_3_fu_499_p1 = 32'd19;

assign mul_ln52_4_fu_482_p1 = mul_ln52_4_fu_482_p10;

assign mul_ln52_4_fu_482_p10 = ((and_ln51_2_fu_824_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_5_fu_504_p1 = 32'd19;

assign mul_ln52_6_fu_486_p1 = mul_ln52_6_fu_486_p10;

assign mul_ln52_6_fu_486_p10 = ((and_ln51_3_fu_923_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_7_fu_509_p1 = 32'd19;

assign mul_ln52_8_fu_490_p1 = mul_ln52_8_fu_490_p10;

assign mul_ln52_8_fu_490_p10 = ((and_ln51_4_fu_1016_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln52_fu_474_p1 = mul_ln52_fu_474_p10;

assign mul_ln52_fu_474_p10 = ((and_ln51_fu_626_p2[0:0] == 1'b1) ? 32'd38 : 32'd19);

assign mul_ln54_10_fu_438_p0 = mul_ln54_10_fu_438_p00;

assign mul_ln54_10_fu_438_p00 = select_ln54_2_fu_1535_p3;

assign mul_ln54_10_fu_438_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_11_fu_442_p0 = mul_ln54_11_fu_442_p00;

assign mul_ln54_11_fu_442_p00 = mul_ln52_5_reg_2247;

assign mul_ln54_11_fu_442_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_12_fu_446_p0 = mul_ln54_12_fu_446_p00;

assign mul_ln54_12_fu_446_p00 = tmp_12_fu_1607_p6;

assign mul_ln54_12_fu_446_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_13_fu_450_p0 = mul_ln54_13_fu_450_p00;

assign mul_ln54_13_fu_450_p00 = mul_ln52_6_reg_2257;

assign mul_ln54_13_fu_450_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_14_fu_454_p0 = mul_ln54_14_fu_454_p00;

assign mul_ln54_14_fu_454_p00 = select_ln54_3_fu_1681_p3;

assign mul_ln54_14_fu_454_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_15_fu_458_p0 = mul_ln54_15_fu_458_p00;

assign mul_ln54_15_fu_458_p00 = mul_ln52_7_reg_2268;

assign mul_ln54_15_fu_458_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_16_fu_462_p0 = mul_ln54_16_fu_462_p00;

assign mul_ln54_16_fu_462_p00 = $unsigned(tmp_4_reg_2194);

assign mul_ln54_16_fu_462_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_17_fu_466_p0 = mul_ln54_17_fu_466_p00;

assign mul_ln54_17_fu_466_p00 = mul_ln52_8_reg_2278;

assign mul_ln54_17_fu_466_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_18_fu_470_p0 = mul_ln54_18_fu_470_p00;

assign mul_ln54_18_fu_470_p00 = select_ln54_4_fu_1821_p3;

assign mul_ln54_18_fu_470_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_1_fu_402_p0 = mul_ln54_1_fu_402_p00;

assign mul_ln54_1_fu_402_p00 = mul_ln52_reg_2183;

assign mul_ln54_1_fu_402_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_2_fu_406_p0 = mul_ln54_2_fu_406_p00;

assign mul_ln54_2_fu_406_p00 = select_ln54_fu_1199_p3;

assign mul_ln54_2_fu_406_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_3_fu_410_p0 = mul_ln54_3_fu_410_p00;

assign mul_ln54_3_fu_410_p00 = mul_ln52_1_reg_2199;

assign mul_ln54_3_fu_410_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_4_fu_414_p0 = mul_ln54_4_fu_414_p00;

assign mul_ln54_4_fu_414_p00 = tmp_5_fu_1271_p10;

assign mul_ln54_4_fu_414_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_5_fu_418_p0 = mul_ln54_5_fu_418_p00;

assign mul_ln54_5_fu_418_p00 = mul_ln52_2_reg_2215;

assign mul_ln54_5_fu_418_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_6_fu_422_p0 = mul_ln54_6_fu_422_p00;

assign mul_ln54_6_fu_422_p00 = select_ln54_1_fu_1369_p3;

assign mul_ln54_6_fu_422_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_7_fu_426_p0 = mul_ln54_7_fu_426_p00;

assign mul_ln54_7_fu_426_p00 = mul_ln52_3_reg_2226;

assign mul_ln54_7_fu_426_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_8_fu_430_p0 = mul_ln54_8_fu_430_p00;

assign mul_ln54_8_fu_430_p00 = tmp_9_fu_1441_p8;

assign mul_ln54_8_fu_430_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_9_fu_434_p0 = mul_ln54_9_fu_434_p00;

assign mul_ln54_9_fu_434_p00 = mul_ln52_4_reg_2236;

assign mul_ln54_9_fu_434_p1 = zext_ln52_fu_1111_p1;

assign mul_ln54_fu_398_p0 = mul_ln54_fu_398_p00;

assign mul_ln54_fu_398_p00 = tmp_1_fu_1138_p12;

assign mul_ln54_fu_398_p1 = zext_ln52_fu_1111_p1;

assign select_ln54_10_fu_1395_p3 = ((icmp_ln53_1_reg_2220[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_11_fu_1464_p3 = ((icmp_ln52_1_fu_1429_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_12_fu_1478_p3 = ((icmp_ln54_1_fu_1458_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_13_fu_1548_p3 = ((icmp_ln51_2_reg_2231[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_14_fu_1561_p3 = ((icmp_ln53_2_reg_2241[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_15_fu_1628_p3 = ((icmp_ln52_2_fu_1595_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_16_fu_1642_p3 = ((icmp_ln54_2_fu_1622_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_17_fu_1693_p3 = ((icmp_ln51_3_reg_2252[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_18_fu_1706_p3 = ((icmp_ln53_3_reg_2262[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_19_fu_1756_p3 = ((icmp_ln52_3_fu_1740_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_1_fu_1369_p3 = ((and_ln53_1_fu_1340_p2[0:0] == 1'b1) ? shl_ln54_1_fu_1363_p2 : tmp_7_fu_1350_p9);

assign select_ln54_20_fu_1770_p3 = ((icmp_ln54_3_fu_1750_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_21_fu_1833_p3 = ((icmp_ln51_4_reg_2273[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_22_fu_1846_p3 = ((icmp_ln53_4_fu_1805_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_2_fu_1535_p3 = ((and_ln53_2_fu_1508_p2[0:0] == 1'b1) ? shl_ln54_2_fu_1529_p2 : tmp_10_fu_1518_p7);

assign select_ln54_3_fu_1681_p3 = ((and_ln53_3_fu_1672_p2[0:0] == 1'b1) ? shl_ln54_3_fu_1676_p2 : tmp_2_reg_2177);

assign select_ln54_4_fu_1821_p3 = ((and_ln53_4_fu_1811_p2[0:0] == 1'b1) ? shl_ln54_4_fu_1816_p2 : tmp_6_reg_2209);

assign select_ln54_5_fu_1212_p3 = ((icmp_ln51_reg_2172[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_6_fu_1225_p3 = ((icmp_ln53_reg_2188[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_7_fu_1296_p3 = ((icmp_ln52_fu_1259_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_8_fu_1310_p3 = ((icmp_ln54_fu_1290_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_9_fu_1382_p3 = ((icmp_ln51_1_reg_2204[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln54_fu_1199_p3 = ((and_ln53_fu_1169_p2[0:0] == 1'b1) ? shl_ln54_fu_1193_p2 : tmp_3_fu_1178_p11);

assign shl_ln54_1_fu_1363_p2 = tmp_7_fu_1350_p9 << 32'd1;

assign shl_ln54_2_fu_1529_p2 = tmp_10_fu_1518_p7 << 32'd1;

assign shl_ln54_3_fu_1676_p2 = tmp_2_reg_2177 << 32'd1;

assign shl_ln54_4_fu_1816_p2 = tmp_6_reg_2209 << 32'd1;

assign shl_ln54_fu_1193_p2 = tmp_3_fu_1178_p11 << 32'd1;

assign tmp_10_fu_1518_p6 = ($signed(3'd4) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_11_fu_884_p11 = ($signed(4'd13) - $signed(trunc_ln39_fu_580_p1));

assign tmp_12_fu_1607_p5 = (trunc_ln39_1_fu_1105_p1 ^ 2'd3);

assign tmp_13_fu_944_p11 = ($signed(4'd12) - $signed(trunc_ln39_fu_580_p1));

assign tmp_14_fu_983_p11 = ($signed(4'd11) - $signed(trunc_ln39_fu_580_p1));

assign tmp_15_fu_1037_p11 = ($signed(4'd10) - $signed(trunc_ln39_fu_580_p1));

assign tmp_16_fu_572_p3 = ap_sig_allocacmp_i1_1[32'd4];

assign tmp_1_fu_1138_p11 = ($signed(4'd9) - $signed(trunc_ln39_reg_2152));

assign tmp_2_fu_647_p11 = (4'd2 - trunc_ln39_fu_580_p1);

assign tmp_3_fu_1178_p10 = ($signed(4'd8) - $signed(trunc_ln39_reg_2152));

assign tmp_4_fu_686_p11 = (4'd1 - trunc_ln39_fu_580_p1);

assign tmp_5_fu_1271_p9 = (trunc_ln39_2_fu_1108_p1 ^ 3'd7);

assign tmp_6_fu_746_p11 = (4'd0 - trunc_ln39_fu_580_p1);

assign tmp_7_fu_1350_p8 = ($signed(3'd6) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_8_fu_785_p11 = (trunc_ln39_fu_580_p1 ^ 4'd15);

assign tmp_9_fu_1441_p7 = ($signed(3'd5) - $signed(trunc_ln39_2_fu_1108_p1));

assign tmp_s_fu_845_p11 = ($signed(4'd14) - $signed(trunc_ln39_fu_580_p1));

assign trunc_ln39_1_fu_1105_p1 = i1_1_reg_2138[1:0];

assign trunc_ln39_2_fu_1108_p1 = i1_1_reg_2138[2:0];

assign trunc_ln39_fu_580_p1 = ap_sig_allocacmp_i1_1[3:0];

assign zext_ln52_fu_1111_p1 = tmp_reg_2167;

endmodule //fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1
