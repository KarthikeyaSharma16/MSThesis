-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add65_9109_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_9109_out_ap_vld : OUT STD_LOGIC;
    add65_8108_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_8108_out_ap_vld : OUT STD_LOGIC;
    add65_7107_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_7107_out_ap_vld : OUT STD_LOGIC;
    add65_6106_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_6106_out_ap_vld : OUT STD_LOGIC;
    add65_5105_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_5105_out_ap_vld : OUT STD_LOGIC;
    add65_4104_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_4104_out_ap_vld : OUT STD_LOGIC;
    add65_3103_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_3103_out_ap_vld : OUT STD_LOGIC;
    add65_2102_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_2102_out_ap_vld : OUT STD_LOGIC;
    add65_1101_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_1101_out_ap_vld : OUT STD_LOGIC;
    add65100_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65100_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_17_fu_661_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i1_1_reg_2374 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln39_fu_669_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln39_reg_2386 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln39_2_fu_673_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln39_2_reg_2391 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_677_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2397 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_703_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_2402 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_735_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_2407 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_2412 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_789_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_2417 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_reg_2424 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_2429 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln54_2_fu_823_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln54_2_reg_2435 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_835_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_2440 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_1_fu_558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_1_reg_2445 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_2_fu_563_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_2_reg_2450 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_1_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_1_reg_2455 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_3_fu_546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_3_reg_2460 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_1_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_1_reg_2465 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln54_3_fu_923_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln54_3_reg_2471 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln52_4_fu_568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_4_reg_2476 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_5_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_5_reg_2481 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_2_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_2_reg_2486 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_6_fu_550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_reg_2491 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_2_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_2_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_7_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_7_reg_2502 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_8_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_8_reg_2507 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_3_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_3_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_9_fu_554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_9_reg_2517 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_3_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_3_reg_2522 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_10_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_10_reg_2528 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_11_fu_593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_11_reg_2533 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_12_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_12_reg_2538 : STD_LOGIC_VECTOR (31 downto 0);
    signal add65100_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_1_fu_1272_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal add65_1101_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_4_fu_1351_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_2102_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_8_fu_1470_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_3103_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_12_fu_1565_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_4104_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_16_fu_1682_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_5105_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_20_fu_1782_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_6106_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_24_fu_1898_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_7107_fu_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_28_fu_1980_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_8108_fu_196 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_32_fu_2079_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_9109_fu_200 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_35_fu_2113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_204 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln39_fu_1150_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i1_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln54_fu_398_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_1_fu_402_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_1_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_1_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_2_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_2_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_3_fu_410_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_3_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_4_fu_414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_4_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_6_fu_422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_3_fu_1391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_6_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_7_fu_426_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_7_fu_426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_8_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_3_fu_1362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_8_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_11_fu_442_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_11_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_12_fu_446_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_12_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_14_fu_454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_6_fu_1603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_14_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_15_fu_458_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_15_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_16_fu_462_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_6_fu_1576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_16_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_18_fu_470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_18_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_19_fu_474_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_19_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_20_fu_478_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_20_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_21_fu_482_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_21_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_22_fu_486_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_9_fu_1819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_22_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_23_fu_490_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_23_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_24_fu_494_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_9_fu_1793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_24_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_25_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_25_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_26_fu_502_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_26_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_27_fu_506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_27_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_28_fu_510_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_28_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_29_fu_514_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_29_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_30_fu_518_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln54_12_fu_2002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_30_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_31_fu_522_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_31_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_32_fu_526_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_12_fu_1991_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_32_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_33_fu_530_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_33_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_34_fu_534_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_34_fu_534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_35_fu_538_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_35_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_542_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_889_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_3_fu_546_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_989_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_fu_550_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_fu_1083_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_9_fu_554_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln52_1_fu_558_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln52_2_fu_563_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_935_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_4_fu_568_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln52_5_fu_573_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_1029_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_7_fu_578_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln52_8_fu_583_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_fu_1123_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_10_fu_588_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln52_11_fu_593_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln52_12_fu_598_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_735_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_762_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_789_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_835_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_23_fu_862_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_889_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_935_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_25_fu_962_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_989_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_1029_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_27_fu_1056_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_fu_1083_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_1123_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_1220_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_1220_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_1_fu_402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_fu_398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_fu_1266_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1282_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln54_fu_1295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_fu_1301_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_2_fu_406_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_4_fu_1313_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_3_fu_410_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_5_fu_1326_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_fu_1320_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_1_fu_1333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_2_fu_1339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_4_fu_414_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_3_fu_1345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_22_fu_1357_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_1378_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_1378_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_6_fu_422_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_6_fu_1418_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_7_fu_426_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln52_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_8_fu_430_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_7_fu_1438_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_2_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_4_fu_1432_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_3_fu_1426_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_5_fu_1446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_6_fu_1458_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_5_fu_1452_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_7_fu_1464_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1480_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln54_1_fu_1491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_1_fu_1497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_10_fu_438_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_8_fu_1515_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_11_fu_442_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_12_fu_446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_9_fu_1534_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_6_fu_1509_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_8_fu_1528_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_9_fu_1541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_7_fu_1522_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_10_fu_1553_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_9_fu_1547_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_11_fu_1559_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_24_fu_1571_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_1592_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_1592_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_1_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_14_fu_454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_10_fu_1630_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_15_fu_458_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln52_1_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_16_fu_462_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_11_fu_1650_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_10_fu_1624_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_12_fu_1644_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_11_fu_1638_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_13_fu_1658_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_14_fu_1670_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_13_fu_1664_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_15_fu_1676_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln39_1_fu_1191_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1698_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1698_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln54_2_fu_1708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_2_fu_1714_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_18_fu_470_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_12_fu_1732_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_19_fu_474_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_20_fu_478_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_13_fu_1751_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_14_fu_1726_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_16_fu_1745_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_17_fu_1758_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_15_fu_1739_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_18_fu_1770_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_17_fu_1764_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_19_fu_1776_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_26_fu_1788_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_1810_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1810_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_21_fu_482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_2_fu_1825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_22_fu_486_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_14_fu_1846_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_23_fu_490_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln52_2_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_24_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_15_fu_1866_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_18_fu_1840_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_20_fu_1860_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_19_fu_1854_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_21_fu_1874_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_22_fu_1886_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_21_fu_1880_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_23_fu_1892_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln54_3_fu_1908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_3_fu_1913_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_25_fu_498_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_26_fu_502_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_16_fu_1930_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_27_fu_506_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_28_fu_510_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_17_fu_1949_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_23_fu_1937_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_22_fu_1924_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_24_fu_1943_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_25_fu_1956_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_26_fu_1968_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_25_fu_1962_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_27_fu_1974_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_28_fu_1986_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln54_29_fu_514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_3_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_30_fu_518_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_18_fu_2027_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_31_fu_522_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln52_3_fu_1996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_32_fu_526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_19_fu_2047_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_26_fu_2021_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_27_fu_2035_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_28_fu_2041_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_29_fu_2055_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_30_fu_2067_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_29_fu_2061_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_31_fu_2073_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_33_fu_530_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_34_fu_534_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_30_fu_2089_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_31_fu_2095_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_33_fu_2101_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_35_fu_538_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_34_fu_2107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln52_3_fu_546_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_fu_550_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_9_fu_554_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_542_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_12_fu_446_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_13_fu_450_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_15_fu_458_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_18_fu_470_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_1_fu_402_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_20_fu_478_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_21_fu_482_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_23_fu_490_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_26_fu_502_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_28_fu_510_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_29_fu_514_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_2_fu_406_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_31_fu_522_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_35_fu_538_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_3_fu_410_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_5_fu_418_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_7_fu_426_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_6ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_7_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_6_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_5_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_3_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_fu_398_p0,
        din1 => mul_ln54_fu_398_p1,
        dout => mul_ln54_fu_398_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_1_fu_402_p0,
        din1 => mul_ln54_1_fu_402_p1,
        dout => mul_ln54_1_fu_402_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_2_fu_406_p0,
        din1 => mul_ln54_2_fu_406_p1,
        dout => mul_ln54_2_fu_406_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_3_fu_410_p0,
        din1 => mul_ln54_3_fu_410_p1,
        dout => mul_ln54_3_fu_410_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_4_fu_414_p0,
        din1 => mul_ln54_4_fu_414_p1,
        dout => mul_ln54_4_fu_414_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_5_fu_418_p0,
        din1 => mul_ln54_5_fu_418_p1,
        dout => mul_ln54_5_fu_418_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_6_fu_422_p0,
        din1 => mul_ln54_6_fu_422_p1,
        dout => mul_ln54_6_fu_422_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_7_fu_426_p0,
        din1 => mul_ln54_7_fu_426_p1,
        dout => mul_ln54_7_fu_426_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_8_fu_430_p0,
        din1 => mul_ln54_8_fu_430_p1,
        dout => mul_ln54_8_fu_430_p2);

    mul_32ns_32ns_64_1_1_U34 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_9_fu_434_p0,
        din1 => mul_ln54_9_fu_434_p1,
        dout => mul_ln54_9_fu_434_p2);

    mul_32ns_32ns_64_1_1_U35 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_10_fu_438_p0,
        din1 => mul_ln54_10_fu_438_p1,
        dout => mul_ln54_10_fu_438_p2);

    mul_32ns_32ns_64_1_1_U36 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_11_fu_442_p0,
        din1 => mul_ln54_11_fu_442_p1,
        dout => mul_ln54_11_fu_442_p2);

    mul_32ns_32ns_64_1_1_U37 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_12_fu_446_p0,
        din1 => mul_ln54_12_fu_446_p1,
        dout => mul_ln54_12_fu_446_p2);

    mul_32ns_32ns_64_1_1_U38 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_13_fu_450_p0,
        din1 => mul_ln54_13_fu_450_p1,
        dout => mul_ln54_13_fu_450_p2);

    mul_32ns_32ns_64_1_1_U39 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_14_fu_454_p0,
        din1 => mul_ln54_14_fu_454_p1,
        dout => mul_ln54_14_fu_454_p2);

    mul_32ns_32ns_64_1_1_U40 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_15_fu_458_p0,
        din1 => mul_ln54_15_fu_458_p1,
        dout => mul_ln54_15_fu_458_p2);

    mul_32ns_32ns_64_1_1_U41 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_16_fu_462_p0,
        din1 => mul_ln54_16_fu_462_p1,
        dout => mul_ln54_16_fu_462_p2);

    mul_32ns_32ns_64_1_1_U42 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_17_fu_466_p0,
        din1 => mul_ln54_17_fu_466_p1,
        dout => mul_ln54_17_fu_466_p2);

    mul_32ns_32ns_64_1_1_U43 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_18_fu_470_p0,
        din1 => mul_ln54_18_fu_470_p1,
        dout => mul_ln54_18_fu_470_p2);

    mul_32ns_32ns_64_1_1_U44 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_19_fu_474_p0,
        din1 => mul_ln54_19_fu_474_p1,
        dout => mul_ln54_19_fu_474_p2);

    mul_32ns_32ns_64_1_1_U45 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_20_fu_478_p0,
        din1 => mul_ln54_20_fu_478_p1,
        dout => mul_ln54_20_fu_478_p2);

    mul_32ns_32ns_64_1_1_U46 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_21_fu_482_p0,
        din1 => mul_ln54_21_fu_482_p1,
        dout => mul_ln54_21_fu_482_p2);

    mul_32ns_32ns_64_1_1_U47 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_22_fu_486_p0,
        din1 => mul_ln54_22_fu_486_p1,
        dout => mul_ln54_22_fu_486_p2);

    mul_32ns_32ns_64_1_1_U48 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_23_fu_490_p0,
        din1 => mul_ln54_23_fu_490_p1,
        dout => mul_ln54_23_fu_490_p2);

    mul_32ns_32ns_64_1_1_U49 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_24_fu_494_p0,
        din1 => mul_ln54_24_fu_494_p1,
        dout => mul_ln54_24_fu_494_p2);

    mul_32ns_32ns_64_1_1_U50 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_25_fu_498_p0,
        din1 => mul_ln54_25_fu_498_p1,
        dout => mul_ln54_25_fu_498_p2);

    mul_32ns_32ns_64_1_1_U51 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_26_fu_502_p0,
        din1 => mul_ln54_26_fu_502_p1,
        dout => mul_ln54_26_fu_502_p2);

    mul_32ns_32ns_64_1_1_U52 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_27_fu_506_p0,
        din1 => mul_ln54_27_fu_506_p1,
        dout => mul_ln54_27_fu_506_p2);

    mul_32ns_32ns_64_1_1_U53 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_28_fu_510_p0,
        din1 => mul_ln54_28_fu_510_p1,
        dout => mul_ln54_28_fu_510_p2);

    mul_32ns_32ns_64_1_1_U54 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_29_fu_514_p0,
        din1 => mul_ln54_29_fu_514_p1,
        dout => mul_ln54_29_fu_514_p2);

    mul_32ns_32ns_64_1_1_U55 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_30_fu_518_p0,
        din1 => mul_ln54_30_fu_518_p1,
        dout => mul_ln54_30_fu_518_p2);

    mul_32ns_32ns_64_1_1_U56 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_31_fu_522_p0,
        din1 => mul_ln54_31_fu_522_p1,
        dout => mul_ln54_31_fu_522_p2);

    mul_32ns_32ns_64_1_1_U57 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_32_fu_526_p0,
        din1 => mul_ln54_32_fu_526_p1,
        dout => mul_ln54_32_fu_526_p2);

    mul_32ns_32ns_64_1_1_U58 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_33_fu_530_p0,
        din1 => mul_ln54_33_fu_530_p1,
        dout => mul_ln54_33_fu_530_p2);

    mul_32ns_32ns_64_1_1_U59 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_34_fu_534_p0,
        din1 => mul_ln54_34_fu_534_p1,
        dout => mul_ln54_34_fu_534_p2);

    mul_32ns_32ns_64_1_1_U60 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_35_fu_538_p0,
        din1 => mul_ln54_35_fu_538_p1,
        dout => mul_ln54_35_fu_538_p2);

    mul_32s_7s_32_1_1_U61 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_4_fu_789_p12,
        din1 => mul_ln52_fu_542_p1,
        dout => mul_ln52_fu_542_p2);

    mul_32s_7s_32_1_1_U62 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_889_p12,
        din1 => mul_ln52_3_fu_546_p1,
        dout => mul_ln52_3_fu_546_p2);

    mul_32s_7s_32_1_1_U63 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_fu_989_p12,
        din1 => mul_ln52_6_fu_550_p1,
        dout => mul_ln52_6_fu_550_p2);

    mul_32s_7s_32_1_1_U64 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_15_fu_1083_p12,
        din1 => mul_ln52_9_fu_554_p1,
        dout => mul_ln52_9_fu_554_p2);

    mul_32s_6ns_32_1_1_U65 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_835_p12,
        din1 => mul_ln52_1_fu_558_p1,
        dout => mul_ln52_1_fu_558_p2);

    mul_32s_6ns_32_1_1_U66 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_4_fu_789_p12,
        din1 => mul_ln52_2_fu_563_p1,
        dout => mul_ln52_2_fu_563_p2);

    mul_32s_6ns_32_1_1_U67 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_s_fu_935_p12,
        din1 => mul_ln52_4_fu_568_p1,
        dout => mul_ln52_4_fu_568_p2);

    mul_32s_6ns_32_1_1_U68 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_889_p12,
        din1 => mul_ln52_5_fu_573_p1,
        dout => mul_ln52_5_fu_573_p2);

    mul_32s_6ns_32_1_1_U69 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_13_fu_1029_p12,
        din1 => mul_ln52_7_fu_578_p1,
        dout => mul_ln52_7_fu_578_p2);

    mul_32s_6ns_32_1_1_U70 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_fu_989_p12,
        din1 => mul_ln52_8_fu_583_p1,
        dout => mul_ln52_8_fu_583_p2);

    mul_32s_6ns_32_1_1_U71 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_16_fu_1123_p12,
        din1 => mul_ln52_10_fu_588_p1,
        dout => mul_ln52_10_fu_588_p2);

    mul_32s_6ns_32_1_1_U72 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_15_fu_1083_p12,
        din1 => mul_ln52_11_fu_593_p1,
        dout => mul_ln52_11_fu_593_p2);

    mul_32s_7ns_32_1_1_U73 : component fiat_25519_carry_mul_mul_32s_7ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_3_fu_735_p12,
        din1 => mul_ln52_12_fu_598_p1,
        dout => mul_ln52_12_fu_598_p2);

    mux_10_4_32_1_1_U74 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg1_r_1_reload,
        din2 => arg1_r_2_reload,
        din3 => arg1_r_3_reload,
        din4 => arg1_r_4_reload,
        din5 => arg1_r_5_reload,
        din6 => arg1_r_6_reload,
        din7 => arg1_r_7_reload,
        din8 => arg1_r_8_reload,
        din9 => arg1_r_9_reload,
        din10 => trunc_ln39_fu_669_p1,
        dout => tmp_fu_677_p12);

    mux_10_4_32_1_1_U75 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg1_r_reload,
        din2 => arg1_r_1_reload,
        din3 => arg1_r_2_reload,
        din4 => arg1_r_3_reload,
        din5 => arg1_r_4_reload,
        din6 => arg1_r_5_reload,
        din7 => arg1_r_6_reload,
        din8 => arg1_r_7_reload,
        din9 => arg1_r_8_reload,
        din10 => trunc_ln39_fu_669_p1,
        dout => tmp_2_fu_703_p12);

    mux_10_4_32_1_1_U76 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_3_fu_735_p11,
        dout => tmp_3_fu_735_p12);

    mux_10_4_32_1_1_U77 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_4_fu_789_p11,
        dout => tmp_4_fu_789_p12);

    mux_10_4_32_1_1_U78 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_6_fu_835_p11,
        dout => tmp_6_fu_835_p12);

    mux_10_4_32_1_1_U79 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_8_fu_889_p11,
        dout => tmp_8_fu_889_p12);

    mux_10_4_32_1_1_U80 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_s_fu_935_p11,
        dout => tmp_s_fu_935_p12);

    mux_10_4_32_1_1_U81 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_11_fu_989_p11,
        dout => tmp_11_fu_989_p12);

    mux_10_4_32_1_1_U82 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_13_fu_1029_p11,
        dout => tmp_13_fu_1029_p12);

    mux_10_4_32_1_1_U83 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_15_fu_1083_p11,
        dout => tmp_15_fu_1083_p12);

    mux_10_4_32_1_1_U84 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_16_fu_1123_p11,
        dout => tmp_16_fu_1123_p12);

    mux_9_4_32_1_1_U85 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => tmp_1_fu_1220_p10,
        dout => tmp_1_fu_1220_p11);

    mux_8_3_32_1_1_U86 : component fiat_25519_carry_mul_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => sub_ln54_2_reg_2435,
        dout => tmp_5_fu_1282_p10);

    mux_7_3_32_1_1_U87 : component fiat_25519_carry_mul_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => tmp_7_fu_1378_p8,
        dout => tmp_7_fu_1378_p9);

    mux_6_3_32_1_1_U88 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => sub_ln54_3_reg_2471,
        dout => tmp_9_fu_1480_p8);

    mux_5_3_32_1_1_U89 : component fiat_25519_carry_mul_mux_5_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => tmp_10_fu_1592_p6,
        dout => tmp_10_fu_1592_p7);

    mux_4_2_32_1_1_U90 : component fiat_25519_carry_mul_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => tmp_12_fu_1698_p5,
        dout => tmp_12_fu_1698_p6);

    mux_3_2_32_1_1_U91 : component fiat_25519_carry_mul_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => tmp_14_fu_1810_p4,
        dout => tmp_14_fu_1810_p5);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    add65100_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65100_fu_164 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65100_fu_164 <= add_ln54_1_fu_1272_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_1101_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_1101_fu_168 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_1101_fu_168 <= add_ln54_4_fu_1351_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_2102_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_2102_fu_172 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_2102_fu_172 <= add_ln54_8_fu_1470_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_3103_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_3103_fu_176 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_3103_fu_176 <= add_ln54_12_fu_1565_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_4104_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_4104_fu_180 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_4104_fu_180 <= add_ln54_16_fu_1682_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_5105_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_5105_fu_184 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_5105_fu_184 <= add_ln54_20_fu_1782_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_6106_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_6106_fu_188 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_6106_fu_188 <= add_ln54_24_fu_1898_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_7107_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_7107_fu_192 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_7107_fu_192 <= add_ln54_28_fu_1980_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_8108_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_8108_fu_196 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_8108_fu_196 <= add_ln54_32_fu_2079_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_9109_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_9109_fu_200 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_9109_fu_200 <= add_ln54_35_fu_2113_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_17_fu_661_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_204 <= add_ln39_fu_1150_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_204 <= ap_const_lv5_9;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i1_1_reg_2374 <= ap_sig_allocacmp_i1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_17_fu_661_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln51_1_reg_2455 <= icmp_ln51_1_fu_868_p2;
                icmp_ln51_2_reg_2486 <= icmp_ln51_2_fu_968_p2;
                icmp_ln51_3_reg_2512 <= icmp_ln51_3_fu_1062_p2;
                icmp_ln51_reg_2412 <= icmp_ln51_fu_768_p2;
                icmp_ln53_1_reg_2465 <= icmp_ln53_1_fu_917_p2;
                icmp_ln53_2_reg_2496 <= icmp_ln53_2_fu_1017_p2;
                icmp_ln53_3_reg_2522 <= icmp_ln53_3_fu_1111_p2;
                icmp_ln53_reg_2429 <= icmp_ln53_fu_817_p2;
                mul_ln52_10_reg_2528 <= mul_ln52_10_fu_588_p2;
                mul_ln52_11_reg_2533 <= mul_ln52_11_fu_593_p2;
                mul_ln52_12_reg_2538 <= mul_ln52_12_fu_598_p2;
                mul_ln52_1_reg_2445 <= mul_ln52_1_fu_558_p2;
                mul_ln52_2_reg_2450 <= mul_ln52_2_fu_563_p2;
                mul_ln52_3_reg_2460 <= mul_ln52_3_fu_546_p2;
                mul_ln52_4_reg_2476 <= mul_ln52_4_fu_568_p2;
                mul_ln52_5_reg_2481 <= mul_ln52_5_fu_573_p2;
                mul_ln52_6_reg_2491 <= mul_ln52_6_fu_550_p2;
                mul_ln52_7_reg_2502 <= mul_ln52_7_fu_578_p2;
                mul_ln52_8_reg_2507 <= mul_ln52_8_fu_583_p2;
                mul_ln52_9_reg_2517 <= mul_ln52_9_fu_554_p2;
                mul_ln52_reg_2424 <= mul_ln52_fu_542_p2;
                sub_ln54_2_reg_2435 <= sub_ln54_2_fu_823_p2;
                sub_ln54_3_reg_2471 <= sub_ln54_3_fu_923_p2;
                tmp_2_reg_2402 <= tmp_2_fu_703_p12;
                tmp_3_reg_2407 <= tmp_3_fu_735_p12;
                tmp_4_reg_2417 <= tmp_4_fu_789_p12;
                tmp_6_reg_2440 <= tmp_6_fu_835_p12;
                tmp_reg_2397 <= tmp_fu_677_p12;
                trunc_ln39_2_reg_2391 <= trunc_ln39_2_fu_673_p1;
                trunc_ln39_reg_2386 <= trunc_ln39_fu_669_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add65100_out <= add65100_fu_164;

    add65100_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65100_out_ap_vld <= ap_const_logic_1;
        else 
            add65100_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_1101_out <= add65_1101_fu_168;

    add65_1101_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_1101_out_ap_vld <= ap_const_logic_1;
        else 
            add65_1101_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_2102_out <= add65_2102_fu_172;

    add65_2102_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_2102_out_ap_vld <= ap_const_logic_1;
        else 
            add65_2102_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_3103_out <= add65_3103_fu_176;

    add65_3103_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_3103_out_ap_vld <= ap_const_logic_1;
        else 
            add65_3103_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_4104_out <= add65_4104_fu_180;

    add65_4104_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_4104_out_ap_vld <= ap_const_logic_1;
        else 
            add65_4104_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_5105_out <= add65_5105_fu_184;

    add65_5105_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_5105_out_ap_vld <= ap_const_logic_1;
        else 
            add65_5105_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_6106_out <= add65_6106_fu_188;

    add65_6106_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_6106_out_ap_vld <= ap_const_logic_1;
        else 
            add65_6106_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_7107_out <= add65_7107_fu_192;

    add65_7107_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_7107_out_ap_vld <= ap_const_logic_1;
        else 
            add65_7107_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_8108_out <= add65_8108_fu_196;

    add65_8108_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_8108_out_ap_vld <= ap_const_logic_1;
        else 
            add65_8108_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_9109_out <= add65_9109_fu_200;

    add65_9109_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_17_fu_661_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_9109_out_ap_vld <= ap_const_logic_1;
        else 
            add65_9109_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln39_fu_1150_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_1E));
    add_ln54_10_fu_1553_p2 <= std_logic_vector(unsigned(and_ln54_9_fu_1541_p2) + unsigned(and_ln54_7_fu_1522_p2));
    add_ln54_11_fu_1559_p2 <= std_logic_vector(unsigned(add_ln54_10_fu_1553_p2) + unsigned(add_ln54_9_fu_1547_p2));
    add_ln54_12_fu_1565_p2 <= std_logic_vector(unsigned(add65_3103_fu_176) + unsigned(add_ln54_11_fu_1559_p2));
    add_ln54_13_fu_1664_p2 <= std_logic_vector(unsigned(and_ln54_10_fu_1624_p2) + unsigned(and_ln54_12_fu_1644_p2));
    add_ln54_14_fu_1670_p2 <= std_logic_vector(unsigned(and_ln54_11_fu_1638_p2) + unsigned(and_ln54_13_fu_1658_p2));
    add_ln54_15_fu_1676_p2 <= std_logic_vector(unsigned(add_ln54_14_fu_1670_p2) + unsigned(add_ln54_13_fu_1664_p2));
    add_ln54_16_fu_1682_p2 <= std_logic_vector(unsigned(add65_4104_fu_180) + unsigned(add_ln54_15_fu_1676_p2));
    add_ln54_17_fu_1764_p2 <= std_logic_vector(unsigned(and_ln54_14_fu_1726_p2) + unsigned(and_ln54_16_fu_1745_p2));
    add_ln54_18_fu_1770_p2 <= std_logic_vector(unsigned(and_ln54_17_fu_1758_p2) + unsigned(and_ln54_15_fu_1739_p2));
    add_ln54_19_fu_1776_p2 <= std_logic_vector(unsigned(add_ln54_18_fu_1770_p2) + unsigned(add_ln54_17_fu_1764_p2));
    add_ln54_1_fu_1272_p2 <= std_logic_vector(unsigned(add65100_fu_164) + unsigned(add_ln54_fu_1266_p2));
    add_ln54_20_fu_1782_p2 <= std_logic_vector(unsigned(add65_5105_fu_184) + unsigned(add_ln54_19_fu_1776_p2));
    add_ln54_21_fu_1880_p2 <= std_logic_vector(unsigned(and_ln54_18_fu_1840_p2) + unsigned(and_ln54_20_fu_1860_p2));
    add_ln54_22_fu_1886_p2 <= std_logic_vector(unsigned(and_ln54_19_fu_1854_p2) + unsigned(and_ln54_21_fu_1874_p2));
    add_ln54_23_fu_1892_p2 <= std_logic_vector(unsigned(add_ln54_22_fu_1886_p2) + unsigned(add_ln54_21_fu_1880_p2));
    add_ln54_24_fu_1898_p2 <= std_logic_vector(unsigned(add65_6106_fu_188) + unsigned(add_ln54_23_fu_1892_p2));
    add_ln54_25_fu_1962_p2 <= std_logic_vector(unsigned(and_ln54_23_fu_1937_p2) + unsigned(and_ln54_22_fu_1924_p2));
    add_ln54_26_fu_1968_p2 <= std_logic_vector(unsigned(and_ln54_24_fu_1943_p2) + unsigned(and_ln54_25_fu_1956_p2));
    add_ln54_27_fu_1974_p2 <= std_logic_vector(unsigned(add_ln54_26_fu_1968_p2) + unsigned(add_ln54_25_fu_1962_p2));
    add_ln54_28_fu_1980_p2 <= std_logic_vector(unsigned(add65_7107_fu_192) + unsigned(add_ln54_27_fu_1974_p2));
    add_ln54_29_fu_2061_p2 <= std_logic_vector(unsigned(and_ln54_26_fu_2021_p2) + unsigned(and_ln54_27_fu_2035_p2));
    add_ln54_2_fu_1339_p2 <= std_logic_vector(unsigned(and_ln54_fu_1320_p2) + unsigned(and_ln54_1_fu_1333_p2));
    add_ln54_30_fu_2067_p2 <= std_logic_vector(unsigned(and_ln54_28_fu_2041_p2) + unsigned(and_ln54_29_fu_2055_p2));
    add_ln54_31_fu_2073_p2 <= std_logic_vector(unsigned(add_ln54_30_fu_2067_p2) + unsigned(add_ln54_29_fu_2061_p2));
    add_ln54_32_fu_2079_p2 <= std_logic_vector(unsigned(add65_8108_fu_196) + unsigned(add_ln54_31_fu_2073_p2));
    add_ln54_33_fu_2101_p2 <= std_logic_vector(unsigned(and_ln54_30_fu_2089_p2) + unsigned(and_ln54_31_fu_2095_p2));
    add_ln54_34_fu_2107_p2 <= std_logic_vector(unsigned(add_ln54_33_fu_2101_p2) + unsigned(mul_ln54_35_fu_538_p2));
    add_ln54_35_fu_2113_p2 <= std_logic_vector(unsigned(add65_9109_fu_200) + unsigned(add_ln54_34_fu_2107_p2));
    add_ln54_3_fu_1345_p2 <= std_logic_vector(unsigned(add_ln54_2_fu_1339_p2) + unsigned(mul_ln54_4_fu_414_p2));
    add_ln54_4_fu_1351_p2 <= std_logic_vector(unsigned(add65_1101_fu_168) + unsigned(add_ln54_3_fu_1345_p2));
    add_ln54_5_fu_1452_p2 <= std_logic_vector(unsigned(and_ln54_2_fu_1412_p2) + unsigned(and_ln54_4_fu_1432_p2));
    add_ln54_6_fu_1458_p2 <= std_logic_vector(unsigned(and_ln54_3_fu_1426_p2) + unsigned(and_ln54_5_fu_1446_p2));
    add_ln54_7_fu_1464_p2 <= std_logic_vector(unsigned(add_ln54_6_fu_1458_p2) + unsigned(add_ln54_5_fu_1452_p2));
    add_ln54_8_fu_1470_p2 <= std_logic_vector(unsigned(add65_2102_fu_172) + unsigned(add_ln54_7_fu_1464_p2));
    add_ln54_9_fu_1547_p2 <= std_logic_vector(unsigned(and_ln54_6_fu_1509_p2) + unsigned(and_ln54_8_fu_1528_p2));
    add_ln54_fu_1266_p2 <= std_logic_vector(unsigned(mul_ln54_1_fu_402_p2) + unsigned(mul_ln54_fu_398_p2));
    and_ln54_10_fu_1624_p2 <= (select_ln54_8_fu_1515_p3 and mul_ln54_13_fu_450_p2);
    and_ln54_11_fu_1638_p2 <= (select_ln54_10_fu_1630_p3 and mul_ln54_14_fu_454_p2);
    and_ln54_12_fu_1644_p2 <= (select_ln54_9_fu_1534_p3 and mul_ln54_15_fu_458_p2);
    and_ln54_13_fu_1658_p2 <= (select_ln54_11_fu_1650_p3 and mul_ln54_16_fu_462_p2);
    and_ln54_14_fu_1726_p2 <= (select_ln54_10_fu_1630_p3 and mul_ln54_17_fu_466_p2);
    and_ln54_15_fu_1739_p2 <= (select_ln54_12_fu_1732_p3 and mul_ln54_18_fu_470_p2);
    and_ln54_16_fu_1745_p2 <= (select_ln54_11_fu_1650_p3 and mul_ln54_19_fu_474_p2);
    and_ln54_17_fu_1758_p2 <= (select_ln54_13_fu_1751_p3 and mul_ln54_20_fu_478_p2);
    and_ln54_18_fu_1840_p2 <= (select_ln54_12_fu_1732_p3 and mul_ln54_21_fu_482_p2);
    and_ln54_19_fu_1854_p2 <= (select_ln54_14_fu_1846_p3 and mul_ln54_22_fu_486_p2);
    and_ln54_1_fu_1333_p2 <= (select_ln54_5_fu_1326_p3 and mul_ln54_3_fu_410_p2);
    and_ln54_20_fu_1860_p2 <= (select_ln54_13_fu_1751_p3 and mul_ln54_23_fu_490_p2);
    and_ln54_21_fu_1874_p2 <= (select_ln54_15_fu_1866_p3 and mul_ln54_24_fu_494_p2);
    and_ln54_22_fu_1924_p2 <= (select_ln54_14_fu_1846_p3 and mul_ln54_25_fu_498_p2);
    and_ln54_23_fu_1937_p2 <= (select_ln54_16_fu_1930_p3 and mul_ln54_26_fu_502_p2);
    and_ln54_24_fu_1943_p2 <= (select_ln54_15_fu_1866_p3 and mul_ln54_27_fu_506_p2);
    and_ln54_25_fu_1956_p2 <= (select_ln54_17_fu_1949_p3 and mul_ln54_28_fu_510_p2);
    and_ln54_26_fu_2021_p2 <= (select_ln54_16_fu_1930_p3 and mul_ln54_29_fu_514_p2);
    and_ln54_27_fu_2035_p2 <= (select_ln54_18_fu_2027_p3 and mul_ln54_30_fu_518_p2);
    and_ln54_28_fu_2041_p2 <= (select_ln54_17_fu_1949_p3 and mul_ln54_31_fu_522_p2);
    and_ln54_29_fu_2055_p2 <= (select_ln54_19_fu_2047_p3 and mul_ln54_32_fu_526_p2);
    and_ln54_2_fu_1412_p2 <= (select_ln54_5_fu_1326_p3 and mul_ln54_5_fu_418_p2);
    and_ln54_30_fu_2089_p2 <= (select_ln54_18_fu_2027_p3 and mul_ln54_33_fu_530_p2);
    and_ln54_31_fu_2095_p2 <= (select_ln54_19_fu_2047_p3 and mul_ln54_34_fu_534_p2);
    and_ln54_3_fu_1426_p2 <= (select_ln54_6_fu_1418_p3 and mul_ln54_6_fu_422_p2);
    and_ln54_4_fu_1432_p2 <= (select_ln54_4_fu_1313_p3 and mul_ln54_7_fu_426_p2);
    and_ln54_5_fu_1446_p2 <= (select_ln54_7_fu_1438_p3 and mul_ln54_8_fu_430_p2);
    and_ln54_6_fu_1509_p2 <= (select_ln54_6_fu_1418_p3 and mul_ln54_9_fu_434_p2);
    and_ln54_7_fu_1522_p2 <= (select_ln54_8_fu_1515_p3 and mul_ln54_10_fu_438_p2);
    and_ln54_8_fu_1528_p2 <= (select_ln54_7_fu_1438_p3 and mul_ln54_11_fu_442_p2);
    and_ln54_9_fu_1541_p2 <= (select_ln54_9_fu_1534_p3 and mul_ln54_12_fu_446_p2);
    and_ln54_fu_1320_p2 <= (select_ln54_4_fu_1313_p3 and mul_ln54_2_fu_406_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, tmp_17_fu_661_p3)
    begin
        if (((tmp_17_fu_661_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_204)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_1 <= ap_const_lv5_9;
        else 
            ap_sig_allocacmp_i1_1 <= i1_fu_204;
        end if; 
    end process;

    empty_22_fu_1357_p2 <= std_logic_vector(unsigned(i1_1_reg_2374) + unsigned(ap_const_lv5_2));
    empty_23_fu_862_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_3));
    empty_24_fu_1571_p2 <= std_logic_vector(unsigned(i1_1_reg_2374) + unsigned(ap_const_lv5_4));
    empty_25_fu_962_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_5));
    empty_26_fu_1788_p2 <= std_logic_vector(unsigned(i1_1_reg_2374) + unsigned(ap_const_lv5_6));
    empty_27_fu_1056_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_7));
    empty_28_fu_1986_p2 <= std_logic_vector(unsigned(i1_1_reg_2374) + unsigned(ap_const_lv5_8));
    empty_fu_762_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_1));
    icmp_ln51_1_fu_868_p2 <= "1" when (signed(empty_23_fu_862_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln51_2_fu_968_p2 <= "1" when (signed(empty_25_fu_962_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln51_3_fu_1062_p2 <= "1" when (unsigned(empty_27_fu_1056_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln51_fu_768_p2 <= "1" when (signed(empty_fu_762_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_1_fu_1581_p2 <= "1" when (signed(empty_24_fu_1571_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_2_fu_1798_p2 <= "1" when (signed(empty_26_fu_1788_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_3_fu_1996_p2 <= "1" when (unsigned(empty_28_fu_1986_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln52_fu_1367_p2 <= "1" when (signed(empty_22_fu_1357_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln53_1_fu_917_p2 <= "1" when (signed(empty_23_fu_862_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln53_2_fu_1017_p2 <= "1" when (signed(empty_25_fu_962_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln53_3_fu_1111_p2 <= "1" when (unsigned(empty_27_fu_1056_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln53_fu_817_p2 <= "1" when (signed(empty_fu_762_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_1_fu_1609_p2 <= "1" when (signed(empty_24_fu_1571_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_2_fu_1825_p2 <= "1" when (signed(empty_26_fu_1788_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_3_fu_2007_p2 <= "1" when (unsigned(empty_28_fu_1986_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln54_fu_1397_p2 <= "1" when (signed(empty_22_fu_1357_p2) < signed(ap_const_lv5_A)) else "0";
    mul_ln52_10_fu_588_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_11_fu_593_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_12_fu_598_p1 <= ap_const_lv32_26(7 - 1 downto 0);
    mul_ln52_1_fu_558_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_2_fu_563_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_3_fu_546_p1 <= mul_ln52_3_fu_546_p10(7 - 1 downto 0);
    mul_ln52_3_fu_546_p10 <= 
        ap_const_lv32_26 when (icmp_ln51_1_fu_868_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_4_fu_568_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_5_fu_573_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_6_fu_550_p1 <= mul_ln52_6_fu_550_p10(7 - 1 downto 0);
    mul_ln52_6_fu_550_p10 <= 
        ap_const_lv32_26 when (icmp_ln51_2_fu_968_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_7_fu_578_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_8_fu_583_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_9_fu_554_p1 <= mul_ln52_9_fu_554_p10(7 - 1 downto 0);
    mul_ln52_9_fu_554_p10 <= 
        ap_const_lv32_26 when (icmp_ln51_3_fu_1062_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_fu_542_p1 <= mul_ln52_fu_542_p10(7 - 1 downto 0);
    mul_ln52_fu_542_p10 <= 
        ap_const_lv32_26 when (icmp_ln51_fu_768_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln54_10_fu_438_p0 <= mul_ln54_10_fu_438_p00(32 - 1 downto 0);
    mul_ln54_10_fu_438_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_1_fu_1497_p3),64));
    mul_ln54_10_fu_438_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_11_fu_442_p0 <= zext_ln52_3_fu_1362_p1(32 - 1 downto 0);
    mul_ln54_11_fu_442_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_12_fu_446_p0 <= mul_ln54_12_fu_446_p00(32 - 1 downto 0);
    mul_ln54_12_fu_446_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_3_reg_2460),64));
    mul_ln54_12_fu_446_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_13_fu_450_p0 <= mul_ln54_13_fu_450_p00(32 - 1 downto 0);
    mul_ln54_13_fu_450_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1480_p8),64));
    mul_ln54_13_fu_450_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_14_fu_454_p0 <= zext_ln54_6_fu_1603_p1(32 - 1 downto 0);
    mul_ln54_14_fu_454_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_15_fu_458_p0 <= mul_ln54_15_fu_458_p00(32 - 1 downto 0);
    mul_ln54_15_fu_458_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_5_reg_2481),64));
    mul_ln54_15_fu_458_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_16_fu_462_p0 <= zext_ln52_6_fu_1576_p1(32 - 1 downto 0);
    mul_ln54_16_fu_462_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_17_fu_466_p0 <= zext_ln54_6_fu_1603_p1(32 - 1 downto 0);
    mul_ln54_17_fu_466_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_18_fu_470_p0 <= mul_ln54_18_fu_470_p00(32 - 1 downto 0);
    mul_ln54_18_fu_470_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_2_fu_1714_p3),64));
    mul_ln54_18_fu_470_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_19_fu_474_p0 <= zext_ln52_6_fu_1576_p1(32 - 1 downto 0);
    mul_ln54_19_fu_474_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_1_fu_402_p0 <= mul_ln54_1_fu_402_p00(32 - 1 downto 0);
    mul_ln54_1_fu_402_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2407),64));
    mul_ln54_1_fu_402_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_20_fu_478_p0 <= mul_ln54_20_fu_478_p00(32 - 1 downto 0);
    mul_ln54_20_fu_478_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_6_reg_2491),64));
    mul_ln54_20_fu_478_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_21_fu_482_p0 <= mul_ln54_21_fu_482_p00(32 - 1 downto 0);
    mul_ln54_21_fu_482_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1698_p6),64));
    mul_ln54_21_fu_482_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_22_fu_486_p0 <= zext_ln54_9_fu_1819_p1(32 - 1 downto 0);
    mul_ln54_22_fu_486_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_23_fu_490_p0 <= mul_ln54_23_fu_490_p00(32 - 1 downto 0);
    mul_ln54_23_fu_490_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_8_reg_2507),64));
    mul_ln54_23_fu_490_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_24_fu_494_p0 <= zext_ln52_9_fu_1793_p1(32 - 1 downto 0);
    mul_ln54_24_fu_494_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_25_fu_498_p0 <= zext_ln54_9_fu_1819_p1(32 - 1 downto 0);
    mul_ln54_25_fu_498_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_26_fu_502_p0 <= mul_ln54_26_fu_502_p00(32 - 1 downto 0);
    mul_ln54_26_fu_502_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_3_fu_1913_p3),64));
    mul_ln54_26_fu_502_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_27_fu_506_p0 <= zext_ln52_9_fu_1793_p1(32 - 1 downto 0);
    mul_ln54_27_fu_506_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_28_fu_510_p0 <= mul_ln54_28_fu_510_p00(32 - 1 downto 0);
    mul_ln54_28_fu_510_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_9_reg_2517),64));
    mul_ln54_28_fu_510_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_29_fu_514_p0 <= mul_ln54_29_fu_514_p00(32 - 1 downto 0);
    mul_ln54_29_fu_514_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_2417),64));
    mul_ln54_29_fu_514_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_2_fu_406_p0 <= mul_ln54_2_fu_406_p00(32 - 1 downto 0);
    mul_ln54_2_fu_406_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_reg_2424),64));
    mul_ln54_2_fu_406_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_30_fu_518_p0 <= zext_ln54_12_fu_2002_p1(32 - 1 downto 0);
    mul_ln54_30_fu_518_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_31_fu_522_p0 <= mul_ln54_31_fu_522_p00(32 - 1 downto 0);
    mul_ln54_31_fu_522_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_11_reg_2533),64));
    mul_ln54_31_fu_522_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_32_fu_526_p0 <= zext_ln52_12_fu_1991_p1(32 - 1 downto 0);
    mul_ln54_32_fu_526_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_33_fu_530_p0 <= zext_ln54_12_fu_2002_p1(32 - 1 downto 0);
    mul_ln54_33_fu_530_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_34_fu_534_p0 <= zext_ln52_12_fu_1991_p1(32 - 1 downto 0);
    mul_ln54_34_fu_534_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_35_fu_538_p0 <= mul_ln54_35_fu_538_p00(32 - 1 downto 0);
    mul_ln54_35_fu_538_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_12_reg_2538),64));
    mul_ln54_35_fu_538_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_3_fu_410_p0 <= mul_ln54_3_fu_410_p00(32 - 1 downto 0);
    mul_ln54_3_fu_410_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_fu_1301_p3),64));
    mul_ln54_3_fu_410_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_4_fu_414_p0 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_4_fu_414_p1 <= zext_ln54_fu_1235_p1(32 - 1 downto 0);
    mul_ln54_5_fu_418_p0 <= mul_ln54_5_fu_418_p00(32 - 1 downto 0);
    mul_ln54_5_fu_418_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1282_p10),64));
    mul_ln54_5_fu_418_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_6_fu_422_p0 <= zext_ln54_3_fu_1391_p1(32 - 1 downto 0);
    mul_ln54_6_fu_422_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_7_fu_426_p0 <= mul_ln54_7_fu_426_p00(32 - 1 downto 0);
    mul_ln54_7_fu_426_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_2_reg_2450),64));
    mul_ln54_7_fu_426_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_8_fu_430_p0 <= zext_ln52_3_fu_1362_p1(32 - 1 downto 0);
    mul_ln54_8_fu_430_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    mul_ln54_9_fu_434_p0 <= zext_ln54_3_fu_1391_p1(32 - 1 downto 0);
    mul_ln54_9_fu_434_p1 <= zext_ln52_1_fu_1241_p1(32 - 1 downto 0);
    mul_ln54_fu_398_p0 <= zext_ln54_fu_1235_p1(32 - 1 downto 0);
    mul_ln54_fu_398_p1 <= zext_ln52_fu_1194_p1(32 - 1 downto 0);
    select_ln54_10_fu_1630_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_1_fu_1609_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_11_fu_1650_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_1_fu_1581_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_12_fu_1732_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_2_reg_2496(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_13_fu_1751_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_2_reg_2486(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_14_fu_1846_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_2_fu_1825_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_15_fu_1866_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_2_fu_1798_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_16_fu_1930_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_3_reg_2522(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_17_fu_1949_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_3_reg_2512(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_18_fu_2027_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_3_fu_2007_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_19_fu_2047_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_3_fu_1996_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_1_fu_1497_p3 <= 
        shl_ln54_1_fu_1491_p2 when (icmp_ln53_1_reg_2465(0) = '1') else 
        tmp_9_fu_1480_p8;
    select_ln54_2_fu_1714_p3 <= 
        shl_ln54_2_fu_1708_p2 when (icmp_ln53_2_reg_2496(0) = '1') else 
        tmp_12_fu_1698_p6;
    select_ln54_3_fu_1913_p3 <= 
        shl_ln54_3_fu_1908_p2 when (icmp_ln53_3_reg_2522(0) = '1') else 
        tmp_4_reg_2417;
    select_ln54_4_fu_1313_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_reg_2412(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_5_fu_1326_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_reg_2429(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_6_fu_1418_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_fu_1397_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_7_fu_1438_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_fu_1367_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_8_fu_1515_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_1_reg_2465(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_9_fu_1534_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_1_reg_2455(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_fu_1301_p3 <= 
        shl_ln54_fu_1295_p2 when (icmp_ln53_reg_2429(0) = '1') else 
        tmp_5_fu_1282_p10;
    shl_ln54_1_fu_1491_p2 <= std_logic_vector(shift_left(unsigned(tmp_9_fu_1480_p8),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_2_fu_1708_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_fu_1698_p6),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_3_fu_1908_p2 <= std_logic_vector(shift_left(unsigned(tmp_4_reg_2417),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_fu_1295_p2 <= std_logic_vector(shift_left(unsigned(tmp_5_fu_1282_p10),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    sub_ln54_2_fu_823_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(trunc_ln39_2_fu_673_p1));
    sub_ln54_3_fu_923_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln39_2_fu_673_p1));
    tmp_10_fu_1592_p6 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln39_2_reg_2391));
    tmp_11_fu_989_p11 <= std_logic_vector(signed(ap_const_lv4_E) - signed(trunc_ln39_fu_669_p1));
    tmp_12_fu_1698_p5 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln39_1_fu_1191_p1));
    tmp_13_fu_1029_p11 <= std_logic_vector(signed(ap_const_lv4_D) - signed(trunc_ln39_fu_669_p1));
    tmp_14_fu_1810_p4 <= (trunc_ln39_1_fu_1191_p1 xor ap_const_lv2_3);
    tmp_15_fu_1083_p11 <= std_logic_vector(signed(ap_const_lv4_C) - signed(trunc_ln39_fu_669_p1));
    tmp_16_fu_1123_p11 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln39_fu_669_p1));
    tmp_17_fu_661_p3 <= ap_sig_allocacmp_i1_1(4 downto 4);
    tmp_1_fu_1220_p10 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln39_reg_2386));
    tmp_3_fu_735_p11 <= std_logic_vector(signed(ap_const_lv4_A) - signed(trunc_ln39_fu_669_p1));
    tmp_4_fu_789_p11 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(trunc_ln39_fu_669_p1));
    tmp_6_fu_835_p11 <= std_logic_vector(unsigned(ap_const_lv4_1) - unsigned(trunc_ln39_fu_669_p1));
    tmp_7_fu_1378_p8 <= (trunc_ln39_2_reg_2391 xor ap_const_lv3_7);
    tmp_8_fu_889_p11 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(trunc_ln39_fu_669_p1));
    tmp_s_fu_935_p11 <= (trunc_ln39_fu_669_p1 xor ap_const_lv4_F);
    trunc_ln39_1_fu_1191_p1 <= i1_1_reg_2374(2 - 1 downto 0);
    trunc_ln39_2_fu_673_p1 <= ap_sig_allocacmp_i1_1(3 - 1 downto 0);
    trunc_ln39_fu_669_p1 <= ap_sig_allocacmp_i1_1(4 - 1 downto 0);
    zext_ln52_12_fu_1991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_10_reg_2528),64));
    zext_ln52_1_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_2402),64));
    zext_ln52_3_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_1_reg_2445),64));
    zext_ln52_6_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_4_reg_2476),64));
    zext_ln52_9_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_7_reg_2502),64));
    zext_ln52_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_2397),64));
    zext_ln54_12_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_2440),64));
    zext_ln54_3_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1378_p9),64));
    zext_ln54_6_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1592_p7),64));
    zext_ln54_9_fu_1819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1810_p5),64));
    zext_ln54_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1220_p11),64));
end behav;
