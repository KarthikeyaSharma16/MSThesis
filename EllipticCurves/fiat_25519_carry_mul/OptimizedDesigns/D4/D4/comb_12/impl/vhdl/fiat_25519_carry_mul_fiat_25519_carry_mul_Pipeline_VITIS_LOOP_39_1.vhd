-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arg1_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg2_r_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add65_4_178_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_4_178_out_ap_vld : OUT STD_LOGIC;
    add65_477_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_477_out_ap_vld : OUT STD_LOGIC;
    add65_3_176_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_3_176_out_ap_vld : OUT STD_LOGIC;
    add65_375_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_375_out_ap_vld : OUT STD_LOGIC;
    add65_2_174_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_2_174_out_ap_vld : OUT STD_LOGIC;
    add65_273_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_273_out_ap_vld : OUT STD_LOGIC;
    add65_1_172_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_1_172_out_ap_vld : OUT STD_LOGIC;
    add65_171_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_171_out_ap_vld : OUT STD_LOGIC;
    add65_12970_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add65_12970_out_ap_vld : OUT STD_LOGIC;
    add6569_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    add6569_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fiat_25519_carry_mul_fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_16_fu_572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i1_1_reg_2138 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln39_fu_580_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln39_reg_2152 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_584_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_2158 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_588_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_2172 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_647_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_2177 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_reg_2183 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_2188 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_686_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_2194 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_1_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_1_reg_2199 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_1_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_1_reg_2204 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_746_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_2209 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_2_fu_478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_2_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_1_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_1_reg_2220 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_3_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_3_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_2_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_2_reg_2231 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_4_fu_482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_4_reg_2236 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_2_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_2_reg_2241 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_5_fu_504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_5_reg_2247 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_3_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_3_reg_2252 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_6_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_reg_2257 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln53_3_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_3_reg_2262 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_7_fu_509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_7_reg_2268 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_4_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_4_reg_2273 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln52_8_fu_490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_8_reg_2278 : STD_LOGIC_VECTOR (31 downto 0);
    signal add6569_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_fu_1159_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal add65_12970_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_2_fu_1244_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_171_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_4_fu_1330_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_1_172_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_6_fu_1414_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_273_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_8_fu_1498_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_2_174_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_10_fu_1580_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_375_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_12_fu_1662_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_3_176_fu_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_14_fu_1725_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_477_fu_196 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_16_fu_1790_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add65_4_178_fu_200 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_18_fu_1866_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_fu_204 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln39_fu_1064_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i1_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln54_fu_398_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_1111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_1_fu_402_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_1_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_2_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_2_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_3_fu_410_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_3_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_4_fu_414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_4_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_6_fu_422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_6_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_7_fu_426_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_7_fu_426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_8_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_8_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_11_fu_442_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_11_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_12_fu_446_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_12_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_14_fu_454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_14_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_15_fu_458_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_15_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_16_fu_462_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_16_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_18_fu_470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_18_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_474_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln52_2_fu_478_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_845_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_4_fu_482_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_944_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_fu_486_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_fu_1037_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_8_fu_490_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln52_1_fu_494_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_785_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_3_fu_499_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_884_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_5_fu_504_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_983_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_7_fu_509_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln51_fu_614_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln51_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_647_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_686_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_1_fu_713_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln51_1_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_746_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_785_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_2_fu_812_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln51_2_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_845_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_884_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_3_fu_911_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln51_3_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_944_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_983_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln51_4_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1037_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_1138_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_1138_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_fu_398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1178_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_1178_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln53_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln54_fu_1193_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_fu_1199_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_1_fu_402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_5_fu_1212_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_2_fu_406_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_6_fu_1225_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_1_fu_1232_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_fu_1219_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_1_fu_1238_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_22_fu_1250_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln39_2_fu_1108_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1271_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1271_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_3_fu_410_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_7_fu_1296_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_4_fu_414_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_8_fu_1310_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_3_fu_1318_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_2_fu_1304_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_3_fu_1324_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_1350_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_1350_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln53_1_fu_1340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln54_1_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_1_fu_1369_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_5_fu_418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_9_fu_1382_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_6_fu_422_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_10_fu_1395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_5_fu_1402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_4_fu_1389_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_5_fu_1408_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_23_fu_1420_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_1441_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1441_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_1_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_7_fu_426_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_11_fu_1464_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_1_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_8_fu_430_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_12_fu_1478_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_7_fu_1486_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_6_fu_1472_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_7_fu_1492_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1518_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_1518_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln53_2_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln54_2_fu_1529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_2_fu_1535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_9_fu_434_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_13_fu_1548_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_10_fu_438_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_14_fu_1561_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_9_fu_1568_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_8_fu_1555_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_9_fu_1574_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_24_fu_1586_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln39_1_fu_1105_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1607_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_1607_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_2_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_11_fu_442_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_15_fu_1628_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_2_fu_1622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_12_fu_446_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_16_fu_1642_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_11_fu_1650_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_10_fu_1636_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_11_fu_1656_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln53_3_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln54_3_fu_1676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_3_fu_1681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_13_fu_450_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_17_fu_1693_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_14_fu_454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_18_fu_1706_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_12_fu_1700_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_13_fu_1713_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_13_fu_1719_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_25_fu_1731_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln52_3_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_15_fu_458_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_19_fu_1756_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_3_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln54_16_fu_462_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_20_fu_1770_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_14_fu_1764_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_15_fu_1778_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_15_fu_1784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln51_4_fu_1796_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln53_4_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln53_4_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln54_4_fu_1816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_4_fu_1821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_17_fu_466_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_21_fu_1833_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_18_fu_470_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_22_fu_1846_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_16_fu_1840_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln54_17_fu_1854_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_17_fu_1860_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln52_2_fu_478_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_4_fu_482_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_6_fu_486_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_8_fu_490_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln52_fu_474_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln54_10_fu_438_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_11_fu_442_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_12_fu_446_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_13_fu_450_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_14_fu_454_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_15_fu_458_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_16_fu_462_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_17_fu_466_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_18_fu_470_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_1_fu_402_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_2_fu_406_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_3_fu_410_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_4_fu_414_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_5_fu_418_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_6_fu_422_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_7_fu_426_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_8_fu_430_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_9_fu_434_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln54_fu_398_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_7s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mul_32s_6ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_10_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_7_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_6_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_5_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_64_1_1_U25 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_fu_398_p0,
        din1 => mul_ln54_fu_398_p1,
        dout => mul_ln54_fu_398_p2);

    mul_32ns_32ns_64_1_1_U26 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_1_fu_402_p0,
        din1 => mul_ln54_1_fu_402_p1,
        dout => mul_ln54_1_fu_402_p2);

    mul_32ns_32ns_64_1_1_U27 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_2_fu_406_p0,
        din1 => mul_ln54_2_fu_406_p1,
        dout => mul_ln54_2_fu_406_p2);

    mul_32ns_32ns_64_1_1_U28 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_3_fu_410_p0,
        din1 => mul_ln54_3_fu_410_p1,
        dout => mul_ln54_3_fu_410_p2);

    mul_32ns_32ns_64_1_1_U29 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_4_fu_414_p0,
        din1 => mul_ln54_4_fu_414_p1,
        dout => mul_ln54_4_fu_414_p2);

    mul_32ns_32ns_64_1_1_U30 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_5_fu_418_p0,
        din1 => mul_ln54_5_fu_418_p1,
        dout => mul_ln54_5_fu_418_p2);

    mul_32ns_32ns_64_1_1_U31 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_6_fu_422_p0,
        din1 => mul_ln54_6_fu_422_p1,
        dout => mul_ln54_6_fu_422_p2);

    mul_32ns_32ns_64_1_1_U32 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_7_fu_426_p0,
        din1 => mul_ln54_7_fu_426_p1,
        dout => mul_ln54_7_fu_426_p2);

    mul_32ns_32ns_64_1_1_U33 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_8_fu_430_p0,
        din1 => mul_ln54_8_fu_430_p1,
        dout => mul_ln54_8_fu_430_p2);

    mul_32ns_32ns_64_1_1_U34 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_9_fu_434_p0,
        din1 => mul_ln54_9_fu_434_p1,
        dout => mul_ln54_9_fu_434_p2);

    mul_32ns_32ns_64_1_1_U35 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_10_fu_438_p0,
        din1 => mul_ln54_10_fu_438_p1,
        dout => mul_ln54_10_fu_438_p2);

    mul_32ns_32ns_64_1_1_U36 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_11_fu_442_p0,
        din1 => mul_ln54_11_fu_442_p1,
        dout => mul_ln54_11_fu_442_p2);

    mul_32ns_32ns_64_1_1_U37 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_12_fu_446_p0,
        din1 => mul_ln54_12_fu_446_p1,
        dout => mul_ln54_12_fu_446_p2);

    mul_32ns_32ns_64_1_1_U38 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_13_fu_450_p0,
        din1 => mul_ln54_13_fu_450_p1,
        dout => mul_ln54_13_fu_450_p2);

    mul_32ns_32ns_64_1_1_U39 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_14_fu_454_p0,
        din1 => mul_ln54_14_fu_454_p1,
        dout => mul_ln54_14_fu_454_p2);

    mul_32ns_32ns_64_1_1_U40 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_15_fu_458_p0,
        din1 => mul_ln54_15_fu_458_p1,
        dout => mul_ln54_15_fu_458_p2);

    mul_32ns_32ns_64_1_1_U41 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_16_fu_462_p0,
        din1 => mul_ln54_16_fu_462_p1,
        dout => mul_ln54_16_fu_462_p2);

    mul_32ns_32ns_64_1_1_U42 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_17_fu_466_p0,
        din1 => mul_ln54_17_fu_466_p1,
        dout => mul_ln54_17_fu_466_p2);

    mul_32ns_32ns_64_1_1_U43 : component fiat_25519_carry_mul_mul_32ns_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => mul_ln54_18_fu_470_p0,
        din1 => mul_ln54_18_fu_470_p1,
        dout => mul_ln54_18_fu_470_p2);

    mul_32s_7s_32_1_1_U44 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_2_fu_647_p12,
        din1 => mul_ln52_fu_474_p1,
        dout => mul_ln52_fu_474_p2);

    mul_32s_7s_32_1_1_U45 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_746_p12,
        din1 => mul_ln52_2_fu_478_p1,
        dout => mul_ln52_2_fu_478_p2);

    mul_32s_7s_32_1_1_U46 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_s_fu_845_p12,
        din1 => mul_ln52_4_fu_482_p1,
        dout => mul_ln52_4_fu_482_p2);

    mul_32s_7s_32_1_1_U47 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_13_fu_944_p12,
        din1 => mul_ln52_6_fu_486_p1,
        dout => mul_ln52_6_fu_486_p2);

    mul_32s_7s_32_1_1_U48 : component fiat_25519_carry_mul_mul_32s_7s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_15_fu_1037_p12,
        din1 => mul_ln52_8_fu_490_p1,
        dout => mul_ln52_8_fu_490_p2);

    mul_32s_6ns_32_1_1_U49 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_4_fu_686_p12,
        din1 => mul_ln52_1_fu_494_p1,
        dout => mul_ln52_1_fu_494_p2);

    mul_32s_6ns_32_1_1_U50 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_785_p12,
        din1 => mul_ln52_3_fu_499_p1,
        dout => mul_ln52_3_fu_499_p2);

    mul_32s_6ns_32_1_1_U51 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_fu_884_p12,
        din1 => mul_ln52_5_fu_504_p1,
        dout => mul_ln52_5_fu_504_p2);

    mul_32s_6ns_32_1_1_U52 : component fiat_25519_carry_mul_mul_32s_6ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_14_fu_983_p12,
        din1 => mul_ln52_7_fu_509_p1,
        dout => mul_ln52_7_fu_509_p2);

    mux_10_4_32_1_1_U53 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_reload,
        din1 => arg1_r_1_reload,
        din2 => arg1_r_2_reload,
        din3 => arg1_r_3_reload,
        din4 => arg1_r_4_reload,
        din5 => arg1_r_5_reload,
        din6 => arg1_r_6_reload,
        din7 => arg1_r_7_reload,
        din8 => arg1_r_8_reload,
        din9 => arg1_r_9_reload,
        din10 => trunc_ln39_fu_580_p1,
        dout => tmp_fu_588_p12);

    mux_10_4_32_1_1_U54 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => ap_const_lv32_0,
        din9 => arg2_r_9_reload,
        din10 => tmp_2_fu_647_p11,
        dout => tmp_2_fu_647_p12);

    mux_10_4_32_1_1_U55 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_4_fu_686_p11,
        dout => tmp_4_fu_686_p12);

    mux_10_4_32_1_1_U56 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_6_fu_746_p11,
        dout => tmp_6_fu_746_p12);

    mux_10_4_32_1_1_U57 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => ap_const_lv32_0,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_8_fu_785_p11,
        dout => tmp_8_fu_785_p12);

    mux_10_4_32_1_1_U58 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_0,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_s_fu_845_p11,
        dout => tmp_s_fu_845_p12);

    mux_10_4_32_1_1_U59 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_11_fu_884_p11,
        dout => tmp_11_fu_884_p12);

    mux_10_4_32_1_1_U60 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_13_fu_944_p11,
        dout => tmp_13_fu_944_p12);

    mux_10_4_32_1_1_U61 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => ap_const_lv32_0,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_14_fu_983_p11,
        dout => tmp_14_fu_983_p12);

    mux_10_4_32_1_1_U62 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_15_fu_1037_p11,
        dout => tmp_15_fu_1037_p12);

    mux_10_4_32_1_1_U63 : component fiat_25519_carry_mul_mux_10_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => arg2_r_9_reload,
        din10 => tmp_1_fu_1138_p11,
        dout => tmp_1_fu_1138_p12);

    mux_9_4_32_1_1_U64 : component fiat_25519_carry_mul_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => arg2_r_8_reload,
        din9 => tmp_3_fu_1178_p10,
        dout => tmp_3_fu_1178_p11);

    mux_8_3_32_1_1_U65 : component fiat_25519_carry_mul_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => arg2_r_7_reload,
        din8 => tmp_5_fu_1271_p9,
        dout => tmp_5_fu_1271_p10);

    mux_7_3_32_1_1_U66 : component fiat_25519_carry_mul_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => arg2_r_6_reload,
        din7 => tmp_7_fu_1350_p8,
        dout => tmp_7_fu_1350_p9);

    mux_6_3_32_1_1_U67 : component fiat_25519_carry_mul_mux_6_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => arg2_r_5_reload,
        din6 => tmp_9_fu_1441_p7,
        dout => tmp_9_fu_1441_p8);

    mux_5_3_32_1_1_U68 : component fiat_25519_carry_mul_mux_5_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => arg2_r_4_reload,
        din5 => tmp_10_fu_1518_p6,
        dout => tmp_10_fu_1518_p7);

    mux_4_2_32_1_1_U69 : component fiat_25519_carry_mul_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg2_r_reload,
        din1 => arg2_r_1_reload,
        din2 => arg2_r_2_reload,
        din3 => arg2_r_3_reload,
        din4 => tmp_12_fu_1607_p5,
        dout => tmp_12_fu_1607_p6);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_mul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    add6569_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add6569_fu_164 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add6569_fu_164 <= add_ln54_fu_1159_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_12970_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_12970_fu_168 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_12970_fu_168 <= add_ln54_2_fu_1244_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_171_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_171_fu_172 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_171_fu_172 <= add_ln54_4_fu_1330_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_1_172_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_1_172_fu_176 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_1_172_fu_176 <= add_ln54_6_fu_1414_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_273_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_273_fu_180 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_273_fu_180 <= add_ln54_8_fu_1498_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_2_174_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_2_174_fu_184 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_2_174_fu_184 <= add_ln54_10_fu_1580_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_375_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_375_fu_188 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_375_fu_188 <= add_ln54_12_fu_1662_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_3_176_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_3_176_fu_192 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_3_176_fu_192 <= add_ln54_14_fu_1725_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_477_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_477_fu_196 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_477_fu_196 <= add_ln54_16_fu_1790_p2;
                end if;
            end if; 
        end if;
    end process;

    add65_4_178_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    add65_4_178_fu_200 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    add65_4_178_fu_200 <= add_ln54_18_fu_1866_p2;
                end if;
            end if; 
        end if;
    end process;

    i1_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_16_fu_572_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i1_fu_204 <= add_ln39_fu_1064_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i1_fu_204 <= ap_const_lv5_9;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_16_fu_572_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_reg_2158 <= empty_fu_584_p1;
                icmp_ln51_1_reg_2204 <= icmp_ln51_1_fu_719_p2;
                icmp_ln51_2_reg_2231 <= icmp_ln51_2_fu_818_p2;
                icmp_ln51_3_reg_2252 <= icmp_ln51_3_fu_917_p2;
                icmp_ln51_4_reg_2273 <= icmp_ln51_4_fu_1010_p2;
                icmp_ln51_reg_2172 <= icmp_ln51_fu_620_p2;
                icmp_ln53_1_reg_2220 <= icmp_ln53_1_fu_773_p2;
                icmp_ln53_2_reg_2241 <= icmp_ln53_2_fu_872_p2;
                icmp_ln53_3_reg_2262 <= icmp_ln53_3_fu_971_p2;
                icmp_ln53_reg_2188 <= icmp_ln53_fu_674_p2;
                mul_ln52_1_reg_2199 <= mul_ln52_1_fu_494_p2;
                mul_ln52_2_reg_2215 <= mul_ln52_2_fu_478_p2;
                mul_ln52_3_reg_2226 <= mul_ln52_3_fu_499_p2;
                mul_ln52_4_reg_2236 <= mul_ln52_4_fu_482_p2;
                mul_ln52_5_reg_2247 <= mul_ln52_5_fu_504_p2;
                mul_ln52_6_reg_2257 <= mul_ln52_6_fu_486_p2;
                mul_ln52_7_reg_2268 <= mul_ln52_7_fu_509_p2;
                mul_ln52_8_reg_2278 <= mul_ln52_8_fu_490_p2;
                mul_ln52_reg_2183 <= mul_ln52_fu_474_p2;
                tmp_2_reg_2177 <= tmp_2_fu_647_p12;
                tmp_4_reg_2194 <= tmp_4_fu_686_p12;
                tmp_6_reg_2209 <= tmp_6_fu_746_p12;
                tmp_reg_2167 <= tmp_fu_588_p12;
                trunc_ln39_reg_2152 <= trunc_ln39_fu_580_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i1_1_reg_2138 <= ap_sig_allocacmp_i1_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add6569_out <= add6569_fu_164;

    add6569_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add6569_out_ap_vld <= ap_const_logic_1;
        else 
            add6569_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_12970_out <= add65_12970_fu_168;

    add65_12970_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_12970_out_ap_vld <= ap_const_logic_1;
        else 
            add65_12970_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_171_out <= add65_171_fu_172;

    add65_171_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_171_out_ap_vld <= ap_const_logic_1;
        else 
            add65_171_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_1_172_out <= add65_1_172_fu_176;

    add65_1_172_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_1_172_out_ap_vld <= ap_const_logic_1;
        else 
            add65_1_172_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_273_out <= add65_273_fu_180;

    add65_273_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_273_out_ap_vld <= ap_const_logic_1;
        else 
            add65_273_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_2_174_out <= add65_2_174_fu_184;

    add65_2_174_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_2_174_out_ap_vld <= ap_const_logic_1;
        else 
            add65_2_174_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_375_out <= add65_375_fu_188;

    add65_375_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_375_out_ap_vld <= ap_const_logic_1;
        else 
            add65_375_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_3_176_out <= add65_3_176_fu_192;

    add65_3_176_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_3_176_out_ap_vld <= ap_const_logic_1;
        else 
            add65_3_176_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_477_out <= add65_477_fu_196;

    add65_477_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_477_out_ap_vld <= ap_const_logic_1;
        else 
            add65_477_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add65_4_178_out <= add65_4_178_fu_200;

    add65_4_178_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_16_fu_572_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            add65_4_178_out_ap_vld <= ap_const_logic_1;
        else 
            add65_4_178_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln39_fu_1064_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_1F));
    add_ln51_1_fu_713_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_3));
    add_ln51_2_fu_812_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_5));
    add_ln51_3_fu_911_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_7));
    add_ln51_4_fu_1796_p2 <= std_logic_vector(unsigned(i1_1_reg_2138) + unsigned(ap_const_lv5_9));
    add_ln51_fu_614_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i1_1) + unsigned(ap_const_lv5_1));
    add_ln54_10_fu_1580_p2 <= std_logic_vector(unsigned(add65_2_174_fu_184) + unsigned(add_ln54_9_fu_1574_p2));
    add_ln54_11_fu_1656_p2 <= std_logic_vector(unsigned(and_ln54_11_fu_1650_p2) + unsigned(and_ln54_10_fu_1636_p2));
    add_ln54_12_fu_1662_p2 <= std_logic_vector(unsigned(add65_375_fu_188) + unsigned(add_ln54_11_fu_1656_p2));
    add_ln54_13_fu_1719_p2 <= std_logic_vector(unsigned(and_ln54_12_fu_1700_p2) + unsigned(and_ln54_13_fu_1713_p2));
    add_ln54_14_fu_1725_p2 <= std_logic_vector(unsigned(add65_3_176_fu_192) + unsigned(add_ln54_13_fu_1719_p2));
    add_ln54_15_fu_1784_p2 <= std_logic_vector(unsigned(and_ln54_14_fu_1764_p2) + unsigned(and_ln54_15_fu_1778_p2));
    add_ln54_16_fu_1790_p2 <= std_logic_vector(unsigned(add65_477_fu_196) + unsigned(add_ln54_15_fu_1784_p2));
    add_ln54_17_fu_1860_p2 <= std_logic_vector(unsigned(and_ln54_16_fu_1840_p2) + unsigned(and_ln54_17_fu_1854_p2));
    add_ln54_18_fu_1866_p2 <= std_logic_vector(unsigned(add65_4_178_fu_200) + unsigned(add_ln54_17_fu_1860_p2));
    add_ln54_1_fu_1238_p2 <= std_logic_vector(unsigned(and_ln54_1_fu_1232_p2) + unsigned(and_ln54_fu_1219_p2));
    add_ln54_2_fu_1244_p2 <= std_logic_vector(unsigned(add65_12970_fu_168) + unsigned(add_ln54_1_fu_1238_p2));
    add_ln54_3_fu_1324_p2 <= std_logic_vector(unsigned(and_ln54_3_fu_1318_p2) + unsigned(and_ln54_2_fu_1304_p2));
    add_ln54_4_fu_1330_p2 <= std_logic_vector(unsigned(add65_171_fu_172) + unsigned(add_ln54_3_fu_1324_p2));
    add_ln54_5_fu_1408_p2 <= std_logic_vector(unsigned(and_ln54_5_fu_1402_p2) + unsigned(and_ln54_4_fu_1389_p2));
    add_ln54_6_fu_1414_p2 <= std_logic_vector(unsigned(add65_1_172_fu_176) + unsigned(add_ln54_5_fu_1408_p2));
    add_ln54_7_fu_1492_p2 <= std_logic_vector(unsigned(and_ln54_7_fu_1486_p2) + unsigned(and_ln54_6_fu_1472_p2));
    add_ln54_8_fu_1498_p2 <= std_logic_vector(unsigned(add65_273_fu_180) + unsigned(add_ln54_7_fu_1492_p2));
    add_ln54_9_fu_1574_p2 <= std_logic_vector(unsigned(and_ln54_9_fu_1568_p2) + unsigned(and_ln54_8_fu_1555_p2));
    add_ln54_fu_1159_p2 <= std_logic_vector(unsigned(mul_ln54_fu_398_p2) + unsigned(add6569_fu_164));
    and_ln51_1_fu_725_p2 <= (icmp_ln51_1_fu_719_p2 and empty_fu_584_p1);
    and_ln51_2_fu_824_p2 <= (icmp_ln51_2_fu_818_p2 and empty_fu_584_p1);
    and_ln51_3_fu_923_p2 <= (icmp_ln51_3_fu_917_p2 and empty_fu_584_p1);
    and_ln51_4_fu_1016_p2 <= (icmp_ln51_4_fu_1010_p2 and empty_fu_584_p1);
    and_ln51_fu_626_p2 <= (icmp_ln51_fu_620_p2 and empty_fu_584_p1);
    and_ln53_1_fu_1340_p2 <= (icmp_ln53_1_reg_2220 and empty_reg_2158);
    and_ln53_2_fu_1508_p2 <= (icmp_ln53_2_reg_2241 and empty_reg_2158);
    and_ln53_3_fu_1672_p2 <= (icmp_ln53_3_reg_2262 and empty_reg_2158);
    and_ln53_4_fu_1811_p2 <= (icmp_ln53_4_fu_1805_p2 and empty_reg_2158);
    and_ln53_fu_1169_p2 <= (icmp_ln53_reg_2188 and empty_reg_2158);
    and_ln54_10_fu_1636_p2 <= (select_ln54_15_fu_1628_p3 and mul_ln54_11_fu_442_p2);
    and_ln54_11_fu_1650_p2 <= (select_ln54_16_fu_1642_p3 and mul_ln54_12_fu_446_p2);
    and_ln54_12_fu_1700_p2 <= (select_ln54_17_fu_1693_p3 and mul_ln54_13_fu_450_p2);
    and_ln54_13_fu_1713_p2 <= (select_ln54_18_fu_1706_p3 and mul_ln54_14_fu_454_p2);
    and_ln54_14_fu_1764_p2 <= (select_ln54_19_fu_1756_p3 and mul_ln54_15_fu_458_p2);
    and_ln54_15_fu_1778_p2 <= (select_ln54_20_fu_1770_p3 and mul_ln54_16_fu_462_p2);
    and_ln54_16_fu_1840_p2 <= (select_ln54_21_fu_1833_p3 and mul_ln54_17_fu_466_p2);
    and_ln54_17_fu_1854_p2 <= (select_ln54_22_fu_1846_p3 and mul_ln54_18_fu_470_p2);
    and_ln54_1_fu_1232_p2 <= (select_ln54_6_fu_1225_p3 and mul_ln54_2_fu_406_p2);
    and_ln54_2_fu_1304_p2 <= (select_ln54_7_fu_1296_p3 and mul_ln54_3_fu_410_p2);
    and_ln54_3_fu_1318_p2 <= (select_ln54_8_fu_1310_p3 and mul_ln54_4_fu_414_p2);
    and_ln54_4_fu_1389_p2 <= (select_ln54_9_fu_1382_p3 and mul_ln54_5_fu_418_p2);
    and_ln54_5_fu_1402_p2 <= (select_ln54_10_fu_1395_p3 and mul_ln54_6_fu_422_p2);
    and_ln54_6_fu_1472_p2 <= (select_ln54_11_fu_1464_p3 and mul_ln54_7_fu_426_p2);
    and_ln54_7_fu_1486_p2 <= (select_ln54_12_fu_1478_p3 and mul_ln54_8_fu_430_p2);
    and_ln54_8_fu_1555_p2 <= (select_ln54_13_fu_1548_p3 and mul_ln54_9_fu_434_p2);
    and_ln54_9_fu_1568_p2 <= (select_ln54_14_fu_1561_p3 and mul_ln54_10_fu_438_p2);
    and_ln54_fu_1219_p2 <= (select_ln54_5_fu_1212_p3 and mul_ln54_1_fu_402_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, tmp_16_fu_572_p3)
    begin
        if (((tmp_16_fu_572_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i1_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i1_fu_204)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i1_1 <= ap_const_lv5_9;
        else 
            ap_sig_allocacmp_i1_1 <= i1_fu_204;
        end if; 
    end process;

    empty_22_fu_1250_p2 <= std_logic_vector(unsigned(i1_1_reg_2138) + unsigned(ap_const_lv5_2));
    empty_23_fu_1420_p2 <= std_logic_vector(unsigned(i1_1_reg_2138) + unsigned(ap_const_lv5_4));
    empty_24_fu_1586_p2 <= std_logic_vector(unsigned(i1_1_reg_2138) + unsigned(ap_const_lv5_6));
    empty_25_fu_1731_p2 <= std_logic_vector(unsigned(i1_1_reg_2138) + unsigned(ap_const_lv5_8));
    empty_fu_584_p1 <= ap_sig_allocacmp_i1_1(1 - 1 downto 0);
    icmp_ln51_1_fu_719_p2 <= "1" when (signed(add_ln51_1_fu_713_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln51_2_fu_818_p2 <= "1" when (signed(add_ln51_2_fu_812_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln51_3_fu_917_p2 <= "1" when (unsigned(add_ln51_3_fu_911_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln51_4_fu_1010_p2 <= "1" when (signed(ap_sig_allocacmp_i1_1) > signed(ap_const_lv5_0)) else "0";
    icmp_ln51_fu_620_p2 <= "1" when (signed(add_ln51_fu_614_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_1_fu_1429_p2 <= "1" when (signed(empty_23_fu_1420_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_2_fu_1595_p2 <= "1" when (signed(empty_24_fu_1586_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln52_3_fu_1740_p2 <= "1" when (unsigned(empty_25_fu_1731_p2) > unsigned(ap_const_lv5_9)) else "0";
    icmp_ln52_fu_1259_p2 <= "1" when (signed(empty_22_fu_1250_p2) > signed(ap_const_lv5_9)) else "0";
    icmp_ln53_1_fu_773_p2 <= "1" when (signed(add_ln51_1_fu_713_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln53_2_fu_872_p2 <= "1" when (signed(add_ln51_2_fu_812_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln53_3_fu_971_p2 <= "1" when (unsigned(add_ln51_3_fu_911_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln53_4_fu_1805_p2 <= "1" when (unsigned(add_ln51_4_fu_1796_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln53_fu_674_p2 <= "1" when (signed(add_ln51_fu_614_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_1_fu_1458_p2 <= "1" when (signed(empty_23_fu_1420_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_2_fu_1622_p2 <= "1" when (signed(empty_24_fu_1586_p2) < signed(ap_const_lv5_A)) else "0";
    icmp_ln54_3_fu_1750_p2 <= "1" when (unsigned(empty_25_fu_1731_p2) < unsigned(ap_const_lv5_A)) else "0";
    icmp_ln54_fu_1290_p2 <= "1" when (signed(empty_22_fu_1250_p2) < signed(ap_const_lv5_A)) else "0";
    mul_ln52_1_fu_494_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_2_fu_478_p1 <= mul_ln52_2_fu_478_p10(7 - 1 downto 0);
    mul_ln52_2_fu_478_p10 <= 
        ap_const_lv32_26 when (and_ln51_1_fu_725_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_3_fu_499_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_4_fu_482_p1 <= mul_ln52_4_fu_482_p10(7 - 1 downto 0);
    mul_ln52_4_fu_482_p10 <= 
        ap_const_lv32_26 when (and_ln51_2_fu_824_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_5_fu_504_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_6_fu_486_p1 <= mul_ln52_6_fu_486_p10(7 - 1 downto 0);
    mul_ln52_6_fu_486_p10 <= 
        ap_const_lv32_26 when (and_ln51_3_fu_923_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_7_fu_509_p1 <= ap_const_lv32_13(6 - 1 downto 0);
    mul_ln52_8_fu_490_p1 <= mul_ln52_8_fu_490_p10(7 - 1 downto 0);
    mul_ln52_8_fu_490_p10 <= 
        ap_const_lv32_26 when (and_ln51_4_fu_1016_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln52_fu_474_p1 <= mul_ln52_fu_474_p10(7 - 1 downto 0);
    mul_ln52_fu_474_p10 <= 
        ap_const_lv32_26 when (and_ln51_fu_626_p2(0) = '1') else 
        ap_const_lv32_13;
    mul_ln54_10_fu_438_p0 <= mul_ln54_10_fu_438_p00(32 - 1 downto 0);
    mul_ln54_10_fu_438_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_2_fu_1535_p3),64));
    mul_ln54_10_fu_438_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_11_fu_442_p0 <= mul_ln54_11_fu_442_p00(32 - 1 downto 0);
    mul_ln54_11_fu_442_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_5_reg_2247),64));
    mul_ln54_11_fu_442_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_12_fu_446_p0 <= mul_ln54_12_fu_446_p00(32 - 1 downto 0);
    mul_ln54_12_fu_446_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1607_p6),64));
    mul_ln54_12_fu_446_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_13_fu_450_p0 <= mul_ln54_13_fu_450_p00(32 - 1 downto 0);
    mul_ln54_13_fu_450_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_6_reg_2257),64));
    mul_ln54_13_fu_450_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_14_fu_454_p0 <= mul_ln54_14_fu_454_p00(32 - 1 downto 0);
    mul_ln54_14_fu_454_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_3_fu_1681_p3),64));
    mul_ln54_14_fu_454_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_15_fu_458_p0 <= mul_ln54_15_fu_458_p00(32 - 1 downto 0);
    mul_ln54_15_fu_458_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_7_reg_2268),64));
    mul_ln54_15_fu_458_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_16_fu_462_p0 <= mul_ln54_16_fu_462_p00(32 - 1 downto 0);
    mul_ln54_16_fu_462_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_2194),64));
    mul_ln54_16_fu_462_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_17_fu_466_p0 <= mul_ln54_17_fu_466_p00(32 - 1 downto 0);
    mul_ln54_17_fu_466_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_8_reg_2278),64));
    mul_ln54_17_fu_466_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_18_fu_470_p0 <= mul_ln54_18_fu_470_p00(32 - 1 downto 0);
    mul_ln54_18_fu_470_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_4_fu_1821_p3),64));
    mul_ln54_18_fu_470_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_1_fu_402_p0 <= mul_ln54_1_fu_402_p00(32 - 1 downto 0);
    mul_ln54_1_fu_402_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_reg_2183),64));
    mul_ln54_1_fu_402_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_2_fu_406_p0 <= mul_ln54_2_fu_406_p00(32 - 1 downto 0);
    mul_ln54_2_fu_406_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_fu_1199_p3),64));
    mul_ln54_2_fu_406_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_3_fu_410_p0 <= mul_ln54_3_fu_410_p00(32 - 1 downto 0);
    mul_ln54_3_fu_410_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_1_reg_2199),64));
    mul_ln54_3_fu_410_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_4_fu_414_p0 <= mul_ln54_4_fu_414_p00(32 - 1 downto 0);
    mul_ln54_4_fu_414_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1271_p10),64));
    mul_ln54_4_fu_414_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_5_fu_418_p0 <= mul_ln54_5_fu_418_p00(32 - 1 downto 0);
    mul_ln54_5_fu_418_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_2_reg_2215),64));
    mul_ln54_5_fu_418_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_6_fu_422_p0 <= mul_ln54_6_fu_422_p00(32 - 1 downto 0);
    mul_ln54_6_fu_422_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln54_1_fu_1369_p3),64));
    mul_ln54_6_fu_422_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_7_fu_426_p0 <= mul_ln54_7_fu_426_p00(32 - 1 downto 0);
    mul_ln54_7_fu_426_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_3_reg_2226),64));
    mul_ln54_7_fu_426_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_8_fu_430_p0 <= mul_ln54_8_fu_430_p00(32 - 1 downto 0);
    mul_ln54_8_fu_430_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1441_p8),64));
    mul_ln54_8_fu_430_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_9_fu_434_p0 <= mul_ln54_9_fu_434_p00(32 - 1 downto 0);
    mul_ln54_9_fu_434_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln52_4_reg_2236),64));
    mul_ln54_9_fu_434_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    mul_ln54_fu_398_p0 <= mul_ln54_fu_398_p00(32 - 1 downto 0);
    mul_ln54_fu_398_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1138_p12),64));
    mul_ln54_fu_398_p1 <= zext_ln52_fu_1111_p1(32 - 1 downto 0);
    select_ln54_10_fu_1395_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_1_reg_2220(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_11_fu_1464_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_1_fu_1429_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_12_fu_1478_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_1_fu_1458_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_13_fu_1548_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_2_reg_2231(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_14_fu_1561_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_2_reg_2241(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_15_fu_1628_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_2_fu_1595_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_16_fu_1642_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_2_fu_1622_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_17_fu_1693_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_3_reg_2252(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_18_fu_1706_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_3_reg_2262(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_19_fu_1756_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_3_fu_1740_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_1_fu_1369_p3 <= 
        shl_ln54_1_fu_1363_p2 when (and_ln53_1_fu_1340_p2(0) = '1') else 
        tmp_7_fu_1350_p9;
    select_ln54_20_fu_1770_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_3_fu_1750_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_21_fu_1833_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_4_reg_2273(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_22_fu_1846_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_4_fu_1805_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_2_fu_1535_p3 <= 
        shl_ln54_2_fu_1529_p2 when (and_ln53_2_fu_1508_p2(0) = '1') else 
        tmp_10_fu_1518_p7;
    select_ln54_3_fu_1681_p3 <= 
        shl_ln54_3_fu_1676_p2 when (and_ln53_3_fu_1672_p2(0) = '1') else 
        tmp_2_reg_2177;
    select_ln54_4_fu_1821_p3 <= 
        shl_ln54_4_fu_1816_p2 when (and_ln53_4_fu_1811_p2(0) = '1') else 
        tmp_6_reg_2209;
    select_ln54_5_fu_1212_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_reg_2172(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_6_fu_1225_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln53_reg_2188(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_7_fu_1296_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln52_fu_1259_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_8_fu_1310_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln54_fu_1290_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_9_fu_1382_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (icmp_ln51_1_reg_2204(0) = '1') else 
        ap_const_lv64_0;
    select_ln54_fu_1199_p3 <= 
        shl_ln54_fu_1193_p2 when (and_ln53_fu_1169_p2(0) = '1') else 
        tmp_3_fu_1178_p11;
    shl_ln54_1_fu_1363_p2 <= std_logic_vector(shift_left(unsigned(tmp_7_fu_1350_p9),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_2_fu_1529_p2 <= std_logic_vector(shift_left(unsigned(tmp_10_fu_1518_p7),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_3_fu_1676_p2 <= std_logic_vector(shift_left(unsigned(tmp_2_reg_2177),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_4_fu_1816_p2 <= std_logic_vector(shift_left(unsigned(tmp_6_reg_2209),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln54_fu_1193_p2 <= std_logic_vector(shift_left(unsigned(tmp_3_fu_1178_p11),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_10_fu_1518_p6 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln39_2_fu_1108_p1));
    tmp_11_fu_884_p11 <= std_logic_vector(signed(ap_const_lv4_D) - signed(trunc_ln39_fu_580_p1));
    tmp_12_fu_1607_p5 <= (trunc_ln39_1_fu_1105_p1 xor ap_const_lv2_3);
    tmp_13_fu_944_p11 <= std_logic_vector(signed(ap_const_lv4_C) - signed(trunc_ln39_fu_580_p1));
    tmp_14_fu_983_p11 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln39_fu_580_p1));
    tmp_15_fu_1037_p11 <= std_logic_vector(signed(ap_const_lv4_A) - signed(trunc_ln39_fu_580_p1));
    tmp_16_fu_572_p3 <= ap_sig_allocacmp_i1_1(4 downto 4);
    tmp_1_fu_1138_p11 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln39_reg_2152));
    tmp_2_fu_647_p11 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(trunc_ln39_fu_580_p1));
    tmp_3_fu_1178_p10 <= std_logic_vector(signed(ap_const_lv4_8) - signed(trunc_ln39_reg_2152));
    tmp_4_fu_686_p11 <= std_logic_vector(unsigned(ap_const_lv4_1) - unsigned(trunc_ln39_fu_580_p1));
    tmp_5_fu_1271_p9 <= (trunc_ln39_2_fu_1108_p1 xor ap_const_lv3_7);
    tmp_6_fu_746_p11 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(trunc_ln39_fu_580_p1));
    tmp_7_fu_1350_p8 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln39_2_fu_1108_p1));
    tmp_8_fu_785_p11 <= (trunc_ln39_fu_580_p1 xor ap_const_lv4_F);
    tmp_9_fu_1441_p7 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln39_2_fu_1108_p1));
    tmp_s_fu_845_p11 <= std_logic_vector(signed(ap_const_lv4_E) - signed(trunc_ln39_fu_580_p1));
    trunc_ln39_1_fu_1105_p1 <= i1_1_reg_2138(2 - 1 downto 0);
    trunc_ln39_2_fu_1108_p1 <= i1_1_reg_2138(3 - 1 downto 0);
    trunc_ln39_fu_580_p1 <= ap_sig_allocacmp_i1_1(4 - 1 downto 0);
    zext_ln52_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_2167),64));
end behav;
