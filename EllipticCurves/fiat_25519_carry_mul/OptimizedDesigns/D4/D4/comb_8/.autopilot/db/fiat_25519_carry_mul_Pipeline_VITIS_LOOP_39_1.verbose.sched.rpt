

================================================================
== Vitis HLS Report for 'fiat_25519_carry_mul_Pipeline_VITIS_LOOP_39_1'
================================================================
* Date:           Thu May  9 14:30:29 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D4
* Solution:       comb_8 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.229 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_39_1  |        3|        3|         3|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.35>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i1_2 = alloca i32 1"   --->   Operation 6 'alloca' 'i1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add65319 = alloca i32 1"   --->   Operation 7 'alloca' 'add65319' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add65_1320 = alloca i32 1"   --->   Operation 8 'alloca' 'add65_1320' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add65_2321 = alloca i32 1"   --->   Operation 9 'alloca' 'add65_2321' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add65_3322 = alloca i32 1"   --->   Operation 10 'alloca' 'add65_3322' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add65_4323 = alloca i32 1"   --->   Operation 11 'alloca' 'add65_4323' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add65_5324 = alloca i32 1"   --->   Operation 12 'alloca' 'add65_5324' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add65_6325 = alloca i32 1"   --->   Operation 13 'alloca' 'add65_6325' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add65_7326 = alloca i32 1"   --->   Operation 14 'alloca' 'add65_7326' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%add65_8327 = alloca i32 1"   --->   Operation 15 'alloca' 'add65_8327' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%add65_9328 = alloca i32 1"   --->   Operation 16 'alloca' 'add65_9328' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 17 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln54_18_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %zext_ln54_18"   --->   Operation 18 'read' 'zext_ln54_18_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_9_reload"   --->   Operation 19 'read' 'arg2_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 20 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_8_reload"   --->   Operation 21 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 22 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_7_reload"   --->   Operation 23 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 24 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_6_reload"   --->   Operation 25 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 26 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_5_reload"   --->   Operation 27 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_4_reload"   --->   Operation 28 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_3_reload"   --->   Operation 29 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_2_reload"   --->   Operation 30 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_1_reload"   --->   Operation 31 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg2_r_reload"   --->   Operation 32 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_9_reload"   --->   Operation 33 'read' 'arg1_r_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_8_reload"   --->   Operation 34 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_7_reload"   --->   Operation 35 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_6_reload"   --->   Operation 36 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_5_reload"   --->   Operation 37 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 38 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln54_18_cast = zext i32 %zext_ln54_18_read"   --->   Operation 39 'zext' 'zext_ln54_18_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 9, i5 %i1"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_9328"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_8327"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_7326"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_6325"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_5324"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_4323"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_3322"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_2321"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65_1320"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %add65319"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 9, i4 %i1_2"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body31"   --->   Operation 52 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%i1_3 = load i5 %i1" [d4.cpp:39]   --->   Operation 53 'load' 'i1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_16 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i1_3, i32 4" [d4.cpp:39]   --->   Operation 54 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %tmp_16, void %for.body31.split, void %for.end116.exitStub" [d4.cpp:39]   --->   Operation 55 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%i1_2_load = load i4 %i1_2" [d4.cpp:39]   --->   Operation 56 'load' 'i1_2_load' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i4 %i1_2_load" [d4.cpp:39]   --->   Operation 57 'trunc' 'trunc_ln39' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln39_1 = trunc i5 %i1_3" [d4.cpp:39]   --->   Operation 58 'trunc' 'trunc_ln39_1' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln39_2 = trunc i5 %i1_3" [d4.cpp:39]   --->   Operation 59 'trunc' 'trunc_ln39_2' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln39_3 = trunc i5 %i1_3" [d4.cpp:39]   --->   Operation 60 'trunc' 'trunc_ln39_3' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln39_4 = trunc i5 %i1_3" [d4.cpp:39]   --->   Operation 61 'trunc' 'trunc_ln39_4' <Predicate = (!tmp_16)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.67ns)   --->   "%sub_ln54_1 = sub i3 2, i3 %trunc_ln39_4" [d4.cpp:54]   --->   Operation 62 'sub' 'sub_ln54_1' <Predicate = (!tmp_16)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.67ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.7i32.i3, i32 0, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i3 %sub_ln54_1" [d4.cpp:54]   --->   Operation 63 'mux' 'tmp_3' <Predicate = (!tmp_16)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.67ns)   --->   "%sub_ln54_2 = sub i3 3, i3 %trunc_ln39_4" [d4.cpp:54]   --->   Operation 64 'sub' 'sub_ln54_2' <Predicate = (!tmp_16)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.72ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.8i32.i3, i32 0, i32 0, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i3 %sub_ln54_2" [d4.cpp:54]   --->   Operation 65 'mux' 'tmp_5' <Predicate = (!tmp_16)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.79ns)   --->   "%sub_ln54_3 = sub i4 12, i4 %trunc_ln39_1" [d4.cpp:54]   --->   Operation 66 'sub' 'sub_ln54_3' <Predicate = (!tmp_16)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.77ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.9i32.i4, i32 0, i32 0, i32 0, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i4 %sub_ln54_3" [d4.cpp:54]   --->   Operation 67 'mux' 'tmp_7' <Predicate = (!tmp_16)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.79ns)   --->   "%sub_ln54_4 = sub i4 13, i4 %trunc_ln39_1" [d4.cpp:54]   --->   Operation 68 'sub' 'sub_ln54_4' <Predicate = (!tmp_16)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.75ns)   --->   "%tmp_9 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln54_4" [d4.cpp:54]   --->   Operation 69 'mux' 'tmp_9' <Predicate = (!tmp_16)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.78ns)   --->   "%empty = add i5 %i1_3, i5 1" [d4.cpp:39]   --->   Operation 70 'add' 'empty' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.78ns)   --->   "%icmp_ln51 = icmp_sgt  i5 %empty, i5 9" [d4.cpp:51]   --->   Operation 71 'icmp' 'icmp_ln51' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln52)   --->   "%and_ln51 = and i1 %trunc_ln39, i1 %icmp_ln51" [d4.cpp:51]   --->   Operation 72 'and' 'and_ln51' <Predicate = (!tmp_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln52 = select i1 %and_ln51, i32 38, i32 19" [d4.cpp:52]   --->   Operation 73 'select' 'select_ln52' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 74 '%mul_ln52 = mul i32 %arg2_r_9_reload_read, i32 %select_ln52'
ST_1 : Operation 74 [1/1] (2.65ns)   --->   "%mul_ln52 = mul i32 %arg2_r_9_reload_read, i32 %select_ln52" [d4.cpp:52]   --->   Operation 74 'mul' 'mul_ln52' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.78ns)   --->   "%icmp_ln53 = icmp_slt  i5 %empty, i5 10" [d4.cpp:53]   --->   Operation 75 'icmp' 'icmp_ln53' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.67ns)   --->   "%sub_ln54_5 = sub i3 0, i3 %trunc_ln39_4" [d4.cpp:54]   --->   Operation 76 'sub' 'sub_ln54_5' <Predicate = (!tmp_16)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.28ns)   --->   "%cmp32_1_1 = xor i1 %trunc_ln39, i1 1" [d4.cpp:39]   --->   Operation 77 'xor' 'cmp32_1_1' <Predicate = (!tmp_16)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.78ns)   --->   "%empty_22 = add i5 %i1_3, i5 2" [d4.cpp:39]   --->   Operation 78 'add' 'empty_22' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 79 '%mul_ln52_1 = mul i32 %arg2_r_8_reload_read, i32 19'
ST_1 : Operation 79 [1/1] (2.69ns)   --->   "%mul_ln52_1 = mul i32 %arg2_r_8_reload_read, i32 19" [d4.cpp:52]   --->   Operation 79 'mul' 'mul_ln52_1' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.78ns)   --->   "%icmp_ln52 = icmp_sgt  i5 %empty_22, i5 9" [d4.cpp:52]   --->   Operation 80 'icmp' 'icmp_ln52' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.78ns)   --->   "%icmp_ln54 = icmp_slt  i5 %empty_22, i5 10" [d4.cpp:54]   --->   Operation 81 'icmp' 'icmp_ln54' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 82 '%mul_ln52_2 = mul i32 %arg2_r_9_reload_read, i32 19'
ST_1 : Operation 82 [1/1] (2.69ns)   --->   "%mul_ln52_2 = mul i32 %arg2_r_9_reload_read, i32 19" [d4.cpp:52]   --->   Operation 82 'mul' 'mul_ln52_2' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.78ns)   --->   "%empty_23 = add i5 %i1_3, i5 3" [d4.cpp:39]   --->   Operation 83 'add' 'empty_23' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.78ns)   --->   "%icmp_ln51_1 = icmp_sgt  i5 %empty_23, i5 9" [d4.cpp:51]   --->   Operation 84 'icmp' 'icmp_ln51_1' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node select_ln52_1)   --->   "%and_ln51_1 = and i1 %trunc_ln39, i1 %icmp_ln51_1" [d4.cpp:51]   --->   Operation 85 'and' 'and_ln51_1' <Predicate = (!tmp_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln52_1 = select i1 %and_ln51_1, i32 38, i32 19" [d4.cpp:52]   --->   Operation 86 'select' 'select_ln52_1' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%sub_ln52 = sub i4 0, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 87 'sub' 'sub_ln52' <Predicate = (!tmp_16)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.75ns)   --->   "%tmp_11 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52" [d4.cpp:52]   --->   Operation 88 'mux' 'tmp_11' <Predicate = (!tmp_16)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 89 '%mul_ln52_3 = mul i32 %tmp_11, i32 %select_ln52_1'
ST_1 : Operation 89 [1/1] (2.65ns)   --->   "%mul_ln52_3 = mul i32 %tmp_11, i32 %select_ln52_1" [d4.cpp:52]   --->   Operation 89 'mul' 'mul_ln52_3' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.78ns)   --->   "%icmp_ln53_1 = icmp_slt  i5 %empty_23, i5 10" [d4.cpp:53]   --->   Operation 90 'icmp' 'icmp_ln53_1' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln52_2)   --->   "%and_ln51_2 = and i1 %icmp_ln52, i1 %cmp32_1_1" [d4.cpp:51]   --->   Operation 91 'and' 'and_ln51_2' <Predicate = (!tmp_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln52_2 = select i1 %and_ln51_2, i32 38, i32 19" [d4.cpp:52]   --->   Operation 92 'select' 'select_ln52_2' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 93 '%mul_ln52_4 = mul i32 %arg2_r_8_reload_read, i32 %select_ln52_2'
ST_1 : Operation 93 [1/1] (2.65ns)   --->   "%mul_ln52_4 = mul i32 %arg2_r_8_reload_read, i32 %select_ln52_2" [d4.cpp:52]   --->   Operation 93 'mul' 'mul_ln52_4' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.78ns)   --->   "%empty_24 = add i5 %i1_3, i5 4" [d4.cpp:39]   --->   Operation 94 'add' 'empty_24' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.35ns)   --->   "%xor_ln52 = xor i4 %trunc_ln39_1, i4 15" [d4.cpp:52]   --->   Operation 95 'xor' 'xor_ln52' <Predicate = (!tmp_16)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.75ns)   --->   "%tmp_13 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %xor_ln52" [d4.cpp:52]   --->   Operation 96 'mux' 'tmp_13' <Predicate = (!tmp_16)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 97 '%mul_ln52_5 = mul i32 %tmp_13, i32 19'
ST_1 : Operation 97 [1/1] (2.69ns)   --->   "%mul_ln52_5 = mul i32 %tmp_13, i32 19" [d4.cpp:52]   --->   Operation 97 'mul' 'mul_ln52_5' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_sgt  i5 %empty_24, i5 9" [d4.cpp:52]   --->   Operation 98 'icmp' 'icmp_ln52_1' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.78ns)   --->   "%icmp_ln54_1 = icmp_slt  i5 %empty_24, i5 10" [d4.cpp:54]   --->   Operation 99 'icmp' 'icmp_ln54_1' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 100 '%mul_ln52_6 = mul i32 %tmp_11, i32 19'
ST_1 : Operation 100 [1/1] (2.69ns)   --->   "%mul_ln52_6 = mul i32 %tmp_11, i32 19" [d4.cpp:52]   --->   Operation 100 'mul' 'mul_ln52_6' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.78ns)   --->   "%empty_25 = add i5 %i1_3, i5 5" [d4.cpp:39]   --->   Operation 101 'add' 'empty_25' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.78ns)   --->   "%icmp_ln51_2 = icmp_sgt  i5 %empty_25, i5 9" [d4.cpp:51]   --->   Operation 102 'icmp' 'icmp_ln51_2' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node select_ln52_3)   --->   "%and_ln51_3 = and i1 %trunc_ln39, i1 %icmp_ln51_2" [d4.cpp:51]   --->   Operation 103 'and' 'and_ln51_3' <Predicate = (!tmp_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln52_3 = select i1 %and_ln51_3, i32 38, i32 19" [d4.cpp:52]   --->   Operation 104 'select' 'select_ln52_3' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.79ns)   --->   "%sub_ln52_1 = sub i4 14, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 105 'sub' 'sub_ln52_1' <Predicate = (!tmp_16)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.75ns)   --->   "%tmp_15 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg2_r_5_reload_read, i32 %arg2_r_6_reload_read, i32 %arg2_r_7_reload_read, i32 %arg2_r_8_reload_read, i32 %arg2_r_9_reload_read, i4 %sub_ln52_1" [d4.cpp:52]   --->   Operation 106 'mux' 'tmp_15' <Predicate = (!tmp_16)> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 107 '%mul_ln52_7 = mul i32 %tmp_15, i32 %select_ln52_3'
ST_1 : Operation 107 [1/1] (2.65ns)   --->   "%mul_ln52_7 = mul i32 %tmp_15, i32 %select_ln52_3" [d4.cpp:52]   --->   Operation 107 'mul' 'mul_ln52_7' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.78ns)   --->   "%icmp_ln53_2 = icmp_slt  i5 %empty_25, i5 10" [d4.cpp:53]   --->   Operation 108 'icmp' 'icmp_ln53_2' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node select_ln52_4)   --->   "%and_ln51_4 = and i1 %icmp_ln52_1, i1 %cmp32_1_1" [d4.cpp:51]   --->   Operation 109 'and' 'and_ln51_4' <Predicate = (!tmp_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln52_4 = select i1 %and_ln51_4, i32 38, i32 19" [d4.cpp:52]   --->   Operation 110 'select' 'select_ln52_4' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 111 '%mul_ln52_8 = mul i32 %tmp_13, i32 %select_ln52_4'
ST_1 : Operation 111 [1/1] (2.65ns)   --->   "%mul_ln52_8 = mul i32 %tmp_13, i32 %select_ln52_4" [d4.cpp:52]   --->   Operation 111 'mul' 'mul_ln52_8' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 112 '%mul_ln52_9 = mul i32 %tmp_9, i32 19'
ST_1 : Operation 112 [1/1] (2.69ns)   --->   "%mul_ln52_9 = mul i32 %tmp_9, i32 19" [d4.cpp:52]   --->   Operation 112 'mul' 'mul_ln52_9' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 113 '%mul_ln52_10 = mul i32 %tmp_15, i32 19'
ST_1 : Operation 113 [1/1] (2.69ns)   --->   "%mul_ln52_10 = mul i32 %tmp_15, i32 19" [d4.cpp:52]   --->   Operation 113 'mul' 'mul_ln52_10' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.36ns)   --->   "%select_ln52_5 = select i1 %trunc_ln39, i32 38, i32 19" [d4.cpp:52]   --->   Operation 114 'select' 'select_ln52_5' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 115 '%mul_ln52_11 = mul i32 %tmp_7, i32 %select_ln52_5'
ST_1 : Operation 115 [1/1] (2.65ns)   --->   "%mul_ln52_11 = mul i32 %tmp_7, i32 %select_ln52_5" [d4.cpp:52]   --->   Operation 115 'mul' 'mul_ln52_11' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.36ns)   --->   "%select_ln52_6 = select i1 %trunc_ln39, i32 19, i32 38" [d4.cpp:52]   --->   Operation 116 'select' 'select_ln52_6' <Predicate = (!tmp_16)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 117 '%mul_ln52_12 = mul i32 %tmp_9, i32 %select_ln52_6'
ST_1 : Operation 117 [1/1] (2.65ns)   --->   "%mul_ln52_12 = mul i32 %tmp_9, i32 %select_ln52_6" [d4.cpp:52]   --->   Operation 117 'mul' 'mul_ln52_12' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 118 '%mul_ln52_13 = mul i32 %tmp_5, i32 19'
ST_1 : Operation 118 [1/1] (2.69ns)   --->   "%mul_ln52_13 = mul i32 %tmp_5, i32 19" [d4.cpp:52]   --->   Operation 118 'mul' 'mul_ln52_13' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.72ns)   --->   Input mux for Operation 119 '%mul_ln52_14 = mul i32 %tmp_7, i32 19'
ST_1 : Operation 119 [1/1] (2.69ns)   --->   "%mul_ln52_14 = mul i32 %tmp_7, i32 19" [d4.cpp:52]   --->   Operation 119 'mul' 'mul_ln52_14' <Predicate = (!tmp_16)> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 120 '%mul_ln52_15 = mul i32 %tmp_3, i32 %select_ln52_5'
ST_1 : Operation 120 [1/1] (2.65ns)   --->   "%mul_ln52_15 = mul i32 %tmp_3, i32 %select_ln52_5" [d4.cpp:52]   --->   Operation 120 'mul' 'mul_ln52_15' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.77ns)   --->   Input mux for Operation 121 '%mul_ln52_16 = mul i32 %tmp_5, i32 %select_ln52_6'
ST_1 : Operation 121 [1/1] (2.65ns)   --->   "%mul_ln52_16 = mul i32 %tmp_5, i32 %select_ln52_6" [d4.cpp:52]   --->   Operation 121 'mul' 'mul_ln52_16' <Predicate = (!tmp_16)> <Delay = 2.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.78ns)   --->   "%add_ln39 = add i5 %i1_3, i5 27" [d4.cpp:39]   --->   Operation 122 'add' 'add_ln39' <Predicate = (!tmp_16)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 123 [1/1] (0.79ns)   --->   "%i1_4 = add i4 %i1_2_load, i4 11" [d4.cpp:39]   --->   Operation 123 'add' 'i1_4' <Predicate = (!tmp_16)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.42ns)   --->   "%store_ln39 = store i5 %add_ln39, i5 %i1" [d4.cpp:39]   --->   Operation 124 'store' 'store_ln39' <Predicate = (!tmp_16)> <Delay = 0.42>
ST_1 : Operation 125 [1/1] (0.42ns)   --->   "%store_ln39 = store i4 %i1_4, i4 %i1_2" [d4.cpp:39]   --->   Operation 125 'store' 'store_ln39' <Predicate = (!tmp_16)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.22>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%add65319_load = load i64 %add65319" [d4.cpp:54]   --->   Operation 126 'load' 'add65319_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%add65_1320_load = load i64 %add65_1320" [d4.cpp:54]   --->   Operation 127 'load' 'add65_1320_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%add65_9328_load = load i64 %add65_9328" [d4.cpp:54]   --->   Operation 128 'load' 'add65_9328_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.75ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i32 %arg1_r_9_reload_read, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 129 'mux' 'tmp' <Predicate = true> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i32 %tmp" [d4.cpp:52]   --->   Operation 130 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.67ns)   --->   "%sub_ln54 = sub i3 1, i3 %trunc_ln39_4" [d4.cpp:54]   --->   Operation 131 'sub' 'sub_ln54' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.62ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.6i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i32 %arg2_r_5_reload_read, i3 %sub_ln54" [d4.cpp:54]   --->   Operation 132 'mux' 'tmp_1' <Predicate = true> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i32 %tmp_1" [d4.cpp:54]   --->   Operation 133 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.75ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i32 %arg1_r_8_reload_read, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 134 'mux' 'tmp_2' <Predicate = true> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i32 %tmp_2" [d4.cpp:52]   --->   Operation 135 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i32 %tmp_3" [d4.cpp:54]   --->   Operation 136 'zext' 'zext_ln54_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.75ns)   --->   "%tmp_4 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i32 %arg1_r_7_reload_read, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 137 'mux' 'tmp_4' <Predicate = true> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i32 %tmp_4" [d4.cpp:52]   --->   Operation 138 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln54_2 = zext i32 %tmp_5" [d4.cpp:54]   --->   Operation 139 'zext' 'zext_ln54_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 140 [1/1] (0.75ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i32 %arg1_r_6_reload_read, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 140 'mux' 'tmp_6' <Predicate = true> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i32 %tmp_6" [d4.cpp:52]   --->   Operation 141 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln54_3 = zext i32 %tmp_7" [d4.cpp:54]   --->   Operation 142 'zext' 'zext_ln54_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.75ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.10i32.i4, i32 0, i32 0, i32 0, i32 0, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i32 %arg1_r_5_reload_read, i4 %trunc_ln39_1" [d4.cpp:52]   --->   Operation 143 'mux' 'tmp_8' <Predicate = true> <Delay = 0.75> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i32 %tmp_8" [d4.cpp:52]   --->   Operation 144 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln54_4 = zext i32 %tmp_9" [d4.cpp:54]   --->   Operation 145 'zext' 'zext_ln54_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 146 '%mul_ln54 = mul i64 %zext_ln54, i64 %zext_ln52'
ST_2 : Operation 146 [1/1] (2.16ns)   --->   "%mul_ln54 = mul i64 %zext_ln54, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 146 'mul' 'mul_ln54' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 147 '%mul_ln54_1 = mul i64 %zext_ln54_1, i64 %zext_ln52_1'
ST_2 : Operation 147 [1/1] (2.16ns)   --->   "%mul_ln54_1 = mul i64 %zext_ln54_1, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 147 'mul' 'mul_ln54_1' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 148 '%mul_ln54_2 = mul i64 %zext_ln54_3, i64 %zext_ln52_3'
ST_2 : Operation 148 [1/1] (2.16ns)   --->   "%mul_ln54_2 = mul i64 %zext_ln54_3, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 148 'mul' 'mul_ln54_2' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 149 '%mul_ln54_3 = mul i64 %zext_ln54_4, i64 %zext_ln52_4'
ST_2 : Operation 149 [1/1] (2.16ns)   --->   "%mul_ln54_3 = mul i64 %zext_ln54_4, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 149 'mul' 'mul_ln54_3' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 150 '%mul_ln54_4 = mul i64 %zext_ln54_2, i64 %zext_ln52_2'
ST_2 : Operation 150 [1/1] (2.16ns)   --->   "%mul_ln54_4 = mul i64 %zext_ln54_2, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 150 'mul' 'mul_ln54_4' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 151 [1/1] (1.08ns)   --->   "%add_ln54 = add i64 %mul_ln54, i64 %mul_ln54_1" [d4.cpp:54]   --->   Operation 151 'add' 'add_ln54' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_1 = add i64 %mul_ln54_2, i64 %mul_ln54_3" [d4.cpp:54]   --->   Operation 152 'add' 'add_ln54_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 153 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_2 = add i64 %add_ln54_1, i64 %mul_ln54_4" [d4.cpp:54]   --->   Operation 153 'add' 'add_ln54_2' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 154 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_3 = add i64 %add_ln54_2, i64 %add_ln54" [d4.cpp:54]   --->   Operation 154 'add' 'add_ln54_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 155 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_4 = add i64 %add65319_load, i64 %add_ln54_3" [d4.cpp:54]   --->   Operation 155 'add' 'add_ln54_4' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i32 %mul_ln52" [d4.cpp:52]   --->   Operation 156 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node select_ln54)   --->   "%and_ln53 = and i1 %trunc_ln39, i1 %icmp_ln53" [d4.cpp:53]   --->   Operation 157 'and' 'and_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.57ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.5i32.i3, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i32 %arg2_r_4_reload_read, i3 %sub_ln54_5" [d4.cpp:54]   --->   Operation 158 'mux' 'tmp_s' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node select_ln54)   --->   "%shl_ln54 = shl i32 %tmp_s, i32 1" [d4.cpp:54]   --->   Operation 159 'shl' 'shl_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 160 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54 = select i1 %and_ln53, i32 %shl_ln54, i32 %tmp_s" [d4.cpp:54]   --->   Operation 160 'select' 'select_ln54' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln54_5 = zext i32 %select_ln54" [d4.cpp:54]   --->   Operation 161 'zext' 'zext_ln54_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_1)   --->   "%shl_ln54_1 = shl i32 %tmp_1, i32 1" [d4.cpp:54]   --->   Operation 162 'shl' 'shl_ln54_1' <Predicate = (!trunc_ln39)> <Delay = 0.00>
ST_2 : Operation 163 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_1 = select i1 %trunc_ln39, i32 %tmp_1, i32 %shl_ln54_1" [d4.cpp:54]   --->   Operation 163 'select' 'select_ln54_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln54_6 = zext i32 %select_ln54_1" [d4.cpp:54]   --->   Operation 164 'zext' 'zext_ln54_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_2)   --->   "%shl_ln54_2 = shl i32 %tmp_3, i32 1" [d4.cpp:54]   --->   Operation 165 'shl' 'shl_ln54_2' <Predicate = (trunc_ln39)> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_2 = select i1 %trunc_ln39, i32 %shl_ln54_2, i32 %tmp_3" [d4.cpp:54]   --->   Operation 166 'select' 'select_ln54_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln54_7 = zext i32 %select_ln54_2" [d4.cpp:54]   --->   Operation 167 'zext' 'zext_ln54_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_3)   --->   "%shl_ln54_3 = shl i32 %tmp_5, i32 1" [d4.cpp:54]   --->   Operation 168 'shl' 'shl_ln54_3' <Predicate = (!trunc_ln39)> <Delay = 0.00>
ST_2 : Operation 169 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_3 = select i1 %trunc_ln39, i32 %tmp_5, i32 %shl_ln54_3" [d4.cpp:54]   --->   Operation 169 'select' 'select_ln54_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln54_8 = zext i32 %select_ln54_3" [d4.cpp:54]   --->   Operation 170 'zext' 'zext_ln54_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_4)   --->   "%shl_ln54_4 = shl i32 %tmp_7, i32 1" [d4.cpp:54]   --->   Operation 171 'shl' 'shl_ln54_4' <Predicate = (trunc_ln39)> <Delay = 0.00>
ST_2 : Operation 172 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_4 = select i1 %trunc_ln39, i32 %shl_ln54_4, i32 %tmp_7" [d4.cpp:54]   --->   Operation 172 'select' 'select_ln54_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln54_9 = zext i32 %select_ln54_4" [d4.cpp:54]   --->   Operation 173 'zext' 'zext_ln54_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 174 '%mul_ln54_5 = mul i64 %zext_ln52_5, i64 %zext_ln52'
ST_2 : Operation 174 [1/1] (2.16ns)   --->   "%mul_ln54_5 = mul i64 %zext_ln52_5, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 174 'mul' 'mul_ln54_5' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.17ns)   --->   "%select_ln54_9 = select i1 %icmp_ln51, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 175 'select' 'select_ln54_9' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (0.37ns)   --->   "%and_ln54 = and i64 %mul_ln54_5, i64 %select_ln54_9" [d4.cpp:54]   --->   Operation 176 'and' 'and_ln54' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 177 '%mul_ln54_6 = mul i64 %zext_ln54_8, i64 %zext_ln52_3'
ST_2 : Operation 177 [1/1] (2.16ns)   --->   "%mul_ln54_6 = mul i64 %zext_ln54_8, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 177 'mul' 'mul_ln54_6' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 178 '%mul_ln54_7 = mul i64 %zext_ln52_1, i64 %zext_ln54_6'
ST_2 : Operation 178 [1/1] (2.16ns)   --->   "%mul_ln54_7 = mul i64 %zext_ln52_1, i64 %zext_ln54_6" [d4.cpp:54]   --->   Operation 178 'mul' 'mul_ln54_7' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 179 '%mul_ln54_8 = mul i64 %zext_ln54_7, i64 %zext_ln52_2'
ST_2 : Operation 179 [1/1] (2.16ns)   --->   "%mul_ln54_8 = mul i64 %zext_ln54_7, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 179 'mul' 'mul_ln54_8' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 180 '%mul_ln54_9 = mul i64 %zext_ln54_9, i64 %zext_ln52_4'
ST_2 : Operation 180 [1/1] (2.16ns)   --->   "%mul_ln54_9 = mul i64 %zext_ln54_9, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 180 'mul' 'mul_ln54_9' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 181 '%mul_ln54_10 = mul i64 %zext_ln54_5, i64 %zext_ln52'
ST_2 : Operation 181 [1/1] (2.16ns)   --->   "%mul_ln54_10 = mul i64 %zext_ln54_5, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 181 'mul' 'mul_ln54_10' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.17ns)   --->   "%select_ln54_10 = select i1 %icmp_ln53, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 182 'select' 'select_ln54_10' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.37ns)   --->   "%and_ln54_1 = and i64 %mul_ln54_10, i64 %select_ln54_10" [d4.cpp:54]   --->   Operation 183 'and' 'and_ln54_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_5 = add i64 %mul_ln54_8, i64 %mul_ln54_6" [d4.cpp:54]   --->   Operation 184 'add' 'add_ln54_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 185 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_6 = add i64 %add_ln54_5, i64 %mul_ln54_7" [d4.cpp:54]   --->   Operation 185 'add' 'add_ln54_6' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 186 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_7 = add i64 %and_ln54, i64 %and_ln54_1" [d4.cpp:54]   --->   Operation 186 'add' 'add_ln54_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 187 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_8 = add i64 %add_ln54_7, i64 %mul_ln54_9" [d4.cpp:54]   --->   Operation 187 'add' 'add_ln54_8' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 188 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_9 = add i64 %add_ln54_8, i64 %add_ln54_6" [d4.cpp:54]   --->   Operation 188 'add' 'add_ln54_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 189 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_10 = add i64 %add65_1320_load, i64 %add_ln54_9" [d4.cpp:54]   --->   Operation 189 'add' 'add_ln54_10' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i32 %mul_ln52_1" [d4.cpp:52]   --->   Operation 190 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 191 [1/1] (0.28ns)   --->   "%xor_ln54 = xor i2 %trunc_ln39_3, i2 3" [d4.cpp:54]   --->   Operation 191 'xor' 'xor_ln54' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 192 [1/1] (0.52ns)   --->   "%tmp_10 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i32 %arg2_r_3_reload_read, i2 %xor_ln54" [d4.cpp:54]   --->   Operation 192 'mux' 'tmp_10' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln54_10 = zext i32 %tmp_10" [d4.cpp:54]   --->   Operation 193 'zext' 'zext_ln54_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i32 %mul_ln52_2" [d4.cpp:52]   --->   Operation 194 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln54_11 = zext i32 %tmp_s" [d4.cpp:54]   --->   Operation 195 'zext' 'zext_ln54_11' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 196 '%mul_ln54_11 = mul i64 %zext_ln52_6, i64 %zext_ln52'
ST_2 : Operation 196 [1/1] (2.16ns)   --->   "%mul_ln54_11 = mul i64 %zext_ln52_6, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 196 'mul' 'mul_ln54_11' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 197 '%mul_ln54_12 = mul i64 %zext_ln54_10, i64 %zext_ln52'
ST_2 : Operation 197 [1/1] (2.16ns)   --->   "%mul_ln54_12 = mul i64 %zext_ln54_10, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 197 'mul' 'mul_ln54_12' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 198 '%mul_ln54_13 = mul i64 %zext_ln54_11, i64 %zext_ln52_1'
ST_2 : Operation 198 [1/1] (2.16ns)   --->   "%mul_ln54_13 = mul i64 %zext_ln54_11, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 198 'mul' 'mul_ln54_13' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 199 '%mul_ln54_14 = mul i64 %zext_ln52_7, i64 %zext_ln52_1'
ST_2 : Operation 199 [1/1] (2.16ns)   --->   "%mul_ln54_14 = mul i64 %zext_ln52_7, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 199 'mul' 'mul_ln54_14' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.17ns)   --->   "%select_ln54_11 = select i1 %icmp_ln52, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 200 'select' 'select_ln54_11' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_14)   --->   "%and_ln54_2 = and i64 %mul_ln54_11, i64 %select_ln54_11" [d4.cpp:54]   --->   Operation 201 'and' 'and_ln54_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 202 [1/1] (0.17ns)   --->   "%select_ln54_12 = select i1 %icmp_ln54, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 202 'select' 'select_ln54_12' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_14)   --->   "%and_ln54_3 = and i64 %mul_ln54_12, i64 %select_ln54_12" [d4.cpp:54]   --->   Operation 203 'and' 'and_ln54_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 204 [1/1] (0.37ns)   --->   "%and_ln54_4 = and i64 %mul_ln54_13, i64 %select_ln54_10" [d4.cpp:54]   --->   Operation 204 'and' 'and_ln54_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 205 [1/1] (0.37ns)   --->   "%and_ln54_5 = and i64 %mul_ln54_14, i64 %select_ln54_9" [d4.cpp:54]   --->   Operation 205 'and' 'and_ln54_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 206 '%mul_ln54_15 = mul i64 %zext_ln52_4, i64 %zext_ln54_2'
ST_2 : Operation 206 [1/1] (2.16ns)   --->   "%mul_ln54_15 = mul i64 %zext_ln52_4, i64 %zext_ln54_2" [d4.cpp:54]   --->   Operation 206 'mul' 'mul_ln54_15' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 207 '%mul_ln54_16 = mul i64 %zext_ln52_3, i64 %zext_ln54_1'
ST_2 : Operation 207 [1/1] (2.16ns)   --->   "%mul_ln54_16 = mul i64 %zext_ln52_3, i64 %zext_ln54_1" [d4.cpp:54]   --->   Operation 207 'mul' 'mul_ln54_16' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 208 '%mul_ln54_17 = mul i64 %zext_ln52_2, i64 %zext_ln54'
ST_2 : Operation 208 [1/1] (2.16ns)   --->   "%mul_ln54_17 = mul i64 %zext_ln52_2, i64 %zext_ln54" [d4.cpp:54]   --->   Operation 208 'mul' 'mul_ln54_17' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_11 = add i64 %mul_ln54_16, i64 %mul_ln54_15" [d4.cpp:54]   --->   Operation 209 'add' 'add_ln54_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 210 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_12 = add i64 %add_ln54_11, i64 %mul_ln54_17" [d4.cpp:54]   --->   Operation 210 'add' 'add_ln54_12' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_13 = add i64 %and_ln54_5, i64 %and_ln54_4" [d4.cpp:54]   --->   Operation 211 'add' 'add_ln54_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 212 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_14 = add i64 %and_ln54_2, i64 %and_ln54_3" [d4.cpp:54]   --->   Operation 212 'add' 'add_ln54_14' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_15 = add i64 %add_ln54_14, i64 %add_ln54_13" [d4.cpp:54]   --->   Operation 213 'add' 'add_ln54_15' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln52_8 = zext i32 %mul_ln52_3" [d4.cpp:52]   --->   Operation 214 'zext' 'zext_ln52_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_5)   --->   "%and_ln53_1 = and i1 %trunc_ln39, i1 %icmp_ln53_1" [d4.cpp:53]   --->   Operation 215 'and' 'and_ln53_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 216 [1/1] (0.54ns)   --->   "%sub_ln54_6 = sub i2 2, i2 %trunc_ln39_3" [d4.cpp:54]   --->   Operation 216 'sub' 'sub_ln54_6' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 217 [1/1] (0.47ns)   --->   "%tmp_12 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i32 %arg2_r_2_reload_read, i2 %sub_ln54_6" [d4.cpp:54]   --->   Operation 217 'mux' 'tmp_12' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_5)   --->   "%shl_ln54_5 = shl i32 %tmp_12, i32 1" [d4.cpp:54]   --->   Operation 218 'shl' 'shl_ln54_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 219 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_5 = select i1 %and_ln53_1, i32 %shl_ln54_5, i32 %tmp_12" [d4.cpp:54]   --->   Operation 219 'select' 'select_ln54_5' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%zext_ln54_12 = zext i32 %select_ln54_5" [d4.cpp:54]   --->   Operation 220 'zext' 'zext_ln54_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln52_9 = zext i32 %mul_ln52_4" [d4.cpp:52]   --->   Operation 221 'zext' 'zext_ln52_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_6)   --->   "%and_ln53_2 = and i1 %icmp_ln54, i1 %cmp32_1_1" [d4.cpp:53]   --->   Operation 222 'and' 'and_ln53_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_6)   --->   "%shl_ln54_6 = shl i32 %tmp_10, i32 1" [d4.cpp:54]   --->   Operation 223 'shl' 'shl_ln54_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_6 = select i1 %and_ln53_2, i32 %shl_ln54_6, i32 %tmp_10" [d4.cpp:54]   --->   Operation 224 'select' 'select_ln54_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%zext_ln54_13 = zext i32 %select_ln54_6" [d4.cpp:54]   --->   Operation 225 'zext' 'zext_ln54_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 226 '%mul_ln54_18 = mul i64 %zext_ln52_3, i64 %zext_ln54_6'
ST_2 : Operation 226 [1/1] (2.16ns)   --->   "%mul_ln54_18 = mul i64 %zext_ln52_3, i64 %zext_ln54_6" [d4.cpp:54]   --->   Operation 226 'mul' 'mul_ln54_18' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 227 '%mul_ln54_19 = mul i64 %zext_ln52_8, i64 %zext_ln52'
ST_2 : Operation 227 [1/1] (2.16ns)   --->   "%mul_ln54_19 = mul i64 %zext_ln52_8, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 227 'mul' 'mul_ln54_19' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 228 '%mul_ln54_20 = mul i64 %zext_ln54_5, i64 %zext_ln52_2'
ST_2 : Operation 228 [1/1] (2.16ns)   --->   "%mul_ln54_20 = mul i64 %zext_ln54_5, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 228 'mul' 'mul_ln54_20' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 229 '%mul_ln54_21 = mul i64 %zext_ln54_12, i64 %zext_ln52'
ST_2 : Operation 229 [1/1] (2.16ns)   --->   "%mul_ln54_21 = mul i64 %zext_ln54_12, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 229 'mul' 'mul_ln54_21' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 230 '%mul_ln54_22 = mul i64 %zext_ln52_9, i64 %zext_ln52_1'
ST_2 : Operation 230 [1/1] (2.16ns)   --->   "%mul_ln54_22 = mul i64 %zext_ln52_9, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 230 'mul' 'mul_ln54_22' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 231 '%mul_ln54_23 = mul i64 %zext_ln54_13, i64 %zext_ln52_1'
ST_2 : Operation 231 [1/1] (2.16ns)   --->   "%mul_ln54_23 = mul i64 %zext_ln54_13, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 231 'mul' 'mul_ln54_23' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 232 '%mul_ln54_24 = mul i64 %zext_ln52_5, i64 %zext_ln52_2'
ST_2 : Operation 232 [1/1] (2.16ns)   --->   "%mul_ln54_24 = mul i64 %zext_ln52_5, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 232 'mul' 'mul_ln54_24' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.17ns)   --->   "%select_ln54_13 = select i1 %icmp_ln51_1, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 233 'select' 'select_ln54_13' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_22)   --->   "%and_ln54_6 = and i64 %mul_ln54_19, i64 %select_ln54_13" [d4.cpp:54]   --->   Operation 234 'and' 'and_ln54_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_19)   --->   "%and_ln54_7 = and i64 %mul_ln54_20, i64 %select_ln54_10" [d4.cpp:54]   --->   Operation 235 'and' 'and_ln54_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 236 [1/1] (0.17ns)   --->   "%select_ln54_14 = select i1 %icmp_ln53_1, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 236 'select' 'select_ln54_14' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_22)   --->   "%and_ln54_8 = and i64 %mul_ln54_21, i64 %select_ln54_14" [d4.cpp:54]   --->   Operation 237 'and' 'and_ln54_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 238 [1/1] (0.37ns)   --->   "%and_ln54_9 = and i64 %mul_ln54_22, i64 %select_ln54_11" [d4.cpp:54]   --->   Operation 238 'and' 'and_ln54_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.37ns)   --->   "%and_ln54_10 = and i64 %mul_ln54_23, i64 %select_ln54_12" [d4.cpp:54]   --->   Operation 239 'and' 'and_ln54_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_19)   --->   "%and_ln54_11 = and i64 %mul_ln54_24, i64 %select_ln54_9" [d4.cpp:54]   --->   Operation 240 'and' 'and_ln54_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 241 '%mul_ln54_25 = mul i64 %zext_ln52_4, i64 %zext_ln54_7'
ST_2 : Operation 241 [1/1] (2.16ns)   --->   "%mul_ln54_25 = mul i64 %zext_ln52_4, i64 %zext_ln54_7" [d4.cpp:54]   --->   Operation 241 'mul' 'mul_ln54_25' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_18 = add i64 %mul_ln54_18, i64 %mul_ln54_25" [d4.cpp:54]   --->   Operation 242 'add' 'add_ln54_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 243 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_19 = add i64 %and_ln54_11, i64 %and_ln54_7" [d4.cpp:54]   --->   Operation 243 'add' 'add_ln54_19' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_20 = add i64 %add_ln54_19, i64 %add_ln54_18" [d4.cpp:54]   --->   Operation 244 'add' 'add_ln54_20' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 245 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_21 = add i64 %and_ln54_9, i64 %and_ln54_10" [d4.cpp:54]   --->   Operation 245 'add' 'add_ln54_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 246 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_22 = add i64 %and_ln54_6, i64 %and_ln54_8" [d4.cpp:54]   --->   Operation 246 'add' 'add_ln54_22' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_23 = add i64 %add_ln54_22, i64 %add_ln54_21" [d4.cpp:54]   --->   Operation 247 'add' 'add_ln54_23' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 248 [1/1] (0.00ns)   --->   "%zext_ln52_10 = zext i32 %mul_ln52_5" [d4.cpp:52]   --->   Operation 248 'zext' 'zext_ln52_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 249 [1/1] (0.28ns)   --->   "%xor_ln54_1 = xor i1 %trunc_ln39_2, i1 1" [d4.cpp:54]   --->   Operation 249 'xor' 'xor_ln54_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 250 [1/1] (0.42ns)   --->   "%tmp_14 = mux i32 @_ssdm_op_Mux.ap_auto.2i32.i1, i32 %arg2_r_reload_read, i32 %arg2_r_1_reload_read, i1 %xor_ln54_1" [d4.cpp:54]   --->   Operation 250 'mux' 'tmp_14' <Predicate = true> <Delay = 0.42> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln54_14 = zext i32 %tmp_14" [d4.cpp:54]   --->   Operation 251 'zext' 'zext_ln54_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln52_11 = zext i32 %mul_ln52_6" [d4.cpp:52]   --->   Operation 252 'zext' 'zext_ln52_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln54_15 = zext i32 %tmp_12" [d4.cpp:54]   --->   Operation 253 'zext' 'zext_ln54_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 254 '%mul_ln54_26 = mul i64 %zext_ln52_7, i64 %zext_ln52_3'
ST_2 : Operation 254 [1/1] (2.16ns)   --->   "%mul_ln54_26 = mul i64 %zext_ln52_7, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 254 'mul' 'mul_ln54_26' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 255 '%mul_ln54_27 = mul i64 %zext_ln52_10, i64 %zext_ln52'
ST_2 : Operation 255 [1/1] (2.16ns)   --->   "%mul_ln54_27 = mul i64 %zext_ln52_10, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 255 'mul' 'mul_ln54_27' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 256 [1/1] (0.37ns)   --->   "%and_ln54_12 = and i64 %mul_ln54_26, i64 %select_ln54_9" [d4.cpp:54]   --->   Operation 256 'and' 'and_ln54_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.17ns)   --->   "%select_ln54_15 = select i1 %icmp_ln52_1, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 257 'select' 'select_ln54_15' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 258 [1/1] (0.37ns)   --->   "%and_ln54_13 = and i64 %mul_ln54_27, i64 %select_ln54_15" [d4.cpp:54]   --->   Operation 258 'and' 'and_ln54_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 259 '%mul_ln54_28 = mul i64 %zext_ln52_4, i64 %zext_ln54'
ST_2 : Operation 259 [1/1] (2.16ns)   --->   "%mul_ln54_28 = mul i64 %zext_ln52_4, i64 %zext_ln54" [d4.cpp:54]   --->   Operation 259 'mul' 'mul_ln54_28' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 260 '%mul_ln54_29 = mul i64 %zext_ln52_11, i64 %zext_ln52_1'
ST_2 : Operation 260 [1/1] (2.16ns)   --->   "%mul_ln54_29 = mul i64 %zext_ln52_11, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 260 'mul' 'mul_ln54_29' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 261 '%mul_ln54_30 = mul i64 %zext_ln54_11, i64 %zext_ln52_3'
ST_2 : Operation 261 [1/1] (2.16ns)   --->   "%mul_ln54_30 = mul i64 %zext_ln54_11, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 261 'mul' 'mul_ln54_30' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 262 '%mul_ln54_31 = mul i64 %zext_ln54_10, i64 %zext_ln52_2'
ST_2 : Operation 262 [1/1] (2.16ns)   --->   "%mul_ln54_31 = mul i64 %zext_ln54_10, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 262 'mul' 'mul_ln54_31' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 263 '%mul_ln54_32 = mul i64 %zext_ln54_14, i64 %zext_ln52'
ST_2 : Operation 263 [1/1] (2.16ns)   --->   "%mul_ln54_32 = mul i64 %zext_ln54_14, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 263 'mul' 'mul_ln54_32' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 264 '%mul_ln54_33 = mul i64 %zext_ln54_15, i64 %zext_ln52_1'
ST_2 : Operation 264 [1/1] (2.16ns)   --->   "%mul_ln54_33 = mul i64 %zext_ln54_15, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 264 'mul' 'mul_ln54_33' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 265 '%mul_ln54_34 = mul i64 %zext_ln52_6, i64 %zext_ln52_2'
ST_2 : Operation 265 [1/1] (2.16ns)   --->   "%mul_ln54_34 = mul i64 %zext_ln52_6, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 265 'mul' 'mul_ln54_34' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (0.37ns)   --->   "%and_ln54_14 = and i64 %mul_ln54_29, i64 %select_ln54_13" [d4.cpp:54]   --->   Operation 266 'and' 'and_ln54_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_27)   --->   "%and_ln54_15 = and i64 %mul_ln54_30, i64 %select_ln54_10" [d4.cpp:54]   --->   Operation 267 'and' 'and_ln54_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.37ns)   --->   "%and_ln54_16 = and i64 %mul_ln54_31, i64 %select_ln54_12" [d4.cpp:54]   --->   Operation 268 'and' 'and_ln54_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 269 [1/1] (0.17ns)   --->   "%select_ln54_16 = select i1 %icmp_ln54_1, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 269 'select' 'select_ln54_16' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 270 [1/1] (0.37ns)   --->   "%and_ln54_17 = and i64 %mul_ln54_32, i64 %select_ln54_16" [d4.cpp:54]   --->   Operation 270 'and' 'and_ln54_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 271 [1/1] (0.37ns)   --->   "%and_ln54_18 = and i64 %mul_ln54_33, i64 %select_ln54_14" [d4.cpp:54]   --->   Operation 271 'and' 'and_ln54_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_27)   --->   "%and_ln54_19 = and i64 %mul_ln54_34, i64 %select_ln54_11" [d4.cpp:54]   --->   Operation 272 'and' 'and_ln54_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_26 = add i64 %mul_ln54_28, i64 %and_ln54_12" [d4.cpp:54]   --->   Operation 273 'add' 'add_ln54_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 274 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_27 = add i64 %and_ln54_15, i64 %and_ln54_19" [d4.cpp:54]   --->   Operation 274 'add' 'add_ln54_27' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_28 = add i64 %add_ln54_27, i64 %add_ln54_26" [d4.cpp:54]   --->   Operation 275 'add' 'add_ln54_28' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 276 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_29 = add i64 %and_ln54_16, i64 %and_ln54_14" [d4.cpp:54]   --->   Operation 276 'add' 'add_ln54_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 277 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_30 = add i64 %and_ln54_13, i64 %and_ln54_17" [d4.cpp:54]   --->   Operation 277 'add' 'add_ln54_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 278 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_31 = add i64 %add_ln54_30, i64 %and_ln54_18" [d4.cpp:54]   --->   Operation 278 'add' 'add_ln54_31' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 279 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_32 = add i64 %add_ln54_31, i64 %add_ln54_29" [d4.cpp:54]   --->   Operation 279 'add' 'add_ln54_32' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln52_12 = zext i32 %mul_ln52_7" [d4.cpp:52]   --->   Operation 280 'zext' 'zext_ln52_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_7)   --->   "%and_ln53_3 = and i1 %trunc_ln39, i1 %icmp_ln53_2" [d4.cpp:53]   --->   Operation 281 'and' 'and_ln53_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_7)   --->   "%shl_ln54_7 = shl i32 %arg2_r_reload_read, i32 1" [d4.cpp:54]   --->   Operation 282 'shl' 'shl_ln54_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 283 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_7 = select i1 %and_ln53_3, i32 %shl_ln54_7, i32 %arg2_r_reload_read" [d4.cpp:54]   --->   Operation 283 'select' 'select_ln54_7' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.00ns)   --->   "%zext_ln54_16 = zext i32 %select_ln54_7" [d4.cpp:54]   --->   Operation 284 'zext' 'zext_ln54_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln52_13 = zext i32 %mul_ln52_8" [d4.cpp:52]   --->   Operation 285 'zext' 'zext_ln52_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_8)   --->   "%and_ln53_4 = and i1 %icmp_ln54_1, i1 %cmp32_1_1" [d4.cpp:53]   --->   Operation 286 'and' 'and_ln53_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node select_ln54_8)   --->   "%shl_ln54_8 = shl i32 %tmp_14, i32 1" [d4.cpp:54]   --->   Operation 287 'shl' 'shl_ln54_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 288 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln54_8 = select i1 %and_ln53_4, i32 %shl_ln54_8, i32 %tmp_14" [d4.cpp:54]   --->   Operation 288 'select' 'select_ln54_8' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 289 [1/1] (0.00ns)   --->   "%zext_ln54_17 = zext i32 %select_ln54_8" [d4.cpp:54]   --->   Operation 289 'zext' 'zext_ln54_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 290 '%mul_ln54_35 = mul i64 %zext_ln52_13, i64 %zext_ln52_1'
ST_2 : Operation 290 [1/1] (2.16ns)   --->   "%mul_ln54_35 = mul i64 %zext_ln52_13, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 290 'mul' 'mul_ln54_35' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 291 '%mul_ln54_36 = mul i64 %zext_ln54_13, i64 %zext_ln52_3'
ST_2 : Operation 291 [1/1] (2.16ns)   --->   "%mul_ln54_36 = mul i64 %zext_ln54_13, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 291 'mul' 'mul_ln54_36' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 292 '%mul_ln54_37 = mul i64 %zext_ln52_5, i64 %zext_ln52_4'
ST_2 : Operation 292 [1/1] (2.16ns)   --->   "%mul_ln54_37 = mul i64 %zext_ln52_5, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 292 'mul' 'mul_ln54_37' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 293 '%mul_ln54_38 = mul i64 %zext_ln52_9, i64 %zext_ln52_3'
ST_2 : Operation 293 [1/1] (2.16ns)   --->   "%mul_ln54_38 = mul i64 %zext_ln52_9, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 293 'mul' 'mul_ln54_38' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 294 '%mul_ln54_39 = mul i64 %zext_ln52_12, i64 %zext_ln52'
ST_2 : Operation 294 [1/1] (2.16ns)   --->   "%mul_ln54_39 = mul i64 %zext_ln52_12, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 294 'mul' 'mul_ln54_39' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.37ns)   --->   "%and_ln54_20 = and i64 %mul_ln54_35, i64 %select_ln54_15" [d4.cpp:54]   --->   Operation 295 'and' 'and_ln54_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (0.37ns)   --->   "%and_ln54_21 = and i64 %mul_ln54_36, i64 %select_ln54_12" [d4.cpp:54]   --->   Operation 296 'and' 'and_ln54_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.37ns)   --->   "%and_ln54_22 = and i64 %mul_ln54_37, i64 %select_ln54_9" [d4.cpp:54]   --->   Operation 297 'and' 'and_ln54_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (0.37ns)   --->   "%and_ln54_23 = and i64 %mul_ln54_38, i64 %select_ln54_11" [d4.cpp:54]   --->   Operation 298 'and' 'and_ln54_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 299 [1/1] (0.17ns)   --->   "%select_ln54_17 = select i1 %icmp_ln51_2, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 299 'select' 'select_ln54_17' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_40)   --->   "%and_ln54_24 = and i64 %mul_ln54_39, i64 %select_ln54_17" [d4.cpp:54]   --->   Operation 300 'and' 'and_ln54_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 301 '%mul_ln54_40 = mul i64 %zext_ln54_12, i64 %zext_ln52_2'
ST_2 : Operation 301 [1/1] (2.16ns)   --->   "%mul_ln54_40 = mul i64 %zext_ln54_12, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 301 'mul' 'mul_ln54_40' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 302 '%mul_ln54_41 = mul i64 %zext_ln54_16, i64 %zext_ln52'
ST_2 : Operation 302 [1/1] (2.16ns)   --->   "%mul_ln54_41 = mul i64 %zext_ln54_16, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 302 'mul' 'mul_ln54_41' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 303 '%mul_ln54_42 = mul i64 %zext_ln54_17, i64 %zext_ln52_1'
ST_2 : Operation 303 [1/1] (2.16ns)   --->   "%mul_ln54_42 = mul i64 %zext_ln54_17, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 303 'mul' 'mul_ln54_42' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 304 '%mul_ln54_43 = mul i64 %zext_ln52_8, i64 %zext_ln52_2'
ST_2 : Operation 304 [1/1] (2.16ns)   --->   "%mul_ln54_43 = mul i64 %zext_ln52_8, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 304 'mul' 'mul_ln54_43' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 305 '%mul_ln54_44 = mul i64 %zext_ln54_5, i64 %zext_ln52_4'
ST_2 : Operation 305 [1/1] (2.16ns)   --->   "%mul_ln54_44 = mul i64 %zext_ln54_5, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 305 'mul' 'mul_ln54_44' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_41)   --->   "%and_ln54_25 = and i64 %mul_ln54_40, i64 %select_ln54_14" [d4.cpp:54]   --->   Operation 306 'and' 'and_ln54_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 307 [1/1] (0.17ns)   --->   "%select_ln54_18 = select i1 %icmp_ln53_2, i64 18446744073709551615, i64 0" [d4.cpp:54]   --->   Operation 307 'select' 'select_ln54_18' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_40)   --->   "%and_ln54_26 = and i64 %mul_ln54_41, i64 %select_ln54_18" [d4.cpp:54]   --->   Operation 308 'and' 'and_ln54_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_41)   --->   "%and_ln54_27 = and i64 %mul_ln54_42, i64 %select_ln54_16" [d4.cpp:54]   --->   Operation 309 'and' 'and_ln54_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.37ns)   --->   "%and_ln54_28 = and i64 %mul_ln54_43, i64 %select_ln54_13" [d4.cpp:54]   --->   Operation 310 'and' 'and_ln54_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 311 [1/1] (0.37ns)   --->   "%and_ln54_29 = and i64 %mul_ln54_44, i64 %select_ln54_10" [d4.cpp:54]   --->   Operation 311 'and' 'and_ln54_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 312 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_35 = add i64 %and_ln54_22, i64 %and_ln54_29" [d4.cpp:54]   --->   Operation 312 'add' 'add_ln54_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 313 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_36 = add i64 %and_ln54_21, i64 %and_ln54_28" [d4.cpp:54]   --->   Operation 313 'add' 'add_ln54_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 314 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_37 = add i64 %add_ln54_36, i64 %and_ln54_23" [d4.cpp:54]   --->   Operation 314 'add' 'add_ln54_37' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 315 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_38 = add i64 %add_ln54_37, i64 %add_ln54_35" [d4.cpp:54]   --->   Operation 315 'add' 'add_ln54_38' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 316 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_40 = add i64 %and_ln54_24, i64 %and_ln54_26" [d4.cpp:54]   --->   Operation 316 'add' 'add_ln54_40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 317 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_41 = add i64 %and_ln54_25, i64 %and_ln54_27" [d4.cpp:54]   --->   Operation 317 'add' 'add_ln54_41' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 318 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_39 = add i64 %and_ln54_20, i64 %add_ln54_41" [d4.cpp:54]   --->   Operation 318 'add' 'add_ln54_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 319 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_42 = add i64 %add_ln54_40, i64 %add_ln54_39" [d4.cpp:54]   --->   Operation 319 'add' 'add_ln54_42' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln52_14 = zext i32 %mul_ln52_9" [d4.cpp:52]   --->   Operation 320 'zext' 'zext_ln52_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 321 [1/1] (0.00ns)   --->   "%zext_ln52_15 = zext i32 %mul_ln52_10" [d4.cpp:52]   --->   Operation 321 'zext' 'zext_ln52_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 322 '%mul_ln54_45 = mul i64 %zext_ln54_10, i64 %zext_ln52_4'
ST_2 : Operation 322 [1/1] (2.16ns)   --->   "%mul_ln54_45 = mul i64 %zext_ln54_10, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 322 'mul' 'mul_ln54_45' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 323 '%mul_ln54_46 = mul i64 %zext_ln54_15, i64 %zext_ln52_3'
ST_2 : Operation 323 [1/1] (2.16ns)   --->   "%mul_ln54_46 = mul i64 %zext_ln54_15, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 323 'mul' 'mul_ln54_46' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 324 [1/1] (0.37ns)   --->   "%and_ln54_30 = and i64 %mul_ln54_45, i64 %select_ln54_12" [d4.cpp:54]   --->   Operation 324 'and' 'and_ln54_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_46)   --->   "%and_ln54_31 = and i64 %mul_ln54_46, i64 %select_ln54_14" [d4.cpp:54]   --->   Operation 325 'and' 'and_ln54_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 326 '%mul_ln54_47 = mul i64 %zext_ln52_14, i64 %zext_ln52'
ST_2 : Operation 326 [1/1] (2.16ns)   --->   "%mul_ln54_47 = mul i64 %zext_ln52_14, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 326 'mul' 'mul_ln54_47' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 327 '%mul_ln54_48 = mul i64 %zext_ln54_14, i64 %zext_ln52_2'
ST_2 : Operation 327 [1/1] (2.16ns)   --->   "%mul_ln54_48 = mul i64 %zext_ln54_14, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 327 'mul' 'mul_ln54_48' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 328 '%mul_ln54_49 = mul i64 %zext_ln52_6, i64 %zext_ln52_4'
ST_2 : Operation 328 [1/1] (2.16ns)   --->   "%mul_ln54_49 = mul i64 %zext_ln52_6, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 328 'mul' 'mul_ln54_49' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 329 '%mul_ln54_50 = mul i64 %zext_ln54_18_cast, i64 %zext_ln52_1'
ST_2 : Operation 329 [1/1] (2.16ns)   --->   "%mul_ln54_50 = mul i64 %zext_ln54_18_cast, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 329 'mul' 'mul_ln54_50' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 330 '%mul_ln54_51 = mul i64 %zext_ln52_11, i64 %zext_ln52_3'
ST_2 : Operation 330 [1/1] (2.16ns)   --->   "%mul_ln54_51 = mul i64 %zext_ln52_11, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 330 'mul' 'mul_ln54_51' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 331 '%mul_ln54_52 = mul i64 %zext_ln52_15, i64 %zext_ln52_1'
ST_2 : Operation 331 [1/1] (2.16ns)   --->   "%mul_ln54_52 = mul i64 %zext_ln52_15, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 331 'mul' 'mul_ln54_52' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 332 '%mul_ln54_53 = mul i64 %zext_ln52_10, i64 %zext_ln52_2'
ST_2 : Operation 332 [1/1] (2.16ns)   --->   "%mul_ln54_53 = mul i64 %zext_ln52_10, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 332 'mul' 'mul_ln54_53' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 333 [1/1] (0.37ns)   --->   "%and_ln54_32 = and i64 %mul_ln54_48, i64 %select_ln54_16" [d4.cpp:54]   --->   Operation 333 'and' 'and_ln54_32' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_46)   --->   "%and_ln54_33 = and i64 %mul_ln54_49, i64 %select_ln54_11" [d4.cpp:54]   --->   Operation 334 'and' 'and_ln54_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 335 [1/1] (0.37ns)   --->   "%and_ln54_34 = and i64 %mul_ln54_50, i64 %select_ln54_18" [d4.cpp:54]   --->   Operation 335 'and' 'and_ln54_34' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 336 [1/1] (0.37ns)   --->   "%and_ln54_35 = and i64 %mul_ln54_51, i64 %select_ln54_13" [d4.cpp:54]   --->   Operation 336 'and' 'and_ln54_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (0.37ns)   --->   "%and_ln54_36 = and i64 %mul_ln54_52, i64 %select_ln54_17" [d4.cpp:54]   --->   Operation 337 'and' 'and_ln54_36' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (0.37ns)   --->   "%and_ln54_37 = and i64 %mul_ln54_53, i64 %select_ln54_15" [d4.cpp:54]   --->   Operation 338 'and' 'and_ln54_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_45 = add i64 %mul_ln54_47, i64 %and_ln54_30" [d4.cpp:54]   --->   Operation 339 'add' 'add_ln54_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 340 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_46 = add i64 %and_ln54_33, i64 %and_ln54_31" [d4.cpp:54]   --->   Operation 340 'add' 'add_ln54_46' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 341 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_47 = add i64 %add_ln54_46, i64 %add_ln54_45" [d4.cpp:54]   --->   Operation 341 'add' 'add_ln54_47' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 342 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_48 = add i64 %and_ln54_35, i64 %and_ln54_32" [d4.cpp:54]   --->   Operation 342 'add' 'add_ln54_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_49 = add i64 %and_ln54_36, i64 %and_ln54_34" [d4.cpp:54]   --->   Operation 343 'add' 'add_ln54_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 344 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_50 = add i64 %add_ln54_49, i64 %and_ln54_37" [d4.cpp:54]   --->   Operation 344 'add' 'add_ln54_50' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 345 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_51 = add i64 %add_ln54_50, i64 %add_ln54_48" [d4.cpp:54]   --->   Operation 345 'add' 'add_ln54_51' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln52_16 = zext i32 %mul_ln52_11" [d4.cpp:52]   --->   Operation 346 'zext' 'zext_ln52_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 347 [1/1] (0.00ns)   --->   "%zext_ln52_17 = zext i32 %mul_ln52_12" [d4.cpp:52]   --->   Operation 347 'zext' 'zext_ln52_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 348 '%mul_ln54_54 = mul i64 %zext_ln52_16, i64 %zext_ln52'
ST_2 : Operation 348 [1/1] (2.16ns)   --->   "%mul_ln54_54 = mul i64 %zext_ln52_16, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 348 'mul' 'mul_ln54_54' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 349 '%mul_ln54_55 = mul i64 %zext_ln54_12, i64 %zext_ln52_4'
ST_2 : Operation 349 [1/1] (2.16ns)   --->   "%mul_ln54_55 = mul i64 %zext_ln54_12, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 349 'mul' 'mul_ln54_55' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 350 '%mul_ln54_56 = mul i64 %zext_ln52_8, i64 %zext_ln52_4'
ST_2 : Operation 350 [1/1] (2.16ns)   --->   "%mul_ln54_56 = mul i64 %zext_ln52_8, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 350 'mul' 'mul_ln54_56' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 351 '%mul_ln54_57 = mul i64 %zext_ln52_13, i64 %zext_ln52_3'
ST_2 : Operation 351 [1/1] (2.16ns)   --->   "%mul_ln54_57 = mul i64 %zext_ln52_13, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 351 'mul' 'mul_ln54_57' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 352 '%mul_ln54_58 = mul i64 %zext_ln52_12, i64 %zext_ln52_2'
ST_2 : Operation 352 [1/1] (2.16ns)   --->   "%mul_ln54_58 = mul i64 %zext_ln52_12, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 352 'mul' 'mul_ln54_58' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 353 '%mul_ln54_59 = mul i64 %zext_ln54_17, i64 %zext_ln52_3'
ST_2 : Operation 353 [1/1] (2.16ns)   --->   "%mul_ln54_59 = mul i64 %zext_ln54_17, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 353 'mul' 'mul_ln54_59' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 354 '%mul_ln54_60 = mul i64 %zext_ln54_16, i64 %zext_ln52_2'
ST_2 : Operation 354 [1/1] (2.16ns)   --->   "%mul_ln54_60 = mul i64 %zext_ln54_16, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 354 'mul' 'mul_ln54_60' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_55)   --->   "%and_ln54_38 = and i64 %mul_ln54_55, i64 %select_ln54_14" [d4.cpp:54]   --->   Operation 355 'and' 'and_ln54_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_55)   --->   "%and_ln54_39 = and i64 %mul_ln54_56, i64 %select_ln54_13" [d4.cpp:54]   --->   Operation 356 'and' 'and_ln54_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 357 [1/1] (0.37ns)   --->   "%and_ln54_40 = and i64 %mul_ln54_57, i64 %select_ln54_15" [d4.cpp:54]   --->   Operation 357 'and' 'and_ln54_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_58)   --->   "%and_ln54_41 = and i64 %mul_ln54_58, i64 %select_ln54_17" [d4.cpp:54]   --->   Operation 358 'and' 'and_ln54_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.37ns)   --->   "%and_ln54_42 = and i64 %mul_ln54_59, i64 %select_ln54_16" [d4.cpp:54]   --->   Operation 359 'and' 'and_ln54_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_58)   --->   "%and_ln54_43 = and i64 %mul_ln54_60, i64 %select_ln54_18" [d4.cpp:54]   --->   Operation 360 'and' 'and_ln54_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 361 '%mul_ln54_61 = mul i64 %zext_ln52_17, i64 %zext_ln52_1'
ST_2 : Operation 361 [1/1] (2.16ns)   --->   "%mul_ln54_61 = mul i64 %zext_ln52_17, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 361 'mul' 'mul_ln54_61' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_54 = add i64 %mul_ln54_54, i64 %mul_ln54_61" [d4.cpp:54]   --->   Operation 362 'add' 'add_ln54_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 363 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_55 = add i64 %and_ln54_39, i64 %and_ln54_38" [d4.cpp:54]   --->   Operation 363 'add' 'add_ln54_55' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_56 = add i64 %add_ln54_55, i64 %add_ln54_54" [d4.cpp:54]   --->   Operation 364 'add' 'add_ln54_56' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 365 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_58 = add i64 %and_ln54_41, i64 %and_ln54_43" [d4.cpp:54]   --->   Operation 365 'add' 'add_ln54_58' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 366 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_57 = add i64 %and_ln54_40, i64 %and_ln54_42" [d4.cpp:54]   --->   Operation 366 'add' 'add_ln54_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 367 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_59 = add i64 %add_ln54_58, i64 %add_ln54_57" [d4.cpp:54]   --->   Operation 367 'add' 'add_ln54_59' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 368 [1/1] (0.00ns)   --->   "%zext_ln52_18 = zext i32 %mul_ln52_13" [d4.cpp:52]   --->   Operation 368 'zext' 'zext_ln52_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 369 [1/1] (0.00ns)   --->   "%zext_ln52_19 = zext i32 %mul_ln52_14" [d4.cpp:52]   --->   Operation 369 'zext' 'zext_ln52_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 370 '%mul_ln54_62 = mul i64 %zext_ln54_14, i64 %zext_ln52_4'
ST_2 : Operation 370 [1/1] (2.16ns)   --->   "%mul_ln54_62 = mul i64 %zext_ln54_14, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 370 'mul' 'mul_ln54_62' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 371 '%mul_ln54_63 = mul i64 %zext_ln54_18_cast, i64 %zext_ln52_3'
ST_2 : Operation 371 [1/1] (2.16ns)   --->   "%mul_ln54_63 = mul i64 %zext_ln54_18_cast, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 371 'mul' 'mul_ln54_63' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 372 '%mul_ln54_64 = mul i64 %zext_ln52_10, i64 %zext_ln52_4'
ST_2 : Operation 372 [1/1] (2.16ns)   --->   "%mul_ln54_64 = mul i64 %zext_ln52_10, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 372 'mul' 'mul_ln54_64' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 373 '%mul_ln54_65 = mul i64 %zext_ln52_15, i64 %zext_ln52_3'
ST_2 : Operation 373 [1/1] (2.16ns)   --->   "%mul_ln54_65 = mul i64 %zext_ln52_15, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 373 'mul' 'mul_ln54_65' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.37ns)   --->   "%and_ln54_44 = and i64 %mul_ln54_62, i64 %select_ln54_16" [d4.cpp:54]   --->   Operation 374 'and' 'and_ln54_44' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_65)   --->   "%and_ln54_45 = and i64 %mul_ln54_63, i64 %select_ln54_18" [d4.cpp:54]   --->   Operation 375 'and' 'and_ln54_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.37ns)   --->   "%and_ln54_46 = and i64 %mul_ln54_64, i64 %select_ln54_15" [d4.cpp:54]   --->   Operation 376 'and' 'and_ln54_46' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_65)   --->   "%and_ln54_47 = and i64 %mul_ln54_65, i64 %select_ln54_17" [d4.cpp:54]   --->   Operation 377 'and' 'and_ln54_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 378 '%mul_ln54_66 = mul i64 %zext_ln52_18, i64 %zext_ln52'
ST_2 : Operation 378 [1/1] (2.16ns)   --->   "%mul_ln54_66 = mul i64 %zext_ln52_18, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 378 'mul' 'mul_ln54_66' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 379 '%mul_ln54_67 = mul i64 %zext_ln52_19, i64 %zext_ln52_1'
ST_2 : Operation 379 [1/1] (2.16ns)   --->   "%mul_ln54_67 = mul i64 %zext_ln52_19, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 379 'mul' 'mul_ln54_67' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 380 '%mul_ln54_68 = mul i64 %zext_ln52_14, i64 %zext_ln52_2'
ST_2 : Operation 380 [1/1] (2.16ns)   --->   "%mul_ln54_68 = mul i64 %zext_ln52_14, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 380 'mul' 'mul_ln54_68' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_62 = add i64 %mul_ln54_67, i64 %mul_ln54_68" [d4.cpp:54]   --->   Operation 381 'add' 'add_ln54_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 382 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_63 = add i64 %add_ln54_62, i64 %mul_ln54_66" [d4.cpp:54]   --->   Operation 382 'add' 'add_ln54_63' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 383 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_64 = add i64 %and_ln54_44, i64 %and_ln54_46" [d4.cpp:54]   --->   Operation 383 'add' 'add_ln54_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 384 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln54_65 = add i64 %and_ln54_45, i64 %and_ln54_47" [d4.cpp:54]   --->   Operation 384 'add' 'add_ln54_65' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 385 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_66 = add i64 %add_ln54_65, i64 %add_ln54_64" [d4.cpp:54]   --->   Operation 385 'add' 'add_ln54_66' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln52_20 = zext i32 %mul_ln52_15" [d4.cpp:52]   --->   Operation 386 'zext' 'zext_ln52_20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 387 [1/1] (0.00ns)   --->   "%zext_ln52_21 = zext i32 %mul_ln52_16" [d4.cpp:52]   --->   Operation 387 'zext' 'zext_ln52_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 388 '%mul_ln54_69 = mul i64 %zext_ln54_16, i64 %zext_ln52_4'
ST_2 : Operation 388 [1/1] (2.16ns)   --->   "%mul_ln54_69 = mul i64 %zext_ln54_16, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 388 'mul' 'mul_ln54_69' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 389 [1/1] (0.37ns)   --->   "%and_ln54_48 = and i64 %mul_ln54_69, i64 %select_ln54_18" [d4.cpp:54]   --->   Operation 389 'and' 'and_ln54_48' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 390 '%mul_ln54_70 = mul i64 %zext_ln52_20, i64 %zext_ln52'
ST_2 : Operation 390 [1/1] (2.16ns)   --->   "%mul_ln54_70 = mul i64 %zext_ln52_20, i64 %zext_ln52" [d4.cpp:54]   --->   Operation 390 'mul' 'mul_ln54_70' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 391 '%mul_ln54_71 = mul i64 %zext_ln52_21, i64 %zext_ln52_1'
ST_2 : Operation 391 [1/1] (2.16ns)   --->   "%mul_ln54_71 = mul i64 %zext_ln52_21, i64 %zext_ln52_1" [d4.cpp:54]   --->   Operation 391 'mul' 'mul_ln54_71' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 392 '%mul_ln54_72 = mul i64 %zext_ln52_17, i64 %zext_ln52_3'
ST_2 : Operation 392 [1/1] (2.16ns)   --->   "%mul_ln54_72 = mul i64 %zext_ln52_17, i64 %zext_ln52_3" [d4.cpp:54]   --->   Operation 392 'mul' 'mul_ln54_72' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 393 '%mul_ln54_73 = mul i64 %zext_ln52_16, i64 %zext_ln52_2'
ST_2 : Operation 393 [1/1] (2.16ns)   --->   "%mul_ln54_73 = mul i64 %zext_ln52_16, i64 %zext_ln52_2" [d4.cpp:54]   --->   Operation 393 'mul' 'mul_ln54_73' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.25ns)   --->   Input mux for Operation 394 '%mul_ln54_74 = mul i64 %zext_ln52_12, i64 %zext_ln52_4'
ST_2 : Operation 394 [1/1] (2.16ns)   --->   "%mul_ln54_74 = mul i64 %zext_ln52_12, i64 %zext_ln52_4" [d4.cpp:54]   --->   Operation 394 'mul' 'mul_ln54_74' <Predicate = true> <Delay = 2.16> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.37ns)   --->   "%and_ln54_49 = and i64 %mul_ln54_74, i64 %select_ln54_17" [d4.cpp:54]   --->   Operation 395 'and' 'and_ln54_49' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 396 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_69 = add i64 %mul_ln54_71, i64 %mul_ln54_73" [d4.cpp:54]   --->   Operation 396 'add' 'add_ln54_69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 397 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_70 = add i64 %add_ln54_69, i64 %mul_ln54_70" [d4.cpp:54]   --->   Operation 397 'add' 'add_ln54_70' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 398 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_71 = add i64 %and_ln54_49, i64 %and_ln54_48" [d4.cpp:54]   --->   Operation 398 'add' 'add_ln54_71' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 399 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_72 = add i64 %add_ln54_71, i64 %mul_ln54_72" [d4.cpp:54]   --->   Operation 399 'add' 'add_ln54_72' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 400 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_73 = add i64 %add_ln54_72, i64 %add_ln54_70" [d4.cpp:54]   --->   Operation 400 'add' 'add_ln54_73' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 401 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_74 = add i64 %add65_9328_load, i64 %add_ln54_73" [d4.cpp:54]   --->   Operation 401 'add' 'add_ln54_74' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 402 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_74, i64 %add65_9328" [d4.cpp:39]   --->   Operation 402 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 403 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_10, i64 %add65_1320" [d4.cpp:39]   --->   Operation 403 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 404 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_4, i64 %add65319" [d4.cpp:39]   --->   Operation 404 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 437 [1/1] (0.00ns)   --->   "%add65319_load_1 = load i64 %add65319"   --->   Operation 437 'load' 'add65319_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 438 [1/1] (0.00ns)   --->   "%add65_1320_load_1 = load i64 %add65_1320"   --->   Operation 438 'load' 'add65_1320_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 439 [1/1] (0.00ns)   --->   "%add65_2321_load_1 = load i64 %add65_2321"   --->   Operation 439 'load' 'add65_2321_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 440 [1/1] (0.00ns)   --->   "%add65_3322_load_1 = load i64 %add65_3322"   --->   Operation 440 'load' 'add65_3322_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 441 [1/1] (0.00ns)   --->   "%add65_4323_load_1 = load i64 %add65_4323"   --->   Operation 441 'load' 'add65_4323_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 442 [1/1] (0.00ns)   --->   "%add65_5324_load_1 = load i64 %add65_5324"   --->   Operation 442 'load' 'add65_5324_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 443 [1/1] (0.00ns)   --->   "%add65_6325_load_1 = load i64 %add65_6325"   --->   Operation 443 'load' 'add65_6325_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 444 [1/1] (0.00ns)   --->   "%add65_7326_load_1 = load i64 %add65_7326"   --->   Operation 444 'load' 'add65_7326_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 445 [1/1] (0.00ns)   --->   "%add65_8327_load_1 = load i64 %add65_8327"   --->   Operation 445 'load' 'add65_8327_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 446 [1/1] (0.00ns)   --->   "%add65_9328_load_1 = load i64 %add65_9328"   --->   Operation 446 'load' 'add65_9328_load_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 447 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_9328_out, i64 %add65_9328_load_1"   --->   Operation 447 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 448 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_8327_out, i64 %add65_8327_load_1"   --->   Operation 448 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 449 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_7326_out, i64 %add65_7326_load_1"   --->   Operation 449 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 450 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_6325_out, i64 %add65_6325_load_1"   --->   Operation 450 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 451 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_5324_out, i64 %add65_5324_load_1"   --->   Operation 451 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 452 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_4323_out, i64 %add65_4323_load_1"   --->   Operation 452 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 453 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_3322_out, i64 %add65_3322_load_1"   --->   Operation 453 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 454 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_2321_out, i64 %add65_2321_load_1"   --->   Operation 454 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 455 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65_1320_out, i64 %add65_1320_load_1"   --->   Operation 455 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 456 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add65319_out, i64 %add65319_load_1"   --->   Operation 456 'write' 'write_ln0' <Predicate = (tmp_16)> <Delay = 0.00>
ST_2 : Operation 457 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 457 'ret' 'ret_ln0' <Predicate = (tmp_16)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.24>
ST_3 : Operation 405 [1/1] (0.00ns)   --->   "%add65_2321_load = load i64 %add65_2321" [d4.cpp:54]   --->   Operation 405 'load' 'add65_2321_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 406 [1/1] (0.00ns)   --->   "%add65_3322_load = load i64 %add65_3322" [d4.cpp:54]   --->   Operation 406 'load' 'add65_3322_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 407 [1/1] (0.00ns)   --->   "%add65_4323_load = load i64 %add65_4323" [d4.cpp:54]   --->   Operation 407 'load' 'add65_4323_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 408 [1/1] (0.00ns)   --->   "%add65_5324_load = load i64 %add65_5324" [d4.cpp:54]   --->   Operation 408 'load' 'add65_5324_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 409 [1/1] (0.00ns)   --->   "%add65_6325_load = load i64 %add65_6325" [d4.cpp:54]   --->   Operation 409 'load' 'add65_6325_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 410 [1/1] (0.00ns)   --->   "%add65_7326_load = load i64 %add65_7326" [d4.cpp:54]   --->   Operation 410 'load' 'add65_7326_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 411 [1/1] (0.00ns)   --->   "%add65_8327_load = load i64 %add65_8327" [d4.cpp:54]   --->   Operation 411 'load' 'add65_8327_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 412 [1/1] (0.00ns)   --->   "%specpipeline_ln41 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d4.cpp:41]   --->   Operation 412 'specpipeline' 'specpipeline_ln41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 413 [1/1] (0.00ns)   --->   "%speclooptripcount_ln39 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d4.cpp:39]   --->   Operation 413 'speclooptripcount' 'speclooptripcount_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 414 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d4.cpp:39]   --->   Operation 414 'specloopname' 'specloopname_ln39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 415 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_16 = add i64 %add_ln54_15, i64 %add_ln54_12" [d4.cpp:54]   --->   Operation 415 'add' 'add_ln54_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 416 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_17 = add i64 %add65_2321_load, i64 %add_ln54_16" [d4.cpp:54]   --->   Operation 416 'add' 'add_ln54_17' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 417 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_24 = add i64 %add_ln54_23, i64 %add_ln54_20" [d4.cpp:54]   --->   Operation 417 'add' 'add_ln54_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 418 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_25 = add i64 %add65_3322_load, i64 %add_ln54_24" [d4.cpp:54]   --->   Operation 418 'add' 'add_ln54_25' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 419 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_33 = add i64 %add_ln54_32, i64 %add_ln54_28" [d4.cpp:54]   --->   Operation 419 'add' 'add_ln54_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 420 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_34 = add i64 %add65_4323_load, i64 %add_ln54_33" [d4.cpp:54]   --->   Operation 420 'add' 'add_ln54_34' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 421 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_43 = add i64 %add_ln54_42, i64 %add_ln54_38" [d4.cpp:54]   --->   Operation 421 'add' 'add_ln54_43' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 422 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_44 = add i64 %add_ln54_43, i64 %add65_5324_load" [d4.cpp:54]   --->   Operation 422 'add' 'add_ln54_44' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 423 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_52 = add i64 %add_ln54_51, i64 %add_ln54_47" [d4.cpp:54]   --->   Operation 423 'add' 'add_ln54_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 424 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_53 = add i64 %add65_6325_load, i64 %add_ln54_52" [d4.cpp:54]   --->   Operation 424 'add' 'add_ln54_53' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 425 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_60 = add i64 %add_ln54_59, i64 %add_ln54_56" [d4.cpp:54]   --->   Operation 425 'add' 'add_ln54_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 426 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_61 = add i64 %add_ln54_60, i64 %add65_7326_load" [d4.cpp:54]   --->   Operation 426 'add' 'add_ln54_61' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 427 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_67 = add i64 %add_ln54_66, i64 %add_ln54_63" [d4.cpp:54]   --->   Operation 427 'add' 'add_ln54_67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 428 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln54_68 = add i64 %add65_8327_load, i64 %add_ln54_67" [d4.cpp:54]   --->   Operation 428 'add' 'add_ln54_68' <Predicate = true> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 429 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_68, i64 %add65_8327" [d4.cpp:39]   --->   Operation 429 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 430 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_61, i64 %add65_7326" [d4.cpp:39]   --->   Operation 430 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 431 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_53, i64 %add65_6325" [d4.cpp:39]   --->   Operation 431 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 432 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_44, i64 %add65_5324" [d4.cpp:39]   --->   Operation 432 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 433 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_34, i64 %add65_4323" [d4.cpp:39]   --->   Operation 433 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 434 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_25, i64 %add65_3322" [d4.cpp:39]   --->   Operation 434 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 435 [1/1] (0.42ns)   --->   "%store_ln39 = store i64 %add_ln54_17, i64 %add65_2321" [d4.cpp:39]   --->   Operation 435 'store' 'store_ln39' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 436 [1/1] (0.00ns)   --->   "%br_ln39 = br void %for.body31" [d4.cpp:39]   --->   Operation 436 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.358ns
The critical path consists of the following:
	'alloca' operation ('i1') [43]  (0.000 ns)
	'load' operation ('i1', d4.cpp:39) on local variable 'i1' [80]  (0.000 ns)
	'add' operation ('empty', d4.cpp:39) [138]  (0.789 ns)
	'icmp' operation ('icmp_ln51', d4.cpp:51) [139]  (0.789 ns)
	'and' operation ('and_ln51', d4.cpp:51) [140]  (0.000 ns)
	'select' operation ('select_ln52', d4.cpp:52) [141]  (0.360 ns)
	multiplexor before operation 'mul' with delay (0.770 ns)
'mul' operation ('mul_ln52', d4.cpp:52) [142]  (2.650 ns)

 <State 2>: 7.229ns
The critical path consists of the following:
	'sub' operation ('sub_ln54', d4.cpp:54) [105]  (0.673 ns)
	'mux' operation ('tmp_1', d4.cpp:54) [106]  (0.623 ns)
	'select' operation ('select_ln54_1', d4.cpp:54) [153]  (0.449 ns)
	multiplexor before operation 'mul' with delay (1.253 ns)
'mul' operation ('mul_ln54_7', d4.cpp:54) [168]  (2.167 ns)
	'add' operation ('add_ln54_6', d4.cpp:54) [175]  (0.819 ns)
	'add' operation ('add_ln54_9', d4.cpp:54) [178]  (0.000 ns)
	'add' operation ('add_ln54_10', d4.cpp:54) [179]  (0.819 ns)
	'store' operation ('store_ln39', d4.cpp:39) of variable 'add_ln54_10', d4.cpp:54 on local variable 'add65_1320' [461]  (0.427 ns)

 <State 3>: 1.246ns
The critical path consists of the following:
	'load' operation ('add65_8327_load', d4.cpp:54) on local variable 'add65_8327' [93]  (0.000 ns)
	'add' operation ('add_ln54_68', d4.cpp:54) [431]  (0.819 ns)
	'store' operation ('store_ln39', d4.cpp:39) of variable 'add_ln54_68', d4.cpp:54 on local variable 'add65_8327' [454]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
