

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_64_7'
================================================================
* Date:           Thu May  9 15:36:52 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_43 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.081 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_64_7  |        2|        2|         1|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%add143_111 = alloca i32 1"   --->   Operation 4 'alloca' 'add143_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add156_112 = alloca i32 1"   --->   Operation 5 'alloca' 'add156_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add176_113 = alloca i32 1"   --->   Operation 6 'alloca' 'add176_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add193_114 = alloca i32 1"   --->   Operation 7 'alloca' 'add193_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 9 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 10 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_4_reload"   --->   Operation 11 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_5_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_5_cast"   --->   Operation 12 'read' 'arg1_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_7_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_7_cast"   --->   Operation 13 'read' 'arg1_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_6_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_6_cast"   --->   Operation 14 'read' 'arg1_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_8_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_8_cast"   --->   Operation 15 'read' 'arg1_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 16 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 17 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arr_39_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_39"   --->   Operation 18 'read' 'arr_39_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_8_reload"   --->   Operation 19 'read' 'arr_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_41_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_41"   --->   Operation 20 'read' 'arr_41_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_25_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_25_reload"   --->   Operation 21 'read' 'arr_25_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_25_reload_read, i64 %add193_114"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_41_read, i64 %add176_113"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_8_reload_read, i64 %add156_112"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_39_read, i64 %add143_111"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body122"   --->   Operation 27 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.08>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%i_1 = load i3 %i" [d1.cpp:64]   --->   Operation 28 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %i_1, i32 2" [d1.cpp:64]   --->   Operation 29 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %tmp, void %for.body122.split, void %for.end199.exitStub" [d1.cpp:64]   --->   Operation 30 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%add143_111_load = load i64 %add143_111" [d1.cpp:70]   --->   Operation 31 'load' 'add143_111_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%add156_112_load = load i64 %add156_112" [d1.cpp:71]   --->   Operation 32 'load' 'add156_112_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%add176_113_load = load i64 %add176_113" [d1.cpp:72]   --->   Operation 33 'load' 'add176_113_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%add193_114_load = load i64 %add193_114" [d1.cpp:73]   --->   Operation 34 'load' 'add193_114_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i3 %i_1" [d1.cpp:64]   --->   Operation 35 'trunc' 'trunc_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%specpipeline_ln66 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d1.cpp:66]   --->   Operation 36 'specpipeline' 'specpipeline_ln66' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%speclooptripcount_ln64 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d1.cpp:64]   --->   Operation 37 'speclooptripcount' 'speclooptripcount_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specloopname_ln64 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [d1.cpp:64]   --->   Operation 38 'specloopname' 'specloopname_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.47ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_reload_read, i32 0, i32 %arg1_r_2_reload_read, i2 %trunc_ln64" [d1.cpp:70]   --->   Operation 39 'mux' 'tmp_s' <Predicate = (!tmp)> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i32 %tmp_s" [d1.cpp:70]   --->   Operation 40 'zext' 'zext_ln70' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.54ns)   --->   "%icmp_ln70_2 = icmp_eq  i2 %trunc_ln64, i2 0" [d1.cpp:70]   --->   Operation 41 'icmp' 'icmp_ln70_2' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.41ns)   --->   "%select_ln70 = select i1 %icmp_ln70_2, i31 %arg1_r_8_cast_read, i31 %arg1_r_6_cast_read" [d1.cpp:70]   --->   Operation 42 'select' 'select_ln70' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln70, i1 0" [d1.cpp:70]   --->   Operation 43 'bitconcatenate' 'shl_ln4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i32 %shl_ln4" [d1.cpp:70]   --->   Operation 44 'zext' 'zext_ln70_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.41ns)   --->   "%select_ln71 = select i1 %icmp_ln70_2, i31 %arg1_r_7_cast_read, i31 %arg1_r_5_cast_read" [d1.cpp:71]   --->   Operation 45 'select' 'select_ln71' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%shl_ln5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln71, i1 0" [d1.cpp:71]   --->   Operation 46 'bitconcatenate' 'shl_ln5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i32 %shl_ln5" [d1.cpp:71]   --->   Operation 47 'zext' 'zext_ln71' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.41ns)   --->   "%select_ln72 = select i1 %icmp_ln70_2, i31 %arg1_r_6_cast_read, i31 %arg1_r_4_reload_read" [d1.cpp:72]   --->   Operation 48 'select' 'select_ln72' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln72, i1 0" [d1.cpp:72]   --->   Operation 49 'bitconcatenate' 'shl_ln6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i32 %shl_ln6" [d1.cpp:72]   --->   Operation 50 'zext' 'zext_ln72' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i32 %arg1_r_3_reload_read" [d1.cpp:73]   --->   Operation 51 'trunc' 'trunc_ln73' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.41ns)   --->   "%select_ln73 = select i1 %icmp_ln70_2, i31 %arg1_r_5_cast_read, i31 %trunc_ln73" [d1.cpp:73]   --->   Operation 52 'select' 'select_ln73' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%shl_ln7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln73, i1 0" [d1.cpp:73]   --->   Operation 53 'bitconcatenate' 'shl_ln7' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i32 %shl_ln7" [d1.cpp:73]   --->   Operation 54 'zext' 'zext_ln73' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%or_ln70 = or i2 %trunc_ln64, i2 1" [d1.cpp:70]   --->   Operation 55 'or' 'or_ln70' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.47ns)   --->   "%tmp_1 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_1_reload_read, i32 0, i32 %arg1_r_3_reload_read, i2 %trunc_ln64" [d1.cpp:70]   --->   Operation 56 'mux' 'tmp_1' <Predicate = (!tmp)> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i32 %tmp_1" [d1.cpp:72]   --->   Operation 57 'zext' 'zext_ln72_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i32 %tmp_1" [d1.cpp:70]   --->   Operation 58 'zext' 'zext_ln70_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.54ns)   --->   "%icmp_ln70 = icmp_eq  i2 %or_ln70, i2 1" [d1.cpp:70]   --->   Operation 59 'icmp' 'icmp_ln70' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.54ns)   --->   "%icmp_ln70_1 = icmp_eq  i2 %or_ln70, i2 3" [d1.cpp:70]   --->   Operation 60 'icmp' 'icmp_ln70_1' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln70_1)   --->   "%or_ln70_1 = or i1 %icmp_ln70, i1 %icmp_ln70_1" [d1.cpp:70]   --->   Operation 61 'or' 'or_ln70_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln70_1)   --->   "%trunc_ln70 = trunc i31 %select_ln71" [d1.cpp:70]   --->   Operation 62 'trunc' 'trunc_ln70' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln70_1)   --->   "%st = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i30.i2, i30 %trunc_ln70, i2 0" [d1.cpp:70]   --->   Operation 63 'bitconcatenate' 'st' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln70_1 = select i1 %or_ln70_1, i32 %st, i32 %shl_ln5" [d1.cpp:70]   --->   Operation 64 'select' 'select_ln70_1' <Predicate = (!tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i32 %select_ln70_1" [d1.cpp:70]   --->   Operation 65 'zext' 'zext_ln70_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 66 '%mul_ln70 = mul i64 %zext_ln70_1, i64 %zext_ln70'
ST_2 : Operation 66 [1/1] (2.45ns)   --->   "%mul_ln70 = mul i64 %zext_ln70_1, i64 %zext_ln70" [d1.cpp:70]   --->   Operation 66 'mul' 'mul_ln70' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 67 '%mul_ln70_1 = mul i64 %zext_ln70_2, i64 %zext_ln72_1'
ST_2 : Operation 67 [1/1] (2.45ns)   --->   "%mul_ln70_1 = mul i64 %zext_ln70_2, i64 %zext_ln72_1" [d1.cpp:70]   --->   Operation 67 'mul' 'mul_ln70_1' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70 = add i64 %mul_ln70_1, i64 %mul_ln70" [d1.cpp:70]   --->   Operation 68 'add' 'add_ln70' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 69 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln70_1 = add i64 %add143_111_load, i64 %add_ln70" [d1.cpp:70]   --->   Operation 69 'add' 'add_ln70_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 70 '%mul_ln71 = mul i64 %zext_ln71, i64 %zext_ln70'
ST_2 : Operation 70 [1/1] (2.45ns)   --->   "%mul_ln71 = mul i64 %zext_ln71, i64 %zext_ln70" [d1.cpp:71]   --->   Operation 70 'mul' 'mul_ln71' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 71 '%mul_ln71_1 = mul i64 %zext_ln72_1, i64 %zext_ln72'
ST_2 : Operation 71 [1/1] (2.45ns)   --->   "%mul_ln71_1 = mul i64 %zext_ln72_1, i64 %zext_ln72" [d1.cpp:71]   --->   Operation 71 'mul' 'mul_ln71_1' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln71 = add i64 %mul_ln71_1, i64 %mul_ln71" [d1.cpp:71]   --->   Operation 72 'add' 'add_ln71' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 73 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln71_1 = add i64 %add156_112_load, i64 %add_ln71" [d1.cpp:71]   --->   Operation 73 'add' 'add_ln71_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 74 '%mul_ln72 = mul i64 %zext_ln72, i64 %zext_ln70'
ST_2 : Operation 74 [1/1] (2.45ns)   --->   "%mul_ln72 = mul i64 %zext_ln72, i64 %zext_ln70" [d1.cpp:72]   --->   Operation 74 'mul' 'mul_ln72' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%shl_ln72_1 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i32.i1, i32 %tmp_1, i1 0" [d1.cpp:72]   --->   Operation 75 'bitconcatenate' 'shl_ln72_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.43ns)   --->   "%select_ln72_1 = select i1 %icmp_ln70, i33 %shl_ln72_1, i33 %zext_ln70_3" [d1.cpp:72]   --->   Operation 76 'select' 'select_ln72_1' <Predicate = (!tmp)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i33 %select_ln72_1" [d1.cpp:72]   --->   Operation 77 'zext' 'zext_ln72_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (3.41ns)   --->   "%mul_ln72_1 = mul i64 %zext_ln72_2, i64 %zext_ln73" [d1.cpp:72]   --->   Operation 78 'mul' 'mul_ln72_1' <Predicate = (!tmp)> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72 = add i64 %mul_ln72_1, i64 %mul_ln72" [d1.cpp:72]   --->   Operation 79 'add' 'add_ln72' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 80 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln72_1 = add i64 %add176_113_load, i64 %add_ln72" [d1.cpp:72]   --->   Operation 80 'add' 'add_ln72_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln73_1 = trunc i32 %arg1_r_2_reload_read" [d1.cpp:73]   --->   Operation 81 'trunc' 'trunc_ln73_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.41ns)   --->   "%select_ln73_1 = select i1 %icmp_ln70_2, i31 %arg1_r_4_reload_read, i31 %trunc_ln73_1" [d1.cpp:73]   --->   Operation 82 'select' 'select_ln73_1' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%shl_ln73_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln73_1, i1 0" [d1.cpp:73]   --->   Operation 83 'bitconcatenate' 'shl_ln73_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln73_1 = zext i32 %shl_ln73_1" [d1.cpp:73]   --->   Operation 84 'zext' 'zext_ln73_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.54ns)   --->   "%icmp_ln73 = icmp_ne  i2 %or_ln70, i2 3" [d1.cpp:73]   --->   Operation 85 'icmp' 'icmp_ln73' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 86 '%mul_ln73 = mul i64 %zext_ln73, i64 %zext_ln70'
ST_2 : Operation 86 [1/1] (2.45ns)   --->   "%mul_ln73 = mul i64 %zext_ln73, i64 %zext_ln70" [d1.cpp:73]   --->   Operation 86 'mul' 'mul_ln73' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.96ns)   --->   Input mux for Operation 87 '%mul_ln73_1 = mul i64 %zext_ln73_1, i64 %zext_ln72_1'
ST_2 : Operation 87 [1/1] (2.45ns)   --->   "%mul_ln73_1 = mul i64 %zext_ln73_1, i64 %zext_ln72_1" [d1.cpp:73]   --->   Operation 87 'mul' 'mul_ln73_1' <Predicate = (!tmp)> <Delay = 2.45> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node and_ln73)   --->   "%select_ln73_2 = select i1 %icmp_ln73, i64 18446744073709551615, i64 0" [d1.cpp:73]   --->   Operation 88 'select' 'select_ln73_2' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln73 = and i64 %mul_ln73_1, i64 %select_ln73_2" [d1.cpp:73]   --->   Operation 89 'and' 'and_ln73' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln73 = add i64 %and_ln73, i64 %mul_ln73" [d1.cpp:73]   --->   Operation 90 'add' 'add_ln73' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 91 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln73_1 = add i64 %add193_114_load, i64 %add_ln73" [d1.cpp:73]   --->   Operation 91 'add' 'add_ln73_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 92 [1/1] (0.67ns)   --->   "%add_ln64 = add i3 %i_1, i3 2" [d1.cpp:64]   --->   Operation 92 'add' 'add_ln64' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.42ns)   --->   "%store_ln64 = store i3 %add_ln64, i3 %i" [d1.cpp:64]   --->   Operation 93 'store' 'store_ln64' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 94 [1/1] (0.42ns)   --->   "%store_ln64 = store i64 %add_ln73_1, i64 %add193_114" [d1.cpp:64]   --->   Operation 94 'store' 'store_ln64' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 95 [1/1] (0.42ns)   --->   "%store_ln64 = store i64 %add_ln72_1, i64 %add176_113" [d1.cpp:64]   --->   Operation 95 'store' 'store_ln64' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 96 [1/1] (0.42ns)   --->   "%store_ln64 = store i64 %add_ln71_1, i64 %add156_112" [d1.cpp:64]   --->   Operation 96 'store' 'store_ln64' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 97 [1/1] (0.42ns)   --->   "%store_ln64 = store i64 %add_ln70_1, i64 %add143_111" [d1.cpp:64]   --->   Operation 97 'store' 'store_ln64' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln64 = br void %for.body122" [d1.cpp:64]   --->   Operation 98 'br' 'br_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%add143_111_load_1 = load i64 %add143_111"   --->   Operation 99 'load' 'add143_111_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%add156_112_load_1 = load i64 %add156_112"   --->   Operation 100 'load' 'add156_112_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%add176_113_load_1 = load i64 %add176_113"   --->   Operation 101 'load' 'add176_113_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%add193_114_load_1 = load i64 %add193_114"   --->   Operation 102 'load' 'add193_114_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add193_114_out, i64 %add193_114_load_1"   --->   Operation 103 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add176_113_out, i64 %add176_113_load_1"   --->   Operation 104 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add156_112_out, i64 %add156_112_load_1"   --->   Operation 105 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add143_111_out, i64 %add143_111_load_1"   --->   Operation 106 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 107 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [22]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [36]  (0.427 ns)

 <State 2>: 6.081ns
The critical path consists of the following:
	'load' operation ('i', d1.cpp:64) on local variable 'i' [43]  (0.000 ns)
	'icmp' operation ('icmp_ln70_2', d1.cpp:70) [57]  (0.548 ns)
	'select' operation ('select_ln71', d1.cpp:71) [61]  (0.418 ns)
	'select' operation ('select_ln70_1', d1.cpp:70) [80]  (0.449 ns)
	multiplexor before operation 'mul' with delay (0.961 ns)
'mul' operation ('mul_ln70_1', d1.cpp:70) [83]  (2.459 ns)
	'add' operation ('add_ln70', d1.cpp:70) [84]  (0.000 ns)
	'add' operation ('add_ln70_1', d1.cpp:70) [85]  (0.819 ns)
	'store' operation ('store_ln64', d1.cpp:64) of variable 'add_ln70_1', d1.cpp:70 on local variable 'add143_111' [113]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
