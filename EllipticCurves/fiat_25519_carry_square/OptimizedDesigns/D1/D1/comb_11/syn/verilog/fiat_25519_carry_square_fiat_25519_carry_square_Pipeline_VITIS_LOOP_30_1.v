// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_30_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        zext_ln27,
        arg1_r_3_reload,
        arg1_r_2_reload,
        arg1_r_1_reload,
        zext_ln37_2,
        arr_8_out,
        arr_8_out_ap_vld,
        arr_7_out,
        arr_7_out_ap_vld,
        arr_6_out,
        arr_6_out_ap_vld,
        arr_5_out,
        arr_5_out_ap_vld,
        arr_4_out,
        arr_4_out_ap_vld,
        arr_3_out,
        arr_3_out_ap_vld,
        arr_2_out,
        arr_2_out_ap_vld,
        arr_1_out,
        arr_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] zext_ln27;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] zext_ln37_2;
output  [63:0] arr_8_out;
output   arr_8_out_ap_vld;
output  [63:0] arr_7_out;
output   arr_7_out_ap_vld;
output  [63:0] arr_6_out;
output   arr_6_out_ap_vld;
output  [63:0] arr_5_out;
output   arr_5_out_ap_vld;
output  [63:0] arr_4_out;
output   arr_4_out_ap_vld;
output  [63:0] arr_3_out;
output   arr_3_out_ap_vld;
output  [63:0] arr_2_out;
output   arr_2_out_ap_vld;
output  [63:0] arr_1_out;
output   arr_1_out_ap_vld;

reg ap_idle;
reg arr_8_out_ap_vld;
reg arr_7_out_ap_vld;
reg arr_6_out_ap_vld;
reg arr_5_out_ap_vld;
reg arr_4_out_ap_vld;
reg arr_3_out_ap_vld;
reg arr_2_out_ap_vld;
reg arr_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln30_fu_316_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln37_2_cast_fu_260_p1;
reg   [62:0] zext_ln37_2_cast_reg_848;
wire   [63:0] zext_ln27_cast_fu_264_p1;
reg   [63:0] zext_ln27_cast_reg_854;
reg   [3:0] i_1_fu_92;
wire   [3:0] add_ln30_fu_670_p2;
wire    ap_loop_init;
wire   [3:0] i_load_fu_313_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] arr_1_fu_96;
wire   [63:0] arr_11_fu_564_p2;
reg   [63:0] arr_8_fu_100;
wire   [63:0] arr_fu_398_p2;
reg   [63:0] arr_2_fu_104;
wire   [63:0] arr_10_fu_527_p2;
reg   [63:0] arr_7_fu_108;
wire   [63:0] arr_9_fu_503_p2;
reg   [63:0] arr_3_fu_112;
reg   [63:0] arr_6_fu_116;
reg   [63:0] arr_4_fu_120;
reg   [63:0] arr_5_fu_124;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln37_2_fu_244_p0;
wire   [31:0] mul_ln37_2_fu_244_p1;
wire   [31:0] mul_ln37_3_fu_248_p0;
wire   [31:0] mul_ln37_3_fu_248_p1;
wire   [31:0] mul_ln37_fu_252_p0;
wire   [31:0] mul_ln37_fu_252_p1;
wire   [31:0] mul_ln37_1_fu_256_p0;
wire   [31:0] mul_ln37_1_fu_256_p1;
wire   [3:0] tmp_fu_356_p10;
wire   [31:0] tmp_fu_356_p11;
wire   [2:0] trunc_ln29_fu_346_p1;
wire   [63:0] mul_ln37_fu_252_p2;
wire   [63:0] tmp_1_fu_380_p8;
wire   [2:0] tmp_2_fu_422_p9;
wire   [2:0] tmp_3_fu_439_p8;
wire   [31:0] tmp_3_fu_439_p9;
wire   [2:0] tmp_4_fu_459_p7;
wire   [31:0] tmp_2_fu_422_p10;
wire   [62:0] mul_ln37_2_fu_244_p2;
wire   [63:0] tmp_5_fu_472_p8;
wire   [63:0] shl_ln_fu_495_p3;
wire   [63:0] tmp_6_fu_509_p8;
wire   [63:0] mul_ln37_1_fu_256_p2;
wire   [31:0] tmp_4_fu_459_p8;
wire   [62:0] mul_ln37_3_fu_248_p2;
wire   [63:0] tmp_7_fu_533_p8;
wire   [63:0] shl_ln37_1_fu_556_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln37_1_fu_256_p00;
wire   [62:0] mul_ln37_2_fu_244_p10;
wire   [62:0] mul_ln37_3_fu_248_p10;
wire   [63:0] mul_ln37_fu_252_p00;
reg    ap_condition_415;
reg    ap_condition_419;
reg    ap_condition_422;
reg    ap_condition_425;
reg    ap_condition_428;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U13(
    .din0(mul_ln37_2_fu_244_p0),
    .din1(mul_ln37_2_fu_244_p1),
    .dout(mul_ln37_2_fu_244_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U14(
    .din0(mul_ln37_3_fu_248_p0),
    .din1(mul_ln37_3_fu_248_p1),
    .dout(mul_ln37_3_fu_248_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U15(
    .din0(mul_ln37_fu_252_p0),
    .din1(mul_ln37_fu_252_p1),
    .dout(mul_ln37_fu_252_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U16(
    .din0(mul_ln37_1_fu_256_p0),
    .din1(mul_ln37_1_fu_256_p1),
    .dout(mul_ln37_1_fu_256_p2)
);

fiat_25519_carry_square_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U17(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(tmp_fu_356_p10),
    .dout(tmp_fu_356_p11)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U18(
    .din0(64'd0),
    .din1(arr_8_fu_100),
    .din2(arr_7_fu_108),
    .din3(arr_6_fu_116),
    .din4(arr_5_fu_124),
    .din5(arr_4_fu_120),
    .din6(trunc_ln29_fu_346_p1),
    .dout(tmp_1_fu_380_p8)
);

fiat_25519_carry_square_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U19(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(tmp_2_fu_422_p9),
    .dout(tmp_2_fu_422_p10)
);

fiat_25519_carry_square_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U20(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(tmp_3_fu_439_p8),
    .dout(tmp_3_fu_439_p9)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U21(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(tmp_4_fu_459_p7),
    .dout(tmp_4_fu_459_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U22(
    .din0(64'd0),
    .din1(arr_7_fu_108),
    .din2(arr_6_fu_116),
    .din3(arr_5_fu_124),
    .din4(arr_4_fu_120),
    .din5(arr_3_fu_112),
    .din6(trunc_ln29_fu_346_p1),
    .dout(tmp_5_fu_472_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U23(
    .din0(64'd0),
    .din1(arr_6_fu_116),
    .din2(arr_5_fu_124),
    .din3(arr_4_fu_120),
    .din4(arr_3_fu_112),
    .din5(arr_2_fu_104),
    .din6(trunc_ln29_fu_346_p1),
    .dout(tmp_6_fu_509_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U24(
    .din0(64'd0),
    .din1(arr_5_fu_124),
    .din2(arr_4_fu_120),
    .din3(arr_3_fu_112),
    .din4(arr_2_fu_104),
    .din5(arr_1_fu_96),
    .din6(trunc_ln29_fu_346_p1),
    .dout(tmp_7_fu_533_p8)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_1_fu_96 <= 64'd0;
        end else if ((1'b1 == ap_condition_415)) begin
            arr_1_fu_96 <= arr_11_fu_564_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_2_fu_104 <= 64'd0;
        end else if ((1'b1 == ap_condition_415)) begin
            arr_2_fu_104 <= arr_10_fu_527_p2;
        end else if ((1'b1 == ap_condition_419)) begin
            arr_2_fu_104 <= arr_11_fu_564_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_3_fu_112 <= 64'd0;
        end else if ((1'b1 == ap_condition_415)) begin
            arr_3_fu_112 <= arr_9_fu_503_p2;
        end else if ((1'b1 == ap_condition_422)) begin
            arr_3_fu_112 <= arr_11_fu_564_p2;
        end else if ((1'b1 == ap_condition_419)) begin
            arr_3_fu_112 <= arr_10_fu_527_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_4_fu_120 <= 64'd0;
        end else if ((1'b1 == ap_condition_415)) begin
            arr_4_fu_120 <= arr_fu_398_p2;
        end else if ((1'b1 == ap_condition_425)) begin
            arr_4_fu_120 <= arr_11_fu_564_p2;
        end else if ((1'b1 == ap_condition_422)) begin
            arr_4_fu_120 <= arr_10_fu_527_p2;
        end else if ((1'b1 == ap_condition_419)) begin
            arr_4_fu_120 <= arr_9_fu_503_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_5_fu_124 <= 64'd0;
        end else if ((1'b1 == ap_condition_428)) begin
            arr_5_fu_124 <= arr_11_fu_564_p2;
        end else if ((1'b1 == ap_condition_425)) begin
            arr_5_fu_124 <= arr_10_fu_527_p2;
        end else if ((1'b1 == ap_condition_422)) begin
            arr_5_fu_124 <= arr_9_fu_503_p2;
        end else if ((1'b1 == ap_condition_419)) begin
            arr_5_fu_124 <= arr_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_6_fu_116 <= 64'd0;
        end else if ((1'b1 == ap_condition_428)) begin
            arr_6_fu_116 <= arr_10_fu_527_p2;
        end else if ((1'b1 == ap_condition_425)) begin
            arr_6_fu_116 <= arr_9_fu_503_p2;
        end else if ((1'b1 == ap_condition_422)) begin
            arr_6_fu_116 <= arr_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_7_fu_108 <= 64'd0;
        end else if ((1'b1 == ap_condition_428)) begin
            arr_7_fu_108 <= arr_9_fu_503_p2;
        end else if ((1'b1 == ap_condition_425)) begin
            arr_7_fu_108 <= arr_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_8_fu_100 <= 64'd0;
        end else if ((1'b1 == ap_condition_428)) begin
            arr_8_fu_100 <= arr_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_1_fu_92 <= 4'd1;
        end else if (((icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_1_fu_92 <= add_ln30_fu_670_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln27_cast_reg_854[31 : 0] <= zext_ln27_cast_fu_264_p1[31 : 0];
        zext_ln37_2_cast_reg_848[31 : 0] <= zext_ln37_2_cast_fu_260_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_1_out_ap_vld = 1'b1;
    end else begin
        arr_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_out_ap_vld = 1'b1;
    end else begin
        arr_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_out_ap_vld = 1'b1;
    end else begin
        arr_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_out_ap_vld = 1'b1;
    end else begin
        arr_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_5_out_ap_vld = 1'b1;
    end else begin
        arr_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_6_out_ap_vld = 1'b1;
    end else begin
        arr_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_7_out_ap_vld = 1'b1;
    end else begin
        arr_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_fu_316_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_out_ap_vld = 1'b1;
    end else begin
        arr_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_fu_670_p2 = (i_1_fu_92 + 4'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_415 = (~(i_load_fu_313_p1 == 4'd4) & ~(i_load_fu_313_p1 == 4'd3) & ~(i_load_fu_313_p1 == 4'd2) & ~(i_load_fu_313_p1 == 4'd1) & (icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_419 = ((icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_313_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_422 = ((icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_313_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_425 = ((icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_313_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_428 = ((icmp_ln30_fu_316_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_313_p1 == 4'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign arr_10_fu_527_p2 = (tmp_6_fu_509_p8 + mul_ln37_1_fu_256_p2);

assign arr_11_fu_564_p2 = (tmp_7_fu_533_p8 + shl_ln37_1_fu_556_p3);

assign arr_1_out = arr_1_fu_96;

assign arr_2_out = arr_2_fu_104;

assign arr_3_out = arr_3_fu_112;

assign arr_4_out = arr_4_fu_120;

assign arr_5_out = arr_5_fu_124;

assign arr_6_out = arr_6_fu_116;

assign arr_7_out = arr_7_fu_108;

assign arr_8_out = arr_8_fu_100;

assign arr_9_fu_503_p2 = (tmp_5_fu_472_p8 + shl_ln_fu_495_p3);

assign arr_fu_398_p2 = (mul_ln37_fu_252_p2 + tmp_1_fu_380_p8);

assign i_load_fu_313_p1 = i_1_fu_92;

assign icmp_ln30_fu_316_p2 = ((i_1_fu_92 < 4'd9) ? 1'b1 : 1'b0);

assign mul_ln37_1_fu_256_p0 = mul_ln37_1_fu_256_p00;

assign mul_ln37_1_fu_256_p00 = tmp_3_fu_439_p9;

assign mul_ln37_1_fu_256_p1 = zext_ln27_cast_reg_854;

assign mul_ln37_2_fu_244_p0 = zext_ln37_2_cast_reg_848;

assign mul_ln37_2_fu_244_p1 = mul_ln37_2_fu_244_p10;

assign mul_ln37_2_fu_244_p10 = tmp_2_fu_422_p10;

assign mul_ln37_3_fu_248_p0 = zext_ln37_2_cast_reg_848;

assign mul_ln37_3_fu_248_p1 = mul_ln37_3_fu_248_p10;

assign mul_ln37_3_fu_248_p10 = tmp_4_fu_459_p8;

assign mul_ln37_fu_252_p0 = mul_ln37_fu_252_p00;

assign mul_ln37_fu_252_p00 = tmp_fu_356_p11;

assign mul_ln37_fu_252_p1 = zext_ln27_cast_reg_854;

assign shl_ln37_1_fu_556_p3 = {{mul_ln37_3_fu_248_p2}, {1'd0}};

assign shl_ln_fu_495_p3 = {{mul_ln37_2_fu_244_p2}, {1'd0}};

assign tmp_2_fu_422_p9 = (3'd0 - trunc_ln29_fu_346_p1);

assign tmp_3_fu_439_p8 = (trunc_ln29_fu_346_p1 ^ 3'd7);

assign tmp_4_fu_459_p7 = ($signed(3'd6) - $signed(trunc_ln29_fu_346_p1));

assign tmp_fu_356_p10 = ($signed(4'd9) - $signed(i_1_fu_92));

assign trunc_ln29_fu_346_p1 = i_1_fu_92[2:0];

assign zext_ln27_cast_fu_264_p1 = zext_ln27;

assign zext_ln37_2_cast_fu_260_p1 = zext_ln37_2;

always @ (posedge ap_clk) begin
    zext_ln37_2_cast_reg_848[62:32] <= 31'b0000000000000000000000000000000;
    zext_ln27_cast_reg_854[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_30_1
