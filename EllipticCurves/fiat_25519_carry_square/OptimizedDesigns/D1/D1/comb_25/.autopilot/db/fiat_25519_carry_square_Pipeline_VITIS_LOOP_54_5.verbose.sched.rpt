

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_5'
================================================================
* Date:           Thu May  9 15:30:23 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_25 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.233 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_54_5  |        2|        2|         1|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%add106_115 = alloca i32 1"   --->   Operation 4 'alloca' 'add106_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arg1_r_5_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_5_cast"   --->   Operation 6 'read' 'arg1_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_4_reload"   --->   Operation 7 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arg1_r_8_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_8_cast"   --->   Operation 8 'read' 'arg1_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arg1_r_7_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_7_cast"   --->   Operation 9 'read' 'arg1_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg1_r_6_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_6_cast"   --->   Operation 10 'read' 'arg1_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 11 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 12 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 13 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_10_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_10"   --->   Operation 14 'read' 'arr_10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 1, i3 %i"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 16 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_10_read, i64 %add106_115"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc107"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.23>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%i_2 = load i3 %i" [d1.cpp:54]   --->   Operation 18 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.67ns)   --->   "%icmp_ln54 = icmp_ult  i3 %i_2, i3 5" [d1.cpp:54]   --->   Operation 19 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %VITIS_LOOP_64_7.exitStub, void %for.inc107.split" [d1.cpp:54]   --->   Operation 20 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%add106_115_load = load i64 %add106_115" [d1.cpp:60]   --->   Operation 21 'load' 'add106_115_load' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln56 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d1.cpp:56]   --->   Operation 22 'specpipeline' 'specpipeline_ln56' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%speclooptripcount_ln54 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d1.cpp:54]   --->   Operation 23 'speclooptripcount' 'speclooptripcount_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d1.cpp:54]   --->   Operation 24 'specloopname' 'specloopname_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i3 %i_2" [d1.cpp:54]   --->   Operation 25 'zext' 'zext_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i3 %i_2" [d1.cpp:54]   --->   Operation 26 'trunc' 'trunc_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.79ns)   --->   "%sub_ln57 = sub i4 9, i4 %zext_ln54" [d1.cpp:57]   --->   Operation 27 'sub' 'sub_ln57' <Predicate = (icmp_ln54)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.52ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 0, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i2 %trunc_ln54" [d1.cpp:60]   --->   Operation 28 'mux' 'tmp_8' <Predicate = (icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i32 %tmp_8" [d1.cpp:60]   --->   Operation 29 'zext' 'zext_ln60' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.77ns)   --->   "%tmp_9 = mux i31 @_ssdm_op_Mux.ap_auto.9i31.i4, i31 0, i31 0, i31 0, i31 0, i31 0, i31 0, i31 %arg1_r_6_cast_read, i31 %arg1_r_7_cast_read, i31 %arg1_r_8_cast_read, i4 %sub_ln57" [d1.cpp:60]   --->   Operation 30 'mux' 'tmp_9' <Predicate = (icmp_ln54)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_9, i1 0" [d1.cpp:60]   --->   Operation 31 'bitconcatenate' 'shl_ln2' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i32 %shl_ln2" [d1.cpp:60]   --->   Operation 32 'zext' 'zext_ln60_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.52ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 0, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i32 %arg1_r_4_reload_read, i2 %trunc_ln54" [d1.cpp:60]   --->   Operation 33 'mux' 'tmp_s' <Predicate = (icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i32 %tmp_s" [d1.cpp:60]   --->   Operation 34 'zext' 'zext_ln60_2' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.77ns)   --->   "%tmp_5 = mux i31 @_ssdm_op_Mux.ap_auto.9i31.i4, i31 0, i31 0, i31 0, i31 0, i31 0, i31 0, i31 %arg1_r_5_cast_read, i31 %arg1_r_6_cast_read, i31 %arg1_r_7_cast_read, i4 %sub_ln57" [d1.cpp:60]   --->   Operation 35 'mux' 'tmp_5' <Predicate = (icmp_ln54)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%shl_ln60_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_5, i1 0" [d1.cpp:60]   --->   Operation 36 'bitconcatenate' 'shl_ln60_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln60_3 = zext i32 %shl_ln60_1" [d1.cpp:60]   --->   Operation 37 'zext' 'zext_ln60_3' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : [1/1] (0.87ns)   --->   Input mux for Operation 38 '%mul_ln60 = mul i64 %zext_ln60_1, i64 %zext_ln60'
ST_2 : Operation 38 [1/1] (2.54ns)   --->   "%mul_ln60 = mul i64 %zext_ln60_1, i64 %zext_ln60" [d1.cpp:60]   --->   Operation 38 'mul' 'mul_ln60' <Predicate = (icmp_ln54)> <Delay = 2.54> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.87ns)   --->   Input mux for Operation 39 '%mul_ln60_1 = mul i64 %zext_ln60_3, i64 %zext_ln60_2'
ST_2 : Operation 39 [1/1] (2.54ns)   --->   "%mul_ln60_1 = mul i64 %zext_ln60_3, i64 %zext_ln60_2" [d1.cpp:60]   --->   Operation 39 'mul' 'mul_ln60_1' <Predicate = (icmp_ln54)> <Delay = 2.54> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln60 = add i64 %mul_ln60_1, i64 %mul_ln60" [d1.cpp:60]   --->   Operation 40 'add' 'add_ln60' <Predicate = (icmp_ln54)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 41 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln60_1 = add i64 %add106_115_load, i64 %add_ln60" [d1.cpp:60]   --->   Operation 41 'add' 'add_ln60_1' <Predicate = (icmp_ln54)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 42 [1/1] (0.67ns)   --->   "%add_ln54 = add i3 %i_2, i3 2" [d1.cpp:54]   --->   Operation 42 'add' 'add_ln54' <Predicate = (icmp_ln54)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln54 = store i3 %add_ln54, i3 %i" [d1.cpp:54]   --->   Operation 43 'store' 'store_ln54' <Predicate = (icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln60_1, i64 %add106_115" [d1.cpp:54]   --->   Operation 44 'store' 'store_ln54' <Predicate = (icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln54 = br void %for.inc107" [d1.cpp:54]   --->   Operation 45 'br' 'br_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%add106_115_load_1 = load i64 %add106_115"   --->   Operation 46 'load' 'add106_115_load_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add106_115_out, i64 %add106_115_load_1"   --->   Operation 47 'write' 'write_ln0' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 48 'ret' 'ret_ln0' <Predicate = (!icmp_ln54)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [12]  (0.000 ns)
	'store' operation ('store_ln0') of constant 1 on local variable 'i' [22]  (0.427 ns)

 <State 2>: 6.233ns
The critical path consists of the following:
	'load' operation ('i', d1.cpp:54) on local variable 'i' [26]  (0.000 ns)
	'sub' operation ('sub_ln57', d1.cpp:57) [36]  (0.797 ns)
	'mux' operation ('tmp_5', d1.cpp:60) [44]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.877 ns)
'mul' operation ('mul_ln60_1', d1.cpp:60) [48]  (2.543 ns)
	'add' operation ('add_ln60', d1.cpp:60) [49]  (0.000 ns)
	'add' operation ('add_ln60_1', d1.cpp:60) [50]  (0.819 ns)
	'store' operation ('store_ln54', d1.cpp:54) of variable 'add_ln60_1', d1.cpp:60 on local variable 'add106_115' [53]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
