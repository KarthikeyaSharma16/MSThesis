// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_33_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_11,
        arr_2,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_9_reload,
        mul_ln27,
        zext_ln30_2,
        zext_ln42_1,
        arr_10_out,
        arr_10_out_ap_vld,
        arr_9_out,
        arr_9_out_ap_vld,
        arr_8_out,
        arr_8_out_ap_vld,
        arr_7_out,
        arr_7_out_ap_vld,
        arr_6_out,
        arr_6_out_ap_vld,
        arr_5_out,
        arr_5_out_ap_vld,
        arr_4_out,
        arr_4_out_ap_vld,
        arr_3_out,
        arr_3_out_ap_vld,
        arr_out,
        arr_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr_11;
input  [63:0] arr_2;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_9_reload;
input  [31:0] mul_ln27;
input  [31:0] zext_ln30_2;
input  [31:0] zext_ln42_1;
output  [63:0] arr_10_out;
output   arr_10_out_ap_vld;
output  [63:0] arr_9_out;
output   arr_9_out_ap_vld;
output  [63:0] arr_8_out;
output   arr_8_out_ap_vld;
output  [63:0] arr_7_out;
output   arr_7_out_ap_vld;
output  [63:0] arr_6_out;
output   arr_6_out_ap_vld;
output  [63:0] arr_5_out;
output   arr_5_out_ap_vld;
output  [63:0] arr_4_out;
output   arr_4_out_ap_vld;
output  [63:0] arr_3_out;
output   arr_3_out_ap_vld;
output  [63:0] arr_out;
output   arr_out_ap_vld;

reg ap_idle;
reg arr_10_out_ap_vld;
reg arr_9_out_ap_vld;
reg arr_8_out_ap_vld;
reg arr_7_out_ap_vld;
reg arr_6_out_ap_vld;
reg arr_5_out_ap_vld;
reg arr_4_out_ap_vld;
reg arr_3_out_ap_vld;
reg arr_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_366_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln42_1_cast_fu_305_p1;
reg   [62:0] zext_ln42_1_cast_reg_836;
wire   [32:0] zext_ln30_2_cast_fu_309_p1;
reg   [32:0] zext_ln30_2_cast_reg_841;
reg   [3:0] i_1_fu_106;
wire   [3:0] add_ln33_fu_640_p2;
wire    ap_loop_init;
wire   [3:0] i_load_fu_363_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] arr_fu_110;
wire   [63:0] arr_10_fu_536_p2;
reg   [63:0] arr_1_fu_114;
wire   [63:0] arr_12_fu_594_p2;
reg   [63:0] arr_3_fu_118;
reg   [63:0] arr_4_fu_122;
reg   [63:0] arr_5_fu_126;
reg   [63:0] arr_6_fu_130;
reg   [63:0] arr_7_fu_134;
reg   [63:0] arr_8_fu_138;
reg   [63:0] arr_9_fu_142;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln42_1_fu_293_p0;
wire   [31:0] mul_ln42_1_fu_293_p1;
wire   [31:0] mul_ln41_fu_297_p0;
wire   [31:0] mul_ln41_fu_297_p1;
wire   [32:0] mul_ln42_fu_301_p0;
wire   [31:0] mul_ln42_fu_301_p1;
wire   [3:0] tmp_fu_409_p10;
wire   [31:0] tmp_fu_409_p11;
wire   [31:0] shl_ln41_fu_454_p2;
wire   [31:0] tmp_2_fu_477_p11;
wire   [3:0] tmp_3_fu_498_p11;
wire   [0:0] icmp_ln41_fu_465_p2;
wire   [63:0] mul_ln41_fu_297_p2;
wire   [63:0] select_ln41_fu_522_p3;
wire   [63:0] and_ln41_fu_530_p2;
wire   [0:0] empty_fu_405_p1;
wire   [32:0] shl_ln2_fu_542_p3;
wire   [32:0] select_ln42_fu_549_p3;
wire   [31:0] tmp_3_fu_498_p12;
wire   [62:0] mul_ln42_1_fu_293_p2;
wire   [0:0] icmp_ln42_fu_516_p2;
wire   [63:0] shl_ln42_1_fu_566_p3;
wire   [63:0] select_ln42_1_fu_574_p3;
wire   [63:0] tmp_1_fu_430_p11;
wire   [63:0] and_ln42_fu_582_p2;
wire   [63:0] add_ln42_fu_588_p2;
wire   [63:0] mul_ln42_fu_301_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln41_fu_297_p00;
wire   [63:0] mul_ln41_fu_297_p10;
wire   [62:0] mul_ln42_1_fu_293_p10;
wire   [63:0] mul_ln42_fu_301_p00;
wire   [63:0] mul_ln42_fu_301_p10;
reg    ap_condition_447;
reg    ap_condition_451;
reg    ap_condition_454;
reg    ap_condition_457;
reg    ap_condition_460;
reg    ap_condition_463;
reg    ap_condition_466;
reg    ap_condition_469;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U13(
    .din0(mul_ln42_1_fu_293_p0),
    .din1(mul_ln42_1_fu_293_p1),
    .dout(mul_ln42_1_fu_293_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U14(
    .din0(mul_ln41_fu_297_p0),
    .din1(mul_ln41_fu_297_p1),
    .dout(mul_ln41_fu_297_p2)
);

fiat_25519_carry_square_mul_33ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33ns_32ns_64_1_1_U15(
    .din0(mul_ln42_fu_301_p0),
    .din1(mul_ln42_fu_301_p1),
    .dout(mul_ln42_fu_301_p2)
);

fiat_25519_carry_square_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U16(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(tmp_fu_409_p10),
    .dout(tmp_fu_409_p11)
);

fiat_25519_carry_square_mux_9_4_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_9_4_64_1_1_U17(
    .din0(64'd0),
    .din1(arr_9_fu_142),
    .din2(arr_8_fu_138),
    .din3(arr_7_fu_134),
    .din4(arr_6_fu_130),
    .din5(arr_5_fu_126),
    .din6(arr_4_fu_122),
    .din7(arr_3_fu_118),
    .din8(arr_1_fu_114),
    .din9(i_1_fu_106),
    .dout(tmp_1_fu_430_p11)
);

fiat_25519_carry_square_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U18(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(i_1_fu_106),
    .dout(tmp_2_fu_477_p11)
);

fiat_25519_carry_square_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U19(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(tmp_3_fu_498_p11),
    .dout(tmp_3_fu_498_p12)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_1_fu_114 <= 64'd0;
        end else if ((1'b1 == ap_condition_447)) begin
            arr_1_fu_114 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_3_fu_118 <= 64'd0;
        end else if ((1'b1 == ap_condition_451)) begin
            arr_3_fu_118 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_4_fu_122 <= 64'd0;
        end else if ((1'b1 == ap_condition_454)) begin
            arr_4_fu_122 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_5_fu_126 <= 64'd0;
        end else if ((1'b1 == ap_condition_457)) begin
            arr_5_fu_126 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_6_fu_130 <= 64'd0;
        end else if ((1'b1 == ap_condition_460)) begin
            arr_6_fu_130 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_7_fu_134 <= 64'd0;
        end else if ((1'b1 == ap_condition_463)) begin
            arr_7_fu_134 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_8_fu_138 <= arr_11;
        end else if ((1'b1 == ap_condition_466)) begin
            arr_8_fu_138 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_9_fu_142 <= 64'd0;
        end else if ((1'b1 == ap_condition_469)) begin
            arr_9_fu_142 <= arr_12_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_fu_110 <= arr_2;
        end else if (((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            arr_fu_110 <= arr_10_fu_536_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_1_fu_106 <= 4'd1;
        end else if (((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_1_fu_106 <= add_ln33_fu_640_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln30_2_cast_reg_841[31 : 0] <= zext_ln30_2_cast_fu_309_p1[31 : 0];
        zext_ln42_1_cast_reg_836[31 : 0] <= zext_ln42_1_cast_fu_305_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_10_out_ap_vld = 1'b1;
    end else begin
        arr_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_out_ap_vld = 1'b1;
    end else begin
        arr_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_out_ap_vld = 1'b1;
    end else begin
        arr_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_5_out_ap_vld = 1'b1;
    end else begin
        arr_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_6_out_ap_vld = 1'b1;
    end else begin
        arr_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_7_out_ap_vld = 1'b1;
    end else begin
        arr_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_out_ap_vld = 1'b1;
    end else begin
        arr_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_out_ap_vld = 1'b1;
    end else begin
        arr_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_out_ap_vld = 1'b1;
    end else begin
        arr_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_640_p2 = (i_1_fu_106 + 4'd1);

assign add_ln42_fu_588_p2 = (tmp_1_fu_430_p11 + and_ln42_fu_582_p2);

assign and_ln41_fu_530_p2 = (select_ln41_fu_522_p3 & mul_ln41_fu_297_p2);

assign and_ln42_fu_582_p2 = (shl_ln42_1_fu_566_p3 & select_ln42_1_fu_574_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_447 = (~(i_load_fu_363_p1 == 4'd7) & ~(i_load_fu_363_p1 == 4'd6) & ~(i_load_fu_363_p1 == 4'd5) & ~(i_load_fu_363_p1 == 4'd4) & ~(i_load_fu_363_p1 == 4'd3) & ~(i_load_fu_363_p1 == 4'd2) & ~(i_load_fu_363_p1 == 4'd1) & (icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_451 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd7));
end

always @ (*) begin
    ap_condition_454 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd6));
end

always @ (*) begin
    ap_condition_457 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd5));
end

always @ (*) begin
    ap_condition_460 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_463 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_466 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_469 = ((icmp_ln33_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_363_p1 == 4'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign arr_10_fu_536_p2 = (and_ln41_fu_530_p2 + arr_fu_110);

assign arr_10_out = arr_9_fu_142;

assign arr_12_fu_594_p2 = (add_ln42_fu_588_p2 + mul_ln42_fu_301_p2);

assign arr_3_out = arr_1_fu_114;

assign arr_4_out = arr_3_fu_118;

assign arr_5_out = arr_4_fu_122;

assign arr_6_out = arr_5_fu_126;

assign arr_7_out = arr_6_fu_130;

assign arr_8_out = arr_7_fu_134;

assign arr_9_out = arr_8_fu_138;

assign arr_out = arr_fu_110;

assign empty_fu_405_p1 = i_1_fu_106[0:0];

assign i_load_fu_363_p1 = i_1_fu_106;

assign icmp_ln33_fu_366_p2 = ((i_1_fu_106 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_465_p2 = ((i_1_fu_106 < 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_516_p2 = ((i_1_fu_106 > 4'd2) ? 1'b1 : 1'b0);

assign mul_ln41_fu_297_p0 = mul_ln41_fu_297_p00;

assign mul_ln41_fu_297_p00 = tmp_2_fu_477_p11;

assign mul_ln41_fu_297_p1 = mul_ln41_fu_297_p10;

assign mul_ln41_fu_297_p10 = shl_ln41_fu_454_p2;

assign mul_ln42_1_fu_293_p0 = zext_ln42_1_cast_reg_836;

assign mul_ln42_1_fu_293_p1 = mul_ln42_1_fu_293_p10;

assign mul_ln42_1_fu_293_p10 = tmp_3_fu_498_p12;

assign mul_ln42_fu_301_p0 = mul_ln42_fu_301_p00;

assign mul_ln42_fu_301_p00 = select_ln42_fu_549_p3;

assign mul_ln42_fu_301_p1 = mul_ln42_fu_301_p10;

assign mul_ln42_fu_301_p10 = tmp_fu_409_p11;

assign select_ln41_fu_522_p3 = ((icmp_ln41_fu_465_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln42_1_fu_574_p3 = ((icmp_ln42_fu_516_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln42_fu_549_p3 = ((empty_fu_405_p1[0:0] == 1'b1) ? zext_ln30_2_cast_reg_841 : shl_ln2_fu_542_p3);

assign shl_ln2_fu_542_p3 = {{mul_ln27}, {1'd0}};

assign shl_ln41_fu_454_p2 = tmp_fu_409_p11 << 32'd1;

assign shl_ln42_1_fu_566_p3 = {{mul_ln42_1_fu_293_p2}, {1'd0}};

assign tmp_3_fu_498_p11 = ($signed(4'd10) - $signed(i_1_fu_106));

assign tmp_fu_409_p10 = ($signed(4'd9) - $signed(i_1_fu_106));

assign zext_ln30_2_cast_fu_309_p1 = zext_ln30_2;

assign zext_ln42_1_cast_fu_305_p1 = zext_ln42_1;

always @ (posedge ap_clk) begin
    zext_ln42_1_cast_reg_836[62:32] <= 31'b0000000000000000000000000000000;
    zext_ln30_2_cast_reg_841[32] <= 1'b0;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_33_1
