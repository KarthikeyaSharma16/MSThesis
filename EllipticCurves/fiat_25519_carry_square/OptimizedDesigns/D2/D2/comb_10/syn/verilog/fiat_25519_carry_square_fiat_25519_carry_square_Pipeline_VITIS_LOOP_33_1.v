// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_33_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_12,
        arr_2,
        arg1_r_4_reload,
        arg1_r_5_reload,
        arg1_r_6_reload,
        arg1_r_7_reload,
        arg1_r_8_reload,
        arg1_r_1_reload,
        arg1_r_2_reload,
        arg1_r_3_reload,
        arg1_r_9_reload,
        arg1_r_3_cast,
        arg1_r_4_cast,
        arg1_r_5_cast,
        arg1_r_6_cast,
        arg1_r_7_cast,
        arg1_r_2_cast,
        arg1_r_1_cast,
        zext_ln27,
        zext_ln42,
        zext_ln42_2,
        arr_11_out,
        arr_11_out_ap_vld,
        arr_10_out,
        arr_10_out_ap_vld,
        arr_9_out,
        arr_9_out_ap_vld,
        arr_8_out,
        arr_8_out_ap_vld,
        arr_7_out,
        arr_7_out_ap_vld,
        arr_6_out,
        arr_6_out_ap_vld,
        arr_5_out,
        arr_5_out_ap_vld,
        arr_4_out,
        arr_4_out_ap_vld,
        arr_3_out,
        arr_3_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr_12;
input  [63:0] arr_2;
input  [31:0] arg1_r_4_reload;
input  [31:0] arg1_r_5_reload;
input  [31:0] arg1_r_6_reload;
input  [31:0] arg1_r_7_reload;
input  [31:0] arg1_r_8_reload;
input  [31:0] arg1_r_1_reload;
input  [31:0] arg1_r_2_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_9_reload;
input  [30:0] arg1_r_3_cast;
input  [30:0] arg1_r_4_cast;
input  [30:0] arg1_r_5_cast;
input  [30:0] arg1_r_6_cast;
input  [30:0] arg1_r_7_cast;
input  [30:0] arg1_r_2_cast;
input  [30:0] arg1_r_1_cast;
input  [31:0] zext_ln27;
input  [31:0] zext_ln42;
input  [31:0] zext_ln42_2;
output  [63:0] arr_11_out;
output   arr_11_out_ap_vld;
output  [63:0] arr_10_out;
output   arr_10_out_ap_vld;
output  [63:0] arr_9_out;
output   arr_9_out_ap_vld;
output  [63:0] arr_8_out;
output   arr_8_out_ap_vld;
output  [63:0] arr_7_out;
output   arr_7_out_ap_vld;
output  [63:0] arr_6_out;
output   arr_6_out_ap_vld;
output  [63:0] arr_5_out;
output   arr_5_out_ap_vld;
output  [63:0] arr_4_out;
output   arr_4_out_ap_vld;
output  [63:0] arr_3_out;
output   arr_3_out_ap_vld;

reg ap_idle;
reg arr_11_out_ap_vld;
reg arr_10_out_ap_vld;
reg arr_9_out_ap_vld;
reg arr_8_out_ap_vld;
reg arr_7_out_ap_vld;
reg arr_6_out_ap_vld;
reg arr_5_out_ap_vld;
reg arr_4_out_ap_vld;
reg arr_3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_482_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln42_2_cast_fu_417_p1;
reg   [62:0] zext_ln42_2_cast_reg_1544;
wire   [62:0] zext_ln42_cast_fu_421_p1;
reg   [62:0] zext_ln42_cast_reg_1550;
wire   [63:0] zext_ln27_cast_fu_425_p1;
reg   [63:0] zext_ln27_cast_reg_1558;
wire   [63:0] add_ln41_fu_1252_p2;
reg   [63:0] add_ln41_reg_1570;
wire   [63:0] add_ln41_1_fu_1258_p2;
reg   [63:0] add_ln41_1_reg_1575;
reg   [3:0] i_1_fu_140;
wire   [3:0] add_ln33_fu_1264_p2;
wire    ap_loop_init;
wire   [3:0] i_load_fu_479_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] arr_1_fu_144;
wire   [63:0] arr_15_fu_1282_p2;
reg   [63:0] arr_3_fu_148;
wire   [63:0] arr_14_fu_1146_p2;
reg   [63:0] arr_4_fu_152;
wire   [63:0] arr_fu_1035_p2;
reg   [63:0] arr_5_fu_156;
wire   [63:0] arr_13_fu_1108_p2;
reg   [63:0] arr_10_fu_160;
wire   [63:0] arr_11_fu_1088_p2;
reg   [63:0] arr_6_fu_164;
reg   [63:0] arr_9_fu_168;
reg   [63:0] arr_7_fu_172;
reg   [63:0] arr_8_fu_176;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln42_1_fu_369_p0;
wire   [31:0] mul_ln42_1_fu_369_p1;
wire   [31:0] mul_ln42_2_fu_373_p0;
wire   [31:0] mul_ln42_2_fu_373_p1;
wire   [62:0] zext_ln42_3_fu_1041_p1;
wire   [31:0] mul_ln42_3_fu_377_p0;
wire   [31:0] mul_ln42_3_fu_377_p1;
wire   [31:0] mul_ln42_5_fu_381_p0;
wire   [31:0] mul_ln42_5_fu_381_p1;
wire   [31:0] mul_ln42_6_fu_385_p0;
wire   [31:0] mul_ln42_6_fu_385_p1;
wire   [31:0] mul_ln42_7_fu_389_p0;
wire   [31:0] mul_ln42_7_fu_389_p1;
wire   [31:0] mul_ln41_fu_393_p0;
wire   [31:0] mul_ln41_fu_393_p1;
wire   [31:0] mul_ln41_1_fu_397_p0;
wire   [31:0] mul_ln41_1_fu_397_p1;
wire   [31:0] mul_ln41_2_fu_401_p0;
wire   [31:0] mul_ln41_2_fu_401_p1;
wire   [31:0] mul_ln41_3_fu_405_p0;
wire   [31:0] mul_ln41_3_fu_405_p1;
wire   [31:0] mul_ln42_fu_409_p0;
wire   [31:0] mul_ln42_fu_409_p1;
wire   [31:0] mul_ln42_4_fu_413_p0;
wire   [31:0] mul_ln42_4_fu_413_p1;
wire   [3:0] sub_ln36_fu_516_p2;
wire   [31:0] tmp_fu_522_p11;
wire   [2:0] trunc_ln33_fu_512_p1;
wire   [31:0] shl_ln41_fu_564_p2;
wire   [2:0] add_ln39_fu_593_p2;
wire   [2:0] add_ln39_1_fu_617_p2;
wire   [3:0] add_ln39_2_fu_635_p2;
wire   [31:0] tmp_5_fu_707_p8;
wire   [3:0] tmp_6_fu_725_p11;
wire   [2:0] tmp_7_fu_746_p9;
wire   [31:0] tmp_8_fu_763_p8;
wire   [2:0] tmp_9_fu_781_p8;
wire   [31:0] tmp_9_fu_781_p9;
wire   [31:0] tmp_s_fu_801_p8;
wire   [2:0] tmp_10_fu_819_p7;
wire   [30:0] tmp_11_fu_832_p11;
wire   [31:0] shl_ln41_1_fu_851_p3;
wire   [30:0] tmp_12_fu_864_p11;
wire   [31:0] shl_ln41_2_fu_883_p3;
wire   [0:0] icmp_ln41_2_fu_629_p2;
wire   [63:0] mul_ln41_fu_393_p2;
wire   [63:0] select_ln41_fu_896_p3;
wire   [31:0] tmp_13_fu_910_p8;
wire   [30:0] tmp_14_fu_928_p11;
wire   [31:0] shl_ln41_3_fu_947_p3;
wire   [0:0] icmp_ln41_3_fu_647_p2;
wire   [63:0] mul_ln41_1_fu_397_p2;
wire   [63:0] select_ln41_1_fu_960_p3;
wire   [0:0] icmp_ln41_fu_575_p2;
wire   [63:0] mul_ln41_2_fu_401_p2;
wire   [63:0] select_ln41_2_fu_974_p3;
wire   [0:0] icmp_ln41_1_fu_605_p2;
wire   [63:0] mul_ln41_3_fu_405_p2;
wire   [63:0] select_ln41_3_fu_988_p3;
wire   [31:0] tmp_6_fu_725_p12;
wire   [62:0] mul_ln42_1_fu_369_p2;
wire   [0:0] icmp_ln42_fu_587_p2;
wire   [63:0] shl_ln2_fu_1007_p3;
wire   [63:0] select_ln42_fu_1015_p3;
wire   [63:0] tmp_1_fu_546_p8;
wire   [63:0] and_ln42_fu_1023_p2;
wire   [63:0] add_ln42_fu_1029_p2;
wire   [63:0] mul_ln42_fu_409_p2;
wire   [31:0] tmp_7_fu_746_p10;
wire   [62:0] mul_ln42_2_fu_373_p2;
wire   [62:0] mul_ln42_3_fu_377_p2;
wire   [0:0] icmp_ln42_1_fu_611_p2;
wire   [63:0] shl_ln42_2_fu_1060_p3;
wire   [63:0] select_ln42_1_fu_1068_p3;
wire   [63:0] tmp_2_fu_653_p8;
wire   [63:0] shl_ln42_1_fu_1047_p3;
wire   [63:0] add_ln42_2_fu_1082_p2;
wire   [63:0] and_ln42_1_fu_1076_p2;
wire   [62:0] mul_ln42_5_fu_381_p2;
wire   [63:0] tmp_3_fu_671_p8;
wire   [63:0] mul_ln42_4_fu_413_p2;
wire   [63:0] add_ln42_4_fu_1102_p2;
wire   [63:0] shl_ln42_3_fu_1094_p3;
wire   [31:0] tmp_10_fu_819_p8;
wire   [62:0] mul_ln42_6_fu_385_p2;
wire   [62:0] mul_ln42_7_fu_389_p2;
wire   [63:0] tmp_4_fu_689_p8;
wire   [63:0] shl_ln42_4_fu_1119_p3;
wire   [63:0] add_ln42_6_fu_1140_p2;
wire   [63:0] shl_ln42_5_fu_1132_p3;
wire   [63:0] and_ln41_2_fu_982_p2;
wire   [63:0] and_ln41_3_fu_996_p2;
wire   [63:0] and_ln41_1_fu_968_p2;
wire   [63:0] and_ln41_fu_904_p2;
wire   [63:0] add_ln41_2_fu_1278_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln41_1_fu_397_p00;
wire   [63:0] mul_ln41_1_fu_397_p10;
wire   [63:0] mul_ln41_2_fu_401_p00;
wire   [63:0] mul_ln41_2_fu_401_p10;
wire   [63:0] mul_ln41_3_fu_405_p00;
wire   [63:0] mul_ln41_3_fu_405_p10;
wire   [63:0] mul_ln41_fu_393_p00;
wire   [63:0] mul_ln41_fu_393_p10;
wire   [62:0] mul_ln42_1_fu_369_p10;
wire   [62:0] mul_ln42_3_fu_377_p10;
wire   [63:0] mul_ln42_4_fu_413_p00;
wire   [62:0] mul_ln42_6_fu_385_p10;
wire   [62:0] mul_ln42_7_fu_389_p10;
wire   [63:0] mul_ln42_fu_409_p00;
reg    ap_condition_807;
reg    ap_condition_810;
reg    ap_condition_816;
reg    ap_condition_819;
reg    ap_condition_822;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U13(
    .din0(mul_ln42_1_fu_369_p0),
    .din1(mul_ln42_1_fu_369_p1),
    .dout(mul_ln42_1_fu_369_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U14(
    .din0(mul_ln42_2_fu_373_p0),
    .din1(mul_ln42_2_fu_373_p1),
    .dout(mul_ln42_2_fu_373_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U15(
    .din0(mul_ln42_3_fu_377_p0),
    .din1(mul_ln42_3_fu_377_p1),
    .dout(mul_ln42_3_fu_377_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U16(
    .din0(mul_ln42_5_fu_381_p0),
    .din1(mul_ln42_5_fu_381_p1),
    .dout(mul_ln42_5_fu_381_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U17(
    .din0(mul_ln42_6_fu_385_p0),
    .din1(mul_ln42_6_fu_385_p1),
    .dout(mul_ln42_6_fu_385_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U18(
    .din0(mul_ln42_7_fu_389_p0),
    .din1(mul_ln42_7_fu_389_p1),
    .dout(mul_ln42_7_fu_389_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U19(
    .din0(mul_ln41_fu_393_p0),
    .din1(mul_ln41_fu_393_p1),
    .dout(mul_ln41_fu_393_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U20(
    .din0(mul_ln41_1_fu_397_p0),
    .din1(mul_ln41_1_fu_397_p1),
    .dout(mul_ln41_1_fu_397_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U21(
    .din0(mul_ln41_2_fu_401_p0),
    .din1(mul_ln41_2_fu_401_p1),
    .dout(mul_ln41_2_fu_401_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U22(
    .din0(mul_ln41_3_fu_405_p0),
    .din1(mul_ln41_3_fu_405_p1),
    .dout(mul_ln41_3_fu_405_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U23(
    .din0(mul_ln42_fu_409_p0),
    .din1(mul_ln42_fu_409_p1),
    .dout(mul_ln42_fu_409_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U24(
    .din0(mul_ln42_4_fu_413_p0),
    .din1(mul_ln42_4_fu_413_p1),
    .dout(mul_ln42_4_fu_413_p2)
);

fiat_25519_carry_square_mux_9_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_9_4_32_1_1_U25(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(sub_ln36_fu_516_p2),
    .dout(tmp_fu_522_p11)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U26(
    .din0(64'd0),
    .din1(arr_4_fu_152),
    .din2(arr_10_fu_160),
    .din3(arr_9_fu_168),
    .din4(arr_8_fu_176),
    .din5(arr_7_fu_172),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_1_fu_546_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U27(
    .din0(64'd0),
    .din1(arr_10_fu_160),
    .din2(arr_9_fu_168),
    .din3(arr_8_fu_176),
    .din4(arr_7_fu_172),
    .din5(arr_6_fu_164),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_2_fu_653_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U28(
    .din0(64'd0),
    .din1(arr_9_fu_168),
    .din2(arr_8_fu_176),
    .din3(arr_7_fu_172),
    .din4(arr_6_fu_164),
    .din5(arr_5_fu_156),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_3_fu_671_p8)
);

fiat_25519_carry_square_mux_6_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_6_3_64_1_1_U29(
    .din0(64'd0),
    .din1(arr_8_fu_176),
    .din2(arr_7_fu_172),
    .din3(arr_6_fu_164),
    .din4(arr_5_fu_156),
    .din5(arr_3_fu_148),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_4_fu_689_p8)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U30(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_5_fu_707_p8)
);

fiat_25519_carry_square_mux_10_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_10_4_32_1_1_U31(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(32'd0),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(arg1_r_8_reload),
    .din9(arg1_r_9_reload),
    .din10(tmp_6_fu_725_p11),
    .dout(tmp_6_fu_725_p12)
);

fiat_25519_carry_square_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U32(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd0),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(arg1_r_7_reload),
    .din8(tmp_7_fu_746_p9),
    .dout(tmp_7_fu_746_p10)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U33(
    .din0(32'd0),
    .din1(arg1_r_2_reload),
    .din2(arg1_r_3_reload),
    .din3(arg1_r_4_reload),
    .din4(arg1_r_5_reload),
    .din5(arg1_r_6_reload),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_8_fu_763_p8)
);

fiat_25519_carry_square_mux_7_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_7_3_32_1_1_U34(
    .din0(32'd0),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(arg1_r_6_reload),
    .din7(tmp_9_fu_781_p8),
    .dout(tmp_9_fu_781_p9)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U35(
    .din0(32'd0),
    .din1(arg1_r_3_reload),
    .din2(arg1_r_4_reload),
    .din3(arg1_r_5_reload),
    .din4(arg1_r_6_reload),
    .din5(arg1_r_7_reload),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_s_fu_801_p8)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U36(
    .din0(32'd0),
    .din1(arg1_r_1_reload),
    .din2(arg1_r_2_reload),
    .din3(arg1_r_3_reload),
    .din4(arg1_r_4_reload),
    .din5(arg1_r_5_reload),
    .din6(tmp_10_fu_819_p7),
    .dout(tmp_10_fu_819_p8)
);

fiat_25519_carry_square_mux_9_4_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 31 ),
    .din5_WIDTH( 31 ),
    .din6_WIDTH( 31 ),
    .din7_WIDTH( 31 ),
    .din8_WIDTH( 31 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
mux_9_4_31_1_1_U37(
    .din0(31'd0),
    .din1(31'd0),
    .din2(31'd0),
    .din3(31'd0),
    .din4(arg1_r_3_cast),
    .din5(arg1_r_4_cast),
    .din6(arg1_r_5_cast),
    .din7(arg1_r_6_cast),
    .din8(arg1_r_7_cast),
    .din9(sub_ln36_fu_516_p2),
    .dout(tmp_11_fu_832_p11)
);

fiat_25519_carry_square_mux_9_4_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 31 ),
    .din5_WIDTH( 31 ),
    .din6_WIDTH( 31 ),
    .din7_WIDTH( 31 ),
    .din8_WIDTH( 31 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
mux_9_4_31_1_1_U38(
    .din0(31'd0),
    .din1(31'd0),
    .din2(31'd0),
    .din3(31'd0),
    .din4(arg1_r_2_cast),
    .din5(arg1_r_3_cast),
    .din6(arg1_r_4_cast),
    .din7(arg1_r_5_cast),
    .din8(arg1_r_6_cast),
    .din9(sub_ln36_fu_516_p2),
    .dout(tmp_12_fu_864_p11)
);

fiat_25519_carry_square_mux_6_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_6_3_32_1_1_U39(
    .din0(32'd0),
    .din1(arg1_r_4_reload),
    .din2(arg1_r_5_reload),
    .din3(arg1_r_6_reload),
    .din4(arg1_r_7_reload),
    .din5(arg1_r_8_reload),
    .din6(trunc_ln33_fu_512_p1),
    .dout(tmp_13_fu_910_p8)
);

fiat_25519_carry_square_mux_9_4_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 31 ),
    .din5_WIDTH( 31 ),
    .din6_WIDTH( 31 ),
    .din7_WIDTH( 31 ),
    .din8_WIDTH( 31 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 31 ))
mux_9_4_31_1_1_U40(
    .din0(31'd0),
    .din1(31'd0),
    .din2(31'd0),
    .din3(31'd0),
    .din4(arg1_r_1_cast),
    .din5(arg1_r_2_cast),
    .din6(arg1_r_3_cast),
    .din7(arg1_r_4_cast),
    .din8(arg1_r_5_cast),
    .din9(sub_ln36_fu_516_p2),
    .dout(tmp_14_fu_928_p11)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_10_fu_160 <= arr_12;
        end else if ((1'b1 == ap_condition_810)) begin
            arr_10_fu_160 <= arr_11_fu_1088_p2;
        end else if ((1'b1 == ap_condition_807)) begin
            arr_10_fu_160 <= arr_fu_1035_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            arr_1_fu_144 <= arr_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr_1_fu_144 <= arr_15_fu_1282_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_3_fu_148 <= 64'd0;
        end else if ((1'b1 == ap_condition_816)) begin
            arr_3_fu_148 <= arr_14_fu_1146_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_4_fu_152 <= 64'd0;
        end else if ((1'b1 == ap_condition_810)) begin
            arr_4_fu_152 <= arr_fu_1035_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_5_fu_156 <= 64'd0;
        end else if ((1'b1 == ap_condition_816)) begin
            arr_5_fu_156 <= arr_13_fu_1108_p2;
        end else if ((1'b1 == ap_condition_819)) begin
            arr_5_fu_156 <= arr_14_fu_1146_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_6_fu_164 <= 64'd0;
        end else if ((1'b1 == ap_condition_816)) begin
            arr_6_fu_164 <= arr_11_fu_1088_p2;
        end else if ((1'b1 == ap_condition_822)) begin
            arr_6_fu_164 <= arr_14_fu_1146_p2;
        end else if ((1'b1 == ap_condition_819)) begin
            arr_6_fu_164 <= arr_13_fu_1108_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_7_fu_172 <= 64'd0;
        end else if ((1'b1 == ap_condition_816)) begin
            arr_7_fu_172 <= arr_fu_1035_p2;
        end else if ((1'b1 == ap_condition_807)) begin
            arr_7_fu_172 <= arr_14_fu_1146_p2;
        end else if ((1'b1 == ap_condition_822)) begin
            arr_7_fu_172 <= arr_13_fu_1108_p2;
        end else if ((1'b1 == ap_condition_819)) begin
            arr_7_fu_172 <= arr_11_fu_1088_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_8_fu_176 <= 64'd0;
        end else if ((1'b1 == ap_condition_810)) begin
            arr_8_fu_176 <= arr_14_fu_1146_p2;
        end else if ((1'b1 == ap_condition_807)) begin
            arr_8_fu_176 <= arr_13_fu_1108_p2;
        end else if ((1'b1 == ap_condition_822)) begin
            arr_8_fu_176 <= arr_11_fu_1088_p2;
        end else if ((1'b1 == ap_condition_819)) begin
            arr_8_fu_176 <= arr_fu_1035_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_9_fu_168 <= 64'd0;
        end else if ((1'b1 == ap_condition_810)) begin
            arr_9_fu_168 <= arr_13_fu_1108_p2;
        end else if ((1'b1 == ap_condition_807)) begin
            arr_9_fu_168 <= arr_11_fu_1088_p2;
        end else if ((1'b1 == ap_condition_822)) begin
            arr_9_fu_168 <= arr_fu_1035_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_1_fu_140 <= 4'd1;
        end else if (((icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_1_fu_140 <= add_ln33_fu_1264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_482_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln41_1_reg_1575 <= add_ln41_1_fu_1258_p2;
        add_ln41_reg_1570 <= add_ln41_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln27_cast_reg_1558[31 : 0] <= zext_ln27_cast_fu_425_p1[31 : 0];
        zext_ln42_2_cast_reg_1544[31 : 0] <= zext_ln42_2_cast_fu_417_p1[31 : 0];
        zext_ln42_cast_reg_1550[31 : 0] <= zext_ln42_cast_fu_421_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_10_out_ap_vld = 1'b1;
    end else begin
        arr_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_11_out_ap_vld = 1'b1;
    end else begin
        arr_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_out_ap_vld = 1'b1;
    end else begin
        arr_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_out_ap_vld = 1'b1;
    end else begin
        arr_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_5_out_ap_vld = 1'b1;
    end else begin
        arr_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_6_out_ap_vld = 1'b1;
    end else begin
        arr_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_7_out_ap_vld = 1'b1;
    end else begin
        arr_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_out_ap_vld = 1'b1;
    end else begin
        arr_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_482_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_out_ap_vld = 1'b1;
    end else begin
        arr_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_1264_p2 = (i_1_fu_140 + 4'd4);

assign add_ln39_1_fu_617_p2 = (trunc_ln33_fu_512_p1 + 3'd2);

assign add_ln39_2_fu_635_p2 = (i_1_fu_140 + 4'd3);

assign add_ln39_fu_593_p2 = (trunc_ln33_fu_512_p1 + 3'd1);

assign add_ln41_1_fu_1258_p2 = (and_ln41_1_fu_968_p2 + and_ln41_fu_904_p2);

assign add_ln41_2_fu_1278_p2 = (add_ln41_1_reg_1575 + add_ln41_reg_1570);

assign add_ln41_fu_1252_p2 = (and_ln41_2_fu_982_p2 + and_ln41_3_fu_996_p2);

assign add_ln42_2_fu_1082_p2 = (tmp_2_fu_653_p8 + shl_ln42_1_fu_1047_p3);

assign add_ln42_4_fu_1102_p2 = (tmp_3_fu_671_p8 + mul_ln42_4_fu_413_p2);

assign add_ln42_6_fu_1140_p2 = (tmp_4_fu_689_p8 + shl_ln42_4_fu_1119_p3);

assign add_ln42_fu_1029_p2 = (tmp_1_fu_546_p8 + and_ln42_fu_1023_p2);

assign and_ln41_1_fu_968_p2 = (select_ln41_1_fu_960_p3 & mul_ln41_1_fu_397_p2);

assign and_ln41_2_fu_982_p2 = (select_ln41_2_fu_974_p3 & mul_ln41_2_fu_401_p2);

assign and_ln41_3_fu_996_p2 = (select_ln41_3_fu_988_p3 & mul_ln41_3_fu_405_p2);

assign and_ln41_fu_904_p2 = (select_ln41_fu_896_p3 & mul_ln41_fu_393_p2);

assign and_ln42_1_fu_1076_p2 = (shl_ln42_2_fu_1060_p3 & select_ln42_1_fu_1068_p3);

assign and_ln42_fu_1023_p2 = (shl_ln2_fu_1007_p3 & select_ln42_fu_1015_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_807 = ((icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_479_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_810 = ((icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_479_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_816 = (~(i_load_fu_479_p1 == 4'd4) & ~(i_load_fu_479_p1 == 4'd3) & ~(i_load_fu_479_p1 == 4'd2) & ~(i_load_fu_479_p1 == 4'd1) & (icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_819 = ((icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_479_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_822 = ((icmp_ln33_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_load_fu_479_p1 == 4'd3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign arr_10_out = arr_10_fu_160;

assign arr_11_fu_1088_p2 = (add_ln42_2_fu_1082_p2 + and_ln42_1_fu_1076_p2);

assign arr_11_out = arr_4_fu_152;

assign arr_13_fu_1108_p2 = (add_ln42_4_fu_1102_p2 + shl_ln42_3_fu_1094_p3);

assign arr_14_fu_1146_p2 = (add_ln42_6_fu_1140_p2 + shl_ln42_5_fu_1132_p3);

assign arr_15_fu_1282_p2 = (add_ln41_2_fu_1278_p2 + arr_1_fu_144);

assign arr_3_out = arr_1_fu_144;

assign arr_4_out = arr_3_fu_148;

assign arr_5_out = arr_5_fu_156;

assign arr_6_out = arr_6_fu_164;

assign arr_7_out = arr_7_fu_172;

assign arr_8_out = arr_8_fu_176;

assign arr_9_out = arr_9_fu_168;

assign arr_fu_1035_p2 = (add_ln42_fu_1029_p2 + mul_ln42_fu_409_p2);

assign i_load_fu_479_p1 = i_1_fu_140;

assign icmp_ln33_fu_482_p2 = ((i_1_fu_140 < 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_605_p2 = ((add_ln39_fu_593_p2 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln41_2_fu_629_p2 = ((add_ln39_1_fu_617_p2 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln41_3_fu_647_p2 = ((add_ln39_2_fu_635_p2 < 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_575_p2 = ((i_1_fu_140 < 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_611_p2 = ((add_ln39_fu_593_p2 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_587_p2 = ((i_1_fu_140 > 4'd2) ? 1'b1 : 1'b0);

assign mul_ln41_1_fu_397_p0 = mul_ln41_1_fu_397_p00;

assign mul_ln41_1_fu_397_p00 = shl_ln41_3_fu_947_p3;

assign mul_ln41_1_fu_397_p1 = mul_ln41_1_fu_397_p10;

assign mul_ln41_1_fu_397_p10 = tmp_13_fu_910_p8;

assign mul_ln41_2_fu_401_p0 = mul_ln41_2_fu_401_p00;

assign mul_ln41_2_fu_401_p00 = tmp_5_fu_707_p8;

assign mul_ln41_2_fu_401_p1 = mul_ln41_2_fu_401_p10;

assign mul_ln41_2_fu_401_p10 = shl_ln41_fu_564_p2;

assign mul_ln41_3_fu_405_p0 = mul_ln41_3_fu_405_p00;

assign mul_ln41_3_fu_405_p00 = shl_ln41_1_fu_851_p3;

assign mul_ln41_3_fu_405_p1 = mul_ln41_3_fu_405_p10;

assign mul_ln41_3_fu_405_p10 = tmp_8_fu_763_p8;

assign mul_ln41_fu_393_p0 = mul_ln41_fu_393_p00;

assign mul_ln41_fu_393_p00 = shl_ln41_2_fu_883_p3;

assign mul_ln41_fu_393_p1 = mul_ln41_fu_393_p10;

assign mul_ln41_fu_393_p10 = tmp_s_fu_801_p8;

assign mul_ln42_1_fu_369_p0 = zext_ln42_cast_reg_1550;

assign mul_ln42_1_fu_369_p1 = mul_ln42_1_fu_369_p10;

assign mul_ln42_1_fu_369_p10 = tmp_6_fu_725_p12;

assign mul_ln42_2_fu_373_p0 = zext_ln42_2_cast_reg_1544;

assign mul_ln42_2_fu_373_p1 = zext_ln42_3_fu_1041_p1;

assign mul_ln42_3_fu_377_p0 = zext_ln42_cast_reg_1550;

assign mul_ln42_3_fu_377_p1 = mul_ln42_3_fu_377_p10;

assign mul_ln42_3_fu_377_p10 = tmp_fu_522_p11;

assign mul_ln42_4_fu_413_p0 = mul_ln42_4_fu_413_p00;

assign mul_ln42_4_fu_413_p00 = tmp_9_fu_781_p9;

assign mul_ln42_4_fu_413_p1 = zext_ln27_cast_reg_1558;

assign mul_ln42_5_fu_381_p0 = zext_ln42_cast_reg_1550;

assign mul_ln42_5_fu_381_p1 = zext_ln42_3_fu_1041_p1;

assign mul_ln42_6_fu_385_p0 = zext_ln42_2_cast_reg_1544;

assign mul_ln42_6_fu_385_p1 = mul_ln42_6_fu_385_p10;

assign mul_ln42_6_fu_385_p10 = tmp_10_fu_819_p8;

assign mul_ln42_7_fu_389_p0 = zext_ln42_cast_reg_1550;

assign mul_ln42_7_fu_389_p1 = mul_ln42_7_fu_389_p10;

assign mul_ln42_7_fu_389_p10 = tmp_9_fu_781_p9;

assign mul_ln42_fu_409_p0 = mul_ln42_fu_409_p00;

assign mul_ln42_fu_409_p00 = tmp_fu_522_p11;

assign mul_ln42_fu_409_p1 = zext_ln27_cast_reg_1558;

assign select_ln41_1_fu_960_p3 = ((icmp_ln41_3_fu_647_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln41_2_fu_974_p3 = ((icmp_ln41_fu_575_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln41_3_fu_988_p3 = ((icmp_ln41_1_fu_605_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln41_fu_896_p3 = ((icmp_ln41_2_fu_629_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln42_1_fu_1068_p3 = ((icmp_ln42_1_fu_611_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln42_fu_1015_p3 = ((icmp_ln42_fu_587_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign shl_ln2_fu_1007_p3 = {{mul_ln42_1_fu_369_p2}, {1'd0}};

assign shl_ln41_1_fu_851_p3 = {{tmp_11_fu_832_p11}, {1'd0}};

assign shl_ln41_2_fu_883_p3 = {{tmp_12_fu_864_p11}, {1'd0}};

assign shl_ln41_3_fu_947_p3 = {{tmp_14_fu_928_p11}, {1'd0}};

assign shl_ln41_fu_564_p2 = tmp_fu_522_p11 << 32'd1;

assign shl_ln42_1_fu_1047_p3 = {{mul_ln42_2_fu_373_p2}, {1'd0}};

assign shl_ln42_2_fu_1060_p3 = {{mul_ln42_3_fu_377_p2}, {1'd0}};

assign shl_ln42_3_fu_1094_p3 = {{mul_ln42_5_fu_381_p2}, {1'd0}};

assign shl_ln42_4_fu_1119_p3 = {{mul_ln42_6_fu_385_p2}, {1'd0}};

assign shl_ln42_5_fu_1132_p3 = {{mul_ln42_7_fu_389_p2}, {1'd0}};

assign sub_ln36_fu_516_p2 = ($signed(4'd9) - $signed(i_1_fu_140));

assign tmp_10_fu_819_p7 = ($signed(3'd6) - $signed(trunc_ln33_fu_512_p1));

assign tmp_6_fu_725_p11 = ($signed(4'd10) - $signed(i_1_fu_140));

assign tmp_7_fu_746_p9 = (3'd0 - trunc_ln33_fu_512_p1);

assign tmp_9_fu_781_p8 = (trunc_ln33_fu_512_p1 ^ 3'd7);

assign trunc_ln33_fu_512_p1 = i_1_fu_140[2:0];

assign zext_ln27_cast_fu_425_p1 = zext_ln27;

assign zext_ln42_2_cast_fu_417_p1 = zext_ln42_2;

assign zext_ln42_3_fu_1041_p1 = tmp_7_fu_746_p10;

assign zext_ln42_cast_fu_421_p1 = zext_ln42;

always @ (posedge ap_clk) begin
    zext_ln42_2_cast_reg_1544[62:32] <= 31'b0000000000000000000000000000000;
    zext_ln42_cast_reg_1550[62:32] <= 31'b0000000000000000000000000000000;
    zext_ln27_cast_reg_1558[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_33_1
