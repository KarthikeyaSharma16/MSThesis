

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_46_3'
================================================================
* Date:           Thu May  9 15:22:41 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_5 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.948 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_46_3  |        4|        4|         1|          1|          1|     4|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%add1237 = alloca i32 1"   --->   Operation 4 'alloca' 'add1237' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add1368 = alloca i32 1"   --->   Operation 5 'alloca' 'add1368' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add1569 = alloca i32 1"   --->   Operation 6 'alloca' 'add1569' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add17310 = alloca i32 1"   --->   Operation 7 'alloca' 'add17310' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arg1_r_2_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_cast"   --->   Operation 9 'read' 'arg1_r_2_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg1_r_3_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_3_cast"   --->   Operation 10 'read' 'arg1_r_3_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_4_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_4_cast"   --->   Operation 11 'read' 'arg1_r_4_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_8_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_8_cast"   --->   Operation 12 'read' 'arg1_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_7_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_7_cast"   --->   Operation 13 'read' 'arg1_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_6_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_6_cast"   --->   Operation 14 'read' 'arg1_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_5_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_5_cast"   --->   Operation 15 'read' 'arg1_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 16 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 17 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 18 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 19 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr"   --->   Operation 20 'read' 'arr_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1"   --->   Operation 21 'read' 'arr_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arr_2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_2"   --->   Operation 22 'read' 'arr_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arr_3_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_3"   --->   Operation 23 'read' 'arr_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_3_read, i64 %add17310"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_2_read, i64 %add1569"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_read, i64 %add1368"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_read, i64 %add1237"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body102"   --->   Operation 29 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.94>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i_1 = load i3 %i" [d2.cpp:46]   --->   Operation 30 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.67ns)   --->   "%icmp_ln46 = icmp_eq  i3 %i_1, i3 4" [d2.cpp:46]   --->   Operation 31 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.67ns)   --->   "%add_ln46 = add i3 %i_1, i3 1" [d2.cpp:46]   --->   Operation 32 'add' 'add_ln46' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln46 = br i1 %icmp_ln46, void %for.body102.split, void %for.end179.exitStub" [d2.cpp:46]   --->   Operation 33 'br' 'br_ln46' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%add1237_load = load i64 %add1237" [d2.cpp:52]   --->   Operation 34 'load' 'add1237_load' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%add1368_load = load i64 %add1368" [d2.cpp:53]   --->   Operation 35 'load' 'add1368_load' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%add1569_load = load i64 %add1569" [d2.cpp:54]   --->   Operation 36 'load' 'add1569_load' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%add17310_load = load i64 %add17310" [d2.cpp:55]   --->   Operation 37 'load' 'add17310_load' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specpipeline_ln48 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty" [d2.cpp:48]   --->   Operation 38 'specpipeline' 'specpipeline_ln48' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%speclooptripcount_ln46 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4" [d2.cpp:46]   --->   Operation 39 'speclooptripcount' 'speclooptripcount_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%specloopname_ln46 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d2.cpp:46]   --->   Operation 40 'specloopname' 'specloopname_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln46 = trunc i3 %i_1" [d2.cpp:46]   --->   Operation 41 'trunc' 'trunc_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i2 %trunc_ln46" [d2.cpp:46]   --->   Operation 42 'zext' 'zext_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln46_1 = zext i2 %trunc_ln46" [d2.cpp:46]   --->   Operation 43 'zext' 'zext_ln46_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.79ns)   --->   "%empty = sub i4 8, i4 %zext_ln46" [d2.cpp:46]   --->   Operation 44 'sub' 'empty' <Predicate = (!icmp_ln46)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.28ns)   --->   "%empty_20 = xor i3 %zext_ln46_1, i3 7" [d2.cpp:46]   --->   Operation 45 'xor' 'empty_20' <Predicate = (!icmp_ln46)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.54ns)   --->   "%empty_21 = sub i3 6, i3 %zext_ln46_1" [d2.cpp:46]   --->   Operation 46 'sub' 'empty_21' <Predicate = (!icmp_ln46)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.67ns)   --->   "%sub_ln49 = sub i3 5, i3 %zext_ln46_1" [d2.cpp:49]   --->   Operation 47 'sub' 'sub_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.52ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_reload_read, i32 %arg1_r_1_reload_read, i32 %arg1_r_2_reload_read, i32 %arg1_r_3_reload_read, i2 %trunc_ln46" [d2.cpp:52]   --->   Operation 48 'mux' 'tmp' <Predicate = (!icmp_ln46)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i32 %tmp" [d2.cpp:54]   --->   Operation 49 'zext' 'zext_ln54_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i32 %tmp" [d2.cpp:52]   --->   Operation 50 'zext' 'zext_ln52_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.77ns)   --->   "%tmp_1 = mux i31 @_ssdm_op_Mux.ap_auto.9i31.i4, i31 0, i31 0, i31 0, i31 0, i31 0, i31 %arg1_r_5_cast_read, i31 %arg1_r_6_cast_read, i31 %arg1_r_7_cast_read, i31 %arg1_r_8_cast_read, i4 %empty" [d2.cpp:52]   --->   Operation 51 'mux' 'tmp_1' <Predicate = (!icmp_ln46)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.67ns)   --->   "%icmp_ln52 = icmp_eq  i3 %i_1, i3 1" [d2.cpp:52]   --->   Operation 52 'icmp' 'icmp_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.67ns)   --->   "%icmp_ln52_1 = icmp_eq  i3 %i_1, i3 3" [d2.cpp:52]   --->   Operation 53 'icmp' 'icmp_ln52_1' <Predicate = (!icmp_ln46)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln52)   --->   "%or_ln52 = or i1 %icmp_ln52, i1 %icmp_ln52_1" [d2.cpp:52]   --->   Operation 54 'or' 'or_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln52)   --->   "%trunc_ln52 = trunc i31 %tmp_1" [d2.cpp:52]   --->   Operation 55 'trunc' 'trunc_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln52)   --->   "%st = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i30.i2, i30 %trunc_ln52, i2 0" [d2.cpp:52]   --->   Operation 56 'bitconcatenate' 'st' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln52)   --->   "%sf = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_1, i1 0" [d2.cpp:52]   --->   Operation 57 'bitconcatenate' 'sf' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln52 = select i1 %or_ln52, i32 %st, i32 %sf" [d2.cpp:52]   --->   Operation 58 'select' 'select_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i32 %select_ln52" [d2.cpp:52]   --->   Operation 59 'zext' 'zext_ln52' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 60 '%mul_ln52 = mul i64 %zext_ln52, i64 %zext_ln54_1'
ST_2 : Operation 60 [1/1] (2.43ns)   --->   "%mul_ln52 = mul i64 %zext_ln52, i64 %zext_ln54_1" [d2.cpp:52]   --->   Operation 60 'mul' 'mul_ln52' <Predicate = (!icmp_ln46)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.08ns)   --->   "%add_ln52 = add i64 %mul_ln52, i64 %add1237_load" [d2.cpp:52]   --->   Operation 61 'add' 'add_ln52' <Predicate = (!icmp_ln46)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.72ns)   --->   "%tmp_2 = mux i31 @_ssdm_op_Mux.ap_auto.8i31.i3, i31 0, i31 0, i31 0, i31 0, i31 %arg1_r_4_cast_read, i31 %arg1_r_5_cast_read, i31 %arg1_r_6_cast_read, i31 %arg1_r_7_cast_read, i3 %empty_20" [d2.cpp:53]   --->   Operation 62 'mux' 'tmp_2' <Predicate = (!icmp_ln46)> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_2, i1 0" [d2.cpp:53]   --->   Operation 63 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i32 %shl_ln" [d2.cpp:53]   --->   Operation 64 'zext' 'zext_ln53' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 65 '%mul_ln53 = mul i64 %zext_ln53, i64 %zext_ln54_1'
ST_2 : Operation 65 [1/1] (2.43ns)   --->   "%mul_ln53 = mul i64 %zext_ln53, i64 %zext_ln54_1" [d2.cpp:53]   --->   Operation 65 'mul' 'mul_ln53' <Predicate = (!icmp_ln46)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.08ns)   --->   "%add_ln53 = add i64 %mul_ln53, i64 %add1368_load" [d2.cpp:53]   --->   Operation 66 'add' 'add_ln53' <Predicate = (!icmp_ln46)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.67ns)   --->   "%tmp_3 = mux i31 @_ssdm_op_Mux.ap_auto.7i31.i3, i31 0, i31 0, i31 0, i31 %arg1_r_3_cast_read, i31 %arg1_r_4_cast_read, i31 %arg1_r_5_cast_read, i31 %arg1_r_6_cast_read, i3 %empty_21" [d2.cpp:54]   --->   Operation 67 'mux' 'tmp_3' <Predicate = (!icmp_ln46)> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_3, i1 0" [d2.cpp:54]   --->   Operation 68 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i32 %shl_ln1" [d2.cpp:54]   --->   Operation 69 'zext' 'zext_ln54' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%shl_ln54_1 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i32.i1, i32 %tmp, i1 0" [d2.cpp:54]   --->   Operation 70 'bitconcatenate' 'shl_ln54_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.43ns)   --->   "%select_ln54 = select i1 %icmp_ln52, i33 %shl_ln54_1, i33 %zext_ln52_1" [d2.cpp:54]   --->   Operation 71 'select' 'select_ln54' <Predicate = (!icmp_ln46)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln54_2 = zext i33 %select_ln54" [d2.cpp:54]   --->   Operation 72 'zext' 'zext_ln54_2' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (3.41ns)   --->   "%mul_ln54 = mul i64 %zext_ln54_2, i64 %zext_ln54" [d2.cpp:54]   --->   Operation 73 'mul' 'mul_ln54' <Predicate = (!icmp_ln46)> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.08ns)   --->   "%add_ln54 = add i64 %mul_ln54, i64 %add1569_load" [d2.cpp:54]   --->   Operation 74 'add' 'add_ln54' <Predicate = (!icmp_ln46)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.62ns)   --->   "%tmp_4 = mux i31 @_ssdm_op_Mux.ap_auto.6i31.i3, i31 0, i31 0, i31 %arg1_r_2_cast_read, i31 %arg1_r_3_cast_read, i31 %arg1_r_4_cast_read, i31 %arg1_r_5_cast_read, i3 %sub_ln49" [d2.cpp:55]   --->   Operation 75 'mux' 'tmp_4' <Predicate = (!icmp_ln46)> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_4, i1 0" [d2.cpp:55]   --->   Operation 76 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i32 %shl_ln2" [d2.cpp:55]   --->   Operation 77 'zext' 'zext_ln55' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.67ns)   --->   "%icmp_ln55 = icmp_ult  i3 %i_1, i3 3" [d2.cpp:55]   --->   Operation 78 'icmp' 'icmp_ln55' <Predicate = (!icmp_ln46)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 79 '%mul_ln55 = mul i64 %zext_ln55, i64 %zext_ln54_1'
ST_2 : Operation 79 [1/1] (2.43ns)   --->   "%mul_ln55 = mul i64 %zext_ln55, i64 %zext_ln54_1" [d2.cpp:55]   --->   Operation 79 'mul' 'mul_ln55' <Predicate = (!icmp_ln46)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%select_ln55 = select i1 %icmp_ln55, i64 18446744073709551615, i64 0" [d2.cpp:55]   --->   Operation 80 'select' 'select_ln55' <Predicate = (!icmp_ln46)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%and_ln55 = and i64 %mul_ln55, i64 %select_ln55" [d2.cpp:55]   --->   Operation 81 'and' 'and_ln55' <Predicate = (!icmp_ln46)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln55 = add i64 %and_ln55, i64 %add17310_load" [d2.cpp:55]   --->   Operation 82 'add' 'add_ln55' <Predicate = (!icmp_ln46)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln46 = store i3 %add_ln46, i3 %i" [d2.cpp:46]   --->   Operation 83 'store' 'store_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.42>
ST_2 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln46 = store i64 %add_ln55, i64 %add17310" [d2.cpp:46]   --->   Operation 84 'store' 'store_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.42>
ST_2 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln46 = store i64 %add_ln54, i64 %add1569" [d2.cpp:46]   --->   Operation 85 'store' 'store_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.42>
ST_2 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln46 = store i64 %add_ln53, i64 %add1368" [d2.cpp:46]   --->   Operation 86 'store' 'store_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.42>
ST_2 : Operation 87 [1/1] (0.42ns)   --->   "%store_ln46 = store i64 %add_ln52, i64 %add1237" [d2.cpp:46]   --->   Operation 87 'store' 'store_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.42>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln46 = br void %for.body102" [d2.cpp:46]   --->   Operation 88 'br' 'br_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%add1237_load_1 = load i64 %add1237"   --->   Operation 89 'load' 'add1237_load_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%add1368_load_1 = load i64 %add1368"   --->   Operation 90 'load' 'add1368_load_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%add1569_load_1 = load i64 %add1569"   --->   Operation 91 'load' 'add1569_load_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%add17310_load_1 = load i64 %add17310"   --->   Operation 92 'load' 'add17310_load_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add17310_out, i64 %add17310_load_1"   --->   Operation 93 'write' 'write_ln0' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add1569_out, i64 %add1569_load_1"   --->   Operation 94 'write' 'write_ln0' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add1368_out, i64 %add1368_load_1"   --->   Operation 95 'write' 'write_ln0' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add1237_out, i64 %add1237_load_1"   --->   Operation 96 'write' 'write_ln0' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 97 'ret' 'ret_ln0' <Predicate = (icmp_ln46)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [24]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [40]  (0.427 ns)

 <State 2>: 6.948ns
The critical path consists of the following:
	'load' operation ('i', d2.cpp:46) on local variable 'i' [47]  (0.000 ns)
	'sub' operation ('empty', d2.cpp:46) [62]  (0.797 ns)
	'mux' operation ('tmp_1', d2.cpp:52) [69]  (0.770 ns)
	'select' operation ('select_ln52', d2.cpp:52) [76]  (0.449 ns)
	multiplexor before operation 'mul' with delay (0.989 ns)
'mul' operation ('mul_ln52', d2.cpp:52) [78]  (2.431 ns)
	'add' operation ('add_ln52', d2.cpp:52) [79]  (1.085 ns)
	'store' operation ('store_ln46', d2.cpp:46) of variable 'add_ln52', d2.cpp:52 on local variable 'add1237' [105]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
