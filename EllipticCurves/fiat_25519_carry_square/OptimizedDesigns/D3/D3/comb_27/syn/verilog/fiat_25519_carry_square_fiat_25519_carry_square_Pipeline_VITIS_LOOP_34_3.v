// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_137_0195_reload,
        arg1_r_238_0196_reload,
        arg1_r_0_0194_reload,
        arg1_r_1_0_0198_reload,
        arg1_r_1_1_0199_reload,
        arg1_r_1_2_0200_reload,
        arg1_r_2_0_0201_reload,
        arg1_r_2_1_0202_reload,
        arg1_r_2_2_0203_reload,
        zext_ln40,
        arr_address0,
        arr_ce0,
        arr_we0,
        arr_d0,
        arr_address1,
        arr_ce1,
        arr_q1,
        arr_1_address0,
        arr_1_ce0,
        arr_1_we0,
        arr_1_d0,
        arr_1_address1,
        arr_1_ce1,
        arr_1_q1,
        arr_2_address0,
        arr_2_ce0,
        arr_2_we0,
        arr_2_d0,
        arr_2_address1,
        arr_2_ce1,
        arr_2_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_137_0195_reload;
input  [31:0] arg1_r_238_0196_reload;
input  [31:0] arg1_r_0_0194_reload;
input  [31:0] arg1_r_1_0_0198_reload;
input  [31:0] arg1_r_1_1_0199_reload;
input  [31:0] arg1_r_1_2_0200_reload;
input  [31:0] arg1_r_2_0_0201_reload;
input  [31:0] arg1_r_2_1_0202_reload;
input  [31:0] arg1_r_2_2_0203_reload;
input  [31:0] zext_ln40;
output  [1:0] arr_address0;
output   arr_ce0;
output   arr_we0;
output  [63:0] arr_d0;
output  [1:0] arr_address1;
output   arr_ce1;
input  [63:0] arr_q1;
output  [1:0] arr_1_address0;
output   arr_1_ce0;
output   arr_1_we0;
output  [63:0] arr_1_d0;
output  [1:0] arr_1_address1;
output   arr_1_ce1;
input  [63:0] arr_1_q1;
output  [1:0] arr_2_address0;
output   arr_2_ce0;
output   arr_2_we0;
output  [63:0] arr_2_d0;
output  [1:0] arr_2_address1;
output   arr_2_ce1;
input  [63:0] arr_2_q1;

reg ap_idle;
reg arr_ce0;
reg arr_we0;
reg arr_ce1;
reg arr_1_ce0;
reg arr_1_we0;
reg arr_1_ce1;
reg arr_2_ce0;
reg arr_2_we0;
reg arr_2_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln34_fu_228_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln40_cast_fu_211_p1;
reg   [62:0] zext_ln40_cast_reg_597;
reg   [1:0] indvars_iv_load_reg_604;
reg   [1:0] indvars_iv_load_reg_604_pp0_iter1_reg;
reg   [1:0] indvars_iv_load_reg_604_pp0_iter2_reg;
reg   [1:0] indvars_iv_load_reg_604_pp0_iter3_reg;
reg   [1:0] indvars_iv_load_reg_604_pp0_iter4_reg;
wire   [2:0] sub_ln37_fu_241_p2;
reg   [2:0] sub_ln37_reg_613;
reg   [2:0] sub_ln37_reg_613_pp0_iter1_reg;
reg   [2:0] sub_ln37_reg_613_pp0_iter2_reg;
reg   [2:0] sub_ln37_reg_613_pp0_iter3_reg;
reg   [2:0] sub_ln37_reg_613_pp0_iter4_reg;
reg   [1:0] trunc_ln3_reg_621;
reg   [1:0] arr_addr_reg_628;
reg   [1:0] trunc_ln40_2_reg_634;
reg   [1:0] arr_1_addr_reg_641;
reg   [0:0] tmp_1_reg_647;
reg   [1:0] arr_2_addr_reg_654;
wire   [63:0] zext_ln22_fu_275_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_1_fu_80;
wire   [3:0] add_ln34_fu_253_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1_load;
reg   [1:0] indvars_iv_fu_84;
wire   [1:0] add_ln34_1_fu_259_p2;
reg   [1:0] ap_sig_allocacmp_indvars_iv_load;
wire   [31:0] mul_ln40_1_fu_199_p0;
wire   [31:0] mul_ln40_1_fu_199_p1;
wire   [31:0] mul_ln40_fu_203_p0;
wire   [31:0] mul_ln40_fu_203_p1;
wire   [31:0] mul_ln40_2_fu_207_p0;
wire   [31:0] mul_ln40_2_fu_207_p1;
wire   [2:0] trunc_ln34_fu_237_p1;
wire   [2:0] grp_fu_247_p0;
wire   [2:0] mul_ln37_fu_284_p0;
wire   [4:0] mul_ln37_fu_284_p1;
wire   [6:0] mul_ln37_fu_284_p2;
wire   [2:0] add_ln40_1_fu_300_p2;
wire   [2:0] mul_ln40_3_fu_309_p0;
wire   [4:0] mul_ln40_3_fu_309_p1;
wire   [6:0] mul_ln40_3_fu_309_p2;
wire   [2:0] add_ln40_2_fu_325_p2;
wire   [2:0] mul_ln40_4_fu_334_p0;
wire   [4:0] mul_ln40_4_fu_334_p1;
wire   [6:0] mul_ln40_4_fu_334_p2;
wire   [1:0] grp_fu_247_p2;
wire   [31:0] phi_ln_fu_352_p6;
wire   [31:0] phi_ln40_1_fu_362_p6;
wire   [31:0] phi_ln40_2_fu_372_p6;
wire   [1:0] trunc_ln40_fu_348_p1;
wire   [31:0] tmp_fu_382_p5;
wire   [62:0] mul_ln40_1_fu_199_p2;
wire   [63:0] shl_ln5_fu_399_p3;
wire   [31:0] phi_ln40_5_fu_434_p6;
wire   [31:0] phi_ln40_3_fu_414_p6;
wire   [31:0] phi_ln40_4_fu_424_p6;
wire   [31:0] tmp_2_fu_444_p5;
wire   [62:0] mul_ln40_fu_203_p2;
wire   [31:0] tmp_3_fu_484_p1;
wire   [31:0] tmp_3_fu_484_p2;
wire   [31:0] tmp_3_fu_484_p3;
wire   [31:0] tmp_3_fu_484_p5;
wire   [62:0] mul_ln40_2_fu_207_p2;
wire   [63:0] shl_ln40_1_fu_461_p3;
wire   [63:0] shl_ln40_2_fu_501_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [6:0] mul_ln37_fu_284_p00;
wire   [62:0] mul_ln40_1_fu_199_p10;
wire   [62:0] mul_ln40_2_fu_207_p10;
wire   [6:0] mul_ln40_3_fu_309_p00;
wire   [6:0] mul_ln40_4_fu_334_p00;
wire   [62:0] mul_ln40_fu_203_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U16(
    .din0(mul_ln40_1_fu_199_p0),
    .din1(mul_ln40_1_fu_199_p1),
    .dout(mul_ln40_1_fu_199_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U17(
    .din0(mul_ln40_fu_203_p0),
    .din1(mul_ln40_fu_203_p1),
    .dout(mul_ln40_fu_203_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U18(
    .din0(mul_ln40_2_fu_207_p0),
    .din1(mul_ln40_2_fu_207_p1),
    .dout(mul_ln40_2_fu_207_p2)
);

fiat_25519_carry_square_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_247_p0),
    .din1(3'd3),
    .ce(1'b1),
    .dout(grp_fu_247_p2)
);

fiat_25519_carry_square_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U20(
    .din0(mul_ln37_fu_284_p0),
    .din1(mul_ln37_fu_284_p1),
    .dout(mul_ln37_fu_284_p2)
);

fiat_25519_carry_square_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U21(
    .din0(mul_ln40_3_fu_309_p0),
    .din1(mul_ln40_3_fu_309_p1),
    .dout(mul_ln40_3_fu_309_p2)
);

fiat_25519_carry_square_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U22(
    .din0(mul_ln40_4_fu_334_p0),
    .din1(mul_ln40_4_fu_334_p1),
    .dout(mul_ln40_4_fu_334_p2)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U23(
    .din0(arg1_r_0_0194_reload),
    .din1(arg1_r_137_0195_reload),
    .din2(arg1_r_238_0196_reload),
    .din3(32'd0),
    .din4(trunc_ln3_reg_621),
    .dout(phi_ln_fu_352_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U24(
    .din0(arg1_r_1_0_0198_reload),
    .din1(arg1_r_1_1_0199_reload),
    .din2(arg1_r_1_2_0200_reload),
    .din3(32'd0),
    .din4(trunc_ln3_reg_621),
    .dout(phi_ln40_1_fu_362_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U25(
    .din0(arg1_r_2_0_0201_reload),
    .din1(arg1_r_2_1_0202_reload),
    .din2(arg1_r_2_2_0203_reload),
    .din3(32'd0),
    .din4(trunc_ln3_reg_621),
    .dout(phi_ln40_2_fu_372_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U26(
    .din0(phi_ln_fu_352_p6),
    .din1(phi_ln40_1_fu_362_p6),
    .din2(phi_ln40_2_fu_372_p6),
    .din3(trunc_ln40_fu_348_p1),
    .dout(tmp_fu_382_p5)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U27(
    .din0(arg1_r_0_0194_reload),
    .din1(arg1_r_137_0195_reload),
    .din2(arg1_r_238_0196_reload),
    .din3(32'd0),
    .din4(trunc_ln40_2_reg_634),
    .dout(phi_ln40_3_fu_414_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U28(
    .din0(arg1_r_1_0_0198_reload),
    .din1(arg1_r_1_1_0199_reload),
    .din2(arg1_r_1_2_0200_reload),
    .din3(32'd0),
    .din4(trunc_ln40_2_reg_634),
    .dout(phi_ln40_4_fu_424_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U29(
    .din0(arg1_r_2_0_0201_reload),
    .din1(arg1_r_2_1_0202_reload),
    .din2(arg1_r_2_2_0203_reload),
    .din3(32'd0),
    .din4(trunc_ln40_2_reg_634),
    .dout(phi_ln40_5_fu_434_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U30(
    .din0(phi_ln40_5_fu_434_p6),
    .din1(phi_ln40_3_fu_414_p6),
    .din2(phi_ln40_4_fu_424_p6),
    .din3(trunc_ln40_fu_348_p1),
    .dout(tmp_2_fu_444_p5)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U31(
    .din0(tmp_3_fu_484_p1),
    .din1(tmp_3_fu_484_p2),
    .din2(tmp_3_fu_484_p3),
    .din3(trunc_ln40_fu_348_p1),
    .dout(tmp_3_fu_484_p5)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln34_fu_228_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_80 <= add_ln34_fu_253_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_80 <= 4'd3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln34_fu_228_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv_fu_84 <= add_ln34_1_fu_259_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv_fu_84 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        indvars_iv_load_reg_604 <= ap_sig_allocacmp_indvars_iv_load;
        indvars_iv_load_reg_604_pp0_iter1_reg <= indvars_iv_load_reg_604;
        sub_ln37_reg_613_pp0_iter1_reg <= sub_ln37_reg_613;
        zext_ln40_cast_reg_597[31 : 0] <= zext_ln40_cast_fu_211_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        arr_1_addr_reg_641 <= zext_ln22_fu_275_p1;
        arr_2_addr_reg_654 <= zext_ln22_fu_275_p1;
        arr_addr_reg_628 <= zext_ln22_fu_275_p1;
        indvars_iv_load_reg_604_pp0_iter2_reg <= indvars_iv_load_reg_604_pp0_iter1_reg;
        indvars_iv_load_reg_604_pp0_iter3_reg <= indvars_iv_load_reg_604_pp0_iter2_reg;
        indvars_iv_load_reg_604_pp0_iter4_reg <= indvars_iv_load_reg_604_pp0_iter3_reg;
        sub_ln37_reg_613_pp0_iter2_reg <= sub_ln37_reg_613_pp0_iter1_reg;
        sub_ln37_reg_613_pp0_iter3_reg <= sub_ln37_reg_613_pp0_iter2_reg;
        sub_ln37_reg_613_pp0_iter4_reg <= sub_ln37_reg_613_pp0_iter3_reg;
        tmp_1_reg_647 <= mul_ln40_4_fu_334_p2[32'd5];
        trunc_ln3_reg_621 <= {{mul_ln37_fu_284_p2[6:5]}};
        trunc_ln40_2_reg_634 <= {{mul_ln40_3_fu_309_p2[6:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_228_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln37_reg_613 <= sub_ln37_fu_241_p2;
    end
end

always @ (*) begin
    if (((icmp_ln34_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1_load = 4'd3;
    end else begin
        ap_sig_allocacmp_i_1_load = i_1_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv_load = 2'd1;
    end else begin
        ap_sig_allocacmp_indvars_iv_load = indvars_iv_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_1_ce0 = 1'b1;
    end else begin
        arr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        arr_1_ce1 = 1'b1;
    end else begin
        arr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_1_we0 = 1'b1;
    end else begin
        arr_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_2_ce0 = 1'b1;
    end else begin
        arr_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        arr_2_ce1 = 1'b1;
    end else begin
        arr_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_2_we0 = 1'b1;
    end else begin
        arr_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_ce0 = 1'b1;
    end else begin
        arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        arr_ce1 = 1'b1;
    end else begin
        arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_we0 = 1'b1;
    end else begin
        arr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_1_fu_259_p2 = (ap_sig_allocacmp_indvars_iv_load + 2'd1);

assign add_ln34_fu_253_p2 = (ap_sig_allocacmp_i_1_load + 4'd3);

assign add_ln40_1_fu_300_p2 = ($signed(sub_ln37_reg_613_pp0_iter4_reg) + $signed(3'd7));

assign add_ln40_2_fu_325_p2 = ($signed(sub_ln37_reg_613_pp0_iter4_reg) + $signed(3'd6));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_1_address0 = arr_1_addr_reg_641;

assign arr_1_address1 = zext_ln22_fu_275_p1;

assign arr_1_d0 = (arr_1_q1 + shl_ln40_1_fu_461_p3);

assign arr_2_address0 = arr_2_addr_reg_654;

assign arr_2_address1 = zext_ln22_fu_275_p1;

assign arr_2_d0 = (arr_2_q1 + shl_ln40_2_fu_501_p3);

assign arr_address0 = arr_addr_reg_628;

assign arr_address1 = zext_ln22_fu_275_p1;

assign arr_d0 = (arr_q1 + shl_ln5_fu_399_p3);

assign grp_fu_247_p0 = (3'd2 - trunc_ln34_fu_237_p1);

assign icmp_ln34_fu_228_p2 = ((ap_sig_allocacmp_indvars_iv_load == 2'd3) ? 1'b1 : 1'b0);

assign mul_ln37_fu_284_p0 = mul_ln37_fu_284_p00;

assign mul_ln37_fu_284_p00 = sub_ln37_reg_613_pp0_iter4_reg;

assign mul_ln37_fu_284_p1 = 7'd11;

assign mul_ln40_1_fu_199_p0 = zext_ln40_cast_reg_597;

assign mul_ln40_1_fu_199_p1 = mul_ln40_1_fu_199_p10;

assign mul_ln40_1_fu_199_p10 = tmp_fu_382_p5;

assign mul_ln40_2_fu_207_p0 = zext_ln40_cast_reg_597;

assign mul_ln40_2_fu_207_p1 = mul_ln40_2_fu_207_p10;

assign mul_ln40_2_fu_207_p10 = tmp_3_fu_484_p5;

assign mul_ln40_3_fu_309_p0 = mul_ln40_3_fu_309_p00;

assign mul_ln40_3_fu_309_p00 = add_ln40_1_fu_300_p2;

assign mul_ln40_3_fu_309_p1 = 7'd11;

assign mul_ln40_4_fu_334_p0 = mul_ln40_4_fu_334_p00;

assign mul_ln40_4_fu_334_p00 = add_ln40_2_fu_325_p2;

assign mul_ln40_4_fu_334_p1 = 7'd11;

assign mul_ln40_fu_203_p0 = zext_ln40_cast_reg_597;

assign mul_ln40_fu_203_p1 = mul_ln40_fu_203_p10;

assign mul_ln40_fu_203_p10 = tmp_2_fu_444_p5;

assign shl_ln40_1_fu_461_p3 = {{mul_ln40_fu_203_p2}, {1'd0}};

assign shl_ln40_2_fu_501_p3 = {{mul_ln40_2_fu_207_p2}, {1'd0}};

assign shl_ln5_fu_399_p3 = {{mul_ln40_1_fu_199_p2}, {1'd0}};

assign sub_ln37_fu_241_p2 = (3'd2 - trunc_ln34_fu_237_p1);

assign tmp_3_fu_484_p1 = ((tmp_1_reg_647[0:0] == 1'b1) ? arg1_r_1_1_0199_reload : arg1_r_1_0_0198_reload);

assign tmp_3_fu_484_p2 = ((tmp_1_reg_647[0:0] == 1'b1) ? arg1_r_2_1_0202_reload : arg1_r_2_0_0201_reload);

assign tmp_3_fu_484_p3 = ((tmp_1_reg_647[0:0] == 1'b1) ? arg1_r_137_0195_reload : arg1_r_0_0194_reload);

assign trunc_ln34_fu_237_p1 = ap_sig_allocacmp_i_1_load[2:0];

assign trunc_ln40_fu_348_p1 = grp_fu_247_p2[1:0];

assign zext_ln22_fu_275_p1 = indvars_iv_load_reg_604_pp0_iter4_reg;

assign zext_ln40_cast_fu_211_p1 = zext_ln40;

always @ (posedge ap_clk) begin
    zext_ln40_cast_reg_597[62:32] <= 31'b0000000000000000000000000000000;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3
