-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arr_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_3_ce0 : OUT STD_LOGIC;
    arr_3_we0 : OUT STD_LOGIC;
    arr_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_3_ce1 : OUT STD_LOGIC;
    arr_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_2_ce0 : OUT STD_LOGIC;
    arr_2_we0 : OUT STD_LOGIC;
    arr_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_2_ce1 : OUT STD_LOGIC;
    arr_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_1_ce0 : OUT STD_LOGIC;
    arr_1_we0 : OUT STD_LOGIC;
    arr_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_1_ce1 : OUT STD_LOGIC;
    arr_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_ce0 : OUT STD_LOGIC;
    arr_we0 : OUT STD_LOGIC;
    arr_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_ce1 : OUT STD_LOGIC;
    arr_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arg1_r_1_04_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_07_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_0_01_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_0_1_013_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_1_014_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_1_015_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_0_2_017_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_1_2_018_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_2_2_019_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln40 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln34_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln40_cast_fu_264_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln40_cast_reg_733 : STD_LOGIC_VECTOR (62 downto 0);
    signal i_reg_740 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_740_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_740_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_740_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln37_fu_286_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln37_reg_751 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln37_reg_751_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln37_reg_751_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln37_reg_751_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln37_reg_751_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_reg_759 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_759_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_759_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_759_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_759_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_1_fu_323_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln34_1_reg_764 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln34_1_reg_764_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_771 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln40_1_reg_776 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_781_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_reg_785 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_2_addr_reg_793 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_3_addr_reg_799 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_2_reg_805 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_addr_reg_812 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_3_addr_1_reg_818 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal arr_addr_1_reg_831 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_1_addr_reg_837 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln22_fu_354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln40_4_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_7_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_fu_104 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_fu_312_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln40_fu_521_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_5_fu_637_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_6_fu_658_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln40_1_fu_252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_1_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_256_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_2_fu_260_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_2_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln34_fu_282_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_292_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln40_2_fu_298_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln40_4_fu_333_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln37_fu_362_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln37_fu_362_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln37_fu_362_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln40_1_fu_378_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln40_3_fu_387_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln40_3_fu_387_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln40_3_fu_387_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln40_3_fu_408_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln40_4_fu_417_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln40_4_fu_417_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln40_4_fu_417_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_292_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_1_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_2_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal arg1_r_3_fu_445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln40_1_fu_463_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln40_2_fu_473_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln40_fu_436_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_483_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_1_fu_252_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_9_fu_508_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1_fu_500_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_ln40_5_fu_549_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln40_3_fu_529_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln40_4_fu_539_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_559_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_256_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_3_fu_599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_599_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_599_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_599_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_2_fu_260_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_4_fu_624_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln40_1_fu_576_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_645_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln40_2_fu_616_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln37_fu_362_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln40_1_fu_252_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln40_2_fu_260_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln40_3_fu_387_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln40_4_fu_417_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln40_fu_256_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_square_mul_32ns_32ns_63_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component fiat_25519_carry_square_urem_3ns_3ns_2_7_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component fiat_25519_carry_square_mul_3ns_5ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component fiat_25519_carry_square_mux_4_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_square_mux_3_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_square_mux_4_2_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_square_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_63_1_1_U75 : component fiat_25519_carry_square_mul_32ns_32ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        din0 => mul_ln40_1_fu_252_p0,
        din1 => mul_ln40_1_fu_252_p1,
        dout => mul_ln40_1_fu_252_p2);

    mul_32ns_32ns_63_1_1_U76 : component fiat_25519_carry_square_mul_32ns_32ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        din0 => mul_ln40_fu_256_p0,
        din1 => mul_ln40_fu_256_p1,
        dout => mul_ln40_fu_256_p2);

    mul_32ns_32ns_63_1_1_U77 : component fiat_25519_carry_square_mul_32ns_32ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        din0 => mul_ln40_2_fu_260_p0,
        din1 => mul_ln40_2_fu_260_p1,
        dout => mul_ln40_2_fu_260_p2);

    urem_3ns_3ns_2_7_1_U78 : component fiat_25519_carry_square_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_292_p0,
        din1 => ap_const_lv3_3,
        ce => ap_const_logic_1,
        dout => grp_fu_292_p2);

    mul_3ns_5ns_7_1_1_U79 : component fiat_25519_carry_square_mul_3ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => mul_ln37_fu_362_p0,
        din1 => mul_ln37_fu_362_p1,
        dout => mul_ln37_fu_362_p2);

    mul_3ns_5ns_7_1_1_U80 : component fiat_25519_carry_square_mul_3ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => mul_ln40_3_fu_387_p0,
        din1 => mul_ln40_3_fu_387_p1,
        dout => mul_ln40_3_fu_387_p2);

    mul_3ns_5ns_7_1_1_U81 : component fiat_25519_carry_square_mul_3ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => mul_ln40_4_fu_417_p0,
        din1 => mul_ln40_4_fu_417_p1,
        dout => mul_ln40_4_fu_417_p2);

    mux_4_2_32_1_1_U82 : component fiat_25519_carry_square_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_0_1_013_reload,
        din1 => arg1_r_1_1_014_reload,
        din2 => arg1_r_2_1_015_reload,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln5_reg_785,
        dout => phi_ln40_1_fu_463_p6);

    mux_4_2_32_1_1_U83 : component fiat_25519_carry_square_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_0_2_017_reload,
        din1 => arg1_r_1_2_018_reload,
        din2 => arg1_r_2_2_019_reload,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln5_reg_785,
        dout => phi_ln40_2_fu_473_p6);

    mux_3_2_32_1_1_U84 : component fiat_25519_carry_square_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_483_p1,
        din1 => phi_ln40_1_fu_463_p6,
        din2 => phi_ln40_2_fu_473_p6,
        din3 => trunc_ln40_fu_436_p1,
        dout => tmp_8_fu_483_p5);

    mux_4_2_64_1_1_U85 : component fiat_25519_carry_square_mux_4_2_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => ap_const_lv64_0,
        din2 => arr_2_q1,
        din3 => arr_3_q1,
        din4 => trunc_ln34_1_reg_764_pp0_iter5_reg,
        dout => tmp_9_fu_508_p6);

    mux_4_2_32_1_1_U86 : component fiat_25519_carry_square_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_0_01_reload,
        din1 => arg1_r_1_04_reload,
        din2 => arg1_r_2_07_reload,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln40_2_reg_805,
        dout => phi_ln40_3_fu_529_p6);

    mux_4_2_32_1_1_U87 : component fiat_25519_carry_square_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_0_1_013_reload,
        din1 => arg1_r_1_1_014_reload,
        din2 => arg1_r_2_1_015_reload,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln40_2_reg_805,
        dout => phi_ln40_4_fu_539_p6);

    mux_4_2_32_1_1_U88 : component fiat_25519_carry_square_mux_4_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => arg1_r_0_2_017_reload,
        din1 => arg1_r_1_2_018_reload,
        din2 => arg1_r_2_2_019_reload,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln40_2_reg_805,
        dout => phi_ln40_5_fu_549_p6);

    mux_3_2_32_1_1_U89 : component fiat_25519_carry_square_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => phi_ln40_5_fu_549_p6,
        din1 => phi_ln40_3_fu_529_p6,
        din2 => phi_ln40_4_fu_539_p6,
        din3 => trunc_ln40_fu_436_p1,
        dout => tmp_s_fu_559_p5);

    mux_3_2_32_1_1_U90 : component fiat_25519_carry_square_mux_3_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_3_fu_599_p1,
        din1 => tmp_3_fu_599_p2,
        din2 => tmp_3_fu_599_p3,
        din3 => trunc_ln40_fu_436_p1,
        dout => tmp_3_fu_599_p5);

    mux_4_2_64_1_1_U91 : component fiat_25519_carry_square_mux_4_2_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => ap_const_lv64_0,
        din2 => arr_3_q1,
        din3 => arr_q1,
        din4 => trunc_ln34_1_reg_764_pp0_iter5_reg,
        dout => tmp_4_fu_624_p6);

    mux_4_2_64_1_1_U92 : component fiat_25519_carry_square_mux_4_2_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => ap_const_lv64_0,
        din2 => arr_q1,
        din3 => arr_1_q1,
        din4 => trunc_ln34_1_reg_764_pp0_iter5_reg,
        dout => tmp_5_fu_645_p6);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_square_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    i_2_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln34_fu_276_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_2_fu_104 <= add_ln34_fu_312_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_2_fu_104 <= ap_const_lv4_3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_reg_740 <= ap_sig_allocacmp_i;
                i_reg_740_pp0_iter1_reg <= i_reg_740;
                sub_ln37_reg_751_pp0_iter1_reg <= sub_ln37_reg_751;
                tmp_1_reg_759_pp0_iter1_reg <= tmp_1_reg_759;
                    zext_ln40_cast_reg_733(31 downto 0) <= zext_ln40_cast_fu_264_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                arr_1_addr_reg_837 <= zext_ln40_7_fu_431_p1(2 - 1 downto 0);
                    arr_2_addr_reg_793(0) <= zext_ln22_fu_354_p1(2 - 1 downto 0)(0);
                    arr_3_addr_1_reg_818(0) <= zext_ln40_4_fu_403_p1(2 - 1 downto 0)(0);
                    arr_3_addr_reg_799(0) <= zext_ln22_fu_354_p1(2 - 1 downto 0)(0);
                arr_addr_1_reg_831 <= zext_ln40_7_fu_431_p1(2 - 1 downto 0);
                    arr_addr_reg_812(0) <= zext_ln40_4_fu_403_p1(2 - 1 downto 0)(0);
                i_reg_740_pp0_iter2_reg <= i_reg_740_pp0_iter1_reg;
                i_reg_740_pp0_iter3_reg <= i_reg_740_pp0_iter2_reg;
                icmp_ln40_reg_781 <= icmp_ln40_fu_348_p2;
                icmp_ln40_reg_781_pp0_iter5_reg <= icmp_ln40_reg_781;
                lshr_ln40_1_reg_776 <= add_ln40_4_fu_333_p2(3 downto 2);
                sub_ln37_reg_751_pp0_iter2_reg <= sub_ln37_reg_751_pp0_iter1_reg;
                sub_ln37_reg_751_pp0_iter3_reg <= sub_ln37_reg_751_pp0_iter2_reg;
                sub_ln37_reg_751_pp0_iter4_reg <= sub_ln37_reg_751_pp0_iter3_reg;
                tmp_1_reg_759_pp0_iter2_reg <= tmp_1_reg_759_pp0_iter1_reg;
                tmp_1_reg_759_pp0_iter3_reg <= tmp_1_reg_759_pp0_iter2_reg;
                tmp_1_reg_759_pp0_iter4_reg <= tmp_1_reg_759_pp0_iter3_reg;
                tmp_2_reg_824 <= mul_ln40_4_fu_417_p2(5 downto 5);
                tmp_reg_771 <= i_reg_740_pp0_iter3_reg(2 downto 2);
                trunc_ln34_1_reg_764 <= trunc_ln34_1_fu_323_p1;
                trunc_ln34_1_reg_764_pp0_iter5_reg <= trunc_ln34_1_reg_764;
                trunc_ln40_2_reg_805 <= mul_ln40_3_fu_387_p2(6 downto 5);
                trunc_ln5_reg_785 <= mul_ln37_fu_362_p2(6 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_276_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sub_ln37_reg_751 <= sub_ln37_fu_286_p2;
                tmp_1_reg_759 <= add_ln40_2_fu_298_p2(2 downto 2);
            end if;
        end if;
    end process;
    zext_ln40_cast_reg_733(62 downto 32) <= "0000000000000000000000000000000";
    arr_2_addr_reg_793(1) <= '0';
    arr_3_addr_reg_799(1) <= '0';
    arr_addr_reg_812(1) <= '0';
    arr_3_addr_1_reg_818(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln34_fu_312_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_3));
    add_ln40_1_fu_378_p2 <= std_logic_vector(unsigned(sub_ln37_reg_751_pp0_iter4_reg) + unsigned(ap_const_lv3_7));
    add_ln40_2_fu_298_p2 <= std_logic_vector(unsigned(trunc_ln34_fu_282_p1) + unsigned(ap_const_lv3_1));
    add_ln40_3_fu_408_p2 <= std_logic_vector(unsigned(sub_ln37_reg_751_pp0_iter4_reg) + unsigned(ap_const_lv3_6));
    add_ln40_4_fu_333_p2 <= std_logic_vector(unsigned(i_reg_740_pp0_iter3_reg) + unsigned(ap_const_lv4_2));
    add_ln40_5_fu_637_p2 <= std_logic_vector(unsigned(tmp_4_fu_624_p6) + unsigned(shl_ln40_1_fu_576_p3));
    add_ln40_6_fu_658_p2 <= std_logic_vector(unsigned(tmp_5_fu_645_p6) + unsigned(shl_ln40_2_fu_616_p3));
    add_ln40_fu_521_p2 <= std_logic_vector(unsigned(tmp_9_fu_508_p6) + unsigned(shl_ln1_fu_500_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln34_fu_276_p2)
    begin
        if (((icmp_ln34_fu_276_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_2_fu_104, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv4_3;
        else 
            ap_sig_allocacmp_i <= i_2_fu_104;
        end if; 
    end process;

    arg1_r_3_fu_445_p3 <= 
        arg1_r_1_04_reload when (icmp_ln40_1_fu_440_p2(0) = '1') else 
        arg1_r_2_07_reload;
    arr_1_address0 <= arr_1_addr_reg_837;
    arr_1_address1 <= zext_ln40_7_fu_431_p1(2 - 1 downto 0);

    arr_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            arr_1_ce0 <= ap_const_logic_1;
        else 
            arr_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            arr_1_ce1 <= ap_const_logic_1;
        else 
            arr_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    arr_1_d0 <= std_logic_vector(unsigned(tmp_5_fu_645_p6) + unsigned(shl_ln40_2_fu_616_p3));

    arr_1_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0))) then 
            arr_1_we0 <= ap_const_logic_1;
        else 
            arr_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_2_address0 <= arr_2_addr_reg_793;
    arr_2_address1 <= zext_ln22_fu_354_p1(2 - 1 downto 0);

    arr_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            arr_2_ce0 <= ap_const_logic_1;
        else 
            arr_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            arr_2_ce1 <= ap_const_logic_1;
        else 
            arr_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    arr_2_d0 <= std_logic_vector(unsigned(tmp_9_fu_508_p6) + unsigned(shl_ln1_fu_500_p3));

    arr_2_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1))) then 
            arr_2_we0 <= ap_const_logic_1;
        else 
            arr_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_address0_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln40_reg_781_pp0_iter5_reg, arr_3_addr_reg_799, arr_3_addr_1_reg_818, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
            if ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)) then 
                arr_3_address0 <= arr_3_addr_1_reg_818;
            elsif ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) then 
                arr_3_address0 <= arr_3_addr_reg_799;
            else 
                arr_3_address0 <= "XX";
            end if;
        else 
            arr_3_address0 <= "XX";
        end if; 
    end process;


    arr_3_address1_assign_proc : process(ap_enable_reg_pp0_iter5, trunc_ln34_1_reg_764, zext_ln22_fu_354_p1, ap_block_pp0_stage0, zext_ln40_4_fu_403_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_764 = ap_const_lv2_2)) then 
                arr_3_address1 <= zext_ln40_4_fu_403_p1(2 - 1 downto 0);
            elsif ((not((trunc_ln34_1_reg_764 = ap_const_lv2_2)) and (trunc_ln34_1_reg_764 = ap_const_lv2_3))) then 
                arr_3_address1 <= zext_ln22_fu_354_p1(2 - 1 downto 0);
            else 
                arr_3_address1 <= "XX";
            end if;
        else 
            arr_3_address1 <= "XX";
        end if; 
    end process;


    arr_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)))) then 
            arr_3_ce0 <= ap_const_logic_1;
        else 
            arr_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_764)
    begin
        if (((not((trunc_ln34_1_reg_764 = ap_const_lv2_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln34_1_reg_764 = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln34_1_reg_764 = ap_const_lv2_2)))) then 
            arr_3_ce1 <= ap_const_logic_1;
        else 
            arr_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_d0_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln40_reg_781_pp0_iter5_reg, ap_block_pp0_stage0, add_ln40_fu_521_p2, add_ln40_5_fu_637_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
            if ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)) then 
                arr_3_d0 <= add_ln40_5_fu_637_p2;
            elsif ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) then 
                arr_3_d0 <= add_ln40_fu_521_p2;
            else 
                arr_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_3_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)))) then 
            arr_3_we0 <= ap_const_logic_1;
        else 
            arr_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_address0_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln40_reg_781_pp0_iter5_reg, arr_addr_reg_812, arr_addr_1_reg_831, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
            if ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)) then 
                arr_address0 <= arr_addr_1_reg_831;
            elsif ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) then 
                arr_address0 <= arr_addr_reg_812;
            else 
                arr_address0 <= "XX";
            end if;
        else 
            arr_address0 <= "XX";
        end if; 
    end process;


    arr_address1_assign_proc : process(ap_enable_reg_pp0_iter5, trunc_ln34_1_reg_764, ap_block_pp0_stage0, zext_ln40_4_fu_403_p1, zext_ln40_7_fu_431_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_764 = ap_const_lv2_2)) then 
                arr_address1 <= zext_ln40_7_fu_431_p1(2 - 1 downto 0);
            elsif ((not((trunc_ln34_1_reg_764 = ap_const_lv2_2)) and (trunc_ln34_1_reg_764 = ap_const_lv2_3))) then 
                arr_address1 <= zext_ln40_4_fu_403_p1(2 - 1 downto 0);
            else 
                arr_address1 <= "XX";
            end if;
        else 
            arr_address1 <= "XX";
        end if; 
    end process;


    arr_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)))) then 
            arr_ce0 <= ap_const_logic_1;
        else 
            arr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_764)
    begin
        if (((not((trunc_ln34_1_reg_764 = ap_const_lv2_2)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln34_1_reg_764 = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln34_1_reg_764 = ap_const_lv2_2)))) then 
            arr_ce1 <= ap_const_logic_1;
        else 
            arr_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_d0_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln40_reg_781_pp0_iter5_reg, ap_block_pp0_stage0, add_ln40_5_fu_637_p2, add_ln40_6_fu_658_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
            if ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)) then 
                arr_d0 <= add_ln40_6_fu_658_p2;
            elsif ((icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) then 
                arr_d0 <= add_ln40_5_fu_637_p2;
            else 
                arr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln40_reg_781_pp0_iter5_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln40_reg_781_pp0_iter5_reg = ap_const_lv1_1)))) then 
            arr_we0 <= ap_const_logic_1;
        else 
            arr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_292_p0 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln34_fu_282_p1));
    icmp_ln34_fu_276_p2 <= "1" when (unsigned(ap_sig_allocacmp_i) < unsigned(ap_const_lv4_9)) else "0";
    icmp_ln40_1_fu_440_p2 <= "1" when (trunc_ln5_reg_785 = ap_const_lv2_1) else "0";
    icmp_ln40_2_fu_451_p2 <= "1" when (trunc_ln5_reg_785 = ap_const_lv2_0) else "0";
    icmp_ln40_fu_348_p2 <= "1" when (trunc_ln34_1_fu_323_p1 = ap_const_lv2_2) else "0";
    mul_ln37_fu_362_p0 <= mul_ln37_fu_362_p00(3 - 1 downto 0);
    mul_ln37_fu_362_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln37_reg_751_pp0_iter4_reg),7));
    mul_ln37_fu_362_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    mul_ln40_1_fu_252_p0 <= zext_ln40_cast_reg_733(32 - 1 downto 0);
    mul_ln40_1_fu_252_p1 <= mul_ln40_1_fu_252_p10(32 - 1 downto 0);
    mul_ln40_1_fu_252_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_483_p5),63));
    mul_ln40_2_fu_260_p0 <= zext_ln40_cast_reg_733(32 - 1 downto 0);
    mul_ln40_2_fu_260_p1 <= mul_ln40_2_fu_260_p10(32 - 1 downto 0);
    mul_ln40_2_fu_260_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_599_p5),63));
    mul_ln40_3_fu_387_p0 <= mul_ln40_3_fu_387_p00(3 - 1 downto 0);
    mul_ln40_3_fu_387_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_1_fu_378_p2),7));
    mul_ln40_3_fu_387_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    mul_ln40_4_fu_417_p0 <= mul_ln40_4_fu_417_p00(3 - 1 downto 0);
    mul_ln40_4_fu_417_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_3_fu_408_p2),7));
    mul_ln40_4_fu_417_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    mul_ln40_fu_256_p0 <= zext_ln40_cast_reg_733(32 - 1 downto 0);
    mul_ln40_fu_256_p1 <= mul_ln40_fu_256_p10(32 - 1 downto 0);
    mul_ln40_fu_256_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_559_p5),63));
    shl_ln1_fu_500_p3 <= (mul_ln40_1_fu_252_p2 & ap_const_lv1_0);
    shl_ln40_1_fu_576_p3 <= (mul_ln40_fu_256_p2 & ap_const_lv1_0);
    shl_ln40_2_fu_616_p3 <= (mul_ln40_2_fu_260_p2 & ap_const_lv1_0);
    sub_ln37_fu_286_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln34_fu_282_p1));
    tmp_3_fu_599_p1 <= 
        arg1_r_1_1_014_reload when (tmp_2_reg_824(0) = '1') else 
        arg1_r_0_1_013_reload;
    tmp_3_fu_599_p2 <= 
        arg1_r_1_2_018_reload when (tmp_2_reg_824(0) = '1') else 
        arg1_r_0_2_017_reload;
    tmp_3_fu_599_p3 <= 
        arg1_r_1_04_reload when (tmp_2_reg_824(0) = '1') else 
        arg1_r_0_01_reload;
    tmp_8_fu_483_p1 <= 
        arg1_r_0_01_reload when (icmp_ln40_2_fu_451_p2(0) = '1') else 
        arg1_r_3_fu_445_p3;
    trunc_ln34_1_fu_323_p1 <= i_reg_740_pp0_iter3_reg(2 - 1 downto 0);
    trunc_ln34_fu_282_p1 <= ap_sig_allocacmp_i(3 - 1 downto 0);
    trunc_ln40_fu_436_p1 <= grp_fu_292_p2(2 - 1 downto 0);
    zext_ln22_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_771),64));
    zext_ln40_4_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_759_pp0_iter4_reg),64));
    zext_ln40_7_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln40_1_reg_776),64));
    zext_ln40_cast_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln40),63));
end behav;
