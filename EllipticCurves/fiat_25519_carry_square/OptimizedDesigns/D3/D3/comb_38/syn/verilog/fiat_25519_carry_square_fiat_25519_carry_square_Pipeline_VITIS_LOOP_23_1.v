// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_23_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arg1_r_1_04_reload,
        arg1_r_2_07_reload,
        arg1_r_0_01_reload,
        arg1_r_0_1_013_reload,
        arg1_r_1_1_014_reload,
        arg1_r_2_1_015_reload,
        arg1_r_0_2_017_reload,
        arg1_r_1_2_018_reload,
        arg1_r_2_2_019_reload,
        conv17,
        arr_1_address0,
        arr_1_ce0,
        arr_1_we0,
        arr_1_d0,
        arr_1_address1,
        arr_1_ce1,
        arr_1_q1,
        arr_2_address0,
        arr_2_ce0,
        arr_2_we0,
        arr_2_d0,
        arr_2_address1,
        arr_2_ce1,
        arr_2_q1,
        arr_3_address0,
        arr_3_ce0,
        arr_3_we0,
        arr_3_d0,
        arr_3_address1,
        arr_3_ce1,
        arr_3_q1,
        arg1_r_3_010_reload,
        arg1_r_3_1_016_reload,
        arg1_r_3_2_020_reload,
        arr_address0,
        arr_ce0,
        arr_we0,
        arr_d0,
        arr_address1,
        arr_ce1,
        arr_q1,
        zext_ln30_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] arg1_r_1_04_reload;
input  [31:0] arg1_r_2_07_reload;
input  [31:0] arg1_r_0_01_reload;
input  [31:0] arg1_r_0_1_013_reload;
input  [31:0] arg1_r_1_1_014_reload;
input  [31:0] arg1_r_2_1_015_reload;
input  [31:0] arg1_r_0_2_017_reload;
input  [31:0] arg1_r_1_2_018_reload;
input  [31:0] arg1_r_2_2_019_reload;
input  [31:0] conv17;
output  [1:0] arr_1_address0;
output   arr_1_ce0;
output   arr_1_we0;
output  [63:0] arr_1_d0;
output  [1:0] arr_1_address1;
output   arr_1_ce1;
input  [63:0] arr_1_q1;
output  [1:0] arr_2_address0;
output   arr_2_ce0;
output   arr_2_we0;
output  [63:0] arr_2_d0;
output  [1:0] arr_2_address1;
output   arr_2_ce1;
input  [63:0] arr_2_q1;
output  [1:0] arr_3_address0;
output   arr_3_ce0;
output   arr_3_we0;
output  [63:0] arr_3_d0;
output  [1:0] arr_3_address1;
output   arr_3_ce1;
input  [63:0] arr_3_q1;
input  [31:0] arg1_r_3_010_reload;
input  [31:0] arg1_r_3_1_016_reload;
input  [31:0] arg1_r_3_2_020_reload;
output  [1:0] arr_address0;
output   arr_ce0;
output   arr_we0;
output  [63:0] arr_d0;
output  [1:0] arr_address1;
output   arr_ce1;
input  [63:0] arr_q1;
input  [31:0] zext_ln30_2;

reg ap_idle;
reg arr_1_ce0;
reg arr_1_we0;
reg arr_1_ce1;
reg arr_2_ce0;
reg arr_2_we0;
reg arr_2_ce1;
reg arr_3_ce0;
reg arr_3_we0;
reg arr_3_ce1;
reg arr_ce0;
reg arr_we0;
reg arr_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln23_fu_312_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [62:0] zext_ln30_2_cast_fu_296_p1;
reg   [62:0] zext_ln30_2_cast_reg_838;
wire   [63:0] conv17_cast_fu_300_p1;
reg   [63:0] conv17_cast_reg_844;
reg   [3:0] i_reg_850;
reg   [3:0] i_reg_850_pp0_iter1_reg;
reg   [3:0] i_reg_850_pp0_iter2_reg;
reg   [3:0] i_reg_850_pp0_iter3_reg;
reg   [3:0] i_reg_850_pp0_iter4_reg;
reg   [3:0] i_reg_850_pp0_iter5_reg;
wire   [3:0] empty_fu_318_p2;
reg   [3:0] empty_reg_861;
reg   [3:0] empty_reg_861_pp0_iter1_reg;
reg   [3:0] empty_reg_861_pp0_iter2_reg;
reg   [3:0] empty_reg_861_pp0_iter3_reg;
reg   [3:0] empty_reg_861_pp0_iter4_reg;
reg   [3:0] empty_reg_861_pp0_iter5_reg;
reg   [1:0] trunc_ln30_2_reg_869;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter1_reg;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter2_reg;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter3_reg;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter4_reg;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter5_reg;
reg   [1:0] trunc_ln30_2_reg_869_pp0_iter6_reg;
wire   [0:0] trunc_ln23_fu_371_p1;
reg   [0:0] trunc_ln23_reg_876;
reg   [1:0] trunc_ln3_reg_884;
reg   [1:0] arr_1_addr_reg_891;
reg   [1:0] arr_2_addr_reg_897;
reg   [1:0] trunc_ln30_3_reg_903;
reg   [1:0] arr_3_addr_reg_910;
reg   [1:0] trunc_ln30_4_reg_916;
reg   [1:0] arr_addr_reg_923;
wire   [63:0] zext_ln22_fu_381_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln30_7_fu_446_p1;
reg   [3:0] i_1_fu_114;
wire   [3:0] add_ln23_fu_360_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i;
wire   [31:0] mul_ln30_2_fu_270_p0;
wire   [31:0] mul_ln30_2_fu_270_p1;
wire   [31:0] mul_ln30_3_fu_274_p0;
wire   [31:0] mul_ln30_3_fu_274_p1;
wire   [31:0] mul_ln30_fu_278_p0;
wire   [31:0] mul_ln30_fu_278_p1;
wire   [31:0] mul_ln30_1_fu_282_p0;
wire   [31:0] mul_ln30_1_fu_282_p1;
wire   [63:0] mul_ln30_5_fu_286_p0;
wire   [65:0] mul_ln30_5_fu_286_p1;
wire   [63:0] mul_ln30_6_fu_291_p0;
wire   [65:0] mul_ln30_6_fu_291_p1;
wire   [2:0] grp_fu_328_p1;
wire   [2:0] trunc_ln26_fu_324_p1;
wire   [2:0] add_ln30_1_fu_334_p2;
wire   [2:0] mul_ln30_4_fu_344_p0;
wire   [4:0] mul_ln30_4_fu_344_p1;
wire   [6:0] mul_ln30_4_fu_344_p2;
wire   [0:0] tmp_8_fu_374_p3;
wire   [3:0] mul_ln26_fu_391_p0;
wire   [5:0] mul_ln26_fu_391_p1;
wire   [8:0] mul_ln26_fu_391_p2;
wire   [3:0] add_ln30_2_fu_407_p2;
wire  signed [63:0] sext_ln30_fu_412_p1;
wire   [67:0] mul_ln30_5_fu_286_p2;
wire   [3:0] add_ln29_fu_431_p2;
wire   [1:0] lshr_ln22_1_fu_436_p4;
wire   [3:0] add_ln30_3_fu_451_p2;
wire  signed [63:0] sext_ln30_1_fu_456_p1;
wire   [67:0] mul_ln30_6_fu_291_p2;
wire   [1:0] grp_fu_328_p2;
wire   [31:0] phi_ln_fu_479_p6;
wire   [31:0] phi_ln30_1_fu_488_p6;
wire   [31:0] phi_ln30_2_fu_497_p6;
wire   [1:0] trunc_ln30_fu_475_p1;
wire   [31:0] tmp_fu_506_p5;
wire   [63:0] tmp_1_fu_523_p4;
wire   [63:0] mul_ln30_fu_278_p2;
wire   [31:0] phi_ln30_5_fu_559_p6;
wire   [31:0] phi_ln30_3_fu_539_p6;
wire   [31:0] phi_ln30_4_fu_549_p6;
wire   [31:0] tmp_9_fu_590_p6;
wire   [31:0] tmp_10_fu_599_p6;
wire   [31:0] tmp_s_fu_581_p6;
wire   [31:0] tmp_3_fu_608_p5;
wire   [31:0] tmp_11_fu_625_p6;
wire   [31:0] tmp_12_fu_634_p6;
wire   [31:0] tmp_13_fu_643_p6;
wire   [31:0] tmp_2_fu_569_p5;
wire   [62:0] mul_ln30_2_fu_270_p2;
wire   [63:0] tmp_5_fu_664_p4;
wire   [63:0] shl_ln_fu_678_p3;
wire   [63:0] tmp_6_fu_693_p4;
wire   [63:0] mul_ln30_1_fu_282_p2;
wire   [31:0] tmp_4_fu_652_p5;
wire   [62:0] mul_ln30_3_fu_274_p2;
wire   [63:0] tmp_7_fu_709_p4;
wire   [63:0] shl_ln30_1_fu_723_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [8:0] mul_ln26_fu_391_p00;
wire   [63:0] mul_ln30_1_fu_282_p00;
wire   [62:0] mul_ln30_2_fu_270_p10;
wire   [62:0] mul_ln30_3_fu_274_p10;
wire   [6:0] mul_ln30_4_fu_344_p00;
wire   [67:0] mul_ln30_5_fu_286_p00;
wire   [67:0] mul_ln30_6_fu_291_p00;
wire   [63:0] mul_ln30_fu_278_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U19(
    .din0(mul_ln30_2_fu_270_p0),
    .din1(mul_ln30_2_fu_270_p1),
    .dout(mul_ln30_2_fu_270_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U20(
    .din0(mul_ln30_3_fu_274_p0),
    .din1(mul_ln30_3_fu_274_p1),
    .dout(mul_ln30_3_fu_274_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U21(
    .din0(mul_ln30_fu_278_p0),
    .din1(mul_ln30_fu_278_p1),
    .dout(mul_ln30_fu_278_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U22(
    .din0(mul_ln30_1_fu_282_p0),
    .din1(mul_ln30_1_fu_282_p1),
    .dout(mul_ln30_1_fu_282_p2)
);

fiat_25519_carry_square_mul_64ns_66ns_68_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 68 ))
mul_64ns_66ns_68_1_1_U23(
    .din0(mul_ln30_5_fu_286_p0),
    .din1(mul_ln30_5_fu_286_p1),
    .dout(mul_ln30_5_fu_286_p2)
);

fiat_25519_carry_square_mul_64ns_66ns_68_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 68 ))
mul_64ns_66ns_68_1_1_U24(
    .din0(mul_ln30_6_fu_291_p0),
    .din1(mul_ln30_6_fu_291_p1),
    .dout(mul_ln30_6_fu_291_p2)
);

fiat_25519_carry_square_urem_4ns_3ns_2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_4ns_3ns_2_8_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_fu_318_p2),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

fiat_25519_carry_square_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U26(
    .din0(mul_ln30_4_fu_344_p0),
    .din1(mul_ln30_4_fu_344_p1),
    .dout(mul_ln30_4_fu_344_p2)
);

fiat_25519_carry_square_mul_4ns_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_4ns_6ns_9_1_1_U27(
    .din0(mul_ln26_fu_391_p0),
    .din1(mul_ln26_fu_391_p1),
    .dout(mul_ln26_fu_391_p2)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U28(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_1_04_reload),
    .din2(arg1_r_2_07_reload),
    .din3(arg1_r_2_07_reload),
    .din4(trunc_ln3_reg_884),
    .dout(phi_ln_fu_479_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U29(
    .din0(arg1_r_0_1_013_reload),
    .din1(arg1_r_1_1_014_reload),
    .din2(arg1_r_2_1_015_reload),
    .din3(arg1_r_2_1_015_reload),
    .din4(trunc_ln3_reg_884),
    .dout(phi_ln30_1_fu_488_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U30(
    .din0(arg1_r_0_2_017_reload),
    .din1(arg1_r_1_2_018_reload),
    .din2(arg1_r_2_2_019_reload),
    .din3(arg1_r_2_2_019_reload),
    .din4(trunc_ln3_reg_884),
    .dout(phi_ln30_2_fu_497_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U31(
    .din0(phi_ln_fu_479_p6),
    .din1(phi_ln30_1_fu_488_p6),
    .din2(phi_ln30_2_fu_497_p6),
    .din3(trunc_ln30_fu_475_p1),
    .dout(tmp_fu_506_p5)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U32(
    .din0(64'd0),
    .din1(arr_1_q1),
    .din2(trunc_ln23_reg_876),
    .dout(tmp_1_fu_523_p4)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U33(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_1_04_reload),
    .din2(arg1_r_2_07_reload),
    .din3(32'd0),
    .din4(trunc_ln30_2_reg_869_pp0_iter6_reg),
    .dout(phi_ln30_3_fu_539_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U34(
    .din0(arg1_r_0_1_013_reload),
    .din1(arg1_r_1_1_014_reload),
    .din2(arg1_r_2_1_015_reload),
    .din3(32'd0),
    .din4(trunc_ln30_2_reg_869_pp0_iter6_reg),
    .dout(phi_ln30_4_fu_549_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U35(
    .din0(arg1_r_0_2_017_reload),
    .din1(arg1_r_1_2_018_reload),
    .din2(arg1_r_2_2_019_reload),
    .din3(32'd0),
    .din4(trunc_ln30_2_reg_869_pp0_iter6_reg),
    .dout(phi_ln30_5_fu_559_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U36(
    .din0(phi_ln30_5_fu_559_p6),
    .din1(phi_ln30_3_fu_539_p6),
    .din2(phi_ln30_4_fu_549_p6),
    .din3(trunc_ln30_fu_475_p1),
    .dout(tmp_2_fu_569_p5)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U37(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_1_04_reload),
    .din2(arg1_r_2_07_reload),
    .din3(arg1_r_3_010_reload),
    .din4(trunc_ln30_3_reg_903),
    .dout(tmp_s_fu_581_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U38(
    .din0(arg1_r_0_1_013_reload),
    .din1(arg1_r_1_1_014_reload),
    .din2(arg1_r_2_1_015_reload),
    .din3(arg1_r_3_1_016_reload),
    .din4(trunc_ln30_3_reg_903),
    .dout(tmp_9_fu_590_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U39(
    .din0(arg1_r_0_2_017_reload),
    .din1(arg1_r_1_2_018_reload),
    .din2(arg1_r_2_2_019_reload),
    .din3(arg1_r_3_2_020_reload),
    .din4(trunc_ln30_3_reg_903),
    .dout(tmp_10_fu_599_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U40(
    .din0(tmp_9_fu_590_p6),
    .din1(tmp_10_fu_599_p6),
    .din2(tmp_s_fu_581_p6),
    .din3(trunc_ln30_fu_475_p1),
    .dout(tmp_3_fu_608_p5)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U41(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_1_04_reload),
    .din2(arg1_r_2_07_reload),
    .din3(arg1_r_3_010_reload),
    .din4(trunc_ln30_4_reg_916),
    .dout(tmp_11_fu_625_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U42(
    .din0(arg1_r_0_1_013_reload),
    .din1(arg1_r_1_1_014_reload),
    .din2(arg1_r_2_1_015_reload),
    .din3(arg1_r_3_1_016_reload),
    .din4(trunc_ln30_4_reg_916),
    .dout(tmp_12_fu_634_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U43(
    .din0(arg1_r_0_2_017_reload),
    .din1(arg1_r_1_2_018_reload),
    .din2(arg1_r_2_2_019_reload),
    .din3(arg1_r_3_2_020_reload),
    .din4(trunc_ln30_4_reg_916),
    .dout(tmp_13_fu_643_p6)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U44(
    .din0(tmp_11_fu_625_p6),
    .din1(tmp_12_fu_634_p6),
    .din2(tmp_13_fu_643_p6),
    .din3(trunc_ln30_fu_475_p1),
    .dout(tmp_4_fu_652_p5)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U45(
    .din0(64'd0),
    .din1(arr_2_q1),
    .din2(trunc_ln23_reg_876),
    .dout(tmp_5_fu_664_p4)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U46(
    .din0(64'd0),
    .din1(arr_3_q1),
    .din2(trunc_ln23_reg_876),
    .dout(tmp_6_fu_693_p4)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U47(
    .din0(64'd0),
    .din1(arr_q1),
    .din2(trunc_ln23_reg_876),
    .dout(tmp_7_fu_709_p4)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln23_fu_312_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_114 <= add_ln23_fu_360_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_114 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv17_cast_reg_844[31 : 0] <= conv17_cast_fu_300_p1[31 : 0];
        empty_reg_861_pp0_iter1_reg <= empty_reg_861;
        i_reg_850 <= ap_sig_allocacmp_i;
        i_reg_850_pp0_iter1_reg <= i_reg_850;
        trunc_ln30_2_reg_869_pp0_iter1_reg <= trunc_ln30_2_reg_869;
        zext_ln30_2_cast_reg_838[31 : 0] <= zext_ln30_2_cast_fu_296_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        arr_1_addr_reg_891[0] <= zext_ln22_fu_381_p1[0];
        arr_2_addr_reg_897[0] <= zext_ln22_fu_381_p1[0];
        arr_3_addr_reg_910[0] <= zext_ln22_fu_381_p1[0];
        arr_addr_reg_923 <= zext_ln30_7_fu_446_p1;
        empty_reg_861_pp0_iter2_reg <= empty_reg_861_pp0_iter1_reg;
        empty_reg_861_pp0_iter3_reg <= empty_reg_861_pp0_iter2_reg;
        empty_reg_861_pp0_iter4_reg <= empty_reg_861_pp0_iter3_reg;
        empty_reg_861_pp0_iter5_reg <= empty_reg_861_pp0_iter4_reg;
        i_reg_850_pp0_iter2_reg <= i_reg_850_pp0_iter1_reg;
        i_reg_850_pp0_iter3_reg <= i_reg_850_pp0_iter2_reg;
        i_reg_850_pp0_iter4_reg <= i_reg_850_pp0_iter3_reg;
        i_reg_850_pp0_iter5_reg <= i_reg_850_pp0_iter4_reg;
        trunc_ln23_reg_876 <= trunc_ln23_fu_371_p1;
        trunc_ln30_2_reg_869_pp0_iter2_reg <= trunc_ln30_2_reg_869_pp0_iter1_reg;
        trunc_ln30_2_reg_869_pp0_iter3_reg <= trunc_ln30_2_reg_869_pp0_iter2_reg;
        trunc_ln30_2_reg_869_pp0_iter4_reg <= trunc_ln30_2_reg_869_pp0_iter3_reg;
        trunc_ln30_2_reg_869_pp0_iter5_reg <= trunc_ln30_2_reg_869_pp0_iter4_reg;
        trunc_ln30_2_reg_869_pp0_iter6_reg <= trunc_ln30_2_reg_869_pp0_iter5_reg;
        trunc_ln30_3_reg_903 <= {{mul_ln30_5_fu_286_p2[67:66]}};
        trunc_ln30_4_reg_916 <= {{mul_ln30_6_fu_291_p2[67:66]}};
        trunc_ln3_reg_884 <= {{mul_ln26_fu_391_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_312_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_861 <= empty_fu_318_p2;
        trunc_ln30_2_reg_869 <= {{mul_ln30_4_fu_344_p2[6:5]}};
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_312_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd1;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_1_ce0 = 1'b1;
    end else begin
        arr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_1_ce1 = 1'b1;
    end else begin
        arr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_1_we0 = 1'b1;
    end else begin
        arr_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_2_ce0 = 1'b1;
    end else begin
        arr_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_2_ce1 = 1'b1;
    end else begin
        arr_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_2_we0 = 1'b1;
    end else begin
        arr_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_3_ce0 = 1'b1;
    end else begin
        arr_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_3_ce1 = 1'b1;
    end else begin
        arr_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_3_we0 = 1'b1;
    end else begin
        arr_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_ce0 = 1'b1;
    end else begin
        arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        arr_ce1 = 1'b1;
    end else begin
        arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        arr_we0 = 1'b1;
    end else begin
        arr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_360_p2 = (ap_sig_allocacmp_i + 4'd4);

assign add_ln29_fu_431_p2 = (i_reg_850_pp0_iter5_reg + 4'd3);

assign add_ln30_1_fu_334_p2 = ($signed(trunc_ln26_fu_324_p1) + $signed(3'd7));

assign add_ln30_2_fu_407_p2 = ($signed(empty_reg_861_pp0_iter5_reg) + $signed(4'd14));

assign add_ln30_3_fu_451_p2 = ($signed(empty_reg_861_pp0_iter5_reg) + $signed(4'd13));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_1_address0 = arr_1_addr_reg_891;

assign arr_1_address1 = zext_ln22_fu_381_p1;

assign arr_1_d0 = (tmp_1_fu_523_p4 + mul_ln30_fu_278_p2);

assign arr_2_address0 = arr_2_addr_reg_897;

assign arr_2_address1 = zext_ln22_fu_381_p1;

assign arr_2_d0 = (tmp_5_fu_664_p4 + shl_ln_fu_678_p3);

assign arr_3_address0 = arr_3_addr_reg_910;

assign arr_3_address1 = zext_ln22_fu_381_p1;

assign arr_3_d0 = (tmp_6_fu_693_p4 + mul_ln30_1_fu_282_p2);

assign arr_address0 = arr_addr_reg_923;

assign arr_address1 = zext_ln30_7_fu_446_p1;

assign arr_d0 = (tmp_7_fu_709_p4 + shl_ln30_1_fu_723_p3);

assign conv17_cast_fu_300_p1 = conv17;

assign empty_fu_318_p2 = ($signed(4'd9) - $signed(ap_sig_allocacmp_i));

assign grp_fu_328_p1 = 4'd3;

assign icmp_ln23_fu_312_p2 = ((ap_sig_allocacmp_i < 4'd9) ? 1'b1 : 1'b0);

assign lshr_ln22_1_fu_436_p4 = {{add_ln29_fu_431_p2[3:2]}};

assign mul_ln26_fu_391_p0 = mul_ln26_fu_391_p00;

assign mul_ln26_fu_391_p00 = empty_reg_861_pp0_iter5_reg;

assign mul_ln26_fu_391_p1 = 9'd22;

assign mul_ln30_1_fu_282_p0 = mul_ln30_1_fu_282_p00;

assign mul_ln30_1_fu_282_p00 = tmp_3_fu_608_p5;

assign mul_ln30_1_fu_282_p1 = conv17_cast_reg_844;

assign mul_ln30_2_fu_270_p0 = zext_ln30_2_cast_reg_838;

assign mul_ln30_2_fu_270_p1 = mul_ln30_2_fu_270_p10;

assign mul_ln30_2_fu_270_p10 = tmp_2_fu_569_p5;

assign mul_ln30_3_fu_274_p0 = zext_ln30_2_cast_reg_838;

assign mul_ln30_3_fu_274_p1 = mul_ln30_3_fu_274_p10;

assign mul_ln30_3_fu_274_p10 = tmp_4_fu_652_p5;

assign mul_ln30_4_fu_344_p0 = mul_ln30_4_fu_344_p00;

assign mul_ln30_4_fu_344_p00 = add_ln30_1_fu_334_p2;

assign mul_ln30_4_fu_344_p1 = 7'd11;

assign mul_ln30_5_fu_286_p0 = mul_ln30_5_fu_286_p00;

assign mul_ln30_5_fu_286_p00 = $unsigned(sext_ln30_fu_412_p1);

assign mul_ln30_5_fu_286_p1 = 68'd24595658764946068822;

assign mul_ln30_6_fu_291_p0 = mul_ln30_6_fu_291_p00;

assign mul_ln30_6_fu_291_p00 = $unsigned(sext_ln30_1_fu_456_p1);

assign mul_ln30_6_fu_291_p1 = 68'd24595658764946068822;

assign mul_ln30_fu_278_p0 = mul_ln30_fu_278_p00;

assign mul_ln30_fu_278_p00 = tmp_fu_506_p5;

assign mul_ln30_fu_278_p1 = conv17_cast_reg_844;

assign sext_ln30_1_fu_456_p1 = $signed(add_ln30_3_fu_451_p2);

assign sext_ln30_fu_412_p1 = $signed(add_ln30_2_fu_407_p2);

assign shl_ln30_1_fu_723_p3 = {{mul_ln30_3_fu_274_p2}, {1'd0}};

assign shl_ln_fu_678_p3 = {{mul_ln30_2_fu_270_p2}, {1'd0}};

assign tmp_8_fu_374_p3 = i_reg_850_pp0_iter5_reg[32'd2];

assign trunc_ln23_fu_371_p1 = i_reg_850_pp0_iter5_reg[0:0];

assign trunc_ln26_fu_324_p1 = empty_fu_318_p2[2:0];

assign trunc_ln30_fu_475_p1 = grp_fu_328_p2[1:0];

assign zext_ln22_fu_381_p1 = tmp_8_fu_374_p3;

assign zext_ln30_2_cast_fu_296_p1 = zext_ln30_2;

assign zext_ln30_7_fu_446_p1 = lshr_ln22_1_fu_436_p4;

always @ (posedge ap_clk) begin
    zext_ln30_2_cast_reg_838[62:32] <= 31'b0000000000000000000000000000000;
    conv17_cast_reg_844[63:32] <= 32'b00000000000000000000000000000000;
    arr_1_addr_reg_891[1] <= 1'b0;
    arr_2_addr_reg_897[1] <= 1'b0;
    arr_3_addr_reg_910[1] <= 1'b0;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_23_1
