

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_44_5'
================================================================
* Date:           Fri May 10 12:49:12 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_38 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.197 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       13|       13|  0.130 us|  0.130 us|   13|   13|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_44_5  |       11|       11|         8|          1|          1|     5|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.02>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%phi_mul24 = alloca i32 1"   --->   Operation 11 'alloca' 'phi_mul24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add8115 = alloca i32 1"   --->   Operation 12 'alloca' 'add8115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_0_2_017_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_2_017_reload"   --->   Operation 14 'read' 'arg1_r_0_2_017_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_1_2_018_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_2_018_reload"   --->   Operation 15 'read' 'arg1_r_1_2_018_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_0_1_013_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_1_013_reload"   --->   Operation 16 'read' 'arg1_r_0_1_013_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_1_1_014_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_1_014_reload"   --->   Operation 17 'read' 'arg1_r_1_1_014_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_0_01_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_01_reload"   --->   Operation 18 'read' 'arg1_r_0_01_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_2_2_019_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_2_019_cast"   --->   Operation 19 'read' 'arg1_r_2_2_019_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_1_2_018_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_2_018_cast"   --->   Operation 20 'read' 'arg1_r_1_2_018_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_3_2_020_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_3_2_020_cast"   --->   Operation 21 'read' 'arg1_r_3_2_020_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_2_1_015_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_1_015_cast"   --->   Operation 22 'read' 'arg1_r_2_1_015_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_1_1_014_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_1_014_cast"   --->   Operation 23 'read' 'arg1_r_1_1_014_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_3_1_016_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_3_1_016_cast"   --->   Operation 24 'read' 'arg1_r_3_1_016_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_1_04_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_04_reload"   --->   Operation 25 'read' 'arg1_r_1_04_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_3_010_reload_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_3_010_reload"   --->   Operation 26 'read' 'arg1_r_3_010_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_2_07_reload_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_07_reload"   --->   Operation 27 'read' 'arg1_r_2_07_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arr_1_load_2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1_load_2"   --->   Operation 28 'read' 'arr_1_load_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%empty = trunc i32 %arg1_r_1_04_reload_read"   --->   Operation 29 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 31 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_load_2_read, i64 %add8115"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i6 0, i6 %phi_mul24"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc82"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%i_3 = load i3 %i" [d3.cpp:44]   --->   Operation 34 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i3 %i_3" [d3.cpp:44]   --->   Operation 35 'trunc' 'trunc_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.67ns)   --->   "%icmp_ln44 = icmp_eq  i3 %i_3, i3 5" [d3.cpp:44]   --->   Operation 36 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.67ns)   --->   "%add_ln44 = add i3 %i_3, i3 1" [d3.cpp:44]   --->   Operation 37 'add' 'add_ln44' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %icmp_ln44, void %for.inc82.split, void %VITIS_LOOP_54_7.exitStub" [d3.cpp:44]   --->   Operation 38 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i3 %i_3" [d3.cpp:44]   --->   Operation 39 'zext' 'zext_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.67ns)   --->   "%icmp_ln44_1 = icmp_ult  i3 %i_3, i3 3" [d3.cpp:44]   --->   Operation 40 'icmp' 'icmp_ln44_1' <Predicate = (!icmp_ln44)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.54ns)   --->   "%add_ln44_1 = add i2 %trunc_ln44, i2 1" [d3.cpp:44]   --->   Operation 41 'add' 'add_ln44_1' <Predicate = (!icmp_ln44)> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.17ns)   --->   "%select_ln44 = select i1 %icmp_ln44_1, i2 %trunc_ln44, i2 %add_ln44_1" [d3.cpp:44]   --->   Operation 42 'select' 'select_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.79ns)   --->   "%empty_33 = sub i4 9, i4 %zext_ln44" [d3.cpp:44]   --->   Operation 43 'sub' 'empty_33' <Predicate = (!icmp_ln44)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i4 %empty_33" [d3.cpp:47]   --->   Operation 44 'zext' 'zext_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.23ns)   --->   "%mul_ln47 = mul i9 %zext_ln47, i9 22" [d3.cpp:47]   --->   Operation 45 'mul' 'mul_ln47' <Predicate = (!icmp_ln44)> <Delay = 1.23> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.23> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [8/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 46 'urem' 'urem_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln50_2 = partselect i2 @_ssdm_op_PartSelect.i2.i9.i32.i32, i9 %mul_ln47, i32 6, i32 7" [d3.cpp:50]   --->   Operation 47 'partselect' 'trunc_ln50_2' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln44 = store i3 %add_ln44, i3 %i" [d3.cpp:44]   --->   Operation 48 'store' 'store_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 0.78>
ST_2 : Operation 49 [7/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 49 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.78>
ST_3 : Operation 50 [6/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 50 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.78>
ST_4 : Operation 51 [5/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 51 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 0.78>
ST_5 : Operation 52 [4/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 52 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 0.78>
ST_6 : Operation 53 [3/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 53 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 0.78>
ST_7 : Operation 54 [2/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 54 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%add8115_load_1 = load i64 %add8115"   --->   Operation 80 'load' 'add8115_load_1' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add8115_out, i64 %add8115_load_1"   --->   Operation 81 'write' 'write_ln0' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 82 'ret' 'ret_ln0' <Predicate = (icmp_ln44)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 6.19>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "%phi_mul24_load = load i6 %phi_mul24" [d3.cpp:50]   --->   Operation 55 'load' 'phi_mul24_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%add8115_load = load i64 %add8115" [d3.cpp:50]   --->   Operation 56 'load' 'add8115_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%specpipeline_ln46 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d3.cpp:46]   --->   Operation 57 'specpipeline' 'specpipeline_ln46' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "%speclooptripcount_ln44 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [d3.cpp:44]   --->   Operation 58 'speclooptripcount' 'speclooptripcount_ln44' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "%specloopname_ln44 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [d3.cpp:44]   --->   Operation 59 'specloopname' 'specloopname_ln44' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.78ns)   --->   "%add_ln44_2 = add i6 %phi_mul24_load, i6 11" [d3.cpp:44]   --->   Operation 60 'add' 'add_ln44_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 61 [1/8] (0.78ns)   --->   "%urem_ln47 = urem i4 %empty_33, i4 3" [d3.cpp:47]   --->   Operation 61 'urem' 'urem_ln47' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i2 %urem_ln47" [d3.cpp:50]   --->   Operation 62 'trunc' 'trunc_ln50' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %phi_mul24_load, i32 5" [d3.cpp:50]   --->   Operation 63 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.44ns)   --->   "%select_ln50 = select i1 %tmp, i32 %arg1_r_1_04_reload_read, i32 %arg1_r_0_01_reload_read" [d3.cpp:50]   --->   Operation 64 'select' 'select_ln50' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 65 [1/1] (0.44ns)   --->   "%select_ln50_1 = select i1 %tmp, i32 %arg1_r_1_1_014_reload_read, i32 %arg1_r_0_1_013_reload_read" [d3.cpp:50]   --->   Operation 65 'select' 'select_ln50_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 66 [1/1] (0.44ns)   --->   "%select_ln50_2 = select i1 %tmp, i32 %arg1_r_1_2_018_reload_read, i32 %arg1_r_0_2_017_reload_read" [d3.cpp:50]   --->   Operation 66 'select' 'select_ln50_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 67 [1/1] (0.47ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %select_ln50, i32 %select_ln50_1, i32 %select_ln50_2, i2 %select_ln44" [d3.cpp:50]   --->   Operation 67 'mux' 'tmp_s' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i32 %tmp_s" [d3.cpp:50]   --->   Operation 68 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.52ns)   --->   "%phi_ln50_3 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %arg1_r_3_010_reload_read, i31 %empty, i31 %arg1_r_2_07_reload_read, i31 %arg1_r_3_010_reload_read, i2 %trunc_ln50_2" [d3.cpp:50]   --->   Operation 69 'mux' 'phi_ln50_3' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 70 [1/1] (0.52ns)   --->   "%phi_ln50_1 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %arg1_r_3_1_016_cast_read, i31 %arg1_r_1_1_014_cast_read, i31 %arg1_r_2_1_015_cast_read, i31 %arg1_r_3_1_016_cast_read, i2 %trunc_ln50_2" [d3.cpp:50]   --->   Operation 70 'mux' 'phi_ln50_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 71 [1/1] (0.52ns)   --->   "%phi_ln50_2 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %arg1_r_3_2_020_cast_read, i31 %arg1_r_1_2_018_cast_read, i31 %arg1_r_2_2_019_cast_read, i31 %arg1_r_3_2_020_cast_read, i2 %trunc_ln50_2" [d3.cpp:50]   --->   Operation 71 'mux' 'phi_ln50_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 72 [1/1] (0.47ns)   --->   "%tmp_1 = mux i31 @_ssdm_op_Mux.ap_auto.3i31.i2, i31 %phi_ln50_3, i31 %phi_ln50_1, i31 %phi_ln50_2, i2 %trunc_ln50" [d3.cpp:50]   --->   Operation 72 'mux' 'tmp_1' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 73 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_1, i1 0" [d3.cpp:50]   --->   Operation 73 'bitconcatenate' 'shl_ln6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i32 %shl_ln6" [d3.cpp:50]   --->   Operation 74 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_8 : [1/1] (0.80ns)   --->   Input mux for Operation 75 '%mul_ln50 = mul i64 %zext_ln50_1, i64 %zext_ln50'
ST_8 : Operation 75 [1/1] (2.61ns)   --->   "%mul_ln50 = mul i64 %zext_ln50_1, i64 %zext_ln50" [d3.cpp:50]   --->   Operation 75 'mul' 'mul_ln50' <Predicate = true> <Delay = 2.61> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 76 [1/1] (1.08ns)   --->   "%add_ln50 = add i64 %mul_ln50, i64 %add8115_load" [d3.cpp:50]   --->   Operation 76 'add' 'add_ln50' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln44 = store i64 %add_ln50, i64 %add8115" [d3.cpp:44]   --->   Operation 77 'store' 'store_ln44' <Predicate = true> <Delay = 0.42>
ST_8 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln44 = store i6 %add_ln44_2, i6 %phi_mul24" [d3.cpp:44]   --->   Operation 78 'store' 'store_ln44' <Predicate = true> <Delay = 0.42>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln44 = br void %for.inc82" [d3.cpp:44]   --->   Operation 79 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.027ns
The critical path consists of the following:
	'alloca' operation ('i') [19]  (0.000 ns)
	'load' operation ('i', d3.cpp:44) on local variable 'i' [41]  (0.000 ns)
	'sub' operation ('empty_33', d3.cpp:44) [57]  (0.797 ns)
	'mul' operation ('mul_ln47', d3.cpp:47) [59]  (1.230 ns)

 <State 2>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 3>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 4>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 5>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 6>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 7>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)

 <State 8>: 6.197ns
The critical path consists of the following:
	'urem' operation ('urem_ln47', d3.cpp:47) [60]  (0.789 ns)
	'mux' operation ('tmp_1', d3.cpp:50) [72]  (0.476 ns)
	multiplexor before operation 'mul' with delay (0.803 ns)
'mul' operation ('mul_ln50', d3.cpp:50) [75]  (2.617 ns)
	'add' operation ('add_ln50', d3.cpp:50) [76]  (1.085 ns)
	'store' operation ('store_ln44', d3.cpp:44) of variable 'add_ln50', d3.cpp:50 on local variable 'add8115' [78]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
