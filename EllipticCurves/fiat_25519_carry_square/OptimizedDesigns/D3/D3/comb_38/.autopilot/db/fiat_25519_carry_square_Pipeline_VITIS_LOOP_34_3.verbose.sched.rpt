

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3'
================================================================
* Date:           Fri May 10 12:49:11 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_38 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.655 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        9|        9|  90.000 ns|  90.000 ns|    9|    9|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_34_3  |        7|        7|         7|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.45>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_2 = alloca i32 1"   --->   Operation 10 'alloca' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln40_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %zext_ln40"   --->   Operation 11 'read' 'zext_ln40_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_2_2_019_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_2_019_reload"   --->   Operation 12 'read' 'arg1_r_2_2_019_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_1_2_018_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_2_018_reload"   --->   Operation 13 'read' 'arg1_r_1_2_018_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_0_2_017_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_2_017_reload"   --->   Operation 14 'read' 'arg1_r_0_2_017_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_2_1_015_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_1_015_reload"   --->   Operation 15 'read' 'arg1_r_2_1_015_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_1_1_014_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_1_014_reload"   --->   Operation 16 'read' 'arg1_r_1_1_014_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_0_1_013_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_1_013_reload"   --->   Operation 17 'read' 'arg1_r_0_1_013_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_0_01_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_01_reload"   --->   Operation 18 'read' 'arg1_r_0_01_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_2_07_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_07_reload"   --->   Operation 19 'read' 'arg1_r_2_07_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_1_04_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_04_reload"   --->   Operation 20 'read' 'arg1_r_1_04_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln40_cast = zext i32 %zext_ln40_read"   --->   Operation 21 'zext' 'zext_ln40_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 3, i4 %i_2"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc53"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i = load i4 %i_2" [d3.cpp:22]   --->   Operation 24 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.79ns)   --->   "%icmp_ln34 = icmp_ult  i4 %i, i4 9" [d3.cpp:34]   --->   Operation 25 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %icmp_ln34, void %VITIS_LOOP_44_5.exitStub, void %for.inc53.split_ifconv" [d3.cpp:34]   --->   Operation 26 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i4 %i" [d3.cpp:34]   --->   Operation 27 'trunc' 'trunc_ln34' <Predicate = (icmp_ln34)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.67ns)   --->   "%sub_ln37 = sub i3 2, i3 %trunc_ln34" [d3.cpp:37]   --->   Operation 28 'sub' 'sub_ln37' <Predicate = (icmp_ln34)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [7/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 29 'urem' 'urem_ln37' <Predicate = (icmp_ln34)> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.67ns)   --->   "%add_ln40_2 = add i3 %trunc_ln34, i3 1" [d3.cpp:40]   --->   Operation 30 'add' 'add_ln40_2' <Predicate = (icmp_ln34)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %add_ln40_2, i32 2" [d3.cpp:40]   --->   Operation 31 'bitselect' 'tmp_1' <Predicate = (icmp_ln34)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.79ns)   --->   "%add_ln34 = add i4 %i, i4 3" [d3.cpp:34]   --->   Operation 32 'add' 'add_ln34' <Predicate = (icmp_ln34)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln34 = store i4 %add_ln34, i4 %i_2" [d3.cpp:34]   --->   Operation 33 'store' 'store_ln34' <Predicate = (icmp_ln34)> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln34 = br void %for.inc53" [d3.cpp:34]   --->   Operation 34 'br' 'br_ln34' <Predicate = (icmp_ln34)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.78>
ST_2 : Operation 35 [6/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 35 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.78>
ST_3 : Operation 36 [5/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 36 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.78>
ST_4 : Operation 37 [4/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 37 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 0.79>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln34_1 = trunc i4 %i" [d3.cpp:34]   --->   Operation 38 'trunc' 'trunc_ln34_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i, i32 2" [d3.cpp:22]   --->   Operation 39 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [3/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 40 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (0.79ns)   --->   "%add_ln40_4 = add i4 %i, i4 2" [d3.cpp:40]   --->   Operation 41 'add' 'add_ln40_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%lshr_ln40_1 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln40_4, i32 2, i32 3" [d3.cpp:40]   --->   Operation 42 'partselect' 'lshr_ln40_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.54ns)   --->   "%icmp_ln40 = icmp_eq  i2 %trunc_ln34_1, i2 2" [d3.cpp:40]   --->   Operation 43 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln40 = br i1 %icmp_ln40, void %arrayidx51.2.case.1, void %arrayidx51.2.case.0" [d3.cpp:40]   --->   Operation 44 'br' 'br_ln40' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.89>
ST_6 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i1 %tmp" [d3.cpp:22]   --->   Operation 45 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i3 %sub_ln37" [d3.cpp:37]   --->   Operation 46 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 47 [1/1] (1.22ns)   --->   "%mul_ln37 = mul i7 %zext_ln37, i7 11" [d3.cpp:37]   --->   Operation 47 'mul' 'mul_ln37' <Predicate = true> <Delay = 1.22> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 48 [2/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 48 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32.i32, i7 %mul_ln37, i32 5, i32 6" [d3.cpp:40]   --->   Operation 49 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%arr_2_addr = getelementptr i64 %arr_2, i64 0, i64 %zext_ln22" [d3.cpp:40]   --->   Operation 50 'getelementptr' 'arr_2_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%arr_3_addr = getelementptr i64 %arr_3, i64 0, i64 %zext_ln22" [d3.cpp:40]   --->   Operation 51 'getelementptr' 'arr_3_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [2/2] (0.67ns)   --->   "%arr_2_load = load i2 %arr_2_addr" [d3.cpp:40]   --->   Operation 52 'load' 'arr_2_load' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 53 [2/2] (0.67ns)   --->   "%arr_3_load = load i2 %arr_3_addr" [d3.cpp:40]   --->   Operation 53 'load' 'arr_3_load' <Predicate = (trunc_ln34_1 != 2 & trunc_ln34_1 == 3)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 54 [1/1] (0.67ns)   --->   "%add_ln40_1 = add i3 %sub_ln37, i3 7" [d3.cpp:40]   --->   Operation 54 'add' 'add_ln40_1' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln40_2 = zext i3 %add_ln40_1" [d3.cpp:40]   --->   Operation 55 'zext' 'zext_ln40_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (1.22ns)   --->   "%mul_ln40_3 = mul i7 %zext_ln40_2, i7 11" [d3.cpp:40]   --->   Operation 56 'mul' 'mul_ln40_3' <Predicate = true> <Delay = 1.22> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln40_2 = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32.i32, i7 %mul_ln40_3, i32 5, i32 6" [d3.cpp:40]   --->   Operation 57 'partselect' 'trunc_ln40_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln40_4 = zext i1 %tmp_1" [d3.cpp:40]   --->   Operation 58 'zext' 'zext_ln40_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%arr_addr = getelementptr i64 %arr, i64 0, i64 %zext_ln40_4" [d3.cpp:40]   --->   Operation 59 'getelementptr' 'arr_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%arr_3_addr_1 = getelementptr i64 %arr_3, i64 0, i64 %zext_ln40_4" [d3.cpp:40]   --->   Operation 60 'getelementptr' 'arr_3_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.67ns)   --->   "%add_ln40_3 = add i3 %sub_ln37, i3 6" [d3.cpp:40]   --->   Operation 61 'add' 'add_ln40_3' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln40_6 = zext i3 %add_ln40_3" [d3.cpp:40]   --->   Operation 62 'zext' 'zext_ln40_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (1.22ns)   --->   "%mul_ln40_4 = mul i7 %zext_ln40_6, i7 11" [d3.cpp:40]   --->   Operation 63 'mul' 'mul_ln40_4' <Predicate = true> <Delay = 1.22> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i7.i32, i7 %mul_ln40_4, i32 5" [d3.cpp:40]   --->   Operation 64 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln40_7 = zext i2 %lshr_ln40_1" [d3.cpp:40]   --->   Operation 65 'zext' 'zext_ln40_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%arr_addr_1 = getelementptr i64 %arr, i64 0, i64 %zext_ln40_7" [d3.cpp:40]   --->   Operation 66 'getelementptr' 'arr_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%arr_1_addr = getelementptr i64 %arr_1, i64 0, i64 %zext_ln40_7" [d3.cpp:40]   --->   Operation 67 'getelementptr' 'arr_1_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [2/2] (0.67ns)   --->   "%arr_load = load i2 %arr_addr" [d3.cpp:40]   --->   Operation 68 'load' 'arr_load' <Predicate = (trunc_ln34_1 != 2 & trunc_ln34_1 == 3)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 69 [2/2] (0.67ns)   --->   "%arr_3_load_1 = load i2 %arr_3_addr_1" [d3.cpp:40]   --->   Operation 69 'load' 'arr_3_load_1' <Predicate = (trunc_ln34_1 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 70 [2/2] (0.67ns)   --->   "%arr_load_1 = load i2 %arr_addr_1" [d3.cpp:40]   --->   Operation 70 'load' 'arr_load_1' <Predicate = (trunc_ln34_1 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 71 [2/2] (0.67ns)   --->   "%arr_1_load = load i2 %arr_1_addr" [d3.cpp:40]   --->   Operation 71 'load' 'arr_1_load' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 121 'ret' 'ret_ln0' <Predicate = (!icmp_ln34)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 6.65>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%specpipeline_ln36 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d3.cpp:36]   --->   Operation 72 'specpipeline' 'specpipeline_ln36' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%speclooptripcount_ln22 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d3.cpp:22]   --->   Operation 73 'speclooptripcount' 'speclooptripcount_ln22' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [d3.cpp:34]   --->   Operation 74 'specloopname' 'specloopname_ln34' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/7] (0.78ns)   --->   "%urem_ln37 = urem i3 %sub_ln37, i3 3" [d3.cpp:37]   --->   Operation 75 'urem' 'urem_ln37' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 6> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln40 = trunc i2 %urem_ln37" [d3.cpp:40]   --->   Operation 76 'trunc' 'trunc_ln40' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/1] (0.54ns)   --->   "%icmp_ln40_1 = icmp_eq  i2 %trunc_ln5, i2 1" [d3.cpp:40]   --->   Operation 77 'icmp' 'icmp_ln40_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node arg1_r_3_1)   --->   "%arg1_r_3 = select i1 %icmp_ln40_1, i32 %arg1_r_1_04_reload_read, i32 %arg1_r_2_07_reload_read" [d3.cpp:40]   --->   Operation 78 'select' 'arg1_r_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (0.54ns)   --->   "%icmp_ln40_2 = icmp_eq  i2 %trunc_ln5, i2 0" [d3.cpp:40]   --->   Operation 79 'icmp' 'icmp_ln40_2' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 80 [1/1] (0.44ns) (out node of the LUT)   --->   "%arg1_r_3_1 = select i1 %icmp_ln40_2, i32 %arg1_r_0_01_reload_read, i32 %arg1_r_3" [d3.cpp:40]   --->   Operation 80 'select' 'arg1_r_3_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 81 [1/1] (0.52ns)   --->   "%phi_ln40_1 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_1_013_reload_read, i32 %arg1_r_1_1_014_reload_read, i32 %arg1_r_2_1_015_reload_read, i32 0, i2 %trunc_ln5" [d3.cpp:40]   --->   Operation 81 'mux' 'phi_ln40_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (0.52ns)   --->   "%phi_ln40_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_2_017_reload_read, i32 %arg1_r_1_2_018_reload_read, i32 %arg1_r_2_2_019_reload_read, i32 0, i2 %trunc_ln5" [d3.cpp:40]   --->   Operation 82 'mux' 'phi_ln40_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 83 [1/1] (0.47ns)   --->   "%tmp_8 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_3_1, i32 %phi_ln40_1, i32 %phi_ln40_2, i2 %trunc_ln40" [d3.cpp:40]   --->   Operation 83 'mux' 'tmp_8' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln40_1 = zext i32 %tmp_8" [d3.cpp:40]   --->   Operation 84 'zext' 'zext_ln40_1' <Predicate = true> <Delay = 0.00>
ST_7 : [1/1] (0.75ns)   --->   Input mux for Operation 85 '%mul_ln40_1 = mul i63 %zext_ln40_cast, i63 %zext_ln40_1'
ST_7 : Operation 85 [1/1] (2.66ns)   --->   "%mul_ln40_1 = mul i63 %zext_ln40_cast, i63 %zext_ln40_1" [d3.cpp:40]   --->   Operation 85 'mul' 'mul_ln40_1' <Predicate = true> <Delay = 2.66> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %mul_ln40_1, i1 0" [d3.cpp:40]   --->   Operation 86 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/2] (0.67ns)   --->   "%arr_2_load = load i2 %arr_2_addr" [d3.cpp:40]   --->   Operation 87 'load' 'arr_2_load' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 88 [1/2] (0.67ns)   --->   "%arr_3_load = load i2 %arr_3_addr" [d3.cpp:40]   --->   Operation 88 'load' 'arr_3_load' <Predicate = (trunc_ln34_1 != 2 & trunc_ln34_1 == 3)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 89 [1/1] (0.52ns)   --->   "%tmp_9 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 0, i64 %arr_2_load, i64 %arr_3_load, i2 %trunc_ln34_1" [d3.cpp:40]   --->   Operation 89 'mux' 'tmp_9' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (1.08ns)   --->   "%add_ln40 = add i64 %tmp_9, i64 %shl_ln1" [d3.cpp:40]   --->   Operation 90 'add' 'add_ln40' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.52ns)   --->   "%phi_ln40_3 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_01_reload_read, i32 %arg1_r_1_04_reload_read, i32 %arg1_r_2_07_reload_read, i32 0, i2 %trunc_ln40_2" [d3.cpp:40]   --->   Operation 91 'mux' 'phi_ln40_3' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.52ns)   --->   "%phi_ln40_4 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_1_013_reload_read, i32 %arg1_r_1_1_014_reload_read, i32 %arg1_r_2_1_015_reload_read, i32 0, i2 %trunc_ln40_2" [d3.cpp:40]   --->   Operation 92 'mux' 'phi_ln40_4' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.52ns)   --->   "%phi_ln40_5 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_2_017_reload_read, i32 %arg1_r_1_2_018_reload_read, i32 %arg1_r_2_2_019_reload_read, i32 0, i2 %trunc_ln40_2" [d3.cpp:40]   --->   Operation 93 'mux' 'phi_ln40_5' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.47ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %phi_ln40_5, i32 %phi_ln40_3, i32 %phi_ln40_4, i2 %trunc_ln40" [d3.cpp:40]   --->   Operation 94 'mux' 'tmp_s' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln40_3 = zext i32 %tmp_s" [d3.cpp:40]   --->   Operation 95 'zext' 'zext_ln40_3' <Predicate = true> <Delay = 0.00>
ST_7 : [1/1] (0.75ns)   --->   Input mux for Operation 96 '%mul_ln40 = mul i63 %zext_ln40_cast, i63 %zext_ln40_3'
ST_7 : Operation 96 [1/1] (2.66ns)   --->   "%mul_ln40 = mul i63 %zext_ln40_cast, i63 %zext_ln40_3" [d3.cpp:40]   --->   Operation 96 'mul' 'mul_ln40' <Predicate = true> <Delay = 2.66> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%shl_ln40_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %mul_ln40, i1 0" [d3.cpp:40]   --->   Operation 97 'bitconcatenate' 'shl_ln40_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.44ns)   --->   "%select_ln40 = select i1 %tmp_2, i32 %arg1_r_1_04_reload_read, i32 %arg1_r_0_01_reload_read" [d3.cpp:40]   --->   Operation 98 'select' 'select_ln40' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (0.44ns)   --->   "%select_ln40_1 = select i1 %tmp_2, i32 %arg1_r_1_1_014_reload_read, i32 %arg1_r_0_1_013_reload_read" [d3.cpp:40]   --->   Operation 99 'select' 'select_ln40_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (0.44ns)   --->   "%select_ln40_2 = select i1 %tmp_2, i32 %arg1_r_1_2_018_reload_read, i32 %arg1_r_0_2_017_reload_read" [d3.cpp:40]   --->   Operation 100 'select' 'select_ln40_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.47ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %select_ln40_1, i32 %select_ln40_2, i32 %select_ln40, i2 %trunc_ln40" [d3.cpp:40]   --->   Operation 101 'mux' 'tmp_3' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln40_5 = zext i32 %tmp_3" [d3.cpp:40]   --->   Operation 102 'zext' 'zext_ln40_5' <Predicate = true> <Delay = 0.00>
ST_7 : [1/1] (0.75ns)   --->   Input mux for Operation 103 '%mul_ln40_2 = mul i63 %zext_ln40_cast, i63 %zext_ln40_5'
ST_7 : Operation 103 [1/1] (2.66ns)   --->   "%mul_ln40_2 = mul i63 %zext_ln40_cast, i63 %zext_ln40_5" [d3.cpp:40]   --->   Operation 103 'mul' 'mul_ln40_2' <Predicate = true> <Delay = 2.66> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%shl_ln40_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %mul_ln40_2, i1 0" [d3.cpp:40]   --->   Operation 104 'bitconcatenate' 'shl_ln40_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/2] (0.67ns)   --->   "%arr_load = load i2 %arr_addr" [d3.cpp:40]   --->   Operation 105 'load' 'arr_load' <Predicate = (trunc_ln34_1 != 2 & trunc_ln34_1 == 3)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 106 [1/2] (0.67ns)   --->   "%arr_3_load_1 = load i2 %arr_3_addr_1" [d3.cpp:40]   --->   Operation 106 'load' 'arr_3_load_1' <Predicate = (trunc_ln34_1 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 107 [1/1] (0.52ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 0, i64 %arr_3_load_1, i64 %arr_load, i2 %trunc_ln34_1" [d3.cpp:40]   --->   Operation 107 'mux' 'tmp_4' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 108 [1/1] (1.08ns)   --->   "%add_ln40_5 = add i64 %tmp_4, i64 %shl_ln40_1" [d3.cpp:40]   --->   Operation 108 'add' 'add_ln40_5' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 109 [1/2] (0.67ns)   --->   "%arr_load_1 = load i2 %arr_addr_1" [d3.cpp:40]   --->   Operation 109 'load' 'arr_load_1' <Predicate = (trunc_ln34_1 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 110 [1/2] (0.67ns)   --->   "%arr_1_load = load i2 %arr_1_addr" [d3.cpp:40]   --->   Operation 110 'load' 'arr_1_load' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 111 [1/1] (0.52ns)   --->   "%tmp_5 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 0, i64 %arr_load_1, i64 %arr_1_load, i2 %trunc_ln34_1" [d3.cpp:40]   --->   Operation 111 'mux' 'tmp_5' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (1.08ns)   --->   "%add_ln40_6 = add i64 %tmp_5, i64 %shl_ln40_2" [d3.cpp:40]   --->   Operation 112 'add' 'add_ln40_6' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 113 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40, i2 %arr_3_addr" [d3.cpp:40]   --->   Operation 113 'store' 'store_ln40' <Predicate = (!icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 114 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40_5, i2 %arr_addr" [d3.cpp:40]   --->   Operation 114 'store' 'store_ln40' <Predicate = (!icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 115 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40_6, i2 %arr_1_addr" [d3.cpp:40]   --->   Operation 115 'store' 'store_ln40' <Predicate = (!icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln40 = br void %arrayidx51.2.exit" [d3.cpp:40]   --->   Operation 116 'br' 'br_ln40' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40, i2 %arr_2_addr" [d3.cpp:40]   --->   Operation 117 'store' 'store_ln40' <Predicate = (icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 118 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40_5, i2 %arr_3_addr_1" [d3.cpp:40]   --->   Operation 118 'store' 'store_ln40' <Predicate = (icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 119 [1/1] (0.67ns)   --->   "%store_ln40 = store i64 %add_ln40_6, i2 %arr_addr_1" [d3.cpp:40]   --->   Operation 119 'store' 'store_ln40' <Predicate = (icmp_ln40)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 3> <RAM>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln40 = br void %arrayidx51.2.exit" [d3.cpp:40]   --->   Operation 120 'br' 'br_ln40' <Predicate = (icmp_ln40)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.454ns
The critical path consists of the following:
	'alloca' operation ('i') [15]  (0.000 ns)
	'load' operation ('i', d3.cpp:22) on local variable 'i' [30]  (0.000 ns)
	'sub' operation ('sub_ln37', d3.cpp:37) [41]  (0.673 ns)
	'urem' operation ('urem_ln37', d3.cpp:37) [44]  (0.781 ns)

 <State 2>: 0.781ns
The critical path consists of the following:
	'urem' operation ('urem_ln37', d3.cpp:37) [44]  (0.781 ns)

 <State 3>: 0.781ns
The critical path consists of the following:
	'urem' operation ('urem_ln37', d3.cpp:37) [44]  (0.781 ns)

 <State 4>: 0.781ns
The critical path consists of the following:
	'urem' operation ('urem_ln37', d3.cpp:37) [44]  (0.781 ns)

 <State 5>: 0.797ns
The critical path consists of the following:
	'add' operation ('add_ln40_4', d3.cpp:40) [90]  (0.797 ns)

 <State 6>: 1.893ns
The critical path consists of the following:
	'add' operation ('add_ln40_1', d3.cpp:40) [63]  (0.673 ns)
	'mul' operation ('mul_ln40_3', d3.cpp:40) [65]  (1.220 ns)

 <State 7>: 6.655ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln40_1', d3.cpp:40) [47]  (0.548 ns)
	'select' operation ('arg1_r[3]', d3.cpp:40) [48]  (0.000 ns)
	'select' operation ('arg1_r[3]', d3.cpp:40) [50]  (0.449 ns)
	'mux' operation ('tmp_8', d3.cpp:40) [53]  (0.476 ns)
	multiplexor before operation 'mul' with delay (0.754 ns)
'mul' operation ('mul_ln40_1', d3.cpp:40) [55]  (2.666 ns)
	'add' operation ('add_ln40', d3.cpp:40) [62]  (1.085 ns)
	'store' operation ('store_ln40', d3.cpp:40) of variable 'add_ln40', d3.cpp:40 on array 'arr_3' [106]  (0.677 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
