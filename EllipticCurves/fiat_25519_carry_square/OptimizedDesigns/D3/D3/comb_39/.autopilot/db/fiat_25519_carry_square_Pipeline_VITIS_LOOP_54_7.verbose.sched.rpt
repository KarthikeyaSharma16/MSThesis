

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7'
================================================================
* Date:           Fri May 10 12:49:37 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_39 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.726 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_54_7  |        2|        2|         1|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%add118_113 = alloca i32 1"   --->   Operation 4 'alloca' 'add118_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add131_114 = alloca i32 1"   --->   Operation 5 'alloca' 'add131_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add151_115 = alloca i32 1"   --->   Operation 6 'alloca' 'add151_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add180_116 = alloca i32 1"   --->   Operation 7 'alloca' 'add180_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%mul157_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %mul157"   --->   Operation 9 'read' 'mul157_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_reload"   --->   Operation 10 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_3_reload"   --->   Operation 11 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_4_reload"   --->   Operation 12 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_5_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_5_cast"   --->   Operation 13 'read' 'arg1_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_7_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_7_cast"   --->   Operation 14 'read' 'arg1_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_6_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_6_cast"   --->   Operation 15 'read' 'arg1_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_8_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_8_cast"   --->   Operation 16 'read' 'arg1_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_reload"   --->   Operation 17 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_reload"   --->   Operation 18 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_load_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_load_5"   --->   Operation 19 'read' 'arr_load_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arr_1_load_6_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1_load_6"   --->   Operation 20 'read' 'arr_1_load_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arr_load_6_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_load_6"   --->   Operation 21 'read' 'arr_load_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arr_1_load_7_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1_load_7"   --->   Operation 22 'read' 'arr_1_load_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_load_7_read, i64 %add180_116"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_load_6_read, i64 %add151_115"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_load_6_read, i64 %add131_114"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_load_5_read, i64 %add118_113"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body97"   --->   Operation 28 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.72>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i_3 = load i3 %i" [d3.cpp:54]   --->   Operation 29 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %i_3, i32 2" [d3.cpp:54]   --->   Operation 30 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %tmp, void %for.body97.split, void %VITIS_LOOP_68_9.exitStub" [d3.cpp:54]   --->   Operation 31 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%add118_113_load = load i64 %add118_113" [d3.cpp:60]   --->   Operation 32 'load' 'add118_113_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%add131_114_load = load i64 %add131_114" [d3.cpp:61]   --->   Operation 33 'load' 'add131_114_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%add151_115_load = load i64 %add151_115" [d3.cpp:62]   --->   Operation 34 'load' 'add151_115_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%add180_116_load = load i64 %add180_116" [d3.cpp:64]   --->   Operation 35 'load' 'add180_116_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i3 %i_3" [d3.cpp:54]   --->   Operation 36 'trunc' 'trunc_ln54' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specpipeline_ln56 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d3.cpp:56]   --->   Operation 37 'specpipeline' 'specpipeline_ln56' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%speclooptripcount_ln54 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d3.cpp:54]   --->   Operation 38 'speclooptripcount' 'speclooptripcount_ln54' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [d3.cpp:54]   --->   Operation 39 'specloopname' 'specloopname_ln54' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.47ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_reload_read, i32 0, i32 %arg1_r_2_reload_read, i2 %trunc_ln54" [d3.cpp:60]   --->   Operation 40 'mux' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i32 %tmp_6" [d3.cpp:60]   --->   Operation 41 'zext' 'zext_ln60' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.54ns)   --->   "%icmp_ln60_2 = icmp_eq  i2 %trunc_ln54, i2 0" [d3.cpp:60]   --->   Operation 42 'icmp' 'icmp_ln60_2' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.41ns)   --->   "%select_ln60 = select i1 %icmp_ln60_2, i31 %arg1_r_8_cast_read, i31 %arg1_r_6_cast_read" [d3.cpp:60]   --->   Operation 43 'select' 'select_ln60' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln60, i1 0" [d3.cpp:60]   --->   Operation 44 'bitconcatenate' 'shl_ln3' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i32 %shl_ln3" [d3.cpp:60]   --->   Operation 45 'zext' 'zext_ln60_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.41ns)   --->   "%select_ln61 = select i1 %icmp_ln60_2, i31 %arg1_r_7_cast_read, i31 %arg1_r_5_cast_read" [d3.cpp:61]   --->   Operation 46 'select' 'select_ln61' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln61, i1 0" [d3.cpp:61]   --->   Operation 47 'bitconcatenate' 'shl_ln4' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i32 %shl_ln4" [d3.cpp:61]   --->   Operation 48 'zext' 'zext_ln61' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.41ns)   --->   "%select_ln62 = select i1 %icmp_ln60_2, i31 %arg1_r_6_cast_read, i31 %arg1_r_4_reload_read" [d3.cpp:62]   --->   Operation 49 'select' 'select_ln62' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%shl_ln5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln62, i1 0" [d3.cpp:62]   --->   Operation 50 'bitconcatenate' 'shl_ln5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i32 %shl_ln5" [d3.cpp:62]   --->   Operation 51 'zext' 'zext_ln62' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.67ns)   --->   "%icmp_ln63 = icmp_eq  i3 %i_3, i3 0" [d3.cpp:63]   --->   Operation 52 'icmp' 'icmp_ln63' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i32 %arg1_r_3_reload_read" [d3.cpp:64]   --->   Operation 53 'trunc' 'trunc_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.41ns)   --->   "%select_ln64 = select i1 %icmp_ln60_2, i31 %arg1_r_5_cast_read, i31 %trunc_ln64" [d3.cpp:64]   --->   Operation 54 'select' 'select_ln64' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln64, i1 0" [d3.cpp:64]   --->   Operation 55 'bitconcatenate' 'shl_ln6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i32 %shl_ln6" [d3.cpp:64]   --->   Operation 56 'zext' 'zext_ln64' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%or_ln60 = or i2 %trunc_ln54, i2 1" [d3.cpp:60]   --->   Operation 57 'or' 'or_ln60' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.47ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_1_reload_read, i32 0, i32 %arg1_r_3_reload_read, i2 %trunc_ln54" [d3.cpp:60]   --->   Operation 58 'mux' 'tmp_s' <Predicate = (!tmp)> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i32 %tmp_s" [d3.cpp:62]   --->   Operation 59 'zext' 'zext_ln62_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln60_3 = zext i32 %tmp_s" [d3.cpp:60]   --->   Operation 60 'zext' 'zext_ln60_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.54ns)   --->   "%icmp_ln60 = icmp_eq  i2 %or_ln60, i2 1" [d3.cpp:60]   --->   Operation 61 'icmp' 'icmp_ln60' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.54ns)   --->   "%icmp_ln60_1 = icmp_eq  i2 %or_ln60, i2 3" [d3.cpp:60]   --->   Operation 62 'icmp' 'icmp_ln60_1' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_1)   --->   "%or_ln60_1 = or i1 %icmp_ln60, i1 %icmp_ln60_1" [d3.cpp:60]   --->   Operation 63 'or' 'or_ln60_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_1)   --->   "%trunc_ln60 = trunc i31 %select_ln61" [d3.cpp:60]   --->   Operation 64 'trunc' 'trunc_ln60' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_1)   --->   "%st = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i30.i2, i30 %trunc_ln60, i2 0" [d3.cpp:60]   --->   Operation 65 'bitconcatenate' 'st' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln60_1 = select i1 %or_ln60_1, i32 %st, i32 %shl_ln4" [d3.cpp:60]   --->   Operation 66 'select' 'select_ln60_1' <Predicate = (!tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i32 %select_ln60_1" [d3.cpp:60]   --->   Operation 67 'zext' 'zext_ln60_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 68 '%mul_ln60 = mul i64 %zext_ln60_1, i64 %zext_ln60'
ST_2 : Operation 68 [1/1] (2.43ns)   --->   "%mul_ln60 = mul i64 %zext_ln60_1, i64 %zext_ln60" [d3.cpp:60]   --->   Operation 68 'mul' 'mul_ln60' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 69 '%mul_ln60_1 = mul i64 %zext_ln60_2, i64 %zext_ln62_1'
ST_2 : Operation 69 [1/1] (2.43ns)   --->   "%mul_ln60_1 = mul i64 %zext_ln60_2, i64 %zext_ln62_1" [d3.cpp:60]   --->   Operation 69 'mul' 'mul_ln60_1' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln60 = add i64 %mul_ln60_1, i64 %mul_ln60" [d3.cpp:60]   --->   Operation 70 'add' 'add_ln60' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 71 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln60_1 = add i64 %add118_113_load, i64 %add_ln60" [d3.cpp:60]   --->   Operation 71 'add' 'add_ln60_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 72 '%mul_ln61 = mul i64 %zext_ln61, i64 %zext_ln60'
ST_2 : Operation 72 [1/1] (2.43ns)   --->   "%mul_ln61 = mul i64 %zext_ln61, i64 %zext_ln60" [d3.cpp:61]   --->   Operation 72 'mul' 'mul_ln61' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 73 '%mul_ln61_1 = mul i64 %zext_ln62_1, i64 %zext_ln62'
ST_2 : Operation 73 [1/1] (2.43ns)   --->   "%mul_ln61_1 = mul i64 %zext_ln62_1, i64 %zext_ln62" [d3.cpp:61]   --->   Operation 73 'mul' 'mul_ln61_1' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln61 = add i64 %mul_ln61_1, i64 %mul_ln61" [d3.cpp:61]   --->   Operation 74 'add' 'add_ln61' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 75 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln61_1 = add i64 %add131_114_load, i64 %add_ln61" [d3.cpp:61]   --->   Operation 75 'add' 'add_ln61_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%shl_ln62_1 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i32.i1, i32 %tmp_s, i1 0" [d3.cpp:62]   --->   Operation 76 'bitconcatenate' 'shl_ln62_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.43ns)   --->   "%select_ln62_1 = select i1 %icmp_ln60, i33 %shl_ln62_1, i33 %zext_ln60_3" [d3.cpp:62]   --->   Operation 77 'select' 'select_ln62_1' <Predicate = (!tmp)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i33 %select_ln62_1" [d3.cpp:62]   --->   Operation 78 'zext' 'zext_ln62_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (3.41ns)   --->   "%mul_ln62 = mul i64 %zext_ln62_2, i64 %zext_ln64" [d3.cpp:62]   --->   Operation 79 'mul' 'mul_ln62' <Predicate = (!tmp)> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 80 '%mul_ln62_1 = mul i64 %zext_ln62, i64 %zext_ln60'
ST_2 : Operation 80 [1/1] (2.43ns)   --->   "%mul_ln62_1 = mul i64 %zext_ln62, i64 %zext_ln60" [d3.cpp:62]   --->   Operation 80 'mul' 'mul_ln62_1' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node and_ln62)   --->   "%select_ln62_2 = select i1 %icmp_ln63, i64 18446744073709551615, i64 0" [d3.cpp:62]   --->   Operation 81 'select' 'select_ln62_2' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln62 = and i64 %mul157_read, i64 %select_ln62_2" [d3.cpp:62]   --->   Operation 82 'and' 'and_ln62' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (1.08ns)   --->   "%add_ln62 = add i64 %mul_ln62_1, i64 %mul_ln62" [d3.cpp:62]   --->   Operation 83 'add' 'add_ln62' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_1 = add i64 %add_ln62, i64 %and_ln62" [d3.cpp:62]   --->   Operation 84 'add' 'add_ln62_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 85 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln62_2 = add i64 %add151_115_load, i64 %add_ln62_1" [d3.cpp:62]   --->   Operation 85 'add' 'add_ln62_2' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln64_1 = trunc i32 %arg1_r_2_reload_read" [d3.cpp:64]   --->   Operation 86 'trunc' 'trunc_ln64_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.41ns)   --->   "%select_ln64_1 = select i1 %icmp_ln60_2, i31 %arg1_r_4_reload_read, i31 %trunc_ln64_1" [d3.cpp:64]   --->   Operation 87 'select' 'select_ln64_1' <Predicate = (!tmp)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%shl_ln64_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %select_ln64_1, i1 0" [d3.cpp:64]   --->   Operation 88 'bitconcatenate' 'shl_ln64_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i32 %shl_ln64_1" [d3.cpp:64]   --->   Operation 89 'zext' 'zext_ln64_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.54ns)   --->   "%icmp_ln64 = icmp_ne  i2 %or_ln60, i2 3" [d3.cpp:64]   --->   Operation 90 'icmp' 'icmp_ln64' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 91 '%mul_ln64 = mul i64 %zext_ln64, i64 %zext_ln60'
ST_2 : Operation 91 [1/1] (2.43ns)   --->   "%mul_ln64 = mul i64 %zext_ln64, i64 %zext_ln60" [d3.cpp:64]   --->   Operation 91 'mul' 'mul_ln64' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.98ns)   --->   Input mux for Operation 92 '%mul_ln64_1 = mul i64 %zext_ln64_1, i64 %zext_ln62_1'
ST_2 : Operation 92 [1/1] (2.43ns)   --->   "%mul_ln64_1 = mul i64 %zext_ln64_1, i64 %zext_ln62_1" [d3.cpp:64]   --->   Operation 92 'mul' 'mul_ln64_1' <Predicate = (!tmp)> <Delay = 2.43> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln64)   --->   "%select_ln64_2 = select i1 %icmp_ln64, i64 18446744073709551615, i64 0" [d3.cpp:64]   --->   Operation 93 'select' 'select_ln64_2' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln64 = and i64 %mul_ln64_1, i64 %select_ln64_2" [d3.cpp:64]   --->   Operation 94 'and' 'and_ln64' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln64 = add i64 %and_ln64, i64 %mul_ln64" [d3.cpp:64]   --->   Operation 95 'add' 'add_ln64' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 96 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln64_1 = add i64 %add180_116_load, i64 %add_ln64" [d3.cpp:64]   --->   Operation 96 'add' 'add_ln64_1' <Predicate = (!tmp)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 97 [1/1] (0.67ns)   --->   "%add_ln54 = add i3 %i_3, i3 2" [d3.cpp:54]   --->   Operation 97 'add' 'add_ln54' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.42ns)   --->   "%store_ln54 = store i3 %add_ln54, i3 %i" [d3.cpp:54]   --->   Operation 98 'store' 'store_ln54' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 99 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln64_1, i64 %add180_116" [d3.cpp:54]   --->   Operation 99 'store' 'store_ln54' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 100 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln62_2, i64 %add151_115" [d3.cpp:54]   --->   Operation 100 'store' 'store_ln54' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 101 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln61_1, i64 %add131_114" [d3.cpp:54]   --->   Operation 101 'store' 'store_ln54' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 102 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln60_1, i64 %add118_113" [d3.cpp:54]   --->   Operation 102 'store' 'store_ln54' <Predicate = (!tmp)> <Delay = 0.42>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln54 = br void %for.body97" [d3.cpp:54]   --->   Operation 103 'br' 'br_ln54' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%add118_113_load_1 = load i64 %add118_113"   --->   Operation 104 'load' 'add118_113_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%add131_114_load_1 = load i64 %add131_114"   --->   Operation 105 'load' 'add131_114_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%add151_115_load_1 = load i64 %add151_115"   --->   Operation 106 'load' 'add151_115_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%add180_116_load_1 = load i64 %add180_116"   --->   Operation 107 'load' 'add180_116_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add180_116_out, i64 %add180_116_load_1"   --->   Operation 108 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add151_115_out, i64 %add151_115_load_1"   --->   Operation 109 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add131_114_out, i64 %add131_114_load_1"   --->   Operation 110 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add118_113_out, i64 %add118_113_load_1"   --->   Operation 111 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 112 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [23]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [38]  (0.427 ns)

 <State 2>: 6.726ns
The critical path consists of the following:
	'load' operation ('i', d3.cpp:54) on local variable 'i' [45]  (0.000 ns)
	'or' operation ('or_ln60', d3.cpp:60) [74]  (0.000 ns)
	'icmp' operation ('icmp_ln60', d3.cpp:60) [78]  (0.548 ns)
	'select' operation ('select_ln62_1', d3.cpp:62) [94]  (0.432 ns)
	'mul' operation ('mul_ln62', d3.cpp:62) [96]  (3.415 ns)
	'add' operation ('add_ln62', d3.cpp:62) [100]  (1.085 ns)
	'add' operation ('add_ln62_1', d3.cpp:62) [101]  (0.000 ns)
	'add' operation ('add_ln62_2', d3.cpp:62) [102]  (0.819 ns)
	'store' operation ('store_ln54', d3.cpp:54) of variable 'add_ln62_2', d3.cpp:62 on local variable 'add151_115' [117]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
