

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7'
================================================================
* Date:           Fri May 10 12:29:32 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.547 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_54_7  |        4|        4|         2|          1|          1|     4|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%add11813 = alloca i32 1"   --->   Operation 5 'alloca' 'add11813' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add13114 = alloca i32 1"   --->   Operation 6 'alloca' 'add13114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add15115 = alloca i32 1"   --->   Operation 7 'alloca' 'add15115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add18016 = alloca i32 1"   --->   Operation 8 'alloca' 'add18016' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%mul157_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %mul157"   --->   Operation 10 'read' 'mul157_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_0_3_016_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_0_3_016_cast"   --->   Operation 11 'read' 'arg1_r_0_3_016_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_0_2_013_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_0_2_013_cast"   --->   Operation 12 'read' 'arg1_r_0_2_013_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_0_1_010_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_0_1_010_cast"   --->   Operation 13 'read' 'arg1_r_0_1_010_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_0_01_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_0_01_cast"   --->   Operation 14 'read' 'arg1_r_0_01_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_2_3_018_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_3_018_cast"   --->   Operation 15 'read' 'arg1_r_2_3_018_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_1_3_017_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_3_017_cast"   --->   Operation 16 'read' 'arg1_r_1_3_017_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_2_2_015_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_2_015_cast"   --->   Operation 17 'read' 'arg1_r_2_2_015_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_1_2_014_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_2_014_cast"   --->   Operation 18 'read' 'arg1_r_1_2_014_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_2_1_012_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_1_012_cast"   --->   Operation 19 'read' 'arg1_r_2_1_012_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_1_1_011_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_1_011_cast"   --->   Operation 20 'read' 'arg1_r_1_1_011_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_2_07_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_2_07_cast"   --->   Operation 21 'read' 'arg1_r_2_07_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_1_04_cast_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %arg1_r_1_04_cast"   --->   Operation 22 'read' 'arg1_r_1_04_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_0_3_016_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_3_016_reload"   --->   Operation 23 'read' 'arg1_r_0_3_016_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_0_2_013_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_2_013_reload"   --->   Operation 24 'read' 'arg1_r_0_2_013_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_0_1_010_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_1_010_reload"   --->   Operation 25 'read' 'arg1_r_0_1_010_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_0_01_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_01_reload"   --->   Operation 26 'read' 'arg1_r_0_01_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arr_load_4_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_load_4"   --->   Operation 27 'read' 'arr_load_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arr_1_load_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_1_load_5"   --->   Operation 28 'read' 'arr_1_load_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arr_load_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arr_load_5"   --->   Operation 29 'read' 'arr_load_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%add_ln40_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %add_ln40"   --->   Operation 30 'read' 'add_ln40_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %add_ln40_read, i64 %add18016"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_load_5_read, i64 %add15115"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_1_load_5_read, i64 %add13114"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 %arr_load_4_read, i64 %add11813"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body97"   --->   Operation 36 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.54>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%i_3 = load i3 %i" [d3.cpp:54]   --->   Operation 37 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.67ns)   --->   "%icmp_ln54 = icmp_eq  i3 %i_3, i3 4" [d3.cpp:54]   --->   Operation 38 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.67ns)   --->   "%add_ln54 = add i3 %i_3, i3 1" [d3.cpp:54]   --->   Operation 39 'add' 'add_ln54' <Predicate = true> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %for.body97.split, void %VITIS_LOOP_68_9.exitStub" [d3.cpp:54]   --->   Operation 40 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%add13114_load = load i64 %add13114" [d3.cpp:61]   --->   Operation 41 'load' 'add13114_load' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%add15115_load = load i64 %add15115" [d3.cpp:63]   --->   Operation 42 'load' 'add15115_load' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%add18016_load = load i64 %add18016" [d3.cpp:64]   --->   Operation 43 'load' 'add18016_load' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i3 %i_3" [d3.cpp:54]   --->   Operation 44 'trunc' 'trunc_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i3 %i_3" [d3.cpp:54]   --->   Operation 45 'zext' 'zext_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.79ns)   --->   "%empty = sub i4 8, i4 %zext_ln54" [d3.cpp:54]   --->   Operation 46 'sub' 'empty' <Predicate = (!icmp_ln54)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty_25 = trunc i4 %empty" [d3.cpp:54]   --->   Operation 47 'trunc' 'empty_25' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.28ns)   --->   "%empty_26 = xor i2 %trunc_ln54, i2 3" [d3.cpp:54]   --->   Operation 48 'xor' 'empty_26' <Predicate = (!icmp_ln54)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.67ns)   --->   "%empty_27 = sub i3 6, i3 %i_3" [d3.cpp:54]   --->   Operation 49 'sub' 'empty_27' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%empty_28 = trunc i3 %empty_27" [d3.cpp:54]   --->   Operation 50 'trunc' 'empty_28' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.67ns)   --->   "%empty_29 = sub i3 5, i3 %i_3" [d3.cpp:54]   --->   Operation 51 'sub' 'empty_29' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln57 = trunc i3 %empty_29" [d3.cpp:57]   --->   Operation 52 'trunc' 'trunc_ln57' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.52ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %arg1_r_0_01_reload_read, i32 %arg1_r_0_1_010_reload_read, i32 %arg1_r_0_2_013_reload_read, i32 %arg1_r_0_3_016_reload_read, i2 %trunc_ln54" [d3.cpp:60]   --->   Operation 53 'mux' 'tmp_6' <Predicate = (!icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i32 %tmp_6" [d3.cpp:63]   --->   Operation 54 'zext' 'zext_ln63' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i32 %tmp_6" [d3.cpp:60]   --->   Operation 55 'zext' 'zext_ln60_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty, i32 2, i32 3" [d3.cpp:60]   --->   Operation 56 'partselect' 'trunc_ln9' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.54ns)   --->   "%icmp_ln60_2 = icmp_eq  i2 %trunc_ln9, i2 1" [d3.cpp:60]   --->   Operation 57 'icmp' 'icmp_ln60_2' <Predicate = (!icmp_ln54)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.41ns)   --->   "%select_ln60 = select i1 %icmp_ln60_2, i31 %arg1_r_1_04_cast_read, i31 %arg1_r_2_07_cast_read" [d3.cpp:60]   --->   Operation 58 'select' 'select_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.41ns)   --->   "%select_ln60_1 = select i1 %icmp_ln60_2, i31 %arg1_r_1_1_011_cast_read, i31 %arg1_r_2_1_012_cast_read" [d3.cpp:60]   --->   Operation 59 'select' 'select_ln60_1' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.41ns)   --->   "%select_ln60_2 = select i1 %icmp_ln60_2, i31 %arg1_r_1_2_014_cast_read, i31 %arg1_r_2_2_015_cast_read" [d3.cpp:60]   --->   Operation 60 'select' 'select_ln60_2' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.41ns)   --->   "%select_ln60_3 = select i1 %icmp_ln60_2, i31 %arg1_r_1_3_017_cast_read, i31 %arg1_r_2_3_018_cast_read" [d3.cpp:60]   --->   Operation 61 'select' 'select_ln60_3' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.52ns)   --->   "%tmp_7 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %select_ln60, i31 %select_ln60_1, i31 %select_ln60_2, i31 %select_ln60_3, i2 %empty_25" [d3.cpp:60]   --->   Operation 62 'mux' 'tmp_7' <Predicate = (!icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.67ns)   --->   "%icmp_ln60 = icmp_eq  i3 %i_3, i3 1" [d3.cpp:60]   --->   Operation 63 'icmp' 'icmp_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.67ns)   --->   "%icmp_ln60_1 = icmp_eq  i3 %i_3, i3 3" [d3.cpp:60]   --->   Operation 64 'icmp' 'icmp_ln60_1' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_4)   --->   "%or_ln60 = or i1 %icmp_ln60, i1 %icmp_ln60_1" [d3.cpp:60]   --->   Operation 65 'or' 'or_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_4)   --->   "%trunc_ln60 = trunc i31 %tmp_7" [d3.cpp:60]   --->   Operation 66 'trunc' 'trunc_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_4)   --->   "%st = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i30.i2, i30 %trunc_ln60, i2 0" [d3.cpp:60]   --->   Operation 67 'bitconcatenate' 'st' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln60_4)   --->   "%sf = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_7, i1 0" [d3.cpp:60]   --->   Operation 68 'bitconcatenate' 'sf' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln60_4 = select i1 %or_ln60, i32 %st, i32 %sf" [d3.cpp:60]   --->   Operation 69 'select' 'select_ln60_4' <Predicate = (!icmp_ln54)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i32 %select_ln60_4" [d3.cpp:60]   --->   Operation 70 'zext' 'zext_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 71 '%mul_ln60 = mul i64 %zext_ln60, i64 %zext_ln63'
ST_2 : Operation 71 [1/1] (2.62ns)   --->   "%mul_ln60 = mul i64 %zext_ln60, i64 %zext_ln63" [d3.cpp:60]   --->   Operation 71 'mul' 'mul_ln60' <Predicate = (!icmp_ln54)> <Delay = 2.62> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.52ns)   --->   "%tmp_8 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %arg1_r_1_04_cast_read, i31 %arg1_r_1_1_011_cast_read, i31 %arg1_r_1_2_014_cast_read, i31 %arg1_r_1_3_017_cast_read, i2 %empty_26" [d3.cpp:61]   --->   Operation 72 'mux' 'tmp_8' <Predicate = (!icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_8, i1 0" [d3.cpp:61]   --->   Operation 73 'bitconcatenate' 'shl_ln3' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i32 %shl_ln3" [d3.cpp:61]   --->   Operation 74 'zext' 'zext_ln61' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 75 '%mul_ln61 = mul i64 %zext_ln61, i64 %zext_ln63'
ST_2 : Operation 75 [1/1] (2.62ns)   --->   "%mul_ln61 = mul i64 %zext_ln61, i64 %zext_ln63" [d3.cpp:61]   --->   Operation 75 'mul' 'mul_ln61' <Predicate = (!icmp_ln54)> <Delay = 2.62> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (1.08ns)   --->   "%add_ln61 = add i64 %mul_ln61, i64 %add13114_load" [d3.cpp:61]   --->   Operation 76 'add' 'add_ln61' <Predicate = (!icmp_ln54)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %empty_27, i32 2" [d3.cpp:62]   --->   Operation 77 'bitselect' 'tmp' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.41ns)   --->   "%select_ln62 = select i1 %tmp, i31 %arg1_r_1_04_cast_read, i31 %arg1_r_0_01_cast_read" [d3.cpp:62]   --->   Operation 78 'select' 'select_ln62' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.41ns)   --->   "%select_ln62_1 = select i1 %tmp, i31 %arg1_r_1_1_011_cast_read, i31 %arg1_r_0_1_010_cast_read" [d3.cpp:62]   --->   Operation 79 'select' 'select_ln62_1' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.41ns)   --->   "%select_ln62_2 = select i1 %tmp, i31 %arg1_r_1_2_014_cast_read, i31 %arg1_r_0_2_013_cast_read" [d3.cpp:62]   --->   Operation 80 'select' 'select_ln62_2' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.41ns)   --->   "%select_ln62_3 = select i1 %tmp, i31 %arg1_r_1_3_017_cast_read, i31 %arg1_r_0_3_016_cast_read" [d3.cpp:62]   --->   Operation 81 'select' 'select_ln62_3' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.52ns)   --->   "%tmp_9 = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %select_ln62, i31 %select_ln62_1, i31 %select_ln62_2, i31 %select_ln62_3, i2 %empty_28" [d3.cpp:62]   --->   Operation 82 'mux' 'tmp_9' <Predicate = (!icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_9, i1 0" [d3.cpp:62]   --->   Operation 83 'bitconcatenate' 'shl_ln4' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i32 %shl_ln4" [d3.cpp:62]   --->   Operation 84 'zext' 'zext_ln62' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.67ns)   --->   "%icmp_ln63 = icmp_eq  i3 %i_3, i3 0" [d3.cpp:63]   --->   Operation 85 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%shl_ln5 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i32.i1, i32 %tmp_6, i1 0" [d3.cpp:63]   --->   Operation 86 'bitconcatenate' 'shl_ln5' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.43ns)   --->   "%select_ln63 = select i1 %icmp_ln60, i33 %shl_ln5, i33 %zext_ln60_1" [d3.cpp:63]   --->   Operation 87 'select' 'select_ln63' <Predicate = (!icmp_ln54)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i33 %select_ln63" [d3.cpp:63]   --->   Operation 88 'zext' 'zext_ln63_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (3.41ns)   --->   "%mul_ln63 = mul i64 %zext_ln63_1, i64 %zext_ln62" [d3.cpp:63]   --->   Operation 89 'mul' 'mul_ln63' <Predicate = (!icmp_ln54)> <Delay = 3.41> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.41> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln63)   --->   "%select_ln63_1 = select i1 %icmp_ln63, i64 18446744073709551615, i64 0" [d3.cpp:63]   --->   Operation 90 'select' 'select_ln63_1' <Predicate = (!icmp_ln54)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln63 = and i64 %mul157_read, i64 %select_ln63_1" [d3.cpp:63]   --->   Operation 91 'and' 'and_ln63' <Predicate = (!icmp_ln54)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63 = add i64 %mul_ln63, i64 %and_ln63" [d3.cpp:63]   --->   Operation 92 'add' 'add_ln63' <Predicate = (!icmp_ln54)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 93 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%add_ln63_1 = add i64 %add15115_load, i64 %add_ln63" [d3.cpp:63]   --->   Operation 93 'add' 'add_ln63_1' <Predicate = (!icmp_ln54)> <Delay = 0.81> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %empty_29, i32 2" [d3.cpp:64]   --->   Operation 94 'bitselect' 'tmp_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.41ns)   --->   "%select_ln64 = select i1 %tmp_1, i31 %arg1_r_1_04_cast_read, i31 %arg1_r_0_01_cast_read" [d3.cpp:64]   --->   Operation 95 'select' 'select_ln64' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.41ns)   --->   "%select_ln64_1 = select i1 %tmp_1, i31 %arg1_r_1_1_011_cast_read, i31 %arg1_r_0_1_010_cast_read" [d3.cpp:64]   --->   Operation 96 'select' 'select_ln64_1' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.41ns)   --->   "%select_ln64_2 = select i1 %tmp_1, i31 %arg1_r_1_2_014_cast_read, i31 %arg1_r_0_2_013_cast_read" [d3.cpp:64]   --->   Operation 97 'select' 'select_ln64_2' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.41ns)   --->   "%select_ln64_3 = select i1 %tmp_1, i31 %arg1_r_1_3_017_cast_read, i31 %arg1_r_0_3_016_cast_read" [d3.cpp:64]   --->   Operation 98 'select' 'select_ln64_3' <Predicate = (!icmp_ln54)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.52ns)   --->   "%tmp_s = mux i31 @_ssdm_op_Mux.ap_auto.4i31.i2, i31 %select_ln64, i31 %select_ln64_1, i31 %select_ln64_2, i31 %select_ln64_3, i2 %trunc_ln57" [d3.cpp:64]   --->   Operation 99 'mux' 'tmp_s' <Predicate = (!icmp_ln54)> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_s, i1 0" [d3.cpp:64]   --->   Operation 100 'bitconcatenate' 'shl_ln6' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i32 %shl_ln6" [d3.cpp:64]   --->   Operation 101 'zext' 'zext_ln64' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.67ns)   --->   "%icmp_ln64 = icmp_ult  i3 %i_3, i3 3" [d3.cpp:64]   --->   Operation 102 'icmp' 'icmp_ln64' <Predicate = (!icmp_ln54)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 103 '%mul_ln64 = mul i64 %zext_ln64, i64 %zext_ln63'
ST_2 : Operation 103 [1/1] (2.62ns)   --->   "%mul_ln64 = mul i64 %zext_ln64, i64 %zext_ln63" [d3.cpp:64]   --->   Operation 103 'mul' 'mul_ln64' <Predicate = (!icmp_ln54)> <Delay = 2.62> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node add_ln64)   --->   "%select_ln64_4 = select i1 %icmp_ln64, i64 18446744073709551615, i64 0" [d3.cpp:64]   --->   Operation 104 'select' 'select_ln64_4' <Predicate = (!icmp_ln54)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node add_ln64)   --->   "%and_ln64 = and i64 %mul_ln64, i64 %select_ln64_4" [d3.cpp:64]   --->   Operation 105 'and' 'and_ln64' <Predicate = (!icmp_ln54)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln64 = add i64 %and_ln64, i64 %add18016_load" [d3.cpp:64]   --->   Operation 106 'add' 'add_ln64' <Predicate = (!icmp_ln54)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.42ns)   --->   "%store_ln54 = store i3 %add_ln54, i3 %i" [d3.cpp:54]   --->   Operation 107 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 108 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln64, i64 %add18016" [d3.cpp:54]   --->   Operation 108 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 109 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln63_1, i64 %add15115" [d3.cpp:54]   --->   Operation 109 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 110 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln61, i64 %add13114" [d3.cpp:54]   --->   Operation 110 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 0.42>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%add11813_load_1 = load i64 %add11813"   --->   Operation 118 'load' 'add11813_load_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%add13114_load_1 = load i64 %add13114"   --->   Operation 119 'load' 'add13114_load_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%add15115_load_1 = load i64 %add15115"   --->   Operation 120 'load' 'add15115_load_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%add18016_load_1 = load i64 %add18016"   --->   Operation 121 'load' 'add18016_load_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add18016_out, i64 %add18016_load_1"   --->   Operation 122 'write' 'write_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add15115_out, i64 %add15115_load_1"   --->   Operation 123 'write' 'write_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add13114_out, i64 %add13114_load_1"   --->   Operation 124 'write' 'write_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %add11813_out, i64 %add11813_load_1"   --->   Operation 125 'write' 'write_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 126 'ret' 'ret_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.51>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%add11813_load = load i64 %add11813" [d3.cpp:60]   --->   Operation 111 'load' 'add11813_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%specpipeline_ln56 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d3.cpp:56]   --->   Operation 112 'specpipeline' 'specpipeline_ln56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%speclooptripcount_ln54 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4" [d3.cpp:54]   --->   Operation 113 'speclooptripcount' 'speclooptripcount_ln54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [d3.cpp:54]   --->   Operation 114 'specloopname' 'specloopname_ln54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (1.08ns)   --->   "%add_ln60 = add i64 %mul_ln60, i64 %add11813_load" [d3.cpp:60]   --->   Operation 115 'add' 'add_ln60' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.42ns)   --->   "%store_ln54 = store i64 %add_ln60, i64 %add11813" [d3.cpp:54]   --->   Operation 116 'store' 'store_ln54' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%br_ln54 = br void %for.body97" [d3.cpp:54]   --->   Operation 117 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [30]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [52]  (0.427 ns)

 <State 2>: 6.547ns
The critical path consists of the following:
	'load' operation ('i', d3.cpp:54) on local variable 'i' [59]  (0.000 ns)
	'sub' operation ('empty_29', d3.cpp:54) [78]  (0.673 ns)
	'select' operation ('select_ln64', d3.cpp:64) [123]  (0.418 ns)
	'mux' operation ('tmp_s', d3.cpp:64) [127]  (0.525 ns)
	multiplexor before operation 'mul' with delay (0.794 ns)
'mul' operation ('mul_ln64', d3.cpp:64) [131]  (2.626 ns)
	'and' operation ('and_ln64', d3.cpp:64) [133]  (0.000 ns)
	'add' operation ('add_ln64', d3.cpp:64) [134]  (1.085 ns)
	'store' operation ('store_ln54', d3.cpp:54) of variable 'add_ln64', d3.cpp:64 on local variable 'add18016' [136]  (0.427 ns)

 <State 3>: 1.512ns
The critical path consists of the following:
	'load' operation ('add11813_load', d3.cpp:60) on local variable 'add11813' [64]  (0.000 ns)
	'add' operation ('add_ln60', d3.cpp:60) [99]  (1.085 ns)
	'store' operation ('store_ln54', d3.cpp:54) of variable 'add_ln60', d3.cpp:60 on local variable 'add11813' [139]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
