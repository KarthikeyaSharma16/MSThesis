// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_23_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_1_address0,
        arr_1_ce0,
        arr_1_we0,
        arr_1_d0,
        arr_1_address1,
        arr_1_ce1,
        arr_1_q1,
        arr_address0,
        arr_ce0,
        arr_we0,
        arr_d0,
        arr_address1,
        arr_ce1,
        arr_q1,
        arg1_r_0_01_reload,
        arg1_r_1_04_reload,
        arg1_r_2_07_reload,
        arg1_r_0_1_010_reload,
        arg1_r_1_1_011_reload,
        arg1_r_2_1_012_reload,
        arg1_r_0_2_013_reload,
        arg1_r_1_2_014_reload,
        arg1_r_2_2_015_reload,
        arg1_r_0_3_016_reload,
        arg1_r_1_3_017_reload,
        arg1_r_2_3_018_reload,
        conv17,
        zext_ln30_1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] arr_1_address0;
output   arr_1_ce0;
output   arr_1_we0;
output  [63:0] arr_1_d0;
output  [2:0] arr_1_address1;
output   arr_1_ce1;
input  [63:0] arr_1_q1;
output  [2:0] arr_address0;
output   arr_ce0;
output   arr_we0;
output  [63:0] arr_d0;
output  [2:0] arr_address1;
output   arr_ce1;
input  [63:0] arr_q1;
input  [31:0] arg1_r_0_01_reload;
input  [31:0] arg1_r_1_04_reload;
input  [31:0] arg1_r_2_07_reload;
input  [31:0] arg1_r_0_1_010_reload;
input  [31:0] arg1_r_1_1_011_reload;
input  [31:0] arg1_r_2_1_012_reload;
input  [31:0] arg1_r_0_2_013_reload;
input  [31:0] arg1_r_1_2_014_reload;
input  [31:0] arg1_r_2_2_015_reload;
input  [31:0] arg1_r_0_3_016_reload;
input  [31:0] arg1_r_1_3_017_reload;
input  [31:0] arg1_r_2_3_018_reload;
input  [31:0] conv17;
input  [31:0] zext_ln30_1;

reg ap_idle;
reg arr_1_ce0;
reg arr_1_we0;
reg arr_1_ce1;
reg arr_ce0;
reg arr_we0;
reg arr_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln23_fu_228_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [62:0] zext_ln30_1_cast_fu_212_p1;
reg   [62:0] zext_ln30_1_cast_reg_490;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] conv17_cast_fu_216_p1;
reg   [63:0] conv17_cast_reg_495;
wire   [0:0] trunc_ln23_fu_234_p1;
reg   [0:0] trunc_ln23_reg_503;
wire   [31:0] tmp_fu_321_p6;
reg   [31:0] tmp_reg_509;
reg   [2:0] arr_1_addr_reg_514;
wire   [31:0] tmp_2_fu_410_p6;
reg   [31:0] tmp_2_reg_520;
reg   [2:0] arr_addr_reg_525;
wire   [63:0] zext_ln22_fu_248_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln30_3_fu_351_p1;
reg   [3:0] i_1_fu_82;
wire   [3:0] add_ln23_fu_424_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i;
wire   [31:0] mul_ln30_1_fu_204_p0;
wire   [31:0] mul_ln30_1_fu_204_p1;
wire   [31:0] mul_ln30_fu_208_p0;
wire   [31:0] mul_ln30_fu_208_p1;
wire   [1:0] lshr_ln_fu_238_p4;
wire   [3:0] empty_fu_253_p2;
wire   [1:0] tmp_s_fu_273_p4;
wire   [1:0] tmp_4_fu_285_p4;
wire   [1:0] tmp_5_fu_297_p4;
wire   [1:0] tmp_6_fu_309_p4;
wire   [31:0] tmp_s_fu_273_p5;
wire   [31:0] tmp_4_fu_285_p5;
wire   [31:0] tmp_5_fu_297_p5;
wire   [31:0] tmp_6_fu_309_p5;
wire   [1:0] trunc_ln26_fu_259_p1;
wire   [3:0] add_ln29_fu_335_p2;
wire   [2:0] lshr_ln22_1_fu_341_p4;
wire   [3:0] add_ln30_1_fu_356_p2;
wire   [1:0] trunc_ln30_1_fu_362_p4;
wire   [0:0] icmp_ln30_fu_372_p2;
wire   [31:0] tmp_2_fu_410_p1;
wire   [31:0] tmp_2_fu_410_p2;
wire   [31:0] tmp_2_fu_410_p3;
wire   [31:0] tmp_2_fu_410_p4;
wire   [63:0] tmp_1_fu_439_p4;
wire   [63:0] mul_ln30_fu_208_p2;
wire   [62:0] mul_ln30_1_fu_204_p2;
wire   [63:0] tmp_3_fu_455_p4;
wire   [63:0] shl_ln_fu_468_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [62:0] mul_ln30_1_fu_204_p10;
wire   [63:0] mul_ln30_fu_208_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U17(
    .din0(mul_ln30_1_fu_204_p0),
    .din1(mul_ln30_1_fu_204_p1),
    .dout(mul_ln30_1_fu_204_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U18(
    .din0(mul_ln30_fu_208_p0),
    .din1(mul_ln30_fu_208_p1),
    .dout(mul_ln30_fu_208_p2)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U19(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_1_04_reload),
    .din2(arg1_r_2_07_reload),
    .din3(tmp_s_fu_273_p4),
    .dout(tmp_s_fu_273_p5)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U20(
    .din0(arg1_r_0_1_010_reload),
    .din1(arg1_r_1_1_011_reload),
    .din2(arg1_r_2_1_012_reload),
    .din3(tmp_4_fu_285_p4),
    .dout(tmp_4_fu_285_p5)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U21(
    .din0(arg1_r_0_2_013_reload),
    .din1(arg1_r_1_2_014_reload),
    .din2(arg1_r_2_2_015_reload),
    .din3(tmp_5_fu_297_p4),
    .dout(tmp_5_fu_297_p5)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U22(
    .din0(arg1_r_0_3_016_reload),
    .din1(arg1_r_1_3_017_reload),
    .din2(arg1_r_2_3_018_reload),
    .din3(tmp_6_fu_309_p4),
    .dout(tmp_6_fu_309_p5)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U23(
    .din0(tmp_s_fu_273_p5),
    .din1(tmp_4_fu_285_p5),
    .din2(tmp_5_fu_297_p5),
    .din3(tmp_6_fu_309_p5),
    .din4(trunc_ln26_fu_259_p1),
    .dout(tmp_fu_321_p6)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U24(
    .din0(tmp_2_fu_410_p1),
    .din1(tmp_2_fu_410_p2),
    .din2(tmp_2_fu_410_p3),
    .din3(tmp_2_fu_410_p4),
    .din4(trunc_ln26_fu_259_p1),
    .dout(tmp_2_fu_410_p6)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U25(
    .din0(64'd0),
    .din1(arr_1_q1),
    .din2(trunc_ln23_reg_503),
    .dout(tmp_1_fu_439_p4)
);

fiat_25519_carry_square_mux_2_1_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_2_1_64_1_1_U26(
    .din0(64'd0),
    .din1(arr_q1),
    .din2(trunc_ln23_reg_503),
    .dout(tmp_3_fu_455_p4)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln23_fu_228_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_82 <= add_ln23_fu_424_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_82 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_1_addr_reg_514[1 : 0] <= zext_ln22_fu_248_p1[1 : 0];
        arr_addr_reg_525 <= zext_ln30_3_fu_351_p1;
        tmp_2_reg_520 <= tmp_2_fu_410_p6;
        tmp_reg_509 <= tmp_fu_321_p6;
        trunc_ln23_reg_503 <= trunc_ln23_fu_234_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv17_cast_reg_495[31 : 0] <= conv17_cast_fu_216_p1[31 : 0];
        zext_ln30_1_cast_reg_490[31 : 0] <= zext_ln30_1_cast_fu_212_p1[31 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_228_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 4'd1;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_1_ce0 = 1'b1;
    end else begin
        arr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_1_ce1 = 1'b1;
    end else begin
        arr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_1_we0 = 1'b1;
    end else begin
        arr_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_ce0 = 1'b1;
    end else begin
        arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_ce1 = 1'b1;
    end else begin
        arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_we0 = 1'b1;
    end else begin
        arr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_424_p2 = (ap_sig_allocacmp_i + 4'd2);

assign add_ln29_fu_335_p2 = (ap_sig_allocacmp_i + 4'd1);

assign add_ln30_1_fu_356_p2 = ($signed(empty_fu_253_p2) + $signed(4'd15));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_1_address0 = arr_1_addr_reg_514;

assign arr_1_address1 = zext_ln22_fu_248_p1;

assign arr_1_d0 = (tmp_1_fu_439_p4 + mul_ln30_fu_208_p2);

assign arr_address0 = arr_addr_reg_525;

assign arr_address1 = zext_ln30_3_fu_351_p1;

assign arr_d0 = (tmp_3_fu_455_p4 + shl_ln_fu_468_p3);

assign conv17_cast_fu_216_p1 = conv17;

assign empty_fu_253_p2 = ($signed(4'd9) - $signed(ap_sig_allocacmp_i));

assign icmp_ln23_fu_228_p2 = ((ap_sig_allocacmp_i < 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_372_p2 = ((trunc_ln30_1_fu_362_p4 == 2'd0) ? 1'b1 : 1'b0);

assign lshr_ln22_1_fu_341_p4 = {{add_ln29_fu_335_p2[3:1]}};

assign lshr_ln_fu_238_p4 = {{ap_sig_allocacmp_i[2:1]}};

assign mul_ln30_1_fu_204_p0 = zext_ln30_1_cast_reg_490;

assign mul_ln30_1_fu_204_p1 = mul_ln30_1_fu_204_p10;

assign mul_ln30_1_fu_204_p10 = tmp_2_reg_520;

assign mul_ln30_fu_208_p0 = mul_ln30_fu_208_p00;

assign mul_ln30_fu_208_p00 = tmp_reg_509;

assign mul_ln30_fu_208_p1 = conv17_cast_reg_495;

assign shl_ln_fu_468_p3 = {{mul_ln30_1_fu_204_p2}, {1'd0}};

assign tmp_2_fu_410_p1 = ((icmp_ln30_fu_372_p2[0:0] == 1'b1) ? arg1_r_0_3_016_reload : arg1_r_1_3_017_reload);

assign tmp_2_fu_410_p2 = ((icmp_ln30_fu_372_p2[0:0] == 1'b1) ? arg1_r_0_01_reload : arg1_r_1_04_reload);

assign tmp_2_fu_410_p3 = ((icmp_ln30_fu_372_p2[0:0] == 1'b1) ? arg1_r_0_1_010_reload : arg1_r_1_1_011_reload);

assign tmp_2_fu_410_p4 = ((icmp_ln30_fu_372_p2[0:0] == 1'b1) ? arg1_r_0_2_013_reload : arg1_r_1_2_014_reload);

assign tmp_4_fu_285_p4 = {{empty_fu_253_p2[3:2]}};

assign tmp_5_fu_297_p4 = {{empty_fu_253_p2[3:2]}};

assign tmp_6_fu_309_p4 = {{empty_fu_253_p2[3:2]}};

assign tmp_s_fu_273_p4 = {{empty_fu_253_p2[3:2]}};

assign trunc_ln23_fu_234_p1 = ap_sig_allocacmp_i[0:0];

assign trunc_ln26_fu_259_p1 = empty_fu_253_p2[1:0];

assign trunc_ln30_1_fu_362_p4 = {{add_ln30_1_fu_356_p2[3:2]}};

assign zext_ln22_fu_248_p1 = lshr_ln_fu_238_p4;

assign zext_ln30_1_cast_fu_212_p1 = zext_ln30_1;

assign zext_ln30_3_fu_351_p1 = lshr_ln22_1_fu_341_p4;

always @ (posedge ap_clk) begin
    zext_ln30_1_cast_reg_490[62:32] <= 31'b0000000000000000000000000000000;
    conv17_cast_reg_495[63:32] <= 32'b00000000000000000000000000000000;
    arr_1_addr_reg_514[2] <= 1'b0;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_23_1
