// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_3_address0,
        arr_3_ce0,
        arr_3_we0,
        arr_3_d0,
        arr_3_address1,
        arr_3_ce1,
        arr_3_q1,
        arr_2_address0,
        arr_2_ce0,
        arr_2_we0,
        arr_2_d0,
        arr_2_address1,
        arr_2_ce1,
        arr_2_q1,
        arr_1_address0,
        arr_1_ce0,
        arr_1_we0,
        arr_1_d0,
        arr_1_address1,
        arr_1_ce1,
        arr_1_q1,
        arr_address0,
        arr_ce0,
        arr_we0,
        arr_d0,
        arr_address1,
        arr_ce1,
        arr_q1,
        arg1_r_1_address0,
        arg1_r_1_ce0,
        arg1_r_1_q0,
        zext_ln40,
        arg1_r_address0,
        arg1_r_ce0,
        arg1_r_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] arr_3_address0;
output   arr_3_ce0;
output   arr_3_we0;
output  [63:0] arr_3_d0;
output  [1:0] arr_3_address1;
output   arr_3_ce1;
input  [63:0] arr_3_q1;
output  [1:0] arr_2_address0;
output   arr_2_ce0;
output   arr_2_we0;
output  [63:0] arr_2_d0;
output  [1:0] arr_2_address1;
output   arr_2_ce1;
input  [63:0] arr_2_q1;
output  [1:0] arr_1_address0;
output   arr_1_ce0;
output   arr_1_we0;
output  [63:0] arr_1_d0;
output  [1:0] arr_1_address1;
output   arr_1_ce1;
input  [63:0] arr_1_q1;
output  [1:0] arr_address0;
output   arr_ce0;
output   arr_we0;
output  [63:0] arr_d0;
output  [1:0] arr_address1;
output   arr_ce1;
input  [63:0] arr_q1;
output  [2:0] arg1_r_1_address0;
output   arg1_r_1_ce0;
input  [31:0] arg1_r_1_q0;
input  [31:0] zext_ln40;
output  [2:0] arg1_r_address0;
output   arg1_r_ce0;
input  [31:0] arg1_r_q0;

reg ap_idle;
reg[1:0] arr_3_address0;
reg arr_3_ce0;
reg arr_3_we0;
reg[63:0] arr_3_d0;
reg[1:0] arr_3_address1;
reg arr_3_ce1;
reg[1:0] arr_2_address0;
reg arr_2_ce0;
reg arr_2_we0;
reg[63:0] arr_2_d0;
reg[1:0] arr_2_address1;
reg arr_2_ce1;
reg[1:0] arr_1_address0;
reg arr_1_ce0;
reg arr_1_we0;
reg[63:0] arr_1_d0;
reg[1:0] arr_1_address1;
reg arr_1_ce1;
reg[1:0] arr_address0;
reg arr_ce0;
reg arr_we0;
reg[63:0] arr_d0;
reg[1:0] arr_address1;
reg arr_ce1;
reg arg1_r_1_ce0;
reg arg1_r_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln34_fu_228_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [62:0] zext_ln40_cast_fu_216_p1;
reg   [62:0] zext_ln40_cast_reg_433;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_reg_439;
wire   [1:0] trunc_ln34_1_fu_234_p1;
reg   [1:0] trunc_ln34_1_reg_450;
reg   [1:0] trunc_ln34_1_reg_450_pp0_iter1_reg;
wire   [0:0] trunc_ln37_fu_273_p1;
reg   [0:0] trunc_ln37_reg_456;
reg   [1:0] arr_addr_reg_467;
reg   [1:0] arr_1_addr_reg_473;
reg   [1:0] arr_2_addr_reg_479;
reg   [1:0] arr_3_addr_reg_485;
reg   [1:0] arr_addr_1_reg_496;
reg   [1:0] arr_1_addr_1_reg_502;
reg   [1:0] arr_2_addr_1_reg_508;
reg   [1:0] arr_3_addr_1_reg_514;
wire   [63:0] zext_ln37_fu_287_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln22_fu_259_p1;
wire   [63:0] zext_ln40_2_fu_308_p1;
wire   [63:0] zext_ln40_4_fu_328_p1;
reg   [3:0] i_2_fu_72;
wire   [3:0] add_ln34_fu_238_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i;
wire   [63:0] add_ln40_fu_371_p2;
wire   [63:0] add_ln40_3_fu_416_p2;
wire   [31:0] mul_ln40_1_fu_208_p0;
wire   [31:0] mul_ln40_1_fu_208_p1;
wire   [31:0] mul_ln40_fu_212_p0;
wire   [31:0] mul_ln40_fu_212_p1;
wire   [0:0] tmp_fu_252_p3;
wire   [2:0] trunc_ln34_fu_249_p1;
wire   [2:0] empty_fu_267_p2;
wire   [1:0] lshr_ln4_fu_277_p4;
wire   [2:0] add_ln40_1_fu_292_p2;
wire   [1:0] lshr_ln5_fu_298_p4;
wire   [3:0] add_ln40_2_fu_313_p2;
wire   [1:0] lshr_ln40_1_fu_318_p4;
wire   [31:0] tmp_8_fu_336_p4;
wire   [62:0] mul_ln40_1_fu_208_p2;
wire   [63:0] tmp_9_fu_358_p6;
wire   [63:0] shl_ln1_fu_350_p3;
wire   [31:0] tmp_s_fu_381_p4;
wire   [62:0] mul_ln40_fu_212_p2;
wire   [63:0] tmp_2_fu_403_p6;
wire   [63:0] shl_ln40_1_fu_395_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [62:0] mul_ln40_1_fu_208_p10;
wire   [62:0] mul_ln40_fu_212_p10;
reg    ap_condition_149;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U28(
    .din0(mul_ln40_1_fu_208_p0),
    .din1(mul_ln40_1_fu_208_p1),
    .dout(mul_ln40_1_fu_208_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U29(
    .din0(mul_ln40_fu_212_p0),
    .din1(mul_ln40_fu_212_p1),
    .dout(mul_ln40_fu_212_p2)
);

fiat_25519_carry_square_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U30(
    .din0(32'd0),
    .din1(arg1_r_1_q0),
    .din2(trunc_ln37_reg_456),
    .dout(tmp_8_fu_336_p4)
);

fiat_25519_carry_square_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U31(
    .din0(arr_q1),
    .din1(arr_1_q1),
    .din2(arr_2_q1),
    .din3(arr_3_q1),
    .din4(trunc_ln34_1_reg_450_pp0_iter1_reg),
    .dout(tmp_9_fu_358_p6)
);

fiat_25519_carry_square_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U32(
    .din0(32'd0),
    .din1(arg1_r_q0),
    .din2(trunc_ln37_reg_456),
    .dout(tmp_s_fu_381_p4)
);

fiat_25519_carry_square_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U33(
    .din0(arr_1_q1),
    .din1(arr_2_q1),
    .din2(arr_3_q1),
    .din3(arr_q1),
    .din4(trunc_ln34_1_reg_450_pp0_iter1_reg),
    .dout(tmp_2_fu_403_p6)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln34_fu_228_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_2_fu_72 <= add_ln34_fu_238_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_2_fu_72 <= 4'd3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        arr_1_addr_1_reg_502 <= zext_ln40_4_fu_328_p1;
        arr_1_addr_reg_473[0] <= zext_ln22_fu_259_p1[0];
        arr_2_addr_1_reg_508 <= zext_ln40_4_fu_328_p1;
        arr_2_addr_reg_479[0] <= zext_ln22_fu_259_p1[0];
        arr_3_addr_1_reg_514 <= zext_ln40_4_fu_328_p1;
        arr_3_addr_reg_485[0] <= zext_ln22_fu_259_p1[0];
        arr_addr_1_reg_496 <= zext_ln40_4_fu_328_p1;
        arr_addr_reg_467[0] <= zext_ln22_fu_259_p1[0];
        i_reg_439 <= ap_sig_allocacmp_i;
        trunc_ln34_1_reg_450_pp0_iter1_reg <= trunc_ln34_1_reg_450;
        trunc_ln37_reg_456 <= trunc_ln37_fu_273_p1;
        zext_ln40_cast_reg_433[31 : 0] <= zext_ln40_cast_fu_216_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln34_1_reg_450 <= trunc_ln34_1_fu_234_p1;
    end
end

always @ (*) begin
    if (((icmp_ln34_fu_228_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 4'd3;
    end else begin
        ap_sig_allocacmp_i = i_2_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arg1_r_1_ce0 = 1'b1;
    end else begin
        arg1_r_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arg1_r_ce0 = 1'b1;
    end else begin
        arg1_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)) begin
            arr_1_address0 = arr_1_addr_1_reg_502;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) begin
            arr_1_address0 = arr_1_addr_reg_473;
        end else begin
            arr_1_address0 = 'bx;
        end
    end else begin
        arr_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_149)) begin
        if ((trunc_ln34_1_reg_450 == 2'd0)) begin
            arr_1_address1 = zext_ln40_4_fu_328_p1;
        end else if ((trunc_ln34_1_reg_450 == 2'd1)) begin
            arr_1_address1 = zext_ln22_fu_259_p1;
        end else begin
            arr_1_address1 = 'bx;
        end
    end else begin
        arr_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)))) begin
        arr_1_ce0 = 1'b1;
    end else begin
        arr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd0)))) begin
        arr_1_ce1 = 1'b1;
    end else begin
        arr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)) begin
            arr_1_d0 = add_ln40_3_fu_416_p2;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) begin
            arr_1_d0 = add_ln40_fu_371_p2;
        end else begin
            arr_1_d0 = 'bx;
        end
    end else begin
        arr_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)))) begin
        arr_1_we0 = 1'b1;
    end else begin
        arr_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) begin
            arr_2_address0 = arr_2_addr_1_reg_508;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) begin
            arr_2_address0 = arr_2_addr_reg_479;
        end else begin
            arr_2_address0 = 'bx;
        end
    end else begin
        arr_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_149)) begin
        if ((trunc_ln34_1_reg_450 == 2'd1)) begin
            arr_2_address1 = zext_ln40_4_fu_328_p1;
        end else if ((trunc_ln34_1_reg_450 == 2'd2)) begin
            arr_2_address1 = zext_ln22_fu_259_p1;
        end else begin
            arr_2_address1 = 'bx;
        end
    end else begin
        arr_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)))) begin
        arr_2_ce0 = 1'b1;
    end else begin
        arr_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd1)))) begin
        arr_2_ce1 = 1'b1;
    end else begin
        arr_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)) begin
            arr_2_d0 = add_ln40_3_fu_416_p2;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) begin
            arr_2_d0 = add_ln40_fu_371_p2;
        end else begin
            arr_2_d0 = 'bx;
        end
    end else begin
        arr_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd1)))) begin
        arr_2_we0 = 1'b1;
    end else begin
        arr_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) begin
            arr_3_address0 = arr_3_addr_reg_485;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) begin
            arr_3_address0 = arr_3_addr_1_reg_514;
        end else begin
            arr_3_address0 = 'bx;
        end
    end else begin
        arr_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_149)) begin
        if ((trunc_ln34_1_reg_450 == 2'd2)) begin
            arr_3_address1 = zext_ln40_4_fu_328_p1;
        end else if ((trunc_ln34_1_reg_450 == 2'd3)) begin
            arr_3_address1 = zext_ln22_fu_259_p1;
        end else begin
            arr_3_address1 = 'bx;
        end
    end else begin
        arr_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)))) begin
        arr_3_ce0 = 1'b1;
    end else begin
        arr_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd3)))) begin
        arr_3_ce1 = 1'b1;
    end else begin
        arr_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) begin
            arr_3_d0 = add_ln40_fu_371_p2;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) begin
            arr_3_d0 = add_ln40_3_fu_416_p2;
        end else begin
            arr_3_d0 = 'bx;
        end
    end else begin
        arr_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)))) begin
        arr_3_we0 = 1'b1;
    end else begin
        arr_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) begin
            arr_address0 = arr_addr_1_reg_496;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)) begin
            arr_address0 = arr_addr_reg_467;
        end else begin
            arr_address0 = 'bx;
        end
    end else begin
        arr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_149)) begin
        if ((trunc_ln34_1_reg_450 == 2'd3)) begin
            arr_address1 = zext_ln40_4_fu_328_p1;
        end else if ((trunc_ln34_1_reg_450 == 2'd0)) begin
            arr_address1 = zext_ln22_fu_259_p1;
        end else begin
            arr_address1 = 'bx;
        end
    end else begin
        arr_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)))) begin
        arr_ce0 = 1'b1;
    end else begin
        arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln34_1_reg_450 == 2'd0)))) begin
        arr_ce1 = 1'b1;
    end else begin
        arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) begin
            arr_d0 = add_ln40_3_fu_416_p2;
        end else if ((trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)) begin
            arr_d0 = add_ln40_fu_371_p2;
        end else begin
            arr_d0 = 'bx;
        end
    end else begin
        arr_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln34_1_reg_450_pp0_iter1_reg == 2'd0)))) begin
        arr_we0 = 1'b1;
    end else begin
        arr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_fu_238_p2 = (ap_sig_allocacmp_i + 4'd2);

assign add_ln40_1_fu_292_p2 = ($signed(empty_fu_267_p2) + $signed(3'd7));

assign add_ln40_2_fu_313_p2 = (i_reg_439 + 4'd1);

assign add_ln40_3_fu_416_p2 = (tmp_2_fu_403_p6 + shl_ln40_1_fu_395_p3);

assign add_ln40_fu_371_p2 = (tmp_9_fu_358_p6 + shl_ln1_fu_350_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_149 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arg1_r_1_address0 = zext_ln37_fu_287_p1;

assign arg1_r_address0 = zext_ln40_2_fu_308_p1;

assign empty_fu_267_p2 = (3'd2 - trunc_ln34_fu_249_p1);

assign icmp_ln34_fu_228_p2 = ((ap_sig_allocacmp_i < 4'd9) ? 1'b1 : 1'b0);

assign lshr_ln40_1_fu_318_p4 = {{add_ln40_2_fu_313_p2[3:2]}};

assign lshr_ln4_fu_277_p4 = {{empty_fu_267_p2[2:1]}};

assign lshr_ln5_fu_298_p4 = {{add_ln40_1_fu_292_p2[2:1]}};

assign mul_ln40_1_fu_208_p0 = zext_ln40_cast_reg_433;

assign mul_ln40_1_fu_208_p1 = mul_ln40_1_fu_208_p10;

assign mul_ln40_1_fu_208_p10 = tmp_8_fu_336_p4;

assign mul_ln40_fu_212_p0 = zext_ln40_cast_reg_433;

assign mul_ln40_fu_212_p1 = mul_ln40_fu_212_p10;

assign mul_ln40_fu_212_p10 = tmp_s_fu_381_p4;

assign shl_ln1_fu_350_p3 = {{mul_ln40_1_fu_208_p2}, {1'd0}};

assign shl_ln40_1_fu_395_p3 = {{mul_ln40_fu_212_p2}, {1'd0}};

assign tmp_fu_252_p3 = i_reg_439[32'd2];

assign trunc_ln34_1_fu_234_p1 = ap_sig_allocacmp_i[1:0];

assign trunc_ln34_fu_249_p1 = i_reg_439[2:0];

assign trunc_ln37_fu_273_p1 = empty_fu_267_p2[0:0];

assign zext_ln22_fu_259_p1 = tmp_fu_252_p3;

assign zext_ln37_fu_287_p1 = lshr_ln4_fu_277_p4;

assign zext_ln40_2_fu_308_p1 = lshr_ln5_fu_298_p4;

assign zext_ln40_4_fu_328_p1 = lshr_ln40_1_fu_318_p4;

assign zext_ln40_cast_fu_216_p1 = zext_ln40;

always @ (posedge ap_clk) begin
    zext_ln40_cast_reg_433[62:32] <= 31'b0000000000000000000000000000000;
    arr_addr_reg_467[1] <= 1'b0;
    arr_1_addr_reg_473[1] <= 1'b0;
    arr_2_addr_reg_479[1] <= 1'b0;
    arr_3_addr_reg_485[1] <= 1'b0;
end

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3
