// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_load_4,
        arr_2_load_2,
        arr_1_load_2,
        arr_load_3,
        arg1_r_reload,
        arg1_r_2_reload,
        arg1_r_8_cast,
        arg1_r_6_cast,
        arg1_r_7_cast,
        arg1_r_5_cast,
        arg1_r_4_reload,
        arg1_r_3_reload,
        arg1_r_1_reload,
        mul157,
        add180_116_out,
        add180_116_out_ap_vld,
        add151_115_out,
        add151_115_out_ap_vld,
        add131_114_out,
        add131_114_out_ap_vld,
        add118_113_out,
        add118_113_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr_load_4;
input  [63:0] arr_2_load_2;
input  [63:0] arr_1_load_2;
input  [63:0] arr_load_3;
input  [31:0] arg1_r_reload;
input  [31:0] arg1_r_2_reload;
input  [30:0] arg1_r_8_cast;
input  [30:0] arg1_r_6_cast;
input  [30:0] arg1_r_7_cast;
input  [30:0] arg1_r_5_cast;
input  [30:0] arg1_r_4_reload;
input  [31:0] arg1_r_3_reload;
input  [31:0] arg1_r_1_reload;
input  [63:0] mul157;
output  [63:0] add180_116_out;
output   add180_116_out_ap_vld;
output  [63:0] add151_115_out;
output   add151_115_out_ap_vld;
output  [63:0] add131_114_out;
output   add131_114_out_ap_vld;
output  [63:0] add118_113_out;
output   add118_113_out_ap_vld;

reg ap_idle;
reg add180_116_out_ap_vld;
reg add151_115_out_ap_vld;
reg add131_114_out_ap_vld;
reg add118_113_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_282_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] add118_113_fu_90;
wire   [63:0] add_ln60_1_fu_494_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] add131_114_fu_94;
wire   [63:0] add_ln61_1_fu_506_p2;
reg   [63:0] add151_115_fu_98;
wire   [63:0] add_ln62_2_fu_558_p2;
reg   [63:0] add180_116_fu_102;
wire   [63:0] add_ln64_1_fu_613_p2;
reg   [2:0] i_fu_106;
wire   [2:0] add_ln54_fu_619_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln60_fu_222_p0;
wire   [31:0] mul_ln60_fu_222_p1;
wire   [63:0] zext_ln60_fu_316_p1;
wire   [31:0] mul_ln60_1_fu_226_p0;
wire   [31:0] mul_ln60_1_fu_226_p1;
wire   [63:0] zext_ln62_1_fu_434_p1;
wire   [31:0] mul_ln61_fu_230_p0;
wire   [31:0] mul_ln61_fu_230_p1;
wire   [31:0] mul_ln61_1_fu_234_p0;
wire   [31:0] mul_ln61_1_fu_234_p1;
wire   [63:0] zext_ln62_fu_382_p1;
wire   [31:0] mul_ln62_1_fu_238_p0;
wire   [31:0] mul_ln62_1_fu_238_p1;
wire   [31:0] mul_ln64_fu_242_p0;
wire   [63:0] zext_ln64_fu_412_p1;
wire   [31:0] mul_ln64_fu_242_p1;
wire   [31:0] mul_ln64_1_fu_246_p0;
wire   [31:0] mul_ln64_1_fu_246_p1;
wire   [32:0] mul_ln62_fu_250_p0;
wire   [31:0] mul_ln62_fu_250_p1;
wire   [1:0] trunc_ln54_fu_302_p1;
wire   [31:0] tmp_s_fu_306_p5;
wire   [0:0] icmp_ln60_2_fu_324_p2;
wire   [30:0] select_ln60_fu_330_p3;
wire   [31:0] shl_ln3_fu_336_p3;
wire   [30:0] select_ln61_fu_349_p3;
wire   [31:0] shl_ln4_fu_355_p3;
wire   [30:0] select_ln62_fu_368_p3;
wire   [31:0] shl_ln5_fu_374_p3;
wire   [30:0] trunc_ln64_fu_394_p1;
wire   [30:0] select_ln64_fu_397_p3;
wire   [31:0] shl_ln6_fu_404_p3;
wire   [31:0] tmp_3_fu_424_p5;
wire   [1:0] or_ln60_fu_418_p2;
wire   [0:0] icmp_ln60_fu_445_p2;
wire   [0:0] icmp_ln60_1_fu_451_p2;
wire   [29:0] trunc_ln60_fu_463_p1;
wire   [0:0] or_ln60_1_fu_457_p2;
wire   [31:0] st_fu_467_p3;
wire   [31:0] select_ln60_1_fu_475_p3;
wire   [63:0] mul_ln60_1_fu_226_p2;
wire   [63:0] mul_ln60_fu_222_p2;
wire   [63:0] add_ln60_fu_488_p2;
wire   [63:0] mul_ln61_1_fu_234_p2;
wire   [63:0] mul_ln61_fu_230_p2;
wire   [63:0] add_ln61_fu_500_p2;
wire   [32:0] shl_ln62_1_fu_512_p3;
wire   [32:0] zext_ln60_3_fu_441_p1;
wire   [32:0] select_ln62_1_fu_520_p3;
wire   [0:0] icmp_ln63_fu_388_p2;
wire   [63:0] select_ln62_2_fu_533_p3;
wire   [63:0] mul_ln62_1_fu_238_p2;
wire   [63:0] mul_ln62_fu_250_p2;
wire   [63:0] add_ln62_fu_546_p2;
wire   [63:0] and_ln62_fu_541_p2;
wire   [63:0] add_ln62_1_fu_552_p2;
wire   [30:0] trunc_ln64_1_fu_564_p1;
wire   [30:0] select_ln64_1_fu_567_p3;
wire   [31:0] shl_ln64_1_fu_574_p3;
wire   [0:0] icmp_ln64_fu_587_p2;
wire   [63:0] mul_ln64_1_fu_246_p2;
wire   [63:0] select_ln64_2_fu_593_p3;
wire   [63:0] and_ln64_fu_601_p2;
wire   [63:0] mul_ln64_fu_242_p2;
wire   [63:0] add_ln64_fu_607_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln60_1_fu_226_p00;
wire   [63:0] mul_ln60_fu_222_p00;
wire   [63:0] mul_ln61_fu_230_p00;
wire   [63:0] mul_ln62_fu_250_p00;
wire   [63:0] mul_ln64_1_fu_246_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U75(
    .din0(mul_ln60_fu_222_p0),
    .din1(mul_ln60_fu_222_p1),
    .dout(mul_ln60_fu_222_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U76(
    .din0(mul_ln60_1_fu_226_p0),
    .din1(mul_ln60_1_fu_226_p1),
    .dout(mul_ln60_1_fu_226_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U77(
    .din0(mul_ln61_fu_230_p0),
    .din1(mul_ln61_fu_230_p1),
    .dout(mul_ln61_fu_230_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U78(
    .din0(mul_ln61_1_fu_234_p0),
    .din1(mul_ln61_1_fu_234_p1),
    .dout(mul_ln61_1_fu_234_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U79(
    .din0(mul_ln62_1_fu_238_p0),
    .din1(mul_ln62_1_fu_238_p1),
    .dout(mul_ln62_1_fu_238_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U80(
    .din0(mul_ln64_fu_242_p0),
    .din1(mul_ln64_fu_242_p1),
    .dout(mul_ln64_fu_242_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U81(
    .din0(mul_ln64_1_fu_246_p0),
    .din1(mul_ln64_1_fu_246_p1),
    .dout(mul_ln64_1_fu_246_p2)
);

fiat_25519_carry_square_mul_33ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33ns_32ns_64_1_1_U82(
    .din0(mul_ln62_fu_250_p0),
    .din1(mul_ln62_fu_250_p1),
    .dout(mul_ln62_fu_250_p2)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U83(
    .din0(arg1_r_reload),
    .din1(32'd0),
    .din2(arg1_r_2_reload),
    .din3(trunc_ln54_fu_302_p1),
    .dout(tmp_s_fu_306_p5)
);

fiat_25519_carry_square_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U84(
    .din0(arg1_r_1_reload),
    .din1(32'd0),
    .din2(arg1_r_3_reload),
    .din3(trunc_ln54_fu_302_p1),
    .dout(tmp_3_fu_424_p5)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add118_113_fu_90 <= arr_load_3;
        end else if (((tmp_fu_282_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add118_113_fu_90 <= add_ln60_1_fu_494_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add131_114_fu_94 <= arr_1_load_2;
        end else if (((tmp_fu_282_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add131_114_fu_94 <= add_ln61_1_fu_506_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add151_115_fu_98 <= arr_2_load_2;
        end else if (((tmp_fu_282_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add151_115_fu_98 <= add_ln62_2_fu_558_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add180_116_fu_102 <= arr_load_4;
        end else if (((tmp_fu_282_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add180_116_fu_102 <= add_ln64_1_fu_613_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_106 <= 3'd0;
        end else if (((tmp_fu_282_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_106 <= add_ln54_fu_619_p2;
        end
    end
end

always @ (*) begin
    if (((tmp_fu_282_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add118_113_out_ap_vld = 1'b1;
    end else begin
        add118_113_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_282_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add131_114_out_ap_vld = 1'b1;
    end else begin
        add131_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_282_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add151_115_out_ap_vld = 1'b1;
    end else begin
        add151_115_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_282_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add180_116_out_ap_vld = 1'b1;
    end else begin
        add180_116_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_282_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add118_113_out = add118_113_fu_90;

assign add131_114_out = add131_114_fu_94;

assign add151_115_out = add151_115_fu_98;

assign add180_116_out = add180_116_fu_102;

assign add_ln54_fu_619_p2 = (i_fu_106 + 3'd2);

assign add_ln60_1_fu_494_p2 = (add118_113_fu_90 + add_ln60_fu_488_p2);

assign add_ln60_fu_488_p2 = (mul_ln60_1_fu_226_p2 + mul_ln60_fu_222_p2);

assign add_ln61_1_fu_506_p2 = (add131_114_fu_94 + add_ln61_fu_500_p2);

assign add_ln61_fu_500_p2 = (mul_ln61_1_fu_234_p2 + mul_ln61_fu_230_p2);

assign add_ln62_1_fu_552_p2 = (add_ln62_fu_546_p2 + and_ln62_fu_541_p2);

assign add_ln62_2_fu_558_p2 = (add151_115_fu_98 + add_ln62_1_fu_552_p2);

assign add_ln62_fu_546_p2 = (mul_ln62_1_fu_238_p2 + mul_ln62_fu_250_p2);

assign add_ln64_1_fu_613_p2 = (add180_116_fu_102 + add_ln64_fu_607_p2);

assign add_ln64_fu_607_p2 = (and_ln64_fu_601_p2 + mul_ln64_fu_242_p2);

assign and_ln62_fu_541_p2 = (select_ln62_2_fu_533_p3 & mul157);

assign and_ln64_fu_601_p2 = (select_ln64_2_fu_593_p3 & mul_ln64_1_fu_246_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln60_1_fu_451_p2 = ((or_ln60_fu_418_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln60_2_fu_324_p2 = ((trunc_ln54_fu_302_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_445_p2 = ((or_ln60_fu_418_p2 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_388_p2 = ((i_fu_106 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_587_p2 = ((or_ln60_fu_418_p2 != 2'd3) ? 1'b1 : 1'b0);

assign mul_ln60_1_fu_226_p0 = mul_ln60_1_fu_226_p00;

assign mul_ln60_1_fu_226_p00 = select_ln60_1_fu_475_p3;

assign mul_ln60_1_fu_226_p1 = zext_ln62_1_fu_434_p1;

assign mul_ln60_fu_222_p0 = mul_ln60_fu_222_p00;

assign mul_ln60_fu_222_p00 = shl_ln3_fu_336_p3;

assign mul_ln60_fu_222_p1 = zext_ln60_fu_316_p1;

assign mul_ln61_1_fu_234_p0 = zext_ln62_1_fu_434_p1;

assign mul_ln61_1_fu_234_p1 = zext_ln62_fu_382_p1;

assign mul_ln61_fu_230_p0 = mul_ln61_fu_230_p00;

assign mul_ln61_fu_230_p00 = shl_ln4_fu_355_p3;

assign mul_ln61_fu_230_p1 = zext_ln60_fu_316_p1;

assign mul_ln62_1_fu_238_p0 = zext_ln62_fu_382_p1;

assign mul_ln62_1_fu_238_p1 = zext_ln60_fu_316_p1;

assign mul_ln62_fu_250_p0 = mul_ln62_fu_250_p00;

assign mul_ln62_fu_250_p00 = select_ln62_1_fu_520_p3;

assign mul_ln62_fu_250_p1 = zext_ln64_fu_412_p1;

assign mul_ln64_1_fu_246_p0 = mul_ln64_1_fu_246_p00;

assign mul_ln64_1_fu_246_p00 = shl_ln64_1_fu_574_p3;

assign mul_ln64_1_fu_246_p1 = zext_ln62_1_fu_434_p1;

assign mul_ln64_fu_242_p0 = zext_ln64_fu_412_p1;

assign mul_ln64_fu_242_p1 = zext_ln60_fu_316_p1;

assign or_ln60_1_fu_457_p2 = (icmp_ln60_fu_445_p2 | icmp_ln60_1_fu_451_p2);

assign or_ln60_fu_418_p2 = (trunc_ln54_fu_302_p1 | 2'd1);

assign select_ln60_1_fu_475_p3 = ((or_ln60_1_fu_457_p2[0:0] == 1'b1) ? st_fu_467_p3 : shl_ln4_fu_355_p3);

assign select_ln60_fu_330_p3 = ((icmp_ln60_2_fu_324_p2[0:0] == 1'b1) ? arg1_r_8_cast : arg1_r_6_cast);

assign select_ln61_fu_349_p3 = ((icmp_ln60_2_fu_324_p2[0:0] == 1'b1) ? arg1_r_7_cast : arg1_r_5_cast);

assign select_ln62_1_fu_520_p3 = ((icmp_ln60_fu_445_p2[0:0] == 1'b1) ? shl_ln62_1_fu_512_p3 : zext_ln60_3_fu_441_p1);

assign select_ln62_2_fu_533_p3 = ((icmp_ln63_fu_388_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln62_fu_368_p3 = ((icmp_ln60_2_fu_324_p2[0:0] == 1'b1) ? arg1_r_6_cast : arg1_r_4_reload);

assign select_ln64_1_fu_567_p3 = ((icmp_ln60_2_fu_324_p2[0:0] == 1'b1) ? arg1_r_4_reload : trunc_ln64_1_fu_564_p1);

assign select_ln64_2_fu_593_p3 = ((icmp_ln64_fu_587_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln64_fu_397_p3 = ((icmp_ln60_2_fu_324_p2[0:0] == 1'b1) ? arg1_r_5_cast : trunc_ln64_fu_394_p1);

assign shl_ln3_fu_336_p3 = {{select_ln60_fu_330_p3}, {1'd0}};

assign shl_ln4_fu_355_p3 = {{select_ln61_fu_349_p3}, {1'd0}};

assign shl_ln5_fu_374_p3 = {{select_ln62_fu_368_p3}, {1'd0}};

assign shl_ln62_1_fu_512_p3 = {{tmp_3_fu_424_p5}, {1'd0}};

assign shl_ln64_1_fu_574_p3 = {{select_ln64_1_fu_567_p3}, {1'd0}};

assign shl_ln6_fu_404_p3 = {{select_ln64_fu_397_p3}, {1'd0}};

assign st_fu_467_p3 = {{trunc_ln60_fu_463_p1}, {2'd0}};

assign tmp_fu_282_p3 = i_fu_106[32'd2];

assign trunc_ln54_fu_302_p1 = i_fu_106[1:0];

assign trunc_ln60_fu_463_p1 = select_ln61_fu_349_p3[29:0];

assign trunc_ln64_1_fu_564_p1 = arg1_r_2_reload[30:0];

assign trunc_ln64_fu_394_p1 = arg1_r_3_reload[30:0];

assign zext_ln60_3_fu_441_p1 = tmp_3_fu_424_p5;

assign zext_ln60_fu_316_p1 = tmp_s_fu_306_p5;

assign zext_ln62_1_fu_434_p1 = tmp_3_fu_424_p5;

assign zext_ln62_fu_382_p1 = shl_ln5_fu_374_p3;

assign zext_ln64_fu_412_p1 = shl_ln6_fu_404_p3;

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7
