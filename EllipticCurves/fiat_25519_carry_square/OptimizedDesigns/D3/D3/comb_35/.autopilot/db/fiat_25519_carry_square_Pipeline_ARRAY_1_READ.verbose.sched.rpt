

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_ARRAY_1_READ'
================================================================
* Date:           Fri May 10 12:47:33 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_35 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       12|  0.120 us|  0.120 us|   12|   12|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- ARRAY_1_READ  |       10|       10|         2|          1|          1|    10|       yes|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.41>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%phi_urem23 = alloca i32 1"   --->   Operation 5 'alloca' 'phi_urem23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%phi_mul21 = alloca i32 1"   --->   Operation 6 'alloca' 'phi_mul21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arg1_r_0_1 = alloca i32 1"   --->   Operation 8 'alloca' 'arg1_r_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arg1_r_0_2 = alloca i32 1"   --->   Operation 9 'alloca' 'arg1_r_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arg1_r_0_3 = alloca i32 1"   --->   Operation 10 'alloca' 'arg1_r_0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arg1_r_0_4 = alloca i32 1"   --->   Operation 11 'alloca' 'arg1_r_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arg1_r_0_5 = alloca i32 1"   --->   Operation 12 'alloca' 'arg1_r_0_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arg1_r_0_6 = alloca i32 1"   --->   Operation 13 'alloca' 'arg1_r_0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_0_7 = alloca i32 1"   --->   Operation 14 'alloca' 'arg1_r_0_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_0_8 = alloca i32 1"   --->   Operation 15 'alloca' 'arg1_r_0_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_0_9 = alloca i32 1"   --->   Operation 16 'alloca' 'arg1_r_0_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_0_10 = alloca i32 1"   --->   Operation 17 'alloca' 'arg1_r_0_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sext_ln17_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln17"   --->   Operation 18 'read' 'sext_ln17_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln17_cast = sext i62 %sext_ln17_read"   --->   Operation 19 'sext' 'sext_ln17_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_2, i32 0, i32 0, void @empty_3, i32 0, i32 10, void @empty_4, void @empty_13, void @empty_3, i32 16, i32 16, i32 16, i32 16, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %phi_mul21"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %phi_urem23"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%phi_urem23_load = load i4 %phi_urem23" [d3.cpp:17]   --->   Operation 25 'load' 'phi_urem23_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i_3 = load i4 %i" [d3.cpp:17]   --->   Operation 26 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln17_cast" [d3.cpp:17]   --->   Operation 28 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 29 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.79ns)   --->   "%icmp_ln17 = icmp_eq  i4 %i_3, i4 10" [d3.cpp:17]   --->   Operation 30 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.79ns)   --->   "%add_ln17 = add i4 %i_3, i4 1" [d3.cpp:17]   --->   Operation 31 'add' 'add_ln17' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %icmp_ln17, void %for.inc.split, void %VITIS_LOOP_23_1.exitStub" [d3.cpp:17]   --->   Operation 32 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%phi_mul21_load = load i8 %phi_mul21" [d3.cpp:17]   --->   Operation 33 'load' 'phi_mul21_load' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.76ns)   --->   "%add_ln17_1 = add i8 %phi_mul21_load, i8 22" [d3.cpp:17]   --->   Operation 34 'add' 'add_ln17_1' <Predicate = (!icmp_ln17)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln17 = trunc i4 %phi_urem23_load" [d3.cpp:17]   --->   Operation 35 'trunc' 'trunc_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i2 @_ssdm_op_PartSelect.i2.i8.i32.i32, i8 %phi_mul21_load, i32 6, i32 7" [d3.cpp:19]   --->   Operation 36 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.73ns)   --->   "%switch_ln19 = switch i2 %trunc_ln17, void %arrayidx2.case.2, i2 0, void %arrayidx2.case.0, i2 1, void %arrayidx2.case.1" [d3.cpp:19]   --->   Operation 37 'switch' 'switch_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.73>
ST_1 : Operation 38 [1/1] (0.73ns)   --->   "%switch_ln19 = switch i2 %trunc_ln1, void %arrayidx2.exit, i2 0, void %arrayidx2.case.1.arrayidx2.exit_crit_edge5, i2 1, void %branch45, i2 2, void %branch46" [d3.cpp:19]   --->   Operation 38 'switch' 'switch_ln19' <Predicate = (!icmp_ln17 & trunc_ln17 == 1)> <Delay = 0.73>
ST_1 : Operation 39 [1/1] (0.73ns)   --->   "%switch_ln19 = switch i2 %trunc_ln1, void %branch23, i2 0, void %arrayidx2.case.0.arrayidx2.exit_crit_edge, i2 1, void %arrayidx2.case.0.arrayidx2.exit_crit_edge6, i2 2, void %branch22" [d3.cpp:19]   --->   Operation 39 'switch' 'switch_ln19' <Predicate = (!icmp_ln17 & trunc_ln17 == 0)> <Delay = 0.73>
ST_1 : Operation 40 [1/1] (0.73ns)   --->   "%switch_ln19 = switch i2 %trunc_ln1, void %arrayidx2.exit, i2 0, void %arrayidx2.case.2.arrayidx2.exit_crit_edge4, i2 1, void %branch69, i2 2, void %branch70" [d3.cpp:19]   --->   Operation 40 'switch' 'switch_ln19' <Predicate = (!icmp_ln17 & trunc_ln17 != 0 & trunc_ln17 != 1)> <Delay = 0.73>
ST_1 : Operation 41 [1/1] (0.79ns)   --->   "%add_ln17_2 = add i4 %phi_urem23_load, i4 1" [d3.cpp:17]   --->   Operation 41 'add' 'add_ln17_2' <Predicate = (!icmp_ln17)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.79ns)   --->   "%icmp_ln17_1 = icmp_ult  i4 %add_ln17_2, i4 3" [d3.cpp:17]   --->   Operation 42 'icmp' 'icmp_ln17_1' <Predicate = (!icmp_ln17)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.39ns)   --->   "%select_ln17 = select i1 %icmp_ln17_1, i4 %add_ln17_2, i4 0" [d3.cpp:17]   --->   Operation 43 'select' 'select_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln17 = store i4 %add_ln17, i4 %i" [d3.cpp:17]   --->   Operation 44 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln17 = store i8 %add_ln17_1, i8 %phi_mul21" [d3.cpp:17]   --->   Operation 45 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln17 = store i4 %select_ln17, i4 %phi_urem23" [d3.cpp:17]   --->   Operation 46 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln17 = br void %for.inc" [d3.cpp:17]   --->   Operation 47 'br' 'br_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg1_r_0_1_load = load i32 %arg1_r_0_1"   --->   Operation 71 'load' 'arg1_r_0_1_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg1_r_0_2_load = load i32 %arg1_r_0_2"   --->   Operation 72 'load' 'arg1_r_0_2_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg1_r_0_3_load = load i32 %arg1_r_0_3"   --->   Operation 73 'load' 'arg1_r_0_3_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg1_r_0_4_load = load i32 %arg1_r_0_4"   --->   Operation 74 'load' 'arg1_r_0_4_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg1_r_0_5_load = load i32 %arg1_r_0_5"   --->   Operation 75 'load' 'arg1_r_0_5_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_0_6_load = load i32 %arg1_r_0_6"   --->   Operation 76 'load' 'arg1_r_0_6_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_0_7_load = load i32 %arg1_r_0_7"   --->   Operation 77 'load' 'arg1_r_0_7_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_0_8_load = load i32 %arg1_r_0_8"   --->   Operation 78 'load' 'arg1_r_0_8_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_0_9_load = load i32 %arg1_r_0_9"   --->   Operation 79 'load' 'arg1_r_0_9_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg1_r_0_10_load = load i32 %arg1_r_0_10"   --->   Operation 80 'load' 'arg1_r_0_10_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_2_2_0252_out, i32 %arg1_r_0_10_load"   --->   Operation 81 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_2_1_0251_out, i32 %arg1_r_0_9_load"   --->   Operation 82 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_2_0_0250_out, i32 %arg1_r_0_8_load"   --->   Operation 83 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_1_2_0249_out, i32 %arg1_r_0_7_load"   --->   Operation 84 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_1_1_0248_out, i32 %arg1_r_0_6_load"   --->   Operation 85 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_1_0_0247_out, i32 %arg1_r_0_5_load"   --->   Operation 86 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_3_0246_out, i32 %arg1_r_0_4_load"   --->   Operation 87 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_229_0245_out, i32 %arg1_r_0_3_load"   --->   Operation 88 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_128_0244_out, i32 %arg1_r_0_2_load"   --->   Operation 89 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %arg1_r_0_0243_out, i32 %arg1_r_0_1_load"   --->   Operation 90 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 91 'ret' 'ret_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%speclooptripcount_ln17 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [d3.cpp:17]   --->   Operation 48 'speclooptripcount' 'speclooptripcount_ln17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%specloopname_ln17 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d3.cpp:17]   --->   Operation 49 'specloopname' 'specloopname_ln17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (7.30ns)   --->   "%arg1_r_0 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %mem_addr" [d3.cpp:19]   --->   Operation 50 'read' 'arg1_r_0' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_7" [d3.cpp:19]   --->   Operation 51 'store' 'store_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 52 'br' 'br_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_6" [d3.cpp:19]   --->   Operation 53 'store' 'store_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 54 'br' 'br_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_5" [d3.cpp:19]   --->   Operation 55 'store' 'store_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 0)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 56 'br' 'br_ln19' <Predicate = (trunc_ln17 == 1 & trunc_ln1 == 0)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_3" [d3.cpp:19]   --->   Operation 57 'store' 'store_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 58 'br' 'br_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_2" [d3.cpp:19]   --->   Operation 59 'store' 'store_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 60 'br' 'br_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_1" [d3.cpp:19]   --->   Operation 61 'store' 'store_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 0)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 62 'br' 'br_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 0)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_4" [d3.cpp:19]   --->   Operation 63 'store' 'store_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 3)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 64 'br' 'br_ln19' <Predicate = (trunc_ln17 == 0 & trunc_ln1 == 3)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_10" [d3.cpp:19]   --->   Operation 65 'store' 'store_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 66 'br' 'br_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 2)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_9" [d3.cpp:19]   --->   Operation 67 'store' 'store_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 68 'br' 'br_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 1)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%store_ln19 = store i32 %arg1_r_0, i32 %arg1_r_0_8" [d3.cpp:19]   --->   Operation 69 'store' 'store_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 0)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx2.exit" [d3.cpp:19]   --->   Operation 70 'br' 'br_ln19' <Predicate = (trunc_ln17 != 0 & trunc_ln17 != 1 & trunc_ln1 == 0)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.412ns
The critical path consists of the following:
	'alloca' operation ('phi_urem23') [13]  (0.000 ns)
	'load' operation ('phi_urem23_load', d3.cpp:17) on local variable 'phi_urem23' [34]  (0.000 ns)
	'add' operation ('add_ln17_2', d3.cpp:17) [88]  (0.797 ns)
	'icmp' operation ('icmp_ln17_1', d3.cpp:17) [89]  (0.797 ns)
	'select' operation ('select_ln17', d3.cpp:17) [90]  (0.391 ns)
	'store' operation ('store_ln17', d3.cpp:17) of variable 'select_ln17', d3.cpp:17 on local variable 'phi_urem23' [93]  (0.427 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	bus read operation ('arg1_r[0]', d3.cpp:19) on port 'mem' (d3.cpp:19) [48]  (7.300 ns)
	'store' operation ('store_ln19', d3.cpp:19) of variable 'arg1_r[0]', d3.cpp:19 on local variable 'arg1_r[0]' [74]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
