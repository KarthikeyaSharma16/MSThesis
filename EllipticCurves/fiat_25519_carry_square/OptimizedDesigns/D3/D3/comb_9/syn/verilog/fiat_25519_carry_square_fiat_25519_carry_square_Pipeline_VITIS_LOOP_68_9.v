// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add11813_reload,
        arr_load_18,
        arr_load_17,
        arr_load_16,
        arr_load_15,
        arr_load_14,
        mul211,
        mul202,
        mul237,
        mul221,
        mul229,
        mul3,
        mul246,
        mul254,
        mul262,
        mul299,
        mul4,
        mul290,
        mul5,
        mul318,
        mul325,
        mul6,
        mul360,
        mul369,
        mul344,
        mul353,
        add21330_out,
        add21330_out_ap_vld,
        add23927_out,
        add23927_out_ap_vld,
        add27425_out,
        add27425_out_ap_vld,
        add30123_out,
        add30123_out_ap_vld,
        add33721_out,
        add33721_out_ap_vld,
        add37119_out,
        add37119_out_ap_vld,
        p_out,
        p_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] add11813_reload;
input  [63:0] arr_load_18;
input  [63:0] arr_load_17;
input  [63:0] arr_load_16;
input  [63:0] arr_load_15;
input  [63:0] arr_load_14;
input  [63:0] mul211;
input  [63:0] mul202;
input  [63:0] mul237;
input  [63:0] mul221;
input  [63:0] mul229;
input  [63:0] mul3;
input  [63:0] mul246;
input  [63:0] mul254;
input  [63:0] mul262;
input  [63:0] mul299;
input  [63:0] mul4;
input  [63:0] mul290;
input  [63:0] mul5;
input  [63:0] mul318;
input  [63:0] mul325;
input  [63:0] mul6;
input  [63:0] mul360;
input  [63:0] mul369;
input  [63:0] mul344;
input  [63:0] mul353;
output  [63:0] add21330_out;
output   add21330_out_ap_vld;
output  [63:0] add23927_out;
output   add23927_out_ap_vld;
output  [63:0] add27425_out;
output   add27425_out_ap_vld;
output  [63:0] add30123_out;
output   add30123_out_ap_vld;
output  [63:0] add33721_out;
output   add33721_out_ap_vld;
output  [63:0] add37119_out;
output   add37119_out_ap_vld;
output  [63:0] p_out;
output   p_out_ap_vld;

reg ap_idle;
reg add21330_out_ap_vld;
reg add23927_out_ap_vld;
reg add27425_out_ap_vld;
reg add30123_out_ap_vld;
reg add33721_out_ap_vld;
reg add37119_out_ap_vld;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_380_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] i_fu_100;
wire   [2:0] i_2_fu_386_p2;
wire    ap_loop_init;
wire   [2:0] i_1_load_fu_377_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] empty_fu_104;
wire   [63:0] add_ln78_fu_529_p2;
reg   [63:0] add37119_fu_108;
wire   [63:0] add_ln106_3_fu_511_p2;
reg   [63:0] add33721_fu_112;
wire   [63:0] add_ln100_3_fu_409_p2;
reg   [63:0] add30123_fu_116;
wire   [63:0] add_ln94_2_fu_432_p2;
reg   [63:0] add27425_fu_120;
wire   [63:0] add_ln89_3_fu_460_p2;
reg   [63:0] add23927_fu_124;
wire   [63:0] add_ln83_2_fu_483_p2;
reg   [63:0] add21330_fu_128;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] add_ln100_fu_395_p2;
wire   [63:0] add_ln100_1_fu_399_p2;
wire   [63:0] add_ln100_2_fu_403_p2;
wire   [63:0] add_ln94_fu_423_p2;
wire   [63:0] add_ln94_1_fu_427_p2;
wire   [63:0] add_ln89_fu_446_p2;
wire   [63:0] add_ln89_1_fu_450_p2;
wire   [63:0] add_ln89_2_fu_454_p2;
wire   [63:0] add_ln83_fu_474_p2;
wire   [63:0] add_ln83_1_fu_478_p2;
wire   [63:0] add_ln106_fu_497_p2;
wire   [63:0] add_ln106_1_fu_501_p2;
wire   [63:0] add_ln106_2_fu_505_p2;
wire   [63:0] add_ln78_1_fu_525_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_366;
reg    ap_condition_370;
reg    ap_condition_373;
reg    ap_condition_376;
reg    ap_condition_379;
reg    ap_condition_382;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add21330_fu_128 <= add11813_reload;
        end else if ((1'b1 == ap_condition_366)) begin
            add21330_fu_128 <= add_ln78_fu_529_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add23927_fu_124 <= arr_load_18;
        end else if ((1'b1 == ap_condition_370)) begin
            add23927_fu_124 <= add_ln83_2_fu_483_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add27425_fu_120 <= arr_load_17;
        end else if ((1'b1 == ap_condition_373)) begin
            add27425_fu_120 <= add_ln89_3_fu_460_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add30123_fu_116 <= arr_load_16;
        end else if ((1'b1 == ap_condition_376)) begin
            add30123_fu_116 <= add_ln94_2_fu_432_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add33721_fu_112 <= arr_load_15;
        end else if ((1'b1 == ap_condition_379)) begin
            add33721_fu_112 <= add_ln100_3_fu_409_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add37119_fu_108 <= arr_load_14;
        end else if ((1'b1 == ap_condition_382)) begin
            add37119_fu_108 <= add_ln106_3_fu_511_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_104 <= add11813_reload;
        end else if ((1'b1 == ap_condition_366)) begin
            empty_fu_104 <= add_ln78_fu_529_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 3'd0;
        end else if (((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_100 <= i_2_fu_386_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add21330_out_ap_vld = 1'b1;
    end else begin
        add21330_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add23927_out_ap_vld = 1'b1;
    end else begin
        add23927_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add27425_out_ap_vld = 1'b1;
    end else begin
        add27425_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add30123_out_ap_vld = 1'b1;
    end else begin
        add30123_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add33721_out_ap_vld = 1'b1;
    end else begin
        add33721_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add37119_out_ap_vld = 1'b1;
    end else begin
        add37119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add21330_out = add21330_fu_128;

assign add23927_out = add23927_fu_124;

assign add27425_out = add27425_fu_120;

assign add30123_out = add30123_fu_116;

assign add33721_out = add33721_fu_112;

assign add37119_out = add37119_fu_108;

assign add_ln100_1_fu_399_p2 = (mul6 + mul325);

assign add_ln100_2_fu_403_p2 = (add_ln100_fu_395_p2 + add_ln100_1_fu_399_p2);

assign add_ln100_3_fu_409_p2 = (add_ln100_2_fu_403_p2 + add33721_fu_112);

assign add_ln100_fu_395_p2 = (mul5 + mul318);

assign add_ln106_1_fu_501_p2 = (mul353 + mul344);

assign add_ln106_2_fu_505_p2 = (add_ln106_fu_497_p2 + add_ln106_1_fu_501_p2);

assign add_ln106_3_fu_511_p2 = (add_ln106_2_fu_505_p2 + add37119_fu_108);

assign add_ln106_fu_497_p2 = (mul360 + mul369);

assign add_ln78_1_fu_525_p2 = (mul202 + mul211);

assign add_ln78_fu_529_p2 = (add_ln78_1_fu_525_p2 + add21330_fu_128);

assign add_ln83_1_fu_478_p2 = (add_ln83_fu_474_p2 + mul229);

assign add_ln83_2_fu_483_p2 = (add_ln83_1_fu_478_p2 + add23927_fu_124);

assign add_ln83_fu_474_p2 = (mul237 + mul221);

assign add_ln89_1_fu_450_p2 = (mul262 + mul254);

assign add_ln89_2_fu_454_p2 = (add_ln89_fu_446_p2 + add_ln89_1_fu_450_p2);

assign add_ln89_3_fu_460_p2 = (add_ln89_2_fu_454_p2 + add27425_fu_120);

assign add_ln89_fu_446_p2 = (mul3 + mul246);

assign add_ln94_1_fu_427_p2 = (add_ln94_fu_423_p2 + mul290);

assign add_ln94_2_fu_432_p2 = (add_ln94_1_fu_427_p2 + add30123_fu_116);

assign add_ln94_fu_423_p2 = (mul299 + mul4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_366 = (~(i_1_load_fu_377_p1 == 3'd4) & ~(i_1_load_fu_377_p1 == 3'd3) & ~(i_1_load_fu_377_p1 == 3'd2) & ~(i_1_load_fu_377_p1 == 3'd1) & ~(i_1_load_fu_377_p1 == 3'd5) & (icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_370 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_373 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_376 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_379 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_382 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i_1_load_fu_377_p1 = i_fu_100;

assign i_2_fu_386_p2 = (i_fu_100 + 3'd1);

assign icmp_ln68_fu_380_p2 = ((i_fu_100 == 3'd6) ? 1'b1 : 1'b0);

assign p_out = empty_fu_104;

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9
