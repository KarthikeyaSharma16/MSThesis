// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_load_6,
        arr_load_5,
        arr_load_4,
        arr_load_3,
        arg1_r_0_01_reload,
        arg1_r_0_1_010_reload,
        arg1_r_0_2_013_reload,
        arg1_r_0_3_016_reload,
        arg1_r_1_04_cast,
        arg1_r_2_07_cast,
        arg1_r_1_1_011_cast,
        arg1_r_2_1_012_cast,
        arg1_r_1_2_014_cast,
        arg1_r_2_2_015_cast,
        arg1_r_1_3_017_cast,
        arg1_r_2_3_018_cast,
        arg1_r_0_01_cast,
        arg1_r_0_1_010_cast,
        arg1_r_0_2_013_cast,
        arg1_r_0_3_016_cast,
        mul157,
        add18021_out,
        add18021_out_ap_vld,
        add15120_out,
        add15120_out_ap_vld,
        add13119_out,
        add13119_out_ap_vld,
        add11818_out,
        add11818_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr_load_6;
input  [63:0] arr_load_5;
input  [63:0] arr_load_4;
input  [63:0] arr_load_3;
input  [31:0] arg1_r_0_01_reload;
input  [31:0] arg1_r_0_1_010_reload;
input  [31:0] arg1_r_0_2_013_reload;
input  [31:0] arg1_r_0_3_016_reload;
input  [30:0] arg1_r_1_04_cast;
input  [30:0] arg1_r_2_07_cast;
input  [30:0] arg1_r_1_1_011_cast;
input  [30:0] arg1_r_2_1_012_cast;
input  [30:0] arg1_r_1_2_014_cast;
input  [30:0] arg1_r_2_2_015_cast;
input  [30:0] arg1_r_1_3_017_cast;
input  [30:0] arg1_r_2_3_018_cast;
input  [30:0] arg1_r_0_01_cast;
input  [30:0] arg1_r_0_1_010_cast;
input  [30:0] arg1_r_0_2_013_cast;
input  [30:0] arg1_r_0_3_016_cast;
input  [63:0] mul157;
output  [63:0] add18021_out;
output   add18021_out_ap_vld;
output  [63:0] add15120_out;
output   add15120_out_ap_vld;
output  [63:0] add13119_out;
output   add13119_out_ap_vld;
output  [63:0] add11818_out;
output   add11818_out_ap_vld;

reg ap_idle;
reg add18021_out_ap_vld;
reg add15120_out_ap_vld;
reg add13119_out_ap_vld;
reg add11818_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln54_fu_336_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] mul_ln60_fu_292_p2;
reg   [63:0] mul_ln60_reg_944;
reg   [63:0] add11818_fu_118;
wire   [63:0] add_ln60_fu_775_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [63:0] add13119_fu_122;
wire   [63:0] add_ln61_fu_550_p2;
reg   [63:0] add15120_fu_126;
wire   [63:0] add_ln63_1_fu_661_p2;
reg   [63:0] add18021_fu_130;
wire   [63:0] add_ln64_fu_746_p2;
reg   [2:0] i_fu_134;
wire   [2:0] add_ln54_fu_342_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] mul_ln60_fu_292_p0;
wire   [31:0] mul_ln60_fu_292_p1;
wire   [63:0] zext_ln63_fu_411_p1;
wire   [31:0] mul_ln61_fu_296_p0;
wire   [31:0] mul_ln61_fu_296_p1;
wire   [31:0] mul_ln64_fu_300_p0;
wire   [31:0] mul_ln64_fu_300_p1;
wire   [32:0] mul_ln63_fu_304_p0;
wire   [31:0] mul_ln63_fu_304_p1;
wire   [3:0] zext_ln54_fu_361_p1;
wire   [3:0] empty_fu_365_p2;
wire   [1:0] trunc_ln54_fu_357_p1;
wire   [2:0] empty_27_fu_381_p2;
wire   [2:0] empty_29_fu_391_p2;
wire   [31:0] tmp_4_fu_401_p6;
wire   [1:0] trunc_ln_fu_422_p4;
wire   [0:0] icmp_ln60_2_fu_432_p2;
wire   [30:0] tmp_5_fu_462_p1;
wire   [30:0] tmp_5_fu_462_p2;
wire   [30:0] tmp_5_fu_462_p3;
wire   [30:0] tmp_5_fu_462_p4;
wire   [1:0] tmp_5_fu_462_p5;
wire   [0:0] icmp_ln60_fu_476_p2;
wire   [0:0] icmp_ln60_1_fu_482_p2;
wire   [30:0] tmp_5_fu_462_p6;
wire   [29:0] trunc_ln60_fu_494_p1;
wire   [0:0] or_ln60_fu_488_p2;
wire   [31:0] st_fu_498_p3;
wire   [31:0] sf_fu_506_p3;
wire   [31:0] select_ln60_4_fu_514_p3;
wire   [1:0] tmp_6_fu_527_p5;
wire   [30:0] tmp_6_fu_527_p6;
wire   [31:0] shl_ln3_fu_537_p3;
wire   [63:0] mul_ln61_fu_296_p2;
wire   [0:0] tmp_fu_556_p3;
wire   [30:0] tmp_7_fu_588_p1;
wire   [30:0] tmp_7_fu_588_p2;
wire   [30:0] tmp_7_fu_588_p3;
wire   [30:0] tmp_7_fu_588_p4;
wire   [1:0] tmp_7_fu_588_p5;
wire   [30:0] tmp_7_fu_588_p6;
wire   [31:0] shl_ln4_fu_602_p3;
wire   [32:0] shl_ln5_fu_621_p3;
wire   [32:0] zext_ln60_1_fu_418_p1;
wire   [32:0] select_ln63_fu_629_p3;
wire   [0:0] icmp_ln63_fu_615_p2;
wire   [63:0] select_ln63_1_fu_642_p3;
wire   [63:0] mul_ln63_fu_304_p2;
wire   [63:0] and_ln63_fu_650_p2;
wire   [63:0] add_ln63_fu_655_p2;
wire   [0:0] tmp_1_fu_667_p3;
wire   [30:0] tmp_8_fu_699_p1;
wire   [30:0] tmp_8_fu_699_p2;
wire   [30:0] tmp_8_fu_699_p3;
wire   [30:0] tmp_8_fu_699_p4;
wire   [1:0] tmp_8_fu_699_p5;
wire   [30:0] tmp_8_fu_699_p6;
wire   [31:0] shl_ln6_fu_713_p3;
wire   [0:0] icmp_ln64_fu_726_p2;
wire   [63:0] mul_ln64_fu_300_p2;
wire   [63:0] select_ln64_4_fu_732_p3;
wire   [63:0] and_ln64_fu_740_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] mul_ln60_fu_292_p00;
wire   [63:0] mul_ln61_fu_296_p00;
wire   [63:0] mul_ln63_fu_304_p00;
wire   [63:0] mul_ln63_fu_304_p10;
wire   [63:0] mul_ln64_fu_300_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U76(
    .din0(mul_ln60_fu_292_p0),
    .din1(mul_ln60_fu_292_p1),
    .dout(mul_ln60_fu_292_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U77(
    .din0(mul_ln61_fu_296_p0),
    .din1(mul_ln61_fu_296_p1),
    .dout(mul_ln61_fu_296_p2)
);

fiat_25519_carry_square_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U78(
    .din0(mul_ln64_fu_300_p0),
    .din1(mul_ln64_fu_300_p1),
    .dout(mul_ln64_fu_300_p2)
);

fiat_25519_carry_square_mul_33ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_33ns_32ns_64_1_1_U79(
    .din0(mul_ln63_fu_304_p0),
    .din1(mul_ln63_fu_304_p1),
    .dout(mul_ln63_fu_304_p2)
);

fiat_25519_carry_square_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U80(
    .din0(arg1_r_0_01_reload),
    .din1(arg1_r_0_1_010_reload),
    .din2(arg1_r_0_2_013_reload),
    .din3(arg1_r_0_3_016_reload),
    .din4(trunc_ln54_fu_357_p1),
    .dout(tmp_4_fu_401_p6)
);

fiat_25519_carry_square_mux_4_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_4_2_31_1_1_U81(
    .din0(tmp_5_fu_462_p1),
    .din1(tmp_5_fu_462_p2),
    .din2(tmp_5_fu_462_p3),
    .din3(tmp_5_fu_462_p4),
    .din4(tmp_5_fu_462_p5),
    .dout(tmp_5_fu_462_p6)
);

fiat_25519_carry_square_mux_4_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_4_2_31_1_1_U82(
    .din0(arg1_r_1_04_cast),
    .din1(arg1_r_1_1_011_cast),
    .din2(arg1_r_1_2_014_cast),
    .din3(arg1_r_1_3_017_cast),
    .din4(tmp_6_fu_527_p5),
    .dout(tmp_6_fu_527_p6)
);

fiat_25519_carry_square_mux_4_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_4_2_31_1_1_U83(
    .din0(tmp_7_fu_588_p1),
    .din1(tmp_7_fu_588_p2),
    .din2(tmp_7_fu_588_p3),
    .din3(tmp_7_fu_588_p4),
    .din4(tmp_7_fu_588_p5),
    .dout(tmp_7_fu_588_p6)
);

fiat_25519_carry_square_mux_4_2_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .din2_WIDTH( 31 ),
    .din3_WIDTH( 31 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 31 ))
mux_4_2_31_1_1_U84(
    .din0(tmp_8_fu_699_p1),
    .din1(tmp_8_fu_699_p2),
    .din2(tmp_8_fu_699_p3),
    .din3(tmp_8_fu_699_p4),
    .din4(tmp_8_fu_699_p5),
    .dout(tmp_8_fu_699_p6)
);

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            add11818_fu_118 <= arr_load_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            add11818_fu_118 <= add_ln60_fu_775_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add13119_fu_122 <= arr_load_4;
        end else if (((icmp_ln54_fu_336_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add13119_fu_122 <= add_ln61_fu_550_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add15120_fu_126 <= arr_load_5;
        end else if (((icmp_ln54_fu_336_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add15120_fu_126 <= add_ln63_1_fu_661_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add18021_fu_130 <= arr_load_6;
        end else if (((icmp_ln54_fu_336_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            add18021_fu_130 <= add_ln64_fu_746_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_134 <= 3'd0;
        end else if (((icmp_ln54_fu_336_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_134 <= add_ln54_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_336_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln60_reg_944 <= mul_ln60_fu_292_p2;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_336_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add11818_out_ap_vld = 1'b1;
    end else begin
        add11818_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_336_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add13119_out_ap_vld = 1'b1;
    end else begin
        add13119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_336_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add15120_out_ap_vld = 1'b1;
    end else begin
        add15120_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_336_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add18021_out_ap_vld = 1'b1;
    end else begin
        add18021_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_336_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add11818_out = add11818_fu_118;

assign add13119_out = add13119_fu_122;

assign add15120_out = add15120_fu_126;

assign add18021_out = add18021_fu_130;

assign add_ln54_fu_342_p2 = (i_fu_134 + 3'd1);

assign add_ln60_fu_775_p2 = (mul_ln60_reg_944 + add11818_fu_118);

assign add_ln61_fu_550_p2 = (mul_ln61_fu_296_p2 + add13119_fu_122);

assign add_ln63_1_fu_661_p2 = (add15120_fu_126 + add_ln63_fu_655_p2);

assign add_ln63_fu_655_p2 = (mul_ln63_fu_304_p2 + and_ln63_fu_650_p2);

assign add_ln64_fu_746_p2 = (and_ln64_fu_740_p2 + add18021_fu_130);

assign and_ln63_fu_650_p2 = (select_ln63_1_fu_642_p3 & mul157);

assign and_ln64_fu_740_p2 = (select_ln64_4_fu_732_p3 & mul_ln64_fu_300_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_27_fu_381_p2 = ($signed(3'd6) - $signed(i_fu_134));

assign empty_29_fu_391_p2 = ($signed(3'd5) - $signed(i_fu_134));

assign empty_fu_365_p2 = ($signed(4'd8) - $signed(zext_ln54_fu_361_p1));

assign icmp_ln54_fu_336_p2 = ((i_fu_134 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln60_1_fu_482_p2 = ((i_fu_134 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln60_2_fu_432_p2 = ((trunc_ln_fu_422_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_476_p2 = ((i_fu_134 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_615_p2 = ((i_fu_134 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_726_p2 = ((i_fu_134 < 3'd3) ? 1'b1 : 1'b0);

assign mul_ln60_fu_292_p0 = mul_ln60_fu_292_p00;

assign mul_ln60_fu_292_p00 = select_ln60_4_fu_514_p3;

assign mul_ln60_fu_292_p1 = zext_ln63_fu_411_p1;

assign mul_ln61_fu_296_p0 = mul_ln61_fu_296_p00;

assign mul_ln61_fu_296_p00 = shl_ln3_fu_537_p3;

assign mul_ln61_fu_296_p1 = zext_ln63_fu_411_p1;

assign mul_ln63_fu_304_p0 = mul_ln63_fu_304_p00;

assign mul_ln63_fu_304_p00 = select_ln63_fu_629_p3;

assign mul_ln63_fu_304_p1 = mul_ln63_fu_304_p10;

assign mul_ln63_fu_304_p10 = shl_ln4_fu_602_p3;

assign mul_ln64_fu_300_p0 = mul_ln64_fu_300_p00;

assign mul_ln64_fu_300_p00 = shl_ln6_fu_713_p3;

assign mul_ln64_fu_300_p1 = zext_ln63_fu_411_p1;

assign or_ln60_fu_488_p2 = (icmp_ln60_fu_476_p2 | icmp_ln60_1_fu_482_p2);

assign select_ln60_4_fu_514_p3 = ((or_ln60_fu_488_p2[0:0] == 1'b1) ? st_fu_498_p3 : sf_fu_506_p3);

assign select_ln63_1_fu_642_p3 = ((icmp_ln63_fu_615_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln63_fu_629_p3 = ((icmp_ln60_fu_476_p2[0:0] == 1'b1) ? shl_ln5_fu_621_p3 : zext_ln60_1_fu_418_p1);

assign select_ln64_4_fu_732_p3 = ((icmp_ln64_fu_726_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign sf_fu_506_p3 = {{tmp_5_fu_462_p6}, {1'd0}};

assign shl_ln3_fu_537_p3 = {{tmp_6_fu_527_p6}, {1'd0}};

assign shl_ln4_fu_602_p3 = {{tmp_7_fu_588_p6}, {1'd0}};

assign shl_ln5_fu_621_p3 = {{tmp_4_fu_401_p6}, {1'd0}};

assign shl_ln6_fu_713_p3 = {{tmp_8_fu_699_p6}, {1'd0}};

assign st_fu_498_p3 = {{trunc_ln60_fu_494_p1}, {2'd0}};

assign tmp_1_fu_667_p3 = empty_29_fu_391_p2[32'd2];

assign tmp_5_fu_462_p1 = ((icmp_ln60_2_fu_432_p2[0:0] == 1'b1) ? arg1_r_1_04_cast : arg1_r_2_07_cast);

assign tmp_5_fu_462_p2 = ((icmp_ln60_2_fu_432_p2[0:0] == 1'b1) ? arg1_r_1_1_011_cast : arg1_r_2_1_012_cast);

assign tmp_5_fu_462_p3 = ((icmp_ln60_2_fu_432_p2[0:0] == 1'b1) ? arg1_r_1_2_014_cast : arg1_r_2_2_015_cast);

assign tmp_5_fu_462_p4 = ((icmp_ln60_2_fu_432_p2[0:0] == 1'b1) ? arg1_r_1_3_017_cast : arg1_r_2_3_018_cast);

assign tmp_5_fu_462_p5 = empty_fu_365_p2[1:0];

assign tmp_6_fu_527_p5 = (trunc_ln54_fu_357_p1 ^ 2'd3);

assign tmp_7_fu_588_p1 = ((tmp_fu_556_p3[0:0] == 1'b1) ? arg1_r_1_04_cast : arg1_r_0_01_cast);

assign tmp_7_fu_588_p2 = ((tmp_fu_556_p3[0:0] == 1'b1) ? arg1_r_1_1_011_cast : arg1_r_0_1_010_cast);

assign tmp_7_fu_588_p3 = ((tmp_fu_556_p3[0:0] == 1'b1) ? arg1_r_1_2_014_cast : arg1_r_0_2_013_cast);

assign tmp_7_fu_588_p4 = ((tmp_fu_556_p3[0:0] == 1'b1) ? arg1_r_1_3_017_cast : arg1_r_0_3_016_cast);

assign tmp_7_fu_588_p5 = empty_27_fu_381_p2[1:0];

assign tmp_8_fu_699_p1 = ((tmp_1_fu_667_p3[0:0] == 1'b1) ? arg1_r_1_04_cast : arg1_r_0_01_cast);

assign tmp_8_fu_699_p2 = ((tmp_1_fu_667_p3[0:0] == 1'b1) ? arg1_r_1_1_011_cast : arg1_r_0_1_010_cast);

assign tmp_8_fu_699_p3 = ((tmp_1_fu_667_p3[0:0] == 1'b1) ? arg1_r_1_2_014_cast : arg1_r_0_2_013_cast);

assign tmp_8_fu_699_p4 = ((tmp_1_fu_667_p3[0:0] == 1'b1) ? arg1_r_1_3_017_cast : arg1_r_0_3_016_cast);

assign tmp_8_fu_699_p5 = empty_29_fu_391_p2[1:0];

assign tmp_fu_556_p3 = empty_27_fu_381_p2[32'd2];

assign trunc_ln54_fu_357_p1 = i_fu_134[1:0];

assign trunc_ln60_fu_494_p1 = tmp_5_fu_462_p6[29:0];

assign trunc_ln_fu_422_p4 = {{empty_fu_365_p2[3:2]}};

assign zext_ln54_fu_361_p1 = i_fu_134;

assign zext_ln60_1_fu_418_p1 = tmp_4_fu_401_p6;

assign zext_ln63_fu_411_p1 = tmp_4_fu_401_p6;

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_54_7
