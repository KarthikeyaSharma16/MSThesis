-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arr_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_3_ce0 : OUT STD_LOGIC;
    arr_3_we0 : OUT STD_LOGIC;
    arr_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_3_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_3_ce1 : OUT STD_LOGIC;
    arr_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_2_ce0 : OUT STD_LOGIC;
    arr_2_we0 : OUT STD_LOGIC;
    arr_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_2_ce1 : OUT STD_LOGIC;
    arr_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_1_ce0 : OUT STD_LOGIC;
    arr_1_we0 : OUT STD_LOGIC;
    arr_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_1_ce1 : OUT STD_LOGIC;
    arr_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arr_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_ce0 : OUT STD_LOGIC;
    arr_we0 : OUT STD_LOGIC;
    arr_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    arr_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    arr_ce1 : OUT STD_LOGIC;
    arr_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    arg1_r_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    arg1_r_1_ce0 : OUT STD_LOGIC;
    arg1_r_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln40 : IN STD_LOGIC_VECTOR (31 downto 0);
    arg1_r_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    arg1_r_ce0 : OUT STD_LOGIC;
    arg1_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_34_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln34_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln40_cast_fu_216_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln40_cast_reg_433 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_439 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln34_1_fu_234_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln34_1_reg_450 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln34_1_reg_450_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln37_fu_273_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_reg_456 : STD_LOGIC_VECTOR (0 downto 0);
    signal arr_addr_reg_467 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_1_addr_reg_473 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_2_addr_reg_479 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_3_addr_reg_485 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_addr_1_reg_496 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_1_addr_1_reg_502 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_2_addr_1_reg_508 : STD_LOGIC_VECTOR (1 downto 0);
    signal arr_3_addr_1_reg_514 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln37_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln22_fu_259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_2_fu_308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_4_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_fu_72 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_fu_238_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln40_fu_371_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_3_fu_416_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln40_1_fu_208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_1_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_212_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_fu_249_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_fu_267_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln4_fu_277_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln40_1_fu_292_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln5_fu_298_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln40_2_fu_313_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln40_1_fu_318_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_336_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_1_fu_208_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_9_fu_358_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1_fu_350_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_381_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_fu_212_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_2_fu_403_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln40_1_fu_395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln40_1_fu_208_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_ln40_fu_212_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_condition_149 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component fiat_25519_carry_square_mul_32ns_32ns_63_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component fiat_25519_carry_square_mux_2_1_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fiat_25519_carry_square_mux_4_2_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiat_25519_carry_square_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32ns_32ns_63_1_1_U28 : component fiat_25519_carry_square_mul_32ns_32ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        din0 => mul_ln40_1_fu_208_p0,
        din1 => mul_ln40_1_fu_208_p1,
        dout => mul_ln40_1_fu_208_p2);

    mul_32ns_32ns_63_1_1_U29 : component fiat_25519_carry_square_mul_32ns_32ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        din0 => mul_ln40_fu_212_p0,
        din1 => mul_ln40_fu_212_p1,
        dout => mul_ln40_fu_212_p2);

    mux_2_1_32_1_1_U30 : component fiat_25519_carry_square_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg1_r_1_q0,
        din2 => trunc_ln37_reg_456,
        dout => tmp_8_fu_336_p4);

    mux_4_2_64_1_1_U31 : component fiat_25519_carry_square_mux_4_2_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => arr_q1,
        din1 => arr_1_q1,
        din2 => arr_2_q1,
        din3 => arr_3_q1,
        din4 => trunc_ln34_1_reg_450_pp0_iter1_reg,
        dout => tmp_9_fu_358_p6);

    mux_2_1_32_1_1_U32 : component fiat_25519_carry_square_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => arg1_r_q0,
        din2 => trunc_ln37_reg_456,
        dout => tmp_s_fu_381_p4);

    mux_4_2_64_1_1_U33 : component fiat_25519_carry_square_mux_4_2_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => arr_1_q1,
        din1 => arr_2_q1,
        din2 => arr_3_q1,
        din3 => arr_q1,
        din4 => trunc_ln34_1_reg_450_pp0_iter1_reg,
        dout => tmp_2_fu_403_p6);

    flow_control_loop_pipe_sequential_init_U : component fiat_25519_carry_square_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_2_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln34_fu_228_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_2_fu_72 <= add_ln34_fu_238_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_2_fu_72 <= ap_const_lv4_3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                arr_1_addr_1_reg_502 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
                    arr_1_addr_reg_473(0) <= zext_ln22_fu_259_p1(2 - 1 downto 0)(0);
                arr_2_addr_1_reg_508 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
                    arr_2_addr_reg_479(0) <= zext_ln22_fu_259_p1(2 - 1 downto 0)(0);
                arr_3_addr_1_reg_514 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
                    arr_3_addr_reg_485(0) <= zext_ln22_fu_259_p1(2 - 1 downto 0)(0);
                arr_addr_1_reg_496 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
                    arr_addr_reg_467(0) <= zext_ln22_fu_259_p1(2 - 1 downto 0)(0);
                i_reg_439 <= ap_sig_allocacmp_i;
                trunc_ln34_1_reg_450_pp0_iter1_reg <= trunc_ln34_1_reg_450;
                trunc_ln37_reg_456 <= trunc_ln37_fu_273_p1;
                    zext_ln40_cast_reg_433(31 downto 0) <= zext_ln40_cast_fu_216_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_228_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln34_1_reg_450 <= trunc_ln34_1_fu_234_p1;
            end if;
        end if;
    end process;
    zext_ln40_cast_reg_433(62 downto 32) <= "0000000000000000000000000000000";
    arr_addr_reg_467(1) <= '0';
    arr_1_addr_reg_473(1) <= '0';
    arr_2_addr_reg_479(1) <= '0';
    arr_3_addr_reg_485(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln34_fu_238_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_2));
    add_ln40_1_fu_292_p2 <= std_logic_vector(unsigned(empty_fu_267_p2) + unsigned(ap_const_lv3_7));
    add_ln40_2_fu_313_p2 <= std_logic_vector(unsigned(i_reg_439) + unsigned(ap_const_lv4_1));
    add_ln40_3_fu_416_p2 <= std_logic_vector(unsigned(tmp_2_fu_403_p6) + unsigned(shl_ln40_1_fu_395_p3));
    add_ln40_fu_371_p2 <= std_logic_vector(unsigned(tmp_9_fu_358_p6) + unsigned(shl_ln1_fu_350_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_149_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_149 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln34_fu_228_p2)
    begin
        if (((icmp_ln34_fu_228_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_2_fu_72, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i <= ap_const_lv4_3;
        else 
            ap_sig_allocacmp_i <= i_2_fu_72;
        end if; 
    end process;

    arg1_r_1_address0 <= zext_ln37_fu_287_p1(3 - 1 downto 0);

    arg1_r_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            arg1_r_1_ce0 <= ap_const_logic_1;
        else 
            arg1_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arg1_r_address0 <= zext_ln40_2_fu_308_p1(3 - 1 downto 0);

    arg1_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            arg1_r_ce0 <= ap_const_logic_1;
        else 
            arg1_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_1_address0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, arr_1_addr_reg_473, arr_1_addr_1_reg_502, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)) then 
                arr_1_address0 <= arr_1_addr_1_reg_502;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) then 
                arr_1_address0 <= arr_1_addr_reg_473;
            else 
                arr_1_address0 <= "XX";
            end if;
        else 
            arr_1_address0 <= "XX";
        end if; 
    end process;


    arr_1_address1_assign_proc : process(trunc_ln34_1_reg_450, zext_ln22_fu_259_p1, zext_ln40_4_fu_328_p1, ap_condition_149)
    begin
        if ((ap_const_boolean_1 = ap_condition_149)) then
            if ((trunc_ln34_1_reg_450 = ap_const_lv2_0)) then 
                arr_1_address1 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
            elsif ((trunc_ln34_1_reg_450 = ap_const_lv2_1)) then 
                arr_1_address1 <= zext_ln22_fu_259_p1(2 - 1 downto 0);
            else 
                arr_1_address1 <= "XX";
            end if;
        else 
            arr_1_address1 <= "XX";
        end if; 
    end process;


    arr_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)))) then 
            arr_1_ce0 <= ap_const_logic_1;
        else 
            arr_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_0)))) then 
            arr_1_ce1 <= ap_const_logic_1;
        else 
            arr_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_1_d0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, ap_block_pp0_stage0, add_ln40_fu_371_p2, add_ln40_3_fu_416_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)) then 
                arr_1_d0 <= add_ln40_3_fu_416_p2;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) then 
                arr_1_d0 <= add_ln40_fu_371_p2;
            else 
                arr_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)))) then 
            arr_1_we0 <= ap_const_logic_1;
        else 
            arr_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_2_address0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, arr_2_addr_reg_479, arr_2_addr_1_reg_508, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) then 
                arr_2_address0 <= arr_2_addr_1_reg_508;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) then 
                arr_2_address0 <= arr_2_addr_reg_479;
            else 
                arr_2_address0 <= "XX";
            end if;
        else 
            arr_2_address0 <= "XX";
        end if; 
    end process;


    arr_2_address1_assign_proc : process(trunc_ln34_1_reg_450, zext_ln22_fu_259_p1, zext_ln40_4_fu_328_p1, ap_condition_149)
    begin
        if ((ap_const_boolean_1 = ap_condition_149)) then
            if ((trunc_ln34_1_reg_450 = ap_const_lv2_1)) then 
                arr_2_address1 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
            elsif ((trunc_ln34_1_reg_450 = ap_const_lv2_2)) then 
                arr_2_address1 <= zext_ln22_fu_259_p1(2 - 1 downto 0);
            else 
                arr_2_address1 <= "XX";
            end if;
        else 
            arr_2_address1 <= "XX";
        end if; 
    end process;


    arr_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)))) then 
            arr_2_ce0 <= ap_const_logic_1;
        else 
            arr_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_1)))) then 
            arr_2_ce1 <= ap_const_logic_1;
        else 
            arr_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_2_d0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, ap_block_pp0_stage0, add_ln40_fu_371_p2, add_ln40_3_fu_416_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)) then 
                arr_2_d0 <= add_ln40_3_fu_416_p2;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) then 
                arr_2_d0 <= add_ln40_fu_371_p2;
            else 
                arr_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_1)))) then 
            arr_2_we0 <= ap_const_logic_1;
        else 
            arr_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_address0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, arr_3_addr_reg_485, arr_3_addr_1_reg_514, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) then 
                arr_3_address0 <= arr_3_addr_reg_485;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) then 
                arr_3_address0 <= arr_3_addr_1_reg_514;
            else 
                arr_3_address0 <= "XX";
            end if;
        else 
            arr_3_address0 <= "XX";
        end if; 
    end process;


    arr_3_address1_assign_proc : process(trunc_ln34_1_reg_450, zext_ln22_fu_259_p1, zext_ln40_4_fu_328_p1, ap_condition_149)
    begin
        if ((ap_const_boolean_1 = ap_condition_149)) then
            if ((trunc_ln34_1_reg_450 = ap_const_lv2_2)) then 
                arr_3_address1 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
            elsif ((trunc_ln34_1_reg_450 = ap_const_lv2_3)) then 
                arr_3_address1 <= zext_ln22_fu_259_p1(2 - 1 downto 0);
            else 
                arr_3_address1 <= "XX";
            end if;
        else 
            arr_3_address1 <= "XX";
        end if; 
    end process;


    arr_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)))) then 
            arr_3_ce0 <= ap_const_logic_1;
        else 
            arr_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_3)))) then 
            arr_3_ce1 <= ap_const_logic_1;
        else 
            arr_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_3_d0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, ap_block_pp0_stage0, add_ln40_fu_371_p2, add_ln40_3_fu_416_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) then 
                arr_3_d0 <= add_ln40_fu_371_p2;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) then 
                arr_3_d0 <= add_ln40_3_fu_416_p2;
            else 
                arr_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)))) then 
            arr_3_we0 <= ap_const_logic_1;
        else 
            arr_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_address0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, arr_addr_reg_467, arr_addr_1_reg_496, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) then 
                arr_address0 <= arr_addr_1_reg_496;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)) then 
                arr_address0 <= arr_addr_reg_467;
            else 
                arr_address0 <= "XX";
            end if;
        else 
            arr_address0 <= "XX";
        end if; 
    end process;


    arr_address1_assign_proc : process(trunc_ln34_1_reg_450, zext_ln22_fu_259_p1, zext_ln40_4_fu_328_p1, ap_condition_149)
    begin
        if ((ap_const_boolean_1 = ap_condition_149)) then
            if ((trunc_ln34_1_reg_450 = ap_const_lv2_3)) then 
                arr_address1 <= zext_ln40_4_fu_328_p1(2 - 1 downto 0);
            elsif ((trunc_ln34_1_reg_450 = ap_const_lv2_0)) then 
                arr_address1 <= zext_ln22_fu_259_p1(2 - 1 downto 0);
            else 
                arr_address1 <= "XX";
            end if;
        else 
            arr_address1 <= "XX";
        end if; 
    end process;


    arr_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)))) then 
            arr_ce0 <= ap_const_logic_1;
        else 
            arr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    arr_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln34_1_reg_450 = ap_const_lv2_0)))) then 
            arr_ce1 <= ap_const_logic_1;
        else 
            arr_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    arr_d0_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln34_1_reg_450_pp0_iter1_reg, ap_block_pp0_stage0, add_ln40_fu_371_p2, add_ln40_3_fu_416_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) then 
                arr_d0 <= add_ln40_3_fu_416_p2;
            elsif ((trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)) then 
                arr_d0 <= add_ln40_fu_371_p2;
            else 
                arr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arr_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    arr_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln34_1_reg_450_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln34_1_reg_450_pp0_iter1_reg = ap_const_lv2_0)))) then 
            arr_we0 <= ap_const_logic_1;
        else 
            arr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_267_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln34_fu_249_p1));
    icmp_ln34_fu_228_p2 <= "1" when (unsigned(ap_sig_allocacmp_i) < unsigned(ap_const_lv4_9)) else "0";
    lshr_ln40_1_fu_318_p4 <= add_ln40_2_fu_313_p2(3 downto 2);
    lshr_ln4_fu_277_p4 <= empty_fu_267_p2(2 downto 1);
    lshr_ln5_fu_298_p4 <= add_ln40_1_fu_292_p2(2 downto 1);
    mul_ln40_1_fu_208_p0 <= zext_ln40_cast_reg_433(32 - 1 downto 0);
    mul_ln40_1_fu_208_p1 <= mul_ln40_1_fu_208_p10(32 - 1 downto 0);
    mul_ln40_1_fu_208_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_336_p4),63));
    mul_ln40_fu_212_p0 <= zext_ln40_cast_reg_433(32 - 1 downto 0);
    mul_ln40_fu_212_p1 <= mul_ln40_fu_212_p10(32 - 1 downto 0);
    mul_ln40_fu_212_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_381_p4),63));
    shl_ln1_fu_350_p3 <= (mul_ln40_1_fu_208_p2 & ap_const_lv1_0);
    shl_ln40_1_fu_395_p3 <= (mul_ln40_fu_212_p2 & ap_const_lv1_0);
    tmp_fu_252_p3 <= i_reg_439(2 downto 2);
    trunc_ln34_1_fu_234_p1 <= ap_sig_allocacmp_i(2 - 1 downto 0);
    trunc_ln34_fu_249_p1 <= i_reg_439(3 - 1 downto 0);
    trunc_ln37_fu_273_p1 <= empty_fu_267_p2(1 - 1 downto 0);
    zext_ln22_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_252_p3),64));
    zext_ln37_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_fu_277_p4),64));
    zext_ln40_2_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_298_p4),64));
    zext_ln40_4_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln40_1_fu_318_p4),64));
    zext_ln40_cast_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln40),63));
end behav;
