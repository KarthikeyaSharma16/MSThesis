// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_1_load_5,
        arr_2_load_4,
        arr_3_load_4,
        arr_load_5,
        arr_load_4,
        add_ln60_3,
        mul211,
        mul202,
        mul237,
        mul221,
        mul229,
        mul2,
        mul246,
        mul254,
        mul262,
        mul290,
        mul3,
        mul299,
        mul318,
        mul325,
        mul5,
        mul4,
        mul344,
        mul369,
        mul353,
        mul360,
        add23925_out,
        add23925_out_ap_vld,
        add27423_out,
        add27423_out_ap_vld,
        add30121_out,
        add30121_out_ap_vld,
        add33719_out,
        add33719_out_ap_vld,
        add37117_out,
        add37117_out_ap_vld,
        add20414_out,
        add20414_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr_1_load_5;
input  [63:0] arr_2_load_4;
input  [63:0] arr_3_load_4;
input  [63:0] arr_load_5;
input  [63:0] arr_load_4;
input  [63:0] add_ln60_3;
input  [63:0] mul211;
input  [63:0] mul202;
input  [63:0] mul237;
input  [63:0] mul221;
input  [63:0] mul229;
input  [63:0] mul2;
input  [63:0] mul246;
input  [63:0] mul254;
input  [63:0] mul262;
input  [63:0] mul290;
input  [63:0] mul3;
input  [63:0] mul299;
input  [63:0] mul318;
input  [63:0] mul325;
input  [63:0] mul5;
input  [63:0] mul4;
input  [63:0] mul344;
input  [63:0] mul369;
input  [63:0] mul353;
input  [63:0] mul360;
output  [63:0] add23925_out;
output   add23925_out_ap_vld;
output  [63:0] add27423_out;
output   add27423_out_ap_vld;
output  [63:0] add30121_out;
output   add30121_out_ap_vld;
output  [63:0] add33719_out;
output   add33719_out_ap_vld;
output  [63:0] add37117_out;
output   add37117_out_ap_vld;
output  [63:0] add20414_out;
output   add20414_out_ap_vld;

reg ap_idle;
reg add23925_out_ap_vld;
reg add27423_out_ap_vld;
reg add30121_out_ap_vld;
reg add33719_out_ap_vld;
reg add37117_out_ap_vld;
reg add20414_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_362_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] i_fu_98;
wire   [2:0] i_2_fu_368_p2;
wire    ap_loop_init;
wire   [2:0] i_1_load_fu_359_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] add20414_fu_102;
wire   [63:0] add_ln78_fu_511_p2;
reg   [63:0] add37117_fu_106;
wire   [63:0] add_ln106_3_fu_493_p2;
reg   [63:0] add33719_fu_110;
wire   [63:0] add_ln100_3_fu_391_p2;
reg   [63:0] add30121_fu_114;
wire   [63:0] add_ln94_2_fu_414_p2;
reg   [63:0] add27423_fu_118;
wire   [63:0] add_ln89_3_fu_442_p2;
reg   [63:0] add23925_fu_122;
wire   [63:0] add_ln83_2_fu_465_p2;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] add_ln100_fu_377_p2;
wire   [63:0] add_ln100_1_fu_381_p2;
wire   [63:0] add_ln100_2_fu_385_p2;
wire   [63:0] add_ln94_fu_405_p2;
wire   [63:0] add_ln94_1_fu_409_p2;
wire   [63:0] add_ln89_fu_428_p2;
wire   [63:0] add_ln89_1_fu_432_p2;
wire   [63:0] add_ln89_2_fu_436_p2;
wire   [63:0] add_ln83_fu_456_p2;
wire   [63:0] add_ln83_1_fu_460_p2;
wire   [63:0] add_ln106_fu_479_p2;
wire   [63:0] add_ln106_1_fu_483_p2;
wire   [63:0] add_ln106_2_fu_487_p2;
wire   [63:0] add_ln78_1_fu_507_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_360;
reg    ap_condition_364;
reg    ap_condition_367;
reg    ap_condition_370;
reg    ap_condition_373;
reg    ap_condition_376;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add20414_fu_102 <= add_ln60_3;
        end else if ((1'b1 == ap_condition_360)) begin
            add20414_fu_102 <= add_ln78_fu_511_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add23925_fu_122 <= arr_1_load_5;
        end else if ((1'b1 == ap_condition_364)) begin
            add23925_fu_122 <= add_ln83_2_fu_465_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add27423_fu_118 <= arr_2_load_4;
        end else if ((1'b1 == ap_condition_367)) begin
            add27423_fu_118 <= add_ln89_3_fu_442_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add30121_fu_114 <= arr_3_load_4;
        end else if ((1'b1 == ap_condition_370)) begin
            add30121_fu_114 <= add_ln94_2_fu_414_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add33719_fu_110 <= arr_load_5;
        end else if ((1'b1 == ap_condition_373)) begin
            add33719_fu_110 <= add_ln100_3_fu_391_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add37117_fu_106 <= arr_load_4;
        end else if ((1'b1 == ap_condition_376)) begin
            add37117_fu_106 <= add_ln106_3_fu_493_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 3'd0;
        end else if (((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_98 <= i_2_fu_368_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add20414_out_ap_vld = 1'b1;
    end else begin
        add20414_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add23925_out_ap_vld = 1'b1;
    end else begin
        add23925_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add27423_out_ap_vld = 1'b1;
    end else begin
        add27423_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add30121_out_ap_vld = 1'b1;
    end else begin
        add30121_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add33719_out_ap_vld = 1'b1;
    end else begin
        add33719_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add37117_out_ap_vld = 1'b1;
    end else begin
        add37117_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add20414_out = add20414_fu_102;

assign add23925_out = add23925_fu_122;

assign add27423_out = add27423_fu_118;

assign add30121_out = add30121_fu_114;

assign add33719_out = add33719_fu_110;

assign add37117_out = add37117_fu_106;

assign add_ln100_1_fu_381_p2 = (mul4 + mul5);

assign add_ln100_2_fu_385_p2 = (add_ln100_fu_377_p2 + add_ln100_1_fu_381_p2);

assign add_ln100_3_fu_391_p2 = (add_ln100_2_fu_385_p2 + add33719_fu_110);

assign add_ln100_fu_377_p2 = (mul318 + mul325);

assign add_ln106_1_fu_483_p2 = (mul360 + mul353);

assign add_ln106_2_fu_487_p2 = (add_ln106_fu_479_p2 + add_ln106_1_fu_483_p2);

assign add_ln106_3_fu_493_p2 = (add_ln106_2_fu_487_p2 + add37117_fu_106);

assign add_ln106_fu_479_p2 = (mul344 + mul369);

assign add_ln78_1_fu_507_p2 = (mul202 + mul211);

assign add_ln78_fu_511_p2 = (add_ln78_1_fu_507_p2 + add20414_fu_102);

assign add_ln83_1_fu_460_p2 = (add_ln83_fu_456_p2 + mul229);

assign add_ln83_2_fu_465_p2 = (add_ln83_1_fu_460_p2 + add23925_fu_122);

assign add_ln83_fu_456_p2 = (mul237 + mul221);

assign add_ln89_1_fu_432_p2 = (mul262 + mul254);

assign add_ln89_2_fu_436_p2 = (add_ln89_fu_428_p2 + add_ln89_1_fu_432_p2);

assign add_ln89_3_fu_442_p2 = (add_ln89_2_fu_436_p2 + add27423_fu_118);

assign add_ln89_fu_428_p2 = (mul2 + mul246);

assign add_ln94_1_fu_409_p2 = (add_ln94_fu_405_p2 + mul299);

assign add_ln94_2_fu_414_p2 = (add_ln94_1_fu_409_p2 + add30121_fu_114);

assign add_ln94_fu_405_p2 = (mul290 + mul3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_360 = (~(i_1_load_fu_359_p1 == 3'd4) & ~(i_1_load_fu_359_p1 == 3'd3) & ~(i_1_load_fu_359_p1 == 3'd2) & ~(i_1_load_fu_359_p1 == 3'd1) & ~(i_1_load_fu_359_p1 == 3'd5) & (icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_364 = ((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_359_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_367 = ((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_359_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_370 = ((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_359_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_373 = ((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_359_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_376 = ((icmp_ln68_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_359_p1 == 3'd5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i_1_load_fu_359_p1 = i_fu_98;

assign i_2_fu_368_p2 = (i_fu_98 + 3'd1);

assign icmp_ln68_fu_362_p2 = ((i_fu_98 == 3'd6) ? 1'b1 : 1'b0);

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9
