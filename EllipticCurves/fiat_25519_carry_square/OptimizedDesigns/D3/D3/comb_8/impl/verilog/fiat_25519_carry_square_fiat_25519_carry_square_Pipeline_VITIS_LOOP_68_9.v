// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln40_1,
        add_ln40_2,
        add_ln40_4,
        add118_113_reload,
        add_ln40_5,
        add_ln40_3,
        mul202,
        mul211,
        mul254,
        mul262,
        mul3,
        mul246,
        mul318,
        mul325,
        mul6,
        mul5,
        mul353,
        mul360,
        mul369,
        mul344,
        mul4,
        mul290,
        mul299,
        mul229,
        mul237,
        mul221,
        add371_129_out,
        add371_129_out_ap_vld,
        add239_127_out,
        add239_127_out_ap_vld,
        add301_125_out,
        add301_125_out_ap_vld,
        add21323_out,
        add21323_out_ap_vld,
        add33720_out,
        add33720_out_ap_vld,
        add27418_out,
        add27418_out_ap_vld,
        p_out,
        p_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] add_ln40_1;
input  [63:0] add_ln40_2;
input  [63:0] add_ln40_4;
input  [63:0] add118_113_reload;
input  [63:0] add_ln40_5;
input  [63:0] add_ln40_3;
input  [63:0] mul202;
input  [63:0] mul211;
input  [63:0] mul254;
input  [63:0] mul262;
input  [63:0] mul3;
input  [63:0] mul246;
input  [63:0] mul318;
input  [63:0] mul325;
input  [63:0] mul6;
input  [63:0] mul5;
input  [63:0] mul353;
input  [63:0] mul360;
input  [63:0] mul369;
input  [63:0] mul344;
input  [63:0] mul4;
input  [63:0] mul290;
input  [63:0] mul299;
input  [63:0] mul229;
input  [63:0] mul237;
input  [63:0] mul221;
output  [63:0] add371_129_out;
output   add371_129_out_ap_vld;
output  [63:0] add239_127_out;
output   add239_127_out_ap_vld;
output  [63:0] add301_125_out;
output   add301_125_out_ap_vld;
output  [63:0] add21323_out;
output   add21323_out_ap_vld;
output  [63:0] add33720_out;
output   add33720_out_ap_vld;
output  [63:0] add27418_out;
output   add27418_out_ap_vld;
output  [63:0] p_out;
output   p_out_ap_vld;

reg ap_idle;
reg add371_129_out_ap_vld;
reg add239_127_out_ap_vld;
reg add301_125_out_ap_vld;
reg add21323_out_ap_vld;
reg add33720_out_ap_vld;
reg add27418_out_ap_vld;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_380_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] i_fu_100;
wire   [2:0] i_2_fu_545_p2;
wire    ap_loop_init;
wire   [2:0] i_1_load_fu_377_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] empty_fu_104;
wire   [63:0] add_ln78_fu_450_p2;
reg   [63:0] add27418_fu_108;
wire   [63:0] add_ln89_3_fu_403_p2;
reg   [63:0] add33720_fu_112;
wire   [63:0] add_ln100_3_fu_431_p2;
reg   [63:0] add21323_fu_116;
reg   [63:0] add301_125_fu_120;
wire   [63:0] add_ln94_2_fu_483_p2;
wire   [2:0] or_ln74_fu_465_p2;
reg   [63:0] add239_127_fu_124;
wire   [63:0] add_ln83_2_fu_506_p2;
reg   [63:0] add371_129_fu_128;
wire   [63:0] add_ln106_3_fu_534_p2;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] add_ln89_fu_389_p2;
wire   [63:0] add_ln89_1_fu_393_p2;
wire   [63:0] add_ln89_2_fu_397_p2;
wire   [63:0] add_ln100_fu_417_p2;
wire   [63:0] add_ln100_1_fu_421_p2;
wire   [63:0] add_ln100_2_fu_425_p2;
wire   [63:0] add_ln78_1_fu_445_p2;
wire   [63:0] add_ln94_1_fu_478_p2;
wire   [63:0] add_ln94_fu_474_p2;
wire   [63:0] add_ln83_1_fu_501_p2;
wire   [63:0] add_ln83_fu_497_p2;
wire   [63:0] add_ln106_fu_520_p2;
wire   [63:0] add_ln106_1_fu_524_p2;
wire   [63:0] add_ln106_2_fu_528_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_359;
reg    ap_condition_362;
reg    ap_condition_365;
reg    ap_condition_368;
reg    ap_condition_371;
reg    ap_condition_374;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiat_25519_carry_square_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add21323_fu_116 <= add118_113_reload;
        end else if ((1'b1 == ap_condition_359)) begin
            add21323_fu_116 <= add_ln78_fu_450_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add239_127_fu_124 <= add_ln40_2;
        end else if ((1'b1 == ap_condition_362)) begin
            add239_127_fu_124 <= add_ln83_2_fu_506_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add27418_fu_108 <= add_ln40_3;
        end else if ((1'b1 == ap_condition_365)) begin
            add27418_fu_108 <= add_ln89_3_fu_403_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add301_125_fu_120 <= add_ln40_4;
        end else if ((1'b1 == ap_condition_368)) begin
            add301_125_fu_120 <= add_ln94_2_fu_483_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add33720_fu_112 <= add_ln40_5;
        end else if ((1'b1 == ap_condition_371)) begin
            add33720_fu_112 <= add_ln100_3_fu_431_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            add371_129_fu_128 <= add_ln40_1;
        end else if ((1'b1 == ap_condition_374)) begin
            add371_129_fu_128 <= add_ln106_3_fu_534_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_104 <= add118_113_reload;
        end else if ((1'b1 == ap_condition_359)) begin
            empty_fu_104 <= add_ln78_fu_450_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 3'd0;
        end else if (((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_100 <= i_2_fu_545_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add21323_out_ap_vld = 1'b1;
    end else begin
        add21323_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add239_127_out_ap_vld = 1'b1;
    end else begin
        add239_127_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add27418_out_ap_vld = 1'b1;
    end else begin
        add27418_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add301_125_out_ap_vld = 1'b1;
    end else begin
        add301_125_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add33720_out_ap_vld = 1'b1;
    end else begin
        add33720_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add371_129_out_ap_vld = 1'b1;
    end else begin
        add371_129_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add21323_out = add21323_fu_116;

assign add239_127_out = add239_127_fu_124;

assign add27418_out = add27418_fu_108;

assign add301_125_out = add301_125_fu_120;

assign add33720_out = add33720_fu_112;

assign add371_129_out = add371_129_fu_128;

assign add_ln100_1_fu_421_p2 = (mul5 + mul6);

assign add_ln100_2_fu_425_p2 = (add_ln100_fu_417_p2 + add_ln100_1_fu_421_p2);

assign add_ln100_3_fu_431_p2 = (add_ln100_2_fu_425_p2 + add33720_fu_112);

assign add_ln100_fu_417_p2 = (mul318 + mul325);

assign add_ln106_1_fu_524_p2 = (mul344 + mul369);

assign add_ln106_2_fu_528_p2 = (add_ln106_fu_520_p2 + add_ln106_1_fu_524_p2);

assign add_ln106_3_fu_534_p2 = (add_ln106_2_fu_528_p2 + add371_129_fu_128);

assign add_ln106_fu_520_p2 = (mul353 + mul360);

assign add_ln78_1_fu_445_p2 = (mul202 + add21323_fu_116);

assign add_ln78_fu_450_p2 = (add_ln78_1_fu_445_p2 + mul211);

assign add_ln83_1_fu_501_p2 = (mul221 + add239_127_fu_124);

assign add_ln83_2_fu_506_p2 = (add_ln83_1_fu_501_p2 + add_ln83_fu_497_p2);

assign add_ln83_fu_497_p2 = (mul229 + mul237);

assign add_ln89_1_fu_393_p2 = (mul246 + mul3);

assign add_ln89_2_fu_397_p2 = (add_ln89_fu_389_p2 + add_ln89_1_fu_393_p2);

assign add_ln89_3_fu_403_p2 = (add_ln89_2_fu_397_p2 + add27418_fu_108);

assign add_ln89_fu_389_p2 = (mul254 + mul262);

assign add_ln94_1_fu_478_p2 = (mul299 + add301_125_fu_120);

assign add_ln94_2_fu_483_p2 = (add_ln94_1_fu_478_p2 + add_ln94_fu_474_p2);

assign add_ln94_fu_474_p2 = (mul4 + mul290);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_359 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd0));
end

always @ (*) begin
    ap_condition_362 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln74_fu_465_p2 == 3'd1));
end

always @ (*) begin
    ap_condition_365 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_368 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln74_fu_465_p2 == 3'd3));
end

always @ (*) begin
    ap_condition_371 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_1_load_fu_377_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_374 = ((icmp_ln68_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln74_fu_465_p2 == 3'd5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i_1_load_fu_377_p1 = i_fu_100;

assign i_2_fu_545_p2 = (i_fu_100 + 3'd2);

assign icmp_ln68_fu_380_p2 = ((i_fu_100 == 3'd6) ? 1'b1 : 1'b0);

assign or_ln74_fu_465_p2 = (i_fu_100 | 3'd1);

assign p_out = empty_fu_104;

endmodule //fiat_25519_carry_square_fiat_25519_carry_square_Pipeline_VITIS_LOOP_68_9
