

================================================================
== Vitis HLS Report for 'fiat_25519_carry_square_Pipeline_VITIS_LOOP_23_1'
================================================================
* Date:           Fri May 10 12:45:57 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_32 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.183 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       14|       14|  0.140 us|  0.140 us|   14|   14|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_23_1  |       12|       12|        10|          1|          1|     4|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.22>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 13 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln30_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %zext_ln30_1"   --->   Operation 14 'read' 'zext_ln30_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%conv17_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %conv17"   --->   Operation 15 'read' 'conv17_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_2_3_018_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_3_018_reload"   --->   Operation 16 'read' 'arg1_r_2_3_018_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_1_3_017_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_3_017_reload"   --->   Operation 17 'read' 'arg1_r_1_3_017_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg1_r_0_3_016_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_3_016_reload"   --->   Operation 18 'read' 'arg1_r_0_3_016_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg1_r_2_2_015_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_2_015_reload"   --->   Operation 19 'read' 'arg1_r_2_2_015_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg1_r_1_2_014_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_2_014_reload"   --->   Operation 20 'read' 'arg1_r_1_2_014_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg1_r_0_2_013_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_2_013_reload"   --->   Operation 21 'read' 'arg1_r_0_2_013_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg1_r_2_1_012_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_1_012_reload"   --->   Operation 22 'read' 'arg1_r_2_1_012_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg1_r_1_1_011_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_1_011_reload"   --->   Operation 23 'read' 'arg1_r_1_1_011_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg1_r_0_1_010_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_1_010_reload"   --->   Operation 24 'read' 'arg1_r_0_1_010_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_2_07_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_2_07_reload"   --->   Operation 25 'read' 'arg1_r_2_07_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_1_04_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_1_04_reload"   --->   Operation 26 'read' 'arg1_r_1_04_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_0_01_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %arg1_r_0_01_reload"   --->   Operation 27 'read' 'arg1_r_0_01_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln30_1_cast = zext i32 %zext_ln30_1_read"   --->   Operation 28 'zext' 'zext_ln30_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%conv17_cast = zext i32 %conv17_read"   --->   Operation 29 'zext' 'conv17_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 1, i4 %i_1"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc25"   --->   Operation 31 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%i = load i4 %i_1" [d3.cpp:23]   --->   Operation 32 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.79ns)   --->   "%icmp_ln23 = icmp_ult  i4 %i, i4 9" [d3.cpp:23]   --->   Operation 33 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %icmp_ln23, void %VITIS_LOOP_34_3.exitStub, void %for.inc25.split" [d3.cpp:23]   --->   Operation 34 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [8/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 35 'urem' 'urem_ln22' <Predicate = (icmp_ln23)> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.79ns)   --->   "%add_ln23 = add i4 %i, i4 2" [d3.cpp:23]   --->   Operation 36 'add' 'add_ln23' <Predicate = (icmp_ln23)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln23 = store i4 %add_ln23, i4 %i_1" [d3.cpp:23]   --->   Operation 37 'store' 'store_ln23' <Predicate = (icmp_ln23)> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln23 = br void %for.inc25" [d3.cpp:23]   --->   Operation 38 'br' 'br_ln23' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.78>
ST_2 : Operation 39 [7/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 39 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 0.78>
ST_3 : Operation 40 [6/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 40 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.78>
ST_4 : Operation 41 [5/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 41 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 0.78>
ST_5 : Operation 42 [4/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 42 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 0.78>
ST_6 : Operation 43 [3/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 43 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 0.78>
ST_7 : Operation 44 [2/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 44 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 1.52>
ST_8 : Operation 45 [1/8] (0.78ns)   --->   "%urem_ln22 = urem i4 %i, i4 3" [d3.cpp:22]   --->   Operation 45 'urem' 'urem_ln22' <Predicate = true> <Delay = 0.78> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 7> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln22 = trunc i2 %urem_ln22" [d3.cpp:22]   --->   Operation 46 'trunc' 'trunc_ln22' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 47 [1/1] (0.73ns)   --->   "%switch_ln30 = switch i2 %trunc_ln22, void %arrayidx23.1.case.0, i2 0, void %arrayidx23.1.case.1, i2 1, void %arrayidx23.1.case.2" [d3.cpp:30]   --->   Operation 47 'switch' 'switch_ln30' <Predicate = true> <Delay = 0.73>

State 9 <SV = 8> <Delay = 2.70>
ST_9 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln22_1 = zext i4 %i" [d3.cpp:22]   --->   Operation 48 'zext' 'zext_ln22_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 49 [1/1] (1.23ns)   --->   "%mul_ln22 = mul i9 %zext_ln22_1, i9 22" [d3.cpp:22]   --->   Operation 49 'mul' 'mul_ln22' <Predicate = true> <Delay = 1.23> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.23> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i3 @_ssdm_op_PartSelect.i3.i9.i32.i32, i9 %mul_ln22, i32 6, i32 8" [d3.cpp:22]   --->   Operation 50 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i3 %tmp_4" [d3.cpp:22]   --->   Operation 51 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 52 [1/1] (0.79ns)   --->   "%empty = sub i4 9, i4 %i" [d3.cpp:23]   --->   Operation 52 'sub' 'empty' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln26 = trunc i4 %empty" [d3.cpp:26]   --->   Operation 53 'trunc' 'trunc_ln26' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty, i32 2, i32 3" [d3.cpp:30]   --->   Operation 54 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%arr_addr = getelementptr i64 %arr, i64 0, i64 %zext_ln22" [d3.cpp:30]   --->   Operation 55 'getelementptr' 'arr_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 56 [1/1] (0.00ns)   --->   "%arr_1_addr = getelementptr i64 %arr_1, i64 0, i64 %zext_ln22" [d3.cpp:30]   --->   Operation 56 'getelementptr' 'arr_1_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 57 [1/1] (0.00ns)   --->   "%arr_2_addr = getelementptr i64 %arr_2, i64 0, i64 %zext_ln22" [d3.cpp:30]   --->   Operation 57 'getelementptr' 'arr_2_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 58 [2/2] (0.67ns)   --->   "%arr_load = load i2 %arr_addr" [d3.cpp:30]   --->   Operation 58 'load' 'arr_load' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 59 [2/2] (0.67ns)   --->   "%arr_1_load = load i2 %arr_1_addr" [d3.cpp:30]   --->   Operation 59 'load' 'arr_1_load' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 60 [2/2] (0.67ns)   --->   "%arr_2_load = load i2 %arr_2_addr" [d3.cpp:30]   --->   Operation 60 'load' 'arr_2_load' <Predicate = (trunc_ln22 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 61 [1/1] (0.79ns)   --->   "%add_ln29 = add i4 %i, i4 1" [d3.cpp:29]   --->   Operation 61 'add' 'add_ln29' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln22_2 = zext i4 %add_ln29" [d3.cpp:22]   --->   Operation 62 'zext' 'zext_ln22_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 63 [1/1] (1.23ns)   --->   "%mul_ln22_1 = mul i9 %zext_ln22_2, i9 22" [d3.cpp:22]   --->   Operation 63 'mul' 'mul_ln22_1' <Predicate = true> <Delay = 1.23> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.23> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i3 @_ssdm_op_PartSelect.i3.i9.i32.i32, i9 %mul_ln22_1, i32 6, i32 8" [d3.cpp:22]   --->   Operation 64 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln30_3 = zext i3 %tmp_8" [d3.cpp:30]   --->   Operation 65 'zext' 'zext_ln30_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 66 [1/1] (0.79ns)   --->   "%add_ln30_1 = add i4 %empty, i4 15" [d3.cpp:30]   --->   Operation 66 'add' 'add_ln30_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln30_1 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln30_1, i32 2, i32 3" [d3.cpp:30]   --->   Operation 67 'partselect' 'trunc_ln30_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 68 [1/1] (0.54ns)   --->   "%icmp_ln30 = icmp_eq  i2 %trunc_ln30_1, i2 0" [d3.cpp:30]   --->   Operation 68 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%arr_addr_1 = getelementptr i64 %arr, i64 0, i64 %zext_ln30_3" [d3.cpp:30]   --->   Operation 69 'getelementptr' 'arr_addr_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.00ns)   --->   "%arr_1_addr_1 = getelementptr i64 %arr_1, i64 0, i64 %zext_ln30_3" [d3.cpp:30]   --->   Operation 70 'getelementptr' 'arr_1_addr_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%arr_2_addr_1 = getelementptr i64 %arr_2, i64 0, i64 %zext_ln30_3" [d3.cpp:30]   --->   Operation 71 'getelementptr' 'arr_2_addr_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [2/2] (0.67ns)   --->   "%arr_load_1 = load i2 %arr_addr_1" [d3.cpp:30]   --->   Operation 72 'load' 'arr_load_1' <Predicate = (trunc_ln22 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 73 [2/2] (0.67ns)   --->   "%arr_1_load_1 = load i2 %arr_1_addr_1" [d3.cpp:30]   --->   Operation 73 'load' 'arr_1_load_1' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 74 [2/2] (0.67ns)   --->   "%arr_2_load_1 = load i2 %arr_2_addr_1" [d3.cpp:30]   --->   Operation 74 'load' 'arr_2_load_1' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 112 'ret' 'ret_ln0' <Predicate = (!icmp_ln23)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 6.18>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%specpipeline_ln25 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d3.cpp:25]   --->   Operation 75 'specpipeline' 'specpipeline_ln25' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%speclooptripcount_ln22 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4" [d3.cpp:22]   --->   Operation 76 'speclooptripcount' 'speclooptripcount_ln22' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%specloopname_ln23 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d3.cpp:23]   --->   Operation 77 'specloopname' 'specloopname_ln23' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.47ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_0_01_reload_read, i32 %arg1_r_1_04_reload_read, i32 %arg1_r_2_07_reload_read, i2 %trunc_ln4" [d3.cpp:30]   --->   Operation 78 'mux' 'tmp_s' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 79 [1/1] (0.47ns)   --->   "%tmp_5 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_0_1_010_reload_read, i32 %arg1_r_1_1_011_reload_read, i32 %arg1_r_2_1_012_reload_read, i2 %trunc_ln4" [d3.cpp:30]   --->   Operation 79 'mux' 'tmp_5' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 80 [1/1] (0.47ns)   --->   "%tmp_6 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_0_2_013_reload_read, i32 %arg1_r_1_2_014_reload_read, i32 %arg1_r_2_2_015_reload_read, i2 %trunc_ln4" [d3.cpp:30]   --->   Operation 80 'mux' 'tmp_6' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 81 [1/1] (0.47ns)   --->   "%tmp_7 = mux i32 @_ssdm_op_Mux.ap_auto.3i32.i2, i32 %arg1_r_0_3_016_reload_read, i32 %arg1_r_1_3_017_reload_read, i32 %arg1_r_2_3_018_reload_read, i2 %trunc_ln4" [d3.cpp:30]   --->   Operation 81 'mux' 'tmp_7' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 82 [1/1] (0.52ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %tmp_s, i32 %tmp_5, i32 %tmp_6, i32 %tmp_7, i2 %trunc_ln26" [d3.cpp:30]   --->   Operation 82 'mux' 'tmp' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln30 = zext i32 %tmp" [d3.cpp:30]   --->   Operation 83 'zext' 'zext_ln30' <Predicate = true> <Delay = 0.00>
ST_10 : [1/1] (0.90ns)   --->   Input mux for Operation 84 '%mul_ln30 = mul i64 %zext_ln30, i64 %conv17_cast'
ST_10 : Operation 84 [1/1] (2.51ns)   --->   "%mul_ln30 = mul i64 %zext_ln30, i64 %conv17_cast" [d3.cpp:30]   --->   Operation 84 'mul' 'mul_ln30' <Predicate = true> <Delay = 2.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/2] (0.67ns)   --->   "%arr_load = load i2 %arr_addr" [d3.cpp:30]   --->   Operation 85 'load' 'arr_load' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 86 [1/2] (0.67ns)   --->   "%arr_1_load = load i2 %arr_1_addr" [d3.cpp:30]   --->   Operation 86 'load' 'arr_1_load' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 87 [1/2] (0.67ns)   --->   "%arr_2_load = load i2 %arr_2_addr" [d3.cpp:30]   --->   Operation 87 'load' 'arr_2_load' <Predicate = (trunc_ln22 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 88 [1/1] (0.47ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.3i64.i2, i64 %arr_load, i64 %arr_1_load, i64 %arr_2_load, i2 %trunc_ln22" [d3.cpp:30]   --->   Operation 88 'mux' 'tmp_1' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (1.08ns)   --->   "%add_ln30 = add i64 %tmp_1, i64 %mul_ln30" [d3.cpp:30]   --->   Operation 89 'add' 'add_ln30' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 90 [1/1] (0.44ns)   --->   "%select_ln30 = select i1 %icmp_ln30, i32 %arg1_r_0_01_reload_read, i32 %arg1_r_1_04_reload_read" [d3.cpp:30]   --->   Operation 90 'select' 'select_ln30' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 91 [1/1] (0.44ns)   --->   "%select_ln30_1 = select i1 %icmp_ln30, i32 %arg1_r_0_1_010_reload_read, i32 %arg1_r_1_1_011_reload_read" [d3.cpp:30]   --->   Operation 91 'select' 'select_ln30_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 92 [1/1] (0.44ns)   --->   "%select_ln30_2 = select i1 %icmp_ln30, i32 %arg1_r_0_2_013_reload_read, i32 %arg1_r_1_2_014_reload_read" [d3.cpp:30]   --->   Operation 92 'select' 'select_ln30_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 93 [1/1] (0.44ns)   --->   "%select_ln30_3 = select i1 %icmp_ln30, i32 %arg1_r_0_3_016_reload_read, i32 %arg1_r_1_3_017_reload_read" [d3.cpp:30]   --->   Operation 93 'select' 'select_ln30_3' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (0.52ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %select_ln30_3, i32 %select_ln30, i32 %select_ln30_1, i32 %select_ln30_2, i2 %trunc_ln26" [d3.cpp:30]   --->   Operation 94 'mux' 'tmp_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/2] (0.67ns)   --->   "%arr_load_1 = load i2 %arr_addr_1" [d3.cpp:30]   --->   Operation 95 'load' 'arr_load_1' <Predicate = (trunc_ln22 == 2)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 96 [1/2] (0.67ns)   --->   "%arr_1_load_1 = load i2 %arr_1_addr_1" [d3.cpp:30]   --->   Operation 96 'load' 'arr_1_load_1' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 97 [1/2] (0.67ns)   --->   "%arr_2_load_1 = load i2 %arr_2_addr_1" [d3.cpp:30]   --->   Operation 97 'load' 'arr_2_load_1' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 98 [1/1] (0.47ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.3i64.i2, i64 %arr_1_load_1, i64 %arr_2_load_1, i64 %arr_load_1, i2 %trunc_ln22" [d3.cpp:30]   --->   Operation 98 'mux' 'tmp_3' <Predicate = true> <Delay = 0.47> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln30_2 = zext i32 %tmp_2" [d3.cpp:30]   --->   Operation 99 'zext' 'zext_ln30_2' <Predicate = true> <Delay = 0.00>
ST_10 : [1/1] (0.72ns)   --->   Input mux for Operation 100 '%mul_ln30_1 = mul i63 %zext_ln30_1_cast, i63 %zext_ln30_2'
ST_10 : Operation 100 [1/1] (2.69ns)   --->   "%mul_ln30_1 = mul i63 %zext_ln30_1_cast, i63 %zext_ln30_2" [d3.cpp:30]   --->   Operation 100 'mul' 'mul_ln30_1' <Predicate = true> <Delay = 2.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %mul_ln30_1, i1 0" [d3.cpp:30]   --->   Operation 101 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 102 [1/1] (1.08ns)   --->   "%add_ln30_2 = add i64 %tmp_3, i64 %shl_ln" [d3.cpp:30]   --->   Operation 102 'add' 'add_ln30_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 103 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30, i2 %arr_1_addr" [d3.cpp:30]   --->   Operation 103 'store' 'store_ln30' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 104 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30_2, i2 %arr_2_addr_1" [d3.cpp:30]   --->   Operation 104 'store' 'store_ln30' <Predicate = (trunc_ln22 == 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln30 = br void %arrayidx23.1.exit" [d3.cpp:30]   --->   Operation 105 'br' 'br_ln30' <Predicate = (trunc_ln22 == 1)> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30, i2 %arr_addr" [d3.cpp:30]   --->   Operation 106 'store' 'store_ln30' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 107 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30_2, i2 %arr_1_addr_1" [d3.cpp:30]   --->   Operation 107 'store' 'store_ln30' <Predicate = (trunc_ln22 == 0)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln30 = br void %arrayidx23.1.exit" [d3.cpp:30]   --->   Operation 108 'br' 'br_ln30' <Predicate = (trunc_ln22 == 0)> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30, i2 %arr_2_addr" [d3.cpp:30]   --->   Operation 109 'store' 'store_ln30' <Predicate = (trunc_ln22 != 0 & trunc_ln22 != 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 110 [1/1] (0.67ns)   --->   "%store_ln30 = store i64 %add_ln30_2, i2 %arr_addr_1" [d3.cpp:30]   --->   Operation 110 'store' 'store_ln30' <Predicate = (trunc_ln22 != 0 & trunc_ln22 != 1)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln30 = br void %arrayidx23.1.exit" [d3.cpp:30]   --->   Operation 111 'br' 'br_ln30' <Predicate = (trunc_ln22 != 0 & trunc_ln22 != 1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.224ns
The critical path consists of the following:
	'alloca' operation ('i') [18]  (0.000 ns)
	'load' operation ('i', d3.cpp:23) on local variable 'i' [38]  (0.000 ns)
	'add' operation ('add_ln23', d3.cpp:23) [107]  (0.797 ns)
	'store' operation ('store_ln23', d3.cpp:23) of variable 'add_ln23', d3.cpp:23 on local variable 'i' [108]  (0.427 ns)

 <State 2>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 3>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 4>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 5>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 6>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 7>: 0.789ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)

 <State 8>: 1.524ns
The critical path consists of the following:
	'urem' operation ('urem_ln22', d3.cpp:22) [49]  (0.789 ns)
	blocking operation 0.735125 ns on control path)

 <State 9>: 2.704ns
The critical path consists of the following:
	'add' operation ('add_ln29', d3.cpp:29) [69]  (0.797 ns)
	'mul' operation ('mul_ln22_1', d3.cpp:22) [71]  (1.230 ns)
	'getelementptr' operation ('arr_addr_1', d3.cpp:30) [82]  (0.000 ns)
	'load' operation ('arr_load_1', d3.cpp:30) on array 'arr' [85]  (0.677 ns)

 <State 10>: 6.183ns
The critical path consists of the following:
	'mux' operation ('tmp_s', d3.cpp:30) [54]  (0.476 ns)
	'mux' operation ('tmp', d3.cpp:30) [58]  (0.525 ns)
	multiplexor before operation 'mul' with delay (0.905 ns)
'mul' operation ('mul_ln30', d3.cpp:30) [60]  (2.515 ns)
	'add' operation ('add_ln30', d3.cpp:30) [68]  (1.085 ns)
	'store' operation ('store_ln30', d3.cpp:30) of variable 'add_ln30', d3.cpp:30 on array 'arr_1' [95]  (0.677 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
