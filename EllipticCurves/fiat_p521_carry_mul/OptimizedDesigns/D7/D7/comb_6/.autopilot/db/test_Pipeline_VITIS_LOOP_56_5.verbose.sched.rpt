

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_56_5'
================================================================
* Date:           Thu May  9 21:59:33 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D7
* Solution:       comb_6 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.273 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_56_5  |        4|        4|         3|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.78>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add87_2237 = alloca i32 1"   --->   Operation 6 'alloca' 'add87_2237' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add114238 = alloca i32 1"   --->   Operation 7 'alloca' 'add114238' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add114_1101239 = alloca i32 1"   --->   Operation 8 'alloca' 'add114_1101239' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add114_164240 = alloca i32 1"   --->   Operation 9 'alloca' 'add114_164240' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add114_164_1241 = alloca i32 1"   --->   Operation 10 'alloca' 'add114_164_1241' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add114_283242 = alloca i32 1"   --->   Operation 11 'alloca' 'add114_283242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add114_283_1243 = alloca i32 1"   --->   Operation 12 'alloca' 'add114_283_1243' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add114_3244 = alloca i32 1"   --->   Operation 13 'alloca' 'add114_3244' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add114_3_1245 = alloca i32 1"   --->   Operation 14 'alloca' 'add114_3_1245' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 15 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_reload"   --->   Operation 16 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 17 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_8_reload"   --->   Operation 18 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_7_reload"   --->   Operation 19 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_6_reload"   --->   Operation 20 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_5_reload"   --->   Operation 21 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_4_reload"   --->   Operation 22 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_3_reload"   --->   Operation 23 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_2_reload"   --->   Operation 24 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_1_reload"   --->   Operation 25 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_reload"   --->   Operation 26 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_8_reload"   --->   Operation 27 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 28 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 29 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 30 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 31 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 32 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 33 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%add246_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add246_reload"   --->   Operation 34 'read' 'add246_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%add_1181247_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_1181247_reload"   --->   Operation 35 'read' 'add_1181247_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%add_2195248_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_2195248_reload"   --->   Operation 36 'read' 'add_2195248_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add_3209249_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_3209249_reload"   --->   Operation 37 'read' 'add_3209249_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add_1163250_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_1163250_reload"   --->   Operation 38 'read' 'add_1163250_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add_1163_1251_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_1163_1251_reload"   --->   Operation 39 'read' 'add_1163_1251_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add_1163_2252_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_1163_2252_reload"   --->   Operation 40 'read' 'add_1163_2252_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add_1163_3253_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_1163_3253_reload"   --->   Operation 41 'read' 'add_1163_3253_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_1163_3253_reload_read, i128 %add114_3_1245"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_1163_2252_reload_read, i128 %add114_3244"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_1163_1251_reload_read, i128 %add114_283_1243"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_1163250_reload_read, i128 %add114_283242"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_3209249_reload_read, i128 %add114_164_1241"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_2195248_reload_read, i128 %add114_164240"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_1181247_reload_read, i128 %add114_1101239"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add246_reload_read, i128 %add114238"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add87_2237"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body95"   --->   Operation 52 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [d7.cpp:70]   --->   Operation 53 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_1, i32 4" [d7.cpp:56]   --->   Operation 54 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln56 = br i1 %tmp, void %for.body95.split, void %for.end136.exitStub" [d7.cpp:56]   --->   Operation 55 'br' 'br_ln56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln56 = trunc i5 %i_1" [d7.cpp:56]   --->   Operation 56 'trunc' 'trunc_ln56' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i5 %i_1" [d7.cpp:34]   --->   Operation 57 'trunc' 'trunc_ln34' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.79ns)   --->   "%empty = sub i4 7, i4 %trunc_ln56" [d7.cpp:56]   --->   Operation 58 'sub' 'empty' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i4 %empty" [d7.cpp:59]   --->   Operation 59 'trunc' 'trunc_ln59' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.67ns)   --->   "%sub_ln59 = sub i3 0, i3 %trunc_ln34" [d7.cpp:59]   --->   Operation 60 'sub' 'sub_ln59' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d7.cpp:62]   --->   Operation 61 'partselect' 'tmp_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.54ns)   --->   "%icmp_ln62 = icmp_ne  i2 %tmp_1, i2 1" [d7.cpp:62]   --->   Operation 62 'icmp' 'icmp_ln62' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node and_ln34)   --->   "%select_ln34 = select i1 %icmp_ln62, i4 15, i4 0" [d7.cpp:34]   --->   Operation 63 'select' 'select_ln34' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.35ns) (out node of the LUT)   --->   "%and_ln34 = and i4 %empty, i4 %select_ln34" [d7.cpp:34]   --->   Operation 64 'and' 'and_ln34' <Predicate = (!tmp)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i1 %icmp_ln62" [d7.cpp:71]   --->   Operation 65 'zext' 'zext_ln71' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.79ns)   --->   "%sub_ln67_9 = sub i4 %and_ln34, i4 %zext_ln71" [d7.cpp:67]   --->   Operation 66 'sub' 'sub_ln67_9' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.78ns)   --->   "%icmp_ln70 = icmp_slt  i5 %i_1, i5 7" [d7.cpp:70]   --->   Operation 67 'icmp' 'icmp_ln70' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln71_1 = zext i1 %icmp_ln70" [d7.cpp:71]   --->   Operation 68 'zext' 'zext_ln71_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.79ns)   --->   "%sub_ln67_10 = sub i4 %sub_ln67_9, i4 %zext_ln71_1" [d7.cpp:67]   --->   Operation 69 'sub' 'sub_ln67_10' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.78ns)   --->   "%icmp_ln70_1 = icmp_slt  i5 %i_1, i5 6" [d7.cpp:70]   --->   Operation 70 'icmp' 'icmp_ln70_1' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln71_2 = zext i1 %icmp_ln70_1" [d7.cpp:71]   --->   Operation 71 'zext' 'zext_ln71_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.79ns)   --->   "%sub_ln67 = sub i4 %sub_ln67_10, i4 %zext_ln71_2" [d7.cpp:67]   --->   Operation 72 'sub' 'sub_ln67' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.78ns)   --->   "%icmp_ln70_2 = icmp_slt  i5 %i_1, i5 5" [d7.cpp:70]   --->   Operation 73 'icmp' 'icmp_ln70_2' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d7.cpp:70]   --->   Operation 74 'partselect' 'tmp_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.67ns)   --->   "%icmp_ln70_3 = icmp_slt  i3 %tmp_8, i3 1" [d7.cpp:70]   --->   Operation 75 'icmp' 'icmp_ln70_3' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.78ns)   --->   "%icmp_ln70_4 = icmp_slt  i5 %i_1, i5 3" [d7.cpp:70]   --->   Operation 76 'icmp' 'icmp_ln70_4' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%add_ln63 = add i4 %trunc_ln56, i4 15" [d7.cpp:63]   --->   Operation 77 'add' 'add_ln63' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.79ns)   --->   "%icmp_ln70_5 = icmp_ne  i4 %add_ln63, i4 7" [d7.cpp:70]   --->   Operation 78 'icmp' 'icmp_ln70_5' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln71_5 = zext i1 %icmp_ln70_5" [d7.cpp:71]   --->   Operation 79 'zext' 'zext_ln71_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%sub_ln67_11 = sub i4 %empty, i4 %zext_ln71_5" [d7.cpp:67]   --->   Operation 80 'sub' 'sub_ln67_11' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%icmp_ln70_6 = icmp_slt  i4 %add_ln63, i4 6" [d7.cpp:70]   --->   Operation 81 'icmp' 'icmp_ln70_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln71_6 = zext i1 %icmp_ln70_6" [d7.cpp:71]   --->   Operation 82 'zext' 'zext_ln71_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.79ns)   --->   "%sub_ln67_12 = sub i4 %sub_ln67_11, i4 %zext_ln71_6" [d7.cpp:67]   --->   Operation 83 'sub' 'sub_ln67_12' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.79ns)   --->   "%icmp_ln70_7 = icmp_slt  i4 %add_ln63, i4 5" [d7.cpp:70]   --->   Operation 84 'icmp' 'icmp_ln70_7' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln71_7 = zext i1 %icmp_ln70_7" [d7.cpp:71]   --->   Operation 85 'zext' 'zext_ln71_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%sub_ln67_3 = sub i4 %sub_ln67_12, i4 %zext_ln71_7" [d7.cpp:67]   --->   Operation 86 'sub' 'sub_ln67_3' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_17 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln63, i32 2, i32 3" [d7.cpp:70]   --->   Operation 87 'partselect' 'tmp_17' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.54ns)   --->   "%icmp_ln70_8 = icmp_ne  i2 %tmp_17, i2 1" [d7.cpp:70]   --->   Operation 88 'icmp' 'icmp_ln70_8' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln71_8 = zext i1 %icmp_ln70_8" [d7.cpp:71]   --->   Operation 89 'zext' 'zext_ln71_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.79ns)   --->   "%sub_ln67_4 = sub i4 %sub_ln67_3, i4 %zext_ln71_8" [d7.cpp:67]   --->   Operation 90 'sub' 'sub_ln67_4' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%icmp_ln70_9 = icmp_slt  i4 %add_ln63, i4 3" [d7.cpp:70]   --->   Operation 91 'icmp' 'icmp_ln70_9' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln63, i32 1, i32 3" [d7.cpp:70]   --->   Operation 92 'partselect' 'tmp_20' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.67ns)   --->   "%icmp_ln70_10 = icmp_slt  i3 %tmp_20, i3 1" [d7.cpp:70]   --->   Operation 93 'icmp' 'icmp_ln70_10' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.79ns)   --->   "%add_ln63_1 = add i4 %trunc_ln56, i4 14" [d7.cpp:63]   --->   Operation 94 'add' 'add_ln63_1' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.79ns)   --->   "%icmp_ln70_11 = icmp_sgt  i4 %trunc_ln56, i4 9" [d7.cpp:70]   --->   Operation 95 'icmp' 'icmp_ln70_11' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln71_10 = zext i1 %icmp_ln70_11" [d7.cpp:71]   --->   Operation 96 'zext' 'zext_ln71_10' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.79ns)   --->   "%sub_ln67_13 = sub i4 %empty, i4 %zext_ln71_10" [d7.cpp:67]   --->   Operation 97 'sub' 'sub_ln67_13' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%icmp_ln70_12 = icmp_slt  i4 %add_ln63_1, i4 5" [d7.cpp:70]   --->   Operation 98 'icmp' 'icmp_ln70_12' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln71_11 = zext i1 %icmp_ln70_12" [d7.cpp:71]   --->   Operation 99 'zext' 'zext_ln71_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.79ns)   --->   "%sub_ln67_14 = sub i4 %sub_ln67_13, i4 %zext_ln71_11" [d7.cpp:67]   --->   Operation 100 'sub' 'sub_ln67_14' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_26 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln63_1, i32 2, i32 3" [d7.cpp:70]   --->   Operation 101 'partselect' 'tmp_26' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.54ns)   --->   "%icmp_ln70_13 = icmp_ne  i2 %tmp_26, i2 1" [d7.cpp:70]   --->   Operation 102 'icmp' 'icmp_ln70_13' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln71_12 = zext i1 %icmp_ln70_13" [d7.cpp:71]   --->   Operation 103 'zext' 'zext_ln71_12' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.79ns)   --->   "%sub_ln67_6 = sub i4 %sub_ln67_14, i4 %zext_ln71_12" [d7.cpp:67]   --->   Operation 104 'sub' 'sub_ln67_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.79ns)   --->   "%icmp_ln70_14 = icmp_slt  i4 %add_ln63_1, i4 3" [d7.cpp:70]   --->   Operation 105 'icmp' 'icmp_ln70_14' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_29 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln63_1, i32 1, i32 3" [d7.cpp:70]   --->   Operation 106 'partselect' 'tmp_29' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.67ns)   --->   "%icmp_ln70_15 = icmp_slt  i3 %tmp_29, i3 1" [d7.cpp:70]   --->   Operation 107 'icmp' 'icmp_ln70_15' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.79ns)   --->   "%icmp_ln70_16 = icmp_slt  i4 %add_ln63_1, i4 1" [d7.cpp:70]   --->   Operation 108 'icmp' 'icmp_ln70_16' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.78ns)   --->   "%add_ln56 = add i5 %i_1, i5 29" [d7.cpp:56]   --->   Operation 109 'add' 'add_ln56' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.42ns)   --->   "%store_ln56 = store i5 %add_ln56, i5 %i" [d7.cpp:56]   --->   Operation 110 'store' 'store_ln56' <Predicate = (!tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.27>
ST_2 : Operation 111 [1/1] (0.77ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i4 %trunc_ln56" [d7.cpp:63]   --->   Operation 111 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i64 %tmp_s" [d7.cpp:63]   --->   Operation 112 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.67ns)   --->   "%tmp_2 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i3 %sub_ln59" [d7.cpp:63]   --->   Operation 113 'mux' 'tmp_2' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i64 %tmp_2" [d7.cpp:63]   --->   Operation 114 'zext' 'zext_ln63_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.77ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %and_ln34" [d7.cpp:70]   --->   Operation 115 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i64 %tmp_3" [d7.cpp:70]   --->   Operation 116 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.77ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_9" [d7.cpp:70]   --->   Operation 117 'mux' 'tmp_4' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i64 %tmp_4" [d7.cpp:70]   --->   Operation 118 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.77ns)   --->   "%tmp_5 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_10" [d7.cpp:70]   --->   Operation 119 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i64 %tmp_5" [d7.cpp:70]   --->   Operation 120 'zext' 'zext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.77ns)   --->   "%tmp_6 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67" [d7.cpp:70]   --->   Operation 121 'mux' 'tmp_6' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i64 %tmp_6" [d7.cpp:70]   --->   Operation 122 'zext' 'zext_ln70_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln71_3 = zext i1 %icmp_ln70_2" [d7.cpp:71]   --->   Operation 123 'zext' 'zext_ln71_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.79ns)   --->   "%sub_ln67_1 = sub i4 %sub_ln67, i4 %zext_ln71_3" [d7.cpp:67]   --->   Operation 124 'sub' 'sub_ln67_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.77ns)   --->   "%tmp_7 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_1" [d7.cpp:70]   --->   Operation 125 'mux' 'tmp_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln70_4 = zext i64 %tmp_7" [d7.cpp:70]   --->   Operation 126 'zext' 'zext_ln70_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln71_4 = zext i1 %icmp_ln70_3" [d7.cpp:71]   --->   Operation 127 'zext' 'zext_ln71_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.79ns)   --->   "%sub_ln67_2 = sub i4 %sub_ln67_1, i4 %zext_ln71_4" [d7.cpp:67]   --->   Operation 128 'sub' 'sub_ln67_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.77ns)   --->   "%tmp_9 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_2" [d7.cpp:70]   --->   Operation 129 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln70_5 = zext i64 %tmp_9" [d7.cpp:70]   --->   Operation 130 'zext' 'zext_ln70_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.77ns)   --->   "%tmp_10 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i4 %trunc_ln56" [d7.cpp:63]   --->   Operation 131 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln63_2 = zext i64 %tmp_10" [d7.cpp:63]   --->   Operation 132 'zext' 'zext_ln63_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.67ns)   --->   "%tmp_11 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i3 %sub_ln59" [d7.cpp:63]   --->   Operation 133 'mux' 'tmp_11' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln63_3 = zext i64 %tmp_11" [d7.cpp:63]   --->   Operation 134 'zext' 'zext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.48ns)   --->   "%tmp_12 = mux i64 @_ssdm_op_Mux.ap_auto.16i64.i4, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 %arg2_r_reload_read, i4 %empty" [d7.cpp:70]   --->   Operation 135 'mux' 'tmp_12' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln70_6 = zext i64 %tmp_12" [d7.cpp:70]   --->   Operation 136 'zext' 'zext_ln70_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.62ns)   --->   "%tmp_13 = mux i64 @_ssdm_op_Mux.ap_auto.6i64.i3, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i3 %trunc_ln59" [d7.cpp:70]   --->   Operation 137 'mux' 'tmp_13' <Predicate = true> <Delay = 0.62> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln70_7 = zext i64 %tmp_13" [d7.cpp:70]   --->   Operation 138 'zext' 'zext_ln70_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.77ns)   --->   "%tmp_14 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_11" [d7.cpp:70]   --->   Operation 139 'mux' 'tmp_14' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln70_8 = zext i64 %tmp_14" [d7.cpp:70]   --->   Operation 140 'zext' 'zext_ln70_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.77ns)   --->   "%tmp_15 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_12" [d7.cpp:70]   --->   Operation 141 'mux' 'tmp_15' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln70_9 = zext i64 %tmp_15" [d7.cpp:70]   --->   Operation 142 'zext' 'zext_ln70_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.77ns)   --->   "%tmp_16 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_3" [d7.cpp:70]   --->   Operation 143 'mux' 'tmp_16' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln70_10 = zext i64 %tmp_16" [d7.cpp:70]   --->   Operation 144 'zext' 'zext_ln70_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 145 [1/1] (0.77ns)   --->   "%tmp_18 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_4" [d7.cpp:70]   --->   Operation 145 'mux' 'tmp_18' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln70_11 = zext i64 %tmp_18" [d7.cpp:70]   --->   Operation 146 'zext' 'zext_ln70_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln71_9 = zext i1 %icmp_ln70_9" [d7.cpp:71]   --->   Operation 147 'zext' 'zext_ln71_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 148 [1/1] (0.79ns)   --->   "%sub_ln67_5 = sub i4 %sub_ln67_4, i4 %zext_ln71_9" [d7.cpp:67]   --->   Operation 148 'sub' 'sub_ln67_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.77ns)   --->   "%tmp_19 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_5" [d7.cpp:70]   --->   Operation 149 'mux' 'tmp_19' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln70_12 = zext i64 %tmp_19" [d7.cpp:70]   --->   Operation 150 'zext' 'zext_ln70_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 151 [1/1] (0.77ns)   --->   "%tmp_21 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i4 %trunc_ln56" [d7.cpp:63]   --->   Operation 151 'mux' 'tmp_21' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln63_4 = zext i64 %tmp_21" [d7.cpp:63]   --->   Operation 152 'zext' 'zext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 153 [1/1] (0.67ns)   --->   "%tmp_22 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i3 %sub_ln59" [d7.cpp:63]   --->   Operation 153 'mux' 'tmp_22' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln63_5 = zext i64 %tmp_22" [d7.cpp:63]   --->   Operation 154 'zext' 'zext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 155 '%mul_ln63 = mul i128 %zext_ln63_5, i128 %zext_ln63_4'
ST_2 : Operation 155 [1/1] (3.51ns)   --->   "%mul_ln63 = mul i128 %zext_ln63_5, i128 %zext_ln63_4" [d7.cpp:63]   --->   Operation 155 'mul' 'mul_ln63' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 156 '%mul_ln63_1 = mul i128 %zext_ln63_1, i128 %zext_ln63'
ST_2 : Operation 156 [1/1] (3.51ns)   --->   "%mul_ln63_1 = mul i128 %zext_ln63_1, i128 %zext_ln63" [d7.cpp:63]   --->   Operation 156 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 157 '%mul_ln63_2 = mul i128 %zext_ln63_3, i128 %zext_ln63_2'
ST_2 : Operation 157 [1/1] (3.51ns)   --->   "%mul_ln63_2 = mul i128 %zext_ln63_3, i128 %zext_ln63_2" [d7.cpp:63]   --->   Operation 157 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (1.57ns)   --->   "%add_ln63_2 = add i128 %mul_ln63_2, i128 %mul_ln63" [d7.cpp:63]   --->   Operation 158 'add' 'add_ln63_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.48ns)   --->   "%tmp_23 = mux i64 @_ssdm_op_Mux.ap_auto.16i64.i4, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 %arg2_r_1_reload_read, i4 %empty" [d7.cpp:70]   --->   Operation 159 'mux' 'tmp_23' <Predicate = true> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln70_13 = zext i64 %tmp_23" [d7.cpp:70]   --->   Operation 160 'zext' 'zext_ln70_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 161 '%mul_ln70 = mul i128 %zext_ln70, i128 %zext_ln63'
ST_2 : Operation 161 [1/1] (3.51ns)   --->   "%mul_ln70 = mul i128 %zext_ln70, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 161 'mul' 'mul_ln70' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node and_ln70)   --->   "%select_ln70 = select i1 %icmp_ln62, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 162 'select' 'select_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70 = and i128 %mul_ln70, i128 %select_ln70" [d7.cpp:70]   --->   Operation 163 'and' 'and_ln70' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 164 '%mul_ln70_1 = mul i128 %zext_ln70_13, i128 %zext_ln63_4'
ST_2 : Operation 164 [1/1] (3.51ns)   --->   "%mul_ln70_1 = mul i128 %zext_ln70_13, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 164 'mul' 'mul_ln70_1' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 165 '%mul_ln70_2 = mul i128 %zext_ln70_6, i128 %zext_ln63_2'
ST_2 : Operation 165 [1/1] (3.51ns)   --->   "%mul_ln70_2 = mul i128 %zext_ln70_6, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 165 'mul' 'mul_ln70_2' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 166 [1/1] (1.57ns)   --->   "%add_ln70 = add i128 %mul_ln70_2, i128 %mul_ln70_1" [d7.cpp:70]   --->   Operation 166 'add' 'add_ln70' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 167 '%mul_ln70_3 = mul i128 %zext_ln70_1, i128 %zext_ln63'
ST_2 : Operation 167 [1/1] (3.51ns)   --->   "%mul_ln70_3 = mul i128 %zext_ln70_1, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 167 'mul' 'mul_ln70_3' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 168 '%mul_ln70_4 = mul i128 %zext_ln70_7, i128 %zext_ln63_2'
ST_2 : Operation 168 [1/1] (3.51ns)   --->   "%mul_ln70_4 = mul i128 %zext_ln70_7, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 168 'mul' 'mul_ln70_4' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_1)   --->   "%select_ln70_1 = select i1 %icmp_ln70, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 169 'select' 'select_ln70_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_1 = and i128 %mul_ln70_3, i128 %select_ln70_1" [d7.cpp:70]   --->   Operation 170 'and' 'and_ln70_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_3)   --->   "%select_ln70_2 = select i1 %icmp_ln70_5, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 171 'select' 'select_ln70_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_3)   --->   "%and_ln70_2 = and i128 %mul_ln70_4, i128 %select_ln70_2" [d7.cpp:70]   --->   Operation 172 'and' 'and_ln70_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 173 '%mul_ln70_5 = mul i128 %zext_ln63_4, i128 %zext_ln70_6'
ST_2 : Operation 173 [1/1] (3.51ns)   --->   "%mul_ln70_5 = mul i128 %zext_ln63_4, i128 %zext_ln70_6" [d7.cpp:70]   --->   Operation 173 'mul' 'mul_ln70_5' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_3 = add i128 %and_ln70_2, i128 %mul_ln70_5" [d7.cpp:70]   --->   Operation 174 'add' 'add_ln70_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 175 '%mul_ln70_6 = mul i128 %zext_ln63_4, i128 %zext_ln70_7'
ST_2 : Operation 175 [1/1] (3.51ns)   --->   "%mul_ln70_6 = mul i128 %zext_ln63_4, i128 %zext_ln70_7" [d7.cpp:70]   --->   Operation 175 'mul' 'mul_ln70_6' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 176 '%mul_ln70_7 = mul i128 %zext_ln70_2, i128 %zext_ln63'
ST_2 : Operation 176 [1/1] (3.51ns)   --->   "%mul_ln70_7 = mul i128 %zext_ln70_2, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 176 'mul' 'mul_ln70_7' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 177 '%mul_ln70_8 = mul i128 %zext_ln70_8, i128 %zext_ln63_2'
ST_2 : Operation 177 [1/1] (3.51ns)   --->   "%mul_ln70_8 = mul i128 %zext_ln70_8, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 177 'mul' 'mul_ln70_8' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%select_ln70_3 = select i1 %icmp_ln70_11, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 178 'select' 'select_ln70_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%and_ln70_3 = and i128 %mul_ln70_6, i128 %select_ln70_3" [d7.cpp:70]   --->   Operation 179 'and' 'and_ln70_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_4)   --->   "%select_ln70_4 = select i1 %icmp_ln70_1, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 180 'select' 'select_ln70_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 181 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_4 = and i128 %mul_ln70_7, i128 %select_ln70_4" [d7.cpp:70]   --->   Operation 181 'and' 'and_ln70_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%select_ln70_5 = select i1 %icmp_ln70_6, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 182 'select' 'select_ln70_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%and_ln70_5 = and i128 %mul_ln70_8, i128 %select_ln70_5" [d7.cpp:70]   --->   Operation 183 'and' 'and_ln70_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_6 = add i128 %and_ln70_5, i128 %and_ln70_3" [d7.cpp:70]   --->   Operation 184 'add' 'add_ln70_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 185 [1/1] (0.77ns)   --->   "%tmp_24 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_13" [d7.cpp:70]   --->   Operation 185 'mux' 'tmp_24' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln70_14 = zext i64 %tmp_24" [d7.cpp:70]   --->   Operation 186 'zext' 'zext_ln70_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 187 '%mul_ln70_9 = mul i128 %zext_ln70_14, i128 %zext_ln63_4'
ST_2 : Operation 187 [1/1] (3.51ns)   --->   "%mul_ln70_9 = mul i128 %zext_ln70_14, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 187 'mul' 'mul_ln70_9' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 188 '%mul_ln70_10 = mul i128 %zext_ln70_3, i128 %zext_ln63'
ST_2 : Operation 188 [1/1] (3.51ns)   --->   "%mul_ln70_10 = mul i128 %zext_ln70_3, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 188 'mul' 'mul_ln70_10' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 189 '%mul_ln70_11 = mul i128 %zext_ln70_9, i128 %zext_ln63_2'
ST_2 : Operation 189 [1/1] (3.51ns)   --->   "%mul_ln70_11 = mul i128 %zext_ln70_9, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 189 'mul' 'mul_ln70_11' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_9)   --->   "%select_ln70_6 = select i1 %icmp_ln70_12, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 190 'select' 'select_ln70_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_9)   --->   "%and_ln70_6 = and i128 %mul_ln70_9, i128 %select_ln70_6" [d7.cpp:70]   --->   Operation 191 'and' 'and_ln70_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_7)   --->   "%select_ln70_7 = select i1 %icmp_ln70_2, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 192 'select' 'select_ln70_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_7 = and i128 %mul_ln70_10, i128 %select_ln70_7" [d7.cpp:70]   --->   Operation 193 'and' 'and_ln70_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_9)   --->   "%select_ln70_8 = select i1 %icmp_ln70_7, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 194 'select' 'select_ln70_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_9)   --->   "%and_ln70_8 = and i128 %mul_ln70_11, i128 %select_ln70_8" [d7.cpp:70]   --->   Operation 195 'and' 'and_ln70_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_9 = add i128 %and_ln70_8, i128 %and_ln70_6" [d7.cpp:70]   --->   Operation 196 'add' 'add_ln70_9' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 197 [1/1] (0.77ns)   --->   "%tmp_25 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_14" [d7.cpp:70]   --->   Operation 197 'mux' 'tmp_25' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln70_15 = zext i64 %tmp_25" [d7.cpp:70]   --->   Operation 198 'zext' 'zext_ln70_15' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 199 '%mul_ln70_12 = mul i128 %zext_ln70_15, i128 %zext_ln63_4'
ST_2 : Operation 199 [1/1] (3.51ns)   --->   "%mul_ln70_12 = mul i128 %zext_ln70_15, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 199 'mul' 'mul_ln70_12' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 200 '%mul_ln70_13 = mul i128 %zext_ln70_4, i128 %zext_ln63'
ST_2 : Operation 200 [1/1] (3.51ns)   --->   "%mul_ln70_13 = mul i128 %zext_ln70_4, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 200 'mul' 'mul_ln70_13' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 201 '%mul_ln70_14 = mul i128 %zext_ln70_10, i128 %zext_ln63_2'
ST_2 : Operation 201 [1/1] (3.51ns)   --->   "%mul_ln70_14 = mul i128 %zext_ln70_10, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 201 'mul' 'mul_ln70_14' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_12)   --->   "%select_ln70_9 = select i1 %icmp_ln70_13, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 202 'select' 'select_ln70_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_12)   --->   "%and_ln70_9 = and i128 %mul_ln70_12, i128 %select_ln70_9" [d7.cpp:70]   --->   Operation 203 'and' 'and_ln70_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_10)   --->   "%select_ln70_10 = select i1 %icmp_ln70_3, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 204 'select' 'select_ln70_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 205 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_10 = and i128 %mul_ln70_13, i128 %select_ln70_10" [d7.cpp:70]   --->   Operation 205 'and' 'and_ln70_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_12)   --->   "%select_ln70_11 = select i1 %icmp_ln70_8, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 206 'select' 'select_ln70_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_12)   --->   "%and_ln70_11 = and i128 %mul_ln70_14, i128 %select_ln70_11" [d7.cpp:70]   --->   Operation 207 'and' 'and_ln70_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_12 = add i128 %and_ln70_11, i128 %and_ln70_9" [d7.cpp:70]   --->   Operation 208 'add' 'add_ln70_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 209 [1/1] (0.77ns)   --->   "%tmp_27 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_6" [d7.cpp:70]   --->   Operation 209 'mux' 'tmp_27' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.00ns)   --->   "%zext_ln70_16 = zext i64 %tmp_27" [d7.cpp:70]   --->   Operation 210 'zext' 'zext_ln70_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 211 '%mul_ln70_15 = mul i128 %zext_ln70_16, i128 %zext_ln63_4'
ST_2 : Operation 211 [1/1] (3.51ns)   --->   "%mul_ln70_15 = mul i128 %zext_ln70_16, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 211 'mul' 'mul_ln70_15' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 212 '%mul_ln70_16 = mul i128 %zext_ln70_5, i128 %zext_ln63'
ST_2 : Operation 212 [1/1] (3.51ns)   --->   "%mul_ln70_16 = mul i128 %zext_ln70_5, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 212 'mul' 'mul_ln70_16' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 213 '%mul_ln70_17 = mul i128 %zext_ln70_11, i128 %zext_ln63_2'
ST_2 : Operation 213 [1/1] (3.51ns)   --->   "%mul_ln70_17 = mul i128 %zext_ln70_11, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 213 'mul' 'mul_ln70_17' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_15)   --->   "%select_ln70_12 = select i1 %icmp_ln70_14, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 214 'select' 'select_ln70_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_15)   --->   "%and_ln70_12 = and i128 %mul_ln70_15, i128 %select_ln70_12" [d7.cpp:70]   --->   Operation 215 'and' 'and_ln70_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_13)   --->   "%select_ln70_13 = select i1 %icmp_ln70_4, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 216 'select' 'select_ln70_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 217 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_13 = and i128 %mul_ln70_16, i128 %select_ln70_13" [d7.cpp:70]   --->   Operation 217 'and' 'and_ln70_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_15)   --->   "%select_ln70_14 = select i1 %icmp_ln70_9, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 218 'select' 'select_ln70_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_15)   --->   "%and_ln70_14 = and i128 %mul_ln70_17, i128 %select_ln70_14" [d7.cpp:70]   --->   Operation 219 'and' 'and_ln70_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 220 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_15 = add i128 %and_ln70_14, i128 %and_ln70_12" [d7.cpp:70]   --->   Operation 220 'add' 'add_ln70_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln71_13 = zext i1 %icmp_ln70_14" [d7.cpp:71]   --->   Operation 221 'zext' 'zext_ln71_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.79ns)   --->   "%sub_ln67_7 = sub i4 %sub_ln67_6, i4 %zext_ln71_13" [d7.cpp:67]   --->   Operation 222 'sub' 'sub_ln67_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 223 [1/1] (0.77ns)   --->   "%tmp_28 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_7" [d7.cpp:70]   --->   Operation 223 'mux' 'tmp_28' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 224 [1/1] (0.00ns)   --->   "%zext_ln70_17 = zext i64 %tmp_28" [d7.cpp:70]   --->   Operation 224 'zext' 'zext_ln70_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 225 '%mul_ln70_18 = mul i128 %zext_ln70_12, i128 %zext_ln63_2'
ST_2 : Operation 225 [1/1] (3.51ns)   --->   "%mul_ln70_18 = mul i128 %zext_ln70_12, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 225 'mul' 'mul_ln70_18' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_15)   --->   "%select_ln70_15 = select i1 %icmp_ln70_10, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 226 'select' 'select_ln70_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_15 = and i128 %mul_ln70_18, i128 %select_ln70_15" [d7.cpp:70]   --->   Operation 227 'and' 'and_ln70_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 228 '%mul_ln70_19 = mul i128 %zext_ln70_17, i128 %zext_ln63_4'
ST_2 : Operation 228 [1/1] (3.51ns)   --->   "%mul_ln70_19 = mul i128 %zext_ln70_17, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 228 'mul' 'mul_ln70_19' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node and_ln70_16)   --->   "%select_ln70_16 = select i1 %icmp_ln70_15, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 229 'select' 'select_ln70_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 230 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln70_16 = and i128 %mul_ln70_19, i128 %select_ln70_16" [d7.cpp:70]   --->   Operation 230 'and' 'and_ln70_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%zext_ln71_14 = zext i1 %icmp_ln70_15" [d7.cpp:71]   --->   Operation 231 'zext' 'zext_ln71_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (0.79ns)   --->   "%sub_ln67_8 = sub i4 %sub_ln67_7, i4 %zext_ln71_14" [d7.cpp:67]   --->   Operation 232 'sub' 'sub_ln67_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 233 [1/1] (0.77ns)   --->   "%tmp_30 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_8" [d7.cpp:70]   --->   Operation 233 'mux' 'tmp_30' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln70_18 = zext i64 %tmp_30" [d7.cpp:70]   --->   Operation 234 'zext' 'zext_ln70_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.01ns)   --->   Input mux for Operation 235 '%mul_ln70_20 = mul i128 %zext_ln70_18, i128 %zext_ln63_4'
ST_2 : Operation 235 [1/1] (3.51ns)   --->   "%mul_ln70_20 = mul i128 %zext_ln70_18, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 235 'mul' 'mul_ln70_20' <Predicate = true> <Delay = 3.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (0.00ns)   --->   "%add87_2237_load_1 = load i128 %add87_2237"   --->   Operation 277 'load' 'add87_2237_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 278 [1/1] (0.00ns)   --->   "%add114238_load_1 = load i128 %add114238"   --->   Operation 278 'load' 'add114238_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 279 [1/1] (0.00ns)   --->   "%add114_1101239_load_1 = load i128 %add114_1101239"   --->   Operation 279 'load' 'add114_1101239_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 280 [1/1] (0.00ns)   --->   "%add114_164240_load_1 = load i128 %add114_164240"   --->   Operation 280 'load' 'add114_164240_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 281 [1/1] (0.00ns)   --->   "%add114_164_1241_load_1 = load i128 %add114_164_1241"   --->   Operation 281 'load' 'add114_164_1241_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 282 [1/1] (0.00ns)   --->   "%add114_283242_load_1 = load i128 %add114_283242"   --->   Operation 282 'load' 'add114_283242_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 283 [1/1] (0.00ns)   --->   "%add114_283_1243_load_1 = load i128 %add114_283_1243"   --->   Operation 283 'load' 'add114_283_1243_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 284 [1/1] (0.00ns)   --->   "%add114_3244_load_1 = load i128 %add114_3244"   --->   Operation 284 'load' 'add114_3244_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%add114_3_1245_load_1 = load i128 %add114_3_1245"   --->   Operation 285 'load' 'add114_3_1245_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_3_1245_out, i128 %add114_3_1245_load_1"   --->   Operation 286 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 287 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_3244_out, i128 %add114_3244_load_1"   --->   Operation 287 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 288 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_283_1243_out, i128 %add114_283_1243_load_1"   --->   Operation 288 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 289 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_283242_out, i128 %add114_283242_load_1"   --->   Operation 289 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 290 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_164_1241_out, i128 %add114_164_1241_load_1"   --->   Operation 290 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 291 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_164240_out, i128 %add114_164240_load_1"   --->   Operation 291 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 292 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_1101239_out, i128 %add114_1101239_load_1"   --->   Operation 292 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 293 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114238_out, i128 %add114238_load_1"   --->   Operation 293 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 294 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add87_2237_out, i128 %add87_2237_load_1"   --->   Operation 294 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 295 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 295 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.00>
ST_3 : Operation 236 [1/1] (0.00ns)   --->   "%add87_2237_load = load i128 %add87_2237" [d7.cpp:63]   --->   Operation 236 'load' 'add87_2237_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 237 [1/1] (0.00ns)   --->   "%add114238_load = load i128 %add114238" [d7.cpp:70]   --->   Operation 237 'load' 'add114238_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 238 [1/1] (0.00ns)   --->   "%add114_1101239_load = load i128 %add114_1101239" [d7.cpp:70]   --->   Operation 238 'load' 'add114_1101239_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 239 [1/1] (0.00ns)   --->   "%add114_164240_load = load i128 %add114_164240" [d7.cpp:70]   --->   Operation 239 'load' 'add114_164240_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 240 [1/1] (0.00ns)   --->   "%add114_164_1241_load = load i128 %add114_164_1241" [d7.cpp:70]   --->   Operation 240 'load' 'add114_164_1241_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 241 [1/1] (0.00ns)   --->   "%add114_283242_load = load i128 %add114_283242" [d7.cpp:70]   --->   Operation 241 'load' 'add114_283242_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 242 [1/1] (0.00ns)   --->   "%add114_283_1243_load = load i128 %add114_283_1243" [d7.cpp:70]   --->   Operation 242 'load' 'add114_283_1243_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 243 [1/1] (0.00ns)   --->   "%add114_3244_load = load i128 %add114_3244" [d7.cpp:70]   --->   Operation 243 'load' 'add114_3244_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 244 [1/1] (0.00ns)   --->   "%add114_3_1245_load = load i128 %add114_3_1245" [d7.cpp:70]   --->   Operation 244 'load' 'add114_3_1245_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 245 [1/1] (0.00ns)   --->   "%specpipeline_ln58 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d7.cpp:58]   --->   Operation 245 'specpipeline' 'specpipeline_ln58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 246 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d7.cpp:34]   --->   Operation 246 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 247 [1/1] (0.00ns)   --->   "%specloopname_ln56 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [d7.cpp:56]   --->   Operation 247 'specloopname' 'specloopname_ln56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 248 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_3 = add i128 %add_ln63_2, i128 %mul_ln63_1" [d7.cpp:63]   --->   Operation 248 'add' 'add_ln63_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 249 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln63_4 = add i128 %add87_2237_load, i128 %add_ln63_3" [d7.cpp:63]   --->   Operation 249 'add' 'add_ln63_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 250 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_1 = add i128 %add_ln70, i128 %and_ln70" [d7.cpp:70]   --->   Operation 250 'add' 'add_ln70_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 251 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_2 = add i128 %add114238_load, i128 %add_ln70_1" [d7.cpp:70]   --->   Operation 251 'add' 'add_ln70_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 252 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_4 = add i128 %add_ln70_3, i128 %and_ln70_1" [d7.cpp:70]   --->   Operation 252 'add' 'add_ln70_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 253 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_5 = add i128 %add114_1101239_load, i128 %add_ln70_4" [d7.cpp:70]   --->   Operation 253 'add' 'add_ln70_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 254 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_7 = add i128 %add_ln70_6, i128 %and_ln70_4" [d7.cpp:70]   --->   Operation 254 'add' 'add_ln70_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 255 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_8 = add i128 %add114_164240_load, i128 %add_ln70_7" [d7.cpp:70]   --->   Operation 255 'add' 'add_ln70_8' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 256 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_10 = add i128 %add_ln70_9, i128 %and_ln70_7" [d7.cpp:70]   --->   Operation 256 'add' 'add_ln70_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 257 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_11 = add i128 %add114_164_1241_load, i128 %add_ln70_10" [d7.cpp:70]   --->   Operation 257 'add' 'add_ln70_11' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 258 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_13 = add i128 %add_ln70_12, i128 %and_ln70_10" [d7.cpp:70]   --->   Operation 258 'add' 'add_ln70_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 259 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_14 = add i128 %add114_283242_load, i128 %add_ln70_13" [d7.cpp:70]   --->   Operation 259 'add' 'add_ln70_14' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 260 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_16 = add i128 %add_ln70_15, i128 %and_ln70_13" [d7.cpp:70]   --->   Operation 260 'add' 'add_ln70_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 261 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_17 = add i128 %add114_283_1243_load, i128 %add_ln70_16" [d7.cpp:70]   --->   Operation 261 'add' 'add_ln70_17' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 262 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_18 = add i128 %and_ln70_16, i128 %and_ln70_15" [d7.cpp:70]   --->   Operation 262 'add' 'add_ln70_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 263 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_19 = add i128 %add114_3244_load, i128 %add_ln70_18" [d7.cpp:70]   --->   Operation 263 'add' 'add_ln70_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_20)   --->   "%select_ln70_17 = select i1 %icmp_ln70_16, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 264 'select' 'select_ln70_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_20)   --->   "%and_ln70_17 = and i128 %mul_ln70_20, i128 %select_ln70_17" [d7.cpp:70]   --->   Operation 265 'and' 'and_ln70_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 266 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_20 = add i128 %and_ln70_17, i128 %add114_3_1245_load" [d7.cpp:70]   --->   Operation 266 'add' 'add_ln70_20' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 267 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_20, i128 %add114_3_1245" [d7.cpp:56]   --->   Operation 267 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 268 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_19, i128 %add114_3244" [d7.cpp:56]   --->   Operation 268 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 269 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_17, i128 %add114_283_1243" [d7.cpp:56]   --->   Operation 269 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 270 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_14, i128 %add114_283242" [d7.cpp:56]   --->   Operation 270 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 271 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_11, i128 %add114_164_1241" [d7.cpp:56]   --->   Operation 271 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 272 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_8, i128 %add114_164240" [d7.cpp:56]   --->   Operation 272 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 273 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_5, i128 %add114_1101239" [d7.cpp:56]   --->   Operation 273 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 274 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_2, i128 %add114238" [d7.cpp:56]   --->   Operation 274 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 275 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln63_4, i128 %add87_2237" [d7.cpp:56]   --->   Operation 275 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 276 [1/1] (0.00ns)   --->   "%br_ln56 = br void %for.body95" [d7.cpp:56]   --->   Operation 276 'br' 'br_ln56' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.782ns
The critical path consists of the following:
	'alloca' operation ('i') [45]  (0.000 ns)
	'load' operation ('i', d7.cpp:70) on local variable 'i' [84]  (0.000 ns)
	'add' operation ('add_ln63', d7.cpp:63) [141]  (0.797 ns)
	'icmp' operation ('icmp_ln70_5', d7.cpp:70) [150]  (0.797 ns)
	'sub' operation ('sub_ln67_11', d7.cpp:67) [152]  (0.797 ns)
	'sub' operation ('sub_ln67_12', d7.cpp:67) [157]  (0.797 ns)
	'sub' operation ('sub_ln67_3', d7.cpp:67) [162]  (0.797 ns)
	'sub' operation ('sub_ln67_4', d7.cpp:67) [168]  (0.797 ns)

 <State 2>: 7.273ns
The critical path consists of the following:
	'sub' operation ('sub_ln67_1', d7.cpp:67) [131]  (0.797 ns)
	'sub' operation ('sub_ln67_2', d7.cpp:67) [137]  (0.797 ns)
	'mux' operation ('tmp_9', d7.cpp:70) [138]  (0.770 ns)
	multiplexor before operation 'mul' with delay (1.013 ns)
'mul' operation ('mul_ln70_16', d7.cpp:70) [263]  (3.517 ns)
	'and' operation ('and_ln70_13', d7.cpp:70) [268]  (0.379 ns)

 <State 3>: 2.006ns
The critical path consists of the following:
	'load' operation ('add114_3_1245_load', d7.cpp:70) on local variable 'add114_3_1245' [96]  (0.000 ns)
	'add' operation ('add_ln70_20', d7.cpp:70) [296]  (1.579 ns)
	'store' operation ('store_ln56', d7.cpp:56) of variable 'add_ln70_20', d7.cpp:70 on local variable 'add114_3_1245' [299]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
