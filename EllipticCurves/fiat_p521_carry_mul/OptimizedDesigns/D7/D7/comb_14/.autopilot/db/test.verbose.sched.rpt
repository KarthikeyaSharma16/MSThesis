

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:03:36 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D7
* Solution:       comb_14 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       76|       76|  0.760 us|  0.760 us|   77|   77|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 34 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 35 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 36 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add330_loc = alloca i64 1"   --->   Operation 37 'alloca' 'add330_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add_1245331_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add_1245331_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add_2332_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add_2332_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add_3333_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add_3333_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add_1334_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add_1334_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add_1_1335_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add_1_1335_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add_1_2336_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add_1_2336_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add_1_3337_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add_1_3337_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 45 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d7.cpp:22]   --->   Operation 63 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d7.cpp:29]   --->   Operation 64 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln91_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d7.cpp:91]   --->   Operation 65 'partselect' 'trunc_ln91_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d7.cpp:22]   --->   Operation 66 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d7.cpp:22]   --->   Operation 67 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 68 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 69 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 69 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 70 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 70 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 71 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 71 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 72 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 72 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 73 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 73 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 74 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 74 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 75 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d7.cpp:22]   --->   Operation 75 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 76 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d7.cpp:22]   --->   Operation 76 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 77 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d7.cpp:22]   --->   Operation 77 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d7.cpp:29]   --->   Operation 78 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d7.cpp:29]   --->   Operation 79 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [8/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 80 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 81 [7/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 81 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 82 [6/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 82 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 83 [5/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 83 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 84 [4/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 84 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 85 [3/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 85 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 86 [2/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 86 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 87 [1/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d7.cpp:29]   --->   Operation 87 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 88 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d7.cpp:29]   --->   Operation 88 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 89 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d7.cpp:29]   --->   Operation 89 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 0.77>
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 90 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 91 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 92 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 93 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 94 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 95 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 95 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 96 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 96 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 97 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 97 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 98 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 98 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 99 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 99 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 100 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 100 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 101 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 102 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 103 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 104 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 105 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 106 [1/1] (0.00ns)   --->   "%empty_29 = trunc i64 %arg2_r_1_loc_load"   --->   Operation 106 'trunc' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%empty_30 = trunc i64 %arg2_r_2_loc_load"   --->   Operation 107 'trunc' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%empty_31 = trunc i64 %arg2_r_3_loc_load"   --->   Operation 108 'trunc' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%empty_32 = trunc i64 %arg2_r_4_loc_load"   --->   Operation 109 'trunc' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 110 [1/1] (0.00ns)   --->   "%empty_33 = trunc i64 %arg2_r_5_loc_load"   --->   Operation 110 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%empty_34 = trunc i64 %arg2_r_6_loc_load"   --->   Operation 111 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%empty_35 = trunc i64 %arg2_r_8_loc_load"   --->   Operation 112 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%empty_36 = trunc i64 %arg2_r_7_loc_load"   --->   Operation 113 'trunc' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%empty_37 = shl i64 %arg2_r_8_loc_load, i64 1"   --->   Operation 114 'shl' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [2/2] (0.77ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i63 %empty_29, i128 %add_1_3337_loc, i128 %add_1_2336_loc, i128 %add_1_1335_loc, i128 %add_1334_loc, i128 %add_3333_loc, i128 %add_2332_loc, i128 %add_1245331_loc, i128 %add330_loc"   --->   Operation 115 'call' 'call_ln0' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 6.10>
ST_23 : Operation 116 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 116 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 117 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 117 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 118 [1/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i63 %empty_29, i128 %add_1_3337_loc, i128 %add_1_2336_loc, i128 %add_1_1335_loc, i128 %add_1334_loc, i128 %add_3333_loc, i128 %add_2332_loc, i128 %add_1245331_loc, i128 %add330_loc"   --->   Operation 118 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i64 %arg2_r_loc_load" [d7.cpp:63]   --->   Operation 119 'zext' 'zext_ln63_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln63_3 = zext i64 %arg2_r_1_loc_load" [d7.cpp:63]   --->   Operation 120 'zext' 'zext_ln63_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln63_5 = zext i64 %arg2_r_2_loc_load" [d7.cpp:63]   --->   Operation 121 'zext' 'zext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln63_12 = zext i64 %arg1_r_2_loc_load" [d7.cpp:63]   --->   Operation 122 'zext' 'zext_ln63_12' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 123 '%mul_ln70_20 = mul i128 %zext_ln63_1, i128 %zext_ln63_12'
ST_23 : Operation 123 [1/1] (3.55ns)   --->   "%mul_ln70_20 = mul i128 %zext_ln63_1, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 123 'mul' 'mul_ln70_20' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln63_14 = zext i64 %arg1_r_1_loc_load" [d7.cpp:63]   --->   Operation 124 'zext' 'zext_ln63_14' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 125 '%mul_ln70_26 = mul i128 %zext_ln63_3, i128 %zext_ln63_14'
ST_23 : Operation 125 [1/1] (3.55ns)   --->   "%mul_ln70_26 = mul i128 %zext_ln63_3, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 125 'mul' 'mul_ln70_26' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 126 '%mul_ln70_27 = mul i128 %zext_ln63_1, i128 %zext_ln63_14'
ST_23 : Operation 126 [1/1] (3.55ns)   --->   "%mul_ln70_27 = mul i128 %zext_ln63_1, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 126 'mul' 'mul_ln70_27' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln63_16 = zext i64 %arg1_r_loc_load" [d7.cpp:63]   --->   Operation 127 'zext' 'zext_ln63_16' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 128 '%mul_ln70_33 = mul i128 %zext_ln63_5, i128 %zext_ln63_16'
ST_23 : Operation 128 [1/1] (3.55ns)   --->   "%mul_ln70_33 = mul i128 %zext_ln63_5, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 128 'mul' 'mul_ln70_33' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_35 = add i128 %mul_ln70_20, i128 %mul_ln70_33" [d7.cpp:70]   --->   Operation 129 'add' 'add_ln70_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 130 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_31 = add i128 %add_ln70_35, i128 %mul_ln70_26" [d7.cpp:70]   --->   Operation 130 'add' 'add_ln70_31' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln70_19 = trunc i128 %add_ln70_31" [d7.cpp:70]   --->   Operation 131 'trunc' 'trunc_ln70_19' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 132 '%mul_ln70_34 = mul i128 %zext_ln63_3, i128 %zext_ln63_16'
ST_23 : Operation 132 [1/1] (3.55ns)   --->   "%mul_ln70_34 = mul i128 %zext_ln63_3, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 132 'mul' 'mul_ln70_34' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 133 [1/1] (1.57ns)   --->   "%add_ln70_33 = add i128 %mul_ln70_34, i128 %mul_ln70_27" [d7.cpp:70]   --->   Operation 133 'add' 'add_ln70_33' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln70_21 = trunc i128 %add_ln70_33" [d7.cpp:70]   --->   Operation 134 'trunc' 'trunc_ln70_21' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 135 '%mul_ln70_35 = mul i128 %zext_ln63_1, i128 %zext_ln63_16'
ST_23 : Operation 135 [1/1] (3.55ns)   --->   "%mul_ln70_35 = mul i128 %zext_ln63_1, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 135 'mul' 'mul_ln70_35' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.10>
ST_24 : Operation 136 [1/1] (0.00ns)   --->   "%add_1_3337_loc_load = load i128 %add_1_3337_loc"   --->   Operation 136 'load' 'add_1_3337_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 137 [1/1] (0.00ns)   --->   "%add_1_2336_loc_load = load i128 %add_1_2336_loc"   --->   Operation 137 'load' 'add_1_2336_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 138 [1/1] (0.00ns)   --->   "%add_1_1335_loc_load = load i128 %add_1_1335_loc"   --->   Operation 138 'load' 'add_1_1335_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 139 [1/1] (0.00ns)   --->   "%add_1334_loc_load = load i128 %add_1334_loc"   --->   Operation 139 'load' 'add_1334_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i64 %arg1_r_8_loc_load" [d7.cpp:63]   --->   Operation 140 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 141 '%mul_ln63 = mul i128 %zext_ln63_1, i128 %zext_ln63'
ST_24 : Operation 141 [1/1] (3.55ns)   --->   "%mul_ln63 = mul i128 %zext_ln63_1, i128 %zext_ln63" [d7.cpp:63]   --->   Operation 141 'mul' 'mul_ln63' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln63_2 = zext i64 %arg1_r_7_loc_load" [d7.cpp:63]   --->   Operation 142 'zext' 'zext_ln63_2' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 143 '%mul_ln63_1 = mul i128 %zext_ln63_3, i128 %zext_ln63_2'
ST_24 : Operation 143 [1/1] (3.55ns)   --->   "%mul_ln63_1 = mul i128 %zext_ln63_3, i128 %zext_ln63_2" [d7.cpp:63]   --->   Operation 143 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 144 '%mul_ln70 = mul i128 %zext_ln63_1, i128 %zext_ln63_2'
ST_24 : Operation 144 [1/1] (3.55ns)   --->   "%mul_ln70 = mul i128 %zext_ln63_1, i128 %zext_ln63_2" [d7.cpp:70]   --->   Operation 144 'mul' 'mul_ln70' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln63_4 = zext i64 %arg1_r_6_loc_load" [d7.cpp:63]   --->   Operation 145 'zext' 'zext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 146 '%mul_ln63_2 = mul i128 %zext_ln63_5, i128 %zext_ln63_4'
ST_24 : Operation 146 [1/1] (3.55ns)   --->   "%mul_ln63_2 = mul i128 %zext_ln63_5, i128 %zext_ln63_4" [d7.cpp:63]   --->   Operation 146 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 147 '%mul_ln70_1 = mul i128 %zext_ln63_3, i128 %zext_ln63_4'
ST_24 : Operation 147 [1/1] (3.55ns)   --->   "%mul_ln70_1 = mul i128 %zext_ln63_3, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 147 'mul' 'mul_ln70_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 148 '%mul_ln70_2 = mul i128 %zext_ln63_1, i128 %zext_ln63_4'
ST_24 : Operation 148 [1/1] (3.55ns)   --->   "%mul_ln70_2 = mul i128 %zext_ln63_1, i128 %zext_ln63_4" [d7.cpp:70]   --->   Operation 148 'mul' 'mul_ln70_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln63_6 = zext i64 %arg1_r_5_loc_load" [d7.cpp:63]   --->   Operation 149 'zext' 'zext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln63_7 = zext i64 %arg2_r_3_loc_load" [d7.cpp:63]   --->   Operation 150 'zext' 'zext_ln63_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 151 '%mul_ln63_3 = mul i128 %zext_ln63_7, i128 %zext_ln63_6'
ST_24 : Operation 151 [1/1] (3.55ns)   --->   "%mul_ln63_3 = mul i128 %zext_ln63_7, i128 %zext_ln63_6" [d7.cpp:63]   --->   Operation 151 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 152 '%mul_ln70_3 = mul i128 %zext_ln63_5, i128 %zext_ln63_6'
ST_24 : Operation 152 [1/1] (3.55ns)   --->   "%mul_ln70_3 = mul i128 %zext_ln63_5, i128 %zext_ln63_6" [d7.cpp:70]   --->   Operation 152 'mul' 'mul_ln70_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 153 '%mul_ln70_4 = mul i128 %zext_ln63_3, i128 %zext_ln63_6'
ST_24 : Operation 153 [1/1] (3.55ns)   --->   "%mul_ln70_4 = mul i128 %zext_ln63_3, i128 %zext_ln63_6" [d7.cpp:70]   --->   Operation 153 'mul' 'mul_ln70_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 154 '%mul_ln70_5 = mul i128 %zext_ln63_1, i128 %zext_ln63_6'
ST_24 : Operation 154 [1/1] (3.55ns)   --->   "%mul_ln70_5 = mul i128 %zext_ln63_1, i128 %zext_ln63_6" [d7.cpp:70]   --->   Operation 154 'mul' 'mul_ln70_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln63_8 = zext i64 %arg1_r_4_loc_load" [d7.cpp:63]   --->   Operation 155 'zext' 'zext_ln63_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln63_9 = zext i64 %arg2_r_4_loc_load" [d7.cpp:63]   --->   Operation 156 'zext' 'zext_ln63_9' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 157 '%mul_ln63_4 = mul i128 %zext_ln63_9, i128 %zext_ln63_8'
ST_24 : Operation 157 [1/1] (3.55ns)   --->   "%mul_ln63_4 = mul i128 %zext_ln63_9, i128 %zext_ln63_8" [d7.cpp:63]   --->   Operation 157 'mul' 'mul_ln63_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 158 '%mul_ln70_6 = mul i128 %zext_ln63_7, i128 %zext_ln63_8'
ST_24 : Operation 158 [1/1] (3.55ns)   --->   "%mul_ln70_6 = mul i128 %zext_ln63_7, i128 %zext_ln63_8" [d7.cpp:70]   --->   Operation 158 'mul' 'mul_ln70_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 159 '%mul_ln70_7 = mul i128 %zext_ln63_5, i128 %zext_ln63_8'
ST_24 : Operation 159 [1/1] (3.55ns)   --->   "%mul_ln70_7 = mul i128 %zext_ln63_5, i128 %zext_ln63_8" [d7.cpp:70]   --->   Operation 159 'mul' 'mul_ln70_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 160 '%mul_ln70_8 = mul i128 %zext_ln63_3, i128 %zext_ln63_8'
ST_24 : Operation 160 [1/1] (3.55ns)   --->   "%mul_ln70_8 = mul i128 %zext_ln63_3, i128 %zext_ln63_8" [d7.cpp:70]   --->   Operation 160 'mul' 'mul_ln70_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 161 '%mul_ln70_9 = mul i128 %zext_ln63_1, i128 %zext_ln63_8'
ST_24 : Operation 161 [1/1] (3.55ns)   --->   "%mul_ln70_9 = mul i128 %zext_ln63_1, i128 %zext_ln63_8" [d7.cpp:70]   --->   Operation 161 'mul' 'mul_ln70_9' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln63_10 = zext i64 %arg1_r_3_loc_load" [d7.cpp:63]   --->   Operation 162 'zext' 'zext_ln63_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln63_11 = zext i64 %arg2_r_5_loc_load" [d7.cpp:63]   --->   Operation 163 'zext' 'zext_ln63_11' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 164 '%mul_ln63_5 = mul i128 %zext_ln63_11, i128 %zext_ln63_10'
ST_24 : Operation 164 [1/1] (3.55ns)   --->   "%mul_ln63_5 = mul i128 %zext_ln63_11, i128 %zext_ln63_10" [d7.cpp:63]   --->   Operation 164 'mul' 'mul_ln63_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 165 '%mul_ln70_10 = mul i128 %zext_ln63_9, i128 %zext_ln63_10'
ST_24 : Operation 165 [1/1] (3.55ns)   --->   "%mul_ln70_10 = mul i128 %zext_ln63_9, i128 %zext_ln63_10" [d7.cpp:70]   --->   Operation 165 'mul' 'mul_ln70_10' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 166 '%mul_ln70_11 = mul i128 %zext_ln63_7, i128 %zext_ln63_10'
ST_24 : Operation 166 [1/1] (3.55ns)   --->   "%mul_ln70_11 = mul i128 %zext_ln63_7, i128 %zext_ln63_10" [d7.cpp:70]   --->   Operation 166 'mul' 'mul_ln70_11' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 167 '%mul_ln70_12 = mul i128 %zext_ln63_5, i128 %zext_ln63_10'
ST_24 : Operation 167 [1/1] (3.55ns)   --->   "%mul_ln70_12 = mul i128 %zext_ln63_5, i128 %zext_ln63_10" [d7.cpp:70]   --->   Operation 167 'mul' 'mul_ln70_12' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 168 '%mul_ln70_13 = mul i128 %zext_ln63_3, i128 %zext_ln63_10'
ST_24 : Operation 168 [1/1] (3.55ns)   --->   "%mul_ln70_13 = mul i128 %zext_ln63_3, i128 %zext_ln63_10" [d7.cpp:70]   --->   Operation 168 'mul' 'mul_ln70_13' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 169 '%mul_ln70_14 = mul i128 %zext_ln63_1, i128 %zext_ln63_10'
ST_24 : Operation 169 [1/1] (3.55ns)   --->   "%mul_ln70_14 = mul i128 %zext_ln63_1, i128 %zext_ln63_10" [d7.cpp:70]   --->   Operation 169 'mul' 'mul_ln70_14' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln63_13 = zext i64 %arg2_r_6_loc_load" [d7.cpp:63]   --->   Operation 170 'zext' 'zext_ln63_13' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 171 '%mul_ln63_6 = mul i128 %zext_ln63_13, i128 %zext_ln63_12'
ST_24 : Operation 171 [1/1] (3.55ns)   --->   "%mul_ln63_6 = mul i128 %zext_ln63_13, i128 %zext_ln63_12" [d7.cpp:63]   --->   Operation 171 'mul' 'mul_ln63_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 172 '%mul_ln70_15 = mul i128 %zext_ln63_11, i128 %zext_ln63_12'
ST_24 : Operation 172 [1/1] (3.55ns)   --->   "%mul_ln70_15 = mul i128 %zext_ln63_11, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 172 'mul' 'mul_ln70_15' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 173 '%mul_ln70_16 = mul i128 %zext_ln63_9, i128 %zext_ln63_12'
ST_24 : Operation 173 [1/1] (3.55ns)   --->   "%mul_ln70_16 = mul i128 %zext_ln63_9, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 173 'mul' 'mul_ln70_16' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 174 '%mul_ln70_17 = mul i128 %zext_ln63_7, i128 %zext_ln63_12'
ST_24 : Operation 174 [1/1] (3.55ns)   --->   "%mul_ln70_17 = mul i128 %zext_ln63_7, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 174 'mul' 'mul_ln70_17' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 175 '%mul_ln70_18 = mul i128 %zext_ln63_5, i128 %zext_ln63_12'
ST_24 : Operation 175 [1/1] (3.55ns)   --->   "%mul_ln70_18 = mul i128 %zext_ln63_5, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 175 'mul' 'mul_ln70_18' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 176 '%mul_ln70_19 = mul i128 %zext_ln63_3, i128 %zext_ln63_12'
ST_24 : Operation 176 [1/1] (3.55ns)   --->   "%mul_ln70_19 = mul i128 %zext_ln63_3, i128 %zext_ln63_12" [d7.cpp:70]   --->   Operation 176 'mul' 'mul_ln70_19' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln63_15 = zext i64 %arg2_r_7_loc_load" [d7.cpp:63]   --->   Operation 177 'zext' 'zext_ln63_15' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 178 '%mul_ln63_7 = mul i128 %zext_ln63_15, i128 %zext_ln63_14'
ST_24 : Operation 178 [1/1] (3.55ns)   --->   "%mul_ln63_7 = mul i128 %zext_ln63_15, i128 %zext_ln63_14" [d7.cpp:63]   --->   Operation 178 'mul' 'mul_ln63_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 179 '%mul_ln70_21 = mul i128 %zext_ln63_13, i128 %zext_ln63_14'
ST_24 : Operation 179 [1/1] (3.55ns)   --->   "%mul_ln70_21 = mul i128 %zext_ln63_13, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 179 'mul' 'mul_ln70_21' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 180 '%mul_ln70_22 = mul i128 %zext_ln63_11, i128 %zext_ln63_14'
ST_24 : Operation 180 [1/1] (3.55ns)   --->   "%mul_ln70_22 = mul i128 %zext_ln63_11, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 180 'mul' 'mul_ln70_22' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 181 '%mul_ln70_23 = mul i128 %zext_ln63_9, i128 %zext_ln63_14'
ST_24 : Operation 181 [1/1] (3.55ns)   --->   "%mul_ln70_23 = mul i128 %zext_ln63_9, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 181 'mul' 'mul_ln70_23' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 182 '%mul_ln70_24 = mul i128 %zext_ln63_7, i128 %zext_ln63_14'
ST_24 : Operation 182 [1/1] (3.55ns)   --->   "%mul_ln70_24 = mul i128 %zext_ln63_7, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 182 'mul' 'mul_ln70_24' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 183 '%mul_ln70_25 = mul i128 %zext_ln63_5, i128 %zext_ln63_14'
ST_24 : Operation 183 [1/1] (3.55ns)   --->   "%mul_ln70_25 = mul i128 %zext_ln63_5, i128 %zext_ln63_14" [d7.cpp:70]   --->   Operation 183 'mul' 'mul_ln70_25' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln63_17 = zext i64 %arg2_r_8_loc_load" [d7.cpp:63]   --->   Operation 184 'zext' 'zext_ln63_17' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 185 '%mul_ln63_8 = mul i128 %zext_ln63_17, i128 %zext_ln63_16'
ST_24 : Operation 185 [1/1] (3.55ns)   --->   "%mul_ln63_8 = mul i128 %zext_ln63_17, i128 %zext_ln63_16" [d7.cpp:63]   --->   Operation 185 'mul' 'mul_ln63_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 186 [1/1] (1.57ns)   --->   "%add_ln63 = add i128 %mul_ln63_6, i128 %mul_ln63_7" [d7.cpp:63]   --->   Operation 186 'add' 'add_ln63' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 187 [1/1] (1.57ns)   --->   "%add_ln63_1 = add i128 %mul_ln63_5, i128 %mul_ln63_4" [d7.cpp:63]   --->   Operation 187 'add' 'add_ln63_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 188 [1/1] (0.00ns)   --->   "%trunc_ln63 = trunc i128 %add_ln63" [d7.cpp:63]   --->   Operation 188 'trunc' 'trunc_ln63' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 189 [1/1] (0.00ns)   --->   "%trunc_ln63_1 = trunc i128 %add_ln63_1" [d7.cpp:63]   --->   Operation 189 'trunc' 'trunc_ln63_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 190 [1/1] (1.57ns)   --->   "%add_ln63_3 = add i128 %mul_ln63, i128 %mul_ln63_1" [d7.cpp:63]   --->   Operation 190 'add' 'add_ln63_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63_4 = add i128 %mul_ln63_2, i128 %mul_ln63_8" [d7.cpp:63]   --->   Operation 191 'add' 'add_ln63_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 192 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln63_5 = add i128 %add_ln63_4, i128 %mul_ln63_3" [d7.cpp:63]   --->   Operation 192 'add' 'add_ln63_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln63_2 = trunc i128 %add_ln63_3" [d7.cpp:63]   --->   Operation 193 'trunc' 'trunc_ln63_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 194 [1/1] (0.00ns)   --->   "%trunc_ln63_3 = trunc i128 %add_ln63_5" [d7.cpp:63]   --->   Operation 194 'trunc' 'trunc_ln63_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 195 '%mul_ln70_28 = mul i128 %zext_ln63_15, i128 %zext_ln63_16'
ST_24 : Operation 195 [1/1] (3.55ns)   --->   "%mul_ln70_28 = mul i128 %zext_ln63_15, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 195 'mul' 'mul_ln70_28' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 196 [1/1] (1.57ns)   --->   "%add_ln70 = add i128 %mul_ln70_15, i128 %mul_ln70_21" [d7.cpp:70]   --->   Operation 196 'add' 'add_ln70' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 197 [1/1] (1.57ns)   --->   "%add_ln70_1 = add i128 %mul_ln70_10, i128 %mul_ln70_6" [d7.cpp:70]   --->   Operation 197 'add' 'add_ln70_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 198 [1/1] (0.00ns)   --->   "%trunc_ln70 = trunc i128 %add_ln70" [d7.cpp:70]   --->   Operation 198 'trunc' 'trunc_ln70' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln70_1 = trunc i128 %add_ln70_1" [d7.cpp:70]   --->   Operation 199 'trunc' 'trunc_ln70_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 200 [1/1] (1.57ns)   --->   "%add_ln70_3 = add i128 %mul_ln70_1, i128 %mul_ln70_3" [d7.cpp:70]   --->   Operation 200 'add' 'add_ln70_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 201 [1/1] (1.57ns)   --->   "%add_ln70_4 = add i128 %mul_ln70, i128 %mul_ln70_28" [d7.cpp:70]   --->   Operation 201 'add' 'add_ln70_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln70_2 = trunc i128 %add_ln70_3" [d7.cpp:70]   --->   Operation 202 'trunc' 'trunc_ln70_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 203 [1/1] (0.00ns)   --->   "%trunc_ln70_3 = trunc i128 %add_ln70_4" [d7.cpp:70]   --->   Operation 203 'trunc' 'trunc_ln70_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 204 '%mul_ln70_29 = mul i128 %zext_ln63_13, i128 %zext_ln63_16'
ST_24 : Operation 204 [1/1] (3.55ns)   --->   "%mul_ln70_29 = mul i128 %zext_ln63_13, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 204 'mul' 'mul_ln70_29' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 205 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_10 = add i128 %mul_ln70_22, i128 %mul_ln70_11" [d7.cpp:70]   --->   Operation 205 'add' 'add_ln70_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 206 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_11 = add i128 %add_ln70_10, i128 %mul_ln70_16" [d7.cpp:70]   --->   Operation 206 'add' 'add_ln70_11' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 207 [1/1] (1.57ns)   --->   "%add_ln70_12 = add i128 %mul_ln70_4, i128 %mul_ln70_7" [d7.cpp:70]   --->   Operation 207 'add' 'add_ln70_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 208 [1/1] (1.57ns)   --->   "%add_ln70_14 = add i128 %mul_ln70_2, i128 %mul_ln70_29" [d7.cpp:70]   --->   Operation 208 'add' 'add_ln70_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 209 [1/1] (0.00ns)   --->   "%trunc_ln70_5 = trunc i128 %add_ln70_12" [d7.cpp:70]   --->   Operation 209 'trunc' 'trunc_ln70_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 210 [1/1] (0.00ns)   --->   "%trunc_ln70_6 = trunc i128 %add_ln70_14" [d7.cpp:70]   --->   Operation 210 'trunc' 'trunc_ln70_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 211 [1/1] (0.00ns)   --->   "%trunc_ln70_7 = trunc i128 %add_ln70_11" [d7.cpp:70]   --->   Operation 211 'trunc' 'trunc_ln70_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 212 '%mul_ln70_30 = mul i128 %zext_ln63_11, i128 %zext_ln63_16'
ST_24 : Operation 212 [1/1] (3.55ns)   --->   "%mul_ln70_30 = mul i128 %zext_ln63_11, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 212 'mul' 'mul_ln70_30' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 213 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_18 = add i128 %mul_ln70_23, i128 %mul_ln70_12" [d7.cpp:70]   --->   Operation 213 'add' 'add_ln70_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 214 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_20 = add i128 %add_ln70_18, i128 %mul_ln70_17" [d7.cpp:70]   --->   Operation 214 'add' 'add_ln70_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_21 = add i128 %mul_ln70_8, i128 %mul_ln70_30" [d7.cpp:70]   --->   Operation 215 'add' 'add_ln70_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 216 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_22 = add i128 %add_ln70_21, i128 %mul_ln70_5" [d7.cpp:70]   --->   Operation 216 'add' 'add_ln70_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 217 [1/1] (0.00ns)   --->   "%trunc_ln70_9 = trunc i128 %add_ln70_20" [d7.cpp:70]   --->   Operation 217 'trunc' 'trunc_ln70_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 218 [1/1] (0.00ns)   --->   "%trunc_ln70_10 = trunc i128 %add_ln70_22" [d7.cpp:70]   --->   Operation 218 'trunc' 'trunc_ln70_10' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 219 '%mul_ln70_31 = mul i128 %zext_ln63_9, i128 %zext_ln63_16'
ST_24 : Operation 219 [1/1] (3.55ns)   --->   "%mul_ln70_31 = mul i128 %zext_ln63_9, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 219 'mul' 'mul_ln70_31' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 220 [1/1] (1.57ns)   --->   "%add_ln70_25 = add i128 %mul_ln70_18, i128 %mul_ln70_24" [d7.cpp:70]   --->   Operation 220 'add' 'add_ln70_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 221 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_26 = add i128 %mul_ln70_13, i128 %mul_ln70_31" [d7.cpp:70]   --->   Operation 221 'add' 'add_ln70_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 222 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_27 = add i128 %add_ln70_26, i128 %mul_ln70_9" [d7.cpp:70]   --->   Operation 222 'add' 'add_ln70_27' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln70_12 = trunc i128 %add_ln70_25" [d7.cpp:70]   --->   Operation 223 'trunc' 'trunc_ln70_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 224 [1/1] (0.00ns)   --->   "%trunc_ln70_13 = trunc i128 %add_ln70_27" [d7.cpp:70]   --->   Operation 224 'trunc' 'trunc_ln70_13' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.97ns)   --->   Input mux for Operation 225 '%mul_ln70_32 = mul i128 %zext_ln63_7, i128 %zext_ln63_16'
ST_24 : Operation 225 [1/1] (3.55ns)   --->   "%mul_ln70_32 = mul i128 %zext_ln63_7, i128 %zext_ln63_16" [d7.cpp:70]   --->   Operation 225 'mul' 'mul_ln70_32' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 226 [1/1] (1.57ns)   --->   "%add_ln70_30 = add i128 %mul_ln70_14, i128 %mul_ln70_25" [d7.cpp:70]   --->   Operation 226 'add' 'add_ln70_30' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 227 [1/1] (1.57ns)   --->   "%add_ln70_32 = add i128 %mul_ln70_19, i128 %mul_ln70_32" [d7.cpp:70]   --->   Operation 227 'add' 'add_ln70_32' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 228 [1/1] (0.00ns)   --->   "%trunc_ln70_15 = trunc i128 %add_ln70_30" [d7.cpp:70]   --->   Operation 228 'trunc' 'trunc_ln70_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 229 [1/1] (0.00ns)   --->   "%trunc_ln70_16 = trunc i128 %add_ln70_32" [d7.cpp:70]   --->   Operation 229 'trunc' 'trunc_ln70_16' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln70_17 = trunc i128 %add_1334_loc_load" [d7.cpp:70]   --->   Operation 230 'trunc' 'trunc_ln70_17' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln70_18 = trunc i128 %add_1_1335_loc_load" [d7.cpp:70]   --->   Operation 231 'trunc' 'trunc_ln70_18' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 232 [1/1] (0.00ns)   --->   "%trunc_ln70_20 = trunc i128 %add_1_2336_loc_load" [d7.cpp:70]   --->   Operation 232 'trunc' 'trunc_ln70_20' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 233 [1/1] (1.57ns)   --->   "%arr_1 = add i128 %add_1_3337_loc_load, i128 %mul_ln70_35" [d7.cpp:70]   --->   Operation 233 'add' 'arr_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i128 %arr_1" [d7.cpp:79]   --->   Operation 234 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln79_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %arr_1, i32 58, i32 127" [d7.cpp:79]   --->   Operation 235 'partselect' 'trunc_ln79_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 236 [1/1] (0.00ns)   --->   "%sext_ln79 = sext i70 %trunc_ln79_2" [d7.cpp:79]   --->   Operation 236 'sext' 'sext_ln79' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 237 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln79_8 = add i128 %add_1_2336_loc_load, i128 %sext_ln79" [d7.cpp:79]   --->   Operation 237 'add' 'add_ln79_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 238 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79 = add i128 %add_ln79_8, i128 %add_ln70_33" [d7.cpp:79]   --->   Operation 238 'add' 'add_ln79' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 239 [1/1] (0.00ns)   --->   "%trunc_ln79_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79, i32 58, i32 127" [d7.cpp:79]   --->   Operation 239 'partselect' 'trunc_ln79_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 240 [1/1] (0.00ns)   --->   "%sext_ln79_1 = sext i70 %trunc_ln79_3" [d7.cpp:79]   --->   Operation 240 'sext' 'sext_ln79_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 241 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln79_9 = add i128 %add_1_1335_loc_load, i128 %sext_ln79_1" [d7.cpp:79]   --->   Operation 241 'add' 'add_ln79_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 242 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_1 = add i128 %add_ln79_9, i128 %add_ln70_31" [d7.cpp:79]   --->   Operation 242 'add' 'add_ln79_1' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 243 [1/1] (0.00ns)   --->   "%trunc_ln79_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_1, i32 58, i32 127" [d7.cpp:79]   --->   Operation 243 'partselect' 'trunc_ln79_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 244 [1/1] (0.00ns)   --->   "%sext_ln79_2 = sext i70 %trunc_ln79_4" [d7.cpp:79]   --->   Operation 244 'sext' 'sext_ln79_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 245 [1/1] (1.57ns)   --->   "%add_ln79_10 = add i128 %add_1334_loc_load, i128 %sext_ln79_2" [d7.cpp:79]   --->   Operation 245 'add' 'add_ln79_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 246 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %arr_1, i32 58, i32 115" [d7.cpp:80]   --->   Operation 246 'partselect' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 247 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_1 = add i58 %trunc_ln70_20, i58 %trunc_ln80_2" [d7.cpp:80]   --->   Operation 247 'add' 'add_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 248 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln80_2 = add i58 %add_ln80_1, i58 %trunc_ln70_21" [d7.cpp:80]   --->   Operation 248 'add' 'add_ln80_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 249 [1/1] (0.00ns)   --->   "%trunc_ln81_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79, i32 58, i32 115" [d7.cpp:81]   --->   Operation 249 'partselect' 'trunc_ln81_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 250 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln81_1 = add i58 %trunc_ln70_18, i58 %trunc_ln81_1" [d7.cpp:81]   --->   Operation 250 'add' 'add_ln81_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 251 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln81_2 = add i58 %add_ln81_1, i58 %trunc_ln70_19" [d7.cpp:81]   --->   Operation 251 'add' 'add_ln81_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_1, i32 58, i32 115" [d7.cpp:82]   --->   Operation 252 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 253 [1/1] (1.09ns)   --->   "%add_ln82 = add i58 %trunc_ln70_17, i58 %trunc_ln5" [d7.cpp:82]   --->   Operation 253 'add' 'add_ln82' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.14>
ST_25 : Operation 254 [1/1] (0.00ns)   --->   "%add_3333_loc_load = load i128 %add_3333_loc"   --->   Operation 254 'load' 'add_3333_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 255 [1/1] (0.00ns)   --->   "%add_2332_loc_load = load i128 %add_2332_loc"   --->   Operation 255 'load' 'add_2332_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 256 [1/1] (1.57ns)   --->   "%add_ln63_2 = add i128 %add_ln63_1, i128 %add_ln63" [d7.cpp:63]   --->   Operation 256 'add' 'add_ln63_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 257 [1/1] (1.57ns)   --->   "%add_ln63_6 = add i128 %add_ln63_5, i128 %add_ln63_3" [d7.cpp:63]   --->   Operation 257 'add' 'add_ln63_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 258 [1/1] (1.09ns)   --->   "%add_ln63_7 = add i57 %trunc_ln63_1, i57 %trunc_ln63" [d7.cpp:63]   --->   Operation 258 'add' 'add_ln63_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 259 [1/1] (1.09ns)   --->   "%add_ln63_8 = add i57 %trunc_ln63_3, i57 %trunc_ln63_2" [d7.cpp:63]   --->   Operation 259 'add' 'add_ln63_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 260 [1/1] (1.57ns)   --->   "%add_ln70_2 = add i128 %add_ln70_1, i128 %add_ln70" [d7.cpp:70]   --->   Operation 260 'add' 'add_ln70_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 261 [1/1] (1.57ns)   --->   "%add_ln70_5 = add i128 %add_ln70_4, i128 %add_ln70_3" [d7.cpp:70]   --->   Operation 261 'add' 'add_ln70_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 262 [1/1] (1.09ns)   --->   "%add_ln70_7 = add i58 %trunc_ln70_1, i58 %trunc_ln70" [d7.cpp:70]   --->   Operation 262 'add' 'add_ln70_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 263 [1/1] (1.09ns)   --->   "%add_ln70_8 = add i58 %trunc_ln70_3, i58 %trunc_ln70_2" [d7.cpp:70]   --->   Operation 263 'add' 'add_ln70_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 264 [1/1] (1.57ns)   --->   "%add_ln70_15 = add i128 %add_ln70_14, i128 %add_ln70_12" [d7.cpp:70]   --->   Operation 264 'add' 'add_ln70_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 265 [1/1] (1.09ns)   --->   "%add_ln70_16 = add i58 %trunc_ln70_6, i58 %trunc_ln70_5" [d7.cpp:70]   --->   Operation 265 'add' 'add_ln70_16' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 266 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_19 = add i128 %add_ln70_22, i128 %add_ln70_20" [d7.cpp:70]   --->   Operation 266 'add' 'add_ln70_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 267 [1/1] (0.00ns)   --->   "%trunc_ln70_11 = trunc i128 %add_2332_loc_load" [d7.cpp:70]   --->   Operation 267 'trunc' 'trunc_ln70_11' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 268 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_23 = add i58 %trunc_ln70_10, i58 %trunc_ln70_9" [d7.cpp:70]   --->   Operation 268 'add' 'add_ln70_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 269 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_24 = add i128 %add_ln70_27, i128 %add_ln70_25" [d7.cpp:70]   --->   Operation 269 'add' 'add_ln70_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln70_14 = trunc i128 %add_3333_loc_load" [d7.cpp:70]   --->   Operation 270 'trunc' 'trunc_ln70_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 271 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_29 = add i58 %trunc_ln70_13, i58 %trunc_ln70_12" [d7.cpp:70]   --->   Operation 271 'add' 'add_ln70_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 272 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_28 = add i128 %add_ln70_32, i128 %add_ln70_30" [d7.cpp:70]   --->   Operation 272 'add' 'add_ln70_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_34 = add i58 %trunc_ln70_16, i58 %trunc_ln70_15" [d7.cpp:70]   --->   Operation 273 'add' 'add_ln70_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 274 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_2 = add i128 %add_ln79_10, i128 %add_ln70_28" [d7.cpp:79]   --->   Operation 274 'add' 'add_ln79_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 275 [1/1] (0.00ns)   --->   "%trunc_ln79_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_2, i32 58, i32 127" [d7.cpp:79]   --->   Operation 275 'partselect' 'trunc_ln79_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 276 [1/1] (0.00ns)   --->   "%sext_ln79_3 = sext i70 %trunc_ln79_5" [d7.cpp:79]   --->   Operation 276 'sext' 'sext_ln79_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 277 [1/1] (1.57ns)   --->   "%add_ln79_11 = add i128 %add_3333_loc_load, i128 %sext_ln79_3" [d7.cpp:79]   --->   Operation 277 'add' 'add_ln79_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 278 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_3 = add i128 %add_ln79_11, i128 %add_ln70_24" [d7.cpp:79]   --->   Operation 278 'add' 'add_ln79_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 279 [1/1] (0.00ns)   --->   "%trunc_ln79_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_3, i32 58, i32 127" [d7.cpp:79]   --->   Operation 279 'partselect' 'trunc_ln79_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 280 [1/1] (0.00ns)   --->   "%sext_ln79_4 = sext i70 %trunc_ln79_6" [d7.cpp:79]   --->   Operation 280 'sext' 'sext_ln79_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 281 [1/1] (1.57ns)   --->   "%add_ln79_12 = add i128 %add_2332_loc_load, i128 %sext_ln79_4" [d7.cpp:79]   --->   Operation 281 'add' 'add_ln79_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 282 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_4 = add i128 %add_ln79_12, i128 %add_ln70_19" [d7.cpp:79]   --->   Operation 282 'add' 'add_ln79_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln79_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_4, i32 58, i32 127" [d7.cpp:79]   --->   Operation 283 'partselect' 'trunc_ln79_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 284 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i58 %add_ln82, i58 %add_ln70_34" [d7.cpp:82]   --->   Operation 284 'add' 'out1_w_3' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 285 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_2, i32 58, i32 115" [d7.cpp:83]   --->   Operation 285 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 286 [1/1] (1.09ns)   --->   "%add_ln83 = add i58 %trunc_ln70_14, i58 %trunc_ln6" [d7.cpp:83]   --->   Operation 286 'add' 'add_ln83' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 287 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i58 %add_ln83, i58 %add_ln70_29" [d7.cpp:83]   --->   Operation 287 'add' 'out1_w_4' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 288 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_3, i32 58, i32 115" [d7.cpp:84]   --->   Operation 288 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 289 [1/1] (1.09ns)   --->   "%add_ln84 = add i58 %trunc_ln70_11, i58 %trunc_ln7" [d7.cpp:84]   --->   Operation 289 'add' 'add_ln84' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 290 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i58 %add_ln84, i58 %add_ln70_23" [d7.cpp:84]   --->   Operation 290 'add' 'out1_w_5' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_4, i32 58, i32 115" [d7.cpp:85]   --->   Operation 291 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 292 [1/1] (0.00ns)   --->   "%add_1245331_loc_load = load i128 %add_1245331_loc"   --->   Operation 292 'load' 'add_1245331_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 293 [1/1] (0.00ns)   --->   "%add330_loc_load = load i128 %add330_loc"   --->   Operation 293 'load' 'add330_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 294 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr = add i128 %add_ln63_6, i128 %add_ln63_2" [d7.cpp:63]   --->   Operation 294 'add' 'arr' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 295 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_6 = add i128 %add_ln70_5, i128 %add_ln70_2" [d7.cpp:70]   --->   Operation 295 'add' 'add_ln70_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln70_4 = trunc i128 %add330_loc_load" [d7.cpp:70]   --->   Operation 296 'trunc' 'trunc_ln70_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 297 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_9 = add i58 %add_ln70_8, i58 %add_ln70_7" [d7.cpp:70]   --->   Operation 297 'add' 'add_ln70_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 298 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_13 = add i128 %add_ln70_15, i128 %add_ln70_11" [d7.cpp:70]   --->   Operation 298 'add' 'add_ln70_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 299 [1/1] (0.00ns)   --->   "%trunc_ln70_8 = trunc i128 %add_1245331_loc_load" [d7.cpp:70]   --->   Operation 299 'trunc' 'trunc_ln70_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 300 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70_17 = add i58 %add_ln70_16, i58 %trunc_ln70_7" [d7.cpp:70]   --->   Operation 300 'add' 'add_ln70_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 301 [1/1] (0.00ns)   --->   "%sext_ln79_5 = sext i70 %trunc_ln79_7" [d7.cpp:79]   --->   Operation 301 'sext' 'sext_ln79_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 302 [1/1] (1.57ns)   --->   "%add_ln79_13 = add i128 %add_1245331_loc_load, i128 %sext_ln79_5" [d7.cpp:79]   --->   Operation 302 'add' 'add_ln79_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 303 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_5 = add i128 %add_ln79_13, i128 %add_ln70_13" [d7.cpp:79]   --->   Operation 303 'add' 'add_ln79_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 304 [1/1] (0.00ns)   --->   "%trunc_ln79_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_5, i32 58, i32 127" [d7.cpp:79]   --->   Operation 304 'partselect' 'trunc_ln79_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 305 [1/1] (0.00ns)   --->   "%sext_ln79_6 = sext i70 %trunc_ln79_8" [d7.cpp:79]   --->   Operation 305 'sext' 'sext_ln79_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 306 [1/1] (1.57ns)   --->   "%add_ln79_14 = add i128 %add330_loc_load, i128 %sext_ln79_6" [d7.cpp:79]   --->   Operation 306 'add' 'add_ln79_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 307 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_6 = add i128 %add_ln79_14, i128 %add_ln70_6" [d7.cpp:79]   --->   Operation 307 'add' 'add_ln79_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 308 [1/1] (0.00ns)   --->   "%trunc_ln79_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_6, i32 58, i32 127" [d7.cpp:79]   --->   Operation 308 'partselect' 'trunc_ln79_9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 309 [1/1] (0.00ns)   --->   "%sext_ln79_7 = sext i70 %trunc_ln79_9" [d7.cpp:79]   --->   Operation 309 'sext' 'sext_ln79_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 310 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_7 = add i128 %arr, i128 %sext_ln79_7" [d7.cpp:79]   --->   Operation 310 'add' 'add_ln79_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 311 [1/1] (0.00ns)   --->   "%trunc_ln79_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_7, i32 57, i32 114" [d7.cpp:79]   --->   Operation 311 'partselect' 'trunc_ln79_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 312 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln79_1, i58 %trunc_ln79" [d7.cpp:79]   --->   Operation 312 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 313 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i58 %trunc_ln79" [d7.cpp:80]   --->   Operation 313 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 314 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln79_7, i32 57, i32 127" [d7.cpp:80]   --->   Operation 314 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 315 [1/1] (0.00ns)   --->   "%sext_ln80 = sext i71 %trunc_ln3" [d7.cpp:80]   --->   Operation 315 'sext' 'sext_ln80' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 316 [1/1] (1.13ns)   --->   "%add_ln80 = add i72 %sext_ln80, i72 %zext_ln80" [d7.cpp:80]   --->   Operation 316 'add' 'add_ln80' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 317 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln80, i32 58, i32 71" [d7.cpp:80]   --->   Operation 317 'partselect' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 318 [1/1] (1.09ns)   --->   "%add_ln85 = add i58 %trunc_ln70_8, i58 %trunc_ln8" [d7.cpp:85]   --->   Operation 318 'add' 'add_ln85' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 319 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i58 %add_ln85, i58 %add_ln70_17" [d7.cpp:85]   --->   Operation 319 'add' 'out1_w_6' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 320 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_5, i32 58, i32 115" [d7.cpp:86]   --->   Operation 320 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 321 [1/1] (1.09ns)   --->   "%add_ln86 = add i58 %trunc_ln70_4, i58 %trunc_ln9" [d7.cpp:86]   --->   Operation 321 'add' 'add_ln86' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 322 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_7 = add i58 %add_ln86, i58 %add_ln70_9" [d7.cpp:86]   --->   Operation 322 'add' 'out1_w_7' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 323 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87 = add i57 %add_ln63_8, i57 %add_ln63_7" [d7.cpp:87]   --->   Operation 323 'add' 'add_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 324 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln79_6, i32 58, i32 114" [d7.cpp:87]   --->   Operation 324 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 325 [1/1] (0.79ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i57 %trunc_ln, i57 %add_ln87" [d7.cpp:87]   --->   Operation 325 'add' 'out1_w_8' <Predicate = true> <Delay = 0.79> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 326 [1/1] (0.00ns)   --->   "%sext_ln91 = sext i61 %trunc_ln91_1" [d7.cpp:91]   --->   Operation 326 'sext' 'sext_ln91' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 327 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln91" [d7.cpp:91]   --->   Operation 327 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 328 [1/1] (7.30ns)   --->   "%empty_38 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d7.cpp:91]   --->   Operation 328 'writereq' 'empty_38' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 2.95>
ST_27 : Operation 329 [1/1] (0.00ns)   --->   "%sext_ln80_1 = sext i14 %trunc_ln80_1" [d7.cpp:80]   --->   Operation 329 'sext' 'sext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 330 [1/1] (0.00ns)   --->   "%sext_ln80_2 = sext i14 %trunc_ln80_1" [d7.cpp:80]   --->   Operation 330 'sext' 'sext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 331 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln80_2, i58 %add_ln80_2" [d7.cpp:80]   --->   Operation 331 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 332 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i58 %add_ln80_2" [d7.cpp:81]   --->   Operation 332 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 333 [1/1] (1.09ns)   --->   "%add_ln81 = add i60 %sext_ln80_1, i60 %zext_ln81" [d7.cpp:81]   --->   Operation 333 'add' 'add_ln81' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 334 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln81, i32 58, i32 59" [d7.cpp:81]   --->   Operation 334 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 335 [1/1] (0.00ns)   --->   "%sext_ln81 = sext i2 %tmp" [d7.cpp:81]   --->   Operation 335 'sext' 'sext_ln81' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 336 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i6 %sext_ln81" [d7.cpp:81]   --->   Operation 336 'zext' 'zext_ln81_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 337 [1/1] (0.00ns)   --->   "%zext_ln81_2 = zext i58 %add_ln81_2" [d7.cpp:81]   --->   Operation 337 'zext' 'zext_ln81_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 338 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln81_2, i59 %zext_ln81_1" [d7.cpp:81]   --->   Operation 338 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 339 [2/2] (0.77ns)   --->   "%call_ln91 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln91_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d7.cpp:91]   --->   Operation 339 'call' 'call_ln91' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 0.00>
ST_28 : Operation 340 [1/2] (0.00ns)   --->   "%call_ln91 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln91_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d7.cpp:91]   --->   Operation 340 'call' 'call_ln91' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 341 [5/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d7.cpp:96]   --->   Operation 341 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 342 [4/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d7.cpp:96]   --->   Operation 342 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 343 [3/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d7.cpp:96]   --->   Operation 343 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 344 [2/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d7.cpp:96]   --->   Operation 344 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 345 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d7.cpp:3]   --->   Operation 345 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 346 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 346 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 347 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 347 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 348 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 348 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 349 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 349 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 350 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 350 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 351 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 351 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 352 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 352 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 353 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 353 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 354 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 354 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 355 [1/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d7.cpp:96]   --->   Operation 355 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 356 [1/1] (0.00ns)   --->   "%ret_ln96 = ret" [d7.cpp:96]   --->   Operation 356 'ret' 'ret_ln96' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d7.cpp:22) [46]  (0.000 ns)
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d7.cpp:22) on port 'mem' (d7.cpp:22) [47]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d7.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [48]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d7.cpp:29) [60]  (0.000 ns)
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d7.cpp:29) on port 'mem' (d7.cpp:29) [61]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d7.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [62]  (1.224 ns)

 <State 22>: 0.770ns
The critical path consists of the following:
	'load' operation ('arg1_r_8_loc_load') on local variable 'arg1_r_8_loc' [49]  (0.000 ns)
	'call' operation ('call_ln0') to 'test_Pipeline_VITIS_LOOP_36_1' [81]  (0.770 ns)

 <State 23>: 6.109ns
The critical path consists of the following:
	'load' operation ('arg1_r_loc_load') on local variable 'arg1_r_loc' [57]  (0.000 ns)
	multiplexor before operation 'mul' with delay (0.979 ns)
'mul' operation ('mul_ln70_34', d7.cpp:70) [220]  (3.551 ns)
	'add' operation ('add_ln70_33', d7.cpp:70) [221]  (1.579 ns)

 <State 24>: 6.109ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.979 ns)
'mul' operation ('mul_ln63_6', d7.cpp:63) [125]  (3.551 ns)
	'add' operation ('add_ln63', d7.cpp:63) [145]  (1.579 ns)

 <State 25>: 6.143ns
The critical path consists of the following:
	'add' operation ('add_ln70_28', d7.cpp:70) [212]  (0.000 ns)
	'add' operation ('add_ln79_2', d7.cpp:79) [238]  (0.995 ns)
	'add' operation ('add_ln79_11', d7.cpp:79) [241]  (1.579 ns)
	'add' operation ('add_ln79_3', d7.cpp:79) [242]  (0.995 ns)
	'add' operation ('add_ln79_12', d7.cpp:79) [245]  (1.579 ns)
	'add' operation ('add_ln79_4', d7.cpp:79) [246]  (0.995 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d7.cpp:91) [301]  (0.000 ns)
	bus request operation ('empty_38', d7.cpp:91) on port 'mem' (d7.cpp:91) [302]  (7.300 ns)

 <State 27>: 2.957ns
The critical path consists of the following:
	'add' operation ('add_ln81', d7.cpp:81) [272]  (1.093 ns)
	'add' operation ('out1_w', d7.cpp:81) [280]  (1.093 ns)
	'call' operation ('call_ln91', d7.cpp:91) to 'test_Pipeline_ARRAY_WRITE' [303]  (0.770 ns)

 <State 28>: 0.000ns
The critical path consists of the following:

 <State 29>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d7.cpp:96) on port 'mem' (d7.cpp:96) [304]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d7.cpp:96) on port 'mem' (d7.cpp:96) [304]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d7.cpp:96) on port 'mem' (d7.cpp:96) [304]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d7.cpp:96) on port 'mem' (d7.cpp:96) [304]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d7.cpp:96) on port 'mem' (d7.cpp:96) [304]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
