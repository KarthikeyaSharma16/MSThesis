

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_56_5'
================================================================
* Date:           Thu May  9 22:20:18 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D7
* Solution:       comb_47 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.894 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       12|  0.120 us|  0.120 us|   12|   12|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_56_5  |       10|       10|         3|          1|          1|     9|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.13>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add8723 = alloca i32 1"   --->   Operation 6 'alloca' 'add8723' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add11424 = alloca i32 1"   --->   Operation 7 'alloca' 'add11424' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add114_125 = alloca i32 1"   --->   Operation 8 'alloca' 'add114_125' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add114_226 = alloca i32 1"   --->   Operation 9 'alloca' 'add114_226' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add114_327 = alloca i32 1"   --->   Operation 10 'alloca' 'add114_327' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add114_428 = alloca i32 1"   --->   Operation 11 'alloca' 'add114_428' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add114_529 = alloca i32 1"   --->   Operation 12 'alloca' 'add114_529' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add114_630 = alloca i32 1"   --->   Operation 13 'alloca' 'add114_630' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add114_731 = alloca i32 1"   --->   Operation 14 'alloca' 'add114_731' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 15 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_8_reload"   --->   Operation 16 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_7_reload"   --->   Operation 17 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_6_reload"   --->   Operation 18 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_5_reload"   --->   Operation 19 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_4_reload"   --->   Operation 20 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_3_reload"   --->   Operation 21 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_2_reload"   --->   Operation 22 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_1_reload"   --->   Operation 23 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_reload"   --->   Operation 24 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_8_reload"   --->   Operation 25 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 26 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 27 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 28 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 29 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 30 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 31 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 32 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_reload"   --->   Operation 33 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%add32_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add32_reload"   --->   Operation 34 'read' 'add32_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%add_133_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_133_reload"   --->   Operation 35 'read' 'add_133_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%add_234_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_234_reload"   --->   Operation 36 'read' 'add_234_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add_335_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_335_reload"   --->   Operation 37 'read' 'add_335_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add_436_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_436_reload"   --->   Operation 38 'read' 'add_436_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add_537_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_537_reload"   --->   Operation 39 'read' 'add_537_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add_638_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_638_reload"   --->   Operation 40 'read' 'add_638_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add_739_reload_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %add_739_reload"   --->   Operation 41 'read' 'add_739_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_739_reload_read, i128 %add114_731"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_638_reload_read, i128 %add114_630"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_537_reload_read, i128 %add114_529"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_436_reload_read, i128 %add114_428"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_335_reload_read, i128 %add114_327"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_234_reload_read, i128 %add114_226"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add_133_reload_read, i128 %add114_125"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %add32_reload_read, i128 %add11424"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add8723"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body95"   --->   Operation 52 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [d7.cpp:70]   --->   Operation 53 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_1, i32 4" [d7.cpp:56]   --->   Operation 54 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln56 = br i1 %tmp, void %for.body95.split, void %for.end136.exitStub" [d7.cpp:56]   --->   Operation 55 'br' 'br_ln56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i5 %i_1" [d7.cpp:34]   --->   Operation 56 'trunc' 'trunc_ln34' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d7.cpp:62]   --->   Operation 57 'partselect' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.54ns)   --->   "%icmp_ln62 = icmp_ne  i2 %tmp_2, i2 1" [d7.cpp:62]   --->   Operation 58 'icmp' 'icmp_ln62' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%sub_ln62 = sub i4 7, i4 %trunc_ln34" [d7.cpp:62]   --->   Operation 59 'sub' 'sub_ln62' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node and_ln34)   --->   "%select_ln62 = select i1 %icmp_ln62, i4 15, i4 0" [d7.cpp:62]   --->   Operation 60 'select' 'select_ln62' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.35ns) (out node of the LUT)   --->   "%and_ln34 = and i4 %sub_ln62, i4 %select_ln62" [d7.cpp:34]   --->   Operation 61 'and' 'and_ln34' <Predicate = (!tmp)> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.77ns)   --->   "%tmp_8 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i4 %trunc_ln34" [d7.cpp:63]   --->   Operation 62 'mux' 'tmp_8' <Predicate = (!tmp)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i1 %icmp_ln62" [d7.cpp:71]   --->   Operation 63 'zext' 'zext_ln71' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.79ns)   --->   "%sub_ln67_3 = sub i4 %and_ln34, i4 %zext_ln71" [d7.cpp:67]   --->   Operation 64 'sub' 'sub_ln67_3' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.78ns)   --->   "%icmp_ln70 = icmp_slt  i5 %i_1, i5 7" [d7.cpp:70]   --->   Operation 65 'icmp' 'icmp_ln70' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln71_1 = zext i1 %icmp_ln70" [d7.cpp:71]   --->   Operation 66 'zext' 'zext_ln71_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%sub_ln67_4 = sub i4 %sub_ln67_3, i4 %zext_ln71_1" [d7.cpp:67]   --->   Operation 67 'sub' 'sub_ln67_4' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.78ns)   --->   "%icmp_ln70_1 = icmp_slt  i5 %i_1, i5 6" [d7.cpp:70]   --->   Operation 68 'icmp' 'icmp_ln70_1' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln71_2 = zext i1 %icmp_ln70_1" [d7.cpp:71]   --->   Operation 69 'zext' 'zext_ln71_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.79ns)   --->   "%sub_ln67_5 = sub i4 %sub_ln67_4, i4 %zext_ln71_2" [d7.cpp:67]   --->   Operation 70 'sub' 'sub_ln67_5' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.78ns)   --->   "%icmp_ln70_2 = icmp_slt  i5 %i_1, i5 5" [d7.cpp:70]   --->   Operation 71 'icmp' 'icmp_ln70_2' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln71_3 = zext i1 %icmp_ln70_2" [d7.cpp:71]   --->   Operation 72 'zext' 'zext_ln71_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.79ns)   --->   "%sub_ln67_6 = sub i4 %sub_ln67_5, i4 %zext_ln71_3" [d7.cpp:67]   --->   Operation 73 'sub' 'sub_ln67_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d7.cpp:70]   --->   Operation 74 'partselect' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.67ns)   --->   "%icmp_ln70_3 = icmp_slt  i3 %tmp_6, i3 1" [d7.cpp:70]   --->   Operation 75 'icmp' 'icmp_ln70_3' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln71_4 = zext i1 %icmp_ln70_3" [d7.cpp:71]   --->   Operation 76 'zext' 'zext_ln71_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%sub_ln67 = sub i4 %sub_ln67_6, i4 %zext_ln71_4" [d7.cpp:67]   --->   Operation 77 'sub' 'sub_ln67' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.78ns)   --->   "%icmp_ln70_4 = icmp_slt  i5 %i_1, i5 3" [d7.cpp:70]   --->   Operation 78 'icmp' 'icmp_ln70_4' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i_1, i32 1, i32 4" [d7.cpp:70]   --->   Operation 79 'partselect' 'tmp_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%icmp_ln70_5 = icmp_slt  i4 %tmp_11, i4 1" [d7.cpp:70]   --->   Operation 80 'icmp' 'icmp_ln70_5' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.78ns)   --->   "%icmp_ln70_6 = icmp_slt  i5 %i_1, i5 1" [d7.cpp:70]   --->   Operation 81 'icmp' 'icmp_ln70_6' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.78ns)   --->   "%add_ln56 = add i5 %i_1, i5 31" [d7.cpp:56]   --->   Operation 82 'add' 'add_ln56' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln56 = store i5 %add_ln56, i5 %i" [d7.cpp:56]   --->   Operation 83 'store' 'store_ln56' <Predicate = (!tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 6.89>
ST_2 : Operation 84 [1/1] (0.79ns)   --->   "%sub_ln59 = sub i4 8, i4 %trunc_ln34" [d7.cpp:59]   --->   Operation 84 'sub' 'sub_ln59' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i64 %tmp_8" [d7.cpp:63]   --->   Operation 85 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.77ns)   --->   "%tmp_9 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln59" [d7.cpp:63]   --->   Operation 86 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i64 %tmp_9" [d7.cpp:63]   --->   Operation 87 'zext' 'zext_ln63_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 88 '%mul_ln63 = mul i128 %zext_ln63_1, i128 %zext_ln63'
ST_2 : Operation 88 [1/1] (3.76ns)   --->   "%mul_ln63 = mul i128 %zext_ln63_1, i128 %zext_ln63" [d7.cpp:63]   --->   Operation 88 'mul' 'mul_ln63' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.77ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %and_ln34" [d7.cpp:70]   --->   Operation 89 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i64 %tmp_s" [d7.cpp:70]   --->   Operation 90 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 91 '%mul_ln70 = mul i128 %zext_ln70, i128 %zext_ln63'
ST_2 : Operation 91 [1/1] (3.76ns)   --->   "%mul_ln70 = mul i128 %zext_ln70, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 91 'mul' 'mul_ln70' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.77ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_3" [d7.cpp:70]   --->   Operation 92 'mux' 'tmp_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i64 %tmp_1" [d7.cpp:70]   --->   Operation 93 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 94 '%mul_ln70_1 = mul i128 %zext_ln70_1, i128 %zext_ln63'
ST_2 : Operation 94 [1/1] (3.76ns)   --->   "%mul_ln70_1 = mul i128 %zext_ln70_1, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 94 'mul' 'mul_ln70_1' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.77ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_4" [d7.cpp:70]   --->   Operation 95 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln70_2 = zext i64 %tmp_3" [d7.cpp:70]   --->   Operation 96 'zext' 'zext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 97 '%mul_ln70_2 = mul i128 %zext_ln70_2, i128 %zext_ln63'
ST_2 : Operation 97 [1/1] (3.76ns)   --->   "%mul_ln70_2 = mul i128 %zext_ln70_2, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 97 'mul' 'mul_ln70_2' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.77ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_5" [d7.cpp:70]   --->   Operation 98 'mux' 'tmp_4' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln70_3 = zext i64 %tmp_4" [d7.cpp:70]   --->   Operation 99 'zext' 'zext_ln70_3' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 100 '%mul_ln70_3 = mul i128 %zext_ln70_3, i128 %zext_ln63'
ST_2 : Operation 100 [1/1] (3.76ns)   --->   "%mul_ln70_3 = mul i128 %zext_ln70_3, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 100 'mul' 'mul_ln70_3' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.77ns)   --->   "%tmp_5 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_6" [d7.cpp:70]   --->   Operation 101 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln70_4 = zext i64 %tmp_5" [d7.cpp:70]   --->   Operation 102 'zext' 'zext_ln70_4' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 103 '%mul_ln70_4 = mul i128 %zext_ln70_4, i128 %zext_ln63'
ST_2 : Operation 103 [1/1] (3.76ns)   --->   "%mul_ln70_4 = mul i128 %zext_ln70_4, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 103 'mul' 'mul_ln70_4' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.77ns)   --->   "%tmp_7 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67" [d7.cpp:70]   --->   Operation 104 'mux' 'tmp_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln70_5 = zext i64 %tmp_7" [d7.cpp:70]   --->   Operation 105 'zext' 'zext_ln70_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 106 '%mul_ln70_5 = mul i128 %zext_ln70_5, i128 %zext_ln63'
ST_2 : Operation 106 [1/1] (3.76ns)   --->   "%mul_ln70_5 = mul i128 %zext_ln70_5, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 106 'mul' 'mul_ln70_5' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln71_5 = zext i1 %icmp_ln70_4" [d7.cpp:71]   --->   Operation 107 'zext' 'zext_ln71_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.79ns)   --->   "%sub_ln67_1 = sub i4 %sub_ln67, i4 %zext_ln71_5" [d7.cpp:67]   --->   Operation 108 'sub' 'sub_ln67_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.77ns)   --->   "%tmp_10 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_1" [d7.cpp:70]   --->   Operation 109 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln70_6 = zext i64 %tmp_10" [d7.cpp:70]   --->   Operation 110 'zext' 'zext_ln70_6' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 111 '%mul_ln70_6 = mul i128 %zext_ln70_6, i128 %zext_ln63'
ST_2 : Operation 111 [1/1] (3.76ns)   --->   "%mul_ln70_6 = mul i128 %zext_ln70_6, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 111 'mul' 'mul_ln70_6' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln71_6 = zext i1 %icmp_ln70_5" [d7.cpp:71]   --->   Operation 112 'zext' 'zext_ln71_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.79ns)   --->   "%sub_ln67_2 = sub i4 %sub_ln67_1, i4 %zext_ln71_6" [d7.cpp:67]   --->   Operation 113 'sub' 'sub_ln67_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.77ns)   --->   "%tmp_12 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln67_2" [d7.cpp:70]   --->   Operation 114 'mux' 'tmp_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln70_7 = zext i64 %tmp_12" [d7.cpp:70]   --->   Operation 115 'zext' 'zext_ln70_7' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.76ns)   --->   Input mux for Operation 116 '%mul_ln70_7 = mul i128 %zext_ln70_7, i128 %zext_ln63'
ST_2 : Operation 116 [1/1] (3.76ns)   --->   "%mul_ln70_7 = mul i128 %zext_ln70_7, i128 %zext_ln63" [d7.cpp:70]   --->   Operation 116 'mul' 'mul_ln70_7' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.00ns)   --->   "%add8723_load_1 = load i128 %add8723"   --->   Operation 164 'load' 'add8723_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 165 [1/1] (0.00ns)   --->   "%add11424_load_1 = load i128 %add11424"   --->   Operation 165 'load' 'add11424_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (0.00ns)   --->   "%add114_125_load_1 = load i128 %add114_125"   --->   Operation 166 'load' 'add114_125_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 167 [1/1] (0.00ns)   --->   "%add114_226_load_1 = load i128 %add114_226"   --->   Operation 167 'load' 'add114_226_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 168 [1/1] (0.00ns)   --->   "%add114_327_load_1 = load i128 %add114_327"   --->   Operation 168 'load' 'add114_327_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 169 [1/1] (0.00ns)   --->   "%add114_428_load_1 = load i128 %add114_428"   --->   Operation 169 'load' 'add114_428_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 170 [1/1] (0.00ns)   --->   "%add114_529_load_1 = load i128 %add114_529"   --->   Operation 170 'load' 'add114_529_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 171 [1/1] (0.00ns)   --->   "%add114_630_load_1 = load i128 %add114_630"   --->   Operation 171 'load' 'add114_630_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 172 [1/1] (0.00ns)   --->   "%add114_731_load_1 = load i128 %add114_731"   --->   Operation 172 'load' 'add114_731_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 173 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_731_out, i128 %add114_731_load_1"   --->   Operation 173 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 174 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_630_out, i128 %add114_630_load_1"   --->   Operation 174 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 175 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_529_out, i128 %add114_529_load_1"   --->   Operation 175 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 176 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_428_out, i128 %add114_428_load_1"   --->   Operation 176 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 177 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_327_out, i128 %add114_327_load_1"   --->   Operation 177 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 178 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_226_out, i128 %add114_226_load_1"   --->   Operation 178 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 179 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add114_125_out, i128 %add114_125_load_1"   --->   Operation 179 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 180 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add11424_out, i128 %add11424_load_1"   --->   Operation 180 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 181 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add8723_out, i128 %add8723_load_1"   --->   Operation 181 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 182 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 182 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%add8723_load = load i128 %add8723" [d7.cpp:63]   --->   Operation 117 'load' 'add8723_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%add11424_load = load i128 %add11424" [d7.cpp:70]   --->   Operation 118 'load' 'add11424_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%add114_125_load = load i128 %add114_125" [d7.cpp:70]   --->   Operation 119 'load' 'add114_125_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%add114_226_load = load i128 %add114_226" [d7.cpp:70]   --->   Operation 120 'load' 'add114_226_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%add114_327_load = load i128 %add114_327" [d7.cpp:70]   --->   Operation 121 'load' 'add114_327_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%add114_428_load = load i128 %add114_428" [d7.cpp:70]   --->   Operation 122 'load' 'add114_428_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.00ns)   --->   "%add114_529_load = load i128 %add114_529" [d7.cpp:70]   --->   Operation 123 'load' 'add114_529_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%add114_630_load = load i128 %add114_630" [d7.cpp:70]   --->   Operation 124 'load' 'add114_630_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%add114_731_load = load i128 %add114_731" [d7.cpp:70]   --->   Operation 125 'load' 'add114_731_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.00ns)   --->   "%specpipeline_ln58 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d7.cpp:58]   --->   Operation 126 'specpipeline' 'specpipeline_ln58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [d7.cpp:34]   --->   Operation 127 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (0.00ns)   --->   "%specloopname_ln56 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [d7.cpp:56]   --->   Operation 128 'specloopname' 'specloopname_ln56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 129 [1/1] (1.57ns)   --->   "%add_ln63 = add i128 %mul_ln63, i128 %add8723_load" [d7.cpp:63]   --->   Operation 129 'add' 'add_ln63' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node add_ln70)   --->   "%select_ln70 = select i1 %icmp_ln62, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 130 'select' 'select_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node add_ln70)   --->   "%and_ln70 = and i128 %mul_ln70, i128 %select_ln70" [d7.cpp:70]   --->   Operation 131 'and' 'and_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 132 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70 = add i128 %and_ln70, i128 %add11424_load" [d7.cpp:70]   --->   Operation 132 'add' 'add_ln70' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%select_ln70_1 = select i1 %icmp_ln70, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 133 'select' 'select_ln70_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%and_ln70_1 = and i128 %mul_ln70_1, i128 %select_ln70_1" [d7.cpp:70]   --->   Operation 134 'and' 'and_ln70_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 135 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_1 = add i128 %and_ln70_1, i128 %add114_125_load" [d7.cpp:70]   --->   Operation 135 'add' 'add_ln70_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_2)   --->   "%select_ln70_2 = select i1 %icmp_ln70_1, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 136 'select' 'select_ln70_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_2)   --->   "%and_ln70_2 = and i128 %mul_ln70_2, i128 %select_ln70_2" [d7.cpp:70]   --->   Operation 137 'and' 'and_ln70_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 138 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_2 = add i128 %and_ln70_2, i128 %add114_226_load" [d7.cpp:70]   --->   Operation 138 'add' 'add_ln70_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_3)   --->   "%select_ln70_3 = select i1 %icmp_ln70_2, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 139 'select' 'select_ln70_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_3)   --->   "%and_ln70_3 = and i128 %mul_ln70_3, i128 %select_ln70_3" [d7.cpp:70]   --->   Operation 140 'and' 'and_ln70_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 141 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_3 = add i128 %and_ln70_3, i128 %add114_327_load" [d7.cpp:70]   --->   Operation 141 'add' 'add_ln70_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_4)   --->   "%select_ln70_4 = select i1 %icmp_ln70_3, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 142 'select' 'select_ln70_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_4)   --->   "%and_ln70_4 = and i128 %mul_ln70_4, i128 %select_ln70_4" [d7.cpp:70]   --->   Operation 143 'and' 'and_ln70_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 144 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_4 = add i128 %and_ln70_4, i128 %add114_428_load" [d7.cpp:70]   --->   Operation 144 'add' 'add_ln70_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_5)   --->   "%select_ln70_5 = select i1 %icmp_ln70_4, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 145 'select' 'select_ln70_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_5)   --->   "%and_ln70_5 = and i128 %mul_ln70_5, i128 %select_ln70_5" [d7.cpp:70]   --->   Operation 146 'and' 'and_ln70_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 147 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_5 = add i128 %and_ln70_5, i128 %add114_529_load" [d7.cpp:70]   --->   Operation 147 'add' 'add_ln70_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%select_ln70_6 = select i1 %icmp_ln70_5, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 148 'select' 'select_ln70_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_6)   --->   "%and_ln70_6 = and i128 %mul_ln70_6, i128 %select_ln70_6" [d7.cpp:70]   --->   Operation 149 'and' 'and_ln70_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 150 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_6 = add i128 %and_ln70_6, i128 %add114_630_load" [d7.cpp:70]   --->   Operation 150 'add' 'add_ln70_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_7)   --->   "%select_ln70_7 = select i1 %icmp_ln70_6, i128 340282366920938463463374607431768211455, i128 0" [d7.cpp:70]   --->   Operation 151 'select' 'select_ln70_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_7)   --->   "%and_ln70_7 = and i128 %mul_ln70_7, i128 %select_ln70_7" [d7.cpp:70]   --->   Operation 152 'and' 'and_ln70_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 153 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln70_7 = add i128 %and_ln70_7, i128 %add114_731_load" [d7.cpp:70]   --->   Operation 153 'add' 'add_ln70_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 154 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_7, i128 %add114_731" [d7.cpp:56]   --->   Operation 154 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 155 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_6, i128 %add114_630" [d7.cpp:56]   --->   Operation 155 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 156 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_5, i128 %add114_529" [d7.cpp:56]   --->   Operation 156 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 157 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_4, i128 %add114_428" [d7.cpp:56]   --->   Operation 157 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 158 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_3, i128 %add114_327" [d7.cpp:56]   --->   Operation 158 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 159 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_2, i128 %add114_226" [d7.cpp:56]   --->   Operation 159 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 160 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70_1, i128 %add114_125" [d7.cpp:56]   --->   Operation 160 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 161 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln70, i128 %add11424" [d7.cpp:56]   --->   Operation 161 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 162 [1/1] (0.42ns)   --->   "%store_ln56 = store i128 %add_ln63, i128 %add8723" [d7.cpp:56]   --->   Operation 162 'store' 'store_ln56' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 163 [1/1] (0.00ns)   --->   "%br_ln56 = br void %for.body95" [d7.cpp:56]   --->   Operation 163 'br' 'br_ln56' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.136ns
The critical path consists of the following:
	'alloca' operation ('i') [45]  (0.000 ns)
	'load' operation ('i', d7.cpp:70) on local variable 'i' [84]  (0.000 ns)
	'sub' operation ('sub_ln62', d7.cpp:62) [104]  (0.797 ns)
	'and' operation ('and_ln34', d7.cpp:34) [106]  (0.354 ns)
	'sub' operation ('sub_ln67_3', d7.cpp:67) [120]  (0.797 ns)
	'sub' operation ('sub_ln67_4', d7.cpp:67) [129]  (0.797 ns)
	'sub' operation ('sub_ln67_5', d7.cpp:67) [138]  (0.797 ns)
	'sub' operation ('sub_ln67_6', d7.cpp:67) [147]  (0.797 ns)
	'sub' operation ('sub_ln67', d7.cpp:67) [157]  (0.797 ns)

 <State 2>: 6.894ns
The critical path consists of the following:
	'sub' operation ('sub_ln67_1', d7.cpp:67) [166]  (0.797 ns)
	'sub' operation ('sub_ln67_2', d7.cpp:67) [176]  (0.797 ns)
	'mux' operation ('tmp_12', d7.cpp:70) [177]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.766 ns)
'mul' operation ('mul_ln70_7', d7.cpp:70) [180]  (3.764 ns)

 <State 3>: 2.006ns
The critical path consists of the following:
	'load' operation ('add114_731_load', d7.cpp:70) on local variable 'add114_731' [96]  (0.000 ns)
	'add' operation ('add_ln70_7', d7.cpp:70) [183]  (1.579 ns)
	'store' operation ('store_ln56', d7.cpp:56) of variable 'add_ln70_7', d7.cpp:70 on local variable 'add114_731' [186]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
