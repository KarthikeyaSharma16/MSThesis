

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 21:58:22 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_25 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      155|      155|  1.550 us|  1.550 us|  155|  155|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |      153|      153|        26|         16|          1|     9|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 16, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 16, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.21>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arr_8 = alloca i32 1"   --->   Operation 29 'alloca' 'arr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arr_9 = alloca i32 1"   --->   Operation 30 'alloca' 'arr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arr_10 = alloca i32 1"   --->   Operation 31 'alloca' 'arr_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arr_11 = alloca i32 1"   --->   Operation 32 'alloca' 'arr_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arr_12 = alloca i32 1"   --->   Operation 33 'alloca' 'arr_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arr_13 = alloca i32 1"   --->   Operation 34 'alloca' 'arr_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arr_14 = alloca i32 1"   --->   Operation 35 'alloca' 'arr_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arr_15 = alloca i32 1"   --->   Operation 36 'alloca' 'arr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 37 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%conv35_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %conv35"   --->   Operation 38 'read' 'conv35_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2"   --->   Operation 39 'read' 'arg2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1"   --->   Operation 40 'read' 'arg1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%conv35_cast = zext i64 %conv35_read"   --->   Operation 41 'zext' 'conv35_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_1, i32 0, i32 0, void @empty_2, i32 0, i32 9, void @empty_3, void @empty_4, void @empty_2, i32 16, i32 16, i32 16, i32 16, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 42 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_15"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_14"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_13"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_12"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_11"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_10"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_9"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_8"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body29"   --->   Operation 52 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%i_2 = load i5 %i" [d2.cpp:52]   --->   Operation 53 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 54 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_2, i32 4" [d2.cpp:36]   --->   Operation 55 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %tmp, void %for.body29.split, void %for.inc123.preheader.exitStub" [d2.cpp:36]   --->   Operation 56 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i5 %i_2" [d2.cpp:36]   --->   Operation 57 'trunc' 'trunc_ln36' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %trunc_ln36, i3 0" [d2.cpp:36]   --->   Operation 58 'bitconcatenate' 'tmp_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%p_cast3 = zext i7 %tmp_5" [d2.cpp:36]   --->   Operation 59 'zext' 'p_cast3' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (1.08ns)   --->   "%empty = add i64 %p_cast3, i64 %arg1_read" [d2.cpp:36]   --->   Operation 60 'add' 'empty' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %empty, i32 3, i32 63" [d2.cpp:50]   --->   Operation 61 'partselect' 'trunc_ln1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.78ns)   --->   "%add_ln36 = add i5 %i_2, i5 31" [d2.cpp:36]   --->   Operation 62 'add' 'add_ln36' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln36 = store i5 %add_ln36, i5 %i" [d2.cpp:36]   --->   Operation 63 'store' 'store_ln36' <Predicate = (!tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 64 [1/1] (0.79ns)   --->   "%sub_ln53 = sub i4 7, i4 %trunc_ln36" [d2.cpp:53]   --->   Operation 64 'sub' 'sub_ln53' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln50_1 = sext i61 %trunc_ln1" [d2.cpp:50]   --->   Operation 65 'sext' 'sext_ln50_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln50_1" [d2.cpp:50]   --->   Operation 66 'getelementptr' 'mem_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 67 [8/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 67 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %sub_ln53, i3 0" [d2.cpp:52]   --->   Operation 68 'bitconcatenate' 'shl_ln' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln52_2 = sext i7 %shl_ln" [d2.cpp:52]   --->   Operation 69 'sext' 'sext_ln52_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (1.08ns)   --->   "%add_ln52 = add i64 %sext_ln52_2, i64 %arg2_read" [d2.cpp:52]   --->   Operation 70 'add' 'add_ln52' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52, i32 3, i32 63" [d2.cpp:52]   --->   Operation 71 'partselect' 'trunc_ln2' <Predicate = (!tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 72 [7/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 72 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_2, i32 3, i32 4" [d2.cpp:50]   --->   Operation 73 'partselect' 'tmp_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.54ns)   --->   "%icmp_ln50 = icmp_eq  i2 %tmp_1, i2 1" [d2.cpp:50]   --->   Operation 74 'icmp' 'icmp_ln50' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%sext_ln52_5 = sext i61 %trunc_ln2" [d2.cpp:52]   --->   Operation 75 'sext' 'sext_ln52_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln52_5" [d2.cpp:52]   --->   Operation 76 'getelementptr' 'mem_addr_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 77 [8/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 77 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%select_ln50 = select i1 %icmp_ln50, i64 56, i64 64" [d2.cpp:50]   --->   Operation 78 'select' 'select_ln50' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50 = add i64 %select_ln50, i64 %arg2_read" [d2.cpp:50]   --->   Operation 79 'add' 'add_ln50' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln50_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50, i32 3, i32 63" [d2.cpp:50]   --->   Operation 80 'partselect' 'trunc_ln50_1' <Predicate = (!tmp)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 81 [6/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 81 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 82 [7/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 82 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_2, i32 3, i32 4" [d2.cpp:52]   --->   Operation 83 'partselect' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.54ns)   --->   "%icmp_ln52 = icmp_ne  i2 %tmp_2, i2 1" [d2.cpp:52]   --->   Operation 84 'icmp' 'icmp_ln52' <Predicate = (!tmp)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %icmp_ln52" [d2.cpp:53]   --->   Operation 85 'zext' 'zext_ln53' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.79ns)   --->   "%k_s = sub i4 %sub_ln53, i4 %zext_ln53" [d2.cpp:53]   --->   Operation 86 'sub' 'k_s' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%sext_ln50_2 = sext i61 %trunc_ln50_1" [d2.cpp:50]   --->   Operation 87 'sext' 'sext_ln50_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln50_2" [d2.cpp:50]   --->   Operation 88 'getelementptr' 'mem_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 89 [8/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 89 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%shl_ln52_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_s, i3 0" [d2.cpp:52]   --->   Operation 90 'bitconcatenate' 'shl_ln52_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%sext_ln52 = sext i7 %shl_ln52_1" [d2.cpp:52]   --->   Operation 91 'sext' 'sext_ln52' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (1.08ns)   --->   "%add_ln52_3 = add i64 %sext_ln52, i64 %arg2_read" [d2.cpp:52]   --->   Operation 92 'add' 'add_ln52_3' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln52_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_3, i32 3, i32 63" [d2.cpp:52]   --->   Operation 93 'partselect' 'trunc_ln52_1' <Predicate = (!tmp)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 94 [5/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 94 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node k_1)   --->   "%k = select i1 %icmp_ln50, i4 7, i4 8" [d2.cpp:51]   --->   Operation 95 'select' 'k' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 96 [6/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 96 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 97 [7/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 97 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 98 [1/1] (0.78ns)   --->   "%icmp_ln50_1 = icmp_sgt  i5 %i_2, i5 6" [d2.cpp:50]   --->   Operation 98 'icmp' 'icmp_ln50_1' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node k_1)   --->   "%zext_ln51 = zext i1 %icmp_ln50_1" [d2.cpp:51]   --->   Operation 99 'zext' 'zext_ln51' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_1 = sub i4 %k, i4 %zext_ln51" [d2.cpp:51]   --->   Operation 100 'sub' 'k_1' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln52_8 = sext i61 %trunc_ln52_1" [d2.cpp:52]   --->   Operation 101 'sext' 'sext_ln52_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%mem_addr_3 = getelementptr i64 %mem, i64 %sext_ln52_8" [d2.cpp:52]   --->   Operation 102 'getelementptr' 'mem_addr_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 103 [8/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 103 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%shl_ln50_7 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_1, i3 0" [d2.cpp:50]   --->   Operation 104 'bitconcatenate' 'shl_ln50_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i7 %shl_ln50_7" [d2.cpp:50]   --->   Operation 105 'zext' 'zext_ln50_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (1.08ns)   --->   "%add_ln50_1 = add i64 %zext_ln50_2, i64 %arg2_read" [d2.cpp:50]   --->   Operation 106 'add' 'add_ln50_1' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%trunc_ln50_2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_1, i32 3, i32 63" [d2.cpp:50]   --->   Operation 107 'partselect' 'trunc_ln50_2' <Predicate = (!tmp)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 108 [4/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 108 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 109 [5/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 109 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 110 [6/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 110 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 111 [7/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 111 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 112 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_slt  i5 %i_2, i5 7" [d2.cpp:52]   --->   Operation 112 'icmp' 'icmp_ln52_1' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i1 %icmp_ln52_1" [d2.cpp:53]   --->   Operation 113 'zext' 'zext_ln53_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (0.79ns)   --->   "%k_1_29 = sub i4 %k_s, i4 %zext_ln53_1" [d2.cpp:53]   --->   Operation 114 'sub' 'k_1_29' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln50 = sext i61 %trunc_ln50_2" [d2.cpp:50]   --->   Operation 115 'sext' 'sext_ln50' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "%mem_addr_4 = getelementptr i64 %mem, i64 %sext_ln50" [d2.cpp:50]   --->   Operation 116 'getelementptr' 'mem_addr_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 117 [8/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 117 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "%shl_ln52_2 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_1_29, i3 0" [d2.cpp:52]   --->   Operation 118 'bitconcatenate' 'shl_ln52_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln52_11 = sext i7 %shl_ln52_2" [d2.cpp:52]   --->   Operation 119 'sext' 'sext_ln52_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (1.08ns)   --->   "%add_ln52_6 = add i64 %sext_ln52_11, i64 %arg2_read" [d2.cpp:52]   --->   Operation 120 'add' 'add_ln52_6' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln52_2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_6, i32 3, i32 63" [d2.cpp:52]   --->   Operation 121 'partselect' 'trunc_ln52_2' <Predicate = (!tmp)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 122 [3/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 122 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 123 [4/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 123 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 124 [5/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 124 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 125 [6/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 125 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 126 [7/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 126 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 127 [1/1] (0.78ns)   --->   "%icmp_ln50_2 = icmp_sgt  i5 %i_2, i5 5" [d2.cpp:50]   --->   Operation 127 'icmp' 'icmp_ln50_2' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i1 %icmp_ln50_2" [d2.cpp:51]   --->   Operation 128 'zext' 'zext_ln51_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 129 [1/1] (0.79ns)   --->   "%k_2 = sub i4 %k_1, i4 %zext_ln51_1" [d2.cpp:51]   --->   Operation 129 'sub' 'k_2' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 130 [1/1] (0.00ns)   --->   "%sext_ln52_14 = sext i61 %trunc_ln52_2" [d2.cpp:52]   --->   Operation 130 'sext' 'sext_ln52_14' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 131 [1/1] (0.00ns)   --->   "%mem_addr_5 = getelementptr i64 %mem, i64 %sext_ln52_14" [d2.cpp:52]   --->   Operation 131 'getelementptr' 'mem_addr_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 132 [8/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 132 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 133 [1/1] (0.00ns)   --->   "%shl_ln50_8 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_2, i3 0" [d2.cpp:50]   --->   Operation 133 'bitconcatenate' 'shl_ln50_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i7 %shl_ln50_8" [d2.cpp:50]   --->   Operation 134 'zext' 'zext_ln50_9' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 135 [1/1] (1.08ns)   --->   "%add_ln50_2 = add i64 %zext_ln50_9, i64 %arg2_read" [d2.cpp:50]   --->   Operation 135 'add' 'add_ln50_2' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 136 [1/1] (0.00ns)   --->   "%trunc_ln50_3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_2, i32 3, i32 63" [d2.cpp:50]   --->   Operation 136 'partselect' 'trunc_ln50_3' <Predicate = (!tmp)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 137 [2/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 137 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 138 [3/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 138 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 139 [4/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 139 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 140 [5/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 140 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 141 [6/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 141 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 142 [7/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 142 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 143 [1/1] (0.78ns)   --->   "%icmp_ln52_2 = icmp_slt  i5 %i_2, i5 6" [d2.cpp:52]   --->   Operation 143 'icmp' 'icmp_ln52_2' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i1 %icmp_ln52_2" [d2.cpp:53]   --->   Operation 144 'zext' 'zext_ln53_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (0.79ns)   --->   "%k_2_30 = sub i4 %k_1_29, i4 %zext_ln53_2" [d2.cpp:53]   --->   Operation 145 'sub' 'k_2_30' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 146 [1/1] (0.00ns)   --->   "%sext_ln50_3 = sext i61 %trunc_ln50_3" [d2.cpp:50]   --->   Operation 146 'sext' 'sext_ln50_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_8 : Operation 147 [1/1] (0.00ns)   --->   "%mem_addr_6 = getelementptr i64 %mem, i64 %sext_ln50_3" [d2.cpp:50]   --->   Operation 147 'getelementptr' 'mem_addr_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_8 : Operation 148 [8/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 148 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 149 [1/1] (0.00ns)   --->   "%shl_ln52_3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_2_30, i3 0" [d2.cpp:52]   --->   Operation 149 'bitconcatenate' 'shl_ln52_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "%sext_ln52_17 = sext i7 %shl_ln52_3" [d2.cpp:52]   --->   Operation 150 'sext' 'sext_ln52_17' <Predicate = (!tmp)> <Delay = 0.00>
ST_8 : Operation 151 [1/1] (1.08ns)   --->   "%add_ln52_9 = add i64 %sext_ln52_17, i64 %arg2_read" [d2.cpp:52]   --->   Operation 151 'add' 'add_ln52_9' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln52_3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_9, i32 3, i32 63" [d2.cpp:52]   --->   Operation 152 'partselect' 'trunc_ln52_3' <Predicate = (!tmp)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 153 [1/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 153 'readreq' 'mem_load_1_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 154 [2/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 154 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 155 [3/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 155 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 156 [4/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 156 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 157 [5/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 157 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 158 [6/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 158 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 159 [7/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 159 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 160 [1/1] (0.78ns)   --->   "%icmp_ln50_3 = icmp_sgt  i5 %i_2, i5 4" [d2.cpp:50]   --->   Operation 160 'icmp' 'icmp_ln50_3' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i1 %icmp_ln50_3" [d2.cpp:51]   --->   Operation 161 'zext' 'zext_ln51_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_9 : Operation 162 [1/1] (0.79ns)   --->   "%k_3 = sub i4 %k_2, i4 %zext_ln51_2" [d2.cpp:51]   --->   Operation 162 'sub' 'k_3' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 163 [1/1] (0.00ns)   --->   "%sext_ln52_20 = sext i61 %trunc_ln52_3" [d2.cpp:52]   --->   Operation 163 'sext' 'sext_ln52_20' <Predicate = (!tmp)> <Delay = 0.00>
ST_9 : Operation 164 [1/1] (0.00ns)   --->   "%mem_addr_7 = getelementptr i64 %mem, i64 %sext_ln52_20" [d2.cpp:52]   --->   Operation 164 'getelementptr' 'mem_addr_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_9 : Operation 165 [8/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 165 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 166 [1/1] (0.00ns)   --->   "%shl_ln50_9 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_3, i3 0" [d2.cpp:50]   --->   Operation 166 'bitconcatenate' 'shl_ln50_9' <Predicate = (!tmp)> <Delay = 0.00>
ST_9 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln50_10 = zext i7 %shl_ln50_9" [d2.cpp:50]   --->   Operation 167 'zext' 'zext_ln50_10' <Predicate = (!tmp)> <Delay = 0.00>
ST_9 : Operation 168 [1/1] (1.08ns)   --->   "%add_ln50_3 = add i64 %zext_ln50_10, i64 %arg2_read" [d2.cpp:50]   --->   Operation 168 'add' 'add_ln50_3' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 169 [1/1] (0.00ns)   --->   "%trunc_ln50_4 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_3, i32 3, i32 63" [d2.cpp:50]   --->   Operation 169 'partselect' 'trunc_ln50_4' <Predicate = (!tmp)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 170 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr" [d2.cpp:50]   --->   Operation 170 'read' 'mem_addr_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 171 [1/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_1, i32 1" [d2.cpp:52]   --->   Operation 171 'readreq' 'mem_load_2_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 172 [2/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 172 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 173 [3/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 173 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 174 [4/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 174 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 175 [5/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 175 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 176 [6/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 176 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 177 [7/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 177 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 178 [1/1] (0.78ns)   --->   "%icmp_ln52_3 = icmp_slt  i5 %i_2, i5 5" [d2.cpp:52]   --->   Operation 178 'icmp' 'icmp_ln52_3' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i1 %icmp_ln52_3" [d2.cpp:53]   --->   Operation 179 'zext' 'zext_ln53_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.79ns)   --->   "%k_3_31 = sub i4 %k_2_30, i4 %zext_ln53_3" [d2.cpp:53]   --->   Operation 180 'sub' 'k_3_31' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "%sext_ln50_4 = sext i61 %trunc_ln50_4" [d2.cpp:50]   --->   Operation 181 'sext' 'sext_ln50_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%mem_addr_8 = getelementptr i64 %mem, i64 %sext_ln50_4" [d2.cpp:50]   --->   Operation 182 'getelementptr' 'mem_addr_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 183 [8/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 183 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "%shl_ln52_4 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_3_31, i3 0" [d2.cpp:52]   --->   Operation 184 'bitconcatenate' 'shl_ln52_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "%sext_ln52_23 = sext i7 %shl_ln52_4" [d2.cpp:52]   --->   Operation 185 'sext' 'sext_ln52_23' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (1.08ns)   --->   "%add_ln52_12 = add i64 %sext_ln52_23, i64 %arg2_read" [d2.cpp:52]   --->   Operation 186 'add' 'add_ln52_12' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 187 [1/1] (0.00ns)   --->   "%trunc_ln52_4 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_12, i32 3, i32 63" [d2.cpp:52]   --->   Operation 187 'partselect' 'trunc_ln52_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_10 : Operation 456 [1/1] (0.00ns)   --->   "%arr_8_load = load i128 %arr_8"   --->   Operation 456 'load' 'arr_8_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 457 [1/1] (0.00ns)   --->   "%arr_9_load = load i128 %arr_9"   --->   Operation 457 'load' 'arr_9_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 458 [1/1] (0.00ns)   --->   "%arr_10_load = load i128 %arr_10"   --->   Operation 458 'load' 'arr_10_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 459 [1/1] (0.00ns)   --->   "%arr_11_load = load i128 %arr_11"   --->   Operation 459 'load' 'arr_11_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 460 [1/1] (0.00ns)   --->   "%arr_12_load = load i128 %arr_12"   --->   Operation 460 'load' 'arr_12_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 461 [1/1] (0.00ns)   --->   "%arr_13_load = load i128 %arr_13"   --->   Operation 461 'load' 'arr_13_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 462 [1/1] (0.00ns)   --->   "%arr_14_load = load i128 %arr_14"   --->   Operation 462 'load' 'arr_14_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 463 [1/1] (0.00ns)   --->   "%arr_15_load = load i128 %arr_15"   --->   Operation 463 'load' 'arr_15_load' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 464 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_737_out, i128 %arr_15_load"   --->   Operation 464 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 465 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_636_out, i128 %arr_14_load"   --->   Operation 465 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 466 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_535_out, i128 %arr_13_load"   --->   Operation 466 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 467 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_434_out, i128 %arr_12_load"   --->   Operation 467 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 468 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_333_out, i128 %arr_11_load"   --->   Operation 468 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 469 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_232_out, i128 %arr_10_load"   --->   Operation 469 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 470 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_131_out, i128 %arr_9_load"   --->   Operation 470 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 471 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add4730_out, i128 %arr_8_load"   --->   Operation 471 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_10 : Operation 472 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 472 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i64 %mem_addr_read" [d2.cpp:50]   --->   Operation 188 'zext' 'zext_ln50' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 189 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_1" [d2.cpp:52]   --->   Operation 189 'read' 'mem_addr_1_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : [1/1] (0.76ns)   --->   Input mux for Operation 190 '%mul_ln52 = mul i128 %zext_ln50, i128 %conv35_cast'
ST_11 : Operation 190 [1/1] (3.76ns)   --->   "%mul_ln52 = mul i128 %zext_ln50, i128 %conv35_cast" [d2.cpp:52]   --->   Operation 190 'mul' 'mul_ln52' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node and_ln52)   --->   "%select_ln52 = select i1 %icmp_ln50, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 191 'select' 'select_ln52' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 192 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52 = and i128 %mul_ln52, i128 %select_ln52" [d2.cpp:52]   --->   Operation 192 'and' 'and_ln52' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 193 [1/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_2, i32 1" [d2.cpp:50]   --->   Operation 193 'readreq' 'mem_load_3_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 194 [2/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 194 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 195 [3/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 195 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 196 [4/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 196 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 197 [5/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 197 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 198 [6/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 198 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 199 [7/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 199 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_2, i32 2, i32 4" [d2.cpp:50]   --->   Operation 200 'partselect' 'tmp_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 201 [1/1] (0.67ns)   --->   "%icmp_ln50_4 = icmp_sgt  i3 %tmp_3, i3 0" [d2.cpp:50]   --->   Operation 201 'icmp' 'icmp_ln50_4' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln51_3 = zext i1 %icmp_ln50_4" [d2.cpp:51]   --->   Operation 202 'zext' 'zext_ln51_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 203 [1/1] (0.79ns)   --->   "%k_4 = sub i4 %k_3, i4 %zext_ln51_3" [d2.cpp:51]   --->   Operation 203 'sub' 'k_4' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 204 [1/1] (0.00ns)   --->   "%sext_ln52_24 = sext i61 %trunc_ln52_4" [d2.cpp:52]   --->   Operation 204 'sext' 'sext_ln52_24' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "%mem_addr_9 = getelementptr i64 %mem, i64 %sext_ln52_24" [d2.cpp:52]   --->   Operation 205 'getelementptr' 'mem_addr_9' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 206 [8/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 206 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%shl_ln50_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_4, i3 0" [d2.cpp:50]   --->   Operation 207 'bitconcatenate' 'shl_ln50_s' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln50_11 = zext i7 %shl_ln50_s" [d2.cpp:50]   --->   Operation 208 'zext' 'zext_ln50_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (1.08ns)   --->   "%add_ln50_4 = add i64 %zext_ln50_11, i64 %arg2_read" [d2.cpp:50]   --->   Operation 209 'add' 'add_ln50_4' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 210 [1/1] (0.00ns)   --->   "%trunc_ln50_5 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_4, i32 3, i32 63" [d2.cpp:50]   --->   Operation 210 'partselect' 'trunc_ln50_5' <Predicate = (!tmp)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 211 [1/1] (0.00ns)   --->   "%arr_8_load_1 = load i128 %arr_8" [d2.cpp:52]   --->   Operation 211 'load' 'arr_8_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i64 %mem_addr_1_read" [d2.cpp:52]   --->   Operation 212 'zext' 'zext_ln52' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : [1/1] (0.76ns)   --->   Input mux for Operation 213 '%mul_ln52_1 = mul i128 %zext_ln52, i128 %zext_ln50'
ST_12 : Operation 213 [1/1] (3.76ns)   --->   "%mul_ln52_1 = mul i128 %zext_ln52, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 213 'mul' 'mul_ln52_1' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_1)   --->   "%select_ln52_1 = select i1 %icmp_ln52, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 214 'select' 'select_ln52_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 215 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_1 = and i128 %mul_ln52_1, i128 %select_ln52_1" [d2.cpp:52]   --->   Operation 215 'and' 'and_ln52_1' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 216 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_1 = add i128 %and_ln52_1, i128 %and_ln52" [d2.cpp:52]   --->   Operation 216 'add' 'add_ln52_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 217 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr = add i128 %arr_8_load_1, i128 %add_ln52_1" [d2.cpp:52]   --->   Operation 217 'add' 'arr' <Predicate = (!tmp)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 218 [1/1] (7.30ns)   --->   "%mem_addr_2_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_2" [d2.cpp:50]   --->   Operation 218 'read' 'mem_addr_2_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 219 [1/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:52]   --->   Operation 219 'readreq' 'mem_load_4_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 220 [2/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 220 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 221 [3/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 221 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 222 [4/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 222 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 223 [5/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 223 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 224 [6/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 224 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 225 [7/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 225 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 226 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_2, i32 2, i32 4" [d2.cpp:52]   --->   Operation 226 'partselect' 'tmp_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 227 [1/1] (0.67ns)   --->   "%icmp_ln52_4 = icmp_slt  i3 %tmp_4, i3 1" [d2.cpp:52]   --->   Operation 227 'icmp' 'icmp_ln52_4' <Predicate = (!tmp)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 228 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i1 %icmp_ln52_4" [d2.cpp:53]   --->   Operation 228 'zext' 'zext_ln53_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 229 [1/1] (0.79ns)   --->   "%k_4_32 = sub i4 %k_3_31, i4 %zext_ln53_4" [d2.cpp:53]   --->   Operation 229 'sub' 'k_4_32' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 230 [1/1] (0.00ns)   --->   "%sext_ln50_5 = sext i61 %trunc_ln50_5" [d2.cpp:50]   --->   Operation 230 'sext' 'sext_ln50_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 231 [1/1] (0.00ns)   --->   "%mem_addr_10 = getelementptr i64 %mem, i64 %sext_ln50_5" [d2.cpp:50]   --->   Operation 231 'getelementptr' 'mem_addr_10' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 232 [8/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 232 'readreq' 'mem_load_11_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 233 [1/1] (0.00ns)   --->   "%shl_ln52_5 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_4_32, i3 0" [d2.cpp:52]   --->   Operation 233 'bitconcatenate' 'shl_ln52_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 234 [1/1] (0.00ns)   --->   "%sext_ln52_25 = sext i7 %shl_ln52_5" [d2.cpp:52]   --->   Operation 234 'sext' 'sext_ln52_25' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 235 [1/1] (1.08ns)   --->   "%add_ln52_15 = add i64 %sext_ln52_25, i64 %arg2_read" [d2.cpp:52]   --->   Operation 235 'add' 'add_ln52_15' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln52_5 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_15, i32 3, i32 63" [d2.cpp:52]   --->   Operation 236 'partselect' 'trunc_ln52_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 237 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr, i128 %arr_8" [d2.cpp:36]   --->   Operation 237 'store' 'store_ln36' <Predicate = (!tmp)> <Delay = 0.42>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 238 [1/1] (0.00ns)   --->   "%shl_ln50 = shl i64 %mem_addr_2_read, i64 1" [d2.cpp:50]   --->   Operation 238 'shl' 'shl_ln50' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i64 %shl_ln50" [d2.cpp:50]   --->   Operation 239 'zext' 'zext_ln50_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 240 [1/1] (7.30ns)   --->   "%mem_addr_3_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_3" [d2.cpp:52]   --->   Operation 240 'read' 'mem_addr_3_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : [1/1] (0.76ns)   --->   Input mux for Operation 241 '%mul_ln52_2 = mul i128 %zext_ln50_1, i128 %zext_ln50'
ST_13 : Operation 241 [1/1] (3.76ns)   --->   "%mul_ln52_2 = mul i128 %zext_ln50_1, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 241 'mul' 'mul_ln52_2' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_2)   --->   "%select_ln52_2 = select i1 %icmp_ln50_1, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 242 'select' 'select_ln52_2' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 243 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_2 = and i128 %mul_ln52_2, i128 %select_ln52_2" [d2.cpp:52]   --->   Operation 243 'and' 'and_ln52_2' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 244 [1/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:50]   --->   Operation 244 'readreq' 'mem_load_5_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 245 [2/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 245 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 246 [3/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 246 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 247 [4/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 247 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 248 [5/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 248 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 249 [6/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 249 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 250 [7/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 250 'readreq' 'mem_load_11_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 251 [1/1] (0.78ns)   --->   "%icmp_ln50_5 = icmp_sgt  i5 %i_2, i5 2" [d2.cpp:50]   --->   Operation 251 'icmp' 'icmp_ln50_5' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln51_4 = zext i1 %icmp_ln50_5" [d2.cpp:51]   --->   Operation 252 'zext' 'zext_ln51_4' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 253 [1/1] (0.79ns)   --->   "%k_5 = sub i4 %k_4, i4 %zext_ln51_4" [d2.cpp:51]   --->   Operation 253 'sub' 'k_5' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 254 [1/1] (0.00ns)   --->   "%sext_ln52_26 = sext i61 %trunc_ln52_5" [d2.cpp:52]   --->   Operation 254 'sext' 'sext_ln52_26' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 255 [1/1] (0.00ns)   --->   "%mem_addr_11 = getelementptr i64 %mem, i64 %sext_ln52_26" [d2.cpp:52]   --->   Operation 255 'getelementptr' 'mem_addr_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 256 [8/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 256 'readreq' 'mem_load_12_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 257 [1/1] (0.78ns)   --->   "%icmp_ln52_5 = icmp_slt  i5 %i_2, i5 3" [d2.cpp:52]   --->   Operation 257 'icmp' 'icmp_ln52_5' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 258 [1/1] (0.00ns)   --->   "%shl_ln50_5 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_5, i3 0" [d2.cpp:50]   --->   Operation 258 'bitconcatenate' 'shl_ln50_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln50_12 = zext i7 %shl_ln50_5" [d2.cpp:50]   --->   Operation 259 'zext' 'zext_ln50_12' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 260 [1/1] (1.08ns)   --->   "%add_ln50_5 = add i64 %zext_ln50_12, i64 %arg2_read" [d2.cpp:50]   --->   Operation 260 'add' 'add_ln50_5' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln50_6 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_5, i32 3, i32 63" [d2.cpp:50]   --->   Operation 261 'partselect' 'trunc_ln50_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 262 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i_2, i32 1, i32 4" [d2.cpp:50]   --->   Operation 262 'partselect' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 263 [1/1] (0.79ns)   --->   "%icmp_ln50_6 = icmp_sgt  i4 %tmp_6, i4 0" [d2.cpp:50]   --->   Operation 263 'icmp' 'icmp_ln50_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i_2, i32 1, i32 4" [d2.cpp:52]   --->   Operation 264 'partselect' 'tmp_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_13 : Operation 265 [1/1] (0.79ns)   --->   "%icmp_ln52_6 = icmp_slt  i4 %tmp_7, i4 1" [d2.cpp:52]   --->   Operation 265 'icmp' 'icmp_ln52_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 266 [1/1] (0.78ns)   --->   "%icmp_ln50_7 = icmp_sgt  i5 %i_2, i5 0" [d2.cpp:50]   --->   Operation 266 'icmp' 'icmp_ln50_7' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 267 [1/1] (0.78ns)   --->   "%icmp_ln52_7 = icmp_slt  i5 %i_2, i5 1" [d2.cpp:52]   --->   Operation 267 'icmp' 'icmp_ln52_7' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 268 [1/1] (0.00ns)   --->   "%arr_9_load_1 = load i128 %arr_9" [d2.cpp:52]   --->   Operation 268 'load' 'arr_9_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 269 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i64 %mem_addr_3_read" [d2.cpp:52]   --->   Operation 269 'zext' 'zext_ln52_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : [1/1] (0.76ns)   --->   Input mux for Operation 270 '%mul_ln52_3 = mul i128 %zext_ln52_1, i128 %zext_ln50'
ST_14 : Operation 270 [1/1] (3.76ns)   --->   "%mul_ln52_3 = mul i128 %zext_ln52_1, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 270 'mul' 'mul_ln52_3' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_3)   --->   "%select_ln52_3 = select i1 %icmp_ln52_1, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 271 'select' 'select_ln52_3' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 272 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_3 = and i128 %mul_ln52_3, i128 %select_ln52_3" [d2.cpp:52]   --->   Operation 272 'and' 'and_ln52_3' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_4 = add i128 %and_ln52_3, i128 %and_ln52_2" [d2.cpp:52]   --->   Operation 273 'add' 'add_ln52_4' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 274 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_16 = add i128 %arr_9_load_1, i128 %add_ln52_4" [d2.cpp:52]   --->   Operation 274 'add' 'arr_16' <Predicate = (!tmp)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 275 [1/1] (7.30ns)   --->   "%mem_addr_4_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_4" [d2.cpp:50]   --->   Operation 275 'read' 'mem_addr_4_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 276 [1/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:52]   --->   Operation 276 'readreq' 'mem_load_6_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 277 [2/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 277 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 278 [3/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 278 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 279 [4/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 279 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 280 [5/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 280 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 281 [6/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 281 'readreq' 'mem_load_11_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 282 [7/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 282 'readreq' 'mem_load_12_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 283 [1/1] (0.00ns)   --->   "%zext_ln53_5 = zext i1 %icmp_ln52_5" [d2.cpp:53]   --->   Operation 283 'zext' 'zext_ln53_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 284 [1/1] (0.79ns)   --->   "%k_5_33 = sub i4 %k_4_32, i4 %zext_ln53_5" [d2.cpp:53]   --->   Operation 284 'sub' 'k_5_33' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 285 [1/1] (0.00ns)   --->   "%sext_ln50_6 = sext i61 %trunc_ln50_6" [d2.cpp:50]   --->   Operation 285 'sext' 'sext_ln50_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 286 [1/1] (0.00ns)   --->   "%mem_addr_12 = getelementptr i64 %mem, i64 %sext_ln50_6" [d2.cpp:50]   --->   Operation 286 'getelementptr' 'mem_addr_12' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 287 [8/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 287 'readreq' 'mem_load_13_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 288 [1/1] (0.00ns)   --->   "%shl_ln52_6 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_5_33, i3 0" [d2.cpp:52]   --->   Operation 288 'bitconcatenate' 'shl_ln52_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 289 [1/1] (0.00ns)   --->   "%sext_ln52_27 = sext i7 %shl_ln52_6" [d2.cpp:52]   --->   Operation 289 'sext' 'sext_ln52_27' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 290 [1/1] (1.08ns)   --->   "%add_ln52_18 = add i64 %sext_ln52_27, i64 %arg2_read" [d2.cpp:52]   --->   Operation 290 'add' 'add_ln52_18' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln52_6 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_18, i32 3, i32 63" [d2.cpp:52]   --->   Operation 291 'partselect' 'trunc_ln52_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_14 : Operation 292 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_16, i128 %arr_9" [d2.cpp:36]   --->   Operation 292 'store' 'store_ln36' <Predicate = (!tmp)> <Delay = 0.42>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 293 [1/1] (0.00ns)   --->   "%shl_ln50_1 = shl i64 %mem_addr_4_read, i64 1" [d2.cpp:50]   --->   Operation 293 'shl' 'shl_ln50_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 294 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i64 %shl_ln50_1" [d2.cpp:50]   --->   Operation 294 'zext' 'zext_ln50_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 295 [1/1] (7.30ns)   --->   "%mem_addr_5_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_5" [d2.cpp:52]   --->   Operation 295 'read' 'mem_addr_5_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : [1/1] (0.76ns)   --->   Input mux for Operation 296 '%mul_ln52_4 = mul i128 %zext_ln50_3, i128 %zext_ln50'
ST_15 : Operation 296 [1/1] (3.76ns)   --->   "%mul_ln52_4 = mul i128 %zext_ln50_3, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 296 'mul' 'mul_ln52_4' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_4)   --->   "%select_ln52_4 = select i1 %icmp_ln50_2, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 297 'select' 'select_ln52_4' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 298 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_4 = and i128 %mul_ln52_4, i128 %select_ln52_4" [d2.cpp:52]   --->   Operation 298 'and' 'and_ln52_4' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 299 [1/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:50]   --->   Operation 299 'readreq' 'mem_load_7_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 300 [2/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 300 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 301 [3/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 301 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 302 [4/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 302 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 303 [5/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 303 'readreq' 'mem_load_11_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 304 [6/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 304 'readreq' 'mem_load_12_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 305 [7/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 305 'readreq' 'mem_load_13_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln51_5 = zext i1 %icmp_ln50_6" [d2.cpp:51]   --->   Operation 306 'zext' 'zext_ln51_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 307 [1/1] (0.79ns)   --->   "%k_6 = sub i4 %k_5, i4 %zext_ln51_5" [d2.cpp:51]   --->   Operation 307 'sub' 'k_6' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 308 [1/1] (0.00ns)   --->   "%sext_ln52_28 = sext i61 %trunc_ln52_6" [d2.cpp:52]   --->   Operation 308 'sext' 'sext_ln52_28' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 309 [1/1] (0.00ns)   --->   "%mem_addr_13 = getelementptr i64 %mem, i64 %sext_ln52_28" [d2.cpp:52]   --->   Operation 309 'getelementptr' 'mem_addr_13' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 310 [8/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 310 'readreq' 'mem_load_14_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 311 [1/1] (0.00ns)   --->   "%shl_ln50_10 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_6, i3 0" [d2.cpp:50]   --->   Operation 311 'bitconcatenate' 'shl_ln50_10' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln50_13 = zext i7 %shl_ln50_10" [d2.cpp:50]   --->   Operation 312 'zext' 'zext_ln50_13' <Predicate = (!tmp)> <Delay = 0.00>
ST_15 : Operation 313 [1/1] (1.08ns)   --->   "%add_ln50_6 = add i64 %zext_ln50_13, i64 %arg2_read" [d2.cpp:50]   --->   Operation 313 'add' 'add_ln50_6' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 314 [1/1] (0.00ns)   --->   "%trunc_ln50_7 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_6, i32 3, i32 63" [d2.cpp:50]   --->   Operation 314 'partselect' 'trunc_ln50_7' <Predicate = (!tmp)> <Delay = 0.00>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 315 [1/1] (0.00ns)   --->   "%arr_10_load_1 = load i128 %arr_10" [d2.cpp:52]   --->   Operation 315 'load' 'arr_10_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 316 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i64 %mem_addr_5_read" [d2.cpp:52]   --->   Operation 316 'zext' 'zext_ln52_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : [1/1] (0.76ns)   --->   Input mux for Operation 317 '%mul_ln52_5 = mul i128 %zext_ln52_2, i128 %zext_ln50'
ST_16 : Operation 317 [1/1] (3.76ns)   --->   "%mul_ln52_5 = mul i128 %zext_ln52_2, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 317 'mul' 'mul_ln52_5' <Predicate = (!tmp)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_5)   --->   "%select_ln52_5 = select i1 %icmp_ln52_2, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 318 'select' 'select_ln52_5' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 319 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_5 = and i128 %mul_ln52_5, i128 %select_ln52_5" [d2.cpp:52]   --->   Operation 319 'and' 'and_ln52_5' <Predicate = (!tmp)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 320 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_7 = add i128 %and_ln52_5, i128 %and_ln52_4" [d2.cpp:52]   --->   Operation 320 'add' 'add_ln52_7' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 321 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_17 = add i128 %arr_10_load_1, i128 %add_ln52_7" [d2.cpp:52]   --->   Operation 321 'add' 'arr_17' <Predicate = (!tmp)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 322 [1/1] (7.30ns)   --->   "%mem_addr_6_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_6" [d2.cpp:50]   --->   Operation 322 'read' 'mem_addr_6_read' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 323 [1/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:52]   --->   Operation 323 'readreq' 'mem_load_8_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 324 [2/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 324 'readreq' 'mem_load_9_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 325 [3/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 325 'readreq' 'mem_load_10_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 326 [4/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 326 'readreq' 'mem_load_11_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 327 [5/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 327 'readreq' 'mem_load_12_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 328 [6/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 328 'readreq' 'mem_load_13_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 329 [7/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 329 'readreq' 'mem_load_14_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 330 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i1 %icmp_ln52_6" [d2.cpp:53]   --->   Operation 330 'zext' 'zext_ln53_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 331 [1/1] (0.79ns)   --->   "%k_6_34 = sub i4 %k_5_33, i4 %zext_ln53_6" [d2.cpp:53]   --->   Operation 331 'sub' 'k_6_34' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 332 [1/1] (0.00ns)   --->   "%sext_ln50_7 = sext i61 %trunc_ln50_7" [d2.cpp:50]   --->   Operation 332 'sext' 'sext_ln50_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 333 [1/1] (0.00ns)   --->   "%mem_addr_14 = getelementptr i64 %mem, i64 %sext_ln50_7" [d2.cpp:50]   --->   Operation 333 'getelementptr' 'mem_addr_14' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 334 [8/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 334 'readreq' 'mem_load_15_req' <Predicate = (!tmp)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 335 [1/1] (0.00ns)   --->   "%shl_ln52_7 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_6_34, i3 0" [d2.cpp:52]   --->   Operation 335 'bitconcatenate' 'shl_ln52_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 336 [1/1] (0.00ns)   --->   "%sext_ln52_29 = sext i7 %shl_ln52_7" [d2.cpp:52]   --->   Operation 336 'sext' 'sext_ln52_29' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 337 [1/1] (1.08ns)   --->   "%add_ln52_21 = add i64 %sext_ln52_29, i64 %arg2_read" [d2.cpp:52]   --->   Operation 337 'add' 'add_ln52_21' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln52_7 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_21, i32 3, i32 63" [d2.cpp:52]   --->   Operation 338 'partselect' 'trunc_ln52_7' <Predicate = (!tmp)> <Delay = 0.00>
ST_16 : Operation 339 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_17, i128 %arr_10" [d2.cpp:36]   --->   Operation 339 'store' 'store_ln36' <Predicate = (!tmp)> <Delay = 0.42>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 340 [1/1] (0.00ns)   --->   "%shl_ln50_2 = shl i64 %mem_addr_6_read, i64 1" [d2.cpp:50]   --->   Operation 340 'shl' 'shl_ln50_2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 341 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i64 %shl_ln50_2" [d2.cpp:50]   --->   Operation 341 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 342 [1/1] (7.30ns)   --->   "%mem_addr_7_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_7" [d2.cpp:52]   --->   Operation 342 'read' 'mem_addr_7_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : [1/1] (0.76ns)   --->   Input mux for Operation 343 '%mul_ln52_6 = mul i128 %zext_ln50_4, i128 %zext_ln50'
ST_17 : Operation 343 [1/1] (3.76ns)   --->   "%mul_ln52_6 = mul i128 %zext_ln50_4, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 343 'mul' 'mul_ln52_6' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_6)   --->   "%select_ln52_6 = select i1 %icmp_ln50_3, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 344 'select' 'select_ln52_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 345 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_6 = and i128 %mul_ln52_6, i128 %select_ln52_6" [d2.cpp:52]   --->   Operation 345 'and' 'and_ln52_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 346 [1/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:50]   --->   Operation 346 'readreq' 'mem_load_9_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 347 [2/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 347 'readreq' 'mem_load_10_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 348 [3/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 348 'readreq' 'mem_load_11_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 349 [4/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 349 'readreq' 'mem_load_12_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 350 [5/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 350 'readreq' 'mem_load_13_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 351 [6/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 351 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 352 [7/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 352 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 353 [1/1] (0.00ns)   --->   "%sext_ln52_30 = sext i61 %trunc_ln52_7" [d2.cpp:52]   --->   Operation 353 'sext' 'sext_ln52_30' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 354 [1/1] (0.00ns)   --->   "%mem_addr_15 = getelementptr i64 %mem, i64 %sext_ln52_30" [d2.cpp:52]   --->   Operation 354 'getelementptr' 'mem_addr_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 355 [8/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 355 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 356 [1/1] (0.00ns)   --->   "%arr_11_load_1 = load i128 %arr_11" [d2.cpp:52]   --->   Operation 356 'load' 'arr_11_load_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 357 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i64 %mem_addr_7_read" [d2.cpp:52]   --->   Operation 357 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_18 : [1/1] (0.76ns)   --->   Input mux for Operation 358 '%mul_ln52_7 = mul i128 %zext_ln52_3, i128 %zext_ln50'
ST_18 : Operation 358 [1/1] (3.76ns)   --->   "%mul_ln52_7 = mul i128 %zext_ln52_3, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 358 'mul' 'mul_ln52_7' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_7)   --->   "%select_ln52_7 = select i1 %icmp_ln52_3, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 359 'select' 'select_ln52_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 360 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_7 = and i128 %mul_ln52_7, i128 %select_ln52_7" [d2.cpp:52]   --->   Operation 360 'and' 'and_ln52_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 361 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_10 = add i128 %and_ln52_7, i128 %and_ln52_6" [d2.cpp:52]   --->   Operation 361 'add' 'add_ln52_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 362 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_18 = add i128 %arr_11_load_1, i128 %add_ln52_10" [d2.cpp:52]   --->   Operation 362 'add' 'arr_18' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 363 [1/1] (7.30ns)   --->   "%mem_addr_8_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_8" [d2.cpp:50]   --->   Operation 363 'read' 'mem_addr_8_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 364 [1/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:52]   --->   Operation 364 'readreq' 'mem_load_10_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 365 [2/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 365 'readreq' 'mem_load_11_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 366 [3/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 366 'readreq' 'mem_load_12_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 367 [4/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 367 'readreq' 'mem_load_13_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 368 [5/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 368 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 369 [6/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 369 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 370 [7/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 370 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 371 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_18, i128 %arr_11" [d2.cpp:36]   --->   Operation 371 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 372 [1/1] (0.00ns)   --->   "%shl_ln50_3 = shl i64 %mem_addr_8_read, i64 1" [d2.cpp:50]   --->   Operation 372 'shl' 'shl_ln50_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 373 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i64 %shl_ln50_3" [d2.cpp:50]   --->   Operation 373 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 374 [1/1] (7.30ns)   --->   "%mem_addr_9_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_9" [d2.cpp:52]   --->   Operation 374 'read' 'mem_addr_9_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : [1/1] (0.76ns)   --->   Input mux for Operation 375 '%mul_ln52_8 = mul i128 %zext_ln50_5, i128 %zext_ln50'
ST_19 : Operation 375 [1/1] (3.76ns)   --->   "%mul_ln52_8 = mul i128 %zext_ln50_5, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 375 'mul' 'mul_ln52_8' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_8)   --->   "%select_ln52_8 = select i1 %icmp_ln50_4, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 376 'select' 'select_ln52_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 377 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_8 = and i128 %mul_ln52_8, i128 %select_ln52_8" [d2.cpp:52]   --->   Operation 377 'and' 'and_ln52_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 378 [1/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:50]   --->   Operation 378 'readreq' 'mem_load_11_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 379 [2/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 379 'readreq' 'mem_load_12_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 380 [3/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 380 'readreq' 'mem_load_13_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 381 [4/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 381 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 382 [5/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 382 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 383 [6/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 383 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 384 [1/1] (0.00ns)   --->   "%arr_12_load_1 = load i128 %arr_12" [d2.cpp:52]   --->   Operation 384 'load' 'arr_12_load_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 385 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i64 %mem_addr_9_read" [d2.cpp:52]   --->   Operation 385 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_20 : [1/1] (0.76ns)   --->   Input mux for Operation 386 '%mul_ln52_9 = mul i128 %zext_ln52_4, i128 %zext_ln50'
ST_20 : Operation 386 [1/1] (3.76ns)   --->   "%mul_ln52_9 = mul i128 %zext_ln52_4, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 386 'mul' 'mul_ln52_9' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_9)   --->   "%select_ln52_9 = select i1 %icmp_ln52_4, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 387 'select' 'select_ln52_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 388 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_9 = and i128 %mul_ln52_9, i128 %select_ln52_9" [d2.cpp:52]   --->   Operation 388 'and' 'and_ln52_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 389 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_13 = add i128 %and_ln52_9, i128 %and_ln52_8" [d2.cpp:52]   --->   Operation 389 'add' 'add_ln52_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 390 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_19 = add i128 %arr_12_load_1, i128 %add_ln52_13" [d2.cpp:52]   --->   Operation 390 'add' 'arr_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 391 [1/1] (7.30ns)   --->   "%mem_addr_10_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_10" [d2.cpp:50]   --->   Operation 391 'read' 'mem_addr_10_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 392 [1/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:52]   --->   Operation 392 'readreq' 'mem_load_12_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 393 [2/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 393 'readreq' 'mem_load_13_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 394 [3/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 394 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 395 [4/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 395 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 396 [5/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 396 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 397 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_19, i128 %arr_12" [d2.cpp:36]   --->   Operation 397 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 21 <SV = 20> <Delay = 7.30>
ST_21 : Operation 398 [1/1] (0.00ns)   --->   "%shl_ln50_4 = shl i64 %mem_addr_10_read, i64 1" [d2.cpp:50]   --->   Operation 398 'shl' 'shl_ln50_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 399 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i64 %shl_ln50_4" [d2.cpp:50]   --->   Operation 399 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 400 [1/1] (7.30ns)   --->   "%mem_addr_11_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_11" [d2.cpp:52]   --->   Operation 400 'read' 'mem_addr_11_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : [1/1] (0.76ns)   --->   Input mux for Operation 401 '%mul_ln52_10 = mul i128 %zext_ln50_6, i128 %zext_ln50'
ST_21 : Operation 401 [1/1] (3.76ns)   --->   "%mul_ln52_10 = mul i128 %zext_ln50_6, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 401 'mul' 'mul_ln52_10' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_10)   --->   "%select_ln52_10 = select i1 %icmp_ln50_5, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 402 'select' 'select_ln52_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 403 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_10 = and i128 %mul_ln52_10, i128 %select_ln52_10" [d2.cpp:52]   --->   Operation 403 'and' 'and_ln52_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 404 [1/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:50]   --->   Operation 404 'readreq' 'mem_load_13_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 405 [2/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 405 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 406 [3/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 406 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 407 [4/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 407 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 408 [1/1] (0.00ns)   --->   "%arr_13_load_1 = load i128 %arr_13" [d2.cpp:52]   --->   Operation 408 'load' 'arr_13_load_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 409 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i64 %mem_addr_11_read" [d2.cpp:52]   --->   Operation 409 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.76ns)   --->   Input mux for Operation 410 '%mul_ln52_11 = mul i128 %zext_ln52_5, i128 %zext_ln50'
ST_22 : Operation 410 [1/1] (3.76ns)   --->   "%mul_ln52_11 = mul i128 %zext_ln52_5, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 410 'mul' 'mul_ln52_11' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_11)   --->   "%select_ln52_11 = select i1 %icmp_ln52_5, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 411 'select' 'select_ln52_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 412 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_11 = and i128 %mul_ln52_11, i128 %select_ln52_11" [d2.cpp:52]   --->   Operation 412 'and' 'and_ln52_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 413 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_16 = add i128 %and_ln52_11, i128 %and_ln52_10" [d2.cpp:52]   --->   Operation 413 'add' 'add_ln52_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 414 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_20 = add i128 %arr_13_load_1, i128 %add_ln52_16" [d2.cpp:52]   --->   Operation 414 'add' 'arr_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 415 [1/1] (7.30ns)   --->   "%mem_addr_12_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_12" [d2.cpp:50]   --->   Operation 415 'read' 'mem_addr_12_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 416 [1/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:52]   --->   Operation 416 'readreq' 'mem_load_14_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 417 [2/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 417 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 418 [3/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 418 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 419 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_20, i128 %arr_13" [d2.cpp:36]   --->   Operation 419 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 420 [1/1] (0.00ns)   --->   "%shl_ln50_6 = shl i64 %mem_addr_12_read, i64 1" [d2.cpp:50]   --->   Operation 420 'shl' 'shl_ln50_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 421 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i64 %shl_ln50_6" [d2.cpp:50]   --->   Operation 421 'zext' 'zext_ln50_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 422 [1/1] (7.30ns)   --->   "%mem_addr_13_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_13" [d2.cpp:52]   --->   Operation 422 'read' 'mem_addr_13_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : [1/1] (0.76ns)   --->   Input mux for Operation 423 '%mul_ln52_12 = mul i128 %zext_ln50_7, i128 %zext_ln50'
ST_23 : Operation 423 [1/1] (3.76ns)   --->   "%mul_ln52_12 = mul i128 %zext_ln50_7, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 423 'mul' 'mul_ln52_12' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_12)   --->   "%select_ln52_12 = select i1 %icmp_ln50_6, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 424 'select' 'select_ln52_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 425 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_12 = and i128 %mul_ln52_12, i128 %select_ln52_12" [d2.cpp:52]   --->   Operation 425 'and' 'and_ln52_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 426 [1/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 426 'readreq' 'mem_load_15_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 427 [2/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 427 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 428 [1/1] (0.00ns)   --->   "%arr_14_load_1 = load i128 %arr_14" [d2.cpp:52]   --->   Operation 428 'load' 'arr_14_load_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 429 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i64 %mem_addr_13_read" [d2.cpp:52]   --->   Operation 429 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.76ns)   --->   Input mux for Operation 430 '%mul_ln52_13 = mul i128 %zext_ln52_6, i128 %zext_ln50'
ST_24 : Operation 430 [1/1] (3.76ns)   --->   "%mul_ln52_13 = mul i128 %zext_ln52_6, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 430 'mul' 'mul_ln52_13' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_13)   --->   "%select_ln52_13 = select i1 %icmp_ln52_6, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 431 'select' 'select_ln52_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 432 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_13 = and i128 %mul_ln52_13, i128 %select_ln52_13" [d2.cpp:52]   --->   Operation 432 'and' 'and_ln52_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 433 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_19 = add i128 %and_ln52_13, i128 %and_ln52_12" [d2.cpp:52]   --->   Operation 433 'add' 'add_ln52_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 434 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_21 = add i128 %arr_14_load_1, i128 %add_ln52_19" [d2.cpp:52]   --->   Operation 434 'add' 'arr_21' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 435 [1/1] (7.30ns)   --->   "%mem_addr_14_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_14" [d2.cpp:50]   --->   Operation 435 'read' 'mem_addr_14_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 436 [1/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:52]   --->   Operation 436 'readreq' 'mem_load_16_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 437 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_21, i128 %arr_14" [d2.cpp:36]   --->   Operation 437 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 438 [1/1] (0.00ns)   --->   "%shl_ln50_11 = shl i64 %mem_addr_14_read, i64 1" [d2.cpp:50]   --->   Operation 438 'shl' 'shl_ln50_11' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 439 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i64 %shl_ln50_11" [d2.cpp:50]   --->   Operation 439 'zext' 'zext_ln50_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 440 [1/1] (7.30ns)   --->   "%mem_addr_15_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_15" [d2.cpp:52]   --->   Operation 440 'read' 'mem_addr_15_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : [1/1] (0.76ns)   --->   Input mux for Operation 441 '%mul_ln52_14 = mul i128 %zext_ln50_8, i128 %zext_ln50'
ST_25 : Operation 441 [1/1] (3.76ns)   --->   "%mul_ln52_14 = mul i128 %zext_ln50_8, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 441 'mul' 'mul_ln52_14' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_14)   --->   "%select_ln52_14 = select i1 %icmp_ln50_7, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 442 'select' 'select_ln52_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 443 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_14 = and i128 %mul_ln52_14, i128 %select_ln52_14" [d2.cpp:52]   --->   Operation 443 'and' 'and_ln52_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.33>
ST_26 : Operation 444 [1/1] (0.00ns)   --->   "%arr_15_load_1 = load i128 %arr_15" [d2.cpp:52]   --->   Operation 444 'load' 'arr_15_load_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 445 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_2" [d2.cpp:38]   --->   Operation 445 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 446 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [d2.cpp:34]   --->   Operation 446 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 447 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [d2.cpp:36]   --->   Operation 447 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 448 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i64 %mem_addr_15_read" [d2.cpp:52]   --->   Operation 448 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_26 : [1/1] (0.76ns)   --->   Input mux for Operation 449 '%mul_ln52_15 = mul i128 %zext_ln52_7, i128 %zext_ln50'
ST_26 : Operation 449 [1/1] (3.76ns)   --->   "%mul_ln52_15 = mul i128 %zext_ln52_7, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 449 'mul' 'mul_ln52_15' <Predicate = true> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 450 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_15)   --->   "%select_ln52_15 = select i1 %icmp_ln52_7, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 450 'select' 'select_ln52_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 451 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_15 = and i128 %mul_ln52_15, i128 %select_ln52_15" [d2.cpp:52]   --->   Operation 451 'and' 'and_ln52_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 452 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_22 = add i128 %and_ln52_15, i128 %and_ln52_14" [d2.cpp:52]   --->   Operation 452 'add' 'add_ln52_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 453 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_22 = add i128 %arr_15_load_1, i128 %add_ln52_22" [d2.cpp:52]   --->   Operation 453 'add' 'arr_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 454 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_22, i128 %arr_15" [d2.cpp:36]   --->   Operation 454 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_26 : Operation 455 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body29" [d2.cpp:36]   --->   Operation 455 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.216ns
The critical path consists of the following:
	'alloca' operation ('i') [21]  (0.000 ns)
	'load' operation ('i', d2.cpp:52) on local variable 'i' [38]  (0.000 ns)
	'add' operation ('add_ln36', d2.cpp:36) [319]  (0.789 ns)
	'store' operation ('store_ln36', d2.cpp:36) of variable 'add_ln36', d2.cpp:36 on local variable 'i' [320]  (0.427 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d2.cpp:50) [61]  (0.000 ns)
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem_load_1_req', d2.cpp:50) on port 'mem' (d2.cpp:50) [62]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [63]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [75]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_2_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [95]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_3_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [108]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_4_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [128]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_5_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [141]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_6_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [161]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_7_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [174]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_8_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [194]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_9_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [208]  (7.300 ns)

 <State 20>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_10_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [229]  (7.300 ns)

 <State 21>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_11_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [242]  (7.300 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_12_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [262]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_13_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [276]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_14_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [297]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_15_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [308]  (7.300 ns)

 <State 26>: 6.331ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.766 ns)
'mul' operation ('mul_ln52_15', d2.cpp:52) [314]  (3.764 ns)
	'and' operation ('and_ln52_15', d2.cpp:52) [316]  (0.379 ns)
	'add' operation ('add_ln52_22', d2.cpp:52) [317]  (0.000 ns)
	'add' operation ('arr', d2.cpp:52) [318]  (0.995 ns)
	'store' operation ('store_ln36', d2.cpp:36) of variable 'arr', d2.cpp:52 on local variable 'arr' [321]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
