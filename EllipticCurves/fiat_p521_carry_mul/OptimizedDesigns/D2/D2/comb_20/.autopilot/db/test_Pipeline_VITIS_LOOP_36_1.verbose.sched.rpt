

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 21:55:29 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_20 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      138|      138|  1.380 us|  1.380 us|  138|  138|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |      136|      136|        50|         39|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 39, depth = 50


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 50
* Pipeline : 1
  Pipeline-0 : II = 39, D = 50, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.63>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%add47243 = alloca i32 1"   --->   Operation 53 'alloca' 'add47243' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%add47_1172244 = alloca i32 1"   --->   Operation 54 'alloca' 'add47_1172244' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%add47_198245 = alloca i32 1"   --->   Operation 55 'alloca' 'add47_198245' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%add47_198_1246 = alloca i32 1"   --->   Operation 56 'alloca' 'add47_198_1246' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%add47_2134247 = alloca i32 1"   --->   Operation 57 'alloca' 'add47_2134247' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%add47_2134_1248 = alloca i32 1"   --->   Operation 58 'alloca' 'add47_2134_1248' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add47_3249 = alloca i32 1"   --->   Operation 59 'alloca' 'add47_3249' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add47_3_1250 = alloca i32 1"   --->   Operation 60 'alloca' 'add47_3_1250' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 61 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%indvar = alloca i32 1"   --->   Operation 62 'alloca' 'indvar' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%conv35_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %conv35"   --->   Operation 63 'read' 'conv35_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1"   --->   Operation 64 'read' 'arg1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2"   --->   Operation 65 'read' 'arg2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%p_cast_cast_read = read i61 @_ssdm_op_Read.ap_auto.i61, i61 %p_cast_cast"   --->   Operation 66 'read' 'p_cast_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%conv35_cast = zext i64 %conv35_read"   --->   Operation 67 'zext' 'conv35_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%p_cast_cast_cast = sext i61 %p_cast_cast_read"   --->   Operation 68 'sext' 'p_cast_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 69 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln0 = store i2 0, i2 %indvar"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_3_1250"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_3249"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_2134_1248"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_2134247"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_198_1246"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_198245"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47_1172244"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add47243"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body29"   --->   Operation 80 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%indvar_load = load i2 %indvar" [d2.cpp:36]   --->   Operation 81 'load' 'indvar_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.54ns)   --->   "%icmp_ln36 = icmp_eq  i2 %indvar_load, i2 3" [d2.cpp:36]   --->   Operation 82 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.54ns)   --->   "%add_ln36_1 = add i2 %indvar_load, i2 1" [d2.cpp:36]   --->   Operation 83 'add' 'add_ln36_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.body29.split, void %VITIS_LOOP_60_5.exitStub" [d2.cpp:36]   --->   Operation 84 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i2.i5, i2 %indvar_load, i5 0" [d2.cpp:36]   --->   Operation 85 'bitconcatenate' 'p_shl' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %indvar_load, i3 0" [d2.cpp:36]   --->   Operation 86 'bitconcatenate' 'p_shl1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%p_shl21_cast = zext i5 %p_shl1" [d2.cpp:36]   --->   Operation 87 'zext' 'p_shl21_cast' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%empty = sub i7 %p_shl, i7 %p_shl21_cast" [d2.cpp:36]   --->   Operation 88 'sub' 'empty' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 89 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%tmp1_cast = add i7 %empty, i7 120" [d2.cpp:36]   --->   Operation 89 'add' 'tmp1_cast' <Predicate = (!icmp_ln36)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 90 [1/1] (0.77ns)   --->   "%empty_31 = sub i7 %p_shl21_cast, i7 %p_shl" [d2.cpp:36]   --->   Operation 90 'sub' 'empty_31' <Predicate = (!icmp_ln36)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%p_cast44 = sext i7 %empty_31" [d2.cpp:36]   --->   Operation 91 'sext' 'p_cast44' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.77ns)   --->   "%tmp2 = add i8 %p_cast44, i8 48" [d2.cpp:36]   --->   Operation 92 'add' 'tmp2' <Predicate = (!icmp_ln36)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%tmp2_cast = sext i8 %tmp2" [d2.cpp:36]   --->   Operation 93 'sext' 'tmp2_cast' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (1.08ns)   --->   "%empty_32 = add i64 %tmp2_cast, i64 %arg1_read" [d2.cpp:36]   --->   Operation 94 'add' 'empty_32' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %empty_32, i32 3, i32 63" [d2.cpp:50]   --->   Operation 95 'partselect' 'trunc_ln' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.42ns)   --->   "%store_ln36 = store i2 %add_ln36_1, i2 %indvar" [d2.cpp:36]   --->   Operation 96 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln50_1 = sext i61 %trunc_ln" [d2.cpp:50]   --->   Operation 97 'sext' 'sext_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln50_1" [d2.cpp:50]   --->   Operation 98 'getelementptr' 'mem_addr_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 99 [8/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 99 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 100 [7/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 100 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%tmp1_cast_cast = sext i7 %tmp1_cast" [d2.cpp:36]   --->   Operation 101 'sext' 'tmp1_cast_cast' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (1.08ns)   --->   "%empty_30 = add i64 %tmp1_cast_cast, i64 %arg2_read" [d2.cpp:36]   --->   Operation 102 'add' 'empty_30' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 103 [6/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 103 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %empty_30, i32 3, i32 63" [d2.cpp:52]   --->   Operation 104 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 105 [5/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 105 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln52 = sext i61 %trunc_ln1" [d2.cpp:52]   --->   Operation 106 'sext' 'sext_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln52" [d2.cpp:52]   --->   Operation 107 'getelementptr' 'mem_addr_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_5 : Operation 108 [8/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 108 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 109 [4/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 109 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 110 [7/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 110 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%i_load = load i5 %i" [d2.cpp:52]   --->   Operation 111 'load' 'i_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i5 %i_load" [d2.cpp:36]   --->   Operation 112 'trunc' 'trunc_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%empty_33 = trunc i5 %i_load" [d2.cpp:52]   --->   Operation 113 'trunc' 'empty_33' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 114 [3/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 114 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_load, i32 3, i32 4" [d2.cpp:50]   --->   Operation 115 'partselect' 'tmp' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.54ns)   --->   "%icmp_ln50 = icmp_eq  i2 %tmp, i2 1" [d2.cpp:50]   --->   Operation 116 'icmp' 'icmp_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 117 [6/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 117 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_load, i32 3, i32 4" [d2.cpp:52]   --->   Operation 118 'partselect' 'tmp_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 119 [1/1] (0.54ns)   --->   "%icmp_ln52 = icmp_ne  i2 %tmp_1, i2 1" [d2.cpp:52]   --->   Operation 119 'icmp' 'icmp_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln50)   --->   "%select_ln50 = select i1 %icmp_ln50, i64 56, i64 64" [d2.cpp:50]   --->   Operation 120 'select' 'select_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 121 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50 = add i64 %select_ln50, i64 %arg2_read" [d2.cpp:50]   --->   Operation 121 'add' 'add_ln50' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln50_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50, i32 3, i32 63" [d2.cpp:50]   --->   Operation 122 'partselect' 'trunc_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_load, i32 2, i32 4" [d2.cpp:50]   --->   Operation 123 'partselect' 'tmp_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.67ns)   --->   "%icmp_ln50_4 = icmp_sgt  i3 %tmp_2, i3 0" [d2.cpp:50]   --->   Operation 124 'icmp' 'icmp_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_load, i32 2, i32 4" [d2.cpp:52]   --->   Operation 125 'partselect' 'tmp_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 126 [1/1] (0.67ns)   --->   "%icmp_ln52_4 = icmp_slt  i3 %tmp_3, i3 1" [d2.cpp:52]   --->   Operation 126 'icmp' 'icmp_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_load, i32 1, i32 2" [d2.cpp:50]   --->   Operation 127 'partselect' 'tmp_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_7 : Operation 128 [1/1] (0.54ns)   --->   "%icmp_ln50_11 = icmp_eq  i2 %tmp_7, i2 0" [d2.cpp:50]   --->   Operation 128 'icmp' 'icmp_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 129 [1/1] (0.78ns)   --->   "%add_ln36 = add i5 %i_load, i5 29" [d2.cpp:36]   --->   Operation 129 'add' 'add_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 130 [1/1] (0.42ns)   --->   "%store_ln36 = store i5 %add_ln36, i5 %i" [d2.cpp:36]   --->   Operation 130 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 131 [2/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 131 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 132 [5/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 132 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %icmp_ln52" [d2.cpp:53]   --->   Operation 133 'zext' 'zext_ln53' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.79ns)   --->   "%k_5 = sub i4 7, i4 %empty_33" [d2.cpp:53]   --->   Operation 134 'sub' 'k_5' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 135 [1/1] (0.79ns)   --->   "%k_s = sub i4 %k_5, i4 %zext_ln53" [d2.cpp:53]   --->   Operation 135 'sub' 'k_s' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "%sext_ln50_2 = sext i61 %trunc_ln50_1" [d2.cpp:50]   --->   Operation 136 'sext' 'sext_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "%mem_addr_3 = getelementptr i64 %mem, i64 %sext_ln50_2" [d2.cpp:50]   --->   Operation 137 'getelementptr' 'mem_addr_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 138 [8/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 138 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_s, i3 0" [d2.cpp:52]   --->   Operation 139 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%sext_ln52_1 = sext i7 %shl_ln1" [d2.cpp:52]   --->   Operation 140 'sext' 'sext_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (1.08ns)   --->   "%add_ln52 = add i64 %sext_ln52_1, i64 %arg2_read" [d2.cpp:52]   --->   Operation 141 'add' 'add_ln52' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln52_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52, i32 3, i32 63" [d2.cpp:52]   --->   Operation 142 'partselect' 'trunc_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 143 [1/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 3" [d2.cpp:50]   --->   Operation 143 'readreq' 'empty_34' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node k_1)   --->   "%k = select i1 %icmp_ln50, i4 7, i4 8" [d2.cpp:51]   --->   Operation 144 'select' 'k' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 145 [4/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 145 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 146 [7/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 146 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 147 [1/1] (0.78ns)   --->   "%icmp_ln50_1 = icmp_sgt  i5 %i_load, i5 6" [d2.cpp:50]   --->   Operation 147 'icmp' 'icmp_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node k_1)   --->   "%zext_ln51 = zext i1 %icmp_ln50_1" [d2.cpp:51]   --->   Operation 148 'zext' 'zext_ln51' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_1 = sub i4 %k, i4 %zext_ln51" [d2.cpp:51]   --->   Operation 149 'sub' 'k_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 150 [1/1] (0.00ns)   --->   "%sext_ln52_2 = sext i61 %trunc_ln52_1" [d2.cpp:52]   --->   Operation 150 'sext' 'sext_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "%mem_addr_4 = getelementptr i64 %mem, i64 %sext_ln52_2" [d2.cpp:52]   --->   Operation 151 'getelementptr' 'mem_addr_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 152 [8/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 152 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 153 [1/1] (0.00ns)   --->   "%shl_ln50_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_1, i3 0" [d2.cpp:50]   --->   Operation 153 'bitconcatenate' 'shl_ln50_s' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i7 %shl_ln50_s" [d2.cpp:50]   --->   Operation 154 'zext' 'zext_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 155 [1/1] (1.08ns)   --->   "%add_ln50_1 = add i64 %zext_ln50_2, i64 %arg2_read" [d2.cpp:50]   --->   Operation 155 'add' 'add_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln50_2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_1, i32 3, i32 63" [d2.cpp:50]   --->   Operation 156 'partselect' 'trunc_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 157 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:50]   --->   Operation 157 'read' 'mem_addr_1_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 158 [3/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 158 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 159 [6/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 159 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 160 [7/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 160 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 161 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_slt  i5 %i_load, i5 7" [d2.cpp:52]   --->   Operation 161 'icmp' 'icmp_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i1 %icmp_ln52_1" [d2.cpp:53]   --->   Operation 162 'zext' 'zext_ln53_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_10 : Operation 163 [1/1] (0.79ns)   --->   "%k_1_36 = sub i4 %k_s, i4 %zext_ln53_1" [d2.cpp:53]   --->   Operation 163 'sub' 'k_1_36' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 164 [1/1] (0.00ns)   --->   "%sext_ln50 = sext i61 %trunc_ln50_2" [d2.cpp:50]   --->   Operation 164 'sext' 'sext_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "%mem_addr_5 = getelementptr i64 %mem, i64 %sext_ln50" [d2.cpp:50]   --->   Operation 165 'getelementptr' 'mem_addr_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_10 : Operation 166 [8/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 166 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 167 [1/1] (0.00ns)   --->   "%shl_ln52_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_1_36, i3 0" [d2.cpp:52]   --->   Operation 167 'bitconcatenate' 'shl_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_10 : Operation 168 [1/1] (0.00ns)   --->   "%sext_ln52_3 = sext i7 %shl_ln52_1" [d2.cpp:52]   --->   Operation 168 'sext' 'sext_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_10 : Operation 169 [1/1] (1.08ns)   --->   "%add_ln52_1 = add i64 %sext_ln52_3, i64 %arg2_read" [d2.cpp:52]   --->   Operation 169 'add' 'add_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%trunc_ln52_2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_1, i32 3, i32 63" [d2.cpp:52]   --->   Operation 170 'partselect' 'trunc_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 171 [1/1] (7.30ns)   --->   "%mem_addr_1_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:50]   --->   Operation 171 'read' 'mem_addr_1_read_1' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 172 [2/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 172 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 173 [5/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 173 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 174 [6/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 174 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 175 [7/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 175 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 176 [1/1] (0.78ns)   --->   "%icmp_ln50_2 = icmp_sgt  i5 %i_load, i5 5" [d2.cpp:50]   --->   Operation 176 'icmp' 'icmp_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln51_1 = zext i1 %icmp_ln50_2" [d2.cpp:51]   --->   Operation 177 'zext' 'zext_ln51_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_11 : Operation 178 [1/1] (0.79ns)   --->   "%k_2 = sub i4 %k_1, i4 %zext_ln51_1" [d2.cpp:51]   --->   Operation 178 'sub' 'k_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 179 [1/1] (0.00ns)   --->   "%sext_ln52_4 = sext i61 %trunc_ln52_2" [d2.cpp:52]   --->   Operation 179 'sext' 'sext_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_11 : Operation 180 [1/1] (0.00ns)   --->   "%mem_addr_6 = getelementptr i64 %mem, i64 %sext_ln52_4" [d2.cpp:52]   --->   Operation 180 'getelementptr' 'mem_addr_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_11 : Operation 181 [8/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 181 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 182 [1/1] (0.00ns)   --->   "%shl_ln50_2 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_2, i3 0" [d2.cpp:50]   --->   Operation 182 'bitconcatenate' 'shl_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_11 : Operation 183 [1/1] (0.00ns)   --->   "%zext_ln50_11 = zext i7 %shl_ln50_2" [d2.cpp:50]   --->   Operation 183 'zext' 'zext_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_11 : Operation 184 [1/1] (1.08ns)   --->   "%add_ln50_2 = add i64 %zext_ln50_11, i64 %arg2_read" [d2.cpp:50]   --->   Operation 184 'add' 'add_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln50_3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_2, i32 3, i32 63" [d2.cpp:50]   --->   Operation 185 'partselect' 'trunc_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 186 [1/1] (7.30ns)   --->   "%mem_addr_1_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:50]   --->   Operation 186 'read' 'mem_addr_1_read_2' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 187 [1/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_2, i32 3" [d2.cpp:52]   --->   Operation 187 'readreq' 'empty_35' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 188 [4/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 188 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 189 [5/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 189 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 190 [6/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 190 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 191 [7/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 191 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 192 [1/1] (0.78ns)   --->   "%icmp_ln52_2 = icmp_slt  i5 %i_load, i5 6" [d2.cpp:52]   --->   Operation 192 'icmp' 'icmp_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i1 %icmp_ln52_2" [d2.cpp:53]   --->   Operation 193 'zext' 'zext_ln53_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 194 [1/1] (0.79ns)   --->   "%k_2_37 = sub i4 %k_1_36, i4 %zext_ln53_2" [d2.cpp:53]   --->   Operation 194 'sub' 'k_2_37' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 195 [1/1] (0.00ns)   --->   "%sext_ln50_3 = sext i61 %trunc_ln50_3" [d2.cpp:50]   --->   Operation 195 'sext' 'sext_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 196 [1/1] (0.00ns)   --->   "%mem_addr_7 = getelementptr i64 %mem, i64 %sext_ln50_3" [d2.cpp:50]   --->   Operation 196 'getelementptr' 'mem_addr_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 197 [8/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 197 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 198 [1/1] (0.78ns)   --->   "%icmp_ln50_3 = icmp_sgt  i5 %i_load, i5 4" [d2.cpp:50]   --->   Operation 198 'icmp' 'icmp_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 199 [1/1] (0.00ns)   --->   "%shl_ln52_2 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_2_37, i3 0" [d2.cpp:52]   --->   Operation 199 'bitconcatenate' 'shl_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 200 [1/1] (0.00ns)   --->   "%sext_ln52_5 = sext i7 %shl_ln52_2" [d2.cpp:52]   --->   Operation 200 'sext' 'sext_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 201 [1/1] (1.08ns)   --->   "%add_ln52_2 = add i64 %sext_ln52_5, i64 %arg2_read" [d2.cpp:52]   --->   Operation 201 'add' 'add_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln52_3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_2, i32 3, i32 63" [d2.cpp:52]   --->   Operation 202 'partselect' 'trunc_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_12 : Operation 203 [1/1] (0.78ns)   --->   "%icmp_ln52_3 = icmp_slt  i5 %i_load, i5 5" [d2.cpp:52]   --->   Operation 203 'icmp' 'icmp_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 204 [1/1] (0.78ns)   --->   "%icmp_ln50_5 = icmp_sgt  i5 %i_load, i5 2" [d2.cpp:50]   --->   Operation 204 'icmp' 'icmp_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 205 [1/1] (0.78ns)   --->   "%icmp_ln52_5 = icmp_slt  i5 %i_load, i5 3" [d2.cpp:52]   --->   Operation 205 'icmp' 'icmp_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i64 %mem_addr_1_read_2" [d2.cpp:50]   --->   Operation 206 'zext' 'zext_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 207 [1/1] (7.30ns)   --->   "%mem_addr_2_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:52]   --->   Operation 207 'read' 'mem_addr_2_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 208 [3/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 208 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 209 [4/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 209 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 210 [5/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 210 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 211 [6/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 211 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 212 [7/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 212 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 213 [1/1] (0.00ns)   --->   "%zext_ln51_2 = zext i1 %icmp_ln50_3" [d2.cpp:51]   --->   Operation 213 'zext' 'zext_ln51_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 214 [1/1] (0.79ns)   --->   "%k_3 = sub i4 %k_2, i4 %zext_ln51_2" [d2.cpp:51]   --->   Operation 214 'sub' 'k_3' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 215 [1/1] (0.00ns)   --->   "%sext_ln52_6 = sext i61 %trunc_ln52_3" [d2.cpp:52]   --->   Operation 215 'sext' 'sext_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 216 [1/1] (0.00ns)   --->   "%mem_addr_8 = getelementptr i64 %mem, i64 %sext_ln52_6" [d2.cpp:52]   --->   Operation 216 'getelementptr' 'mem_addr_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 217 [8/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 217 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 218 [1/1] (0.00ns)   --->   "%shl_ln50_4 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_3, i3 0" [d2.cpp:50]   --->   Operation 218 'bitconcatenate' 'shl_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln50_19 = zext i7 %shl_ln50_4" [d2.cpp:50]   --->   Operation 219 'zext' 'zext_ln50_19' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : Operation 220 [1/1] (1.08ns)   --->   "%add_ln50_3 = add i64 %zext_ln50_19, i64 %arg2_read" [d2.cpp:50]   --->   Operation 220 'add' 'add_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 221 [1/1] (0.00ns)   --->   "%trunc_ln50_4 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_3, i32 3, i32 63" [d2.cpp:50]   --->   Operation 221 'partselect' 'trunc_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_13 : [1/1] (1.02ns)   --->   Input mux for Operation 222 '%mul_ln52_2 = mul i128 %zext_ln50, i128 %conv35_cast'
ST_13 : Operation 222 [1/1] (3.50ns)   --->   "%mul_ln52_2 = mul i128 %zext_ln50, i128 %conv35_cast" [d2.cpp:52]   --->   Operation 222 'mul' 'mul_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 223 [1/1] (7.30ns)   --->   "%mem_addr_2_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:52]   --->   Operation 223 'read' 'mem_addr_2_read_1' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 224 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i64 %mem_addr_2_read" [d2.cpp:52]   --->   Operation 224 'zext' 'zext_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 225 [2/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 225 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 226 [3/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 226 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 227 [4/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 227 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 228 [5/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 228 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 229 [6/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 229 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 230 [7/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 230 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 231 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i1 %icmp_ln52_3" [d2.cpp:53]   --->   Operation 231 'zext' 'zext_ln53_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 232 [1/1] (0.79ns)   --->   "%k_3_38 = sub i4 %k_2_37, i4 %zext_ln53_3" [d2.cpp:53]   --->   Operation 232 'sub' 'k_3_38' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 233 [1/1] (0.00ns)   --->   "%sext_ln50_4 = sext i61 %trunc_ln50_4" [d2.cpp:50]   --->   Operation 233 'sext' 'sext_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 234 [1/1] (0.00ns)   --->   "%mem_addr_9 = getelementptr i64 %mem, i64 %sext_ln50_4" [d2.cpp:50]   --->   Operation 234 'getelementptr' 'mem_addr_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 235 [8/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 235 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 236 [1/1] (0.00ns)   --->   "%shl_ln52_3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_3_38, i3 0" [d2.cpp:52]   --->   Operation 236 'bitconcatenate' 'shl_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 237 [1/1] (0.00ns)   --->   "%sext_ln52_7 = sext i7 %shl_ln52_3" [d2.cpp:52]   --->   Operation 237 'sext' 'sext_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : Operation 238 [1/1] (1.08ns)   --->   "%add_ln52_3 = add i64 %sext_ln52_7, i64 %arg2_read" [d2.cpp:52]   --->   Operation 238 'add' 'add_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 239 [1/1] (0.00ns)   --->   "%trunc_ln52_4 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_3, i32 3, i32 63" [d2.cpp:52]   --->   Operation 239 'partselect' 'trunc_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_14 : [1/1] (1.02ns)   --->   Input mux for Operation 240 '%mul_ln52_1 = mul i128 %zext_ln52, i128 %zext_ln50'
ST_14 : Operation 240 [1/1] (3.50ns)   --->   "%mul_ln52_1 = mul i128 %zext_ln52, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 240 'mul' 'mul_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_10)   --->   "%select_ln52 = select i1 %icmp_ln52, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 241 'select' 'select_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_10)   --->   "%and_ln52 = and i128 %mul_ln52_1, i128 %select_ln52" [d2.cpp:52]   --->   Operation 242 'and' 'and_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_10)   --->   "%select_ln52_1 = select i1 %icmp_ln50, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 243 'select' 'select_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_10)   --->   "%and_ln52_1 = and i128 %mul_ln52_2, i128 %select_ln52_1" [d2.cpp:52]   --->   Operation 244 'and' 'and_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 245 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln52_10 = add i128 %and_ln52_1, i128 %and_ln52" [d2.cpp:52]   --->   Operation 245 'add' 'add_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 246 [1/1] (7.30ns)   --->   "%mem_addr_2_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:52]   --->   Operation 246 'read' 'mem_addr_2_read_2' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 247 [1/8] (7.30ns)   --->   "%mem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_3, i32 1" [d2.cpp:50]   --->   Operation 247 'readreq' 'mem_load_1_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 248 [2/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 248 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 249 [3/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 249 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 250 [4/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 250 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 251 [5/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 251 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 252 [6/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 252 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 253 [7/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 253 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 254 [1/1] (0.00ns)   --->   "%zext_ln51_3 = zext i1 %icmp_ln50_4" [d2.cpp:51]   --->   Operation 254 'zext' 'zext_ln51_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 255 [1/1] (0.79ns)   --->   "%k_4 = sub i4 %k_3, i4 %zext_ln51_3" [d2.cpp:51]   --->   Operation 255 'sub' 'k_4' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 256 [1/1] (0.00ns)   --->   "%sext_ln52_8 = sext i61 %trunc_ln52_4" [d2.cpp:52]   --->   Operation 256 'sext' 'sext_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 257 [1/1] (0.00ns)   --->   "%mem_addr_10 = getelementptr i64 %mem, i64 %sext_ln52_8" [d2.cpp:52]   --->   Operation 257 'getelementptr' 'mem_addr_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 258 [8/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 258 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 259 [1/1] (0.00ns)   --->   "%shl_ln50_6 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_4, i3 0" [d2.cpp:50]   --->   Operation 259 'bitconcatenate' 'shl_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 260 [1/1] (0.00ns)   --->   "%zext_ln50_25 = zext i7 %shl_ln50_6" [d2.cpp:50]   --->   Operation 260 'zext' 'zext_ln50_25' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 261 [1/1] (1.08ns)   --->   "%add_ln50_4 = add i64 %zext_ln50_25, i64 %arg2_read" [d2.cpp:50]   --->   Operation 261 'add' 'add_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 262 [1/1] (0.00ns)   --->   "%trunc_ln50_5 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_4, i32 3, i32 63" [d2.cpp:50]   --->   Operation 262 'partselect' 'trunc_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 263 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i64 %mem_addr_1_read_1" [d2.cpp:50]   --->   Operation 263 'zext' 'zext_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i64 %mem_addr_2_read_1" [d2.cpp:52]   --->   Operation 264 'zext' 'zext_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : Operation 265 [1/1] (0.00ns)   --->   "%zext_ln50_18 = zext i64 %mem_addr_1_read" [d2.cpp:50]   --->   Operation 265 'zext' 'zext_ln50_18' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_15 : [1/1] (1.02ns)   --->   Input mux for Operation 266 '%mul_ln52_3 = mul i128 %zext_ln52_6, i128 %zext_ln50_9'
ST_15 : Operation 266 [1/1] (3.50ns)   --->   "%mul_ln52_3 = mul i128 %zext_ln52_6, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 266 'mul' 'mul_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : [1/1] (1.02ns)   --->   Input mux for Operation 267 '%mul_ln52_5 = mul i128 %zext_ln52_6, i128 %zext_ln50_18'
ST_15 : Operation 267 [1/1] (3.50ns)   --->   "%mul_ln52_5 = mul i128 %zext_ln52_6, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 267 'mul' 'mul_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 268 [1/1] (7.30ns)   --->   "%mem_addr_3_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_3" [d2.cpp:50]   --->   Operation 268 'read' 'mem_addr_3_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 269 [1/8] (7.30ns)   --->   "%mem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_4, i32 1" [d2.cpp:52]   --->   Operation 269 'readreq' 'mem_load_2_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 270 [2/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 270 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 271 [3/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 271 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 272 [4/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 272 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 273 [5/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 273 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 274 [6/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 274 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 275 [7/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 275 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i1 %icmp_ln52_4" [d2.cpp:53]   --->   Operation 276 'zext' 'zext_ln53_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 277 [1/1] (0.79ns)   --->   "%k_4_39 = sub i4 %k_3_38, i4 %zext_ln53_4" [d2.cpp:53]   --->   Operation 277 'sub' 'k_4_39' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 278 [1/1] (0.00ns)   --->   "%sext_ln50_5 = sext i61 %trunc_ln50_5" [d2.cpp:50]   --->   Operation 278 'sext' 'sext_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 279 [1/1] (0.00ns)   --->   "%mem_addr_11 = getelementptr i64 %mem, i64 %sext_ln50_5" [d2.cpp:50]   --->   Operation 279 'getelementptr' 'mem_addr_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 280 [8/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 280 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 281 [1/1] (0.00ns)   --->   "%shl_ln52_4 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_4_39, i3 0" [d2.cpp:52]   --->   Operation 281 'bitconcatenate' 'shl_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 282 [1/1] (0.00ns)   --->   "%sext_ln52_9 = sext i7 %shl_ln52_4" [d2.cpp:52]   --->   Operation 282 'sext' 'sext_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 283 [1/1] (1.08ns)   --->   "%add_ln52_4 = add i64 %sext_ln52_9, i64 %arg2_read" [d2.cpp:52]   --->   Operation 283 'add' 'add_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 284 [1/1] (0.00ns)   --->   "%trunc_ln52_5 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_4, i32 3, i32 63" [d2.cpp:52]   --->   Operation 284 'partselect' 'trunc_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln52_12 = zext i64 %mem_addr_2_read_2" [d2.cpp:52]   --->   Operation 285 'zext' 'zext_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_16 : [1/1] (1.02ns)   --->   Input mux for Operation 286 '%mul_ln52 = mul i128 %zext_ln52_12, i128 %zext_ln50_18'
ST_16 : Operation 286 [1/1] (3.50ns)   --->   "%mul_ln52 = mul i128 %zext_ln52_12, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 286 'mul' 'mul_ln52' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 287 [1/1] (1.57ns)   --->   "%add_ln52_11 = add i128 %mul_ln52_3, i128 %mul_ln52" [d2.cpp:52]   --->   Operation 287 'add' 'add_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 288 [1/1] (0.00ns)   --->   "%add47243_load = load i128 %add47243" [d2.cpp:52]   --->   Operation 288 'load' 'add47243_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 289 [1/1] (0.00ns)   --->   "%shl_ln50 = shl i64 %mem_addr_3_read, i64 1" [d2.cpp:50]   --->   Operation 289 'shl' 'shl_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i64 %shl_ln50" [d2.cpp:50]   --->   Operation 290 'zext' 'zext_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 291 [1/1] (7.30ns)   --->   "%mem_addr_4_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_4" [d2.cpp:52]   --->   Operation 291 'read' 'mem_addr_4_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 292 [1/8] (7.30ns)   --->   "%mem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_5, i32 1" [d2.cpp:50]   --->   Operation 292 'readreq' 'mem_load_3_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 293 [2/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 293 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 294 [3/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 294 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 295 [4/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 295 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 296 [5/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 296 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 297 [6/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 297 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 298 [7/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 298 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln51_4 = zext i1 %icmp_ln50_5" [d2.cpp:51]   --->   Operation 299 'zext' 'zext_ln51_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 300 [1/1] (0.79ns)   --->   "%k_5_40 = sub i4 %k_4, i4 %zext_ln51_4" [d2.cpp:51]   --->   Operation 300 'sub' 'k_5_40' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 301 [1/1] (0.00ns)   --->   "%trunc_ln52 = trunc i4 %k_5_40" [d2.cpp:52]   --->   Operation 301 'trunc' 'trunc_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 302 [1/1] (0.00ns)   --->   "%sext_ln52_13 = sext i61 %trunc_ln52_5" [d2.cpp:52]   --->   Operation 302 'sext' 'sext_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 303 [1/1] (0.00ns)   --->   "%mem_addr_12 = getelementptr i64 %mem, i64 %sext_ln52_13" [d2.cpp:52]   --->   Operation 303 'getelementptr' 'mem_addr_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 304 [8/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 304 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 305 [1/1] (0.00ns)   --->   "%shl_ln50_8 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_5_40, i3 0" [d2.cpp:50]   --->   Operation 305 'bitconcatenate' 'shl_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln50_26 = zext i7 %shl_ln50_8" [d2.cpp:50]   --->   Operation 306 'zext' 'zext_ln50_26' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 307 [1/1] (1.08ns)   --->   "%add_ln50_5 = add i64 %zext_ln50_26, i64 %arg2_read" [d2.cpp:50]   --->   Operation 307 'add' 'add_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 308 [1/1] (0.00ns)   --->   "%trunc_ln50_6 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_5, i32 3, i32 63" [d2.cpp:50]   --->   Operation 308 'partselect' 'trunc_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_17 : Operation 309 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_12 = add i128 %add_ln52_11, i128 %add_ln52_10" [d2.cpp:52]   --->   Operation 309 'add' 'add_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 310 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_13 = add i128 %add47243_load, i128 %add_ln52_12" [d2.cpp:52]   --->   Operation 310 'add' 'add_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : [1/1] (1.02ns)   --->   Input mux for Operation 311 '%mul_ln52_7 = mul i128 %zext_ln50_1, i128 %zext_ln50'
ST_17 : Operation 311 [1/1] (3.50ns)   --->   "%mul_ln52_7 = mul i128 %zext_ln50_1, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 311 'mul' 'mul_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_4)   --->   "%select_ln52_4 = select i1 %icmp_ln50_1, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 312 'select' 'select_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 313 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_4 = and i128 %mul_ln52_7, i128 %select_ln52_4" [d2.cpp:52]   --->   Operation 313 'and' 'and_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 314 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_13, i128 %add47243" [d2.cpp:36]   --->   Operation 314 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 315 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i64 %mem_addr_4_read" [d2.cpp:52]   --->   Operation 315 'zext' 'zext_ln52_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : Operation 316 [1/1] (7.30ns)   --->   "%mem_addr_5_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_5" [d2.cpp:50]   --->   Operation 316 'read' 'mem_addr_5_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 317 [1/8] (7.30ns)   --->   "%mem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_6, i32 1" [d2.cpp:52]   --->   Operation 317 'readreq' 'mem_load_4_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 318 [2/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 318 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 319 [3/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 319 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 320 [4/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 320 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 321 [5/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 321 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 322 [6/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 322 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 323 [7/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 323 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 324 [1/1] (0.00ns)   --->   "%sext_ln50_6 = sext i61 %trunc_ln50_6" [d2.cpp:50]   --->   Operation 324 'sext' 'sext_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : Operation 325 [1/1] (0.00ns)   --->   "%mem_addr_13 = getelementptr i64 %mem, i64 %sext_ln50_6" [d2.cpp:50]   --->   Operation 325 'getelementptr' 'mem_addr_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : Operation 326 [8/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 326 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 327 [1/1] (0.67ns)   --->   "%k_6 = add i3 %trunc_ln52, i3 7" [d2.cpp:51]   --->   Operation 327 'add' 'k_6' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 328 [1/1] (0.00ns)   --->   "%shl_ln50_10 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %k_6, i3 0" [d2.cpp:50]   --->   Operation 328 'bitconcatenate' 'shl_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln50_27 = zext i6 %shl_ln50_10" [d2.cpp:50]   --->   Operation 329 'zext' 'zext_ln50_27' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : Operation 330 [1/1] (1.08ns)   --->   "%add_ln50_6 = add i64 %zext_ln50_27, i64 %arg2_read" [d2.cpp:50]   --->   Operation 330 'add' 'add_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 331 [1/1] (0.00ns)   --->   "%trunc_ln50_7 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_6, i32 3, i32 63" [d2.cpp:50]   --->   Operation 331 'partselect' 'trunc_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_18 : [1/1] (1.02ns)   --->   Input mux for Operation 332 '%mul_ln52_4 = mul i128 %zext_ln52_1, i128 %zext_ln50'
ST_18 : Operation 332 [1/1] (3.50ns)   --->   "%mul_ln52_4 = mul i128 %zext_ln52_1, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 332 'mul' 'mul_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_2)   --->   "%select_ln52_2 = select i1 %icmp_ln52_1, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 333 'select' 'select_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 334 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_2 = and i128 %mul_ln52_4, i128 %select_ln52_2" [d2.cpp:52]   --->   Operation 334 'and' 'and_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 335 [1/1] (0.00ns)   --->   "%shl_ln50_1 = shl i64 %mem_addr_5_read, i64 1" [d2.cpp:50]   --->   Operation 335 'shl' 'shl_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_19 : Operation 336 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i64 %shl_ln50_1" [d2.cpp:50]   --->   Operation 336 'zext' 'zext_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_19 : Operation 337 [1/1] (7.30ns)   --->   "%mem_addr_6_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_6" [d2.cpp:52]   --->   Operation 337 'read' 'mem_addr_6_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 338 [1/8] (7.30ns)   --->   "%mem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_7, i32 1" [d2.cpp:50]   --->   Operation 338 'readreq' 'mem_load_5_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 339 [2/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 339 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 340 [3/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 340 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 341 [4/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 341 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 342 [5/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 342 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 343 [6/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 343 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 344 [7/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 344 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 345 [1/1] (0.00ns)   --->   "%sext_ln50_7 = sext i61 %trunc_ln50_7" [d2.cpp:50]   --->   Operation 345 'sext' 'sext_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_19 : Operation 346 [1/1] (0.00ns)   --->   "%mem_addr_14 = getelementptr i64 %mem, i64 %sext_ln50_7" [d2.cpp:50]   --->   Operation 346 'getelementptr' 'mem_addr_14' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_19 : Operation 347 [8/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 347 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : [1/1] (1.02ns)   --->   Input mux for Operation 348 '%mul_ln52_12 = mul i128 %zext_ln50_3, i128 %zext_ln50'
ST_19 : Operation 348 [1/1] (3.50ns)   --->   "%mul_ln52_12 = mul i128 %zext_ln50_3, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 348 'mul' 'mul_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 349 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 349 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 350 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %p_cast_cast_cast"   --->   Operation 350 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 351 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i64 %mem_addr_6_read" [d2.cpp:52]   --->   Operation 351 'zext' 'zext_ln52_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 352 [1/1] (7.30ns)   --->   "%mem_addr_7_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_7" [d2.cpp:50]   --->   Operation 352 'read' 'mem_addr_7_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 353 [1/8] (7.30ns)   --->   "%mem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_8, i32 1" [d2.cpp:52]   --->   Operation 353 'readreq' 'mem_load_6_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 354 [2/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 354 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 355 [3/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 355 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 356 [4/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 356 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 357 [5/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 357 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 358 [6/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 358 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 359 [7/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 359 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 360 [8/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 360 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 361 [1/1] (0.67ns)   --->   "%icmp_ln50_6 = icmp_eq  i3 %trunc_ln36, i3 0" [d2.cpp:50]   --->   Operation 361 'icmp' 'icmp_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_7)   --->   "%select_ln50_1 = select i1 %icmp_ln50_6, i64 56, i64 64" [d2.cpp:50]   --->   Operation 362 'select' 'select_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 363 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_7 = add i64 %select_ln50_1, i64 %arg2_read" [d2.cpp:50]   --->   Operation 363 'add' 'add_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 364 [1/1] (0.00ns)   --->   "%trunc_ln50_8 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_7, i32 3, i32 63" [d2.cpp:50]   --->   Operation 364 'partselect' 'trunc_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_20 : [1/1] (1.02ns)   --->   Input mux for Operation 365 '%mul_ln52_8 = mul i128 %zext_ln52_2, i128 %zext_ln50'
ST_20 : Operation 365 [1/1] (3.50ns)   --->   "%mul_ln52_8 = mul i128 %zext_ln52_2, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 365 'mul' 'mul_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_18)   --->   "%select_ln52_5 = select i1 %icmp_ln52_2, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 366 'select' 'select_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_18)   --->   "%and_ln52_5 = and i128 %mul_ln52_8, i128 %select_ln52_5" [d2.cpp:52]   --->   Operation 367 'and' 'and_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_18)   --->   "%select_ln52_9 = select i1 %icmp_ln50_2, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 368 'select' 'select_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 369 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_18)   --->   "%and_ln52_9 = and i128 %mul_ln52_12, i128 %select_ln52_9" [d2.cpp:52]   --->   Operation 369 'and' 'and_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 370 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln52_18 = add i128 %and_ln52_9, i128 %and_ln52_5" [d2.cpp:52]   --->   Operation 370 'add' 'add_ln52_18' <Predicate = (!icmp_ln36)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 952 [1/1] (0.00ns)   --->   "%add47243_load_1 = load i128 %add47243"   --->   Operation 952 'load' 'add47243_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 953 [1/1] (0.00ns)   --->   "%add47_1172244_load_1 = load i128 %add47_1172244"   --->   Operation 953 'load' 'add47_1172244_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 954 [1/1] (0.00ns)   --->   "%add47_198245_load_1 = load i128 %add47_198245"   --->   Operation 954 'load' 'add47_198245_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 955 [1/1] (0.00ns)   --->   "%add47_198_1246_load_1 = load i128 %add47_198_1246"   --->   Operation 955 'load' 'add47_198_1246_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 956 [1/1] (0.00ns)   --->   "%add47_2134247_load_1 = load i128 %add47_2134247"   --->   Operation 956 'load' 'add47_2134247_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 957 [1/1] (0.00ns)   --->   "%add47_2134_1248_load_1 = load i128 %add47_2134_1248"   --->   Operation 957 'load' 'add47_2134_1248_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 958 [1/1] (0.00ns)   --->   "%add47_3249_load_1 = load i128 %add47_3249"   --->   Operation 958 'load' 'add47_3249_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 959 [1/1] (0.00ns)   --->   "%add47_3_1250_load_1 = load i128 %add47_3_1250"   --->   Operation 959 'load' 'add47_3_1250_load_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 960 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_3_1250_out, i128 %add47_3_1250_load_1"   --->   Operation 960 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 961 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_3249_out, i128 %add47_3249_load_1"   --->   Operation 961 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 962 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_2134_1248_out, i128 %add47_2134_1248_load_1"   --->   Operation 962 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 963 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_2134247_out, i128 %add47_2134247_load_1"   --->   Operation 963 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 964 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_198_1246_out, i128 %add47_198_1246_load_1"   --->   Operation 964 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 965 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_198245_out, i128 %add47_198245_load_1"   --->   Operation 965 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 966 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47_1172244_out, i128 %add47_1172244_load_1"   --->   Operation 966 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 967 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add47243_out, i128 %add47243_load_1"   --->   Operation 967 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_20 : Operation 968 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 968 'ret' 'ret_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 7.30>
ST_21 : Operation 371 [1/1] (0.00ns)   --->   "%shl_ln50_3 = shl i64 %mem_addr_7_read, i64 1" [d2.cpp:50]   --->   Operation 371 'shl' 'shl_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 372 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i64 %shl_ln50_3" [d2.cpp:50]   --->   Operation 372 'zext' 'zext_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 373 [1/1] (7.30ns)   --->   "%mem_addr_8_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_8" [d2.cpp:52]   --->   Operation 373 'read' 'mem_addr_8_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 374 [1/8] (7.30ns)   --->   "%mem_load_7_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_9, i32 1" [d2.cpp:50]   --->   Operation 374 'readreq' 'mem_load_7_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 375 [2/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 375 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 376 [3/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 376 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 377 [4/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 377 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 378 [5/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 378 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 379 [6/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 379 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 380 [7/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 380 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 381 [1/1] (0.00ns)   --->   "%sext_ln50_8 = sext i61 %trunc_ln50_8" [d2.cpp:50]   --->   Operation 381 'sext' 'sext_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 382 [1/1] (0.00ns)   --->   "%mem_addr_15 = getelementptr i64 %mem, i64 %sext_ln50_8" [d2.cpp:50]   --->   Operation 382 'getelementptr' 'mem_addr_15' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 383 [8/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 383 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 384 [1/1] (0.00ns)   --->   "%shl_ln52_5 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_5, i3 0" [d2.cpp:52]   --->   Operation 384 'bitconcatenate' 'shl_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 385 [1/1] (0.00ns)   --->   "%sext_ln52_20 = sext i7 %shl_ln52_5" [d2.cpp:52]   --->   Operation 385 'sext' 'sext_ln52_20' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : Operation 386 [1/1] (1.08ns)   --->   "%add_ln52_5 = add i64 %sext_ln52_20, i64 %arg2_read" [d2.cpp:52]   --->   Operation 386 'add' 'add_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 387 [1/1] (0.00ns)   --->   "%trunc_ln52_6 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_5, i32 3, i32 63" [d2.cpp:52]   --->   Operation 387 'partselect' 'trunc_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_21 : [1/1] (1.02ns)   --->   Input mux for Operation 388 '%mul_ln52_18 = mul i128 %zext_ln50_4, i128 %zext_ln50'
ST_21 : Operation 388 [1/1] (3.50ns)   --->   "%mul_ln52_18 = mul i128 %zext_ln50_4, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 388 'mul' 'mul_ln52_18' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_15)   --->   "%select_ln52_15 = select i1 %icmp_ln50_3, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 389 'select' 'select_ln52_15' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 390 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_15 = and i128 %mul_ln52_18, i128 %select_ln52_15" [d2.cpp:52]   --->   Operation 390 'and' 'and_ln52_15' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 391 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i64 %mem_addr_8_read" [d2.cpp:52]   --->   Operation 391 'zext' 'zext_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 392 [1/1] (7.30ns)   --->   "%mem_addr_9_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_9" [d2.cpp:50]   --->   Operation 392 'read' 'mem_addr_9_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 393 [1/8] (7.30ns)   --->   "%mem_load_8_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_10, i32 1" [d2.cpp:52]   --->   Operation 393 'readreq' 'mem_load_8_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 394 [2/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 394 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 395 [3/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 395 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 396 [4/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 396 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 397 [5/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 397 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 398 [1/1] (0.67ns)   --->   "%add_ln50_18 = add i3 %trunc_ln36, i3 7" [d2.cpp:50]   --->   Operation 398 'add' 'add_ln50_18' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 399 [6/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 399 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node k_8)   --->   "%k_7 = select i1 %icmp_ln50_6, i4 7, i4 8" [d2.cpp:51]   --->   Operation 400 'select' 'k_7' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 401 [7/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 401 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 402 [1/1] (0.67ns)   --->   "%icmp_ln50_7 = icmp_ugt  i3 %add_ln50_18, i3 5" [d2.cpp:50]   --->   Operation 402 'icmp' 'icmp_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node k_8)   --->   "%zext_ln51_5 = zext i1 %icmp_ln50_7" [d2.cpp:51]   --->   Operation 403 'zext' 'zext_ln51_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 404 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_8 = sub i4 %k_7, i4 %zext_ln51_5" [d2.cpp:51]   --->   Operation 404 'sub' 'k_8' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 405 [1/1] (0.00ns)   --->   "%sext_ln52_22 = sext i61 %trunc_ln52_6" [d2.cpp:52]   --->   Operation 405 'sext' 'sext_ln52_22' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 406 [1/1] (0.00ns)   --->   "%mem_addr_16 = getelementptr i64 %mem, i64 %sext_ln52_22" [d2.cpp:52]   --->   Operation 406 'getelementptr' 'mem_addr_16' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 407 [8/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 407 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 408 [1/1] (0.00ns)   --->   "%shl_ln50_14 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_8, i3 0" [d2.cpp:50]   --->   Operation 408 'bitconcatenate' 'shl_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 409 [1/1] (0.00ns)   --->   "%zext_ln50_28 = zext i7 %shl_ln50_14" [d2.cpp:50]   --->   Operation 409 'zext' 'zext_ln50_28' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 410 [1/1] (1.08ns)   --->   "%add_ln50_8 = add i64 %zext_ln50_28, i64 %arg2_read" [d2.cpp:50]   --->   Operation 410 'add' 'add_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 411 [1/1] (0.00ns)   --->   "%trunc_ln50_9 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_8, i32 3, i32 63" [d2.cpp:50]   --->   Operation 411 'partselect' 'trunc_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 412 [1/1] (0.00ns)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %add_ln50_18, i32 2" [d2.cpp:51]   --->   Operation 412 'bitselect' 'tmp_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 413 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %add_ln50_18, i32 1, i32 2" [d2.cpp:50]   --->   Operation 413 'partselect' 'tmp_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 414 [1/1] (0.54ns)   --->   "%icmp_ln50_10 = icmp_ne  i2 %tmp_5, i2 0" [d2.cpp:50]   --->   Operation 414 'icmp' 'icmp_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 415 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %add_ln50_18, i32 1, i32 2" [d2.cpp:52]   --->   Operation 415 'partselect' 'tmp_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_22 : Operation 416 [1/1] (0.54ns)   --->   "%icmp_ln52_9 = icmp_eq  i2 %tmp_6, i2 0" [d2.cpp:52]   --->   Operation 416 'icmp' 'icmp_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.02ns)   --->   Input mux for Operation 417 '%mul_ln52_13 = mul i128 %zext_ln52_3, i128 %zext_ln50'
ST_22 : Operation 417 [1/1] (3.50ns)   --->   "%mul_ln52_13 = mul i128 %zext_ln52_3, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 417 'mul' 'mul_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_10)   --->   "%select_ln52_10 = select i1 %icmp_ln52_3, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 418 'select' 'select_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 419 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_10 = and i128 %mul_ln52_13, i128 %select_ln52_10" [d2.cpp:52]   --->   Operation 419 'and' 'and_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 420 [1/1] (0.00ns)   --->   "%shl_ln50_5 = shl i64 %mem_addr_9_read, i64 1" [d2.cpp:50]   --->   Operation 420 'shl' 'shl_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 421 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i64 %shl_ln50_5" [d2.cpp:50]   --->   Operation 421 'zext' 'zext_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 422 [1/1] (7.30ns)   --->   "%mem_addr_10_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_10" [d2.cpp:52]   --->   Operation 422 'read' 'mem_addr_10_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 423 [1/8] (7.30ns)   --->   "%mem_load_9_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_11, i32 1" [d2.cpp:50]   --->   Operation 423 'readreq' 'mem_load_9_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 424 [2/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 424 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 425 [3/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 425 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 426 [4/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 426 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 427 [5/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 427 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 428 [6/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 428 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 429 [7/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 429 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 430 [1/1] (0.67ns)   --->   "%icmp_ln52_6 = icmp_ult  i3 %add_ln50_18, i3 6" [d2.cpp:52]   --->   Operation 430 'icmp' 'icmp_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 431 [1/1] (0.00ns)   --->   "%zext_ln53_5 = zext i1 %icmp_ln52_6" [d2.cpp:53]   --->   Operation 431 'zext' 'zext_ln53_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 432 [1/1] (0.79ns)   --->   "%k_6_41 = sub i4 %k_5, i4 %zext_ln53_5" [d2.cpp:53]   --->   Operation 432 'sub' 'k_6_41' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 433 [1/1] (0.00ns)   --->   "%sext_ln50_9 = sext i61 %trunc_ln50_9" [d2.cpp:50]   --->   Operation 433 'sext' 'sext_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 434 [1/1] (0.00ns)   --->   "%mem_addr_17 = getelementptr i64 %mem, i64 %sext_ln50_9" [d2.cpp:50]   --->   Operation 434 'getelementptr' 'mem_addr_17' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 435 [8/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 435 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 436 [1/1] (0.00ns)   --->   "%shl_ln52_6 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_6_41, i3 0" [d2.cpp:52]   --->   Operation 436 'bitconcatenate' 'shl_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 437 [1/1] (0.00ns)   --->   "%sext_ln52_29 = sext i7 %shl_ln52_6" [d2.cpp:52]   --->   Operation 437 'sext' 'sext_ln52_29' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : Operation 438 [1/1] (1.08ns)   --->   "%add_ln52_6 = add i64 %sext_ln52_29, i64 %arg2_read" [d2.cpp:52]   --->   Operation 438 'add' 'add_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 439 [1/1] (0.00ns)   --->   "%trunc_ln52_7 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_6, i32 3, i32 63" [d2.cpp:52]   --->   Operation 439 'partselect' 'trunc_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_23 : [1/1] (1.02ns)   --->   Input mux for Operation 440 '%mul_ln52_24 = mul i128 %zext_ln50_5, i128 %zext_ln50'
ST_23 : Operation 440 [1/1] (3.50ns)   --->   "%mul_ln52_24 = mul i128 %zext_ln50_5, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 440 'mul' 'mul_ln52_24' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_21)   --->   "%select_ln52_21 = select i1 %icmp_ln50_4, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 441 'select' 'select_ln52_21' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 442 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_21 = and i128 %mul_ln52_24, i128 %select_ln52_21" [d2.cpp:52]   --->   Operation 442 'and' 'and_ln52_21' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 443 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i64 %mem_addr_10_read" [d2.cpp:52]   --->   Operation 443 'zext' 'zext_ln52_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 444 [1/1] (7.30ns)   --->   "%mem_addr_11_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_11" [d2.cpp:50]   --->   Operation 444 'read' 'mem_addr_11_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 445 [1/8] (7.30ns)   --->   "%mem_load_10_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_12, i32 1" [d2.cpp:52]   --->   Operation 445 'readreq' 'mem_load_10_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 446 [2/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 446 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 447 [3/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 447 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 448 [4/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 448 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 449 [5/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 449 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 450 [6/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 450 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 451 [7/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 451 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 452 [1/1] (0.67ns)   --->   "%icmp_ln50_8 = icmp_ugt  i3 %add_ln50_18, i3 4" [d2.cpp:50]   --->   Operation 452 'icmp' 'icmp_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 453 [1/1] (0.00ns)   --->   "%zext_ln51_6 = zext i1 %icmp_ln50_8" [d2.cpp:51]   --->   Operation 453 'zext' 'zext_ln51_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 454 [1/1] (0.79ns)   --->   "%k_9 = sub i4 %k_8, i4 %zext_ln51_6" [d2.cpp:51]   --->   Operation 454 'sub' 'k_9' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 455 [1/1] (0.00ns)   --->   "%sext_ln52_31 = sext i61 %trunc_ln52_7" [d2.cpp:52]   --->   Operation 455 'sext' 'sext_ln52_31' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 456 [1/1] (0.00ns)   --->   "%mem_addr_18 = getelementptr i64 %mem, i64 %sext_ln52_31" [d2.cpp:52]   --->   Operation 456 'getelementptr' 'mem_addr_18' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 457 [8/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 457 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 458 [1/1] (0.00ns)   --->   "%shl_ln50_16 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_9, i3 0" [d2.cpp:50]   --->   Operation 458 'bitconcatenate' 'shl_ln50_16' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 459 [1/1] (0.00ns)   --->   "%zext_ln50_29 = zext i7 %shl_ln50_16" [d2.cpp:50]   --->   Operation 459 'zext' 'zext_ln50_29' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : Operation 460 [1/1] (1.08ns)   --->   "%add_ln50_9 = add i64 %zext_ln50_29, i64 %arg2_read" [d2.cpp:50]   --->   Operation 460 'add' 'add_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 461 [1/1] (0.00ns)   --->   "%trunc_ln50_s = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_9, i32 3, i32 63" [d2.cpp:50]   --->   Operation 461 'partselect' 'trunc_ln50_s' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_24 : [1/1] (1.02ns)   --->   Input mux for Operation 462 '%mul_ln52_19 = mul i128 %zext_ln52_4, i128 %zext_ln50'
ST_24 : Operation 462 [1/1] (3.50ns)   --->   "%mul_ln52_19 = mul i128 %zext_ln52_4, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 462 'mul' 'mul_ln52_19' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 463 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_16)   --->   "%select_ln52_16 = select i1 %icmp_ln52_4, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 463 'select' 'select_ln52_16' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 464 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_16 = and i128 %mul_ln52_19, i128 %select_ln52_16" [d2.cpp:52]   --->   Operation 464 'and' 'and_ln52_16' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 465 [1/1] (0.00ns)   --->   "%shl_ln50_7 = shl i64 %mem_addr_11_read, i64 1" [d2.cpp:50]   --->   Operation 465 'shl' 'shl_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 466 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i64 %shl_ln50_7" [d2.cpp:50]   --->   Operation 466 'zext' 'zext_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 467 [1/1] (7.30ns)   --->   "%mem_addr_12_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_12" [d2.cpp:52]   --->   Operation 467 'read' 'mem_addr_12_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 468 [1/8] (7.30ns)   --->   "%mem_load_11_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_13, i32 1" [d2.cpp:50]   --->   Operation 468 'readreq' 'mem_load_11_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 469 [2/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 469 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 470 [3/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 470 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 471 [4/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 471 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 472 [5/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 472 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 473 [6/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 473 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 474 [7/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 474 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 475 [1/1] (0.67ns)   --->   "%icmp_ln52_7 = icmp_ult  i3 %add_ln50_18, i3 5" [d2.cpp:52]   --->   Operation 475 'icmp' 'icmp_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 476 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i1 %icmp_ln52_7" [d2.cpp:53]   --->   Operation 476 'zext' 'zext_ln53_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 477 [1/1] (0.79ns)   --->   "%k_7_42 = sub i4 %k_6_41, i4 %zext_ln53_6" [d2.cpp:53]   --->   Operation 477 'sub' 'k_7_42' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 478 [1/1] (0.00ns)   --->   "%sext_ln50_10 = sext i61 %trunc_ln50_s" [d2.cpp:50]   --->   Operation 478 'sext' 'sext_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 479 [1/1] (0.00ns)   --->   "%mem_addr_19 = getelementptr i64 %mem, i64 %sext_ln50_10" [d2.cpp:50]   --->   Operation 479 'getelementptr' 'mem_addr_19' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 480 [8/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 480 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 481 [1/1] (0.00ns)   --->   "%shl_ln52_7 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_7_42, i3 0" [d2.cpp:52]   --->   Operation 481 'bitconcatenate' 'shl_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 482 [1/1] (0.00ns)   --->   "%sext_ln52_32 = sext i7 %shl_ln52_7" [d2.cpp:52]   --->   Operation 482 'sext' 'sext_ln52_32' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 483 [1/1] (1.08ns)   --->   "%add_ln52_7 = add i64 %sext_ln52_32, i64 %arg2_read" [d2.cpp:52]   --->   Operation 483 'add' 'add_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 484 [1/1] (0.00ns)   --->   "%trunc_ln52_8 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_7, i32 3, i32 63" [d2.cpp:52]   --->   Operation 484 'partselect' 'trunc_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_25 : Operation 485 [1/1] (0.67ns)   --->   "%icmp_ln50_9 = icmp_ugt  i3 %add_ln50_18, i3 2" [d2.cpp:50]   --->   Operation 485 'icmp' 'icmp_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 486 [1/1] (0.67ns)   --->   "%icmp_ln52_8 = icmp_ult  i3 %add_ln50_18, i3 3" [d2.cpp:52]   --->   Operation 486 'icmp' 'icmp_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.02ns)   --->   Input mux for Operation 487 '%mul_ln52_30 = mul i128 %zext_ln50_6, i128 %zext_ln50'
ST_25 : Operation 487 [1/1] (3.50ns)   --->   "%mul_ln52_30 = mul i128 %zext_ln50_6, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 487 'mul' 'mul_ln52_30' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_27)   --->   "%select_ln52_27 = select i1 %icmp_ln50_5, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 488 'select' 'select_ln52_27' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 489 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_27 = and i128 %mul_ln52_30, i128 %select_ln52_27" [d2.cpp:52]   --->   Operation 489 'and' 'and_ln52_27' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 490 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i64 %mem_addr_12_read" [d2.cpp:52]   --->   Operation 490 'zext' 'zext_ln52_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 491 [1/1] (7.30ns)   --->   "%mem_addr_13_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_13" [d2.cpp:50]   --->   Operation 491 'read' 'mem_addr_13_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 492 [1/8] (7.30ns)   --->   "%mem_load_12_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_14, i32 1" [d2.cpp:50]   --->   Operation 492 'readreq' 'mem_load_12_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 493 [2/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 493 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 494 [3/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 494 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 495 [4/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 495 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 496 [5/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 496 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 497 [6/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 497 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 498 [7/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 498 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 499 [1/1] (0.00ns)   --->   "%zext_ln51_7 = zext i1 %tmp_4" [d2.cpp:51]   --->   Operation 499 'zext' 'zext_ln51_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 500 [1/1] (0.79ns)   --->   "%k_10 = sub i4 %k_9, i4 %zext_ln51_7" [d2.cpp:51]   --->   Operation 500 'sub' 'k_10' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 501 [1/1] (0.00ns)   --->   "%sext_ln52_33 = sext i61 %trunc_ln52_8" [d2.cpp:52]   --->   Operation 501 'sext' 'sext_ln52_33' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 502 [1/1] (0.00ns)   --->   "%mem_addr_20 = getelementptr i64 %mem, i64 %sext_ln52_33" [d2.cpp:52]   --->   Operation 502 'getelementptr' 'mem_addr_20' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 503 [8/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 503 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 504 [1/1] (0.00ns)   --->   "%shl_ln50_18 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_10, i3 0" [d2.cpp:50]   --->   Operation 504 'bitconcatenate' 'shl_ln50_18' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 505 [1/1] (0.00ns)   --->   "%zext_ln50_30 = zext i7 %shl_ln50_18" [d2.cpp:50]   --->   Operation 505 'zext' 'zext_ln50_30' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : Operation 506 [1/1] (1.08ns)   --->   "%add_ln50_10 = add i64 %zext_ln50_30, i64 %arg2_read" [d2.cpp:50]   --->   Operation 506 'add' 'add_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 507 [1/1] (0.00ns)   --->   "%trunc_ln50_10 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_10, i32 3, i32 63" [d2.cpp:50]   --->   Operation 507 'partselect' 'trunc_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_26 : [1/1] (1.02ns)   --->   Input mux for Operation 508 '%mul_ln52_25 = mul i128 %zext_ln52_5, i128 %zext_ln50'
ST_26 : Operation 508 [1/1] (3.50ns)   --->   "%mul_ln52_25 = mul i128 %zext_ln52_5, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 508 'mul' 'mul_ln52_25' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_22)   --->   "%select_ln52_22 = select i1 %icmp_ln52_5, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 509 'select' 'select_ln52_22' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 510 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_22 = and i128 %mul_ln52_25, i128 %select_ln52_22" [d2.cpp:52]   --->   Operation 510 'and' 'and_ln52_22' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 511 [1/1] (0.00ns)   --->   "%shl_ln50_9 = shl i64 %mem_addr_13_read, i64 1" [d2.cpp:50]   --->   Operation 511 'shl' 'shl_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 512 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i64 %shl_ln50_9" [d2.cpp:50]   --->   Operation 512 'zext' 'zext_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 513 [1/1] (7.30ns)   --->   "%mem_addr_14_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_14" [d2.cpp:50]   --->   Operation 513 'read' 'mem_addr_14_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 514 [1/8] (7.30ns)   --->   "%mem_load_13_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr, i32 1" [d2.cpp:50]   --->   Operation 514 'readreq' 'mem_load_13_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 515 [2/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 515 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 516 [3/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 516 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 517 [4/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 517 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 518 [5/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 518 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 519 [6/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 519 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 520 [7/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 520 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node k_8_43)   --->   "%xor_ln53 = xor i1 %tmp_4, i1 1" [d2.cpp:53]   --->   Operation 521 'xor' 'xor_ln53' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 522 [1/1] (0.00ns) (grouped into LUT with out node k_8_43)   --->   "%zext_ln53_11 = zext i1 %xor_ln53" [d2.cpp:53]   --->   Operation 522 'zext' 'zext_ln53_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 523 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_8_43 = sub i4 %k_7_42, i4 %zext_ln53_11" [d2.cpp:53]   --->   Operation 523 'sub' 'k_8_43' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 524 [1/1] (0.00ns)   --->   "%sext_ln50_11 = sext i61 %trunc_ln50_10" [d2.cpp:50]   --->   Operation 524 'sext' 'sext_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 525 [1/1] (0.00ns)   --->   "%mem_addr_21 = getelementptr i64 %mem, i64 %sext_ln50_11" [d2.cpp:50]   --->   Operation 525 'getelementptr' 'mem_addr_21' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 526 [8/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 526 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 527 [1/1] (0.00ns)   --->   "%shl_ln52_8 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_8_43, i3 0" [d2.cpp:52]   --->   Operation 527 'bitconcatenate' 'shl_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 528 [1/1] (0.00ns)   --->   "%sext_ln52_34 = sext i7 %shl_ln52_8" [d2.cpp:52]   --->   Operation 528 'sext' 'sext_ln52_34' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : Operation 529 [1/1] (1.08ns)   --->   "%add_ln52_8 = add i64 %sext_ln52_34, i64 %arg2_read" [d2.cpp:52]   --->   Operation 529 'add' 'add_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 530 [1/1] (0.00ns)   --->   "%trunc_ln52_9 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_8, i32 3, i32 63" [d2.cpp:52]   --->   Operation 530 'partselect' 'trunc_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_27 : [1/1] (1.02ns)   --->   Input mux for Operation 531 '%mul_ln52_33 = mul i128 %zext_ln50_7, i128 %zext_ln50'
ST_27 : Operation 531 [1/1] (3.50ns)   --->   "%mul_ln52_33 = mul i128 %zext_ln50_7, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 531 'mul' 'mul_ln52_33' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 532 [1/1] (0.00ns)   --->   "%shl_ln50_11 = shl i64 %mem_addr_14_read, i64 1" [d2.cpp:50]   --->   Operation 532 'shl' 'shl_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 533 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i64 %shl_ln50_11" [d2.cpp:50]   --->   Operation 533 'zext' 'zext_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 534 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr" [d2.cpp:50]   --->   Operation 534 'read' 'mem_addr_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 535 [1/8] (7.30ns)   --->   "%mem_load_14_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_15, i32 1" [d2.cpp:50]   --->   Operation 535 'readreq' 'mem_load_14_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 536 [2/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 536 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 537 [3/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 537 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 538 [4/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 538 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 539 [5/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 539 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 540 [6/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 540 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 541 [7/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 541 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 542 [1/1] (0.00ns)   --->   "%zext_ln51_8 = zext i1 %icmp_ln50_9" [d2.cpp:51]   --->   Operation 542 'zext' 'zext_ln51_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 543 [1/1] (0.79ns)   --->   "%k_11 = sub i4 %k_10, i4 %zext_ln51_8" [d2.cpp:51]   --->   Operation 543 'sub' 'k_11' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 544 [1/1] (0.00ns)   --->   "%sext_ln52_36 = sext i61 %trunc_ln52_9" [d2.cpp:52]   --->   Operation 544 'sext' 'sext_ln52_36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 545 [1/1] (0.00ns)   --->   "%mem_addr_22 = getelementptr i64 %mem, i64 %sext_ln52_36" [d2.cpp:52]   --->   Operation 545 'getelementptr' 'mem_addr_22' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 546 [8/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 546 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 547 [1/1] (0.00ns)   --->   "%shl_ln50_20 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_11, i3 0" [d2.cpp:50]   --->   Operation 547 'bitconcatenate' 'shl_ln50_20' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 548 [1/1] (0.00ns)   --->   "%zext_ln50_31 = zext i7 %shl_ln50_20" [d2.cpp:50]   --->   Operation 548 'zext' 'zext_ln50_31' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : Operation 549 [1/1] (1.08ns)   --->   "%add_ln50_11 = add i64 %zext_ln50_31, i64 %arg2_read" [d2.cpp:50]   --->   Operation 549 'add' 'add_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 550 [1/1] (0.00ns)   --->   "%trunc_ln50_11 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_11, i32 3, i32 63" [d2.cpp:50]   --->   Operation 550 'partselect' 'trunc_ln50_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_28 : [1/1] (1.02ns)   --->   Input mux for Operation 551 '%mul_ln52_36 = mul i128 %zext_ln50_8, i128 %zext_ln50'
ST_28 : Operation 551 [1/1] (3.50ns)   --->   "%mul_ln52_36 = mul i128 %zext_ln50_8, i128 %zext_ln50" [d2.cpp:52]   --->   Operation 551 'mul' 'mul_ln52_36' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 552 [1/1] (0.00ns)   --->   "%shl_ln50_12 = shl i64 %mem_addr_read, i64 1" [d2.cpp:50]   --->   Operation 552 'shl' 'shl_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 553 [1/1] (0.00ns)   --->   "%zext_ln50_10 = zext i64 %shl_ln50_12" [d2.cpp:50]   --->   Operation 553 'zext' 'zext_ln50_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 554 [1/1] (7.30ns)   --->   "%mem_addr_15_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_15" [d2.cpp:50]   --->   Operation 554 'read' 'mem_addr_15_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 555 [1/8] (7.30ns)   --->   "%mem_load_15_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_16, i32 1" [d2.cpp:52]   --->   Operation 555 'readreq' 'mem_load_15_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 556 [2/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 556 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 557 [3/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 557 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 558 [4/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 558 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 559 [5/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 559 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 560 [6/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 560 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 561 [7/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 561 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 562 [1/1] (0.00ns)   --->   "%zext_ln53_7 = zext i1 %icmp_ln52_8" [d2.cpp:53]   --->   Operation 562 'zext' 'zext_ln53_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 563 [1/1] (0.79ns)   --->   "%k_9_44 = sub i4 %k_8_43, i4 %zext_ln53_7" [d2.cpp:53]   --->   Operation 563 'sub' 'k_9_44' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 564 [1/1] (0.00ns)   --->   "%sext_ln50_12 = sext i61 %trunc_ln50_11" [d2.cpp:50]   --->   Operation 564 'sext' 'sext_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 565 [1/1] (0.00ns)   --->   "%mem_addr_23 = getelementptr i64 %mem, i64 %sext_ln50_12" [d2.cpp:50]   --->   Operation 565 'getelementptr' 'mem_addr_23' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 566 [8/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 566 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 567 [1/1] (0.00ns)   --->   "%shl_ln52_9 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_9_44, i3 0" [d2.cpp:52]   --->   Operation 567 'bitconcatenate' 'shl_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 568 [1/1] (0.00ns)   --->   "%sext_ln52_43 = sext i7 %shl_ln52_9" [d2.cpp:52]   --->   Operation 568 'sext' 'sext_ln52_43' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : Operation 569 [1/1] (1.08ns)   --->   "%add_ln52_9 = add i64 %sext_ln52_43, i64 %arg2_read" [d2.cpp:52]   --->   Operation 569 'add' 'add_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 570 [1/1] (0.00ns)   --->   "%trunc_ln52_s = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_9, i32 3, i32 63" [d2.cpp:52]   --->   Operation 570 'partselect' 'trunc_ln52_s' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_29 : [1/1] (1.02ns)   --->   Input mux for Operation 571 '%mul_ln52_6 = mul i128 %zext_ln50_10, i128 %zext_ln50_9'
ST_29 : Operation 571 [1/1] (3.50ns)   --->   "%mul_ln52_6 = mul i128 %zext_ln50_10, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 571 'mul' 'mul_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_3)   --->   "%select_ln52_3 = select i1 %icmp_ln50_6, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 572 'select' 'select_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 573 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_3 = and i128 %mul_ln52_6, i128 %select_ln52_3" [d2.cpp:52]   --->   Operation 573 'and' 'and_ln52_3' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 574 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_14 = add i128 %and_ln52_2, i128 %and_ln52_3" [d2.cpp:52]   --->   Operation 574 'add' 'add_ln52_14' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 575 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_15 = add i128 %add_ln52_14, i128 %and_ln52_4" [d2.cpp:52]   --->   Operation 575 'add' 'add_ln52_15' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : [1/1] (1.02ns)   --->   Input mux for Operation 576 '%mul_ln52_10 = mul i128 %zext_ln50_10, i128 %zext_ln50_18'
ST_29 : Operation 576 [1/1] (3.50ns)   --->   "%mul_ln52_10 = mul i128 %zext_ln50_10, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 576 'mul' 'mul_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 577 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_7)   --->   "%select_ln52_7 = select i1 %icmp_ln50_11, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 577 'select' 'select_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 578 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_7 = and i128 %mul_ln52_10, i128 %select_ln52_7" [d2.cpp:52]   --->   Operation 578 'and' 'and_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 579 [1/1] (0.00ns)   --->   "%add47_1172244_load = load i128 %add47_1172244" [d2.cpp:52]   --->   Operation 579 'load' 'add47_1172244_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 580 [1/1] (0.00ns)   --->   "%shl_ln50_13 = shl i64 %mem_addr_15_read, i64 1" [d2.cpp:50]   --->   Operation 580 'shl' 'shl_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 581 [1/1] (0.00ns)   --->   "%zext_ln50_12 = zext i64 %shl_ln50_13" [d2.cpp:50]   --->   Operation 581 'zext' 'zext_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 582 [1/1] (7.30ns)   --->   "%mem_addr_16_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_16" [d2.cpp:52]   --->   Operation 582 'read' 'mem_addr_16_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 583 [1/8] (7.30ns)   --->   "%mem_load_16_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_17, i32 1" [d2.cpp:50]   --->   Operation 583 'readreq' 'mem_load_16_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 584 [2/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 584 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 585 [3/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 585 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 586 [4/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 586 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 587 [5/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 587 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 588 [6/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 588 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 589 [7/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 589 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 590 [1/1] (0.00ns)   --->   "%zext_ln51_9 = zext i1 %icmp_ln50_10" [d2.cpp:51]   --->   Operation 590 'zext' 'zext_ln51_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 591 [1/1] (0.79ns)   --->   "%k_12 = sub i4 %k_11, i4 %zext_ln51_9" [d2.cpp:51]   --->   Operation 591 'sub' 'k_12' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 592 [1/1] (0.00ns)   --->   "%sext_ln52_48 = sext i61 %trunc_ln52_s" [d2.cpp:52]   --->   Operation 592 'sext' 'sext_ln52_48' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 593 [1/1] (0.00ns)   --->   "%mem_addr_24 = getelementptr i64 %mem, i64 %sext_ln52_48" [d2.cpp:52]   --->   Operation 593 'getelementptr' 'mem_addr_24' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 594 [8/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 594 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 595 [1/1] (0.00ns)   --->   "%shl_ln50_22 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_12, i3 0" [d2.cpp:50]   --->   Operation 595 'bitconcatenate' 'shl_ln50_22' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 596 [1/1] (0.00ns)   --->   "%zext_ln50_32 = zext i7 %shl_ln50_22" [d2.cpp:50]   --->   Operation 596 'zext' 'zext_ln50_32' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 597 [1/1] (1.08ns)   --->   "%add_ln50_12 = add i64 %zext_ln50_32, i64 %arg2_read" [d2.cpp:50]   --->   Operation 597 'add' 'add_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 598 [1/1] (0.00ns)   --->   "%trunc_ln50_12 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_12, i32 3, i32 63" [d2.cpp:50]   --->   Operation 598 'partselect' 'trunc_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_30 : Operation 599 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_16 = add i128 %add_ln52_15, i128 %mul_ln52_5" [d2.cpp:52]   --->   Operation 599 'add' 'add_ln52_16' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 600 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_17 = add i128 %add47_1172244_load, i128 %add_ln52_16" [d2.cpp:52]   --->   Operation 600 'add' 'add_ln52_17' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : [1/1] (1.02ns)   --->   Input mux for Operation 601 '%mul_ln52_11 = mul i128 %zext_ln50_12, i128 %zext_ln50_9'
ST_30 : Operation 601 [1/1] (3.50ns)   --->   "%mul_ln52_11 = mul i128 %zext_ln50_12, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 601 'mul' 'mul_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 602 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_8)   --->   "%select_ln52_8 = select i1 %icmp_ln50_7, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 602 'select' 'select_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 603 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_8 = and i128 %mul_ln52_11, i128 %select_ln52_8" [d2.cpp:52]   --->   Operation 603 'and' 'and_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 604 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_17, i128 %add47_1172244" [d2.cpp:36]   --->   Operation 604 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 605 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i64 %mem_addr_16_read" [d2.cpp:52]   --->   Operation 605 'zext' 'zext_ln52_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_31 : Operation 606 [1/1] (7.30ns)   --->   "%mem_addr_17_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_17" [d2.cpp:50]   --->   Operation 606 'read' 'mem_addr_17_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 607 [1/8] (7.30ns)   --->   "%mem_load_17_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_18, i32 1" [d2.cpp:52]   --->   Operation 607 'readreq' 'mem_load_17_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 608 [2/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 608 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 609 [3/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 609 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 610 [4/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 610 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 611 [5/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 611 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 612 [6/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 612 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 613 [7/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 613 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 614 [1/1] (0.00ns)   --->   "%sext_ln50_13 = sext i61 %trunc_ln50_12" [d2.cpp:50]   --->   Operation 614 'sext' 'sext_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_31 : Operation 615 [1/1] (0.00ns)   --->   "%mem_addr_25 = getelementptr i64 %mem, i64 %sext_ln50_13" [d2.cpp:50]   --->   Operation 615 'getelementptr' 'mem_addr_25' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_31 : Operation 616 [8/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 616 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : [1/1] (1.02ns)   --->   Input mux for Operation 617 '%mul_ln52_9 = mul i128 %zext_ln52_7, i128 %zext_ln50_9'
ST_31 : Operation 617 [1/1] (3.50ns)   --->   "%mul_ln52_9 = mul i128 %zext_ln52_7, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 617 'mul' 'mul_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 618 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_6)   --->   "%select_ln52_6 = select i1 %icmp_ln52_6, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 618 'select' 'select_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 619 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_6 = and i128 %mul_ln52_9, i128 %select_ln52_6" [d2.cpp:52]   --->   Operation 619 'and' 'and_ln52_6' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 620 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_19 = add i128 %and_ln52_8, i128 %and_ln52_6" [d2.cpp:52]   --->   Operation 620 'add' 'add_ln52_19' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 621 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_20 = add i128 %add_ln52_19, i128 %and_ln52_7" [d2.cpp:52]   --->   Operation 621 'add' 'add_ln52_20' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 622 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_13)   --->   "%select_ln50_2 = select i1 %icmp_ln50_11, i64 56, i64 64" [d2.cpp:50]   --->   Operation 622 'select' 'select_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 623 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln50_13 = add i64 %select_ln50_2, i64 %arg2_read" [d2.cpp:50]   --->   Operation 623 'add' 'add_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 624 [1/1] (0.00ns)   --->   "%trunc_ln50_13 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_13, i32 3, i32 63" [d2.cpp:50]   --->   Operation 624 'partselect' 'trunc_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_31 : [1/1] (1.02ns)   --->   Input mux for Operation 625 '%mul_ln52_17 = mul i128 %zext_ln52_7, i128 %zext_ln50_18'
ST_31 : Operation 625 [1/1] (3.50ns)   --->   "%mul_ln52_17 = mul i128 %zext_ln52_7, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 625 'mul' 'mul_ln52_17' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 626 [1/1] (0.00ns)   --->   "%add47_198245_load = load i128 %add47_198245" [d2.cpp:52]   --->   Operation 626 'load' 'add47_198245_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 627 [1/1] (0.00ns)   --->   "%shl_ln50_15 = shl i64 %mem_addr_17_read, i64 1" [d2.cpp:50]   --->   Operation 627 'shl' 'shl_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 628 [1/1] (0.00ns)   --->   "%zext_ln50_13 = zext i64 %shl_ln50_15" [d2.cpp:50]   --->   Operation 628 'zext' 'zext_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 629 [1/1] (7.30ns)   --->   "%mem_addr_18_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_18" [d2.cpp:52]   --->   Operation 629 'read' 'mem_addr_18_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 630 [1/8] (7.30ns)   --->   "%mem_load_18_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_19, i32 1" [d2.cpp:50]   --->   Operation 630 'readreq' 'mem_load_18_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 631 [2/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 631 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 632 [3/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 632 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 633 [4/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 633 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 634 [5/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 634 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 635 [6/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 635 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 636 [7/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 636 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 637 [1/1] (0.67ns)   --->   "%add_ln50_19 = add i3 %trunc_ln36, i3 6" [d2.cpp:50]   --->   Operation 637 'add' 'add_ln50_19' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 638 [1/1] (0.00ns) (grouped into LUT with out node k_14)   --->   "%k_13 = select i1 %icmp_ln50_11, i4 7, i4 8" [d2.cpp:51]   --->   Operation 638 'select' 'k_13' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_32 : Operation 639 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_21 = add i128 %add_ln52_20, i128 %add_ln52_18" [d2.cpp:52]   --->   Operation 639 'add' 'add_ln52_21' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 640 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_22 = add i128 %add47_198245_load, i128 %add_ln52_21" [d2.cpp:52]   --->   Operation 640 'add' 'add_ln52_22' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 641 [1/1] (0.00ns)   --->   "%sext_ln50_14 = sext i61 %trunc_ln50_13" [d2.cpp:50]   --->   Operation 641 'sext' 'sext_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 642 [1/1] (0.00ns)   --->   "%mem_addr_26 = getelementptr i64 %mem, i64 %sext_ln50_14" [d2.cpp:50]   --->   Operation 642 'getelementptr' 'mem_addr_26' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 643 [8/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 643 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 644 [1/1] (0.67ns)   --->   "%icmp_ln50_12 = icmp_ugt  i3 %add_ln50_19, i3 4" [d2.cpp:50]   --->   Operation 644 'icmp' 'icmp_ln50_12' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 645 [1/1] (0.00ns) (grouped into LUT with out node k_14)   --->   "%zext_ln51_10 = zext i1 %icmp_ln50_12" [d2.cpp:51]   --->   Operation 645 'zext' 'zext_ln51_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 646 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_14 = sub i4 %k_13, i4 %zext_ln51_10" [d2.cpp:51]   --->   Operation 646 'sub' 'k_14' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : [1/1] (1.02ns)   --->   Input mux for Operation 647 '%mul_ln52_16 = mul i128 %zext_ln50_13, i128 %zext_ln50_9'
ST_32 : Operation 647 [1/1] (3.50ns)   --->   "%mul_ln52_16 = mul i128 %zext_ln50_13, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 647 'mul' 'mul_ln52_16' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 648 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_13)   --->   "%select_ln52_13 = select i1 %icmp_ln50_8, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 648 'select' 'select_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_32 : Operation 649 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_13 = and i128 %mul_ln52_16, i128 %select_ln52_13" [d2.cpp:52]   --->   Operation 649 'and' 'and_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 650 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_23 = add i128 %and_ln52_10, i128 %and_ln52_13" [d2.cpp:52]   --->   Operation 650 'add' 'add_ln52_23' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 651 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_24 = add i128 %add_ln52_23, i128 %and_ln52_15" [d2.cpp:52]   --->   Operation 651 'add' 'add_ln52_24' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 652 [1/1] (0.00ns)   --->   "%shl_ln50_25 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_14, i3 0" [d2.cpp:50]   --->   Operation 652 'bitconcatenate' 'shl_ln50_25' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 653 [1/1] (0.00ns)   --->   "%zext_ln50_33 = zext i7 %shl_ln50_25" [d2.cpp:50]   --->   Operation 653 'zext' 'zext_ln50_33' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 654 [1/1] (1.08ns)   --->   "%add_ln50_14 = add i64 %zext_ln50_33, i64 %arg2_read" [d2.cpp:50]   --->   Operation 654 'add' 'add_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 655 [1/1] (0.00ns)   --->   "%trunc_ln50_14 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_14, i32 3, i32 63" [d2.cpp:50]   --->   Operation 655 'partselect' 'trunc_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 656 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %add_ln50_19, i32 2" [d2.cpp:51]   --->   Operation 656 'bitselect' 'tmp_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 657 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %add_ln50_19, i32 1, i32 2" [d2.cpp:50]   --->   Operation 657 'partselect' 'tmp_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 658 [1/1] (0.54ns)   --->   "%icmp_ln50_14 = icmp_ne  i2 %tmp_9, i2 0" [d2.cpp:50]   --->   Operation 658 'icmp' 'icmp_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 659 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %add_ln50_19, i32 1, i32 2" [d2.cpp:52]   --->   Operation 659 'partselect' 'tmp_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_32 : Operation 660 [1/1] (0.54ns)   --->   "%icmp_ln52_12 = icmp_eq  i2 %tmp_10, i2 0" [d2.cpp:52]   --->   Operation 660 'icmp' 'icmp_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 661 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_22, i128 %add47_198245" [d2.cpp:36]   --->   Operation 661 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 662 [1/1] (0.00ns)   --->   "%zext_ln52_8 = zext i64 %mem_addr_18_read" [d2.cpp:52]   --->   Operation 662 'zext' 'zext_ln52_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 663 [1/1] (7.30ns)   --->   "%mem_addr_19_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_19" [d2.cpp:50]   --->   Operation 663 'read' 'mem_addr_19_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 664 [1/8] (7.30ns)   --->   "%mem_load_19_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_20, i32 1" [d2.cpp:52]   --->   Operation 664 'readreq' 'mem_load_19_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 665 [2/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 665 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 666 [3/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 666 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 667 [4/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 667 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 668 [5/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 668 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 669 [6/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 669 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 670 [7/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 670 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 671 [1/1] (0.67ns)   --->   "%icmp_ln52_10 = icmp_ult  i3 %add_ln50_19, i3 5" [d2.cpp:52]   --->   Operation 671 'icmp' 'icmp_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : [1/1] (1.02ns)   --->   Input mux for Operation 672 '%mul_ln52_14 = mul i128 %zext_ln52_8, i128 %zext_ln50_9'
ST_33 : Operation 672 [1/1] (3.50ns)   --->   "%mul_ln52_14 = mul i128 %zext_ln52_8, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 672 'mul' 'mul_ln52_14' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 673 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_11)   --->   "%select_ln52_11 = select i1 %icmp_ln52_7, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 673 'select' 'select_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_33 : Operation 674 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_11 = and i128 %mul_ln52_14, i128 %select_ln52_11" [d2.cpp:52]   --->   Operation 674 'and' 'and_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 675 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_14)   --->   "%select_ln52_14 = select i1 %icmp_ln52_10, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 675 'select' 'select_ln52_14' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_33 : Operation 676 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_14 = and i128 %mul_ln52_17, i128 %select_ln52_14" [d2.cpp:52]   --->   Operation 676 'and' 'and_ln52_14' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 677 [1/1] (0.00ns)   --->   "%zext_ln53_8 = zext i1 %icmp_ln52_10" [d2.cpp:53]   --->   Operation 677 'zext' 'zext_ln53_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 678 [1/1] (0.79ns)   --->   "%k_10_45 = sub i4 %k_5, i4 %zext_ln53_8" [d2.cpp:53]   --->   Operation 678 'sub' 'k_10_45' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 679 [1/1] (0.00ns)   --->   "%sext_ln50_15 = sext i61 %trunc_ln50_14" [d2.cpp:50]   --->   Operation 679 'sext' 'sext_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 680 [1/1] (0.00ns)   --->   "%mem_addr_27 = getelementptr i64 %mem, i64 %sext_ln50_15" [d2.cpp:50]   --->   Operation 680 'getelementptr' 'mem_addr_27' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 681 [8/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 681 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 682 [1/1] (0.00ns)   --->   "%shl_ln52_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_10_45, i3 0" [d2.cpp:52]   --->   Operation 682 'bitconcatenate' 'shl_ln52_s' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 683 [1/1] (0.00ns)   --->   "%sext_ln52_51 = sext i7 %shl_ln52_s" [d2.cpp:52]   --->   Operation 683 'sext' 'sext_ln52_51' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_33 : Operation 684 [1/1] (1.08ns)   --->   "%add_ln52_29 = add i64 %sext_ln52_51, i64 %arg2_read" [d2.cpp:52]   --->   Operation 684 'add' 'add_ln52_29' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 685 [1/1] (0.00ns)   --->   "%trunc_ln52_10 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_29, i32 3, i32 63" [d2.cpp:52]   --->   Operation 685 'partselect' 'trunc_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 686 [1/1] (0.00ns)   --->   "%shl_ln50_17 = shl i64 %mem_addr_19_read, i64 1" [d2.cpp:50]   --->   Operation 686 'shl' 'shl_ln50_17' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 687 [1/1] (0.00ns)   --->   "%zext_ln50_14 = zext i64 %shl_ln50_17" [d2.cpp:50]   --->   Operation 687 'zext' 'zext_ln50_14' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 688 [1/1] (7.30ns)   --->   "%mem_addr_20_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_20" [d2.cpp:52]   --->   Operation 688 'read' 'mem_addr_20_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 689 [1/8] (7.30ns)   --->   "%mem_load_20_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_21, i32 1" [d2.cpp:50]   --->   Operation 689 'readreq' 'mem_load_20_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 690 [2/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 690 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 691 [3/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 691 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 692 [4/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 692 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 693 [5/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 693 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 694 [6/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 694 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 695 [7/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 695 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 696 [1/1] (0.00ns)   --->   "%zext_ln51_11 = zext i1 %tmp_8" [d2.cpp:51]   --->   Operation 696 'zext' 'zext_ln51_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 697 [1/1] (0.79ns)   --->   "%k_15 = sub i4 %k_14, i4 %zext_ln51_11" [d2.cpp:51]   --->   Operation 697 'sub' 'k_15' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 698 [1/1] (0.00ns)   --->   "%sext_ln52_52 = sext i61 %trunc_ln52_10" [d2.cpp:52]   --->   Operation 698 'sext' 'sext_ln52_52' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 699 [1/1] (0.00ns)   --->   "%mem_addr_28 = getelementptr i64 %mem, i64 %sext_ln52_52" [d2.cpp:52]   --->   Operation 699 'getelementptr' 'mem_addr_28' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 700 [8/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 700 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : [1/1] (1.02ns)   --->   Input mux for Operation 701 '%mul_ln52_22 = mul i128 %zext_ln50_14, i128 %zext_ln50_9'
ST_34 : Operation 701 [1/1] (3.50ns)   --->   "%mul_ln52_22 = mul i128 %zext_ln50_14, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 701 'mul' 'mul_ln52_22' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 702 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_19)   --->   "%select_ln52_19 = select i1 %tmp_4, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 702 'select' 'select_ln52_19' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 703 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_19 = and i128 %mul_ln52_22, i128 %select_ln52_19" [d2.cpp:52]   --->   Operation 703 'and' 'and_ln52_19' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 704 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_30 = add i128 %and_ln52_16, i128 %and_ln52_19" [d2.cpp:52]   --->   Operation 704 'add' 'add_ln52_30' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 705 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_31 = add i128 %add_ln52_30, i128 %and_ln52_21" [d2.cpp:52]   --->   Operation 705 'add' 'add_ln52_31' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 706 [1/1] (0.00ns)   --->   "%shl_ln50_27 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_15, i3 0" [d2.cpp:50]   --->   Operation 706 'bitconcatenate' 'shl_ln50_27' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 707 [1/1] (0.00ns)   --->   "%zext_ln50_34 = zext i7 %shl_ln50_27" [d2.cpp:50]   --->   Operation 707 'zext' 'zext_ln50_34' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_34 : Operation 708 [1/1] (1.08ns)   --->   "%add_ln50_15 = add i64 %zext_ln50_34, i64 %arg2_read" [d2.cpp:50]   --->   Operation 708 'add' 'add_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 709 [1/1] (0.00ns)   --->   "%trunc_ln50_15 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_15, i32 3, i32 63" [d2.cpp:50]   --->   Operation 709 'partselect' 'trunc_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 710 [1/1] (0.00ns)   --->   "%zext_ln52_9 = zext i64 %mem_addr_20_read" [d2.cpp:52]   --->   Operation 710 'zext' 'zext_ln52_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 711 [1/1] (7.30ns)   --->   "%mem_addr_21_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_21" [d2.cpp:50]   --->   Operation 711 'read' 'mem_addr_21_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 712 [1/8] (7.30ns)   --->   "%mem_load_21_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_22, i32 1" [d2.cpp:52]   --->   Operation 712 'readreq' 'mem_load_21_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 713 [2/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 713 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 714 [3/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 714 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 715 [4/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 715 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 716 [5/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 716 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 717 [6/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 717 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 718 [7/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 718 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : [1/1] (1.02ns)   --->   Input mux for Operation 719 '%mul_ln52_20 = mul i128 %zext_ln52_9, i128 %zext_ln50_9'
ST_35 : Operation 719 [1/1] (3.50ns)   --->   "%mul_ln52_20 = mul i128 %zext_ln52_9, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 719 'mul' 'mul_ln52_20' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 720 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_17)   --->   "%xor_ln52 = xor i1 %tmp_4, i1 1" [d2.cpp:52]   --->   Operation 720 'xor' 'xor_ln52' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 721 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_17)   --->   "%select_ln52_17 = select i1 %xor_ln52, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 721 'select' 'select_ln52_17' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_35 : Operation 722 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_17 = and i128 %mul_ln52_20, i128 %select_ln52_17" [d2.cpp:52]   --->   Operation 722 'and' 'and_ln52_17' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 723 [1/1] (0.00ns) (grouped into LUT with out node k_11_46)   --->   "%xor_ln53_1 = xor i1 %tmp_8, i1 1" [d2.cpp:53]   --->   Operation 723 'xor' 'xor_ln53_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 724 [1/1] (0.00ns) (grouped into LUT with out node k_11_46)   --->   "%zext_ln53_12 = zext i1 %xor_ln53_1" [d2.cpp:53]   --->   Operation 724 'zext' 'zext_ln53_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 725 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_11_46 = sub i4 %k_10_45, i4 %zext_ln53_12" [d2.cpp:53]   --->   Operation 725 'sub' 'k_11_46' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 726 [1/1] (0.00ns)   --->   "%sext_ln50_16 = sext i61 %trunc_ln50_15" [d2.cpp:50]   --->   Operation 726 'sext' 'sext_ln50_16' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 727 [1/1] (0.00ns)   --->   "%mem_addr_29 = getelementptr i64 %mem, i64 %sext_ln50_16" [d2.cpp:50]   --->   Operation 727 'getelementptr' 'mem_addr_29' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 728 [8/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 728 'readreq' 'mem_load_28_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 729 [1/1] (0.00ns)   --->   "%shl_ln52_10 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_11_46, i3 0" [d2.cpp:52]   --->   Operation 729 'bitconcatenate' 'shl_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 730 [1/1] (0.00ns)   --->   "%sext_ln52_53 = sext i7 %shl_ln52_10" [d2.cpp:52]   --->   Operation 730 'sext' 'sext_ln52_53' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_35 : Operation 731 [1/1] (1.08ns)   --->   "%add_ln52_36 = add i64 %sext_ln52_53, i64 %arg2_read" [d2.cpp:52]   --->   Operation 731 'add' 'add_ln52_36' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 732 [1/1] (0.00ns)   --->   "%trunc_ln52_11 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_36, i32 3, i32 63" [d2.cpp:52]   --->   Operation 732 'partselect' 'trunc_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 733 [1/1] (0.00ns)   --->   "%shl_ln50_19 = shl i64 %mem_addr_21_read, i64 1" [d2.cpp:50]   --->   Operation 733 'shl' 'shl_ln50_19' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 734 [1/1] (0.00ns)   --->   "%zext_ln50_15 = zext i64 %shl_ln50_19" [d2.cpp:50]   --->   Operation 734 'zext' 'zext_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 735 [1/1] (7.30ns)   --->   "%mem_addr_22_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_22" [d2.cpp:52]   --->   Operation 735 'read' 'mem_addr_22_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 736 [1/8] (7.30ns)   --->   "%mem_load_22_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_23, i32 1" [d2.cpp:50]   --->   Operation 736 'readreq' 'mem_load_22_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 737 [2/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 737 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 738 [3/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 738 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 739 [4/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 739 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 740 [5/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 740 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 741 [6/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 741 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 742 [7/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 742 'readreq' 'mem_load_28_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 743 [1/1] (0.67ns)   --->   "%icmp_ln50_13 = icmp_ugt  i3 %add_ln50_19, i3 2" [d2.cpp:50]   --->   Operation 743 'icmp' 'icmp_ln50_13' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 744 [1/1] (0.00ns)   --->   "%zext_ln51_12 = zext i1 %icmp_ln50_13" [d2.cpp:51]   --->   Operation 744 'zext' 'zext_ln51_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 745 [1/1] (0.79ns)   --->   "%k_16 = sub i4 %k_15, i4 %zext_ln51_12" [d2.cpp:51]   --->   Operation 745 'sub' 'k_16' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 746 [1/1] (0.00ns)   --->   "%sext_ln52_54 = sext i61 %trunc_ln52_11" [d2.cpp:52]   --->   Operation 746 'sext' 'sext_ln52_54' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 747 [1/1] (0.00ns)   --->   "%mem_addr_30 = getelementptr i64 %mem, i64 %sext_ln52_54" [d2.cpp:52]   --->   Operation 747 'getelementptr' 'mem_addr_30' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 748 [8/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 748 'readreq' 'mem_load_29_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 749 [1/1] (0.67ns)   --->   "%icmp_ln52_11 = icmp_ult  i3 %add_ln50_19, i3 3" [d2.cpp:52]   --->   Operation 749 'icmp' 'icmp_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : [1/1] (1.02ns)   --->   Input mux for Operation 750 '%mul_ln52_28 = mul i128 %zext_ln50_15, i128 %zext_ln50_9'
ST_36 : Operation 750 [1/1] (3.50ns)   --->   "%mul_ln52_28 = mul i128 %zext_ln50_15, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 750 'mul' 'mul_ln52_28' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 751 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_25)   --->   "%select_ln52_25 = select i1 %icmp_ln50_9, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 751 'select' 'select_ln52_25' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 752 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_25 = and i128 %mul_ln52_28, i128 %select_ln52_25" [d2.cpp:52]   --->   Operation 752 'and' 'and_ln52_25' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 753 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_37 = add i128 %and_ln52_22, i128 %and_ln52_25" [d2.cpp:52]   --->   Operation 753 'add' 'add_ln52_37' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 754 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_38 = add i128 %add_ln52_37, i128 %and_ln52_27" [d2.cpp:52]   --->   Operation 754 'add' 'add_ln52_38' <Predicate = (!icmp_ln36)> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 755 [1/1] (0.00ns)   --->   "%shl_ln50_29 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_16, i3 0" [d2.cpp:50]   --->   Operation 755 'bitconcatenate' 'shl_ln50_29' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 756 [1/1] (0.00ns)   --->   "%zext_ln50_35 = zext i7 %shl_ln50_29" [d2.cpp:50]   --->   Operation 756 'zext' 'zext_ln50_35' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 757 [1/1] (1.08ns)   --->   "%add_ln50_16 = add i64 %zext_ln50_35, i64 %arg2_read" [d2.cpp:50]   --->   Operation 757 'add' 'add_ln50_16' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 758 [1/1] (0.00ns)   --->   "%trunc_ln50_16 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_16, i32 3, i32 63" [d2.cpp:50]   --->   Operation 758 'partselect' 'trunc_ln50_16' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_36 : Operation 759 [1/1] (0.67ns)   --->   "%icmp_ln50_15 = icmp_ne  i3 %add_ln50_19, i3 0" [d2.cpp:50]   --->   Operation 759 'icmp' 'icmp_ln50_15' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 760 [1/1] (0.67ns)   --->   "%icmp_ln52_13 = icmp_eq  i3 %add_ln50_19, i3 0" [d2.cpp:52]   --->   Operation 760 'icmp' 'icmp_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 761 [1/1] (0.00ns)   --->   "%zext_ln52_10 = zext i64 %mem_addr_22_read" [d2.cpp:52]   --->   Operation 761 'zext' 'zext_ln52_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 762 [1/1] (7.30ns)   --->   "%mem_addr_23_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_23" [d2.cpp:50]   --->   Operation 762 'read' 'mem_addr_23_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 763 [1/8] (7.30ns)   --->   "%mem_load_23_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_24, i32 1" [d2.cpp:52]   --->   Operation 763 'readreq' 'mem_load_23_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 764 [2/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 764 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 765 [3/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 765 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 766 [4/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 766 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 767 [5/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 767 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 768 [6/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 768 'readreq' 'mem_load_28_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 769 [7/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 769 'readreq' 'mem_load_29_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : [1/1] (1.02ns)   --->   Input mux for Operation 770 '%mul_ln52_26 = mul i128 %zext_ln52_10, i128 %zext_ln50_9'
ST_37 : Operation 770 [1/1] (3.50ns)   --->   "%mul_ln52_26 = mul i128 %zext_ln52_10, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 770 'mul' 'mul_ln52_26' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_23)   --->   "%select_ln52_23 = select i1 %icmp_ln52_8, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 771 'select' 'select_ln52_23' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 772 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_23 = and i128 %mul_ln52_26, i128 %select_ln52_23" [d2.cpp:52]   --->   Operation 772 'and' 'and_ln52_23' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 773 [1/1] (0.00ns)   --->   "%zext_ln53_9 = zext i1 %icmp_ln52_11" [d2.cpp:53]   --->   Operation 773 'zext' 'zext_ln53_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 774 [1/1] (0.79ns)   --->   "%k_12_47 = sub i4 %k_11_46, i4 %zext_ln53_9" [d2.cpp:53]   --->   Operation 774 'sub' 'k_12_47' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 775 [1/1] (0.00ns)   --->   "%sext_ln50_17 = sext i61 %trunc_ln50_16" [d2.cpp:50]   --->   Operation 775 'sext' 'sext_ln50_17' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 776 [1/1] (0.00ns)   --->   "%mem_addr_31 = getelementptr i64 %mem, i64 %sext_ln50_17" [d2.cpp:50]   --->   Operation 776 'getelementptr' 'mem_addr_31' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 777 [8/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 777 'readreq' 'mem_load_30_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 778 [1/1] (0.00ns)   --->   "%shl_ln52_11 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_12_47, i3 0" [d2.cpp:52]   --->   Operation 778 'bitconcatenate' 'shl_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 779 [1/1] (0.00ns)   --->   "%sext_ln52_55 = sext i7 %shl_ln52_11" [d2.cpp:52]   --->   Operation 779 'sext' 'sext_ln52_55' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_37 : Operation 780 [1/1] (1.08ns)   --->   "%add_ln52_43 = add i64 %sext_ln52_55, i64 %arg2_read" [d2.cpp:52]   --->   Operation 780 'add' 'add_ln52_43' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 781 [1/1] (0.00ns)   --->   "%trunc_ln52_12 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_43, i32 3, i32 63" [d2.cpp:52]   --->   Operation 781 'partselect' 'trunc_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 782 [1/1] (0.00ns)   --->   "%shl_ln50_21 = shl i64 %mem_addr_23_read, i64 1" [d2.cpp:50]   --->   Operation 782 'shl' 'shl_ln50_21' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 783 [1/1] (0.00ns)   --->   "%zext_ln50_16 = zext i64 %shl_ln50_21" [d2.cpp:50]   --->   Operation 783 'zext' 'zext_ln50_16' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 784 [1/1] (7.30ns)   --->   "%mem_addr_24_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_24" [d2.cpp:52]   --->   Operation 784 'read' 'mem_addr_24_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 785 [1/8] (7.30ns)   --->   "%mem_load_24_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_25, i32 1" [d2.cpp:50]   --->   Operation 785 'readreq' 'mem_load_24_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 786 [2/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 786 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 787 [3/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 787 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 788 [4/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 788 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 789 [5/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 789 'readreq' 'mem_load_28_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 790 [6/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 790 'readreq' 'mem_load_29_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 791 [7/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 791 'readreq' 'mem_load_30_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 792 [1/1] (0.00ns)   --->   "%zext_ln51_13 = zext i1 %icmp_ln50_14" [d2.cpp:51]   --->   Operation 792 'zext' 'zext_ln51_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 793 [1/1] (0.79ns)   --->   "%k_17 = sub i4 %k_16, i4 %zext_ln51_13" [d2.cpp:51]   --->   Operation 793 'sub' 'k_17' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 794 [1/1] (0.00ns)   --->   "%sext_ln52_56 = sext i61 %trunc_ln52_12" [d2.cpp:52]   --->   Operation 794 'sext' 'sext_ln52_56' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 795 [1/1] (0.00ns)   --->   "%mem_addr_32 = getelementptr i64 %mem, i64 %sext_ln52_56" [d2.cpp:52]   --->   Operation 795 'getelementptr' 'mem_addr_32' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 796 [8/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 796 'readreq' 'mem_load_31_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : [1/1] (1.02ns)   --->   Input mux for Operation 797 '%mul_ln52_31 = mul i128 %zext_ln50_16, i128 %zext_ln50_9'
ST_38 : Operation 797 [1/1] (3.50ns)   --->   "%mul_ln52_31 = mul i128 %zext_ln50_16, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 797 'mul' 'mul_ln52_31' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 798 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_44)   --->   "%select_ln52_28 = select i1 %icmp_ln50_10, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 798 'select' 'select_ln52_28' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 799 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_44)   --->   "%and_ln52_28 = and i128 %mul_ln52_31, i128 %select_ln52_28" [d2.cpp:52]   --->   Operation 799 'and' 'and_ln52_28' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 800 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln52_44 = add i128 %mul_ln52_33, i128 %and_ln52_28" [d2.cpp:52]   --->   Operation 800 'add' 'add_ln52_44' <Predicate = (!icmp_ln36)> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 801 [1/1] (0.00ns)   --->   "%shl_ln50_31 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_17, i3 0" [d2.cpp:50]   --->   Operation 801 'bitconcatenate' 'shl_ln50_31' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 802 [1/1] (0.00ns)   --->   "%zext_ln50_36 = zext i7 %shl_ln50_31" [d2.cpp:50]   --->   Operation 802 'zext' 'zext_ln50_36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_38 : Operation 803 [1/1] (1.08ns)   --->   "%add_ln50_17 = add i64 %zext_ln50_36, i64 %arg2_read" [d2.cpp:50]   --->   Operation 803 'add' 'add_ln50_17' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 804 [1/1] (0.00ns)   --->   "%trunc_ln50_17 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln50_17, i32 3, i32 63" [d2.cpp:50]   --->   Operation 804 'partselect' 'trunc_ln50_17' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 805 [1/1] (0.00ns)   --->   "%zext_ln52_11 = zext i64 %mem_addr_24_read" [d2.cpp:52]   --->   Operation 805 'zext' 'zext_ln52_11' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 806 [1/1] (7.30ns)   --->   "%mem_addr_25_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_25" [d2.cpp:50]   --->   Operation 806 'read' 'mem_addr_25_read' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 807 [1/8] (7.30ns)   --->   "%mem_load_25_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_26, i32 1" [d2.cpp:50]   --->   Operation 807 'readreq' 'mem_load_25_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 808 [2/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 808 'readreq' 'mem_load_26_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 809 [3/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 809 'readreq' 'mem_load_27_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 810 [4/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 810 'readreq' 'mem_load_28_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 811 [5/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 811 'readreq' 'mem_load_29_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 812 [6/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 812 'readreq' 'mem_load_30_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 813 [7/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 813 'readreq' 'mem_load_31_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : [1/1] (1.02ns)   --->   Input mux for Operation 814 '%mul_ln52_35 = mul i128 %zext_ln52_11, i128 %zext_ln50_9'
ST_39 : Operation 814 [1/1] (3.50ns)   --->   "%mul_ln52_35 = mul i128 %zext_ln52_11, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 814 'mul' 'mul_ln52_35' <Predicate = (!icmp_ln36)> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 815 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_31)   --->   "%select_ln52_31 = select i1 %icmp_ln52_9, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 815 'select' 'select_ln52_31' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 816 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_31 = and i128 %mul_ln52_35, i128 %select_ln52_31" [d2.cpp:52]   --->   Operation 816 'and' 'and_ln52_31' <Predicate = (!icmp_ln36)> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 817 [1/1] (0.00ns)   --->   "%zext_ln53_10 = zext i1 %icmp_ln52_12" [d2.cpp:53]   --->   Operation 817 'zext' 'zext_ln53_10' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 818 [1/1] (0.79ns)   --->   "%k_13_48 = sub i4 %k_12_47, i4 %zext_ln53_10" [d2.cpp:53]   --->   Operation 818 'sub' 'k_13_48' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 819 [1/1] (0.00ns)   --->   "%sext_ln50_18 = sext i61 %trunc_ln50_17" [d2.cpp:50]   --->   Operation 819 'sext' 'sext_ln50_18' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 820 [1/1] (0.00ns)   --->   "%mem_addr_33 = getelementptr i64 %mem, i64 %sext_ln50_18" [d2.cpp:50]   --->   Operation 820 'getelementptr' 'mem_addr_33' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 821 [8/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 821 'readreq' 'mem_load_32_req' <Predicate = (!icmp_ln36)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 822 [1/1] (0.00ns)   --->   "%shl_ln52_12 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %k_13_48, i3 0" [d2.cpp:52]   --->   Operation 822 'bitconcatenate' 'shl_ln52_12' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 823 [1/1] (0.00ns)   --->   "%sext_ln52_57 = sext i7 %shl_ln52_12" [d2.cpp:52]   --->   Operation 823 'sext' 'sext_ln52_57' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_39 : Operation 824 [1/1] (1.08ns)   --->   "%add_ln52_49 = add i64 %sext_ln52_57, i64 %arg2_read" [d2.cpp:52]   --->   Operation 824 'add' 'add_ln52_49' <Predicate = (!icmp_ln36)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 825 [1/1] (0.00ns)   --->   "%trunc_ln52_13 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln52_49, i32 3, i32 63" [d2.cpp:52]   --->   Operation 825 'partselect' 'trunc_ln52_13' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 826 [1/1] (0.00ns)   --->   "%shl_ln50_23 = shl i64 %mem_addr_25_read, i64 1" [d2.cpp:50]   --->   Operation 826 'shl' 'shl_ln50_23' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 827 [1/1] (0.00ns)   --->   "%zext_ln50_17 = zext i64 %shl_ln50_23" [d2.cpp:50]   --->   Operation 827 'zext' 'zext_ln50_17' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 828 [1/1] (7.30ns)   --->   "%mem_addr_26_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_26" [d2.cpp:50]   --->   Operation 828 'read' 'mem_addr_26_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 829 [1/8] (7.30ns)   --->   "%mem_load_26_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_27, i32 1" [d2.cpp:50]   --->   Operation 829 'readreq' 'mem_load_26_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 830 [2/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 830 'readreq' 'mem_load_27_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 831 [3/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 831 'readreq' 'mem_load_28_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 832 [4/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 832 'readreq' 'mem_load_29_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 833 [5/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 833 'readreq' 'mem_load_30_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 834 [6/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 834 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 835 [7/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 835 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 836 [1/1] (0.00ns)   --->   "%sext_ln52_58 = sext i61 %trunc_ln52_13" [d2.cpp:52]   --->   Operation 836 'sext' 'sext_ln52_58' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 837 [1/1] (0.00ns)   --->   "%mem_addr_34 = getelementptr i64 %mem, i64 %sext_ln52_58" [d2.cpp:52]   --->   Operation 837 'getelementptr' 'mem_addr_34' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 838 [8/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 838 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : [1/1] (1.02ns)   --->   Input mux for Operation 839 '%mul_ln52_39 = mul i128 %zext_ln50_17, i128 %zext_ln50_9'
ST_40 : Operation 839 [1/1] (3.50ns)   --->   "%mul_ln52_39 = mul i128 %zext_ln50_17, i128 %zext_ln50_9" [d2.cpp:52]   --->   Operation 839 'mul' 'mul_ln52_39' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 840 [1/1] (1.57ns)   --->   "%add_ln52_50 = add i128 %mul_ln52_36, i128 %mul_ln52_39" [d2.cpp:52]   --->   Operation 840 'add' 'add_ln52_50' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 841 [1/1] (0.00ns)   --->   "%shl_ln50_24 = shl i64 %mem_addr_26_read, i64 1" [d2.cpp:50]   --->   Operation 841 'shl' 'shl_ln50_24' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 842 [1/1] (0.00ns)   --->   "%zext_ln50_20 = zext i64 %shl_ln50_24" [d2.cpp:50]   --->   Operation 842 'zext' 'zext_ln50_20' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (1.02ns)   --->   Input mux for Operation 843 '%mul_ln52_15 = mul i128 %zext_ln50_20, i128 %zext_ln50_18'
ST_41 : Operation 843 [1/1] (3.50ns)   --->   "%mul_ln52_15 = mul i128 %zext_ln50_20, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 843 'mul' 'mul_ln52_15' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 844 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_12)   --->   "%select_ln52_12 = select i1 %icmp_ln50_12, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 844 'select' 'select_ln52_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 845 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_12 = and i128 %mul_ln52_15, i128 %select_ln52_12" [d2.cpp:52]   --->   Operation 845 'and' 'and_ln52_12' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 846 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_25 = add i128 %and_ln52_12, i128 %and_ln52_14" [d2.cpp:52]   --->   Operation 846 'add' 'add_ln52_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 847 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_26 = add i128 %add_ln52_25, i128 %and_ln52_11" [d2.cpp:52]   --->   Operation 847 'add' 'add_ln52_26' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 848 [1/1] (7.30ns)   --->   "%mem_addr_27_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_27" [d2.cpp:50]   --->   Operation 848 'read' 'mem_addr_27_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 849 [1/8] (7.30ns)   --->   "%mem_load_27_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_28, i32 1" [d2.cpp:52]   --->   Operation 849 'readreq' 'mem_load_27_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 850 [2/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 850 'readreq' 'mem_load_28_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 851 [3/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 851 'readreq' 'mem_load_29_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 852 [4/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 852 'readreq' 'mem_load_30_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 853 [5/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 853 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 854 [6/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 854 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 855 [7/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 855 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 856 [1/1] (0.00ns)   --->   "%add47_198_1246_load = load i128 %add47_198_1246" [d2.cpp:52]   --->   Operation 856 'load' 'add47_198_1246_load' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 857 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_27 = add i128 %add_ln52_26, i128 %add_ln52_24" [d2.cpp:52]   --->   Operation 857 'add' 'add_ln52_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 858 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_28 = add i128 %add47_198_1246_load, i128 %add_ln52_27" [d2.cpp:52]   --->   Operation 858 'add' 'add_ln52_28' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 859 [1/1] (0.00ns)   --->   "%shl_ln50_26 = shl i64 %mem_addr_27_read, i64 1" [d2.cpp:50]   --->   Operation 859 'shl' 'shl_ln50_26' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 860 [1/1] (0.00ns)   --->   "%zext_ln50_21 = zext i64 %shl_ln50_26" [d2.cpp:50]   --->   Operation 860 'zext' 'zext_ln50_21' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 861 [1/1] (7.30ns)   --->   "%mem_addr_28_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_28" [d2.cpp:52]   --->   Operation 861 'read' 'mem_addr_28_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : [1/1] (1.02ns)   --->   Input mux for Operation 862 '%mul_ln52_21 = mul i128 %zext_ln50_21, i128 %zext_ln50_18'
ST_42 : Operation 862 [1/1] (3.50ns)   --->   "%mul_ln52_21 = mul i128 %zext_ln50_21, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 862 'mul' 'mul_ln52_21' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 863 [1/8] (7.30ns)   --->   "%mem_load_28_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_29, i32 1" [d2.cpp:50]   --->   Operation 863 'readreq' 'mem_load_28_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 864 [2/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 864 'readreq' 'mem_load_29_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 865 [3/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 865 'readreq' 'mem_load_30_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 866 [4/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 866 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 867 [5/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 867 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 868 [6/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 868 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 869 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_28, i128 %add47_198_1246" [d2.cpp:36]   --->   Operation 869 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln52_13 = zext i64 %mem_addr_28_read" [d2.cpp:52]   --->   Operation 870 'zext' 'zext_ln52_13' <Predicate = true> <Delay = 0.00>
ST_43 : [1/1] (1.02ns)   --->   Input mux for Operation 871 '%mul_ln52_23 = mul i128 %zext_ln52_13, i128 %zext_ln50_18'
ST_43 : Operation 871 [1/1] (3.50ns)   --->   "%mul_ln52_23 = mul i128 %zext_ln52_13, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 871 'mul' 'mul_ln52_23' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 872 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_18)   --->   "%select_ln52_18 = select i1 %tmp_8, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 872 'select' 'select_ln52_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 873 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_18 = and i128 %mul_ln52_21, i128 %select_ln52_18" [d2.cpp:52]   --->   Operation 873 'and' 'and_ln52_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 874 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_20)   --->   "%xor_ln52_1 = xor i1 %tmp_8, i1 1" [d2.cpp:52]   --->   Operation 874 'xor' 'xor_ln52_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_20)   --->   "%select_ln52_20 = select i1 %xor_ln52_1, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 875 'select' 'select_ln52_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 876 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_20 = and i128 %mul_ln52_23, i128 %select_ln52_20" [d2.cpp:52]   --->   Operation 876 'and' 'and_ln52_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 877 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_32 = add i128 %and_ln52_18, i128 %and_ln52_20" [d2.cpp:52]   --->   Operation 877 'add' 'add_ln52_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 878 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_33 = add i128 %add_ln52_32, i128 %and_ln52_17" [d2.cpp:52]   --->   Operation 878 'add' 'add_ln52_33' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 879 [1/1] (7.30ns)   --->   "%mem_addr_29_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_29" [d2.cpp:50]   --->   Operation 879 'read' 'mem_addr_29_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 880 [1/8] (7.30ns)   --->   "%mem_load_29_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_30, i32 1" [d2.cpp:52]   --->   Operation 880 'readreq' 'mem_load_29_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 881 [2/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 881 'readreq' 'mem_load_30_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 882 [3/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 882 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 883 [4/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 883 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 884 [5/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 884 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 885 [1/1] (0.00ns)   --->   "%add47_2134247_load = load i128 %add47_2134247" [d2.cpp:52]   --->   Operation 885 'load' 'add47_2134247_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 886 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_34 = add i128 %add_ln52_33, i128 %add_ln52_31" [d2.cpp:52]   --->   Operation 886 'add' 'add_ln52_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 887 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_35 = add i128 %add47_2134247_load, i128 %add_ln52_34" [d2.cpp:52]   --->   Operation 887 'add' 'add_ln52_35' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 888 [1/1] (0.00ns)   --->   "%shl_ln50_28 = shl i64 %mem_addr_29_read, i64 1" [d2.cpp:50]   --->   Operation 888 'shl' 'shl_ln50_28' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 889 [1/1] (0.00ns)   --->   "%zext_ln50_22 = zext i64 %shl_ln50_28" [d2.cpp:50]   --->   Operation 889 'zext' 'zext_ln50_22' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 890 [1/1] (7.30ns)   --->   "%mem_addr_30_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_30" [d2.cpp:52]   --->   Operation 890 'read' 'mem_addr_30_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : [1/1] (1.02ns)   --->   Input mux for Operation 891 '%mul_ln52_27 = mul i128 %zext_ln50_22, i128 %zext_ln50_18'
ST_44 : Operation 891 [1/1] (3.50ns)   --->   "%mul_ln52_27 = mul i128 %zext_ln50_22, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 891 'mul' 'mul_ln52_27' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 892 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_24)   --->   "%select_ln52_24 = select i1 %icmp_ln50_13, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 892 'select' 'select_ln52_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_44 : Operation 893 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_24 = and i128 %mul_ln52_27, i128 %select_ln52_24" [d2.cpp:52]   --->   Operation 893 'and' 'and_ln52_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 894 [1/8] (7.30ns)   --->   "%mem_load_30_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_31, i32 1" [d2.cpp:50]   --->   Operation 894 'readreq' 'mem_load_30_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 895 [2/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 895 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 896 [3/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 896 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 897 [4/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 897 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 898 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_35, i128 %add47_2134247" [d2.cpp:36]   --->   Operation 898 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 899 [1/1] (0.00ns)   --->   "%zext_ln52_14 = zext i64 %mem_addr_30_read" [d2.cpp:52]   --->   Operation 899 'zext' 'zext_ln52_14' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (1.02ns)   --->   Input mux for Operation 900 '%mul_ln52_29 = mul i128 %zext_ln52_14, i128 %zext_ln50_18'
ST_45 : Operation 900 [1/1] (3.50ns)   --->   "%mul_ln52_29 = mul i128 %zext_ln52_14, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 900 'mul' 'mul_ln52_29' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 901 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_26)   --->   "%select_ln52_26 = select i1 %icmp_ln52_11, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 901 'select' 'select_ln52_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_45 : Operation 902 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_26 = and i128 %mul_ln52_29, i128 %select_ln52_26" [d2.cpp:52]   --->   Operation 902 'and' 'and_ln52_26' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 903 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_39 = add i128 %and_ln52_24, i128 %and_ln52_26" [d2.cpp:52]   --->   Operation 903 'add' 'add_ln52_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 904 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_40 = add i128 %add_ln52_39, i128 %and_ln52_23" [d2.cpp:52]   --->   Operation 904 'add' 'add_ln52_40' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 905 [1/1] (7.30ns)   --->   "%mem_addr_31_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_31" [d2.cpp:50]   --->   Operation 905 'read' 'mem_addr_31_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 906 [1/8] (7.30ns)   --->   "%mem_load_31_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_32, i32 1" [d2.cpp:52]   --->   Operation 906 'readreq' 'mem_load_31_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 907 [2/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 907 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 908 [3/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 908 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 909 [1/1] (0.00ns)   --->   "%add47_2134_1248_load = load i128 %add47_2134_1248" [d2.cpp:52]   --->   Operation 909 'load' 'add47_2134_1248_load' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 910 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_41 = add i128 %add_ln52_40, i128 %add_ln52_38" [d2.cpp:52]   --->   Operation 910 'add' 'add_ln52_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 911 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_42 = add i128 %add47_2134_1248_load, i128 %add_ln52_41" [d2.cpp:52]   --->   Operation 911 'add' 'add_ln52_42' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 912 [1/1] (0.00ns)   --->   "%shl_ln50_30 = shl i64 %mem_addr_31_read, i64 1" [d2.cpp:50]   --->   Operation 912 'shl' 'shl_ln50_30' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 913 [1/1] (0.00ns)   --->   "%zext_ln50_23 = zext i64 %shl_ln50_30" [d2.cpp:50]   --->   Operation 913 'zext' 'zext_ln50_23' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 914 [1/1] (7.30ns)   --->   "%mem_addr_32_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_32" [d2.cpp:52]   --->   Operation 914 'read' 'mem_addr_32_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : [1/1] (1.02ns)   --->   Input mux for Operation 915 '%mul_ln52_32 = mul i128 %zext_ln50_23, i128 %zext_ln50_18'
ST_46 : Operation 915 [1/1] (3.50ns)   --->   "%mul_ln52_32 = mul i128 %zext_ln50_23, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 915 'mul' 'mul_ln52_32' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 916 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_29)   --->   "%select_ln52_29 = select i1 %icmp_ln50_14, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 916 'select' 'select_ln52_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_46 : Operation 917 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_29 = and i128 %mul_ln52_32, i128 %select_ln52_29" [d2.cpp:52]   --->   Operation 917 'and' 'and_ln52_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 918 [1/8] (7.30ns)   --->   "%mem_load_32_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_33, i32 1" [d2.cpp:50]   --->   Operation 918 'readreq' 'mem_load_32_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 919 [2/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 919 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 920 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_42, i128 %add47_2134_1248" [d2.cpp:36]   --->   Operation 920 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 921 [1/1] (0.00ns)   --->   "%zext_ln52_15 = zext i64 %mem_addr_32_read" [d2.cpp:52]   --->   Operation 921 'zext' 'zext_ln52_15' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (1.02ns)   --->   Input mux for Operation 922 '%mul_ln52_34 = mul i128 %zext_ln52_15, i128 %zext_ln50_18'
ST_47 : Operation 922 [1/1] (3.50ns)   --->   "%mul_ln52_34 = mul i128 %zext_ln52_15, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 922 'mul' 'mul_ln52_34' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 923 [1/1] (0.00ns) (grouped into LUT with out node and_ln52_30)   --->   "%select_ln52_30 = select i1 %icmp_ln52_12, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 923 'select' 'select_ln52_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 924 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln52_30 = and i128 %mul_ln52_34, i128 %select_ln52_30" [d2.cpp:52]   --->   Operation 924 'and' 'and_ln52_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 925 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_45 = add i128 %and_ln52_29, i128 %and_ln52_30" [d2.cpp:52]   --->   Operation 925 'add' 'add_ln52_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 926 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_46 = add i128 %add_ln52_45, i128 %and_ln52_31" [d2.cpp:52]   --->   Operation 926 'add' 'add_ln52_46' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 927 [1/1] (7.30ns)   --->   "%mem_addr_33_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_33" [d2.cpp:50]   --->   Operation 927 'read' 'mem_addr_33_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 928 [1/8] (7.30ns)   --->   "%mem_load_33_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %mem_addr_34, i32 1" [d2.cpp:52]   --->   Operation 928 'readreq' 'mem_load_33_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 7.30>
ST_48 : Operation 929 [1/1] (0.00ns)   --->   "%add47_3249_load = load i128 %add47_3249" [d2.cpp:52]   --->   Operation 929 'load' 'add47_3249_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 930 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_47 = add i128 %add_ln52_46, i128 %add_ln52_44" [d2.cpp:52]   --->   Operation 930 'add' 'add_ln52_47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 931 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_48 = add i128 %add47_3249_load, i128 %add_ln52_47" [d2.cpp:52]   --->   Operation 931 'add' 'add_ln52_48' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 932 [1/1] (0.00ns)   --->   "%shl_ln50_32 = shl i64 %mem_addr_33_read, i64 1" [d2.cpp:50]   --->   Operation 932 'shl' 'shl_ln50_32' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 933 [1/1] (0.00ns)   --->   "%zext_ln50_24 = zext i64 %shl_ln50_32" [d2.cpp:50]   --->   Operation 933 'zext' 'zext_ln50_24' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 934 [1/1] (7.30ns)   --->   "%mem_addr_34_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %mem_addr_34" [d2.cpp:52]   --->   Operation 934 'read' 'mem_addr_34_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : [1/1] (1.02ns)   --->   Input mux for Operation 935 '%mul_ln52_37 = mul i128 %zext_ln50_24, i128 %zext_ln50_18'
ST_48 : Operation 935 [1/1] (3.50ns)   --->   "%mul_ln52_37 = mul i128 %zext_ln50_24, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 935 'mul' 'mul_ln52_37' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 936 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_48, i128 %add47_3249" [d2.cpp:36]   --->   Operation 936 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 49 <SV = 48> <Delay = 6.10>
ST_49 : Operation 937 [1/1] (0.00ns)   --->   "%zext_ln52_16 = zext i64 %mem_addr_34_read" [d2.cpp:52]   --->   Operation 937 'zext' 'zext_ln52_16' <Predicate = true> <Delay = 0.00>
ST_49 : [1/1] (1.02ns)   --->   Input mux for Operation 938 '%mul_ln52_38 = mul i128 %zext_ln52_16, i128 %zext_ln50_18'
ST_49 : Operation 938 [1/1] (3.50ns)   --->   "%mul_ln52_38 = mul i128 %zext_ln52_16, i128 %zext_ln50_18" [d2.cpp:52]   --->   Operation 938 'mul' 'mul_ln52_38' <Predicate = true> <Delay = 3.50> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 939 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_51)   --->   "%select_ln52_32 = select i1 %icmp_ln50_15, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 939 'select' 'select_ln52_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_49 : Operation 940 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_51)   --->   "%and_ln52_32 = and i128 %mul_ln52_37, i128 %select_ln52_32" [d2.cpp:52]   --->   Operation 940 'and' 'and_ln52_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 941 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_51)   --->   "%select_ln52_33 = select i1 %icmp_ln52_13, i128 340282366920938463463374607431768211455, i128 0" [d2.cpp:52]   --->   Operation 941 'select' 'select_ln52_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_49 : Operation 942 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_51)   --->   "%and_ln52_33 = and i128 %mul_ln52_38, i128 %select_ln52_33" [d2.cpp:52]   --->   Operation 942 'and' 'and_ln52_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 943 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln52_51 = add i128 %and_ln52_32, i128 %and_ln52_33" [d2.cpp:52]   --->   Operation 943 'add' 'add_ln52_51' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 1.42>
ST_50 : Operation 944 [1/1] (0.00ns)   --->   "%add47_3_1250_load = load i128 %add47_3_1250" [d2.cpp:52]   --->   Operation 944 'load' 'add47_3_1250_load' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 945 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d2.cpp:38]   --->   Operation 945 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 946 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d2.cpp:34]   --->   Operation 946 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 947 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d2.cpp:36]   --->   Operation 947 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 948 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_52 = add i128 %add_ln52_51, i128 %add_ln52_50" [d2.cpp:52]   --->   Operation 948 'add' 'add_ln52_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 949 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_53 = add i128 %add47_3_1250_load, i128 %add_ln52_52" [d2.cpp:52]   --->   Operation 949 'add' 'add_ln52_53' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 950 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln52_53, i128 %add47_3_1250" [d2.cpp:36]   --->   Operation 950 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_50 : Operation 951 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body29" [d2.cpp:36]   --->   Operation 951 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.631ns
The critical path consists of the following:
	'alloca' operation ('indvar') [23]  (0.000 ns)
	'load' operation ('indvar_load', d2.cpp:36) on local variable 'indvar' [43]  (0.000 ns)
	'sub' operation ('empty_31', d2.cpp:36) [70]  (0.773 ns)
	'add' operation ('tmp2', d2.cpp:36) [72]  (0.773 ns)
	'add' operation ('empty_32', d2.cpp:36) [74]  (1.085 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d2.cpp:50) [78]  (0.000 ns)
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_34', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [80]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_1', d2.cpp:50) on port 'mem' (d2.cpp:50) [81]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_2', d2.cpp:50) on port 'mem' (d2.cpp:50) [82]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_2_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [91]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_2_read_1', d2.cpp:52) on port 'mem' (d2.cpp:52) [92]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_2_read_2', d2.cpp:52) on port 'mem' (d2.cpp:52) [93]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_3_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [106]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_4_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [119]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_5_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [131]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_6_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [144]  (7.300 ns)

 <State 20>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_7_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [156]  (7.300 ns)

 <State 21>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_8_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [169]  (7.300 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_9_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [181]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_10_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [195]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_11_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [208]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_12_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [222]  (7.300 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_13_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [232]  (7.300 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_14_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [243]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [250]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_15_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [261]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_16_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [274]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_17_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [286]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_18_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [299]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_19_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [311]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_20_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [324]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_21_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [336]  (7.300 ns)

 <State 36>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_22_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [349]  (7.300 ns)

 <State 37>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_23_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [361]  (7.300 ns)

 <State 38>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_24_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [375]  (7.300 ns)

 <State 39>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_25_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [386]  (7.300 ns)

 <State 40>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_26_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [447]  (7.300 ns)

 <State 41>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_27_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [487]  (7.300 ns)

 <State 42>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_28_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [500]  (7.300 ns)

 <State 43>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_29_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [538]  (7.300 ns)

 <State 44>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_30_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [551]  (7.300 ns)

 <State 45>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_31_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [587]  (7.300 ns)

 <State 46>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_32_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [601]  (7.300 ns)

 <State 47>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_33_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [632]  (7.300 ns)

 <State 48>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_34_read', d2.cpp:52) on port 'mem' (d2.cpp:52) [643]  (7.300 ns)

 <State 49>: 6.109ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (1.025 ns)
'mul' operation ('mul_ln52_38', d2.cpp:52) [648]  (3.505 ns)
	'and' operation ('and_ln52_33', d2.cpp:52) [652]  (0.000 ns)
	'add' operation ('add_ln52_51', d2.cpp:52) [655]  (1.579 ns)

 <State 50>: 1.422ns
The critical path consists of the following:
	'load' operation ('add47_3_1250_load', d2.cpp:52) on local variable 'add47_3_1250' [57]  (0.000 ns)
	'add' operation ('add_ln52_53', d2.cpp:52) [657]  (0.995 ns)
	'store' operation ('store_ln36', d2.cpp:36) of variable 'add_ln52_53', d2.cpp:52 on local variable 'add47_3_1250' [661]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
