

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 21:45:38 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D2
* Solution:       comb_2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       94|       94|  0.940 us|  0.940 us|   95|   95|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 57
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 58 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 58 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 59 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 59 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 60 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 60 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add122_2409_loc = alloca i64 1"   --->   Operation 61 'alloca' 'add122_2409_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 64 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 65 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 66 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d2.cpp:22]   --->   Operation 80 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d2.cpp:29]   --->   Operation 81 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln82_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d2.cpp:82]   --->   Operation 82 'partselect' 'trunc_ln82_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d2.cpp:22]   --->   Operation 83 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d2.cpp:22]   --->   Operation 84 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 85 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 86 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 86 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 87 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 87 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 88 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 88 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 89 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 89 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 90 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 90 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 91 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 91 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 92 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:22]   --->   Operation 92 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 93 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d2.cpp:22]   --->   Operation 93 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 94 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d2.cpp:22]   --->   Operation 94 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 95 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d2.cpp:29]   --->   Operation 95 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 96 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d2.cpp:29]   --->   Operation 96 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 97 [8/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 97 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 98 [7/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 98 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 99 [6/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 99 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 100 [5/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 100 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 101 [4/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 101 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 102 [3/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 102 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 103 [2/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 103 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 104 [1/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 104 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 105 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d2.cpp:29]   --->   Operation 105 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 106 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d2.cpp:29]   --->   Operation 106 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 107 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 108 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 109 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 110 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 110 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 111 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 112 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 113 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 114 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 115 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 116 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 117 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 117 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 118 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 118 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 119 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 119 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 120 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 121 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 122 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 123 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 124 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [8/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 125 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 126 [2/2] (6.50ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_60_5, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg1_r_1_loc_load, i64 %arg2_r_7_loc_load, i64 %arg1_r_loc_load, i64 %arg2_r_8_loc_load, i128 %add122_2409_loc"   --->   Operation 126 'call' 'call_ln0' <Predicate = true> <Delay = 6.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 127 [7/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 127 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 128 [8/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 128 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 129 [1/2] (1.22ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_60_5, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg1_r_1_loc_load, i64 %arg2_r_7_loc_load, i64 %arg1_r_loc_load, i64 %arg2_r_8_loc_load, i128 %add122_2409_loc"   --->   Operation 129 'call' 'call_ln0' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 130 [6/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 130 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 131 [7/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 131 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 132 [5/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 132 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 133 [6/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 133 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 134 [4/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 134 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 135 [5/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 135 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 136 [3/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 136 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 137 [4/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 137 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 138 [2/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 138 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 139 [3/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 139 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 140 [1/8] (7.30ns)   --->   "%empty_27 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d2.cpp:29]   --->   Operation 140 'readreq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 141 [2/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 141 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 142 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 142 'read' 'mem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 143 [1/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d2.cpp:50]   --->   Operation 143 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 144 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i61 %trunc_ln82_1" [d2.cpp:82]   --->   Operation 144 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 145 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln82" [d2.cpp:82]   --->   Operation 145 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 146 [1/1] (7.30ns)   --->   "%empty_30 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d2.cpp:82]   --->   Operation 146 'writereq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 147 [1/1] (7.30ns)   --->   "%mem_addr_1_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 147 'read' 'mem_addr_1_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 148 [1/1] (7.30ns)   --->   "%mem_addr_1_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 148 'read' 'mem_addr_1_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 149 [1/1] (7.30ns)   --->   "%mem_addr_1_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 149 'read' 'mem_addr_1_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 150 [1/1] (7.30ns)   --->   "%mem_addr_1_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 150 'read' 'mem_addr_1_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 151 [1/1] (7.30ns)   --->   "%mem_addr_1_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 151 'read' 'mem_addr_1_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 152 [1/1] (7.30ns)   --->   "%mem_addr_1_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 152 'read' 'mem_addr_1_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 153 [1/1] (7.30ns)   --->   "%mem_addr_1_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 153 'read' 'mem_addr_1_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 154 [1/1] (7.30ns)   --->   "%mem_addr_1_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d2.cpp:29]   --->   Operation 154 'read' 'mem_addr_1_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 155 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 155 'read' 'mem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 156 [1/1] (7.30ns)   --->   "%mem_addr_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 156 'read' 'mem_addr_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 157 [1/1] (7.30ns)   --->   "%mem_addr_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 157 'read' 'mem_addr_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 158 [1/1] (7.30ns)   --->   "%mem_addr_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 158 'read' 'mem_addr_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 159 [1/1] (7.30ns)   --->   "%mem_addr_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 159 'read' 'mem_addr_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 160 [1/1] (7.30ns)   --->   "%mem_addr_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 160 'read' 'mem_addr_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 161 [1/1] (7.30ns)   --->   "%mem_addr_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 161 'read' 'mem_addr_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 162 [1/1] (7.30ns)   --->   "%mem_addr_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 162 'read' 'mem_addr_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 163 [1/1] (7.30ns)   --->   "%mem_addr_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d2.cpp:50]   --->   Operation 163 'read' 'mem_addr_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 5.52>
ST_48 : Operation 164 [1/1] (0.00ns)   --->   "%shl_ln50 = shl i64 %mem_addr_1_read_7, i64 1" [d2.cpp:50]   --->   Operation 164 'shl' 'shl_ln50' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 165 [1/1] (0.00ns)   --->   "%shl_ln50_1 = shl i64 %mem_addr_1_read_6, i64 1" [d2.cpp:50]   --->   Operation 165 'shl' 'shl_ln50_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i64 %shl_ln50_1" [d2.cpp:50]   --->   Operation 166 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 167 [1/1] (0.00ns)   --->   "%shl_ln50_2 = shl i64 %mem_addr_1_read_5, i64 1" [d2.cpp:50]   --->   Operation 167 'shl' 'shl_ln50_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 168 [1/1] (0.00ns)   --->   "%shl_ln50_3 = shl i64 %mem_addr_1_read_4, i64 1" [d2.cpp:50]   --->   Operation 168 'shl' 'shl_ln50_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 169 [1/1] (0.00ns)   --->   "%shl_ln50_4 = shl i64 %mem_addr_1_read_2, i64 1" [d2.cpp:50]   --->   Operation 169 'shl' 'shl_ln50_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i64 %shl_ln50_4" [d2.cpp:50]   --->   Operation 170 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i64 %mem_addr_1_read" [d2.cpp:52]   --->   Operation 171 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i64 %mem_addr_read_6" [d2.cpp:50]   --->   Operation 172 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 173 '%mul_ln50 = mul i128 %zext_ln50_2, i128 %zext_ln50'
ST_48 : Operation 173 [1/1] (3.27ns)   --->   "%mul_ln50 = mul i128 %zext_ln50_2, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 173 'mul' 'mul_ln50' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i64 %mem_addr_1_read_2" [d2.cpp:52]   --->   Operation 174 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i64 %mem_addr_read_4" [d2.cpp:50]   --->   Operation 175 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i64 %mem_addr_read_3" [d2.cpp:50]   --->   Operation 176 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 177 '%mul_ln52 = mul i128 %zext_ln50_4, i128 %zext_ln52_1'
ST_48 : Operation 177 [1/1] (3.27ns)   --->   "%mul_ln52 = mul i128 %zext_ln50_4, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 177 'mul' 'mul_ln52' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i64 %mem_addr_1_read_5" [d2.cpp:52]   --->   Operation 178 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i64 %mem_addr_read_1" [d2.cpp:50]   --->   Operation 179 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i64 %mem_addr_1_read_6" [d2.cpp:52]   --->   Operation 180 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 181 '%mul_ln52_1 = mul i128 %zext_ln50_5, i128 %zext_ln52_3'
ST_48 : Operation 181 [1/1] (3.27ns)   --->   "%mul_ln52_1 = mul i128 %zext_ln50_5, i128 %zext_ln52_3" [d2.cpp:52]   --->   Operation 181 'mul' 'mul_ln52_1' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i64 %mem_addr_1_read_7" [d2.cpp:52]   --->   Operation 182 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 183 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i64 %shl_ln50" [d2.cpp:50]   --->   Operation 183 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i64 %shl_ln50_2" [d2.cpp:50]   --->   Operation 184 'zext' 'zext_ln50_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 185 [1/1] (0.00ns)   --->   "%shl_ln50_5 = shl i64 %mem_addr_1_read_3, i64 1" [d2.cpp:50]   --->   Operation 185 'shl' 'shl_ln50_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i64 %mem_addr_read_7" [d2.cpp:50]   --->   Operation 186 'zext' 'zext_ln50_8' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 187 '%mul_ln50_1 = mul i128 %zext_ln50_8, i128 %zext_ln50_7'
ST_48 : Operation 187 [1/1] (3.27ns)   --->   "%mul_ln50_1 = mul i128 %zext_ln50_8, i128 %zext_ln50_7" [d2.cpp:50]   --->   Operation 187 'mul' 'mul_ln50_1' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i64 %mem_addr_1_read_1" [d2.cpp:52]   --->   Operation 188 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i64 %mem_addr_read_5" [d2.cpp:50]   --->   Operation 189 'zext' 'zext_ln50_9' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 190 '%mul_ln50_2 = mul i128 %zext_ln50_9, i128 %zext_ln50_6'
ST_48 : Operation 190 [1/1] (3.27ns)   --->   "%mul_ln50_2 = mul i128 %zext_ln50_9, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 190 'mul' 'mul_ln50_2' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 191 '%mul_ln52_2 = mul i128 %zext_ln50_3, i128 %zext_ln52_5'
ST_48 : Operation 191 [1/1] (3.27ns)   --->   "%mul_ln52_2 = mul i128 %zext_ln50_3, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 191 'mul' 'mul_ln52_2' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln50_10 = zext i64 %mem_addr_read_2" [d2.cpp:50]   --->   Operation 192 'zext' 'zext_ln50_10' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 193 '%mul_ln52_3 = mul i128 %zext_ln50_10, i128 %zext_ln52_2'
ST_48 : Operation 193 [1/1] (3.27ns)   --->   "%mul_ln52_3 = mul i128 %zext_ln50_10, i128 %zext_ln52_2" [d2.cpp:52]   --->   Operation 193 'mul' 'mul_ln52_3' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln50_11 = zext i64 %mem_addr_read" [d2.cpp:50]   --->   Operation 194 'zext' 'zext_ln50_11' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 195 '%mul_ln52_4 = mul i128 %zext_ln50_11, i128 %zext_ln52_4'
ST_48 : Operation 195 [1/1] (3.27ns)   --->   "%mul_ln52_4 = mul i128 %zext_ln50_11, i128 %zext_ln52_4" [d2.cpp:52]   --->   Operation 195 'mul' 'mul_ln52_4' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 196 [1/1] (0.00ns)   --->   "%empty_29 = shl i64 %mem_addr_1_read_8, i64 1" [d2.cpp:29]   --->   Operation 196 'shl' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln50_12 = zext i64 %mem_addr_read_8" [d2.cpp:50]   --->   Operation 197 'zext' 'zext_ln50_12' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln50_13 = zext i64 %shl_ln50_3" [d2.cpp:50]   --->   Operation 198 'zext' 'zext_ln50_13' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln50_14 = zext i64 %shl_ln50_5" [d2.cpp:50]   --->   Operation 199 'zext' 'zext_ln50_14' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 200 '%mul_ln50_3 = mul i128 %zext_ln50_12, i128 %zext_ln50_1'
ST_48 : Operation 200 [1/1] (3.27ns)   --->   "%mul_ln50_3 = mul i128 %zext_ln50_12, i128 %zext_ln50_1" [d2.cpp:50]   --->   Operation 200 'mul' 'mul_ln50_3' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 201 '%mul_ln50_4 = mul i128 %zext_ln50_8, i128 %zext_ln50_6'
ST_48 : Operation 201 [1/1] (3.27ns)   --->   "%mul_ln50_4 = mul i128 %zext_ln50_8, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 201 'mul' 'mul_ln50_4' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 202 '%mul_ln50_5 = mul i128 %zext_ln50_8, i128 %zext_ln50_14'
ST_48 : Operation 202 [1/1] (3.27ns)   --->   "%mul_ln50_5 = mul i128 %zext_ln50_8, i128 %zext_ln50_14" [d2.cpp:50]   --->   Operation 202 'mul' 'mul_ln50_5' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 203 '%mul_ln52_5 = mul i128 %zext_ln50_2, i128 %zext_ln52_5'
ST_48 : Operation 203 [1/1] (3.27ns)   --->   "%mul_ln52_5 = mul i128 %zext_ln50_2, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 203 'mul' 'mul_ln52_5' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 204 '%mul_ln50_6 = mul i128 %zext_ln50_2, i128 %zext_ln50_13'
ST_48 : Operation 204 [1/1] (3.27ns)   --->   "%mul_ln50_6 = mul i128 %zext_ln50_2, i128 %zext_ln50_13" [d2.cpp:50]   --->   Operation 204 'mul' 'mul_ln50_6' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 205 '%mul_ln52_6 = mul i128 %zext_ln50_9, i128 %zext_ln52_1'
ST_48 : Operation 205 [1/1] (3.27ns)   --->   "%mul_ln52_6 = mul i128 %zext_ln50_9, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 205 'mul' 'mul_ln52_6' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 206 '%mul_ln50_7 = mul i128 %zext_ln50_9, i128 %zext_ln50_7'
ST_48 : Operation 206 [1/1] (3.27ns)   --->   "%mul_ln50_7 = mul i128 %zext_ln50_9, i128 %zext_ln50_7" [d2.cpp:50]   --->   Operation 206 'mul' 'mul_ln50_7' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 207 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i64 %mem_addr_1_read_3" [d2.cpp:52]   --->   Operation 207 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 208 '%mul_ln50_8 = mul i128 %zext_ln50_3, i128 %zext_ln50'
ST_48 : Operation 208 [1/1] (3.27ns)   --->   "%mul_ln50_8 = mul i128 %zext_ln50_3, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 208 'mul' 'mul_ln50_8' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i64 %mem_addr_1_read_4" [d2.cpp:52]   --->   Operation 209 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 210 '%mul_ln50_9 = mul i128 %zext_ln50_4, i128 %zext_ln50_6'
ST_48 : Operation 210 [1/1] (3.27ns)   --->   "%mul_ln50_9 = mul i128 %zext_ln50_4, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 210 'mul' 'mul_ln50_9' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 211 '%mul_ln52_7 = mul i128 %zext_ln50_10, i128 %zext_ln52_5'
ST_48 : Operation 211 [1/1] (3.27ns)   --->   "%mul_ln52_7 = mul i128 %zext_ln50_10, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 211 'mul' 'mul_ln52_7' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 212 '%mul_ln52_8 = mul i128 %zext_ln50_5, i128 %zext_ln52_1'
ST_48 : Operation 212 [1/1] (3.27ns)   --->   "%mul_ln52_8 = mul i128 %zext_ln50_5, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 212 'mul' 'mul_ln52_8' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 213 '%mul_ln52_9 = mul i128 %zext_ln50_11, i128 %zext_ln52_6'
ST_48 : Operation 213 [1/1] (3.27ns)   --->   "%mul_ln52_9 = mul i128 %zext_ln50_11, i128 %zext_ln52_6" [d2.cpp:52]   --->   Operation 213 'mul' 'mul_ln52_9' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 214 [1/1] (0.00ns)   --->   "%conv35 = zext i64 %empty_29" [d2.cpp:29]   --->   Operation 214 'zext' 'conv35' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 215 '%mul_ln50_10 = mul i128 %zext_ln50_12, i128 %zext_ln50'
ST_48 : Operation 215 [1/1] (3.27ns)   --->   "%mul_ln50_10 = mul i128 %zext_ln50_12, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 215 'mul' 'mul_ln50_10' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 216 '%mul_ln50_11 = mul i128 %zext_ln50_12, i128 %zext_ln50_13'
ST_48 : Operation 216 [1/1] (3.27ns)   --->   "%mul_ln50_11 = mul i128 %zext_ln50_12, i128 %zext_ln50_13" [d2.cpp:50]   --->   Operation 216 'mul' 'mul_ln50_11' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 217 [1/1] (0.00ns)   --->   "%shl_ln50_6 = shl i64 %mem_addr_1_read_1, i64 1" [d2.cpp:50]   --->   Operation 217 'shl' 'shl_ln50_6' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 218 '%mul_ln52_10 = mul i128 %zext_ln50_8, i128 %zext_ln52'
ST_48 : Operation 218 [1/1] (3.27ns)   --->   "%mul_ln52_10 = mul i128 %zext_ln50_8, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 218 'mul' 'mul_ln52_10' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 219 '%mul_ln50_12 = mul i128 %zext_ln50_2, i128 %conv35'
ST_48 : Operation 219 [1/1] (3.27ns)   --->   "%mul_ln50_12 = mul i128 %zext_ln50_2, i128 %conv35" [d2.cpp:50]   --->   Operation 219 'mul' 'mul_ln50_12' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 220 '%mul_ln52_11 = mul i128 %zext_ln50_9, i128 %zext_ln52'
ST_48 : Operation 220 [1/1] (3.27ns)   --->   "%mul_ln52_11 = mul i128 %zext_ln50_9, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 220 'mul' 'mul_ln52_11' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 221 '%mul_ln50_13 = mul i128 %zext_ln50_3, i128 %conv35'
ST_48 : Operation 221 [1/1] (3.27ns)   --->   "%mul_ln50_13 = mul i128 %zext_ln50_3, i128 %conv35" [d2.cpp:50]   --->   Operation 221 'mul' 'mul_ln50_13' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 222 '%mul_ln52_12 = mul i128 %zext_ln50_3, i128 %zext_ln52_6'
ST_48 : Operation 222 [1/1] (3.27ns)   --->   "%mul_ln52_12 = mul i128 %zext_ln50_3, i128 %zext_ln52_6" [d2.cpp:52]   --->   Operation 222 'mul' 'mul_ln52_12' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 223 '%mul_ln52_13 = mul i128 %zext_ln50_4, i128 %zext_ln52_7'
ST_48 : Operation 223 [1/1] (3.27ns)   --->   "%mul_ln52_13 = mul i128 %zext_ln50_4, i128 %zext_ln52_7" [d2.cpp:52]   --->   Operation 223 'mul' 'mul_ln52_13' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 224 '%mul_ln52_14 = mul i128 %zext_ln50_4, i128 %zext_ln52'
ST_48 : Operation 224 [1/1] (3.27ns)   --->   "%mul_ln52_14 = mul i128 %zext_ln50_4, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 224 'mul' 'mul_ln52_14' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 225 '%mul_ln50_14 = mul i128 %zext_ln50_10, i128 %conv35'
ST_48 : Operation 225 [1/1] (3.27ns)   --->   "%mul_ln50_14 = mul i128 %zext_ln50_10, i128 %conv35" [d2.cpp:50]   --->   Operation 225 'mul' 'mul_ln50_14' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 226 '%mul_ln52_15 = mul i128 %zext_ln50_10, i128 %zext_ln52_6'
ST_48 : Operation 226 [1/1] (3.27ns)   --->   "%mul_ln52_15 = mul i128 %zext_ln50_10, i128 %zext_ln52_6" [d2.cpp:52]   --->   Operation 226 'mul' 'mul_ln52_15' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 227 '%mul_ln52_16 = mul i128 %zext_ln50_5, i128 %zext_ln52_7'
ST_48 : Operation 227 [1/1] (3.27ns)   --->   "%mul_ln52_16 = mul i128 %zext_ln50_5, i128 %zext_ln52_7" [d2.cpp:52]   --->   Operation 227 'mul' 'mul_ln52_16' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 228 '%mul_ln52_17 = mul i128 %zext_ln50_5, i128 %zext_ln52'
ST_48 : Operation 228 [1/1] (3.27ns)   --->   "%mul_ln52_17 = mul i128 %zext_ln50_5, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 228 'mul' 'mul_ln52_17' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 229 '%mul_ln52_18 = mul i128 %zext_ln50_11, i128 %zext_ln52_2'
ST_48 : Operation 229 [1/1] (3.27ns)   --->   "%mul_ln52_18 = mul i128 %zext_ln50_11, i128 %zext_ln52_2" [d2.cpp:52]   --->   Operation 229 'mul' 'mul_ln52_18' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 230 '%mul_ln52_19 = mul i128 %zext_ln50_11, i128 %zext_ln52_5'
ST_48 : Operation 230 [1/1] (3.27ns)   --->   "%mul_ln52_19 = mul i128 %zext_ln50_11, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 230 'mul' 'mul_ln52_19' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 231 '%mul_ln50_15 = mul i128 %zext_ln50_12, i128 %conv35'
ST_48 : Operation 231 [1/1] (3.27ns)   --->   "%mul_ln50_15 = mul i128 %zext_ln50_12, i128 %conv35" [d2.cpp:50]   --->   Operation 231 'mul' 'mul_ln50_15' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 232 [1/1] (0.00ns)   --->   "%zext_ln50_15 = zext i64 %shl_ln50_6" [d2.cpp:50]   --->   Operation 232 'zext' 'zext_ln50_15' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 233 '%mul_ln50_16 = mul i128 %zext_ln50_8, i128 %zext_ln50'
ST_48 : Operation 233 [1/1] (3.27ns)   --->   "%mul_ln50_16 = mul i128 %zext_ln50_8, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 233 'mul' 'mul_ln50_16' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 234 '%mul_ln50_17 = mul i128 %zext_ln50_8, i128 %zext_ln50_13'
ST_48 : Operation 234 [1/1] (3.27ns)   --->   "%mul_ln50_17 = mul i128 %zext_ln50_8, i128 %zext_ln50_13" [d2.cpp:50]   --->   Operation 234 'mul' 'mul_ln50_17' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 235 '%mul_ln50_18 = mul i128 %zext_ln50_8, i128 %zext_ln50_1'
ST_48 : Operation 235 [1/1] (3.27ns)   --->   "%mul_ln50_18 = mul i128 %zext_ln50_8, i128 %zext_ln50_1" [d2.cpp:50]   --->   Operation 235 'mul' 'mul_ln50_18' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 236 '%mul_ln52_20 = mul i128 %zext_ln50_2, i128 %zext_ln52'
ST_48 : Operation 236 [1/1] (3.27ns)   --->   "%mul_ln52_20 = mul i128 %zext_ln50_2, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 236 'mul' 'mul_ln52_20' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 237 '%mul_ln50_19 = mul i128 %zext_ln50_2, i128 %zext_ln50_6'
ST_48 : Operation 237 [1/1] (3.27ns)   --->   "%mul_ln50_19 = mul i128 %zext_ln50_2, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 237 'mul' 'mul_ln50_19' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 238 '%mul_ln50_20 = mul i128 %zext_ln50_2, i128 %zext_ln50_7'
ST_48 : Operation 238 [1/1] (3.27ns)   --->   "%mul_ln50_20 = mul i128 %zext_ln50_2, i128 %zext_ln50_7" [d2.cpp:50]   --->   Operation 238 'mul' 'mul_ln50_20' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 239 '%mul_ln50_21 = mul i128 %zext_ln50_2, i128 %zext_ln50_14'
ST_48 : Operation 239 [1/1] (3.27ns)   --->   "%mul_ln50_21 = mul i128 %zext_ln50_2, i128 %zext_ln50_14" [d2.cpp:50]   --->   Operation 239 'mul' 'mul_ln50_21' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 240 '%mul_ln52_21 = mul i128 %zext_ln50_9, i128 %zext_ln52_5'
ST_48 : Operation 240 [1/1] (3.27ns)   --->   "%mul_ln52_21 = mul i128 %zext_ln50_9, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 240 'mul' 'mul_ln52_21' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 241 '%mul_ln50_22 = mul i128 %zext_ln50_9, i128 %zext_ln50'
ST_48 : Operation 241 [1/1] (3.27ns)   --->   "%mul_ln50_22 = mul i128 %zext_ln50_9, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 241 'mul' 'mul_ln50_22' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 242 '%mul_ln50_23 = mul i128 %zext_ln50_9, i128 %zext_ln50_13'
ST_48 : Operation 242 [1/1] (3.27ns)   --->   "%mul_ln50_23 = mul i128 %zext_ln50_9, i128 %zext_ln50_13" [d2.cpp:50]   --->   Operation 242 'mul' 'mul_ln50_23' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 243 '%mul_ln52_22 = mul i128 %zext_ln50_3, i128 %zext_ln52_1'
ST_48 : Operation 243 [1/1] (3.27ns)   --->   "%mul_ln52_22 = mul i128 %zext_ln50_3, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 243 'mul' 'mul_ln52_22' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 244 '%mul_ln52_23 = mul i128 %zext_ln50_3, i128 %zext_ln52'
ST_48 : Operation 244 [1/1] (3.27ns)   --->   "%mul_ln52_23 = mul i128 %zext_ln50_3, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 244 'mul' 'mul_ln52_23' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 245 '%mul_ln50_24 = mul i128 %zext_ln50_3, i128 %zext_ln50_6'
ST_48 : Operation 245 [1/1] (3.27ns)   --->   "%mul_ln50_24 = mul i128 %zext_ln50_3, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 245 'mul' 'mul_ln50_24' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 246 '%mul_ln50_25 = mul i128 %zext_ln50_3, i128 %zext_ln50_7'
ST_48 : Operation 246 [1/1] (3.27ns)   --->   "%mul_ln50_25 = mul i128 %zext_ln50_3, i128 %zext_ln50_7" [d2.cpp:50]   --->   Operation 246 'mul' 'mul_ln50_25' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 247 '%mul_ln52_24 = mul i128 %zext_ln50_4, i128 %zext_ln52_6'
ST_48 : Operation 247 [1/1] (3.27ns)   --->   "%mul_ln52_24 = mul i128 %zext_ln50_4, i128 %zext_ln52_6" [d2.cpp:52]   --->   Operation 247 'mul' 'mul_ln52_24' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 248 '%mul_ln52_25 = mul i128 %zext_ln50_4, i128 %zext_ln52_5'
ST_48 : Operation 248 [1/1] (3.27ns)   --->   "%mul_ln52_25 = mul i128 %zext_ln50_4, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 248 'mul' 'mul_ln52_25' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 249 '%mul_ln50_26 = mul i128 %zext_ln50_4, i128 %zext_ln50'
ST_48 : Operation 249 [1/1] (3.27ns)   --->   "%mul_ln50_26 = mul i128 %zext_ln50_4, i128 %zext_ln50" [d2.cpp:50]   --->   Operation 249 'mul' 'mul_ln50_26' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 250 '%mul_ln52_26 = mul i128 %zext_ln50_10, i128 %zext_ln52_7'
ST_48 : Operation 250 [1/1] (3.27ns)   --->   "%mul_ln52_26 = mul i128 %zext_ln50_10, i128 %zext_ln52_7" [d2.cpp:52]   --->   Operation 250 'mul' 'mul_ln52_26' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 251 '%mul_ln52_27 = mul i128 %zext_ln50_10, i128 %zext_ln52_1'
ST_48 : Operation 251 [1/1] (3.27ns)   --->   "%mul_ln52_27 = mul i128 %zext_ln50_10, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 251 'mul' 'mul_ln52_27' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 252 '%mul_ln52_28 = mul i128 %zext_ln50_10, i128 %zext_ln52'
ST_48 : Operation 252 [1/1] (3.27ns)   --->   "%mul_ln52_28 = mul i128 %zext_ln50_10, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 252 'mul' 'mul_ln52_28' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 253 '%mul_ln50_27 = mul i128 %zext_ln50_10, i128 %zext_ln50_6'
ST_48 : Operation 253 [1/1] (3.27ns)   --->   "%mul_ln50_27 = mul i128 %zext_ln50_10, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 253 'mul' 'mul_ln50_27' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 254 '%mul_ln52_29 = mul i128 %zext_ln50_5, i128 %zext_ln52_2'
ST_48 : Operation 254 [1/1] (3.27ns)   --->   "%mul_ln52_29 = mul i128 %zext_ln50_5, i128 %zext_ln52_2" [d2.cpp:52]   --->   Operation 254 'mul' 'mul_ln52_29' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 255 '%mul_ln52_30 = mul i128 %zext_ln50_5, i128 %zext_ln52_6'
ST_48 : Operation 255 [1/1] (3.27ns)   --->   "%mul_ln52_30 = mul i128 %zext_ln50_5, i128 %zext_ln52_6" [d2.cpp:52]   --->   Operation 255 'mul' 'mul_ln52_30' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 256 '%mul_ln52_31 = mul i128 %zext_ln50_5, i128 %zext_ln52_5'
ST_48 : Operation 256 [1/1] (3.27ns)   --->   "%mul_ln52_31 = mul i128 %zext_ln50_5, i128 %zext_ln52_5" [d2.cpp:52]   --->   Operation 256 'mul' 'mul_ln52_31' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 257 '%mul_ln52_32 = mul i128 %zext_ln50_11, i128 %zext_ln52_3'
ST_48 : Operation 257 [1/1] (3.27ns)   --->   "%mul_ln52_32 = mul i128 %zext_ln50_11, i128 %zext_ln52_3" [d2.cpp:52]   --->   Operation 257 'mul' 'mul_ln52_32' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 258 '%mul_ln52_33 = mul i128 %zext_ln50_11, i128 %zext_ln52_7'
ST_48 : Operation 258 [1/1] (3.27ns)   --->   "%mul_ln52_33 = mul i128 %zext_ln50_11, i128 %zext_ln52_7" [d2.cpp:52]   --->   Operation 258 'mul' 'mul_ln52_33' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 259 '%mul_ln52_34 = mul i128 %zext_ln50_11, i128 %zext_ln52_1'
ST_48 : Operation 259 [1/1] (3.27ns)   --->   "%mul_ln52_34 = mul i128 %zext_ln50_11, i128 %zext_ln52_1" [d2.cpp:52]   --->   Operation 259 'mul' 'mul_ln52_34' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 260 '%mul_ln52_35 = mul i128 %zext_ln50_11, i128 %zext_ln52'
ST_48 : Operation 260 [1/1] (3.27ns)   --->   "%mul_ln52_35 = mul i128 %zext_ln50_11, i128 %zext_ln52" [d2.cpp:52]   --->   Operation 260 'mul' 'mul_ln52_35' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 261 '%mul_ln50_28 = mul i128 %zext_ln50_12, i128 %zext_ln50_6'
ST_48 : Operation 261 [1/1] (3.27ns)   --->   "%mul_ln50_28 = mul i128 %zext_ln50_12, i128 %zext_ln50_6" [d2.cpp:50]   --->   Operation 261 'mul' 'mul_ln50_28' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 262 '%mul_ln50_29 = mul i128 %zext_ln50_12, i128 %zext_ln50_7'
ST_48 : Operation 262 [1/1] (3.27ns)   --->   "%mul_ln50_29 = mul i128 %zext_ln50_12, i128 %zext_ln50_7" [d2.cpp:50]   --->   Operation 262 'mul' 'mul_ln50_29' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 263 '%mul_ln50_30 = mul i128 %zext_ln50_12, i128 %zext_ln50_14'
ST_48 : Operation 263 [1/1] (3.27ns)   --->   "%mul_ln50_30 = mul i128 %zext_ln50_12, i128 %zext_ln50_14" [d2.cpp:50]   --->   Operation 263 'mul' 'mul_ln50_30' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 264 '%mul_ln50_31 = mul i128 %zext_ln50_12, i128 %zext_ln50_15'
ST_48 : Operation 264 [1/1] (3.27ns)   --->   "%mul_ln50_31 = mul i128 %zext_ln50_12, i128 %zext_ln50_15" [d2.cpp:50]   --->   Operation 264 'mul' 'mul_ln50_31' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 265 '%mul_ln50_32 = mul i128 %zext_ln50_8, i128 %conv35'
ST_48 : Operation 265 [1/1] (3.27ns)   --->   "%mul_ln50_32 = mul i128 %zext_ln50_8, i128 %conv35" [d2.cpp:50]   --->   Operation 265 'mul' 'mul_ln50_32' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 266 '%mul_ln50_33 = mul i128 %zext_ln50_9, i128 %conv35'
ST_48 : Operation 266 [1/1] (3.27ns)   --->   "%mul_ln50_33 = mul i128 %zext_ln50_9, i128 %conv35" [d2.cpp:50]   --->   Operation 266 'mul' 'mul_ln50_33' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 267 '%mul_ln50_34 = mul i128 %zext_ln50_4, i128 %conv35'
ST_48 : Operation 267 [1/1] (3.27ns)   --->   "%mul_ln50_34 = mul i128 %zext_ln50_4, i128 %conv35" [d2.cpp:50]   --->   Operation 267 'mul' 'mul_ln50_34' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : [1/1] (1.25ns)   --->   Input mux for Operation 268 '%mul_ln50_35 = mul i128 %zext_ln50_5, i128 %conv35'
ST_48 : Operation 268 [1/1] (3.27ns)   --->   "%mul_ln50_35 = mul i128 %zext_ln50_5, i128 %conv35" [d2.cpp:50]   --->   Operation 268 'mul' 'mul_ln50_35' <Predicate = true> <Delay = 3.27> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 269 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_4 = add i128 %mul_ln52_3, i128 %mul_ln50_15" [d2.cpp:52]   --->   Operation 269 'add' 'add_ln52_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 270 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_5 = add i128 %add_ln52_4, i128 %mul_ln52_13" [d2.cpp:52]   --->   Operation 270 'add' 'add_ln52_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln52_3 = trunc i128 %add_ln52_5" [d2.cpp:52]   --->   Operation 271 'trunc' 'trunc_ln52_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 272 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_14 = add i128 %mul_ln52_26, i128 %mul_ln50_28" [d2.cpp:52]   --->   Operation 272 'add' 'add_ln52_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 273 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_15 = add i128 %add_ln52_14, i128 %mul_ln52_24" [d2.cpp:52]   --->   Operation 273 'add' 'add_ln52_15' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln52_7 = trunc i128 %add_ln52_15" [d2.cpp:52]   --->   Operation 274 'trunc' 'trunc_ln52_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 275 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_24 = add i128 %mul_ln52_15, i128 %mul_ln50_10" [d2.cpp:52]   --->   Operation 275 'add' 'add_ln52_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 276 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_25 = add i128 %add_ln52_24, i128 %mul_ln52" [d2.cpp:52]   --->   Operation 276 'add' 'add_ln52_25' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln52_11 = trunc i128 %add_ln52_25" [d2.cpp:52]   --->   Operation 277 'trunc' 'trunc_ln52_11' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 278 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_34 = add i128 %mul_ln52_27, i128 %mul_ln50_29" [d2.cpp:52]   --->   Operation 278 'add' 'add_ln52_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 279 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_35 = add i128 %add_ln52_34, i128 %mul_ln52_25" [d2.cpp:52]   --->   Operation 279 'add' 'add_ln52_35' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 280 [1/1] (0.00ns)   --->   "%trunc_ln52_15 = trunc i128 %add_ln52_35" [d2.cpp:52]   --->   Operation 280 'trunc' 'trunc_ln52_15' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 281 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_44 = add i128 %mul_ln52_7, i128 %mul_ln50_11" [d2.cpp:52]   --->   Operation 281 'add' 'add_ln52_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 282 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_45 = add i128 %add_ln52_44, i128 %mul_ln52_14" [d2.cpp:52]   --->   Operation 282 'add' 'add_ln52_45' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln52_19 = trunc i128 %add_ln52_45" [d2.cpp:52]   --->   Operation 283 'trunc' 'trunc_ln52_19' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 284 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_54 = add i128 %mul_ln52_28, i128 %mul_ln50_30" [d2.cpp:52]   --->   Operation 284 'add' 'add_ln52_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 285 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_55 = add i128 %add_ln52_54, i128 %mul_ln50_34" [d2.cpp:52]   --->   Operation 285 'add' 'add_ln52_55' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 286 [1/1] (0.00ns)   --->   "%trunc_ln52_23 = trunc i128 %add_ln52_55" [d2.cpp:52]   --->   Operation 286 'trunc' 'trunc_ln52_23' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 287 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_64 = add i128 %mul_ln50_14, i128 %mul_ln50_3" [d2.cpp:52]   --->   Operation 287 'add' 'add_ln52_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 288 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_65 = add i128 %add_ln52_64, i128 %mul_ln50_9" [d2.cpp:52]   --->   Operation 288 'add' 'add_ln52_65' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 289 [1/1] (0.00ns)   --->   "%trunc_ln52_27 = trunc i128 %add_ln52_65" [d2.cpp:52]   --->   Operation 289 'trunc' 'trunc_ln52_27' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 290 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_74 = add i128 %mul_ln50_27, i128 %mul_ln50_31" [d2.cpp:52]   --->   Operation 290 'add' 'add_ln52_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 291 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln52_75 = add i128 %add_ln52_74, i128 %mul_ln50_26" [d2.cpp:52]   --->   Operation 291 'add' 'add_ln52_75' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 292 [1/1] (0.00ns)   --->   "%trunc_ln52_31 = trunc i128 %add_ln52_75" [d2.cpp:52]   --->   Operation 292 'trunc' 'trunc_ln52_31' <Predicate = true> <Delay = 0.00>

State 49 <SV = 48> <Delay = 7.13>
ST_49 : Operation 293 [1/1] (1.57ns)   --->   "%add_ln52 = add i128 %mul_ln52_5, i128 %mul_ln52_10" [d2.cpp:52]   --->   Operation 293 'add' 'add_ln52' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 294 [1/1] (1.57ns)   --->   "%add_ln52_1 = add i128 %mul_ln52_6, i128 %mul_ln52_12" [d2.cpp:52]   --->   Operation 294 'add' 'add_ln52_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln52 = trunc i128 %add_ln52" [d2.cpp:52]   --->   Operation 295 'trunc' 'trunc_ln52' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln52_1 = trunc i128 %add_ln52_1" [d2.cpp:52]   --->   Operation 296 'trunc' 'trunc_ln52_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 297 [1/1] (1.57ns)   --->   "%add_ln52_2 = add i128 %add_ln52_1, i128 %add_ln52" [d2.cpp:52]   --->   Operation 297 'add' 'add_ln52_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 298 [1/1] (1.57ns)   --->   "%add_ln52_3 = add i128 %mul_ln52_4, i128 %mul_ln52_1" [d2.cpp:52]   --->   Operation 298 'add' 'add_ln52_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 299 [1/1] (0.00ns)   --->   "%trunc_ln52_2 = trunc i128 %add_ln52_3" [d2.cpp:52]   --->   Operation 299 'trunc' 'trunc_ln52_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 300 [1/1] (1.57ns)   --->   "%add_ln52_6 = add i128 %add_ln52_5, i128 %add_ln52_3" [d2.cpp:52]   --->   Operation 300 'add' 'add_ln52_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 301 [1/1] (1.09ns)   --->   "%add_ln52_7 = add i58 %trunc_ln52_1, i58 %trunc_ln52" [d2.cpp:52]   --->   Operation 301 'add' 'add_ln52_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 302 [1/1] (1.09ns)   --->   "%add_ln52_8 = add i58 %trunc_ln52_3, i58 %trunc_ln52_2" [d2.cpp:52]   --->   Operation 302 'add' 'add_ln52_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 303 [1/1] (1.57ns)   --->   "%add_ln52_10 = add i128 %mul_ln52_20, i128 %mul_ln50_32" [d2.cpp:52]   --->   Operation 303 'add' 'add_ln52_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 304 [1/1] (1.57ns)   --->   "%add_ln52_11 = add i128 %mul_ln52_21, i128 %mul_ln52_22" [d2.cpp:52]   --->   Operation 304 'add' 'add_ln52_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 305 [1/1] (0.00ns)   --->   "%trunc_ln52_4 = trunc i128 %add_ln52_10" [d2.cpp:52]   --->   Operation 305 'trunc' 'trunc_ln52_4' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 306 [1/1] (0.00ns)   --->   "%trunc_ln52_5 = trunc i128 %add_ln52_11" [d2.cpp:52]   --->   Operation 306 'trunc' 'trunc_ln52_5' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 307 [1/1] (1.57ns)   --->   "%add_ln52_12 = add i128 %add_ln52_11, i128 %add_ln52_10" [d2.cpp:52]   --->   Operation 307 'add' 'add_ln52_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 308 [1/1] (1.57ns)   --->   "%add_ln52_13 = add i128 %mul_ln52_32, i128 %mul_ln52_29" [d2.cpp:52]   --->   Operation 308 'add' 'add_ln52_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln52_6 = trunc i128 %add_ln52_13" [d2.cpp:52]   --->   Operation 309 'trunc' 'trunc_ln52_6' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 310 [1/1] (1.57ns)   --->   "%add_ln52_16 = add i128 %add_ln52_15, i128 %add_ln52_13" [d2.cpp:52]   --->   Operation 310 'add' 'add_ln52_16' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 311 [1/1] (1.09ns)   --->   "%add_ln52_17 = add i58 %trunc_ln52_5, i58 %trunc_ln52_4" [d2.cpp:52]   --->   Operation 311 'add' 'add_ln52_17' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 312 [1/1] (1.09ns)   --->   "%add_ln52_18 = add i58 %trunc_ln52_7, i58 %trunc_ln52_6" [d2.cpp:52]   --->   Operation 312 'add' 'add_ln52_18' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 313 [1/1] (1.57ns)   --->   "%add_ln52_20 = add i128 %mul_ln50_12, i128 %mul_ln50_4" [d2.cpp:52]   --->   Operation 313 'add' 'add_ln52_20' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 314 [1/1] (1.57ns)   --->   "%add_ln52_21 = add i128 %mul_ln52_11, i128 %mul_ln52_2" [d2.cpp:52]   --->   Operation 314 'add' 'add_ln52_21' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 315 [1/1] (0.00ns)   --->   "%trunc_ln52_8 = trunc i128 %add_ln52_20" [d2.cpp:52]   --->   Operation 315 'trunc' 'trunc_ln52_8' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 316 [1/1] (0.00ns)   --->   "%trunc_ln52_9 = trunc i128 %add_ln52_21" [d2.cpp:52]   --->   Operation 316 'trunc' 'trunc_ln52_9' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 317 [1/1] (1.57ns)   --->   "%add_ln52_22 = add i128 %add_ln52_21, i128 %add_ln52_20" [d2.cpp:52]   --->   Operation 317 'add' 'add_ln52_22' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 318 [1/1] (1.57ns)   --->   "%add_ln52_23 = add i128 %mul_ln52_18, i128 %mul_ln52_16" [d2.cpp:52]   --->   Operation 318 'add' 'add_ln52_23' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln52_10 = trunc i128 %add_ln52_23" [d2.cpp:52]   --->   Operation 319 'trunc' 'trunc_ln52_10' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 320 [1/1] (1.57ns)   --->   "%add_ln52_26 = add i128 %add_ln52_25, i128 %add_ln52_23" [d2.cpp:52]   --->   Operation 320 'add' 'add_ln52_26' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 321 [1/1] (1.09ns)   --->   "%add_ln52_27 = add i58 %trunc_ln52_9, i58 %trunc_ln52_8" [d2.cpp:52]   --->   Operation 321 'add' 'add_ln52_27' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 322 [1/1] (1.09ns)   --->   "%add_ln52_28 = add i58 %trunc_ln52_11, i58 %trunc_ln52_10" [d2.cpp:52]   --->   Operation 322 'add' 'add_ln52_28' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 323 [1/1] (1.57ns)   --->   "%add_ln52_30 = add i128 %mul_ln50_19, i128 %mul_ln50_16" [d2.cpp:52]   --->   Operation 323 'add' 'add_ln52_30' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 324 [1/1] (1.57ns)   --->   "%add_ln52_31 = add i128 %mul_ln50_33, i128 %mul_ln52_23" [d2.cpp:52]   --->   Operation 324 'add' 'add_ln52_31' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln52_12 = trunc i128 %add_ln52_30" [d2.cpp:52]   --->   Operation 325 'trunc' 'trunc_ln52_12' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 326 [1/1] (0.00ns)   --->   "%trunc_ln52_13 = trunc i128 %add_ln52_31" [d2.cpp:52]   --->   Operation 326 'trunc' 'trunc_ln52_13' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 327 [1/1] (1.57ns)   --->   "%add_ln52_32 = add i128 %add_ln52_31, i128 %add_ln52_30" [d2.cpp:52]   --->   Operation 327 'add' 'add_ln52_32' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 328 [1/1] (1.57ns)   --->   "%add_ln52_33 = add i128 %mul_ln52_33, i128 %mul_ln52_30" [d2.cpp:52]   --->   Operation 328 'add' 'add_ln52_33' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 329 [1/1] (0.00ns)   --->   "%trunc_ln52_14 = trunc i128 %add_ln52_33" [d2.cpp:52]   --->   Operation 329 'trunc' 'trunc_ln52_14' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 330 [1/1] (1.57ns)   --->   "%add_ln52_36 = add i128 %add_ln52_35, i128 %add_ln52_33" [d2.cpp:52]   --->   Operation 330 'add' 'add_ln52_36' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 331 [1/1] (1.09ns)   --->   "%add_ln52_37 = add i58 %trunc_ln52_13, i58 %trunc_ln52_12" [d2.cpp:52]   --->   Operation 331 'add' 'add_ln52_37' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 332 [1/1] (1.09ns)   --->   "%add_ln52_38 = add i58 %trunc_ln52_15, i58 %trunc_ln52_14" [d2.cpp:52]   --->   Operation 332 'add' 'add_ln52_38' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 333 [1/1] (1.57ns)   --->   "%add_ln52_40 = add i128 %mul_ln50, i128 %mul_ln50_1" [d2.cpp:52]   --->   Operation 333 'add' 'add_ln52_40' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 334 [1/1] (1.57ns)   --->   "%add_ln52_41 = add i128 %mul_ln50_2, i128 %mul_ln50_13" [d2.cpp:52]   --->   Operation 334 'add' 'add_ln52_41' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln52_16 = trunc i128 %add_ln52_40" [d2.cpp:52]   --->   Operation 335 'trunc' 'trunc_ln52_16' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln52_17 = trunc i128 %add_ln52_41" [d2.cpp:52]   --->   Operation 336 'trunc' 'trunc_ln52_17' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 337 [1/1] (1.57ns)   --->   "%add_ln52_42 = add i128 %add_ln52_41, i128 %add_ln52_40" [d2.cpp:52]   --->   Operation 337 'add' 'add_ln52_42' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 338 [1/1] (1.57ns)   --->   "%add_ln52_43 = add i128 %mul_ln52_9, i128 %mul_ln52_8" [d2.cpp:52]   --->   Operation 338 'add' 'add_ln52_43' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 339 [1/1] (0.00ns)   --->   "%trunc_ln52_18 = trunc i128 %add_ln52_43" [d2.cpp:52]   --->   Operation 339 'trunc' 'trunc_ln52_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 340 [1/1] (1.57ns)   --->   "%add_ln52_46 = add i128 %add_ln52_45, i128 %add_ln52_43" [d2.cpp:52]   --->   Operation 340 'add' 'add_ln52_46' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 341 [1/1] (1.09ns)   --->   "%add_ln52_47 = add i58 %trunc_ln52_17, i58 %trunc_ln52_16" [d2.cpp:52]   --->   Operation 341 'add' 'add_ln52_47' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 342 [1/1] (1.09ns)   --->   "%add_ln52_48 = add i58 %trunc_ln52_19, i58 %trunc_ln52_18" [d2.cpp:52]   --->   Operation 342 'add' 'add_ln52_48' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_11 = add i128 %add_ln52_46, i128 %add_ln52_42" [d2.cpp:52]   --->   Operation 343 'add' 'arr_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 344 [1/1] (1.57ns)   --->   "%add_ln52_50 = add i128 %mul_ln50_20, i128 %mul_ln50_17" [d2.cpp:52]   --->   Operation 344 'add' 'add_ln52_50' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 345 [1/1] (1.57ns)   --->   "%add_ln52_51 = add i128 %mul_ln50_22, i128 %mul_ln50_24" [d2.cpp:52]   --->   Operation 345 'add' 'add_ln52_51' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 346 [1/1] (0.00ns)   --->   "%trunc_ln52_20 = trunc i128 %add_ln52_50" [d2.cpp:52]   --->   Operation 346 'trunc' 'trunc_ln52_20' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 347 [1/1] (0.00ns)   --->   "%trunc_ln52_21 = trunc i128 %add_ln52_51" [d2.cpp:52]   --->   Operation 347 'trunc' 'trunc_ln52_21' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 348 [1/1] (1.57ns)   --->   "%add_ln52_52 = add i128 %add_ln52_51, i128 %add_ln52_50" [d2.cpp:52]   --->   Operation 348 'add' 'add_ln52_52' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 349 [1/1] (1.57ns)   --->   "%add_ln52_53 = add i128 %mul_ln52_34, i128 %mul_ln52_31" [d2.cpp:52]   --->   Operation 349 'add' 'add_ln52_53' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 350 [1/1] (0.00ns)   --->   "%trunc_ln52_22 = trunc i128 %add_ln52_53" [d2.cpp:52]   --->   Operation 350 'trunc' 'trunc_ln52_22' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 351 [1/1] (1.57ns)   --->   "%add_ln52_56 = add i128 %add_ln52_55, i128 %add_ln52_53" [d2.cpp:52]   --->   Operation 351 'add' 'add_ln52_56' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 352 [1/1] (1.09ns)   --->   "%add_ln52_57 = add i58 %trunc_ln52_21, i58 %trunc_ln52_20" [d2.cpp:52]   --->   Operation 352 'add' 'add_ln52_57' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 353 [1/1] (1.09ns)   --->   "%add_ln52_58 = add i58 %trunc_ln52_23, i58 %trunc_ln52_22" [d2.cpp:52]   --->   Operation 353 'add' 'add_ln52_58' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 354 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_12 = add i128 %add_ln52_56, i128 %add_ln52_52" [d2.cpp:52]   --->   Operation 354 'add' 'arr_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 355 [1/1] (1.57ns)   --->   "%add_ln52_60 = add i128 %mul_ln50_6, i128 %mul_ln50_5" [d2.cpp:52]   --->   Operation 355 'add' 'add_ln52_60' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 356 [1/1] (1.57ns)   --->   "%add_ln52_61 = add i128 %mul_ln50_7, i128 %mul_ln50_8" [d2.cpp:52]   --->   Operation 356 'add' 'add_ln52_61' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 357 [1/1] (0.00ns)   --->   "%trunc_ln52_24 = trunc i128 %add_ln52_60" [d2.cpp:52]   --->   Operation 357 'trunc' 'trunc_ln52_24' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 358 [1/1] (0.00ns)   --->   "%trunc_ln52_25 = trunc i128 %add_ln52_61" [d2.cpp:52]   --->   Operation 358 'trunc' 'trunc_ln52_25' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 359 [1/1] (1.57ns)   --->   "%add_ln52_62 = add i128 %add_ln52_61, i128 %add_ln52_60" [d2.cpp:52]   --->   Operation 359 'add' 'add_ln52_62' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 360 [1/1] (1.57ns)   --->   "%add_ln52_63 = add i128 %mul_ln52_19, i128 %mul_ln52_17" [d2.cpp:52]   --->   Operation 360 'add' 'add_ln52_63' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 361 [1/1] (0.00ns)   --->   "%trunc_ln52_26 = trunc i128 %add_ln52_63" [d2.cpp:52]   --->   Operation 361 'trunc' 'trunc_ln52_26' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 362 [1/1] (1.57ns)   --->   "%add_ln52_66 = add i128 %add_ln52_65, i128 %add_ln52_63" [d2.cpp:52]   --->   Operation 362 'add' 'add_ln52_66' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 363 [1/1] (1.09ns)   --->   "%add_ln52_67 = add i58 %trunc_ln52_25, i58 %trunc_ln52_24" [d2.cpp:52]   --->   Operation 363 'add' 'add_ln52_67' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 364 [1/1] (1.09ns)   --->   "%add_ln52_68 = add i58 %trunc_ln52_27, i58 %trunc_ln52_26" [d2.cpp:52]   --->   Operation 364 'add' 'add_ln52_68' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 365 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_13 = add i128 %add_ln52_66, i128 %add_ln52_62" [d2.cpp:52]   --->   Operation 365 'add' 'arr_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 366 [1/1] (1.57ns)   --->   "%add_ln52_70 = add i128 %mul_ln50_21, i128 %mul_ln50_18" [d2.cpp:52]   --->   Operation 366 'add' 'add_ln52_70' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 367 [1/1] (1.57ns)   --->   "%add_ln52_71 = add i128 %mul_ln50_23, i128 %mul_ln50_25" [d2.cpp:52]   --->   Operation 367 'add' 'add_ln52_71' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 368 [1/1] (0.00ns)   --->   "%trunc_ln52_28 = trunc i128 %add_ln52_70" [d2.cpp:52]   --->   Operation 368 'trunc' 'trunc_ln52_28' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 369 [1/1] (0.00ns)   --->   "%trunc_ln52_29 = trunc i128 %add_ln52_71" [d2.cpp:52]   --->   Operation 369 'trunc' 'trunc_ln52_29' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 370 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_72 = add i128 %add_ln52_71, i128 %add_ln52_70" [d2.cpp:52]   --->   Operation 370 'add' 'add_ln52_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 371 [1/1] (1.57ns)   --->   "%add_ln52_73 = add i128 %mul_ln52_35, i128 %mul_ln50_35" [d2.cpp:52]   --->   Operation 371 'add' 'add_ln52_73' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 372 [1/1] (0.00ns)   --->   "%trunc_ln52_30 = trunc i128 %add_ln52_73" [d2.cpp:52]   --->   Operation 372 'trunc' 'trunc_ln52_30' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 373 [1/1] (1.57ns)   --->   "%add_ln52_76 = add i128 %add_ln52_75, i128 %add_ln52_73" [d2.cpp:52]   --->   Operation 373 'add' 'add_ln52_76' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 374 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_77 = add i58 %trunc_ln52_29, i58 %trunc_ln52_28" [d2.cpp:52]   --->   Operation 374 'add' 'add_ln52_77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 375 [1/1] (1.09ns)   --->   "%add_ln52_78 = add i58 %trunc_ln52_31, i58 %trunc_ln52_30" [d2.cpp:52]   --->   Operation 375 'add' 'add_ln52_78' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 376 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_14 = add i128 %add_ln52_76, i128 %add_ln52_72" [d2.cpp:52]   --->   Operation 376 'add' 'arr_14' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 377 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln70_8 = add i58 %add_ln52_78, i58 %add_ln52_77" [d2.cpp:70]   --->   Operation 377 'add' 'add_ln70_8' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 378 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %arr_14, i32 58, i32 127" [d2.cpp:70]   --->   Operation 378 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 379 [1/1] (0.00ns)   --->   "%sext_ln70 = sext i70 %trunc_ln2" [d2.cpp:70]   --->   Operation 379 'sext' 'sext_ln70' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 380 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70 = add i128 %arr_13, i128 %sext_ln70" [d2.cpp:70]   --->   Operation 380 'add' 'add_ln70' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 381 [1/1] (0.00ns)   --->   "%trunc_ln70_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70, i32 58, i32 127" [d2.cpp:70]   --->   Operation 381 'partselect' 'trunc_ln70_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 382 [1/1] (0.00ns)   --->   "%sext_ln70_1 = sext i70 %trunc_ln70_2" [d2.cpp:70]   --->   Operation 382 'sext' 'sext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 383 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_1 = add i128 %arr_12, i128 %sext_ln70_1" [d2.cpp:70]   --->   Operation 383 'add' 'add_ln70_1' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 384 [1/1] (0.00ns)   --->   "%trunc_ln70_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_1, i32 58, i32 127" [d2.cpp:70]   --->   Operation 384 'partselect' 'trunc_ln70_3' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 385 [1/1] (0.00ns)   --->   "%sext_ln70_2 = sext i70 %trunc_ln70_3" [d2.cpp:70]   --->   Operation 385 'sext' 'sext_ln70_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 386 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_2 = add i128 %arr_11, i128 %sext_ln70_2" [d2.cpp:70]   --->   Operation 386 'add' 'add_ln70_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 387 [1/1] (0.00ns)   --->   "%trunc_ln70_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_2, i32 58, i32 127" [d2.cpp:70]   --->   Operation 387 'partselect' 'trunc_ln70_4' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 388 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln71_2 = add i58 %add_ln52_68, i58 %add_ln52_67" [d2.cpp:71]   --->   Operation 388 'add' 'add_ln71_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 389 [1/1] (0.00ns)   --->   "%trunc_ln71_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %arr_14, i32 58, i32 115" [d2.cpp:71]   --->   Operation 389 'partselect' 'trunc_ln71_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 390 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln71_1 = add i58 %trunc_ln71_2, i58 %add_ln71_2" [d2.cpp:71]   --->   Operation 390 'add' 'add_ln71_1' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 391 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_2 = add i58 %add_ln52_58, i58 %add_ln52_57" [d2.cpp:72]   --->   Operation 391 'add' 'add_ln72_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 392 [1/1] (0.00ns)   --->   "%trunc_ln72_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70, i32 58, i32 115" [d2.cpp:72]   --->   Operation 392 'partselect' 'trunc_ln72_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 393 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln72_1 = add i58 %trunc_ln72_1, i58 %add_ln72_2" [d2.cpp:72]   --->   Operation 393 'add' 'add_ln72_1' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 394 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln73 = add i58 %add_ln52_48, i58 %add_ln52_47" [d2.cpp:73]   --->   Operation 394 'add' 'add_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 395 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_1, i32 58, i32 115" [d2.cpp:73]   --->   Operation 395 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 396 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i58 %trunc_ln5, i58 %add_ln73" [d2.cpp:73]   --->   Operation 396 'add' 'out1_w_3' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 397 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_2, i32 58, i32 115" [d2.cpp:74]   --->   Operation 397 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>

State 50 <SV = 49> <Delay = 6.69>
ST_50 : Operation 398 [1/1] (0.00ns)   --->   "%add122_2409_loc_load = load i128 %add122_2409_loc"   --->   Operation 398 'load' 'add122_2409_loc_load' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 399 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr = add i128 %add_ln52_6, i128 %add_ln52_2" [d2.cpp:52]   --->   Operation 399 'add' 'arr' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 400 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_8 = add i128 %add_ln52_16, i128 %add_ln52_12" [d2.cpp:52]   --->   Operation 400 'add' 'arr_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 401 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_9 = add i128 %add_ln52_26, i128 %add_ln52_22" [d2.cpp:52]   --->   Operation 401 'add' 'arr_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 402 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_10 = add i128 %add_ln52_36, i128 %add_ln52_32" [d2.cpp:52]   --->   Operation 402 'add' 'arr_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 403 [1/1] (0.00ns)   --->   "%sext_ln70_3 = sext i70 %trunc_ln70_4" [d2.cpp:70]   --->   Operation 403 'sext' 'sext_ln70_3' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 404 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_3 = add i128 %arr_10, i128 %sext_ln70_3" [d2.cpp:70]   --->   Operation 404 'add' 'add_ln70_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 405 [1/1] (0.00ns)   --->   "%trunc_ln70_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_3, i32 58, i32 127" [d2.cpp:70]   --->   Operation 405 'partselect' 'trunc_ln70_5' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 406 [1/1] (0.00ns)   --->   "%sext_ln70_4 = sext i70 %trunc_ln70_5" [d2.cpp:70]   --->   Operation 406 'sext' 'sext_ln70_4' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 407 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_4 = add i128 %arr_9, i128 %sext_ln70_4" [d2.cpp:70]   --->   Operation 407 'add' 'add_ln70_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 408 [1/1] (0.00ns)   --->   "%trunc_ln70_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_4, i32 58, i32 127" [d2.cpp:70]   --->   Operation 408 'partselect' 'trunc_ln70_6' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 409 [1/1] (0.00ns)   --->   "%sext_ln70_5 = sext i70 %trunc_ln70_6" [d2.cpp:70]   --->   Operation 409 'sext' 'sext_ln70_5' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 410 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_5 = add i128 %arr_8, i128 %sext_ln70_5" [d2.cpp:70]   --->   Operation 410 'add' 'add_ln70_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 411 [1/1] (0.00ns)   --->   "%trunc_ln70_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_5, i32 58, i32 127" [d2.cpp:70]   --->   Operation 411 'partselect' 'trunc_ln70_7' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 412 [1/1] (0.00ns)   --->   "%sext_ln70_6 = sext i70 %trunc_ln70_7" [d2.cpp:70]   --->   Operation 412 'sext' 'sext_ln70_6' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 413 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln70_6 = add i128 %arr, i128 %sext_ln70_6" [d2.cpp:70]   --->   Operation 413 'add' 'add_ln70_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 414 [1/1] (0.00ns)   --->   "%trunc_ln70_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln70_6, i32 58, i32 127" [d2.cpp:70]   --->   Operation 414 'partselect' 'trunc_ln70_8' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 415 [1/1] (0.00ns)   --->   "%sext_ln70_7 = sext i70 %trunc_ln70_8" [d2.cpp:70]   --->   Operation 415 'sext' 'sext_ln70_7' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 416 [1/1] (1.57ns)   --->   "%add_ln70_7 = add i128 %add122_2409_loc_load, i128 %sext_ln70_7" [d2.cpp:70]   --->   Operation 416 'add' 'add_ln70_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 417 [1/1] (0.00ns)   --->   "%trunc_ln70_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_7, i32 57, i32 114" [d2.cpp:70]   --->   Operation 417 'partselect' 'trunc_ln70_1' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 418 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln70_1, i58 %add_ln70_8" [d2.cpp:70]   --->   Operation 418 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 419 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i58 %add_ln70_8" [d2.cpp:71]   --->   Operation 419 'zext' 'zext_ln71' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 420 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln70_7, i32 57, i32 127" [d2.cpp:71]   --->   Operation 420 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 421 [1/1] (0.00ns)   --->   "%sext_ln71 = sext i71 %trunc_ln3" [d2.cpp:71]   --->   Operation 421 'sext' 'sext_ln71' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 422 [1/1] (1.13ns)   --->   "%add_ln71 = add i72 %sext_ln71, i72 %zext_ln71" [d2.cpp:71]   --->   Operation 422 'add' 'add_ln71' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 423 [1/1] (0.00ns)   --->   "%trunc_ln71_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln71, i32 58, i32 71" [d2.cpp:71]   --->   Operation 423 'partselect' 'trunc_ln71_1' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 424 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74 = add i58 %add_ln52_38, i58 %add_ln52_37" [d2.cpp:74]   --->   Operation 424 'add' 'add_ln74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 425 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i58 %trunc_ln6, i58 %add_ln74" [d2.cpp:74]   --->   Operation 425 'add' 'out1_w_4' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 426 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75 = add i58 %add_ln52_28, i58 %add_ln52_27" [d2.cpp:75]   --->   Operation 426 'add' 'add_ln75' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 427 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_3, i32 58, i32 115" [d2.cpp:75]   --->   Operation 427 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 428 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i58 %trunc_ln7, i58 %add_ln75" [d2.cpp:75]   --->   Operation 428 'add' 'out1_w_5' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 429 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln76 = add i58 %add_ln52_18, i58 %add_ln52_17" [d2.cpp:76]   --->   Operation 429 'add' 'add_ln76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 430 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_4, i32 58, i32 115" [d2.cpp:76]   --->   Operation 430 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 431 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i58 %trunc_ln8, i58 %add_ln76" [d2.cpp:76]   --->   Operation 431 'add' 'out1_w_6' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 432 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln77 = add i58 %add_ln52_8, i58 %add_ln52_7" [d2.cpp:77]   --->   Operation 432 'add' 'add_ln77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 433 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln70_5, i32 58, i32 115" [d2.cpp:77]   --->   Operation 433 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 434 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_7 = add i58 %trunc_ln9, i58 %add_ln77" [d2.cpp:77]   --->   Operation 434 'add' 'out1_w_7' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 435 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln70_6, i32 58, i32 114" [d2.cpp:78]   --->   Operation 435 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 436 [1/1] (0.00ns)   --->   "%trunc_ln78 = trunc i128 %add122_2409_loc_load" [d2.cpp:78]   --->   Operation 436 'trunc' 'trunc_ln78' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 437 [1/1] (1.09ns)   --->   "%out1_w_8 = add i57 %trunc_ln78, i57 %trunc_ln" [d2.cpp:78]   --->   Operation 437 'add' 'out1_w_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 2.95>
ST_51 : Operation 438 [1/1] (0.00ns)   --->   "%sext_ln71_1 = sext i14 %trunc_ln71_1" [d2.cpp:71]   --->   Operation 438 'sext' 'sext_ln71_1' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 439 [1/1] (0.00ns)   --->   "%sext_ln71_2 = sext i14 %trunc_ln71_1" [d2.cpp:71]   --->   Operation 439 'sext' 'sext_ln71_2' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 440 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln71_2, i58 %add_ln71_1" [d2.cpp:71]   --->   Operation 440 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 441 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i58 %add_ln71_1" [d2.cpp:72]   --->   Operation 441 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 442 [1/1] (1.09ns)   --->   "%add_ln72 = add i60 %sext_ln71_1, i60 %zext_ln72" [d2.cpp:72]   --->   Operation 442 'add' 'add_ln72' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 443 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln72, i32 58, i32 59" [d2.cpp:72]   --->   Operation 443 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 444 [1/1] (0.00ns)   --->   "%sext_ln72 = sext i2 %tmp" [d2.cpp:72]   --->   Operation 444 'sext' 'sext_ln72' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 445 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i6 %sext_ln72" [d2.cpp:72]   --->   Operation 445 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 446 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i58 %add_ln72_1" [d2.cpp:72]   --->   Operation 446 'zext' 'zext_ln72_2' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 447 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln72_2, i59 %zext_ln72_1" [d2.cpp:72]   --->   Operation 447 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 448 [2/2] (0.77ns)   --->   "%call_ln82 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln82_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d2.cpp:82]   --->   Operation 448 'call' 'call_ln82' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 51> <Delay = 0.00>
ST_52 : Operation 449 [1/2] (0.00ns)   --->   "%call_ln82 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln82_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d2.cpp:82]   --->   Operation 449 'call' 'call_ln82' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 52> <Delay = 7.30>
ST_53 : Operation 450 [5/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:87]   --->   Operation 450 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 7.30>
ST_54 : Operation 451 [4/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:87]   --->   Operation 451 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 7.30>
ST_55 : Operation 452 [3/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:87]   --->   Operation 452 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 7.30>
ST_56 : Operation 453 [2/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:87]   --->   Operation 453 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 7.30>
ST_57 : Operation 454 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d2.cpp:3]   --->   Operation 454 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 455 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 455 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 456 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 456 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 457 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 457 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 458 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 458 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 459 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 459 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 460 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 460 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 461 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 461 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 462 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 462 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 463 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 463 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 464 [1/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d2.cpp:87]   --->   Operation 464 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 465 [1/1] (0.00ns)   --->   "%ret_ln87 = ret" [d2.cpp:87]   --->   Operation 465 'ret' 'ret_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d2.cpp:22) [39]  (0.000 ns)
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d2.cpp:22) on port 'mem' (d2.cpp:22) [40]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d2.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [41]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d2.cpp:29) [53]  (0.000 ns)
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d2.cpp:29) on port 'mem' (d2.cpp:29) [54]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d2.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [55]  (1.224 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_27', d2.cpp:29) on port 'mem' (d2.cpp:29) [65]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d2.cpp:29) on port 'mem' (d2.cpp:29) [66]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_1', d2.cpp:29) on port 'mem' (d2.cpp:29) [67]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_2', d2.cpp:29) on port 'mem' (d2.cpp:29) [68]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_3', d2.cpp:29) on port 'mem' (d2.cpp:29) [69]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_4', d2.cpp:29) on port 'mem' (d2.cpp:29) [70]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_5', d2.cpp:29) on port 'mem' (d2.cpp:29) [71]  (7.300 ns)

 <State 36>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_6', d2.cpp:29) on port 'mem' (d2.cpp:29) [72]  (7.300 ns)

 <State 37>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_7', d2.cpp:29) on port 'mem' (d2.cpp:29) [73]  (7.300 ns)

 <State 38>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_8', d2.cpp:29) on port 'mem' (d2.cpp:29) [74]  (7.300 ns)

 <State 39>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d2.cpp:50) on port 'mem' (d2.cpp:50) [76]  (7.300 ns)

 <State 40>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_1', d2.cpp:50) on port 'mem' (d2.cpp:50) [77]  (7.300 ns)

 <State 41>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_2', d2.cpp:50) on port 'mem' (d2.cpp:50) [78]  (7.300 ns)

 <State 42>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_3', d2.cpp:50) on port 'mem' (d2.cpp:50) [79]  (7.300 ns)

 <State 43>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_4', d2.cpp:50) on port 'mem' (d2.cpp:50) [80]  (7.300 ns)

 <State 44>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_5', d2.cpp:50) on port 'mem' (d2.cpp:50) [81]  (7.300 ns)

 <State 45>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_6', d2.cpp:50) on port 'mem' (d2.cpp:50) [82]  (7.300 ns)

 <State 46>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_7', d2.cpp:50) on port 'mem' (d2.cpp:50) [83]  (7.300 ns)

 <State 47>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_8', d2.cpp:50) on port 'mem' (d2.cpp:50) [84]  (7.300 ns)

 <State 48>: 5.525ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (1.253 ns)
'mul' operation ('mul_ln52_13', d2.cpp:52) [146]  (3.277 ns)
	'add' operation ('add_ln52_5', d2.cpp:52) [199]  (0.995 ns)

 <State 49>: 7.138ns
The critical path consists of the following:
	'add' operation ('add_ln52_73', d2.cpp:52) [295]  (1.579 ns)
	'add' operation ('add_ln52_76', d2.cpp:52) [300]  (1.579 ns)
	'add' operation ('arr_14', d2.cpp:52) [303]  (0.995 ns)
	'add' operation ('add_ln70', d2.cpp:70) [307]  (0.995 ns)
	'add' operation ('add_ln70_1', d2.cpp:70) [310]  (0.995 ns)
	'add' operation ('add_ln70_2', d2.cpp:70) [313]  (0.995 ns)

 <State 50>: 6.698ns
The critical path consists of the following:
	'add' operation ('arr_10', d2.cpp:52) [247]  (0.000 ns)
	'add' operation ('add_ln70_3', d2.cpp:70) [316]  (0.995 ns)
	'add' operation ('add_ln70_4', d2.cpp:70) [319]  (0.995 ns)
	'add' operation ('add_ln70_5', d2.cpp:70) [322]  (0.995 ns)
	'add' operation ('add_ln70_6', d2.cpp:70) [325]  (0.995 ns)
	'add' operation ('add_ln70_7', d2.cpp:70) [328]  (1.579 ns)
	'add' operation ('add_ln71', d2.cpp:71) [334]  (1.139 ns)

 <State 51>: 2.957ns
The critical path consists of the following:
	'add' operation ('add_ln72', d2.cpp:72) [343]  (1.093 ns)
	'add' operation ('out1_w', d2.cpp:72) [351]  (1.093 ns)
	'call' operation ('call_ln82', d2.cpp:82) to 'test_Pipeline_ARRAY_WRITE' [374]  (0.770 ns)

 <State 52>: 0.000ns
The critical path consists of the following:

 <State 53>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d2.cpp:87) on port 'mem' (d2.cpp:87) [375]  (7.300 ns)

 <State 54>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d2.cpp:87) on port 'mem' (d2.cpp:87) [375]  (7.300 ns)

 <State 55>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d2.cpp:87) on port 'mem' (d2.cpp:87) [375]  (7.300 ns)

 <State 56>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d2.cpp:87) on port 'mem' (d2.cpp:87) [375]  (7.300 ns)

 <State 57>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d2.cpp:87) on port 'mem' (d2.cpp:87) [375]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
