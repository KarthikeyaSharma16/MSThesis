// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module test_test_Pipeline_VITIS_LOOP_36_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RFIFONUM,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        arg1,
        arg2,
        conv35,
        add47_3_172_out,
        add47_3_172_out_ap_vld,
        add47_371_out,
        add47_371_out_ap_vld,
        add47_2_170_out,
        add47_2_170_out_ap_vld,
        add47_269_out,
        add47_269_out_ap_vld,
        add47_1_168_out,
        add47_1_168_out_ap_vld,
        add47_167_out,
        add47_167_out_ap_vld,
        add47_12666_out,
        add47_12666_out_ap_vld,
        add4765_out,
        add4765_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [63:0] m_axi_mem_WDATA;
output  [7:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [63:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [8:0] m_axi_mem_RFIFONUM;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [63:0] arg1;
input  [63:0] arg2;
input  [63:0] conv35;
output  [127:0] add47_3_172_out;
output   add47_3_172_out_ap_vld;
output  [127:0] add47_371_out;
output   add47_371_out_ap_vld;
output  [127:0] add47_2_170_out;
output   add47_2_170_out_ap_vld;
output  [127:0] add47_269_out;
output   add47_269_out_ap_vld;
output  [127:0] add47_1_168_out;
output   add47_1_168_out_ap_vld;
output  [127:0] add47_167_out;
output   add47_167_out_ap_vld;
output  [127:0] add47_12666_out;
output   add47_12666_out_ap_vld;
output  [127:0] add4765_out;
output   add4765_out_ap_vld;

reg ap_idle;
reg m_axi_mem_ARVALID;
reg[63:0] m_axi_mem_ARADDR;
reg m_axi_mem_RREADY;
reg add47_3_172_out_ap_vld;
reg add47_371_out_ap_vld;
reg add47_2_170_out_ap_vld;
reg add47_269_out_ap_vld;
reg add47_1_168_out_ap_vld;
reg add47_167_out_ap_vld;
reg add47_12666_out_ap_vld;
reg add4765_out_ap_vld;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
reg   [0:0] tmp_reg_1958;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
wire    ap_block_state26_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_subdone;
reg    ap_condition_exit_pp0_iter0_stage9;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_subdone;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    mem_blk_n_R;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [127:0] conv35_cast_fu_452_p1;
reg   [127:0] conv35_cast_reg_1935;
reg   [4:0] i_1_reg_1940;
wire   [0:0] tmp_fu_504_p3;
wire   [3:0] trunc_ln36_fu_512_p1;
reg   [3:0] trunc_ln36_reg_1962;
reg   [60:0] trunc_ln1_reg_1967;
wire   [3:0] sub_ln53_fu_555_p2;
reg   [3:0] sub_ln53_reg_1972;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [60:0] trunc_ln2_reg_1983;
wire   [0:0] icmp_ln50_fu_597_p2;
reg   [0:0] icmp_ln50_reg_1988;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_state19_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [60:0] trunc_ln50_1_reg_2000;
wire   [0:0] icmp_ln52_fu_636_p2;
reg   [0:0] icmp_ln52_reg_2005;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_state20_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire   [3:0] k_s_fu_646_p2;
reg   [3:0] k_s_reg_2010;
reg   [60:0] trunc_ln52_1_reg_2021;
wire   [0:0] icmp_ln50_1_fu_695_p2;
reg   [0:0] icmp_ln50_1_reg_2026;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_state21_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire   [3:0] k_1_fu_704_p2;
reg   [3:0] k_1_reg_2031;
reg   [60:0] trunc_ln50_2_reg_2042;
wire   [0:0] icmp_ln52_1_fu_747_p2;
reg   [0:0] icmp_ln52_1_reg_2047;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_state22_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire   [3:0] k_1_28_fu_756_p2;
reg   [3:0] k_1_28_reg_2052;
reg   [60:0] trunc_ln52_2_reg_2063;
wire   [0:0] icmp_ln50_2_fu_798_p2;
reg   [0:0] icmp_ln50_2_reg_2068;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state23_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire   [3:0] k_2_fu_807_p2;
reg   [3:0] k_2_reg_2073;
reg   [60:0] trunc_ln50_3_reg_2084;
wire   [0:0] icmp_ln52_2_fu_849_p2;
reg   [0:0] icmp_ln52_2_reg_2089;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_state24_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire   [3:0] k_2_29_fu_858_p2;
reg   [3:0] k_2_29_reg_2094;
reg   [60:0] trunc_ln52_3_reg_2105;
wire   [0:0] icmp_ln50_3_fu_900_p2;
reg   [0:0] icmp_ln50_3_reg_2110;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
reg    ap_block_state25_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
wire   [3:0] k_3_fu_909_p2;
reg   [3:0] k_3_reg_2115;
reg   [60:0] trunc_ln50_4_reg_2126;
reg   [63:0] mem_addr_read_reg_2131;
reg    ap_block_pp0_stage9_11001;
wire   [0:0] icmp_ln52_3_fu_951_p2;
reg   [0:0] icmp_ln52_3_reg_2136;
wire   [3:0] k_3_30_fu_960_p2;
reg   [3:0] k_3_30_reg_2141;
reg   [60:0] trunc_ln52_4_reg_2152;
wire   [127:0] zext_ln50_fu_1002_p1;
reg   [127:0] zext_ln50_reg_2157;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
reg   [63:0] mem_addr_1_read_reg_2162;
wire   [127:0] and_ln52_fu_1013_p2;
reg   [127:0] and_ln52_reg_2167;
wire   [0:0] icmp_ln50_4_fu_1019_p2;
reg   [0:0] icmp_ln50_4_reg_2172;
wire   [3:0] k_4_fu_1029_p2;
reg   [3:0] k_4_reg_2177;
reg   [60:0] trunc_ln50_5_reg_2188;
reg   [63:0] mem_addr_2_read_reg_2193;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
wire   [0:0] icmp_ln52_4_fu_1102_p2;
reg   [0:0] icmp_ln52_4_reg_2198;
wire   [3:0] k_4_31_fu_1112_p2;
reg   [3:0] k_4_31_reg_2203;
reg   [60:0] trunc_ln52_5_reg_2214;
reg   [63:0] mem_addr_3_read_reg_2219;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
wire   [127:0] and_ln52_2_fu_1176_p2;
reg   [127:0] and_ln52_2_reg_2224;
wire   [0:0] icmp_ln50_5_fu_1182_p2;
reg   [0:0] icmp_ln50_5_reg_2229;
wire   [3:0] k_5_fu_1191_p2;
reg   [3:0] k_5_reg_2234;
wire   [0:0] icmp_ln52_5_fu_1206_p2;
reg   [0:0] icmp_ln52_5_reg_2245;
reg   [60:0] trunc_ln50_6_reg_2251;
wire   [0:0] icmp_ln50_6_fu_1247_p2;
reg   [0:0] icmp_ln50_6_reg_2256;
wire   [0:0] icmp_ln52_6_fu_1262_p2;
reg   [0:0] icmp_ln52_6_reg_2262;
wire   [0:0] icmp_ln50_7_fu_1268_p2;
reg   [0:0] icmp_ln50_7_reg_2268;
wire   [0:0] icmp_ln52_7_fu_1273_p2;
reg   [0:0] icmp_ln52_7_reg_2273;
reg   [63:0] mem_addr_4_read_reg_2278;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage13_11001;
wire   [3:0] k_5_32_fu_1312_p2;
reg   [3:0] k_5_32_reg_2283;
reg   [60:0] trunc_ln52_6_reg_2294;
reg   [63:0] mem_addr_5_read_reg_2299;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage14_11001;
wire   [127:0] and_ln52_4_fu_1376_p2;
reg   [127:0] and_ln52_4_reg_2304;
reg   [60:0] trunc_ln50_7_reg_2315;
reg   [63:0] mem_addr_6_read_reg_2320;
reg    ap_block_pp0_stage15_11001;
reg   [60:0] trunc_ln52_7_reg_2331;
reg   [63:0] mem_addr_7_read_reg_2336;
wire   [127:0] and_ln52_6_fu_1525_p2;
reg   [127:0] and_ln52_6_reg_2341;
reg   [63:0] mem_addr_8_read_reg_2352;
reg   [63:0] mem_addr_9_read_reg_2357;
wire   [127:0] and_ln52_8_fu_1594_p2;
reg   [127:0] and_ln52_8_reg_2362;
reg   [63:0] mem_addr_10_read_reg_2367;
reg   [63:0] mem_addr_11_read_reg_2372;
wire   [127:0] and_ln52_10_fu_1653_p2;
reg   [127:0] and_ln52_10_reg_2377;
reg   [63:0] mem_addr_12_read_reg_2382;
reg   [63:0] mem_addr_13_read_reg_2387;
wire   [127:0] and_ln52_12_fu_1712_p2;
reg   [127:0] and_ln52_12_reg_2392;
reg   [63:0] mem_addr_14_read_reg_2397;
reg   [63:0] mem_addr_15_read_reg_2402;
wire   [127:0] and_ln52_14_fu_1771_p2;
reg   [127:0] and_ln52_14_reg_2407;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] sext_ln50_1_fu_560_p1;
wire  signed [63:0] sext_ln52_5_fu_603_p1;
wire  signed [63:0] sext_ln50_2_fu_651_p1;
wire  signed [63:0] sext_ln52_8_fu_710_p1;
wire  signed [63:0] sext_ln50_fu_761_p1;
wire  signed [63:0] sext_ln52_14_fu_812_p1;
wire  signed [63:0] sext_ln50_3_fu_863_p1;
wire  signed [63:0] sext_ln52_20_fu_914_p1;
wire  signed [63:0] sext_ln50_4_fu_965_p1;
wire  signed [63:0] sext_ln52_24_fu_1034_p1;
wire  signed [63:0] sext_ln50_5_fu_1117_p1;
wire  signed [63:0] sext_ln52_26_fu_1196_p1;
wire  signed [63:0] sext_ln50_6_fu_1317_p1;
wire  signed [63:0] sext_ln52_28_fu_1390_p1;
wire  signed [63:0] sext_ln50_7_fu_1466_p1;
wire  signed [63:0] sext_ln52_30_fu_1531_p1;
reg   [127:0] add4765_fu_128;
wire   [127:0] add_ln52_2_fu_1096_p2;
wire    ap_loop_init;
reg   [127:0] add47_12666_fu_132;
wire   [127:0] add_ln52_5_fu_1303_p2;
reg   [127:0] add47_167_fu_136;
wire   [127:0] add_ln52_8_fu_1452_p2;
reg   [127:0] add47_1_168_fu_140;
wire   [127:0] add_ln52_11_fu_1566_p2;
reg   [127:0] add47_269_fu_144;
wire   [127:0] add_ln52_14_fu_1625_p2;
reg   [127:0] add47_2_170_fu_148;
wire   [127:0] add_ln52_17_fu_1684_p2;
reg   [127:0] add47_371_fu_152;
wire   [127:0] add_ln52_20_fu_1743_p2;
reg   [127:0] add47_3_172_fu_156;
wire   [127:0] add_ln52_23_fu_1802_p2;
reg   [4:0] i_fu_160;
wire   [4:0] add_ln36_fu_544_p2;
reg   [4:0] ap_sig_allocacmp_i_1;
reg    ap_block_pp0_stage9_01001;
reg   [63:0] grp_fu_430_p0;
wire   [127:0] zext_ln52_fu_1074_p1;
wire   [127:0] zext_ln50_1_fu_1164_p1;
wire   [127:0] zext_ln52_1_fu_1281_p1;
wire   [127:0] zext_ln50_3_fu_1364_p1;
wire   [127:0] zext_ln52_2_fu_1430_p1;
wire   [127:0] zext_ln50_4_fu_1513_p1;
wire   [127:0] zext_ln52_3_fu_1544_p1;
wire   [127:0] zext_ln50_5_fu_1582_p1;
wire   [127:0] zext_ln52_4_fu_1603_p1;
wire   [127:0] zext_ln50_6_fu_1641_p1;
wire   [127:0] zext_ln52_5_fu_1662_p1;
wire   [127:0] zext_ln50_7_fu_1700_p1;
wire   [127:0] zext_ln52_6_fu_1721_p1;
wire   [127:0] zext_ln50_8_fu_1759_p1;
wire   [127:0] zext_ln52_7_fu_1780_p1;
reg   [63:0] grp_fu_430_p1;
wire   [6:0] tmp_3_fu_516_p3;
wire   [63:0] p_cast16_fu_524_p1;
wire   [63:0] empty_fu_528_p2;
wire   [6:0] shl_ln_fu_570_p3;
wire  signed [63:0] sext_ln52_2_fu_578_p1;
wire   [63:0] add_ln52_fu_582_p2;
wire   [1:0] grp_fu_434_p4;
wire   [63:0] select_ln50_fu_613_p3;
wire   [63:0] add_ln50_fu_621_p2;
wire   [3:0] zext_ln53_fu_642_p1;
wire   [6:0] shl_ln52_1_fu_661_p3;
wire  signed [63:0] sext_ln52_fu_669_p1;
wire   [63:0] add_ln52_3_fu_673_p2;
wire   [3:0] k_fu_688_p3;
wire   [3:0] zext_ln51_fu_700_p1;
wire   [6:0] shl_ln50_7_fu_720_p3;
wire   [63:0] zext_ln50_2_fu_728_p1;
wire   [63:0] add_ln50_1_fu_732_p2;
wire   [3:0] zext_ln53_1_fu_752_p1;
wire   [6:0] shl_ln52_2_fu_771_p3;
wire  signed [63:0] sext_ln52_11_fu_779_p1;
wire   [63:0] add_ln52_6_fu_783_p2;
wire   [3:0] zext_ln51_1_fu_803_p1;
wire   [6:0] shl_ln50_8_fu_822_p3;
wire   [63:0] zext_ln50_9_fu_830_p1;
wire   [63:0] add_ln50_2_fu_834_p2;
wire   [3:0] zext_ln53_2_fu_854_p1;
wire   [6:0] shl_ln52_3_fu_873_p3;
wire  signed [63:0] sext_ln52_17_fu_881_p1;
wire   [63:0] add_ln52_9_fu_885_p2;
wire   [3:0] zext_ln51_2_fu_905_p1;
wire   [6:0] shl_ln50_9_fu_924_p3;
wire   [63:0] zext_ln50_10_fu_932_p1;
wire   [63:0] add_ln50_3_fu_936_p2;
wire   [3:0] zext_ln53_3_fu_956_p1;
wire   [6:0] shl_ln52_4_fu_975_p3;
wire  signed [63:0] sext_ln52_23_fu_983_p1;
wire   [63:0] add_ln52_12_fu_987_p2;
wire   [127:0] grp_fu_430_p2;
wire   [127:0] select_ln52_fu_1006_p3;
wire   [2:0] grp_fu_443_p4;
wire   [3:0] zext_ln51_3_fu_1025_p1;
wire   [6:0] shl_ln50_s_fu_1044_p3;
wire   [63:0] zext_ln50_11_fu_1052_p1;
wire   [63:0] add_ln50_4_fu_1056_p2;
wire   [127:0] select_ln52_1_fu_1078_p3;
wire   [127:0] and_ln52_1_fu_1085_p2;
wire   [127:0] add_ln52_1_fu_1091_p2;
wire   [3:0] zext_ln53_4_fu_1108_p1;
wire   [6:0] shl_ln52_5_fu_1127_p3;
wire  signed [63:0] sext_ln52_25_fu_1135_p1;
wire   [63:0] add_ln52_15_fu_1139_p2;
wire   [63:0] shl_ln50_fu_1159_p2;
wire   [127:0] select_ln52_2_fu_1169_p3;
wire   [3:0] zext_ln51_4_fu_1187_p1;
wire   [6:0] shl_ln50_5_fu_1211_p3;
wire   [63:0] zext_ln50_12_fu_1219_p1;
wire   [63:0] add_ln50_5_fu_1223_p2;
wire   [3:0] tmp_6_fu_1238_p4;
wire   [3:0] tmp_7_fu_1253_p4;
wire   [127:0] select_ln52_3_fu_1285_p3;
wire   [127:0] and_ln52_3_fu_1292_p2;
wire   [127:0] add_ln52_4_fu_1298_p2;
wire   [3:0] zext_ln53_5_fu_1309_p1;
wire   [6:0] shl_ln52_6_fu_1327_p3;
wire  signed [63:0] sext_ln52_27_fu_1335_p1;
wire   [63:0] add_ln52_18_fu_1339_p2;
wire   [63:0] shl_ln50_1_fu_1359_p2;
wire   [127:0] select_ln52_4_fu_1369_p3;
wire   [3:0] zext_ln51_5_fu_1382_p1;
wire   [3:0] k_6_fu_1385_p2;
wire   [6:0] shl_ln50_10_fu_1400_p3;
wire   [63:0] zext_ln50_13_fu_1408_p1;
wire   [63:0] add_ln50_6_fu_1412_p2;
wire   [127:0] select_ln52_5_fu_1434_p3;
wire   [127:0] and_ln52_5_fu_1441_p2;
wire   [127:0] add_ln52_7_fu_1447_p2;
wire   [3:0] zext_ln53_6_fu_1458_p1;
wire   [3:0] k_6_33_fu_1461_p2;
wire   [6:0] shl_ln52_7_fu_1476_p3;
wire  signed [63:0] sext_ln52_29_fu_1484_p1;
wire   [63:0] add_ln52_21_fu_1488_p2;
wire   [63:0] shl_ln50_2_fu_1508_p2;
wire   [127:0] select_ln52_6_fu_1518_p3;
wire   [127:0] select_ln52_7_fu_1548_p3;
wire   [127:0] and_ln52_7_fu_1555_p2;
wire   [127:0] add_ln52_10_fu_1561_p2;
wire   [63:0] shl_ln50_3_fu_1577_p2;
wire   [127:0] select_ln52_8_fu_1587_p3;
wire   [127:0] select_ln52_9_fu_1607_p3;
wire   [127:0] and_ln52_9_fu_1614_p2;
wire   [127:0] add_ln52_13_fu_1620_p2;
wire   [63:0] shl_ln50_4_fu_1636_p2;
wire   [127:0] select_ln52_10_fu_1646_p3;
wire   [127:0] select_ln52_11_fu_1666_p3;
wire   [127:0] and_ln52_11_fu_1673_p2;
wire   [127:0] add_ln52_16_fu_1679_p2;
wire   [63:0] shl_ln50_6_fu_1695_p2;
wire   [127:0] select_ln52_12_fu_1705_p3;
wire   [127:0] select_ln52_13_fu_1725_p3;
wire   [127:0] and_ln52_13_fu_1732_p2;
wire   [127:0] add_ln52_19_fu_1738_p2;
wire   [63:0] shl_ln50_11_fu_1754_p2;
wire   [127:0] select_ln52_14_fu_1764_p3;
wire   [127:0] select_ln52_15_fu_1784_p3;
wire   [127:0] and_ln52_15_fu_1791_p2;
wire   [127:0] add_ln52_22_fu_1797_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

test_mul_64ns_64ns_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64ns_64ns_128_1_1_U23(
    .din0(grp_fu_430_p0),
    .din1(grp_fu_430_p1),
    .dout(grp_fu_430_p2)
);

test_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage9),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage9)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add4765_fu_128 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (tmp_reg_1958 == 1'd0))) begin
        add4765_fu_128 <= add_ln52_2_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_12666_fu_132 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (tmp_reg_1958 == 1'd0))) begin
        add47_12666_fu_132 <= add_ln52_5_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_167_fu_136 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (tmp_reg_1958 == 1'd0))) begin
        add47_167_fu_136 <= add_ln52_8_fu_1452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_1_168_fu_140 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add47_1_168_fu_140 <= add_ln52_11_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_269_fu_144 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add47_269_fu_144 <= add_ln52_14_fu_1625_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_2_170_fu_148 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add47_2_170_fu_148 <= add_ln52_17_fu_1684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_371_fu_152 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add47_371_fu_152 <= add_ln52_20_fu_1743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add47_3_172_fu_156 <= 128'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add47_3_172_fu_156 <= add_ln52_23_fu_1802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((tmp_fu_504_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_160 <= add_ln36_fu_544_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_160 <= 5'd8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln52_10_reg_2377 <= and_ln52_10_fu_1653_p2;
        mem_addr_11_read_reg_2372 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        and_ln52_12_reg_2392 <= and_ln52_12_fu_1712_p2;
        mem_addr_13_read_reg_2387 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        and_ln52_14_reg_2407 <= and_ln52_14_fu_1771_p2;
        mem_addr_15_read_reg_2402 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (tmp_reg_1958 == 1'd0))) begin
        and_ln52_2_reg_2224 <= and_ln52_2_fu_1176_p2;
        icmp_ln50_5_reg_2229 <= icmp_ln50_5_fu_1182_p2;
        icmp_ln50_6_reg_2256 <= icmp_ln50_6_fu_1247_p2;
        icmp_ln50_7_reg_2268 <= icmp_ln50_7_fu_1268_p2;
        icmp_ln52_5_reg_2245 <= icmp_ln52_5_fu_1206_p2;
        icmp_ln52_6_reg_2262 <= icmp_ln52_6_fu_1262_p2;
        icmp_ln52_7_reg_2273 <= icmp_ln52_7_fu_1273_p2;
        k_5_reg_2234 <= k_5_fu_1191_p2;
        mem_addr_3_read_reg_2219 <= m_axi_mem_RDATA;
        trunc_ln50_6_reg_2251 <= {{add_ln50_5_fu_1223_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (tmp_reg_1958 == 1'd0))) begin
        and_ln52_4_reg_2304 <= and_ln52_4_fu_1376_p2;
        mem_addr_5_read_reg_2299 <= m_axi_mem_RDATA;
        trunc_ln50_7_reg_2315 <= {{add_ln50_6_fu_1412_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln52_6_reg_2341 <= and_ln52_6_fu_1525_p2;
        conv35_cast_reg_1935[63 : 0] <= conv35_cast_fu_452_p1[63 : 0];
        i_1_reg_1940 <= ap_sig_allocacmp_i_1;
        mem_addr_7_read_reg_2336 <= m_axi_mem_RDATA;
        tmp_reg_1958 <= ap_sig_allocacmp_i_1[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln52_8_reg_2362 <= and_ln52_8_fu_1594_p2;
        mem_addr_9_read_reg_2357 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (tmp_reg_1958 == 1'd0))) begin
        and_ln52_reg_2167 <= and_ln52_fu_1013_p2;
        icmp_ln50_4_reg_2172 <= icmp_ln50_4_fu_1019_p2;
        k_4_reg_2177 <= k_4_fu_1029_p2;
        mem_addr_1_read_reg_2162 <= m_axi_mem_RDATA;
        trunc_ln50_5_reg_2188 <= {{add_ln50_4_fu_1056_p2[63:3]}};
        zext_ln50_reg_2157[63 : 0] <= zext_ln50_fu_1002_p1[63 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln50_1_reg_2026 <= icmp_ln50_1_fu_695_p2;
        k_1_reg_2031 <= k_1_fu_704_p2;
        trunc_ln50_2_reg_2042 <= {{add_ln50_1_fu_732_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln50_2_reg_2068 <= icmp_ln50_2_fu_798_p2;
        k_2_reg_2073 <= k_2_fu_807_p2;
        trunc_ln50_3_reg_2084 <= {{add_ln50_2_fu_834_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln50_3_reg_2110 <= icmp_ln50_3_fu_900_p2;
        k_3_reg_2115 <= k_3_fu_909_p2;
        trunc_ln50_4_reg_2126 <= {{add_ln50_3_fu_936_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln50_reg_1988 <= icmp_ln50_fu_597_p2;
        trunc_ln50_1_reg_2000 <= {{add_ln50_fu_621_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln52_1_reg_2047 <= icmp_ln52_1_fu_747_p2;
        k_1_28_reg_2052 <= k_1_28_fu_756_p2;
        trunc_ln52_2_reg_2063 <= {{add_ln52_6_fu_783_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln52_2_reg_2089 <= icmp_ln52_2_fu_849_p2;
        k_2_29_reg_2094 <= k_2_29_fu_858_p2;
        trunc_ln52_3_reg_2105 <= {{add_ln52_9_fu_885_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln52_3_reg_2136 <= icmp_ln52_3_fu_951_p2;
        k_3_30_reg_2141 <= k_3_30_fu_960_p2;
        mem_addr_read_reg_2131 <= m_axi_mem_RDATA;
        trunc_ln52_4_reg_2152 <= {{add_ln52_12_fu_987_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln52_4_reg_2198 <= icmp_ln52_4_fu_1102_p2;
        k_4_31_reg_2203 <= k_4_31_fu_1112_p2;
        mem_addr_2_read_reg_2193 <= m_axi_mem_RDATA;
        trunc_ln52_5_reg_2214 <= {{add_ln52_15_fu_1139_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_1958 == 1'd0))) begin
        icmp_ln52_reg_2005 <= icmp_ln52_fu_636_p2;
        k_s_reg_2010 <= k_s_fu_646_p2;
        trunc_ln52_1_reg_2021 <= {{add_ln52_3_fu_673_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (tmp_reg_1958 == 1'd0))) begin
        k_5_32_reg_2283 <= k_5_32_fu_1312_p2;
        mem_addr_4_read_reg_2278 <= m_axi_mem_RDATA;
        trunc_ln52_6_reg_2294 <= {{add_ln52_18_fu_1339_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mem_addr_10_read_reg_2367 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mem_addr_12_read_reg_2382 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        mem_addr_14_read_reg_2397 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (tmp_reg_1958 == 1'd0))) begin
        mem_addr_6_read_reg_2320 <= m_axi_mem_RDATA;
        trunc_ln52_7_reg_2331 <= {{add_ln52_21_fu_1488_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mem_addr_8_read_reg_2352 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_1958 == 1'd0))) begin
        sub_ln53_reg_1972 <= sub_ln53_fu_555_p2;
        trunc_ln2_reg_1983 <= {{add_ln52_fu_582_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_504_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln1_reg_1967 <= {{empty_fu_528_p2[63:3]}};
        trunc_ln36_reg_1962 <= trunc_ln36_fu_512_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add4765_out_ap_vld = 1'b1;
    end else begin
        add4765_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_12666_out_ap_vld = 1'b1;
    end else begin
        add47_12666_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_167_out_ap_vld = 1'b1;
    end else begin
        add47_167_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_1_168_out_ap_vld = 1'b1;
    end else begin
        add47_1_168_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_269_out_ap_vld = 1'b1;
    end else begin
        add47_269_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_2_170_out_ap_vld = 1'b1;
    end else begin
        add47_2_170_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_371_out_ap_vld = 1'b1;
    end else begin
        add47_371_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd1))) begin
        add47_3_172_out_ap_vld = 1'b1;
    end else begin
        add47_3_172_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone) & (tmp_reg_1958 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 5'd8;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_160;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_430_p0 = zext_ln52_7_fu_1780_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_430_p0 = zext_ln50_8_fu_1759_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_430_p0 = zext_ln52_6_fu_1721_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_430_p0 = zext_ln50_7_fu_1700_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_430_p0 = zext_ln52_5_fu_1662_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_430_p0 = zext_ln50_6_fu_1641_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_430_p0 = zext_ln52_4_fu_1603_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_430_p0 = zext_ln50_5_fu_1582_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_430_p0 = zext_ln52_3_fu_1544_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_430_p0 = zext_ln50_4_fu_1513_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_430_p0 = zext_ln52_2_fu_1430_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_430_p0 = zext_ln50_3_fu_1364_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_430_p0 = zext_ln52_1_fu_1281_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_430_p0 = zext_ln50_1_fu_1164_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_430_p0 = zext_ln52_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_430_p0 = zext_ln50_fu_1002_p1;
    end else begin
        grp_fu_430_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) 
    | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)))) begin
        grp_fu_430_p1 = zext_ln50_reg_2157;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_430_p1 = conv35_cast_reg_1935;
    end else begin
        grp_fu_430_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_mem_ARADDR = sext_ln52_30_fu_1531_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_7_fu_1466_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_28_fu_1390_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_6_fu_1317_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_26_fu_1196_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_5_fu_1117_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_24_fu_1034_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_4_fu_965_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_20_fu_914_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_3_fu_863_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_14_fu_812_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_fu_761_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_8_fu_710_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_2_fu_651_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln52_5_fu_603_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_1958 == 1'd0))) begin
        m_axi_mem_ARADDR = sext_ln50_1_fu_560_p1;
    end else begin
        m_axi_mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & 
    (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) 
    & (1'b0 == ap_block_pp0_stage15_11001) & (tmp_reg_1958 == 1'd0)))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (tmp_reg_1958 == 1'd0)))) begin
        m_axi_mem_RREADY = 1'b1;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (tmp_reg_1958 == 1'd0)))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) 
    & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (tmp_reg_1958 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (tmp_reg_1958 == 1'd0)))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage9)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add4765_out = add4765_fu_128;

assign add47_12666_out = add47_12666_fu_132;

assign add47_167_out = add47_167_fu_136;

assign add47_1_168_out = add47_1_168_fu_140;

assign add47_269_out = add47_269_fu_144;

assign add47_2_170_out = add47_2_170_fu_148;

assign add47_371_out = add47_371_fu_152;

assign add47_3_172_out = add47_3_172_fu_156;

assign add_ln36_fu_544_p2 = ($signed(ap_sig_allocacmp_i_1) + $signed(5'd31));

assign add_ln50_1_fu_732_p2 = (zext_ln50_2_fu_728_p1 + arg2);

assign add_ln50_2_fu_834_p2 = (zext_ln50_9_fu_830_p1 + arg2);

assign add_ln50_3_fu_936_p2 = (zext_ln50_10_fu_932_p1 + arg2);

assign add_ln50_4_fu_1056_p2 = (zext_ln50_11_fu_1052_p1 + arg2);

assign add_ln50_5_fu_1223_p2 = (zext_ln50_12_fu_1219_p1 + arg2);

assign add_ln50_6_fu_1412_p2 = (zext_ln50_13_fu_1408_p1 + arg2);

assign add_ln50_fu_621_p2 = (select_ln50_fu_613_p3 + arg2);

assign add_ln52_10_fu_1561_p2 = (and_ln52_7_fu_1555_p2 + and_ln52_6_reg_2341);

assign add_ln52_11_fu_1566_p2 = (add47_1_168_fu_140 + add_ln52_10_fu_1561_p2);

assign add_ln52_12_fu_987_p2 = ($signed(sext_ln52_23_fu_983_p1) + $signed(arg2));

assign add_ln52_13_fu_1620_p2 = (and_ln52_9_fu_1614_p2 + and_ln52_8_reg_2362);

assign add_ln52_14_fu_1625_p2 = (add47_269_fu_144 + add_ln52_13_fu_1620_p2);

assign add_ln52_15_fu_1139_p2 = ($signed(sext_ln52_25_fu_1135_p1) + $signed(arg2));

assign add_ln52_16_fu_1679_p2 = (and_ln52_11_fu_1673_p2 + and_ln52_10_reg_2377);

assign add_ln52_17_fu_1684_p2 = (add47_2_170_fu_148 + add_ln52_16_fu_1679_p2);

assign add_ln52_18_fu_1339_p2 = ($signed(sext_ln52_27_fu_1335_p1) + $signed(arg2));

assign add_ln52_19_fu_1738_p2 = (and_ln52_13_fu_1732_p2 + and_ln52_12_reg_2392);

assign add_ln52_1_fu_1091_p2 = (and_ln52_1_fu_1085_p2 + and_ln52_reg_2167);

assign add_ln52_20_fu_1743_p2 = (add47_371_fu_152 + add_ln52_19_fu_1738_p2);

assign add_ln52_21_fu_1488_p2 = ($signed(sext_ln52_29_fu_1484_p1) + $signed(arg2));

assign add_ln52_22_fu_1797_p2 = (and_ln52_15_fu_1791_p2 + and_ln52_14_reg_2407);

assign add_ln52_23_fu_1802_p2 = (add47_3_172_fu_156 + add_ln52_22_fu_1797_p2);

assign add_ln52_2_fu_1096_p2 = (add4765_fu_128 + add_ln52_1_fu_1091_p2);

assign add_ln52_3_fu_673_p2 = ($signed(sext_ln52_fu_669_p1) + $signed(arg2));

assign add_ln52_4_fu_1298_p2 = (and_ln52_3_fu_1292_p2 + and_ln52_2_reg_2224);

assign add_ln52_5_fu_1303_p2 = (add47_12666_fu_132 + add_ln52_4_fu_1298_p2);

assign add_ln52_6_fu_783_p2 = ($signed(sext_ln52_11_fu_779_p1) + $signed(arg2));

assign add_ln52_7_fu_1447_p2 = (and_ln52_5_fu_1441_p2 + and_ln52_4_reg_2304);

assign add_ln52_8_fu_1452_p2 = (add47_167_fu_136 + add_ln52_7_fu_1447_p2);

assign add_ln52_9_fu_885_p2 = ($signed(sext_ln52_17_fu_881_p1) + $signed(arg2));

assign add_ln52_fu_582_p2 = ($signed(sext_ln52_2_fu_578_p1) + $signed(arg2));

assign and_ln52_10_fu_1653_p2 = (select_ln52_10_fu_1646_p3 & grp_fu_430_p2);

assign and_ln52_11_fu_1673_p2 = (select_ln52_11_fu_1666_p3 & grp_fu_430_p2);

assign and_ln52_12_fu_1712_p2 = (select_ln52_12_fu_1705_p3 & grp_fu_430_p2);

assign and_ln52_13_fu_1732_p2 = (select_ln52_13_fu_1725_p3 & grp_fu_430_p2);

assign and_ln52_14_fu_1771_p2 = (select_ln52_14_fu_1764_p3 & grp_fu_430_p2);

assign and_ln52_15_fu_1791_p2 = (select_ln52_15_fu_1784_p3 & grp_fu_430_p2);

assign and_ln52_1_fu_1085_p2 = (select_ln52_1_fu_1078_p3 & grp_fu_430_p2);

assign and_ln52_2_fu_1176_p2 = (select_ln52_2_fu_1169_p3 & grp_fu_430_p2);

assign and_ln52_3_fu_1292_p2 = (select_ln52_3_fu_1285_p3 & grp_fu_430_p2);

assign and_ln52_4_fu_1376_p2 = (select_ln52_4_fu_1369_p3 & grp_fu_430_p2);

assign and_ln52_5_fu_1441_p2 = (select_ln52_5_fu_1434_p3 & grp_fu_430_p2);

assign and_ln52_6_fu_1525_p2 = (select_ln52_6_fu_1518_p3 & grp_fu_430_p2);

assign and_ln52_7_fu_1555_p2 = (select_ln52_7_fu_1548_p3 & grp_fu_430_p2);

assign and_ln52_8_fu_1594_p2 = (select_ln52_8_fu_1587_p3 & grp_fu_430_p2);

assign and_ln52_9_fu_1614_p2 = (select_ln52_9_fu_1607_p3 & grp_fu_430_p2);

assign and_ln52_fu_1013_p2 = (select_ln52_fu_1006_p3 & grp_fu_430_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_mem_RVALID == 1'b0) | (m_axi_mem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_mem_RVALID == 1'b0) | (m_axi_mem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((m_axi_mem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_mem_RVALID == 1'b0) & (tmp_reg_1958 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1 = (m_axi_mem_RVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage3_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage4_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage5_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage6_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage7_iter1 = (m_axi_mem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_pp0_stage8_iter1 = (m_axi_mem_RVALID == 1'b0);
end

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_mem_ARREADY == 1'b0) & (tmp_reg_1958 == 1'd0));
end

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage9;

assign conv35_cast_fu_452_p1 = conv35;

assign empty_fu_528_p2 = (p_cast16_fu_524_p1 + arg1);

assign grp_fu_434_p4 = {{i_1_reg_1940[4:3]}};

assign grp_fu_443_p4 = {{i_1_reg_1940[4:2]}};

assign icmp_ln50_1_fu_695_p2 = (($signed(i_1_reg_1940) > $signed(5'd6)) ? 1'b1 : 1'b0);

assign icmp_ln50_2_fu_798_p2 = (($signed(i_1_reg_1940) > $signed(5'd5)) ? 1'b1 : 1'b0);

assign icmp_ln50_3_fu_900_p2 = (($signed(i_1_reg_1940) > $signed(5'd4)) ? 1'b1 : 1'b0);

assign icmp_ln50_4_fu_1019_p2 = (($signed(grp_fu_443_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_5_fu_1182_p2 = (($signed(i_1_reg_1940) > $signed(5'd2)) ? 1'b1 : 1'b0);

assign icmp_ln50_6_fu_1247_p2 = (($signed(tmp_6_fu_1238_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_7_fu_1268_p2 = (($signed(i_1_reg_1940) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_597_p2 = ((grp_fu_434_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_747_p2 = (($signed(i_1_reg_1940) < $signed(5'd7)) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_849_p2 = (($signed(i_1_reg_1940) < $signed(5'd6)) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_951_p2 = (($signed(i_1_reg_1940) < $signed(5'd5)) ? 1'b1 : 1'b0);

assign icmp_ln52_4_fu_1102_p2 = (($signed(grp_fu_443_p4) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_ln52_5_fu_1206_p2 = (($signed(i_1_reg_1940) < $signed(5'd3)) ? 1'b1 : 1'b0);

assign icmp_ln52_6_fu_1262_p2 = (($signed(tmp_7_fu_1253_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln52_7_fu_1273_p2 = (($signed(i_1_reg_1940) < $signed(5'd1)) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_636_p2 = ((grp_fu_434_p4 != 2'd1) ? 1'b1 : 1'b0);

assign k_1_28_fu_756_p2 = (k_s_reg_2010 - zext_ln53_1_fu_752_p1);

assign k_1_fu_704_p2 = (k_fu_688_p3 - zext_ln51_fu_700_p1);

assign k_2_29_fu_858_p2 = (k_1_28_reg_2052 - zext_ln53_2_fu_854_p1);

assign k_2_fu_807_p2 = (k_1_reg_2031 - zext_ln51_1_fu_803_p1);

assign k_3_30_fu_960_p2 = (k_2_29_reg_2094 - zext_ln53_3_fu_956_p1);

assign k_3_fu_909_p2 = (k_2_reg_2073 - zext_ln51_2_fu_905_p1);

assign k_4_31_fu_1112_p2 = (k_3_30_reg_2141 - zext_ln53_4_fu_1108_p1);

assign k_4_fu_1029_p2 = (k_3_reg_2115 - zext_ln51_3_fu_1025_p1);

assign k_5_32_fu_1312_p2 = (k_4_31_reg_2203 - zext_ln53_5_fu_1309_p1);

assign k_5_fu_1191_p2 = (k_4_reg_2177 - zext_ln51_4_fu_1187_p1);

assign k_6_33_fu_1461_p2 = (k_5_32_reg_2283 - zext_ln53_6_fu_1458_p1);

assign k_6_fu_1385_p2 = (k_5_reg_2234 - zext_ln51_5_fu_1382_p1);

assign k_fu_688_p3 = ((icmp_ln50_reg_1988[0:0] == 1'b1) ? 4'd7 : 4'd8);

assign k_s_fu_646_p2 = (sub_ln53_reg_1972 - zext_ln53_fu_642_p1);

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLEN = 32'd1;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 64'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 8'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign p_cast16_fu_524_p1 = tmp_3_fu_516_p3;

assign select_ln50_fu_613_p3 = ((icmp_ln50_fu_597_p2[0:0] == 1'b1) ? 64'd56 : 64'd64);

assign select_ln52_10_fu_1646_p3 = ((icmp_ln50_5_reg_2229[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_11_fu_1666_p3 = ((icmp_ln52_5_reg_2245[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_12_fu_1705_p3 = ((icmp_ln50_6_reg_2256[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_13_fu_1725_p3 = ((icmp_ln52_6_reg_2262[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_14_fu_1764_p3 = ((icmp_ln50_7_reg_2268[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_15_fu_1784_p3 = ((icmp_ln52_7_reg_2273[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_1_fu_1078_p3 = ((icmp_ln52_reg_2005[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_2_fu_1169_p3 = ((icmp_ln50_1_reg_2026[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_3_fu_1285_p3 = ((icmp_ln52_1_reg_2047[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_4_fu_1369_p3 = ((icmp_ln50_2_reg_2068[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_5_fu_1434_p3 = ((icmp_ln52_2_reg_2089[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_6_fu_1518_p3 = ((icmp_ln50_3_reg_2110[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_7_fu_1548_p3 = ((icmp_ln52_3_reg_2136[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_8_fu_1587_p3 = ((icmp_ln50_4_reg_2172[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_9_fu_1607_p3 = ((icmp_ln52_4_reg_2198[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign select_ln52_fu_1006_p3 = ((icmp_ln50_reg_1988[0:0] == 1'b1) ? 128'd340282366920938463463374607431768211455 : 128'd0);

assign sext_ln50_1_fu_560_p1 = $signed(trunc_ln1_reg_1967);

assign sext_ln50_2_fu_651_p1 = $signed(trunc_ln50_1_reg_2000);

assign sext_ln50_3_fu_863_p1 = $signed(trunc_ln50_3_reg_2084);

assign sext_ln50_4_fu_965_p1 = $signed(trunc_ln50_4_reg_2126);

assign sext_ln50_5_fu_1117_p1 = $signed(trunc_ln50_5_reg_2188);

assign sext_ln50_6_fu_1317_p1 = $signed(trunc_ln50_6_reg_2251);

assign sext_ln50_7_fu_1466_p1 = $signed(trunc_ln50_7_reg_2315);

assign sext_ln50_fu_761_p1 = $signed(trunc_ln50_2_reg_2042);

assign sext_ln52_11_fu_779_p1 = $signed(shl_ln52_2_fu_771_p3);

assign sext_ln52_14_fu_812_p1 = $signed(trunc_ln52_2_reg_2063);

assign sext_ln52_17_fu_881_p1 = $signed(shl_ln52_3_fu_873_p3);

assign sext_ln52_20_fu_914_p1 = $signed(trunc_ln52_3_reg_2105);

assign sext_ln52_23_fu_983_p1 = $signed(shl_ln52_4_fu_975_p3);

assign sext_ln52_24_fu_1034_p1 = $signed(trunc_ln52_4_reg_2152);

assign sext_ln52_25_fu_1135_p1 = $signed(shl_ln52_5_fu_1127_p3);

assign sext_ln52_26_fu_1196_p1 = $signed(trunc_ln52_5_reg_2214);

assign sext_ln52_27_fu_1335_p1 = $signed(shl_ln52_6_fu_1327_p3);

assign sext_ln52_28_fu_1390_p1 = $signed(trunc_ln52_6_reg_2294);

assign sext_ln52_29_fu_1484_p1 = $signed(shl_ln52_7_fu_1476_p3);

assign sext_ln52_2_fu_578_p1 = $signed(shl_ln_fu_570_p3);

assign sext_ln52_30_fu_1531_p1 = $signed(trunc_ln52_7_reg_2331);

assign sext_ln52_5_fu_603_p1 = $signed(trunc_ln2_reg_1983);

assign sext_ln52_8_fu_710_p1 = $signed(trunc_ln52_1_reg_2021);

assign sext_ln52_fu_669_p1 = $signed(shl_ln52_1_fu_661_p3);

assign shl_ln50_10_fu_1400_p3 = {{k_6_fu_1385_p2}, {3'd0}};

assign shl_ln50_11_fu_1754_p2 = mem_addr_14_read_reg_2397 << 64'd1;

assign shl_ln50_1_fu_1359_p2 = mem_addr_4_read_reg_2278 << 64'd1;

assign shl_ln50_2_fu_1508_p2 = mem_addr_6_read_reg_2320 << 64'd1;

assign shl_ln50_3_fu_1577_p2 = mem_addr_8_read_reg_2352 << 64'd1;

assign shl_ln50_4_fu_1636_p2 = mem_addr_10_read_reg_2367 << 64'd1;

assign shl_ln50_5_fu_1211_p3 = {{k_5_fu_1191_p2}, {3'd0}};

assign shl_ln50_6_fu_1695_p2 = mem_addr_12_read_reg_2382 << 64'd1;

assign shl_ln50_7_fu_720_p3 = {{k_1_fu_704_p2}, {3'd0}};

assign shl_ln50_8_fu_822_p3 = {{k_2_fu_807_p2}, {3'd0}};

assign shl_ln50_9_fu_924_p3 = {{k_3_fu_909_p2}, {3'd0}};

assign shl_ln50_fu_1159_p2 = mem_addr_2_read_reg_2193 << 64'd1;

assign shl_ln50_s_fu_1044_p3 = {{k_4_fu_1029_p2}, {3'd0}};

assign shl_ln52_1_fu_661_p3 = {{k_s_fu_646_p2}, {3'd0}};

assign shl_ln52_2_fu_771_p3 = {{k_1_28_fu_756_p2}, {3'd0}};

assign shl_ln52_3_fu_873_p3 = {{k_2_29_fu_858_p2}, {3'd0}};

assign shl_ln52_4_fu_975_p3 = {{k_3_30_fu_960_p2}, {3'd0}};

assign shl_ln52_5_fu_1127_p3 = {{k_4_31_fu_1112_p2}, {3'd0}};

assign shl_ln52_6_fu_1327_p3 = {{k_5_32_fu_1312_p2}, {3'd0}};

assign shl_ln52_7_fu_1476_p3 = {{k_6_33_fu_1461_p2}, {3'd0}};

assign shl_ln_fu_570_p3 = {{sub_ln53_fu_555_p2}, {3'd0}};

assign sub_ln53_fu_555_p2 = (4'd7 - trunc_ln36_reg_1962);

assign tmp_3_fu_516_p3 = {{trunc_ln36_fu_512_p1}, {3'd0}};

assign tmp_6_fu_1238_p4 = {{i_1_reg_1940[4:1]}};

assign tmp_7_fu_1253_p4 = {{i_1_reg_1940[4:1]}};

assign tmp_fu_504_p3 = ap_sig_allocacmp_i_1[32'd4];

assign trunc_ln36_fu_512_p1 = ap_sig_allocacmp_i_1[3:0];

assign zext_ln50_10_fu_932_p1 = shl_ln50_9_fu_924_p3;

assign zext_ln50_11_fu_1052_p1 = shl_ln50_s_fu_1044_p3;

assign zext_ln50_12_fu_1219_p1 = shl_ln50_5_fu_1211_p3;

assign zext_ln50_13_fu_1408_p1 = shl_ln50_10_fu_1400_p3;

assign zext_ln50_1_fu_1164_p1 = shl_ln50_fu_1159_p2;

assign zext_ln50_2_fu_728_p1 = shl_ln50_7_fu_720_p3;

assign zext_ln50_3_fu_1364_p1 = shl_ln50_1_fu_1359_p2;

assign zext_ln50_4_fu_1513_p1 = shl_ln50_2_fu_1508_p2;

assign zext_ln50_5_fu_1582_p1 = shl_ln50_3_fu_1577_p2;

assign zext_ln50_6_fu_1641_p1 = shl_ln50_4_fu_1636_p2;

assign zext_ln50_7_fu_1700_p1 = shl_ln50_6_fu_1695_p2;

assign zext_ln50_8_fu_1759_p1 = shl_ln50_11_fu_1754_p2;

assign zext_ln50_9_fu_830_p1 = shl_ln50_8_fu_822_p3;

assign zext_ln50_fu_1002_p1 = mem_addr_read_reg_2131;

assign zext_ln51_1_fu_803_p1 = icmp_ln50_2_fu_798_p2;

assign zext_ln51_2_fu_905_p1 = icmp_ln50_3_fu_900_p2;

assign zext_ln51_3_fu_1025_p1 = icmp_ln50_4_fu_1019_p2;

assign zext_ln51_4_fu_1187_p1 = icmp_ln50_5_fu_1182_p2;

assign zext_ln51_5_fu_1382_p1 = icmp_ln50_6_reg_2256;

assign zext_ln51_fu_700_p1 = icmp_ln50_1_fu_695_p2;

assign zext_ln52_1_fu_1281_p1 = mem_addr_3_read_reg_2219;

assign zext_ln52_2_fu_1430_p1 = mem_addr_5_read_reg_2299;

assign zext_ln52_3_fu_1544_p1 = mem_addr_7_read_reg_2336;

assign zext_ln52_4_fu_1603_p1 = mem_addr_9_read_reg_2357;

assign zext_ln52_5_fu_1662_p1 = mem_addr_11_read_reg_2372;

assign zext_ln52_6_fu_1721_p1 = mem_addr_13_read_reg_2387;

assign zext_ln52_7_fu_1780_p1 = mem_addr_15_read_reg_2402;

assign zext_ln52_fu_1074_p1 = mem_addr_1_read_reg_2162;

assign zext_ln53_1_fu_752_p1 = icmp_ln52_1_fu_747_p2;

assign zext_ln53_2_fu_854_p1 = icmp_ln52_2_fu_849_p2;

assign zext_ln53_3_fu_956_p1 = icmp_ln52_3_fu_951_p2;

assign zext_ln53_4_fu_1108_p1 = icmp_ln52_4_fu_1102_p2;

assign zext_ln53_5_fu_1309_p1 = icmp_ln52_5_reg_2245;

assign zext_ln53_6_fu_1458_p1 = icmp_ln52_6_reg_2262;

assign zext_ln53_fu_642_p1 = icmp_ln52_fu_636_p2;

always @ (posedge ap_clk) begin
    conv35_cast_reg_1935[127:64] <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    zext_ln50_reg_2157[127:64] <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //test_test_Pipeline_VITIS_LOOP_36_1
