

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 21:46:24 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D3
* Solution:       comb_2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.258 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       13|       13|  0.130 us|  0.130 us|   13|   13|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |       11|       11|         4|          1|          1|     9|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.09>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add3239 = alloca i32 1"   --->   Operation 7 'alloca' 'add3239' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add5940 = alloca i32 1"   --->   Operation 8 'alloca' 'add5940' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add59_141 = alloca i32 1"   --->   Operation 9 'alloca' 'add59_141' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add59_242 = alloca i32 1"   --->   Operation 10 'alloca' 'add59_242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add59_343 = alloca i32 1"   --->   Operation 11 'alloca' 'add59_343' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add59_444 = alloca i32 1"   --->   Operation 12 'alloca' 'add59_444' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add59_545 = alloca i32 1"   --->   Operation 13 'alloca' 'add59_545' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add59_646 = alloca i32 1"   --->   Operation 14 'alloca' 'add59_646' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%add59_747 = alloca i32 1"   --->   Operation 15 'alloca' 'add59_747' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 16 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_cast"   --->   Operation 17 'read' 'arg2_r_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_1_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_1_cast"   --->   Operation 18 'read' 'arg2_r_1_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_2_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_2_cast"   --->   Operation 19 'read' 'arg2_r_2_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_3_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_3_cast"   --->   Operation 20 'read' 'arg2_r_3_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_4_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_4_cast"   --->   Operation 21 'read' 'arg2_r_4_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_5_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_5_cast"   --->   Operation 22 'read' 'arg2_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_6_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_6_cast"   --->   Operation 23 'read' 'arg2_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_8_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_8_cast"   --->   Operation 24 'read' 'arg2_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_7_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_7_cast"   --->   Operation 25 'read' 'arg2_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%conv112_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %conv112"   --->   Operation 26 'read' 'conv112_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_8_reload"   --->   Operation 27 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_7_reload"   --->   Operation 28 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_6_reload"   --->   Operation 29 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_5_reload"   --->   Operation 30 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_4_reload"   --->   Operation 31 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_3_reload"   --->   Operation 32 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_2_reload"   --->   Operation 33 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_1_reload"   --->   Operation 34 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_reload"   --->   Operation 35 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_8_reload"   --->   Operation 36 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 37 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 38 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 39 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 40 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 41 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 42 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 43 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_reload"   --->   Operation 44 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%conv112_cast = zext i64 %conv112_read"   --->   Operation 45 'zext' 'conv112_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_747"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_646"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_545"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_444"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_343"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_242"   --->   Operation 52 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 53 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_141"   --->   Operation 53 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 54 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add5940"   --->   Operation 54 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 55 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add3239"   --->   Operation 55 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body39"   --->   Operation 56 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [d3.cpp:52]   --->   Operation 57 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_31 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_1, i32 4" [d3.cpp:36]   --->   Operation 58 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %tmp_31, void %for.body39.split, void %for.end168.exitStub" [d3.cpp:36]   --->   Operation 59 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i5 %i_1" [d3.cpp:36]   --->   Operation 60 'trunc' 'trunc_ln36' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.79ns)   --->   "%sub_ln55 = sub i4 8, i4 %trunc_ln36" [d3.cpp:55]   --->   Operation 61 'sub' 'sub_ln55' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.77ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i4 %sub_ln55" [d3.cpp:44]   --->   Operation 62 'mux' 'tmp' <Predicate = (!tmp_31)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i64 %tmp" [d3.cpp:44]   --->   Operation 63 'zext' 'zext_ln44' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.77ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %trunc_ln36" [d3.cpp:44]   --->   Operation 64 'mux' 'tmp_1' <Predicate = (!tmp_31)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln44_1 = zext i64 %tmp_1" [d3.cpp:44]   --->   Operation 65 'zext' 'zext_ln44_1' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : [1/1] (0.78ns)   --->   Input mux for Operation 66 '%mul_ln44 = mul i128 %zext_ln44_1, i128 %zext_ln44'
ST_1 : Operation 66 [1/1] (3.74ns)   --->   "%mul_ln44 = mul i128 %zext_ln44_1, i128 %zext_ln44" [d3.cpp:44]   --->   Operation 66 'mul' 'mul_ln44' <Predicate = (!tmp_31)> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.78ns)   --->   "%cmp53 = icmp_sgt  i5 %i_1, i5 0" [d3.cpp:52]   --->   Operation 67 'icmp' 'cmp53' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.78ns)   --->   "%indvars_iv_next49 = add i5 %i_1, i5 31" [d3.cpp:52]   --->   Operation 68 'add' 'indvars_iv_next49' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_32 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d3.cpp:54]   --->   Operation 69 'partselect' 'tmp_32' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.54ns)   --->   "%icmp_ln54 = icmp_ne  i2 %tmp_32, i2 1" [d3.cpp:54]   --->   Operation 70 'icmp' 'icmp_ln54' <Predicate = (!tmp_31)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.28ns)   --->   "%and_ln54 = and i1 %icmp_ln54, i1 %cmp53" [d3.cpp:54]   --->   Operation 71 'and' 'and_ln54' <Predicate = (!tmp_31)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i1 %and_ln54" [d3.cpp:55]   --->   Operation 72 'zext' 'zext_ln55' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.79ns)   --->   "%k_s = sub i4 %sub_ln55, i4 %zext_ln55" [d3.cpp:34]   --->   Operation 73 'sub' 'k_s' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.78ns)   --->   "%icmp_ln56 = icmp_eq  i5 %i_1, i5 8" [d3.cpp:56]   --->   Operation 74 'icmp' 'icmp_ln56' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i1 %icmp_ln56" [d3.cpp:57]   --->   Operation 75 'zext' 'zext_ln57' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node k_1_28)   --->   "%k = select i1 %icmp_ln56, i4 7, i4 8" [d3.cpp:57]   --->   Operation 76 'select' 'k' <Predicate = (!tmp_31)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%k_1 = sub i4 %k_s, i4 %zext_ln57" [d3.cpp:49]   --->   Operation 77 'sub' 'k_1' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d3.cpp:52]   --->   Operation 78 'partselect' 'tmp_33' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.54ns)   --->   "%icmp_ln52 = icmp_eq  i2 %tmp_33, i2 1" [d3.cpp:52]   --->   Operation 79 'icmp' 'icmp_ln52' <Predicate = (!tmp_31)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node k_1_28)   --->   "%zext_ln53 = zext i1 %icmp_ln52" [d3.cpp:53]   --->   Operation 80 'zext' 'zext_ln53' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.79ns) (out node of the LUT)   --->   "%k_1_28 = sub i4 %k, i4 %zext_ln53" [d3.cpp:34]   --->   Operation 81 'sub' 'k_1_28' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.78ns)   --->   "%icmp_ln54_1 = icmp_slt  i5 %i_1, i5 7" [d3.cpp:54]   --->   Operation 82 'icmp' 'icmp_ln54_1' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.28ns)   --->   "%and_ln54_1 = and i1 %icmp_ln54_1, i1 %cmp53" [d3.cpp:54]   --->   Operation 83 'and' 'and_ln54_1' <Predicate = (!tmp_31)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln55_1 = zext i1 %and_ln54_1" [d3.cpp:55]   --->   Operation 84 'zext' 'zext_ln55_1' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.79ns)   --->   "%k_2 = sub i4 %k_1, i4 %zext_ln55_1" [d3.cpp:58]   --->   Operation 85 'sub' 'k_2' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.78ns)   --->   "%icmp_ln56_1 = icmp_eq  i5 %i_1, i5 7" [d3.cpp:56]   --->   Operation 86 'icmp' 'icmp_ln56_1' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln57_1 = zext i1 %icmp_ln56_1" [d3.cpp:57]   --->   Operation 87 'zext' 'zext_ln57_1' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%k_2_29 = sub i4 %k_1_28, i4 %zext_ln57_1" [d3.cpp:53]   --->   Operation 88 'sub' 'k_2_29' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.79ns)   --->   "%sub_ln49_5 = sub i4 %k_2, i4 %zext_ln57_1" [d3.cpp:49]   --->   Operation 89 'sub' 'sub_ln49_5' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_sgt  i5 %i_1, i5 6" [d3.cpp:52]   --->   Operation 90 'icmp' 'icmp_ln52_1' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i1 %icmp_ln52_1" [d3.cpp:53]   --->   Operation 91 'zext' 'zext_ln53_1' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.79ns)   --->   "%sub_ln34_13 = sub i4 %k_2_29, i4 %zext_ln53_1" [d3.cpp:34]   --->   Operation 92 'sub' 'sub_ln34_13' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.78ns)   --->   "%icmp_ln54_2 = icmp_slt  i5 %i_1, i5 6" [d3.cpp:54]   --->   Operation 93 'icmp' 'icmp_ln54_2' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.28ns)   --->   "%and_ln54_2 = and i1 %icmp_ln54_2, i1 %cmp53" [d3.cpp:54]   --->   Operation 94 'and' 'and_ln54_2' <Predicate = (!tmp_31)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln55_2 = zext i1 %and_ln54_2" [d3.cpp:55]   --->   Operation 95 'zext' 'zext_ln55_2' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.79ns)   --->   "%sub_ln34_8 = sub i4 %sub_ln49_5, i4 %zext_ln55_2" [d3.cpp:34]   --->   Operation 96 'sub' 'sub_ln34_8' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.78ns)   --->   "%icmp_ln56_2 = icmp_eq  i5 %i_1, i5 6" [d3.cpp:56]   --->   Operation 97 'icmp' 'icmp_ln56_2' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln57_2 = zext i1 %icmp_ln56_2" [d3.cpp:57]   --->   Operation 98 'zext' 'zext_ln57_2' <Predicate = (!tmp_31)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.79ns)   --->   "%sub_ln58_2 = sub i4 %sub_ln34_13, i4 %zext_ln57_2" [d3.cpp:58]   --->   Operation 99 'sub' 'sub_ln58_2' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.79ns)   --->   "%sub_ln49_3 = sub i4 %sub_ln34_8, i4 %zext_ln57_2" [d3.cpp:49]   --->   Operation 100 'sub' 'sub_ln49_3' <Predicate = (!tmp_31)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.78ns)   --->   "%icmp_ln52_2 = icmp_sgt  i5 %i_1, i5 5" [d3.cpp:52]   --->   Operation 101 'icmp' 'icmp_ln52_2' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.78ns)   --->   "%icmp_ln54_3 = icmp_slt  i5 %i_1, i5 5" [d3.cpp:54]   --->   Operation 102 'icmp' 'icmp_ln54_3' <Predicate = (!tmp_31)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.42ns)   --->   "%store_ln36 = store i5 %indvars_iv_next49, i5 %i" [d3.cpp:36]   --->   Operation 103 'store' 'store_ln36' <Predicate = (!tmp_31)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.17>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%add3239_load = load i128 %add3239" [d3.cpp:44]   --->   Operation 104 'load' 'add3239_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (1.57ns)   --->   "%add_ln44 = add i128 %mul_ln44, i128 %add3239_load" [d3.cpp:44]   --->   Operation 105 'add' 'add_ln44' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i1 %icmp_ln52_2" [d3.cpp:53]   --->   Operation 106 'zext' 'zext_ln53_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.79ns)   --->   "%sub_ln34_9 = sub i4 %sub_ln58_2, i4 %zext_ln53_2" [d3.cpp:34]   --->   Operation 107 'sub' 'sub_ln34_9' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.28ns)   --->   "%and_ln54_3 = and i1 %icmp_ln54_3, i1 %cmp53" [d3.cpp:54]   --->   Operation 108 'and' 'and_ln54_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln55_3 = zext i1 %and_ln54_3" [d3.cpp:55]   --->   Operation 109 'zext' 'zext_ln55_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.79ns)   --->   "%sub_ln34_10 = sub i4 %sub_ln49_3, i4 %zext_ln55_3" [d3.cpp:34]   --->   Operation 110 'sub' 'sub_ln34_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.78ns)   --->   "%icmp_ln56_3 = icmp_eq  i5 %i_1, i5 5" [d3.cpp:56]   --->   Operation 111 'icmp' 'icmp_ln56_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln57_3 = zext i1 %icmp_ln56_3" [d3.cpp:57]   --->   Operation 112 'zext' 'zext_ln57_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.79ns)   --->   "%sub_ln58_3 = sub i4 %sub_ln34_9, i4 %zext_ln57_3" [d3.cpp:58]   --->   Operation 113 'sub' 'sub_ln58_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.79ns)   --->   "%sub_ln49_1 = sub i4 %sub_ln34_10, i4 %zext_ln57_3" [d3.cpp:49]   --->   Operation 114 'sub' 'sub_ln49_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.78ns)   --->   "%icmp_ln52_3 = icmp_sgt  i5 %i_1, i5 4" [d3.cpp:52]   --->   Operation 115 'icmp' 'icmp_ln52_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i1 %icmp_ln52_3" [d3.cpp:53]   --->   Operation 116 'zext' 'zext_ln53_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.79ns)   --->   "%sub_ln34_4 = sub i4 %sub_ln58_3, i4 %zext_ln53_3" [d3.cpp:34]   --->   Operation 117 'sub' 'sub_ln34_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d3.cpp:54]   --->   Operation 118 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.67ns)   --->   "%icmp_ln54_4 = icmp_slt  i3 %tmp_34, i3 1" [d3.cpp:54]   --->   Operation 119 'icmp' 'icmp_ln54_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.28ns)   --->   "%and_ln54_4 = and i1 %icmp_ln54_4, i1 %cmp53" [d3.cpp:54]   --->   Operation 120 'and' 'and_ln54_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln55_4 = zext i1 %and_ln54_4" [d3.cpp:55]   --->   Operation 121 'zext' 'zext_ln55_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.79ns)   --->   "%sub_ln34_5 = sub i4 %sub_ln49_1, i4 %zext_ln55_4" [d3.cpp:34]   --->   Operation 122 'sub' 'sub_ln34_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (0.78ns)   --->   "%icmp_ln56_4 = icmp_eq  i5 %i_1, i5 4" [d3.cpp:56]   --->   Operation 123 'icmp' 'icmp_ln56_4' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln57_4 = zext i1 %icmp_ln56_4" [d3.cpp:57]   --->   Operation 124 'zext' 'zext_ln57_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.79ns)   --->   "%sub_ln58_4 = sub i4 %sub_ln34_4, i4 %zext_ln57_4" [d3.cpp:58]   --->   Operation 125 'sub' 'sub_ln58_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 126 [1/1] (0.79ns)   --->   "%sub_ln49_2 = sub i4 %sub_ln34_5, i4 %zext_ln57_4" [d3.cpp:49]   --->   Operation 126 'sub' 'sub_ln49_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_35 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d3.cpp:52]   --->   Operation 127 'partselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.67ns)   --->   "%icmp_ln52_4 = icmp_sgt  i3 %tmp_35, i3 0" [d3.cpp:52]   --->   Operation 128 'icmp' 'icmp_ln52_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i1 %icmp_ln52_4" [d3.cpp:53]   --->   Operation 129 'zext' 'zext_ln53_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.79ns)   --->   "%sub_ln34_6 = sub i4 %sub_ln58_4, i4 %zext_ln53_4" [d3.cpp:34]   --->   Operation 130 'sub' 'sub_ln34_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.78ns)   --->   "%icmp_ln54_5 = icmp_slt  i5 %i_1, i5 3" [d3.cpp:54]   --->   Operation 131 'icmp' 'icmp_ln54_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.28ns)   --->   "%and_ln54_5 = and i1 %icmp_ln54_5, i1 %cmp53" [d3.cpp:54]   --->   Operation 132 'and' 'and_ln54_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln55_5 = zext i1 %and_ln54_5" [d3.cpp:55]   --->   Operation 133 'zext' 'zext_ln55_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.79ns)   --->   "%sub_ln34_7 = sub i4 %sub_ln49_2, i4 %zext_ln55_5" [d3.cpp:34]   --->   Operation 134 'sub' 'sub_ln34_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.78ns)   --->   "%icmp_ln56_5 = icmp_eq  i5 %i_1, i5 3" [d3.cpp:56]   --->   Operation 135 'icmp' 'icmp_ln56_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln57_5 = zext i1 %icmp_ln56_5" [d3.cpp:57]   --->   Operation 136 'zext' 'zext_ln57_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.79ns)   --->   "%sub_ln58_5 = sub i4 %sub_ln34_6, i4 %zext_ln57_5" [d3.cpp:58]   --->   Operation 137 'sub' 'sub_ln58_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.79ns)   --->   "%sub_ln49 = sub i4 %sub_ln34_7, i4 %zext_ln57_5" [d3.cpp:49]   --->   Operation 138 'sub' 'sub_ln49' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.78ns)   --->   "%icmp_ln52_5 = icmp_sgt  i5 %i_1, i5 2" [d3.cpp:52]   --->   Operation 139 'icmp' 'icmp_ln52_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln53_5 = zext i1 %icmp_ln52_5" [d3.cpp:53]   --->   Operation 140 'zext' 'zext_ln53_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.79ns)   --->   "%sub_ln34 = sub i4 %sub_ln58_5, i4 %zext_ln53_5" [d3.cpp:34]   --->   Operation 141 'sub' 'sub_ln34' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_36 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i_1, i32 1, i32 4" [d3.cpp:54]   --->   Operation 142 'partselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.79ns)   --->   "%icmp_ln54_6 = icmp_slt  i4 %tmp_36, i4 1" [d3.cpp:54]   --->   Operation 143 'icmp' 'icmp_ln54_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.28ns)   --->   "%and_ln54_6 = and i1 %icmp_ln54_6, i1 %cmp53" [d3.cpp:54]   --->   Operation 144 'and' 'and_ln54_6' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln55_6 = zext i1 %and_ln54_6" [d3.cpp:55]   --->   Operation 145 'zext' 'zext_ln55_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 146 [1/1] (0.79ns)   --->   "%sub_ln34_1 = sub i4 %sub_ln49, i4 %zext_ln55_6" [d3.cpp:34]   --->   Operation 146 'sub' 'sub_ln34_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.78ns)   --->   "%icmp_ln56_6 = icmp_eq  i5 %i_1, i5 2" [d3.cpp:56]   --->   Operation 147 'icmp' 'icmp_ln56_6' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln57_6 = zext i1 %icmp_ln56_6" [d3.cpp:57]   --->   Operation 148 'zext' 'zext_ln57_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 149 [1/1] (0.79ns)   --->   "%sub_ln58 = sub i4 %sub_ln34, i4 %zext_ln57_6" [d3.cpp:58]   --->   Operation 149 'sub' 'sub_ln58' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i_1, i32 1, i32 4" [d3.cpp:52]   --->   Operation 150 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 151 [1/1] (0.79ns)   --->   "%icmp_ln52_6 = icmp_sgt  i4 %tmp_37, i4 0" [d3.cpp:52]   --->   Operation 151 'icmp' 'icmp_ln52_6' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i1 %icmp_ln52_6" [d3.cpp:53]   --->   Operation 152 'zext' 'zext_ln53_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 153 [1/1] (0.79ns)   --->   "%sub_ln34_2 = sub i4 %sub_ln58, i4 %zext_ln53_6" [d3.cpp:34]   --->   Operation 153 'sub' 'sub_ln34_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.79ns)   --->   "%sub_ln34_3 = sub i4 %sub_ln34_1, i4 %zext_ln57_6" [d3.cpp:34]   --->   Operation 154 'sub' 'sub_ln34_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 155 [1/1] (0.78ns)   --->   "%icmp_ln56_7 = icmp_eq  i5 %i_1, i5 1" [d3.cpp:56]   --->   Operation 155 'icmp' 'icmp_ln56_7' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 156 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln44, i128 %add3239" [d3.cpp:36]   --->   Operation 156 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>

State 3 <SV = 2> <Delay = 7.25>
ST_3 : Operation 157 [1/1] (0.77ns)   --->   "%tmp_2 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i4 %trunc_ln36" [d3.cpp:52]   --->   Operation 157 'mux' 'tmp_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i64 %tmp_2" [d3.cpp:52]   --->   Operation 158 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 159 [1/1] (0.77ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i4 %trunc_ln36" [d3.cpp:54]   --->   Operation 159 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i64 %tmp_3" [d3.cpp:54]   --->   Operation 160 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 161 [1/1] (0.77ns)   --->   "%tmp_5 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %k_s" [d3.cpp:56]   --->   Operation 161 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i64 %tmp_5" [d3.cpp:56]   --->   Operation 162 'zext' 'zext_ln56' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 163 '%mul_ln56 = mul i128 %zext_ln52, i128 %conv112_cast'
ST_3 : Operation 163 [1/1] (3.74ns)   --->   "%mul_ln56 = mul i128 %zext_ln52, i128 %conv112_cast" [d3.cpp:56]   --->   Operation 163 'mul' 'mul_ln56' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 164 '%mul_ln56_1 = mul i128 %zext_ln56, i128 %zext_ln54'
ST_3 : Operation 164 [1/1] (3.74ns)   --->   "%mul_ln56_1 = mul i128 %zext_ln56, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 164 'mul' 'mul_ln56_1' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 165 [1/1] (1.57ns)   --->   "%add_ln56 = add i128 %mul_ln56_1, i128 %mul_ln56" [d3.cpp:56]   --->   Operation 165 'add' 'add_ln56' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_1)   --->   "%select_ln56_1 = select i1 %icmp_ln56, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 166 'select' 'select_ln56_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 167 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_1 = and i128 %add_ln56, i128 %select_ln56_1" [d3.cpp:56]   --->   Operation 167 'and' 'and_ln56_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 168 [1/1] (0.41ns)   --->   "%select_ln52 = select i1 %icmp_ln56, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d3.cpp:52]   --->   Operation 168 'select' 'select_ln52' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln52, i1 0" [d3.cpp:52]   --->   Operation 169 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i64 %shl_ln" [d3.cpp:52]   --->   Operation 170 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 171 [1/1] (0.77ns)   --->   "%tmp_8 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %k_1_28" [d3.cpp:56]   --->   Operation 171 'mux' 'tmp_8' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 172 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_8, i1 0" [d3.cpp:56]   --->   Operation 172 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln56_1 = zext i64 %shl_ln1" [d3.cpp:56]   --->   Operation 173 'zext' 'zext_ln56_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 174 [1/1] (0.77ns)   --->   "%tmp_9 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %k_2" [d3.cpp:56]   --->   Operation 174 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln56_2 = zext i64 %tmp_9" [d3.cpp:56]   --->   Operation 175 'zext' 'zext_ln56_2' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 176 '%mul_ln56_4 = mul i128 %zext_ln52_1, i128 %zext_ln52'
ST_3 : Operation 176 [1/1] (3.74ns)   --->   "%mul_ln56_4 = mul i128 %zext_ln52_1, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 176 'mul' 'mul_ln56_4' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 177 '%mul_ln56_5 = mul i128 %zext_ln56_1, i128 %zext_ln52'
ST_3 : Operation 177 [1/1] (3.74ns)   --->   "%mul_ln56_5 = mul i128 %zext_ln56_1, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 177 'mul' 'mul_ln56_5' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 178 '%mul_ln56_6 = mul i128 %zext_ln56_2, i128 %zext_ln54'
ST_3 : Operation 178 [1/1] (3.74ns)   --->   "%mul_ln56_6 = mul i128 %zext_ln56_2, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 178 'mul' 'mul_ln56_6' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 179 [1/1] (1.57ns)   --->   "%add_ln56_3 = add i128 %mul_ln56_5, i128 %mul_ln56_6" [d3.cpp:56]   --->   Operation 179 'add' 'add_ln56_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 180 [1/1] (0.77ns)   --->   "%tmp_s = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %k_2_29" [d3.cpp:52]   --->   Operation 180 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 181 [1/1] (0.00ns)   --->   "%shl_ln52_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_s, i1 0" [d3.cpp:52]   --->   Operation 181 'bitconcatenate' 'shl_ln52_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i64 %shl_ln52_1" [d3.cpp:52]   --->   Operation 182 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 183 [1/1] (0.77ns)   --->   "%tmp_10 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_13" [d3.cpp:56]   --->   Operation 183 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 184 [1/1] (0.00ns)   --->   "%shl_ln56_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_10, i1 0" [d3.cpp:56]   --->   Operation 184 'bitconcatenate' 'shl_ln56_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln56_3 = zext i64 %shl_ln56_1" [d3.cpp:56]   --->   Operation 185 'zext' 'zext_ln56_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 186 [1/1] (0.77ns)   --->   "%tmp_11 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_8" [d3.cpp:56]   --->   Operation 186 'mux' 'tmp_11' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln56_4 = zext i64 %tmp_11" [d3.cpp:56]   --->   Operation 187 'zext' 'zext_ln56_4' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 188 '%mul_ln56_8 = mul i128 %zext_ln52_2, i128 %zext_ln52'
ST_3 : Operation 188 [1/1] (3.74ns)   --->   "%mul_ln56_8 = mul i128 %zext_ln52_2, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 188 'mul' 'mul_ln56_8' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 189 '%mul_ln56_9 = mul i128 %zext_ln56_3, i128 %zext_ln52'
ST_3 : Operation 189 [1/1] (3.74ns)   --->   "%mul_ln56_9 = mul i128 %zext_ln56_3, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 189 'mul' 'mul_ln56_9' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 190 '%mul_ln56_10 = mul i128 %zext_ln56_4, i128 %zext_ln54'
ST_3 : Operation 190 [1/1] (3.74ns)   --->   "%mul_ln56_10 = mul i128 %zext_ln56_4, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 190 'mul' 'mul_ln56_10' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 191 [1/1] (1.57ns)   --->   "%add_ln56_7 = add i128 %mul_ln56_9, i128 %mul_ln56_10" [d3.cpp:56]   --->   Operation 191 'add' 'add_ln56_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 192 [1/1] (0.77ns)   --->   "%tmp_12 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln58_2" [d3.cpp:52]   --->   Operation 192 'mux' 'tmp_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 193 [1/1] (0.00ns)   --->   "%shl_ln52_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_12, i1 0" [d3.cpp:52]   --->   Operation 193 'bitconcatenate' 'shl_ln52_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i64 %shl_ln52_2" [d3.cpp:52]   --->   Operation 194 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 195 [1/1] (0.77ns)   --->   "%tmp_14 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_9" [d3.cpp:56]   --->   Operation 195 'mux' 'tmp_14' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 196 [1/1] (0.00ns)   --->   "%shl_ln56_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_14, i1 0" [d3.cpp:56]   --->   Operation 196 'bitconcatenate' 'shl_ln56_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln56_5 = zext i64 %shl_ln56_2" [d3.cpp:56]   --->   Operation 197 'zext' 'zext_ln56_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 198 [1/1] (0.77ns)   --->   "%tmp_15 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_10" [d3.cpp:56]   --->   Operation 198 'mux' 'tmp_15' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln56_6 = zext i64 %tmp_15" [d3.cpp:56]   --->   Operation 199 'zext' 'zext_ln56_6' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 200 '%mul_ln56_12 = mul i128 %zext_ln52_3, i128 %zext_ln52'
ST_3 : Operation 200 [1/1] (3.74ns)   --->   "%mul_ln56_12 = mul i128 %zext_ln52_3, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 200 'mul' 'mul_ln56_12' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 201 '%mul_ln56_13 = mul i128 %zext_ln56_5, i128 %zext_ln52'
ST_3 : Operation 201 [1/1] (3.74ns)   --->   "%mul_ln56_13 = mul i128 %zext_ln56_5, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 201 'mul' 'mul_ln56_13' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 202 '%mul_ln56_14 = mul i128 %zext_ln56_6, i128 %zext_ln54'
ST_3 : Operation 202 [1/1] (3.74ns)   --->   "%mul_ln56_14 = mul i128 %zext_ln56_6, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 202 'mul' 'mul_ln56_14' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 203 [1/1] (1.57ns)   --->   "%add_ln56_11 = add i128 %mul_ln56_13, i128 %mul_ln56_14" [d3.cpp:56]   --->   Operation 203 'add' 'add_ln56_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 204 [1/1] (0.77ns)   --->   "%tmp_16 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln58_3" [d3.cpp:52]   --->   Operation 204 'mux' 'tmp_16' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 205 [1/1] (0.00ns)   --->   "%shl_ln52_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_16, i1 0" [d3.cpp:52]   --->   Operation 205 'bitconcatenate' 'shl_ln52_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i64 %shl_ln52_3" [d3.cpp:52]   --->   Operation 206 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 207 [1/1] (0.77ns)   --->   "%tmp_18 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_4" [d3.cpp:56]   --->   Operation 207 'mux' 'tmp_18' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 208 [1/1] (0.00ns)   --->   "%shl_ln56_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_18, i1 0" [d3.cpp:56]   --->   Operation 208 'bitconcatenate' 'shl_ln56_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln56_7 = zext i64 %shl_ln56_3" [d3.cpp:56]   --->   Operation 209 'zext' 'zext_ln56_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 210 [1/1] (0.77ns)   --->   "%tmp_19 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_5" [d3.cpp:56]   --->   Operation 210 'mux' 'tmp_19' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln56_8 = zext i64 %tmp_19" [d3.cpp:56]   --->   Operation 211 'zext' 'zext_ln56_8' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 212 '%mul_ln56_16 = mul i128 %zext_ln52_4, i128 %zext_ln52'
ST_3 : Operation 212 [1/1] (3.74ns)   --->   "%mul_ln56_16 = mul i128 %zext_ln52_4, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 212 'mul' 'mul_ln56_16' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 213 '%mul_ln56_17 = mul i128 %zext_ln56_7, i128 %zext_ln52'
ST_3 : Operation 213 [1/1] (3.74ns)   --->   "%mul_ln56_17 = mul i128 %zext_ln56_7, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 213 'mul' 'mul_ln56_17' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 214 '%mul_ln56_18 = mul i128 %zext_ln56_8, i128 %zext_ln54'
ST_3 : Operation 214 [1/1] (3.74ns)   --->   "%mul_ln56_18 = mul i128 %zext_ln56_8, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 214 'mul' 'mul_ln56_18' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 215 [1/1] (1.57ns)   --->   "%add_ln56_15 = add i128 %mul_ln56_17, i128 %mul_ln56_18" [d3.cpp:56]   --->   Operation 215 'add' 'add_ln56_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 216 [1/1] (0.77ns)   --->   "%tmp_20 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln58_4" [d3.cpp:52]   --->   Operation 216 'mux' 'tmp_20' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 217 [1/1] (0.00ns)   --->   "%shl_ln52_4 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_20, i1 0" [d3.cpp:52]   --->   Operation 217 'bitconcatenate' 'shl_ln52_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i64 %shl_ln52_4" [d3.cpp:52]   --->   Operation 218 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 219 [1/1] (0.77ns)   --->   "%tmp_22 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_6" [d3.cpp:56]   --->   Operation 219 'mux' 'tmp_22' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 220 [1/1] (0.00ns)   --->   "%shl_ln56_4 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_22, i1 0" [d3.cpp:56]   --->   Operation 220 'bitconcatenate' 'shl_ln56_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln56_9 = zext i64 %shl_ln56_4" [d3.cpp:56]   --->   Operation 221 'zext' 'zext_ln56_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 222 [1/1] (0.77ns)   --->   "%tmp_23 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_7" [d3.cpp:56]   --->   Operation 222 'mux' 'tmp_23' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln56_10 = zext i64 %tmp_23" [d3.cpp:56]   --->   Operation 223 'zext' 'zext_ln56_10' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 224 '%mul_ln56_20 = mul i128 %zext_ln52_5, i128 %zext_ln52'
ST_3 : Operation 224 [1/1] (3.74ns)   --->   "%mul_ln56_20 = mul i128 %zext_ln52_5, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 224 'mul' 'mul_ln56_20' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 225 '%mul_ln56_21 = mul i128 %zext_ln56_9, i128 %zext_ln52'
ST_3 : Operation 225 [1/1] (3.74ns)   --->   "%mul_ln56_21 = mul i128 %zext_ln56_9, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 225 'mul' 'mul_ln56_21' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 226 '%mul_ln56_22 = mul i128 %zext_ln56_10, i128 %zext_ln54'
ST_3 : Operation 226 [1/1] (3.74ns)   --->   "%mul_ln56_22 = mul i128 %zext_ln56_10, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 226 'mul' 'mul_ln56_22' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 227 [1/1] (1.57ns)   --->   "%add_ln56_19 = add i128 %mul_ln56_21, i128 %mul_ln56_22" [d3.cpp:56]   --->   Operation 227 'add' 'add_ln56_19' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 228 [1/1] (0.77ns)   --->   "%tmp_24 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln58_5" [d3.cpp:52]   --->   Operation 228 'mux' 'tmp_24' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 229 [1/1] (0.00ns)   --->   "%shl_ln52_5 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_24, i1 0" [d3.cpp:52]   --->   Operation 229 'bitconcatenate' 'shl_ln52_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i64 %shl_ln52_5" [d3.cpp:52]   --->   Operation 230 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 231 [1/1] (0.77ns)   --->   "%tmp_26 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34" [d3.cpp:56]   --->   Operation 231 'mux' 'tmp_26' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 232 [1/1] (0.00ns)   --->   "%shl_ln56_5 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_26, i1 0" [d3.cpp:56]   --->   Operation 232 'bitconcatenate' 'shl_ln56_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 233 [1/1] (0.00ns)   --->   "%zext_ln56_11 = zext i64 %shl_ln56_5" [d3.cpp:56]   --->   Operation 233 'zext' 'zext_ln56_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 234 [1/1] (0.77ns)   --->   "%tmp_27 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_1" [d3.cpp:56]   --->   Operation 234 'mux' 'tmp_27' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln56_12 = zext i64 %tmp_27" [d3.cpp:56]   --->   Operation 235 'zext' 'zext_ln56_12' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 236 '%mul_ln56_24 = mul i128 %zext_ln52_6, i128 %zext_ln52'
ST_3 : Operation 236 [1/1] (3.74ns)   --->   "%mul_ln56_24 = mul i128 %zext_ln52_6, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 236 'mul' 'mul_ln56_24' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 237 '%mul_ln56_25 = mul i128 %zext_ln56_11, i128 %zext_ln52'
ST_3 : Operation 237 [1/1] (3.74ns)   --->   "%mul_ln56_25 = mul i128 %zext_ln56_11, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 237 'mul' 'mul_ln56_25' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 238 '%mul_ln56_26 = mul i128 %zext_ln56_12, i128 %zext_ln54'
ST_3 : Operation 238 [1/1] (3.74ns)   --->   "%mul_ln56_26 = mul i128 %zext_ln56_12, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 238 'mul' 'mul_ln56_26' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 239 [1/1] (1.57ns)   --->   "%add_ln56_23 = add i128 %mul_ln56_25, i128 %mul_ln56_26" [d3.cpp:56]   --->   Operation 239 'add' 'add_ln56_23' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 240 [1/1] (0.77ns)   --->   "%tmp_28 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln58" [d3.cpp:52]   --->   Operation 240 'mux' 'tmp_28' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 241 [1/1] (0.00ns)   --->   "%shl_ln52_6 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_28, i1 0" [d3.cpp:52]   --->   Operation 241 'bitconcatenate' 'shl_ln52_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i64 %shl_ln52_6" [d3.cpp:52]   --->   Operation 242 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 243 [1/1] (0.77ns)   --->   "%tmp_29 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 %arg2_r_cast_read, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_2" [d3.cpp:56]   --->   Operation 243 'mux' 'tmp_29' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 244 [1/1] (0.00ns)   --->   "%shl_ln56_6 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_29, i1 0" [d3.cpp:56]   --->   Operation 244 'bitconcatenate' 'shl_ln56_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln56_13 = zext i64 %shl_ln56_6" [d3.cpp:56]   --->   Operation 245 'zext' 'zext_ln56_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 246 [1/1] (0.77ns)   --->   "%tmp_30 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln34_3" [d3.cpp:56]   --->   Operation 246 'mux' 'tmp_30' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln56_14 = zext i64 %tmp_30" [d3.cpp:56]   --->   Operation 247 'zext' 'zext_ln56_14' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 248 '%mul_ln56_27 = mul i128 %zext_ln52_7, i128 %zext_ln52'
ST_3 : Operation 248 [1/1] (3.74ns)   --->   "%mul_ln56_27 = mul i128 %zext_ln52_7, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 248 'mul' 'mul_ln56_27' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 249 '%mul_ln56_28 = mul i128 %zext_ln56_13, i128 %zext_ln52'
ST_3 : Operation 249 [1/1] (3.74ns)   --->   "%mul_ln56_28 = mul i128 %zext_ln56_13, i128 %zext_ln52" [d3.cpp:56]   --->   Operation 249 'mul' 'mul_ln56_28' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : [1/1] (0.78ns)   --->   Input mux for Operation 250 '%mul_ln56_29 = mul i128 %zext_ln56_14, i128 %zext_ln54'
ST_3 : Operation 250 [1/1] (3.74ns)   --->   "%mul_ln56_29 = mul i128 %zext_ln56_14, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 250 'mul' 'mul_ln56_29' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_20)   --->   "%select_ln56_20 = select i1 %icmp_ln52_6, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 251 'select' 'select_ln56_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 252 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_20 = and i128 %mul_ln56_27, i128 %select_ln56_20" [d3.cpp:56]   --->   Operation 252 'and' 'and_ln56_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 253 [1/1] (1.57ns)   --->   "%add_ln56_27 = add i128 %mul_ln56_28, i128 %mul_ln56_29" [d3.cpp:56]   --->   Operation 253 'add' 'add_ln56_27' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_21)   --->   "%select_ln56_21 = select i1 %icmp_ln56_7, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 254 'select' 'select_ln56_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 255 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_21 = and i128 %add_ln56_27, i128 %select_ln56_21" [d3.cpp:56]   --->   Operation 255 'and' 'and_ln56_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 357 [1/1] (0.00ns)   --->   "%add3239_load_1 = load i128 %add3239"   --->   Operation 357 'load' 'add3239_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 358 [1/1] (0.00ns)   --->   "%add5940_load_1 = load i128 %add5940"   --->   Operation 358 'load' 'add5940_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 359 [1/1] (0.00ns)   --->   "%add59_141_load_1 = load i128 %add59_141"   --->   Operation 359 'load' 'add59_141_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 360 [1/1] (0.00ns)   --->   "%add59_242_load_1 = load i128 %add59_242"   --->   Operation 360 'load' 'add59_242_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 361 [1/1] (0.00ns)   --->   "%add59_343_load_1 = load i128 %add59_343"   --->   Operation 361 'load' 'add59_343_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 362 [1/1] (0.00ns)   --->   "%add59_444_load_1 = load i128 %add59_444"   --->   Operation 362 'load' 'add59_444_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 363 [1/1] (0.00ns)   --->   "%add59_545_load_1 = load i128 %add59_545"   --->   Operation 363 'load' 'add59_545_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 364 [1/1] (0.00ns)   --->   "%add59_646_load_1 = load i128 %add59_646"   --->   Operation 364 'load' 'add59_646_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 365 [1/1] (0.00ns)   --->   "%add59_747_load_1 = load i128 %add59_747"   --->   Operation 365 'load' 'add59_747_load_1' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 366 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_747_out, i128 %add59_747_load_1"   --->   Operation 366 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 367 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_646_out, i128 %add59_646_load_1"   --->   Operation 367 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 368 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_545_out, i128 %add59_545_load_1"   --->   Operation 368 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 369 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_444_out, i128 %add59_444_load_1"   --->   Operation 369 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 370 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_343_out, i128 %add59_343_load_1"   --->   Operation 370 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 371 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_242_out, i128 %add59_242_load_1"   --->   Operation 371 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 372 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_141_out, i128 %add59_141_load_1"   --->   Operation 372 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 373 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add5940_out, i128 %add5940_load_1"   --->   Operation 373 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 374 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add3239_out, i128 %add3239_load_1"   --->   Operation 374 'write' 'write_ln0' <Predicate = (tmp_31)> <Delay = 0.00>
ST_3 : Operation 375 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 375 'ret' 'ret_ln0' <Predicate = (tmp_31)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.10>
ST_4 : Operation 256 [1/1] (0.00ns)   --->   "%add5940_load = load i128 %add5940" [d3.cpp:56]   --->   Operation 256 'load' 'add5940_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 257 [1/1] (0.00ns)   --->   "%add59_141_load = load i128 %add59_141" [d3.cpp:56]   --->   Operation 257 'load' 'add59_141_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 258 [1/1] (0.00ns)   --->   "%add59_242_load = load i128 %add59_242" [d3.cpp:56]   --->   Operation 258 'load' 'add59_242_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 259 [1/1] (0.00ns)   --->   "%add59_343_load = load i128 %add59_343" [d3.cpp:56]   --->   Operation 259 'load' 'add59_343_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 260 [1/1] (0.00ns)   --->   "%add59_444_load = load i128 %add59_444" [d3.cpp:56]   --->   Operation 260 'load' 'add59_444_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 261 [1/1] (0.00ns)   --->   "%add59_545_load = load i128 %add59_545" [d3.cpp:56]   --->   Operation 261 'load' 'add59_545_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 262 [1/1] (0.00ns)   --->   "%add59_646_load = load i128 %add59_646" [d3.cpp:56]   --->   Operation 262 'load' 'add59_646_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 263 [1/1] (0.00ns)   --->   "%add59_747_load = load i128 %add59_747" [d3.cpp:56]   --->   Operation 263 'load' 'add59_747_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 264 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d3.cpp:38]   --->   Operation 264 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 265 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [d3.cpp:34]   --->   Operation 265 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 266 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d3.cpp:36]   --->   Operation 266 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 267 [1/1] (0.77ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln55" [d3.cpp:54]   --->   Operation 267 'mux' 'tmp_4' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i64 %tmp_4" [d3.cpp:54]   --->   Operation 268 'zext' 'zext_ln54_1' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 269 '%mul_ln56_2 = mul i128 %zext_ln54_1, i128 %zext_ln54'
ST_4 : Operation 269 [1/1] (3.74ns)   --->   "%mul_ln56_2 = mul i128 %zext_ln54_1, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 269 'mul' 'mul_ln56_2' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node and_ln56)   --->   "%select_ln56 = select i1 %and_ln54, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 270 'select' 'select_ln56' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 271 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56 = and i128 %mul_ln56_2, i128 %select_ln56" [d3.cpp:56]   --->   Operation 271 'and' 'and_ln56' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 272 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_1 = add i128 %and_ln56_1, i128 %and_ln56" [d3.cpp:56]   --->   Operation 272 'add' 'add_ln56_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 273 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_2 = add i128 %add5940_load, i128 %add_ln56_1" [d3.cpp:56]   --->   Operation 273 'add' 'add_ln56_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 274 [1/1] (0.77ns)   --->   "%tmp_7 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %k_1" [d3.cpp:54]   --->   Operation 274 'mux' 'tmp_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 275 [1/1] (0.00ns)   --->   "%zext_ln54_2 = zext i64 %tmp_7" [d3.cpp:54]   --->   Operation 275 'zext' 'zext_ln54_2' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 276 '%mul_ln56_3 = mul i128 %zext_ln54_2, i128 %zext_ln54'
ST_4 : Operation 276 [1/1] (3.74ns)   --->   "%mul_ln56_3 = mul i128 %zext_ln54_2, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 276 'mul' 'mul_ln56_3' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_2)   --->   "%select_ln56_2 = select i1 %and_ln54_1, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 277 'select' 'select_ln56_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 278 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_2 = and i128 %mul_ln56_3, i128 %select_ln56_2" [d3.cpp:56]   --->   Operation 278 'and' 'and_ln56_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_4)   --->   "%select_ln56_3 = select i1 %icmp_ln52, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 279 'select' 'select_ln56_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_4)   --->   "%and_ln56_3 = and i128 %mul_ln56_4, i128 %select_ln56_3" [d3.cpp:56]   --->   Operation 280 'and' 'and_ln56_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_4)   --->   "%select_ln56_4 = select i1 %icmp_ln56_1, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 281 'select' 'select_ln56_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_4)   --->   "%and_ln56_4 = and i128 %add_ln56_3, i128 %select_ln56_4" [d3.cpp:56]   --->   Operation 282 'and' 'and_ln56_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 283 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_4 = add i128 %and_ln56_3, i128 %and_ln56_4" [d3.cpp:56]   --->   Operation 283 'add' 'add_ln56_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 284 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_5 = add i128 %add_ln56_4, i128 %and_ln56_2" [d3.cpp:56]   --->   Operation 284 'add' 'add_ln56_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 285 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_6 = add i128 %add59_141_load, i128 %add_ln56_5" [d3.cpp:56]   --->   Operation 285 'add' 'add_ln56_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 286 [1/1] (0.77ns)   --->   "%tmp_6 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_5" [d3.cpp:54]   --->   Operation 286 'mux' 'tmp_6' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln54_3 = zext i64 %tmp_6" [d3.cpp:54]   --->   Operation 287 'zext' 'zext_ln54_3' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 288 '%mul_ln56_7 = mul i128 %zext_ln54_3, i128 %zext_ln54'
ST_4 : Operation 288 [1/1] (3.74ns)   --->   "%mul_ln56_7 = mul i128 %zext_ln54_3, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 288 'mul' 'mul_ln56_7' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_5)   --->   "%select_ln56_5 = select i1 %and_ln54_2, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 289 'select' 'select_ln56_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 290 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_5 = and i128 %mul_ln56_7, i128 %select_ln56_5" [d3.cpp:56]   --->   Operation 290 'and' 'and_ln56_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_8)   --->   "%select_ln56_6 = select i1 %icmp_ln52_1, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 291 'select' 'select_ln56_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_8)   --->   "%and_ln56_6 = and i128 %mul_ln56_8, i128 %select_ln56_6" [d3.cpp:56]   --->   Operation 292 'and' 'and_ln56_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_8)   --->   "%select_ln56_7 = select i1 %icmp_ln56_2, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 293 'select' 'select_ln56_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_8)   --->   "%and_ln56_7 = and i128 %add_ln56_7, i128 %select_ln56_7" [d3.cpp:56]   --->   Operation 294 'and' 'and_ln56_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 295 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_8 = add i128 %and_ln56_6, i128 %and_ln56_7" [d3.cpp:56]   --->   Operation 295 'add' 'add_ln56_8' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 296 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_9 = add i128 %add_ln56_8, i128 %and_ln56_5" [d3.cpp:56]   --->   Operation 296 'add' 'add_ln56_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 297 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_10 = add i128 %add59_242_load, i128 %add_ln56_9" [d3.cpp:56]   --->   Operation 297 'add' 'add_ln56_10' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 298 [1/1] (0.77ns)   --->   "%tmp_13 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_3" [d3.cpp:54]   --->   Operation 298 'mux' 'tmp_13' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln54_4 = zext i64 %tmp_13" [d3.cpp:54]   --->   Operation 299 'zext' 'zext_ln54_4' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 300 '%mul_ln56_11 = mul i128 %zext_ln54_4, i128 %zext_ln54'
ST_4 : Operation 300 [1/1] (3.74ns)   --->   "%mul_ln56_11 = mul i128 %zext_ln54_4, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 300 'mul' 'mul_ln56_11' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_8)   --->   "%select_ln56_8 = select i1 %and_ln54_3, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 301 'select' 'select_ln56_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 302 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_8 = and i128 %mul_ln56_11, i128 %select_ln56_8" [d3.cpp:56]   --->   Operation 302 'and' 'and_ln56_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_12)   --->   "%select_ln56_9 = select i1 %icmp_ln52_2, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 303 'select' 'select_ln56_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_12)   --->   "%and_ln56_9 = and i128 %mul_ln56_12, i128 %select_ln56_9" [d3.cpp:56]   --->   Operation 304 'and' 'and_ln56_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_12)   --->   "%select_ln56_10 = select i1 %icmp_ln56_3, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 305 'select' 'select_ln56_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_12)   --->   "%and_ln56_10 = and i128 %add_ln56_11, i128 %select_ln56_10" [d3.cpp:56]   --->   Operation 306 'and' 'and_ln56_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 307 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_12 = add i128 %and_ln56_9, i128 %and_ln56_10" [d3.cpp:56]   --->   Operation 307 'add' 'add_ln56_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 308 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_13 = add i128 %add_ln56_12, i128 %and_ln56_8" [d3.cpp:56]   --->   Operation 308 'add' 'add_ln56_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 309 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_14 = add i128 %add59_343_load, i128 %add_ln56_13" [d3.cpp:56]   --->   Operation 309 'add' 'add_ln56_14' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 310 [1/1] (0.77ns)   --->   "%tmp_17 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_1" [d3.cpp:54]   --->   Operation 310 'mux' 'tmp_17' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 311 [1/1] (0.00ns)   --->   "%zext_ln54_5 = zext i64 %tmp_17" [d3.cpp:54]   --->   Operation 311 'zext' 'zext_ln54_5' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 312 '%mul_ln56_15 = mul i128 %zext_ln54_5, i128 %zext_ln54'
ST_4 : Operation 312 [1/1] (3.74ns)   --->   "%mul_ln56_15 = mul i128 %zext_ln54_5, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 312 'mul' 'mul_ln56_15' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_11)   --->   "%select_ln56_11 = select i1 %and_ln54_4, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 313 'select' 'select_ln56_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 314 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_11 = and i128 %mul_ln56_15, i128 %select_ln56_11" [d3.cpp:56]   --->   Operation 314 'and' 'and_ln56_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_16)   --->   "%select_ln56_12 = select i1 %icmp_ln52_3, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 315 'select' 'select_ln56_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_16)   --->   "%and_ln56_12 = and i128 %mul_ln56_16, i128 %select_ln56_12" [d3.cpp:56]   --->   Operation 316 'and' 'and_ln56_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_16)   --->   "%select_ln56_13 = select i1 %icmp_ln56_4, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 317 'select' 'select_ln56_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_16)   --->   "%and_ln56_13 = and i128 %add_ln56_15, i128 %select_ln56_13" [d3.cpp:56]   --->   Operation 318 'and' 'and_ln56_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 319 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_16 = add i128 %and_ln56_12, i128 %and_ln56_13" [d3.cpp:56]   --->   Operation 319 'add' 'add_ln56_16' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 320 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_17 = add i128 %add_ln56_16, i128 %and_ln56_11" [d3.cpp:56]   --->   Operation 320 'add' 'add_ln56_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 321 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_18 = add i128 %add59_444_load, i128 %add_ln56_17" [d3.cpp:56]   --->   Operation 321 'add' 'add_ln56_18' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 322 [1/1] (0.77ns)   --->   "%tmp_21 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_2" [d3.cpp:54]   --->   Operation 322 'mux' 'tmp_21' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 323 [1/1] (0.00ns)   --->   "%zext_ln54_6 = zext i64 %tmp_21" [d3.cpp:54]   --->   Operation 323 'zext' 'zext_ln54_6' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 324 '%mul_ln56_19 = mul i128 %zext_ln54_6, i128 %zext_ln54'
ST_4 : Operation 324 [1/1] (3.74ns)   --->   "%mul_ln56_19 = mul i128 %zext_ln54_6, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 324 'mul' 'mul_ln56_19' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_14)   --->   "%select_ln56_14 = select i1 %and_ln54_5, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 325 'select' 'select_ln56_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 326 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_14 = and i128 %mul_ln56_19, i128 %select_ln56_14" [d3.cpp:56]   --->   Operation 326 'and' 'and_ln56_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 327 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_20)   --->   "%select_ln56_15 = select i1 %icmp_ln52_4, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 327 'select' 'select_ln56_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_20)   --->   "%and_ln56_15 = and i128 %mul_ln56_20, i128 %select_ln56_15" [d3.cpp:56]   --->   Operation 328 'and' 'and_ln56_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_20)   --->   "%select_ln56_16 = select i1 %icmp_ln56_5, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 329 'select' 'select_ln56_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_20)   --->   "%and_ln56_16 = and i128 %add_ln56_19, i128 %select_ln56_16" [d3.cpp:56]   --->   Operation 330 'and' 'and_ln56_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 331 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_20 = add i128 %and_ln56_15, i128 %and_ln56_16" [d3.cpp:56]   --->   Operation 331 'add' 'add_ln56_20' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 332 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_21 = add i128 %add_ln56_20, i128 %and_ln56_14" [d3.cpp:56]   --->   Operation 332 'add' 'add_ln56_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 333 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_22 = add i128 %add59_545_load, i128 %add_ln56_21" [d3.cpp:56]   --->   Operation 333 'add' 'add_ln56_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 334 [1/1] (0.77ns)   --->   "%tmp_25 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49" [d3.cpp:54]   --->   Operation 334 'mux' 'tmp_25' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 335 [1/1] (0.00ns)   --->   "%zext_ln54_7 = zext i64 %tmp_25" [d3.cpp:54]   --->   Operation 335 'zext' 'zext_ln54_7' <Predicate = true> <Delay = 0.00>
ST_4 : [1/1] (0.78ns)   --->   Input mux for Operation 336 '%mul_ln56_23 = mul i128 %zext_ln54_7, i128 %zext_ln54'
ST_4 : Operation 336 [1/1] (3.74ns)   --->   "%mul_ln56_23 = mul i128 %zext_ln54_7, i128 %zext_ln54" [d3.cpp:56]   --->   Operation 336 'mul' 'mul_ln56_23' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node and_ln56_17)   --->   "%select_ln56_17 = select i1 %and_ln54_6, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 337 'select' 'select_ln56_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 338 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln56_17 = and i128 %mul_ln56_23, i128 %select_ln56_17" [d3.cpp:56]   --->   Operation 338 'and' 'and_ln56_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_24)   --->   "%select_ln56_18 = select i1 %icmp_ln52_5, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 339 'select' 'select_ln56_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_24)   --->   "%and_ln56_18 = and i128 %mul_ln56_24, i128 %select_ln56_18" [d3.cpp:56]   --->   Operation 340 'and' 'and_ln56_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_24)   --->   "%select_ln56_19 = select i1 %icmp_ln56_6, i128 340282366920938463463374607431768211455, i128 0" [d3.cpp:56]   --->   Operation 341 'select' 'select_ln56_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_24)   --->   "%and_ln56_19 = and i128 %add_ln56_23, i128 %select_ln56_19" [d3.cpp:56]   --->   Operation 342 'and' 'and_ln56_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 343 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln56_24 = add i128 %and_ln56_18, i128 %and_ln56_19" [d3.cpp:56]   --->   Operation 343 'add' 'add_ln56_24' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 344 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_25 = add i128 %add_ln56_24, i128 %and_ln56_17" [d3.cpp:56]   --->   Operation 344 'add' 'add_ln56_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 345 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_26 = add i128 %add59_646_load, i128 %add_ln56_25" [d3.cpp:56]   --->   Operation 345 'add' 'add_ln56_26' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 346 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56_28 = add i128 %and_ln56_21, i128 %and_ln56_20" [d3.cpp:56]   --->   Operation 346 'add' 'add_ln56_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 347 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln56_29 = add i128 %add59_747_load, i128 %add_ln56_28" [d3.cpp:56]   --->   Operation 347 'add' 'add_ln56_29' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 348 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_29, i128 %add59_747" [d3.cpp:36]   --->   Operation 348 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 349 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_26, i128 %add59_646" [d3.cpp:36]   --->   Operation 349 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 350 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_22, i128 %add59_545" [d3.cpp:36]   --->   Operation 350 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 351 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_18, i128 %add59_444" [d3.cpp:36]   --->   Operation 351 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 352 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_14, i128 %add59_343" [d3.cpp:36]   --->   Operation 352 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 353 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_10, i128 %add59_242" [d3.cpp:36]   --->   Operation 353 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 354 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_6, i128 %add59_141" [d3.cpp:36]   --->   Operation 354 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 355 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln56_2, i128 %add5940" [d3.cpp:36]   --->   Operation 355 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 356 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body39" [d3.cpp:36]   --->   Operation 356 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.097ns
The critical path consists of the following:
	'alloca' operation ('i') [47]  (0.000 ns)
	'load' operation ('i', d3.cpp:52) on local variable 'i' [89]  (0.000 ns)
	'sub' operation ('sub_ln55', d3.cpp:55) [106]  (0.797 ns)
	'mux' operation ('tmp', d3.cpp:44) [107]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.782 ns)
'mul' operation ('mul_ln44', d3.cpp:44) [111]  (3.748 ns)

 <State 2>: 7.173ns
The critical path consists of the following:
	'sub' operation ('sub_ln34_9', d3.cpp:34) [218]  (0.797 ns)
	'sub' operation ('sub_ln58_3', d3.cpp:58) [246]  (0.797 ns)
	'sub' operation ('sub_ln34_4', d3.cpp:34) [253]  (0.797 ns)
	'sub' operation ('sub_ln58_4', d3.cpp:58) [282]  (0.797 ns)
	'sub' operation ('sub_ln34_6', d3.cpp:34) [290]  (0.797 ns)
	'sub' operation ('sub_ln58_5', d3.cpp:58) [318]  (0.797 ns)
	'sub' operation ('sub_ln34', d3.cpp:34) [325]  (0.797 ns)
	'sub' operation ('sub_ln58', d3.cpp:58) [354]  (0.797 ns)
	'sub' operation ('sub_ln34_2', d3.cpp:34) [361]  (0.797 ns)

 <State 3>: 7.258ns
The critical path consists of the following:
	'mux' operation ('tmp_2', d3.cpp:52) [115]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.782 ns)
'mul' operation ('mul_ln56', d3.cpp:56) [129]  (3.748 ns)
	'add' operation ('add_ln56', d3.cpp:56) [132]  (1.579 ns)
	'and' operation ('and_ln56_1', d3.cpp:56) [136]  (0.379 ns)

 <State 4>: 7.101ns
The critical path consists of the following:
	'mux' operation ('tmp_25', d3.cpp:54) [326]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.782 ns)
'mul' operation ('mul_ln56_23', d3.cpp:56) [339]  (3.748 ns)
	'and' operation ('and_ln56_17', d3.cpp:56) [341]  (0.379 ns)
	'add' operation ('add_ln56_25', d3.cpp:56) [351]  (0.000 ns)
	'add' operation ('add_ln56_26', d3.cpp:56) [352]  (0.995 ns)
	'store' operation ('store_ln36', d3.cpp:36) of variable 'add_ln56_26', d3.cpp:56 on local variable 'add59_646' [381]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
