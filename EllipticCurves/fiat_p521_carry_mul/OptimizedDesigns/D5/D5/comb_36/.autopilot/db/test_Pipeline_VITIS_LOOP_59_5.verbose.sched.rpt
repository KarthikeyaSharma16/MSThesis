

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_59_5'
================================================================
* Date:           Thu May  9 22:07:42 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_36 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.894 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_59_5  |        3|        3|         3|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.18>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add115156 = alloca i32 1"   --->   Operation 6 'alloca' 'add115156' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add115_125157 = alloca i32 1"   --->   Operation 7 'alloca' 'add115_125157' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add115_239158 = alloca i32 1"   --->   Operation 8 'alloca' 'add115_239158' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add115_353159 = alloca i32 1"   --->   Operation 9 'alloca' 'add115_353159' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add115_4160 = alloca i32 1"   --->   Operation 10 'alloca' 'add115_4160' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add115_5161 = alloca i32 1"   --->   Operation 11 'alloca' 'add115_5161' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add115_6162 = alloca i32 1"   --->   Operation 12 'alloca' 'add115_6162' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add115_7163 = alloca i32 1"   --->   Operation 13 'alloca' 'add115_7163' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 14 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_reload"   --->   Operation 15 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 16 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 17 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_8_reload"   --->   Operation 18 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_7_reload"   --->   Operation 19 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_6_reload"   --->   Operation 20 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_5_reload"   --->   Operation 21 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_4_reload"   --->   Operation 22 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_3_reload"   --->   Operation 23 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_2_reload"   --->   Operation 24 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_1_reload"   --->   Operation 25 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_reload"   --->   Operation 26 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 27 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 28 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 29 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 30 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 31 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arr_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr"   --->   Operation 32 'read' 'arr_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arr_1_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_1"   --->   Operation 33 'read' 'arr_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arr_2_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_2"   --->   Operation 34 'read' 'arr_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arr_3_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_3"   --->   Operation 35 'read' 'arr_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arr_4_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_4"   --->   Operation 36 'read' 'arr_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arr_5_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_5"   --->   Operation 37 'read' 'arr_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arr_6_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_6"   --->   Operation 38 'read' 'arr_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arr_7_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %arr_7"   --->   Operation 39 'read' 'arr_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 7, i4 %i"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_7_read, i128 %add115_7163"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_6_read, i128 %add115_6162"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_5_read, i128 %add115_5161"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_4_read, i128 %add115_4160"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_3_read, i128 %add115_353159"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_2_read, i128 %add115_239158"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_1_read, i128 %add115_125157"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 %arr_read, i128 %add115156"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc122.3"   --->   Operation 49 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [d5.cpp:72]   --->   Operation 50 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_20 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_1, i32 3" [d5.cpp:59]   --->   Operation 51 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln59 = br i1 %tmp_20, void %for.inc122.3.split, void %for.end133.exitStub" [d5.cpp:59]   --->   Operation 52 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i4 %i_1" [d5.cpp:34]   --->   Operation 53 'trunc' 'trunc_ln34' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.12ns)   --->   "%xor_ln62 = xor i3 %trunc_ln34, i3 7" [d5.cpp:62]   --->   Operation 54 'xor' 'xor_ln62' <Predicate = (!tmp_20)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln72_21 = zext i3 %xor_ln62" [d5.cpp:72]   --->   Operation 55 'zext' 'zext_ln72_21' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.79ns)   --->   "%icmp_ln72 = icmp_ne  i4 %i_1, i4 7" [d5.cpp:72]   --->   Operation 56 'icmp' 'icmp_ln72' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.67ns)   --->   "%add_ln73 = add i4 %zext_ln72_21, i4 15" [d5.cpp:73]   --->   Operation 57 'add' 'add_ln73' <Predicate = (!tmp_20)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i1 %icmp_ln72" [d5.cpp:73]   --->   Operation 58 'zext' 'zext_ln73' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%sub_ln69 = sub i4 %add_ln73, i4 %zext_ln73" [d5.cpp:69]   --->   Operation 59 'sub' 'sub_ln69' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.79ns)   --->   "%icmp_ln72_1 = icmp_slt  i4 %i_1, i4 6" [d5.cpp:72]   --->   Operation 60 'icmp' 'icmp_ln72_1' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln73_1 = zext i1 %icmp_ln72_1" [d5.cpp:73]   --->   Operation 61 'zext' 'zext_ln73_1' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.79ns)   --->   "%sub_ln69_1 = sub i4 %sub_ln69, i4 %zext_ln73_1" [d5.cpp:69]   --->   Operation 62 'sub' 'sub_ln69_1' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.79ns)   --->   "%icmp_ln72_2 = icmp_slt  i4 %i_1, i4 5" [d5.cpp:72]   --->   Operation 63 'icmp' 'icmp_ln72_2' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln73_2 = zext i1 %icmp_ln72_2" [d5.cpp:73]   --->   Operation 64 'zext' 'zext_ln73_2' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.79ns)   --->   "%sub_ln69_2 = sub i4 %sub_ln69_1, i4 %zext_ln73_2" [d5.cpp:69]   --->   Operation 65 'sub' 'sub_ln69_2' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i_1, i32 2, i32 3" [d5.cpp:72]   --->   Operation 66 'partselect' 'tmp_21' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.54ns)   --->   "%icmp_ln72_3 = icmp_ne  i2 %tmp_21, i2 1" [d5.cpp:72]   --->   Operation 67 'icmp' 'icmp_ln72_3' <Predicate = (!tmp_20)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.79ns)   --->   "%empty = add i4 %i_1, i4 15" [d5.cpp:72]   --->   Operation 68 'add' 'empty' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.79ns)   --->   "%icmp_ln72_4 = icmp_slt  i4 %empty, i4 6" [d5.cpp:72]   --->   Operation 69 'icmp' 'icmp_ln72_4' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln73_3 = zext i1 %icmp_ln72_4" [d5.cpp:73]   --->   Operation 70 'zext' 'zext_ln73_3' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.79ns)   --->   "%sub_ln69_3 = sub i4 %add_ln73, i4 %zext_ln73_3" [d5.cpp:69]   --->   Operation 71 'sub' 'sub_ln69_3' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.79ns)   --->   "%icmp_ln72_5 = icmp_slt  i4 %empty, i4 5" [d5.cpp:72]   --->   Operation 72 'icmp' 'icmp_ln72_5' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln73_4 = zext i1 %icmp_ln72_5" [d5.cpp:73]   --->   Operation 73 'zext' 'zext_ln73_4' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.79ns)   --->   "%sub_ln69_4 = sub i4 %sub_ln69_3, i4 %zext_ln73_4" [d5.cpp:69]   --->   Operation 74 'sub' 'sub_ln69_4' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty, i32 2, i32 3" [d5.cpp:72]   --->   Operation 75 'partselect' 'tmp_22' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.54ns)   --->   "%icmp_ln72_6 = icmp_ne  i2 %tmp_22, i2 1" [d5.cpp:72]   --->   Operation 76 'icmp' 'icmp_ln72_6' <Predicate = (!tmp_20)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.79ns)   --->   "%icmp_ln72_7 = icmp_slt  i4 %empty, i4 3" [d5.cpp:72]   --->   Operation 77 'icmp' 'icmp_ln72_7' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.79ns)   --->   "%empty_28 = add i4 %i_1, i4 14" [d5.cpp:72]   --->   Operation 78 'add' 'empty_28' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.79ns)   --->   "%icmp_ln72_8 = icmp_slt  i4 %empty_28, i4 5" [d5.cpp:72]   --->   Operation 79 'icmp' 'icmp_ln72_8' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln73_6 = zext i1 %icmp_ln72_8" [d5.cpp:73]   --->   Operation 80 'zext' 'zext_ln73_6' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%sub_ln69_6 = sub i4 %add_ln73, i4 %zext_ln73_6" [d5.cpp:69]   --->   Operation 81 'sub' 'sub_ln69_6' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_23 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_28, i32 2, i32 3" [d5.cpp:72]   --->   Operation 82 'partselect' 'tmp_23' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.54ns)   --->   "%icmp_ln72_9 = icmp_ne  i2 %tmp_23, i2 1" [d5.cpp:72]   --->   Operation 83 'icmp' 'icmp_ln72_9' <Predicate = (!tmp_20)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln73_7 = zext i1 %icmp_ln72_9" [d5.cpp:73]   --->   Operation 84 'zext' 'zext_ln73_7' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.79ns)   --->   "%sub_ln69_7 = sub i4 %sub_ln69_6, i4 %zext_ln73_7" [d5.cpp:69]   --->   Operation 85 'sub' 'sub_ln69_7' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%icmp_ln72_10 = icmp_slt  i4 %empty_28, i4 3" [d5.cpp:72]   --->   Operation 86 'icmp' 'icmp_ln72_10' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_28, i32 1, i32 3" [d5.cpp:72]   --->   Operation 87 'partselect' 'tmp_24' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.67ns)   --->   "%icmp_ln72_11 = icmp_slt  i3 %tmp_24, i3 1" [d5.cpp:72]   --->   Operation 88 'icmp' 'icmp_ln72_11' <Predicate = (!tmp_20)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.79ns)   --->   "%empty_29 = add i4 %i_1, i4 13" [d5.cpp:72]   --->   Operation 89 'add' 'empty_29' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty_29, i32 2, i32 3" [d5.cpp:72]   --->   Operation 90 'partselect' 'tmp_25' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.54ns)   --->   "%icmp_ln72_12 = icmp_ne  i2 %tmp_25, i2 1" [d5.cpp:72]   --->   Operation 91 'icmp' 'icmp_ln72_12' <Predicate = (!tmp_20)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln73_9 = zext i1 %icmp_ln72_12" [d5.cpp:73]   --->   Operation 92 'zext' 'zext_ln73_9' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.79ns)   --->   "%sub_ln69_9 = sub i4 %add_ln73, i4 %zext_ln73_9" [d5.cpp:69]   --->   Operation 93 'sub' 'sub_ln69_9' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.79ns)   --->   "%icmp_ln72_13 = icmp_slt  i4 %empty_29, i4 3" [d5.cpp:72]   --->   Operation 94 'icmp' 'icmp_ln72_13' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_26 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty_29, i32 1, i32 3" [d5.cpp:72]   --->   Operation 95 'partselect' 'tmp_26' <Predicate = (!tmp_20)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.67ns)   --->   "%icmp_ln72_14 = icmp_slt  i3 %tmp_26, i3 1" [d5.cpp:72]   --->   Operation 96 'icmp' 'icmp_ln72_14' <Predicate = (!tmp_20)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.79ns)   --->   "%icmp_ln72_15 = icmp_slt  i4 %empty_29, i4 1" [d5.cpp:72]   --->   Operation 97 'icmp' 'icmp_ln72_15' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%add_ln59 = add i4 %i_1, i4 12" [d5.cpp:59]   --->   Operation 98 'add' 'add_ln59' <Predicate = (!tmp_20)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.42ns)   --->   "%store_ln59 = store i4 %add_ln59, i4 %i" [d5.cpp:59]   --->   Operation 99 'store' 'store_ln59' <Predicate = (!tmp_20)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 6.89>
ST_2 : Operation 100 [1/1] (0.72ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.8i64.i3, i64 0, i64 0, i64 0, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i3 %trunc_ln34" [d5.cpp:72]   --->   Operation 100 'mux' 'tmp' <Predicate = true> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i64 %tmp" [d5.cpp:72]   --->   Operation 101 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.57ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.5i64.i3, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i3 %xor_ln62" [d5.cpp:72]   --->   Operation 102 'mux' 'tmp_1' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i64 %tmp_1" [d5.cpp:72]   --->   Operation 103 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.57ns)   --->   "%tmp_2 = mux i64 @_ssdm_op_Mux.ap_auto.5i64.i3, i64 0, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i3 %xor_ln62" [d5.cpp:72]   --->   Operation 104 'mux' 'tmp_2' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i64 %tmp_2" [d5.cpp:72]   --->   Operation 105 'zext' 'zext_ln72_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.77ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69" [d5.cpp:72]   --->   Operation 106 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln72_3 = zext i64 %tmp_3" [d5.cpp:72]   --->   Operation 107 'zext' 'zext_ln72_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.77ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_1" [d5.cpp:72]   --->   Operation 108 'mux' 'tmp_4' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln72_4 = zext i64 %tmp_4" [d5.cpp:72]   --->   Operation 109 'zext' 'zext_ln72_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.77ns)   --->   "%tmp_5 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_2" [d5.cpp:72]   --->   Operation 110 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln72_5 = zext i64 %tmp_5" [d5.cpp:72]   --->   Operation 111 'zext' 'zext_ln72_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.72ns)   --->   "%tmp_6 = mux i64 @_ssdm_op_Mux.ap_auto.8i64.i3, i64 0, i64 0, i64 0, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i3 %trunc_ln34" [d5.cpp:72]   --->   Operation 112 'mux' 'tmp_6' <Predicate = true> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln72_6 = zext i64 %tmp_6" [d5.cpp:72]   --->   Operation 113 'zext' 'zext_ln72_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.57ns)   --->   "%tmp_7 = mux i64 @_ssdm_op_Mux.ap_auto.5i64.i3, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i3 %xor_ln62" [d5.cpp:72]   --->   Operation 114 'mux' 'tmp_7' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln72_7 = zext i64 %tmp_7" [d5.cpp:72]   --->   Operation 115 'zext' 'zext_ln72_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.77ns)   --->   "%tmp_8 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_3" [d5.cpp:72]   --->   Operation 116 'mux' 'tmp_8' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln72_8 = zext i64 %tmp_8" [d5.cpp:72]   --->   Operation 117 'zext' 'zext_ln72_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.77ns)   --->   "%tmp_9 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_4" [d5.cpp:72]   --->   Operation 118 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln72_9 = zext i64 %tmp_9" [d5.cpp:72]   --->   Operation 119 'zext' 'zext_ln72_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln73_5 = zext i1 %icmp_ln72_6" [d5.cpp:73]   --->   Operation 120 'zext' 'zext_ln73_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.79ns)   --->   "%sub_ln69_5 = sub i4 %sub_ln69_4, i4 %zext_ln73_5" [d5.cpp:69]   --->   Operation 121 'sub' 'sub_ln69_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.77ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_5" [d5.cpp:72]   --->   Operation 122 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln72_10 = zext i64 %tmp_s" [d5.cpp:72]   --->   Operation 123 'zext' 'zext_ln72_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.72ns)   --->   "%tmp_10 = mux i64 @_ssdm_op_Mux.ap_auto.8i64.i3, i64 0, i64 0, i64 0, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i3 %trunc_ln34" [d5.cpp:72]   --->   Operation 124 'mux' 'tmp_10' <Predicate = true> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln72_11 = zext i64 %tmp_10" [d5.cpp:72]   --->   Operation 125 'zext' 'zext_ln72_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.57ns)   --->   "%tmp_11 = mux i64 @_ssdm_op_Mux.ap_auto.5i64.i3, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i3 %xor_ln62" [d5.cpp:72]   --->   Operation 126 'mux' 'tmp_11' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln72_12 = zext i64 %tmp_11" [d5.cpp:72]   --->   Operation 127 'zext' 'zext_ln72_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.77ns)   --->   "%tmp_12 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_6" [d5.cpp:72]   --->   Operation 128 'mux' 'tmp_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln72_13 = zext i64 %tmp_12" [d5.cpp:72]   --->   Operation 129 'zext' 'zext_ln72_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.77ns)   --->   "%tmp_13 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_7" [d5.cpp:72]   --->   Operation 130 'mux' 'tmp_13' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln72_14 = zext i64 %tmp_13" [d5.cpp:72]   --->   Operation 131 'zext' 'zext_ln72_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln73_8 = zext i1 %icmp_ln72_10" [d5.cpp:73]   --->   Operation 132 'zext' 'zext_ln73_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.79ns)   --->   "%sub_ln69_8 = sub i4 %sub_ln69_7, i4 %zext_ln73_8" [d5.cpp:69]   --->   Operation 133 'sub' 'sub_ln69_8' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.77ns)   --->   "%tmp_14 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_8" [d5.cpp:72]   --->   Operation 134 'mux' 'tmp_14' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln72_15 = zext i64 %tmp_14" [d5.cpp:72]   --->   Operation 135 'zext' 'zext_ln72_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.72ns)   --->   "%tmp_15 = mux i64 @_ssdm_op_Mux.ap_auto.8i64.i3, i64 0, i64 0, i64 0, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i3 %trunc_ln34" [d5.cpp:72]   --->   Operation 136 'mux' 'tmp_15' <Predicate = true> <Delay = 0.72> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln72_16 = zext i64 %tmp_15" [d5.cpp:72]   --->   Operation 137 'zext' 'zext_ln72_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.57ns)   --->   "%tmp_16 = mux i64 @_ssdm_op_Mux.ap_auto.5i64.i3, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i3 %xor_ln62" [d5.cpp:72]   --->   Operation 138 'mux' 'tmp_16' <Predicate = true> <Delay = 0.57> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln72_17 = zext i64 %tmp_16" [d5.cpp:72]   --->   Operation 139 'zext' 'zext_ln72_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 140 '%mul_ln72 = mul i128 %zext_ln72_17, i128 %zext_ln72_16'
ST_2 : Operation 140 [1/1] (3.42ns)   --->   "%mul_ln72 = mul i128 %zext_ln72_17, i128 %zext_ln72_16" [d5.cpp:72]   --->   Operation 140 'mul' 'mul_ln72' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 141 '%mul_ln72_1 = mul i128 %zext_ln72_7, i128 %zext_ln72_6'
ST_2 : Operation 141 [1/1] (3.42ns)   --->   "%mul_ln72_1 = mul i128 %zext_ln72_7, i128 %zext_ln72_6" [d5.cpp:72]   --->   Operation 141 'mul' 'mul_ln72_1' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 142 '%mul_ln72_2 = mul i128 %zext_ln72_12, i128 %zext_ln72_11'
ST_2 : Operation 142 [1/1] (3.42ns)   --->   "%mul_ln72_2 = mul i128 %zext_ln72_12, i128 %zext_ln72_11" [d5.cpp:72]   --->   Operation 142 'mul' 'mul_ln72_2' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 143 '%mul_ln72_3 = mul i128 %zext_ln72_1, i128 %zext_ln72'
ST_2 : Operation 143 [1/1] (3.42ns)   --->   "%mul_ln72_3 = mul i128 %zext_ln72_1, i128 %zext_ln72" [d5.cpp:72]   --->   Operation 143 'mul' 'mul_ln72_3' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (1.57ns)   --->   "%add_ln72 = add i128 %mul_ln72_3, i128 %mul_ln72_1" [d5.cpp:72]   --->   Operation 144 'add' 'add_ln72' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (1.57ns)   --->   "%add_ln72_1 = add i128 %mul_ln72_2, i128 %mul_ln72" [d5.cpp:72]   --->   Operation 145 'add' 'add_ln72_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 146 '%mul_ln72_4 = mul i128 %zext_ln72_16, i128 %zext_ln72_12'
ST_2 : Operation 146 [1/1] (3.42ns)   --->   "%mul_ln72_4 = mul i128 %zext_ln72_16, i128 %zext_ln72_12" [d5.cpp:72]   --->   Operation 146 'mul' 'mul_ln72_4' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 147 '%mul_ln72_5 = mul i128 %zext_ln72_2, i128 %zext_ln72'
ST_2 : Operation 147 [1/1] (3.42ns)   --->   "%mul_ln72_5 = mul i128 %zext_ln72_2, i128 %zext_ln72" [d5.cpp:72]   --->   Operation 147 'mul' 'mul_ln72_5' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_4)   --->   "%select_ln72 = select i1 %icmp_ln72, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 148 'select' 'select_ln72' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_4)   --->   "%and_ln72 = and i128 %mul_ln72_5, i128 %select_ln72" [d5.cpp:72]   --->   Operation 149 'and' 'and_ln72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 150 '%mul_ln72_6 = mul i128 %zext_ln72_11, i128 %zext_ln72_7'
ST_2 : Operation 150 [1/1] (3.42ns)   --->   "%mul_ln72_6 = mul i128 %zext_ln72_11, i128 %zext_ln72_7" [d5.cpp:72]   --->   Operation 150 'mul' 'mul_ln72_6' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 151 '%mul_ln72_7 = mul i128 %zext_ln72_6, i128 %zext_ln72_1'
ST_2 : Operation 151 [1/1] (3.42ns)   --->   "%mul_ln72_7 = mul i128 %zext_ln72_6, i128 %zext_ln72_1" [d5.cpp:72]   --->   Operation 151 'mul' 'mul_ln72_7' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_4 = add i128 %and_ln72, i128 %mul_ln72_7" [d5.cpp:72]   --->   Operation 152 'add' 'add_ln72_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (1.57ns)   --->   "%add_ln72_5 = add i128 %mul_ln72_6, i128 %mul_ln72_4" [d5.cpp:72]   --->   Operation 153 'add' 'add_ln72_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 154 '%mul_ln72_8 = mul i128 %zext_ln72_16, i128 %zext_ln72_7'
ST_2 : Operation 154 [1/1] (3.42ns)   --->   "%mul_ln72_8 = mul i128 %zext_ln72_16, i128 %zext_ln72_7" [d5.cpp:72]   --->   Operation 154 'mul' 'mul_ln72_8' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 155 '%mul_ln72_9 = mul i128 %zext_ln72_6, i128 %zext_ln72_2'
ST_2 : Operation 155 [1/1] (3.42ns)   --->   "%mul_ln72_9 = mul i128 %zext_ln72_6, i128 %zext_ln72_2" [d5.cpp:72]   --->   Operation 155 'mul' 'mul_ln72_9' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 156 '%mul_ln72_10 = mul i128 %zext_ln72_3, i128 %zext_ln72'
ST_2 : Operation 156 [1/1] (3.42ns)   --->   "%mul_ln72_10 = mul i128 %zext_ln72_3, i128 %zext_ln72" [d5.cpp:72]   --->   Operation 156 'mul' 'mul_ln72_10' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_8)   --->   "%select_ln72_1 = select i1 %icmp_ln72_4, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 157 'select' 'select_ln72_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_8)   --->   "%and_ln72_1 = and i128 %mul_ln72_9, i128 %select_ln72_1" [d5.cpp:72]   --->   Operation 158 'and' 'and_ln72_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_8)   --->   "%select_ln72_2 = select i1 %icmp_ln72_1, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 159 'select' 'select_ln72_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_8)   --->   "%and_ln72_2 = and i128 %mul_ln72_10, i128 %select_ln72_2" [d5.cpp:72]   --->   Operation 160 'and' 'and_ln72_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 161 '%mul_ln72_11 = mul i128 %zext_ln72_11, i128 %zext_ln72_1'
ST_2 : Operation 161 [1/1] (3.42ns)   --->   "%mul_ln72_11 = mul i128 %zext_ln72_11, i128 %zext_ln72_1" [d5.cpp:72]   --->   Operation 161 'mul' 'mul_ln72_11' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 162 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_8 = add i128 %and_ln72_2, i128 %and_ln72_1" [d5.cpp:72]   --->   Operation 162 'add' 'add_ln72_8' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (1.57ns)   --->   "%add_ln72_9 = add i128 %mul_ln72_11, i128 %mul_ln72_8" [d5.cpp:72]   --->   Operation 163 'add' 'add_ln72_9' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 164 '%mul_ln72_12 = mul i128 %zext_ln72_16, i128 %zext_ln72_1'
ST_2 : Operation 164 [1/1] (3.42ns)   --->   "%mul_ln72_12 = mul i128 %zext_ln72_16, i128 %zext_ln72_1" [d5.cpp:72]   --->   Operation 164 'mul' 'mul_ln72_12' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 165 '%mul_ln72_13 = mul i128 %zext_ln72_8, i128 %zext_ln72_6'
ST_2 : Operation 165 [1/1] (3.42ns)   --->   "%mul_ln72_13 = mul i128 %zext_ln72_8, i128 %zext_ln72_6" [d5.cpp:72]   --->   Operation 165 'mul' 'mul_ln72_13' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 166 '%mul_ln72_14 = mul i128 %zext_ln72_11, i128 %zext_ln72_2'
ST_2 : Operation 166 [1/1] (3.42ns)   --->   "%mul_ln72_14 = mul i128 %zext_ln72_11, i128 %zext_ln72_2" [d5.cpp:72]   --->   Operation 166 'mul' 'mul_ln72_14' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 167 '%mul_ln72_15 = mul i128 %zext_ln72_4, i128 %zext_ln72'
ST_2 : Operation 167 [1/1] (3.42ns)   --->   "%mul_ln72_15 = mul i128 %zext_ln72_4, i128 %zext_ln72" [d5.cpp:72]   --->   Operation 167 'mul' 'mul_ln72_15' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_12)   --->   "%select_ln72_3 = select i1 %icmp_ln72_5, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 168 'select' 'select_ln72_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_12)   --->   "%and_ln72_3 = and i128 %mul_ln72_13, i128 %select_ln72_3" [d5.cpp:72]   --->   Operation 169 'and' 'and_ln72_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_13)   --->   "%select_ln72_4 = select i1 %icmp_ln72_8, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 170 'select' 'select_ln72_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_13)   --->   "%and_ln72_4 = and i128 %mul_ln72_14, i128 %select_ln72_4" [d5.cpp:72]   --->   Operation 171 'and' 'and_ln72_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_12)   --->   "%select_ln72_5 = select i1 %icmp_ln72_2, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 172 'select' 'select_ln72_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_12)   --->   "%and_ln72_5 = and i128 %mul_ln72_15, i128 %select_ln72_5" [d5.cpp:72]   --->   Operation 173 'and' 'and_ln72_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_12 = add i128 %and_ln72_5, i128 %and_ln72_3" [d5.cpp:72]   --->   Operation 174 'add' 'add_ln72_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_13 = add i128 %and_ln72_4, i128 %mul_ln72_12" [d5.cpp:72]   --->   Operation 175 'add' 'add_ln72_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 176 '%mul_ln72_16 = mul i128 %zext_ln72_16, i128 %zext_ln72_2'
ST_2 : Operation 176 [1/1] (3.42ns)   --->   "%mul_ln72_16 = mul i128 %zext_ln72_16, i128 %zext_ln72_2" [d5.cpp:72]   --->   Operation 176 'mul' 'mul_ln72_16' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_17)   --->   "%select_ln72_6 = select i1 %icmp_ln72_12, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 177 'select' 'select_ln72_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_17)   --->   "%and_ln72_6 = and i128 %mul_ln72_16, i128 %select_ln72_6" [d5.cpp:72]   --->   Operation 178 'and' 'and_ln72_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 179 '%mul_ln72_17 = mul i128 %zext_ln72_9, i128 %zext_ln72_6'
ST_2 : Operation 179 [1/1] (3.42ns)   --->   "%mul_ln72_17 = mul i128 %zext_ln72_9, i128 %zext_ln72_6" [d5.cpp:72]   --->   Operation 179 'mul' 'mul_ln72_17' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 180 '%mul_ln72_18 = mul i128 %zext_ln72_13, i128 %zext_ln72_11'
ST_2 : Operation 180 [1/1] (3.42ns)   --->   "%mul_ln72_18 = mul i128 %zext_ln72_13, i128 %zext_ln72_11" [d5.cpp:72]   --->   Operation 180 'mul' 'mul_ln72_18' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 181 '%mul_ln72_19 = mul i128 %zext_ln72_5, i128 %zext_ln72'
ST_2 : Operation 181 [1/1] (3.42ns)   --->   "%mul_ln72_19 = mul i128 %zext_ln72_5, i128 %zext_ln72" [d5.cpp:72]   --->   Operation 181 'mul' 'mul_ln72_19' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_16)   --->   "%select_ln72_7 = select i1 %icmp_ln72_6, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 182 'select' 'select_ln72_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_16)   --->   "%and_ln72_7 = and i128 %mul_ln72_17, i128 %select_ln72_7" [d5.cpp:72]   --->   Operation 183 'and' 'and_ln72_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_17)   --->   "%select_ln72_8 = select i1 %icmp_ln72_9, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 184 'select' 'select_ln72_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_17)   --->   "%and_ln72_8 = and i128 %mul_ln72_18, i128 %select_ln72_8" [d5.cpp:72]   --->   Operation 185 'and' 'and_ln72_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_16)   --->   "%select_ln72_9 = select i1 %icmp_ln72_3, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 186 'select' 'select_ln72_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_16)   --->   "%and_ln72_9 = and i128 %mul_ln72_19, i128 %select_ln72_9" [d5.cpp:72]   --->   Operation 187 'and' 'and_ln72_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_16 = add i128 %and_ln72_9, i128 %and_ln72_7" [d5.cpp:72]   --->   Operation 188 'add' 'add_ln72_16' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 189 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_17 = add i128 %and_ln72_8, i128 %and_ln72_6" [d5.cpp:72]   --->   Operation 189 'add' 'add_ln72_17' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (0.77ns)   --->   "%tmp_17 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_9" [d5.cpp:72]   --->   Operation 190 'mux' 'tmp_17' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln72_18 = zext i64 %tmp_17" [d5.cpp:72]   --->   Operation 191 'zext' 'zext_ln72_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 192 '%mul_ln72_20 = mul i128 %zext_ln72_18, i128 %zext_ln72_16'
ST_2 : Operation 192 [1/1] (3.42ns)   --->   "%mul_ln72_20 = mul i128 %zext_ln72_18, i128 %zext_ln72_16" [d5.cpp:72]   --->   Operation 192 'mul' 'mul_ln72_20' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 193 '%mul_ln72_21 = mul i128 %zext_ln72_10, i128 %zext_ln72_6'
ST_2 : Operation 193 [1/1] (3.42ns)   --->   "%mul_ln72_21 = mul i128 %zext_ln72_10, i128 %zext_ln72_6" [d5.cpp:72]   --->   Operation 193 'mul' 'mul_ln72_21' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 194 '%mul_ln72_22 = mul i128 %zext_ln72_14, i128 %zext_ln72_11'
ST_2 : Operation 194 [1/1] (3.42ns)   --->   "%mul_ln72_22 = mul i128 %zext_ln72_14, i128 %zext_ln72_11" [d5.cpp:72]   --->   Operation 194 'mul' 'mul_ln72_22' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_20)   --->   "%select_ln72_10 = select i1 %icmp_ln72_13, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 195 'select' 'select_ln72_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_20)   --->   "%and_ln72_10 = and i128 %mul_ln72_20, i128 %select_ln72_10" [d5.cpp:72]   --->   Operation 196 'and' 'and_ln72_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node and_ln72_11)   --->   "%select_ln72_11 = select i1 %icmp_ln72_7, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 197 'select' 'select_ln72_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln72_11 = and i128 %mul_ln72_21, i128 %select_ln72_11" [d5.cpp:72]   --->   Operation 198 'and' 'and_ln72_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_20)   --->   "%select_ln72_12 = select i1 %icmp_ln72_10, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 199 'select' 'select_ln72_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_20)   --->   "%and_ln72_12 = and i128 %mul_ln72_22, i128 %select_ln72_12" [d5.cpp:72]   --->   Operation 200 'and' 'and_ln72_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 201 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_20 = add i128 %and_ln72_12, i128 %and_ln72_10" [d5.cpp:72]   --->   Operation 201 'add' 'add_ln72_20' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln73_10 = zext i1 %icmp_ln72_13" [d5.cpp:73]   --->   Operation 202 'zext' 'zext_ln73_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 203 [1/1] (0.79ns)   --->   "%sub_ln69_10 = sub i4 %sub_ln69_9, i4 %zext_ln73_10" [d5.cpp:69]   --->   Operation 203 'sub' 'sub_ln69_10' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 204 [1/1] (0.77ns)   --->   "%tmp_18 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_10" [d5.cpp:72]   --->   Operation 204 'mux' 'tmp_18' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln72_19 = zext i64 %tmp_18" [d5.cpp:72]   --->   Operation 205 'zext' 'zext_ln72_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 206 '%mul_ln72_23 = mul i128 %zext_ln72_15, i128 %zext_ln72_11'
ST_2 : Operation 206 [1/1] (3.42ns)   --->   "%mul_ln72_23 = mul i128 %zext_ln72_15, i128 %zext_ln72_11" [d5.cpp:72]   --->   Operation 206 'mul' 'mul_ln72_23' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node and_ln72_13)   --->   "%select_ln72_13 = select i1 %icmp_ln72_11, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 207 'select' 'select_ln72_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln72_13 = and i128 %mul_ln72_23, i128 %select_ln72_13" [d5.cpp:72]   --->   Operation 208 'and' 'and_ln72_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 209 '%mul_ln72_24 = mul i128 %zext_ln72_19, i128 %zext_ln72_16'
ST_2 : Operation 209 [1/1] (3.42ns)   --->   "%mul_ln72_24 = mul i128 %zext_ln72_19, i128 %zext_ln72_16" [d5.cpp:72]   --->   Operation 209 'mul' 'mul_ln72_24' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node and_ln72_14)   --->   "%select_ln72_14 = select i1 %icmp_ln72_14, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 210 'select' 'select_ln72_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 211 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln72_14 = and i128 %mul_ln72_24, i128 %select_ln72_14" [d5.cpp:72]   --->   Operation 211 'and' 'and_ln72_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln73_11 = zext i1 %icmp_ln72_14" [d5.cpp:73]   --->   Operation 212 'zext' 'zext_ln73_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 213 [1/1] (0.79ns)   --->   "%sub_ln69_11 = sub i4 %sub_ln69_10, i4 %zext_ln73_11" [d5.cpp:69]   --->   Operation 213 'sub' 'sub_ln69_11' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 214 [1/1] (0.77ns)   --->   "%tmp_19 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln69_11" [d5.cpp:72]   --->   Operation 214 'mux' 'tmp_19' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln72_20 = zext i64 %tmp_19" [d5.cpp:72]   --->   Operation 215 'zext' 'zext_ln72_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.10ns)   --->   Input mux for Operation 216 '%mul_ln72_25 = mul i128 %zext_ln72_20, i128 %zext_ln72_16'
ST_2 : Operation 216 [1/1] (3.42ns)   --->   "%mul_ln72_25 = mul i128 %zext_ln72_20, i128 %zext_ln72_16" [d5.cpp:72]   --->   Operation 216 'mul' 'mul_ln72_25' <Predicate = true> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.00ns)   --->   "%add115156_load_1 = load i128 %add115156"   --->   Operation 254 'load' 'add115156_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 255 [1/1] (0.00ns)   --->   "%add115_125157_load_1 = load i128 %add115_125157"   --->   Operation 255 'load' 'add115_125157_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 256 [1/1] (0.00ns)   --->   "%add115_239158_load_1 = load i128 %add115_239158"   --->   Operation 256 'load' 'add115_239158_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 257 [1/1] (0.00ns)   --->   "%add115_353159_load_1 = load i128 %add115_353159"   --->   Operation 257 'load' 'add115_353159_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 258 [1/1] (0.00ns)   --->   "%add115_4160_load_1 = load i128 %add115_4160"   --->   Operation 258 'load' 'add115_4160_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 259 [1/1] (0.00ns)   --->   "%add115_5161_load_1 = load i128 %add115_5161"   --->   Operation 259 'load' 'add115_5161_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 260 [1/1] (0.00ns)   --->   "%add115_6162_load_1 = load i128 %add115_6162"   --->   Operation 260 'load' 'add115_6162_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 261 [1/1] (0.00ns)   --->   "%add115_7163_load_1 = load i128 %add115_7163"   --->   Operation 261 'load' 'add115_7163_load_1' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 262 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_7163_out, i128 %add115_7163_load_1"   --->   Operation 262 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 263 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_6162_out, i128 %add115_6162_load_1"   --->   Operation 263 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 264 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_5161_out, i128 %add115_5161_load_1"   --->   Operation 264 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 265 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_4160_out, i128 %add115_4160_load_1"   --->   Operation 265 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 266 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_353159_out, i128 %add115_353159_load_1"   --->   Operation 266 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 267 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_239158_out, i128 %add115_239158_load_1"   --->   Operation 267 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 268 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115_125157_out, i128 %add115_125157_load_1"   --->   Operation 268 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 269 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add115156_out, i128 %add115156_load_1"   --->   Operation 269 'write' 'write_ln0' <Predicate = (tmp_20)> <Delay = 0.00>
ST_2 : Operation 270 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 270 'ret' 'ret_ln0' <Predicate = (tmp_20)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.00>
ST_3 : Operation 217 [1/1] (0.00ns)   --->   "%add115156_load = load i128 %add115156" [d5.cpp:72]   --->   Operation 217 'load' 'add115156_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 218 [1/1] (0.00ns)   --->   "%add115_125157_load = load i128 %add115_125157" [d5.cpp:72]   --->   Operation 218 'load' 'add115_125157_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 219 [1/1] (0.00ns)   --->   "%add115_239158_load = load i128 %add115_239158" [d5.cpp:72]   --->   Operation 219 'load' 'add115_239158_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 220 [1/1] (0.00ns)   --->   "%add115_353159_load = load i128 %add115_353159" [d5.cpp:72]   --->   Operation 220 'load' 'add115_353159_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 221 [1/1] (0.00ns)   --->   "%add115_4160_load = load i128 %add115_4160" [d5.cpp:72]   --->   Operation 221 'load' 'add115_4160_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 222 [1/1] (0.00ns)   --->   "%add115_5161_load = load i128 %add115_5161" [d5.cpp:72]   --->   Operation 222 'load' 'add115_5161_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 223 [1/1] (0.00ns)   --->   "%add115_6162_load = load i128 %add115_6162" [d5.cpp:72]   --->   Operation 223 'load' 'add115_6162_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 224 [1/1] (0.00ns)   --->   "%add115_7163_load = load i128 %add115_7163" [d5.cpp:72]   --->   Operation 224 'load' 'add115_7163_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 225 [1/1] (0.00ns)   --->   "%specpipeline_ln61 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d5.cpp:61]   --->   Operation 225 'specpipeline' 'specpipeline_ln61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 226 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [d5.cpp:34]   --->   Operation 226 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 227 [1/1] (0.00ns)   --->   "%specloopname_ln59 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d5.cpp:59]   --->   Operation 227 'specloopname' 'specloopname_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 228 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_2 = add i128 %add_ln72_1, i128 %add_ln72" [d5.cpp:72]   --->   Operation 228 'add' 'add_ln72_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 229 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_3 = add i128 %add115156_load, i128 %add_ln72_2" [d5.cpp:72]   --->   Operation 229 'add' 'add_ln72_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 230 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_6 = add i128 %add_ln72_5, i128 %add_ln72_4" [d5.cpp:72]   --->   Operation 230 'add' 'add_ln72_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 231 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_7 = add i128 %add115_125157_load, i128 %add_ln72_6" [d5.cpp:72]   --->   Operation 231 'add' 'add_ln72_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 232 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_10 = add i128 %add_ln72_9, i128 %add_ln72_8" [d5.cpp:72]   --->   Operation 232 'add' 'add_ln72_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 233 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_11 = add i128 %add115_239158_load, i128 %add_ln72_10" [d5.cpp:72]   --->   Operation 233 'add' 'add_ln72_11' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 234 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_14 = add i128 %add_ln72_13, i128 %add_ln72_12" [d5.cpp:72]   --->   Operation 234 'add' 'add_ln72_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 235 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_15 = add i128 %add115_353159_load, i128 %add_ln72_14" [d5.cpp:72]   --->   Operation 235 'add' 'add_ln72_15' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 236 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_18 = add i128 %add_ln72_17, i128 %add_ln72_16" [d5.cpp:72]   --->   Operation 236 'add' 'add_ln72_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 237 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_19 = add i128 %add115_4160_load, i128 %add_ln72_18" [d5.cpp:72]   --->   Operation 237 'add' 'add_ln72_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_21 = add i128 %add_ln72_20, i128 %and_ln72_11" [d5.cpp:72]   --->   Operation 238 'add' 'add_ln72_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 239 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_22 = add i128 %add115_5161_load, i128 %add_ln72_21" [d5.cpp:72]   --->   Operation 239 'add' 'add_ln72_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 240 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln72_23 = add i128 %and_ln72_14, i128 %and_ln72_13" [d5.cpp:72]   --->   Operation 240 'add' 'add_ln72_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 241 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln72_24 = add i128 %add115_6162_load, i128 %add_ln72_23" [d5.cpp:72]   --->   Operation 241 'add' 'add_ln72_24' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_25)   --->   "%select_ln72_15 = select i1 %icmp_ln72_15, i128 340282366920938463463374607431768211455, i128 0" [d5.cpp:72]   --->   Operation 242 'select' 'select_ln72_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node add_ln72_25)   --->   "%and_ln72_15 = and i128 %mul_ln72_25, i128 %select_ln72_15" [d5.cpp:72]   --->   Operation 243 'and' 'and_ln72_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 244 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln72_25 = add i128 %and_ln72_15, i128 %add115_7163_load" [d5.cpp:72]   --->   Operation 244 'add' 'add_ln72_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 245 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_25, i128 %add115_7163" [d5.cpp:59]   --->   Operation 245 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 246 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_24, i128 %add115_6162" [d5.cpp:59]   --->   Operation 246 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 247 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_22, i128 %add115_5161" [d5.cpp:59]   --->   Operation 247 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 248 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_19, i128 %add115_4160" [d5.cpp:59]   --->   Operation 248 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 249 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_15, i128 %add115_353159" [d5.cpp:59]   --->   Operation 249 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 250 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_11, i128 %add115_239158" [d5.cpp:59]   --->   Operation 250 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 251 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_7, i128 %add115_125157" [d5.cpp:59]   --->   Operation 251 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 252 [1/1] (0.42ns)   --->   "%store_ln59 = store i128 %add_ln72_3, i128 %add115156" [d5.cpp:59]   --->   Operation 252 'store' 'store_ln59' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 253 [1/1] (0.00ns)   --->   "%br_ln59 = br void %for.inc122.3" [d5.cpp:59]   --->   Operation 253 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.188ns
The critical path consists of the following:
	'alloca' operation ('i') [42]  (0.000 ns)
	'load' operation ('i', d5.cpp:72) on local variable 'i' [79]  (0.000 ns)
	'icmp' operation ('icmp_ln72', d5.cpp:72) [103]  (0.797 ns)
	'sub' operation ('sub_ln69', d5.cpp:69) [106]  (0.797 ns)
	'sub' operation ('sub_ln69_1', d5.cpp:69) [111]  (0.797 ns)
	'sub' operation ('sub_ln69_2', d5.cpp:69) [116]  (0.797 ns)

 <State 2>: 6.894ns
The critical path consists of the following:
	'sub' operation ('sub_ln69_10', d5.cpp:69) [251]  (0.797 ns)
	'sub' operation ('sub_ln69_11', d5.cpp:69) [265]  (0.797 ns)
	'mux' operation ('tmp_19', d5.cpp:72) [266]  (0.770 ns)
	multiplexor before operation 'mul' with delay (1.108 ns)
'mul' operation ('mul_ln72_25', d5.cpp:72) [269]  (3.422 ns)

 <State 3>: 2.006ns
The critical path consists of the following:
	'load' operation ('add115_7163_load', d5.cpp:72) on local variable 'add115_7163' [90]  (0.000 ns)
	'add' operation ('add_ln72_25', d5.cpp:72) [272]  (1.579 ns)
	'store' operation ('store_ln59', d5.cpp:59) of variable 'add_ln72_25', d5.cpp:72 on local variable 'add115_7163' [275]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
