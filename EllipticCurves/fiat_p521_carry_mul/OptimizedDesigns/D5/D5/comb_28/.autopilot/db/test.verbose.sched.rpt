

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:03:41 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D5
* Solution:       comb_28 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       76|       76|  0.760 us|  0.760 us|   77|   77|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 34 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 35 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 36 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add115128_loc = alloca i64 1"   --->   Operation 37 'alloca' 'add115128_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add115_125129_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add115_125129_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add115_1130_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add115_1130_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add115_1_1131_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add115_1_1131_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add115_2132_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add115_2132_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add115_2_1133_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add115_2_1133_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add115_3134_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add115_3134_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add115_3_1135_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add115_3_1135_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 45 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d5.cpp:22]   --->   Operation 63 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d5.cpp:29]   --->   Operation 64 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln91_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d5.cpp:91]   --->   Operation 65 'partselect' 'trunc_ln91_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d5.cpp:22]   --->   Operation 66 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d5.cpp:22]   --->   Operation 67 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 68 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 69 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 69 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 70 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 70 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 71 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 71 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 72 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 72 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 73 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 73 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 74 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 74 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 75 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d5.cpp:22]   --->   Operation 75 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 76 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d5.cpp:22]   --->   Operation 76 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 77 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d5.cpp:22]   --->   Operation 77 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d5.cpp:29]   --->   Operation 78 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d5.cpp:29]   --->   Operation 79 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [8/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 80 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 81 [7/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 81 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 82 [6/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 82 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 83 [5/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 83 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 84 [4/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 84 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 85 [3/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 85 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 86 [2/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 86 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 87 [1/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d5.cpp:29]   --->   Operation 87 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 88 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d5.cpp:29]   --->   Operation 88 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 89 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d5.cpp:29]   --->   Operation 89 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 6.10>
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 90 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 91 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 92 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 93 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 94 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 95 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 95 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 96 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 96 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 97 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 97 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 98 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 98 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 99 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 99 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 100 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 100 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 101 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 102 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 103 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 104 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 105 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 106 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 106 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%empty_29 = shl i64 %arg2_r_8_loc_load, i64 1"   --->   Operation 107 'shl' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%conv45 = zext i64 %empty_29"   --->   Operation 108 'zext' 'conv45' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i64 %arg1_r_8_loc_load" [d5.cpp:43]   --->   Operation 109 'zext' 'zext_ln43' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 110 '%arr = mul i128 %conv45, i128 %zext_ln43'
ST_22 : Operation 110 [1/1] (3.55ns)   --->   "%arr = mul i128 %conv45, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 110 'mul' 'arr' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%shl_ln50 = shl i64 %arg2_r_7_loc_load, i64 1" [d5.cpp:50]   --->   Operation 111 'shl' 'shl_ln50' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i64 %shl_ln50" [d5.cpp:50]   --->   Operation 112 'zext' 'zext_ln50' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 113 '%mul_ln50_1 = mul i128 %zext_ln50, i128 %zext_ln43'
ST_22 : Operation 113 [1/1] (3.55ns)   --->   "%mul_ln50_1 = mul i128 %zext_ln50, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 113 'mul' 'mul_ln50_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%shl_ln50_1 = shl i64 %arg2_r_6_loc_load, i64 1" [d5.cpp:50]   --->   Operation 114 'shl' 'shl_ln50_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i64 %shl_ln50_1" [d5.cpp:50]   --->   Operation 115 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 116 '%mul_ln50_2 = mul i128 %zext_ln50_1, i128 %zext_ln43'
ST_22 : Operation 116 [1/1] (3.55ns)   --->   "%mul_ln50_2 = mul i128 %zext_ln50_1, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 116 'mul' 'mul_ln50_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 117 [1/1] (0.00ns)   --->   "%shl_ln50_2 = shl i64 %arg2_r_5_loc_load, i64 1" [d5.cpp:50]   --->   Operation 117 'shl' 'shl_ln50_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i64 %shl_ln50_2" [d5.cpp:50]   --->   Operation 118 'zext' 'zext_ln50_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 119 [1/1] (0.00ns)   --->   "%shl_ln50_3 = shl i64 %arg2_r_4_loc_load, i64 1" [d5.cpp:50]   --->   Operation 119 'shl' 'shl_ln50_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i64 %shl_ln50_3" [d5.cpp:50]   --->   Operation 120 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%shl_ln50_4 = shl i64 %arg2_r_3_loc_load, i64 1" [d5.cpp:50]   --->   Operation 121 'shl' 'shl_ln50_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i64 %shl_ln50_4" [d5.cpp:50]   --->   Operation 122 'zext' 'zext_ln50_4' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 123 '%mul_ln50_5 = mul i128 %zext_ln50_4, i128 %zext_ln43'
ST_22 : Operation 123 [1/1] (3.55ns)   --->   "%mul_ln50_5 = mul i128 %zext_ln50_4, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 123 'mul' 'mul_ln50_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%shl_ln50_5 = shl i64 %arg2_r_2_loc_load, i64 1" [d5.cpp:50]   --->   Operation 124 'shl' 'shl_ln50_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln50_5 = zext i64 %shl_ln50_5" [d5.cpp:50]   --->   Operation 125 'zext' 'zext_ln50_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 126 '%mul_ln50_6 = mul i128 %zext_ln50_5, i128 %zext_ln43'
ST_22 : Operation 126 [1/1] (3.55ns)   --->   "%mul_ln50_6 = mul i128 %zext_ln50_5, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 126 'mul' 'mul_ln50_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 127 [1/1] (0.00ns)   --->   "%shl_ln50_6 = shl i64 %arg2_r_1_loc_load, i64 1" [d5.cpp:50]   --->   Operation 127 'shl' 'shl_ln50_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i64 %shl_ln50_6" [d5.cpp:50]   --->   Operation 128 'zext' 'zext_ln50_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 129 '%mul_ln50_7 = mul i128 %zext_ln50_6, i128 %zext_ln43'
ST_22 : Operation 129 [1/1] (3.55ns)   --->   "%mul_ln50_7 = mul i128 %zext_ln50_6, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 129 'mul' 'mul_ln50_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln43_1 = zext i64 %arg1_r_7_loc_load" [d5.cpp:43]   --->   Operation 130 'zext' 'zext_ln43_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 131 '%mul_ln50_8 = mul i128 %conv45, i128 %zext_ln43_1'
ST_22 : Operation 131 [1/1] (3.55ns)   --->   "%mul_ln50_8 = mul i128 %conv45, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 131 'mul' 'mul_ln50_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (1.57ns)   --->   "%arr_1 = add i128 %mul_ln50_8, i128 %mul_ln50_1" [d5.cpp:50]   --->   Operation 132 'add' 'arr_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 133 '%mul_ln50_9 = mul i128 %zext_ln50, i128 %zext_ln43_1'
ST_22 : Operation 133 [1/1] (3.55ns)   --->   "%mul_ln50_9 = mul i128 %zext_ln50, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 133 'mul' 'mul_ln50_9' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 134 '%mul_ln50_14 = mul i128 %zext_ln50_5, i128 %zext_ln43_1'
ST_22 : Operation 134 [1/1] (3.55ns)   --->   "%mul_ln50_14 = mul i128 %zext_ln50_5, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 134 'mul' 'mul_ln50_14' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln43_2 = zext i64 %arg1_r_6_loc_load" [d5.cpp:43]   --->   Operation 135 'zext' 'zext_ln43_2' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 136 '%mul_ln50_15 = mul i128 %conv45, i128 %zext_ln43_2'
ST_22 : Operation 136 [1/1] (3.55ns)   --->   "%mul_ln50_15 = mul i128 %conv45, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 136 'mul' 'mul_ln50_15' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 137 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_1 = add i128 %mul_ln50_2, i128 %mul_ln50_15" [d5.cpp:50]   --->   Operation 137 'add' 'add_ln50_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 138 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_2 = add i128 %add_ln50_1, i128 %mul_ln50_9" [d5.cpp:50]   --->   Operation 138 'add' 'arr_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 139 '%mul_ln50_16 = mul i128 %zext_ln50, i128 %zext_ln43_2'
ST_22 : Operation 139 [1/1] (3.55ns)   --->   "%mul_ln50_16 = mul i128 %zext_ln50, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 139 'mul' 'mul_ln50_16' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 140 '%mul_ln50_17 = mul i128 %zext_ln50_1, i128 %zext_ln43_2'
ST_22 : Operation 140 [1/1] (3.55ns)   --->   "%mul_ln50_17 = mul i128 %zext_ln50_1, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 140 'mul' 'mul_ln50_17' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 141 '%mul_ln50_18 = mul i128 %zext_ln50_2, i128 %zext_ln43_2'
ST_22 : Operation 141 [1/1] (3.55ns)   --->   "%mul_ln50_18 = mul i128 %zext_ln50_2, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 141 'mul' 'mul_ln50_18' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 142 '%mul_ln50_19 = mul i128 %zext_ln50_3, i128 %zext_ln43_2'
ST_22 : Operation 142 [1/1] (3.55ns)   --->   "%mul_ln50_19 = mul i128 %zext_ln50_3, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 142 'mul' 'mul_ln50_19' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 143 '%mul_ln50_20 = mul i128 %zext_ln50_4, i128 %zext_ln43_2'
ST_22 : Operation 143 [1/1] (3.55ns)   --->   "%mul_ln50_20 = mul i128 %zext_ln50_4, i128 %zext_ln43_2" [d5.cpp:50]   --->   Operation 143 'mul' 'mul_ln50_20' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln43_3 = zext i64 %arg1_r_5_loc_load" [d5.cpp:43]   --->   Operation 144 'zext' 'zext_ln43_3' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 145 '%mul_ln50_21 = mul i128 %conv45, i128 %zext_ln43_3'
ST_22 : Operation 145 [1/1] (3.55ns)   --->   "%mul_ln50_21 = mul i128 %conv45, i128 %zext_ln43_3" [d5.cpp:50]   --->   Operation 145 'mul' 'mul_ln50_21' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 146 [1/1] (1.57ns)   --->   "%add_ln50_4 = add i128 %mul_ln50_16, i128 %mul_ln50_21" [d5.cpp:50]   --->   Operation 146 'add' 'add_ln50_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 147 '%mul_ln50_22 = mul i128 %zext_ln50, i128 %zext_ln43_3'
ST_22 : Operation 147 [1/1] (3.55ns)   --->   "%mul_ln50_22 = mul i128 %zext_ln50, i128 %zext_ln43_3" [d5.cpp:50]   --->   Operation 147 'mul' 'mul_ln50_22' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 148 '%mul_ln50_23 = mul i128 %zext_ln50_1, i128 %zext_ln43_3'
ST_22 : Operation 148 [1/1] (3.55ns)   --->   "%mul_ln50_23 = mul i128 %zext_ln50_1, i128 %zext_ln43_3" [d5.cpp:50]   --->   Operation 148 'mul' 'mul_ln50_23' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 149 '%mul_ln50_24 = mul i128 %zext_ln50_2, i128 %zext_ln43_3'
ST_22 : Operation 149 [1/1] (3.55ns)   --->   "%mul_ln50_24 = mul i128 %zext_ln50_2, i128 %zext_ln43_3" [d5.cpp:50]   --->   Operation 149 'mul' 'mul_ln50_24' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 150 '%mul_ln50_25 = mul i128 %zext_ln50_3, i128 %zext_ln43_3'
ST_22 : Operation 150 [1/1] (3.55ns)   --->   "%mul_ln50_25 = mul i128 %zext_ln50_3, i128 %zext_ln43_3" [d5.cpp:50]   --->   Operation 150 'mul' 'mul_ln50_25' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln43_4 = zext i64 %arg1_r_4_loc_load" [d5.cpp:43]   --->   Operation 151 'zext' 'zext_ln43_4' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 152 '%mul_ln50_26 = mul i128 %conv45, i128 %zext_ln43_4'
ST_22 : Operation 152 [1/1] (3.55ns)   --->   "%mul_ln50_26 = mul i128 %conv45, i128 %zext_ln43_4" [d5.cpp:50]   --->   Operation 152 'mul' 'mul_ln50_26' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 153 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_7 = add i128 %mul_ln50_22, i128 %mul_ln50_26" [d5.cpp:50]   --->   Operation 153 'add' 'add_ln50_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 154 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln50_8 = add i128 %add_ln50_7, i128 %mul_ln50_17" [d5.cpp:50]   --->   Operation 154 'add' 'add_ln50_8' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 155 '%mul_ln50_27 = mul i128 %zext_ln50, i128 %zext_ln43_4'
ST_22 : Operation 155 [1/1] (3.55ns)   --->   "%mul_ln50_27 = mul i128 %zext_ln50, i128 %zext_ln43_4" [d5.cpp:50]   --->   Operation 155 'mul' 'mul_ln50_27' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 156 '%mul_ln50_28 = mul i128 %zext_ln50_1, i128 %zext_ln43_4'
ST_22 : Operation 156 [1/1] (3.55ns)   --->   "%mul_ln50_28 = mul i128 %zext_ln50_1, i128 %zext_ln43_4" [d5.cpp:50]   --->   Operation 156 'mul' 'mul_ln50_28' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 157 '%mul_ln50_29 = mul i128 %zext_ln50_2, i128 %zext_ln43_4'
ST_22 : Operation 157 [1/1] (3.55ns)   --->   "%mul_ln50_29 = mul i128 %zext_ln50_2, i128 %zext_ln43_4" [d5.cpp:50]   --->   Operation 157 'mul' 'mul_ln50_29' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln43_5 = zext i64 %arg1_r_3_loc_load" [d5.cpp:43]   --->   Operation 158 'zext' 'zext_ln43_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 159 '%mul_ln50_30 = mul i128 %conv45, i128 %zext_ln43_5'
ST_22 : Operation 159 [1/1] (3.55ns)   --->   "%mul_ln50_30 = mul i128 %conv45, i128 %zext_ln43_5" [d5.cpp:50]   --->   Operation 159 'mul' 'mul_ln50_30' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 160 [1/1] (1.57ns)   --->   "%add_ln50_10 = add i128 %mul_ln50_5, i128 %mul_ln50_18" [d5.cpp:50]   --->   Operation 160 'add' 'add_ln50_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 161 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_12 = add i128 %mul_ln50_27, i128 %mul_ln50_30" [d5.cpp:50]   --->   Operation 161 'add' 'add_ln50_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 162 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln50_13 = add i128 %add_ln50_12, i128 %mul_ln50_23" [d5.cpp:50]   --->   Operation 162 'add' 'add_ln50_13' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 163 '%mul_ln50_31 = mul i128 %zext_ln50, i128 %zext_ln43_5'
ST_22 : Operation 163 [1/1] (3.55ns)   --->   "%mul_ln50_31 = mul i128 %zext_ln50, i128 %zext_ln43_5" [d5.cpp:50]   --->   Operation 163 'mul' 'mul_ln50_31' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 164 '%mul_ln50_32 = mul i128 %zext_ln50_1, i128 %zext_ln43_5'
ST_22 : Operation 164 [1/1] (3.55ns)   --->   "%mul_ln50_32 = mul i128 %zext_ln50_1, i128 %zext_ln43_5" [d5.cpp:50]   --->   Operation 164 'mul' 'mul_ln50_32' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln43_6 = zext i64 %arg1_r_2_loc_load" [d5.cpp:43]   --->   Operation 165 'zext' 'zext_ln43_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 166 '%mul_ln50_33 = mul i128 %conv45, i128 %zext_ln43_6'
ST_22 : Operation 166 [1/1] (3.55ns)   --->   "%mul_ln50_33 = mul i128 %conv45, i128 %zext_ln43_6" [d5.cpp:50]   --->   Operation 166 'mul' 'mul_ln50_33' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 167 [1/1] (1.57ns)   --->   "%add_ln50_15 = add i128 %mul_ln50_6, i128 %mul_ln50_19" [d5.cpp:50]   --->   Operation 167 'add' 'add_ln50_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 168 [1/1] (1.57ns)   --->   "%add_ln50_18 = add i128 %mul_ln50_31, i128 %mul_ln50_33" [d5.cpp:50]   --->   Operation 168 'add' 'add_ln50_18' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 169 '%mul_ln50_34 = mul i128 %zext_ln50, i128 %zext_ln43_6'
ST_22 : Operation 169 [1/1] (3.55ns)   --->   "%mul_ln50_34 = mul i128 %zext_ln50, i128 %zext_ln43_6" [d5.cpp:50]   --->   Operation 169 'mul' 'mul_ln50_34' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln43_7 = zext i64 %arg1_r_1_loc_load" [d5.cpp:43]   --->   Operation 170 'zext' 'zext_ln43_7' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 171 '%mul_ln50_35 = mul i128 %conv45, i128 %zext_ln43_7'
ST_22 : Operation 171 [1/1] (3.55ns)   --->   "%mul_ln50_35 = mul i128 %conv45, i128 %zext_ln43_7" [d5.cpp:50]   --->   Operation 171 'mul' 'mul_ln50_35' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 172 [1/1] (1.57ns)   --->   "%add_ln50_21 = add i128 %mul_ln50_14, i128 %mul_ln50_7" [d5.cpp:50]   --->   Operation 172 'add' 'add_ln50_21' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 173 [1/1] (1.57ns)   --->   "%add_ln50_22 = add i128 %mul_ln50_20, i128 %mul_ln50_25" [d5.cpp:50]   --->   Operation 173 'add' 'add_ln50_22' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 174 [1/1] (1.57ns)   --->   "%add_ln50_25 = add i128 %mul_ln50_34, i128 %mul_ln50_35" [d5.cpp:50]   --->   Operation 174 'add' 'add_ln50_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln43_9 = zext i64 %arg2_r_2_loc_load" [d5.cpp:43]   --->   Operation 175 'zext' 'zext_ln43_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln43_10 = zext i64 %arg2_r_3_loc_load" [d5.cpp:43]   --->   Operation 176 'zext' 'zext_ln43_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln43_11 = zext i64 %arg2_r_4_loc_load" [d5.cpp:43]   --->   Operation 177 'zext' 'zext_ln43_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln43_12 = zext i64 %arg2_r_5_loc_load" [d5.cpp:43]   --->   Operation 178 'zext' 'zext_ln43_12' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln43_13 = zext i64 %arg2_r_6_loc_load" [d5.cpp:43]   --->   Operation 179 'zext' 'zext_ln43_13' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln43_14 = zext i64 %arg2_r_7_loc_load" [d5.cpp:43]   --->   Operation 180 'zext' 'zext_ln43_14' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i64 %arg2_r_8_loc_load" [d5.cpp:57]   --->   Operation 181 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 182 '%mul_ln43_1 = mul i128 %zext_ln43_9, i128 %zext_ln43_2'
ST_22 : Operation 182 [1/1] (3.55ns)   --->   "%mul_ln43_1 = mul i128 %zext_ln43_9, i128 %zext_ln43_2" [d5.cpp:43]   --->   Operation 182 'mul' 'mul_ln43_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 183 '%mul_ln43_2 = mul i128 %zext_ln43_10, i128 %zext_ln43_3'
ST_22 : Operation 183 [1/1] (3.55ns)   --->   "%mul_ln43_2 = mul i128 %zext_ln43_10, i128 %zext_ln43_3" [d5.cpp:43]   --->   Operation 183 'mul' 'mul_ln43_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 184 '%mul_ln43_3 = mul i128 %zext_ln43_11, i128 %zext_ln43_4'
ST_22 : Operation 184 [1/1] (3.55ns)   --->   "%mul_ln43_3 = mul i128 %zext_ln43_11, i128 %zext_ln43_4" [d5.cpp:43]   --->   Operation 184 'mul' 'mul_ln43_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 185 '%mul_ln43_4 = mul i128 %zext_ln43_12, i128 %zext_ln43_5'
ST_22 : Operation 185 [1/1] (3.55ns)   --->   "%mul_ln43_4 = mul i128 %zext_ln43_12, i128 %zext_ln43_5" [d5.cpp:43]   --->   Operation 185 'mul' 'mul_ln43_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 186 '%mul_ln43_5 = mul i128 %zext_ln43_13, i128 %zext_ln43_6'
ST_22 : Operation 186 [1/1] (3.55ns)   --->   "%mul_ln43_5 = mul i128 %zext_ln43_13, i128 %zext_ln43_6" [d5.cpp:43]   --->   Operation 186 'mul' 'mul_ln43_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 187 '%mul_ln43_6 = mul i128 %zext_ln43_14, i128 %zext_ln43_7'
ST_22 : Operation 187 [1/1] (3.55ns)   --->   "%mul_ln43_6 = mul i128 %zext_ln43_14, i128 %zext_ln43_7" [d5.cpp:43]   --->   Operation 187 'mul' 'mul_ln43_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln57_1 = zext i64 %arg1_r_loc_load" [d5.cpp:57]   --->   Operation 188 'zext' 'zext_ln57_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 189 '%mul_ln57 = mul i128 %zext_ln57, i128 %zext_ln57_1'
ST_22 : Operation 189 [1/1] (3.55ns)   --->   "%mul_ln57 = mul i128 %zext_ln57, i128 %zext_ln57_1" [d5.cpp:57]   --->   Operation 189 'mul' 'mul_ln57' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 190 [1/1] (1.57ns)   --->   "%add_ln57 = add i128 %mul_ln43_5, i128 %mul_ln43_6" [d5.cpp:57]   --->   Operation 190 'add' 'add_ln57' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 191 [1/1] (1.57ns)   --->   "%add_ln57_1 = add i128 %mul_ln43_4, i128 %mul_ln43_3" [d5.cpp:57]   --->   Operation 191 'add' 'add_ln57_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 192 [1/1] (0.00ns)   --->   "%trunc_ln57 = trunc i128 %add_ln57" [d5.cpp:57]   --->   Operation 192 'trunc' 'trunc_ln57' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln57_1 = trunc i128 %add_ln57_1" [d5.cpp:57]   --->   Operation 193 'trunc' 'trunc_ln57_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 194 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln57_4 = add i128 %mul_ln43_1, i128 %mul_ln57" [d5.cpp:57]   --->   Operation 194 'add' 'add_ln57_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 195 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln57_5 = add i128 %add_ln57_4, i128 %mul_ln43_2" [d5.cpp:57]   --->   Operation 195 'add' 'add_ln57_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln57_3 = trunc i128 %add_ln57_5" [d5.cpp:57]   --->   Operation 196 'trunc' 'trunc_ln57_3' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 6.24>
ST_23 : Operation 197 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 197 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 198 '%mul_ln50_3 = mul i128 %zext_ln50_2, i128 %zext_ln43'
ST_23 : Operation 198 [1/1] (3.55ns)   --->   "%mul_ln50_3 = mul i128 %zext_ln50_2, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 198 'mul' 'mul_ln50_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 199 '%mul_ln50_4 = mul i128 %zext_ln50_3, i128 %zext_ln43'
ST_23 : Operation 199 [1/1] (3.55ns)   --->   "%mul_ln50_4 = mul i128 %zext_ln50_3, i128 %zext_ln43" [d5.cpp:50]   --->   Operation 199 'mul' 'mul_ln50_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 200 '%mul_ln50_10 = mul i128 %zext_ln50_1, i128 %zext_ln43_1'
ST_23 : Operation 200 [1/1] (3.55ns)   --->   "%mul_ln50_10 = mul i128 %zext_ln50_1, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 200 'mul' 'mul_ln50_10' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 201 '%mul_ln50_11 = mul i128 %zext_ln50_2, i128 %zext_ln43_1'
ST_23 : Operation 201 [1/1] (3.55ns)   --->   "%mul_ln50_11 = mul i128 %zext_ln50_2, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 201 'mul' 'mul_ln50_11' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 202 '%mul_ln50_12 = mul i128 %zext_ln50_3, i128 %zext_ln43_1'
ST_23 : Operation 202 [1/1] (3.55ns)   --->   "%mul_ln50_12 = mul i128 %zext_ln50_3, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 202 'mul' 'mul_ln50_12' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 203 '%mul_ln50_13 = mul i128 %zext_ln50_4, i128 %zext_ln43_1'
ST_23 : Operation 203 [1/1] (3.55ns)   --->   "%mul_ln50_13 = mul i128 %zext_ln50_4, i128 %zext_ln43_1" [d5.cpp:50]   --->   Operation 203 'mul' 'mul_ln50_13' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 204 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_3 = add i128 %mul_ln50_10, i128 %mul_ln50_3" [d5.cpp:50]   --->   Operation 204 'add' 'add_ln50_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 205 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_3 = add i128 %add_ln50_4, i128 %add_ln50_3" [d5.cpp:50]   --->   Operation 205 'add' 'arr_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 206 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_6 = add i128 %mul_ln50_11, i128 %mul_ln50_4" [d5.cpp:50]   --->   Operation 206 'add' 'add_ln50_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 207 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_4 = add i128 %add_ln50_8, i128 %add_ln50_6" [d5.cpp:50]   --->   Operation 207 'add' 'arr_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 208 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_11 = add i128 %add_ln50_10, i128 %mul_ln50_12" [d5.cpp:50]   --->   Operation 208 'add' 'add_ln50_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 209 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_5 = add i128 %add_ln50_13, i128 %add_ln50_11" [d5.cpp:50]   --->   Operation 209 'add' 'arr_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 210 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_16 = add i128 %add_ln50_15, i128 %mul_ln50_13" [d5.cpp:50]   --->   Operation 210 'add' 'add_ln50_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_17 = add i128 %mul_ln50_24, i128 %mul_ln50_28" [d5.cpp:50]   --->   Operation 211 'add' 'add_ln50_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 212 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln50_19 = add i128 %add_ln50_18, i128 %add_ln50_17" [d5.cpp:50]   --->   Operation 212 'add' 'add_ln50_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 213 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_6 = add i128 %add_ln50_19, i128 %add_ln50_16" [d5.cpp:50]   --->   Operation 213 'add' 'arr_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 214 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_23 = add i128 %add_ln50_22, i128 %add_ln50_21" [d5.cpp:50]   --->   Operation 214 'add' 'add_ln50_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50_24 = add i128 %mul_ln50_29, i128 %mul_ln50_32" [d5.cpp:50]   --->   Operation 215 'add' 'add_ln50_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 216 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln50_26 = add i128 %add_ln50_25, i128 %add_ln50_24" [d5.cpp:50]   --->   Operation 216 'add' 'add_ln50_26' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 217 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_7 = add i128 %add_ln50_26, i128 %add_ln50_23" [d5.cpp:50]   --->   Operation 217 'add' 'arr_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 218 [2/2] (0.72ns)   --->   "%call_ln50 = call void @test_Pipeline_VITIS_LOOP_59_5, i128 %arr_7, i128 %arr_6, i128 %arr_5, i128 %arr_4, i128 %arr_3, i128 %arr_2, i128 %arr_1, i128 %arr, i64 %arg1_r_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i128 %add115_3_1135_loc, i128 %add115_3134_loc, i128 %add115_2_1133_loc, i128 %add115_2132_loc, i128 %add115_1_1131_loc, i128 %add115_1130_loc, i128 %add115_125129_loc, i128 %add115128_loc" [d5.cpp:50]   --->   Operation 218 'call' 'call_ln50' <Predicate = true> <Delay = 0.72> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln43_8 = zext i64 %arg2_r_1_loc_load" [d5.cpp:43]   --->   Operation 219 'zext' 'zext_ln43_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 220 [1/1] (0.00ns)   --->   "%zext_ln43_15 = zext i64 %arg2_r_loc_load" [d5.cpp:43]   --->   Operation 220 'zext' 'zext_ln43_15' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 221 '%mul_ln43 = mul i128 %zext_ln43_8, i128 %zext_ln43_1'
ST_23 : Operation 221 [1/1] (3.55ns)   --->   "%mul_ln43 = mul i128 %zext_ln43_8, i128 %zext_ln43_1" [d5.cpp:43]   --->   Operation 221 'mul' 'mul_ln43' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 222 '%mul_ln43_7 = mul i128 %zext_ln43_15, i128 %zext_ln43'
ST_23 : Operation 222 [1/1] (3.55ns)   --->   "%mul_ln43_7 = mul i128 %zext_ln43_15, i128 %zext_ln43" [d5.cpp:43]   --->   Operation 222 'mul' 'mul_ln43_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 223 [1/1] (1.57ns)   --->   "%add_ln57_2 = add i128 %add_ln57_1, i128 %add_ln57" [d5.cpp:57]   --->   Operation 223 'add' 'add_ln57_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 224 [1/1] (1.57ns)   --->   "%add_ln57_3 = add i128 %mul_ln43_7, i128 %mul_ln43" [d5.cpp:57]   --->   Operation 224 'add' 'add_ln57_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 225 [1/1] (0.00ns)   --->   "%trunc_ln57_2 = trunc i128 %add_ln57_3" [d5.cpp:57]   --->   Operation 225 'trunc' 'trunc_ln57_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 226 [1/1] (1.09ns)   --->   "%add_ln57_7 = add i57 %trunc_ln57_1, i57 %trunc_ln57" [d5.cpp:57]   --->   Operation 226 'add' 'add_ln57_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 1.57>
ST_24 : Operation 227 [1/2] (0.00ns)   --->   "%call_ln50 = call void @test_Pipeline_VITIS_LOOP_59_5, i128 %arr_7, i128 %arr_6, i128 %arr_5, i128 %arr_4, i128 %arr_3, i128 %arr_2, i128 %arr_1, i128 %arr, i64 %arg1_r_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i128 %add115_3_1135_loc, i128 %add115_3134_loc, i128 %add115_2_1133_loc, i128 %add115_2132_loc, i128 %add115_1_1131_loc, i128 %add115_1130_loc, i128 %add115_125129_loc, i128 %add115128_loc" [d5.cpp:50]   --->   Operation 227 'call' 'call_ln50' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 228 [1/1] (1.57ns)   --->   "%add_ln57_6 = add i128 %add_ln57_5, i128 %add_ln57_3" [d5.cpp:57]   --->   Operation 228 'add' 'add_ln57_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 229 [1/1] (1.09ns)   --->   "%add_ln57_8 = add i57 %trunc_ln57_3, i57 %trunc_ln57_2" [d5.cpp:57]   --->   Operation 229 'add' 'add_ln57_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.31>
ST_25 : Operation 230 [1/1] (0.00ns)   --->   "%add115_3_1135_loc_load = load i128 %add115_3_1135_loc"   --->   Operation 230 'load' 'add115_3_1135_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 231 [1/1] (0.00ns)   --->   "%add115_3134_loc_load = load i128 %add115_3134_loc"   --->   Operation 231 'load' 'add115_3134_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 232 [1/1] (0.00ns)   --->   "%add115_2_1133_loc_load = load i128 %add115_2_1133_loc"   --->   Operation 232 'load' 'add115_2_1133_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 233 [1/1] (0.00ns)   --->   "%add115_2132_loc_load = load i128 %add115_2132_loc"   --->   Operation 233 'load' 'add115_2132_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 234 [1/1] (0.00ns)   --->   "%add115_1_1131_loc_load = load i128 %add115_1_1131_loc"   --->   Operation 234 'load' 'add115_1_1131_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i128 %add115_3_1135_loc_load" [d5.cpp:79]   --->   Operation 235 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln79_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add115_3_1135_loc_load, i32 58, i32 127" [d5.cpp:79]   --->   Operation 236 'partselect' 'trunc_ln79_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 237 [1/1] (0.00ns)   --->   "%sext_ln79 = sext i70 %trunc_ln79_2" [d5.cpp:79]   --->   Operation 237 'sext' 'sext_ln79' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 238 [1/1] (1.57ns)   --->   "%add_ln79 = add i128 %add115_3134_loc_load, i128 %sext_ln79" [d5.cpp:79]   --->   Operation 238 'add' 'add_ln79' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 239 [1/1] (0.00ns)   --->   "%trunc_ln79_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79, i32 58, i32 127" [d5.cpp:79]   --->   Operation 239 'partselect' 'trunc_ln79_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 240 [1/1] (0.00ns)   --->   "%sext_ln79_1 = sext i70 %trunc_ln79_3" [d5.cpp:79]   --->   Operation 240 'sext' 'sext_ln79_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 241 [1/1] (1.57ns)   --->   "%add_ln79_1 = add i128 %add115_2_1133_loc_load, i128 %sext_ln79_1" [d5.cpp:79]   --->   Operation 241 'add' 'add_ln79_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 242 [1/1] (0.00ns)   --->   "%trunc_ln79_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_1, i32 58, i32 127" [d5.cpp:79]   --->   Operation 242 'partselect' 'trunc_ln79_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 243 [1/1] (0.00ns)   --->   "%sext_ln79_2 = sext i70 %trunc_ln79_4" [d5.cpp:79]   --->   Operation 243 'sext' 'sext_ln79_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 244 [1/1] (1.57ns)   --->   "%add_ln79_2 = add i128 %add115_2132_loc_load, i128 %sext_ln79_2" [d5.cpp:79]   --->   Operation 244 'add' 'add_ln79_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 245 [1/1] (0.00ns)   --->   "%trunc_ln79_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_2, i32 58, i32 127" [d5.cpp:79]   --->   Operation 245 'partselect' 'trunc_ln79_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 246 [1/1] (0.00ns)   --->   "%sext_ln79_3 = sext i70 %trunc_ln79_5" [d5.cpp:79]   --->   Operation 246 'sext' 'sext_ln79_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 247 [1/1] (1.57ns)   --->   "%add_ln79_3 = add i128 %add115_1_1131_loc_load, i128 %sext_ln79_3" [d5.cpp:79]   --->   Operation 247 'add' 'add_ln79_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 248 [1/1] (0.00ns)   --->   "%trunc_ln79_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_3, i32 58, i32 127" [d5.cpp:79]   --->   Operation 248 'partselect' 'trunc_ln79_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 249 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i128 %add115_3134_loc_load" [d5.cpp:80]   --->   Operation 249 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 250 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add115_3_1135_loc_load, i32 58, i32 115" [d5.cpp:80]   --->   Operation 250 'partselect' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 251 [1/1] (1.09ns)   --->   "%add_ln80_1 = add i58 %trunc_ln80_3, i58 %trunc_ln80" [d5.cpp:80]   --->   Operation 251 'add' 'add_ln80_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln81 = trunc i128 %add115_2_1133_loc_load" [d5.cpp:81]   --->   Operation 252 'trunc' 'trunc_ln81' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 253 [1/1] (0.00ns)   --->   "%trunc_ln81_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79, i32 58, i32 115" [d5.cpp:81]   --->   Operation 253 'partselect' 'trunc_ln81_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 254 [1/1] (1.09ns)   --->   "%add_ln81_1 = add i58 %trunc_ln81_2, i58 %trunc_ln81" [d5.cpp:81]   --->   Operation 254 'add' 'add_ln81_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i128 %add115_2132_loc_load" [d5.cpp:82]   --->   Operation 255 'trunc' 'trunc_ln82' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 256 [1/1] (0.00ns)   --->   "%trunc_ln82_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_1, i32 58, i32 115" [d5.cpp:82]   --->   Operation 256 'partselect' 'trunc_ln82_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 257 [1/1] (1.09ns)   --->   "%out1_w_3 = add i58 %trunc_ln82_1, i58 %trunc_ln82" [d5.cpp:82]   --->   Operation 257 'add' 'out1_w_3' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i128 %add115_1_1131_loc_load" [d5.cpp:83]   --->   Operation 258 'trunc' 'trunc_ln83' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 259 [1/1] (0.00ns)   --->   "%trunc_ln83_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_2, i32 58, i32 115" [d5.cpp:83]   --->   Operation 259 'partselect' 'trunc_ln83_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 260 [1/1] (1.09ns)   --->   "%out1_w_4 = add i58 %trunc_ln83_1, i58 %trunc_ln83" [d5.cpp:83]   --->   Operation 260 'add' 'out1_w_4' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln84_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_3, i32 58, i32 115" [d5.cpp:84]   --->   Operation 261 'partselect' 'trunc_ln84_1' <Predicate = true> <Delay = 0.00>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 262 [1/1] (0.00ns)   --->   "%add115_1130_loc_load = load i128 %add115_1130_loc"   --->   Operation 262 'load' 'add115_1130_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 263 [1/1] (0.00ns)   --->   "%add115_125129_loc_load = load i128 %add115_125129_loc"   --->   Operation 263 'load' 'add115_125129_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 264 [1/1] (0.00ns)   --->   "%add115128_loc_load = load i128 %add115128_loc"   --->   Operation 264 'load' 'add115128_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 265 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_9 = add i128 %add_ln57_6, i128 %add_ln57_2" [d5.cpp:57]   --->   Operation 265 'add' 'arr_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 266 [1/1] (0.00ns)   --->   "%sext_ln79_4 = sext i70 %trunc_ln79_6" [d5.cpp:79]   --->   Operation 266 'sext' 'sext_ln79_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 267 [1/1] (1.57ns)   --->   "%add_ln79_4 = add i128 %add115_1130_loc_load, i128 %sext_ln79_4" [d5.cpp:79]   --->   Operation 267 'add' 'add_ln79_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln79_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_4, i32 58, i32 127" [d5.cpp:79]   --->   Operation 268 'partselect' 'trunc_ln79_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 269 [1/1] (0.00ns)   --->   "%sext_ln79_5 = sext i70 %trunc_ln79_7" [d5.cpp:79]   --->   Operation 269 'sext' 'sext_ln79_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 270 [1/1] (1.57ns)   --->   "%add_ln79_5 = add i128 %add115_125129_loc_load, i128 %sext_ln79_5" [d5.cpp:79]   --->   Operation 270 'add' 'add_ln79_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln79_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_5, i32 58, i32 127" [d5.cpp:79]   --->   Operation 271 'partselect' 'trunc_ln79_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 272 [1/1] (0.00ns)   --->   "%sext_ln79_6 = sext i70 %trunc_ln79_8" [d5.cpp:79]   --->   Operation 272 'sext' 'sext_ln79_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 273 [1/1] (1.57ns)   --->   "%add_ln79_6 = add i128 %add115128_loc_load, i128 %sext_ln79_6" [d5.cpp:79]   --->   Operation 273 'add' 'add_ln79_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln79_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln79_6, i32 58, i32 127" [d5.cpp:79]   --->   Operation 274 'partselect' 'trunc_ln79_9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 275 [1/1] (0.00ns)   --->   "%sext_ln79_7 = sext i70 %trunc_ln79_9" [d5.cpp:79]   --->   Operation 275 'sext' 'sext_ln79_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 276 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln79_7 = add i128 %arr_9, i128 %sext_ln79_7" [d5.cpp:79]   --->   Operation 276 'add' 'add_ln79_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln79_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_7, i32 57, i32 114" [d5.cpp:79]   --->   Operation 277 'partselect' 'trunc_ln79_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 278 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln79_1, i58 %trunc_ln79" [d5.cpp:79]   --->   Operation 278 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i58 %trunc_ln79" [d5.cpp:80]   --->   Operation 279 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 280 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln79_7, i32 57, i32 127" [d5.cpp:80]   --->   Operation 280 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 281 [1/1] (0.00ns)   --->   "%sext_ln80 = sext i71 %trunc_ln3" [d5.cpp:80]   --->   Operation 281 'sext' 'sext_ln80' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 282 [1/1] (1.13ns)   --->   "%add_ln80 = add i72 %sext_ln80, i72 %zext_ln80" [d5.cpp:80]   --->   Operation 282 'add' 'add_ln80' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln80, i32 58, i32 71" [d5.cpp:80]   --->   Operation 283 'partselect' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 284 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i128 %add115_1130_loc_load" [d5.cpp:84]   --->   Operation 284 'trunc' 'trunc_ln84' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 285 [1/1] (1.09ns)   --->   "%out1_w_5 = add i58 %trunc_ln84_1, i58 %trunc_ln84" [d5.cpp:84]   --->   Operation 285 'add' 'out1_w_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 286 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i128 %add115_125129_loc_load" [d5.cpp:85]   --->   Operation 286 'trunc' 'trunc_ln85' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 287 [1/1] (0.00ns)   --->   "%trunc_ln85_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_4, i32 58, i32 115" [d5.cpp:85]   --->   Operation 287 'partselect' 'trunc_ln85_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 288 [1/1] (1.09ns)   --->   "%out1_w_6 = add i58 %trunc_ln85_1, i58 %trunc_ln85" [d5.cpp:85]   --->   Operation 288 'add' 'out1_w_6' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 289 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i128 %add115128_loc_load" [d5.cpp:86]   --->   Operation 289 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 290 [1/1] (0.00ns)   --->   "%trunc_ln86_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln79_5, i32 58, i32 115" [d5.cpp:86]   --->   Operation 290 'partselect' 'trunc_ln86_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 291 [1/1] (1.09ns)   --->   "%out1_w_7 = add i58 %trunc_ln86_1, i58 %trunc_ln86" [d5.cpp:86]   --->   Operation 291 'add' 'out1_w_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 292 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87 = add i57 %add_ln57_8, i57 %add_ln57_7" [d5.cpp:87]   --->   Operation 292 'add' 'add_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 293 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln79_6, i32 58, i32 114" [d5.cpp:87]   --->   Operation 293 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 294 [1/1] (0.79ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i57 %trunc_ln, i57 %add_ln87" [d5.cpp:87]   --->   Operation 294 'add' 'out1_w_8' <Predicate = true> <Delay = 0.79> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 295 [1/1] (0.00ns)   --->   "%sext_ln91 = sext i61 %trunc_ln91_1" [d5.cpp:91]   --->   Operation 295 'sext' 'sext_ln91' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 296 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln91" [d5.cpp:91]   --->   Operation 296 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 297 [1/1] (7.30ns)   --->   "%empty_30 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d5.cpp:91]   --->   Operation 297 'writereq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 2.95>
ST_27 : Operation 298 [1/1] (0.00ns)   --->   "%sext_ln80_1 = sext i14 %trunc_ln80_1" [d5.cpp:80]   --->   Operation 298 'sext' 'sext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 299 [1/1] (0.00ns)   --->   "%sext_ln80_2 = sext i14 %trunc_ln80_1" [d5.cpp:80]   --->   Operation 299 'sext' 'sext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 300 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln80_2, i58 %add_ln80_1" [d5.cpp:80]   --->   Operation 300 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 301 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i58 %add_ln80_1" [d5.cpp:81]   --->   Operation 301 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 302 [1/1] (1.09ns)   --->   "%add_ln81 = add i60 %sext_ln80_1, i60 %zext_ln81" [d5.cpp:81]   --->   Operation 302 'add' 'add_ln81' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 303 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln81, i32 58, i32 59" [d5.cpp:81]   --->   Operation 303 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 304 [1/1] (0.00ns)   --->   "%sext_ln81 = sext i2 %tmp" [d5.cpp:81]   --->   Operation 304 'sext' 'sext_ln81' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 305 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i6 %sext_ln81" [d5.cpp:81]   --->   Operation 305 'zext' 'zext_ln81_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln81_2 = zext i58 %add_ln81_1" [d5.cpp:81]   --->   Operation 306 'zext' 'zext_ln81_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 307 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln81_2, i59 %zext_ln81_1" [d5.cpp:81]   --->   Operation 307 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 308 [2/2] (0.77ns)   --->   "%call_ln91 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln91_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d5.cpp:91]   --->   Operation 308 'call' 'call_ln91' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 0.00>
ST_28 : Operation 309 [1/2] (0.00ns)   --->   "%call_ln91 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln91_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d5.cpp:91]   --->   Operation 309 'call' 'call_ln91' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 310 [5/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d5.cpp:96]   --->   Operation 310 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 311 [4/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d5.cpp:96]   --->   Operation 311 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 312 [3/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d5.cpp:96]   --->   Operation 312 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 313 [2/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d5.cpp:96]   --->   Operation 313 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 314 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d5.cpp:3]   --->   Operation 314 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 315 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 315 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 316 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 316 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 317 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 317 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 318 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 318 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 319 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 319 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 320 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 320 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 321 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 321 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 322 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 322 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 323 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 323 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 324 [1/5] (7.30ns)   --->   "%empty_31 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d5.cpp:96]   --->   Operation 324 'writeresp' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 325 [1/1] (0.00ns)   --->   "%ret_ln96 = ret" [d5.cpp:96]   --->   Operation 325 'ret' 'ret_ln96' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d5.cpp:22) [46]  (0.000 ns)
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d5.cpp:22) on port 'mem' (d5.cpp:22) [47]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d5.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [48]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d5.cpp:29) [60]  (0.000 ns)
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d5.cpp:29) on port 'mem' (d5.cpp:29) [61]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d5.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [62]  (1.224 ns)

 <State 22>: 6.109ns
The critical path consists of the following:
	'load' operation ('arg1_r_8_loc_load') on local variable 'arg1_r_8_loc' [49]  (0.000 ns)
	multiplexor before operation 'mul' with delay (0.979 ns)
'mul' operation ('mul_ln50_1', d5.cpp:50) [78]  (3.551 ns)
	'add' operation ('arr', d5.cpp:50) [99]  (1.579 ns)

 <State 23>: 6.246ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.979 ns)
'mul' operation ('mul_ln50_3', d5.cpp:50) [84]  (3.551 ns)
	'add' operation ('add_ln50_3', d5.cpp:50) [117]  (0.000 ns)
	'add' operation ('arr', d5.cpp:50) [119]  (0.995 ns)
	'call' operation ('call_ln50', d5.cpp:50) to 'test_Pipeline_VITIS_LOOP_59_5' [160]  (0.721 ns)

 <State 24>: 1.579ns
The critical path consists of the following:
	'add' operation ('add_ln57_6', d5.cpp:57) [198]  (1.579 ns)

 <State 25>: 6.316ns
The critical path consists of the following:
	'load' operation ('add115_3_1135_loc_load') on local variable 'add115_3_1135_loc' [161]  (0.000 ns)
	'add' operation ('add_ln79', d5.cpp:79) [205]  (1.579 ns)
	'add' operation ('add_ln79_1', d5.cpp:79) [208]  (1.579 ns)
	'add' operation ('add_ln79_2', d5.cpp:79) [211]  (1.579 ns)
	'add' operation ('add_ln79_3', d5.cpp:79) [214]  (1.579 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d5.cpp:91) [270]  (0.000 ns)
	bus request operation ('empty_30', d5.cpp:91) on port 'mem' (d5.cpp:91) [271]  (7.300 ns)

 <State 27>: 2.957ns
The critical path consists of the following:
	'add' operation ('add_ln81', d5.cpp:81) [241]  (1.093 ns)
	'add' operation ('out1_w', d5.cpp:81) [249]  (1.093 ns)
	'call' operation ('call_ln91', d5.cpp:91) to 'test_Pipeline_ARRAY_WRITE' [272]  (0.770 ns)

 <State 28>: 0.000ns
The critical path consists of the following:

 <State 29>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d5.cpp:96) on port 'mem' (d5.cpp:96) [273]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d5.cpp:96) on port 'mem' (d5.cpp:96) [273]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d5.cpp:96) on port 'mem' (d5.cpp:96) [273]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d5.cpp:96) on port 'mem' (d5.cpp:96) [273]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_31', d5.cpp:96) on port 'mem' (d5.cpp:96) [273]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
