

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 21:48:22 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D4
* Solution:       comb_4 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       72|       72|  0.720 us|  0.720 us|   73|   73|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 34 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 35 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 36 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%p_loc = alloca i64 1"   --->   Operation 37 'alloca' 'p_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add6836_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add6836_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add68_12137_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add68_12137_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add68_238_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add68_238_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add68_339_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add68_339_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add68_440_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add68_440_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add68_541_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add68_541_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add68_642_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add68_642_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%add68_743_loc = alloca i64 1"   --->   Operation 45 'alloca' 'add68_743_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d4.cpp:22]   --->   Operation 64 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d4.cpp:29]   --->   Operation 65 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln72_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d4.cpp:72]   --->   Operation 66 'partselect' 'trunc_ln72_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d4.cpp:22]   --->   Operation 67 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d4.cpp:22]   --->   Operation 68 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 69 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 70 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 70 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 71 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 71 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 72 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 72 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 73 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 73 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 74 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 74 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 75 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 75 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 76 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d4.cpp:22]   --->   Operation 76 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 77 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d4.cpp:22]   --->   Operation 77 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 78 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d4.cpp:22]   --->   Operation 78 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d4.cpp:29]   --->   Operation 79 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d4.cpp:29]   --->   Operation 80 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [8/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 81 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 82 [7/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 82 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 83 [6/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 83 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 84 [5/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 84 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 85 [4/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 85 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 86 [3/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 86 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 87 [2/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 87 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 88 [1/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d4.cpp:29]   --->   Operation 88 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 89 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d4.cpp:29]   --->   Operation 89 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 90 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d4.cpp:29]   --->   Operation 90 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 4.53>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 91 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 92 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%conv37 = zext i64 %arg1_r_8_loc_load"   --->   Operation 93 'zext' 'conv37' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%conv39 = zext i64 %arg2_r_loc_load"   --->   Operation 94 'zext' 'conv39' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.79ns)   --->   Input mux for Operation 95 '%mul40 = mul i128 %conv39, i128 %conv37'
ST_22 : Operation 95 [1/1] (3.73ns)   --->   "%mul40 = mul i128 %conv39, i128 %conv37"   --->   Operation 95 'mul' 'mul40' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 0.00>
ST_23 : Operation 96 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 96 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 97 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 97 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 98 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 98 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 99 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 99 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 100 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 100 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 101 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 101 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 102 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 102 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 103 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 103 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 104 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 104 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 105 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 105 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 106 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 106 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 107 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 107 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 108 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 108 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 109 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 109 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 110 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 110 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 111 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 111 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 112 [1/1] (0.00ns)   --->   "%empty_30 = trunc i64 %arg2_r_1_loc_load"   --->   Operation 112 'trunc' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 113 [1/1] (0.00ns)   --->   "%empty_31 = trunc i64 %arg2_r_2_loc_load"   --->   Operation 113 'trunc' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 114 [1/1] (0.00ns)   --->   "%empty_32 = trunc i64 %arg2_r_3_loc_load"   --->   Operation 114 'trunc' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 115 [1/1] (0.00ns)   --->   "%empty_33 = trunc i64 %arg2_r_4_loc_load"   --->   Operation 115 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 116 [1/1] (0.00ns)   --->   "%empty_34 = trunc i64 %arg2_r_5_loc_load"   --->   Operation 116 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 117 [1/1] (0.00ns)   --->   "%empty_35 = trunc i64 %arg2_r_6_loc_load"   --->   Operation 117 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 118 [1/1] (0.00ns)   --->   "%empty_36 = trunc i64 %arg2_r_8_loc_load"   --->   Operation 118 'trunc' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 119 [1/1] (0.00ns)   --->   "%empty_37 = trunc i64 %arg2_r_7_loc_load"   --->   Operation 119 'trunc' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 120 [1/1] (0.00ns)   --->   "%empty_38 = shl i64 %arg2_r_8_loc_load, i64 1"   --->   Operation 120 'shl' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 121 [2/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_6_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_8_loc_load, i64 %arg1_r_8_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i63 %empty_37, i63 %empty_36, i64 %arg2_r_1_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_5_loc_load, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i64 %arg2_r_7_loc_load, i128 %mul40, i64 %empty_38, i64 %arg2_r_1_loc_load, i64 %arg2_r_loc_load, i128 %add68_743_loc, i128 %add68_642_loc, i128 %add68_541_loc, i128 %add68_440_loc, i128 %add68_339_loc, i128 %add68_238_loc, i128 %add68_12137_loc, i128 %add6836_loc, i128 %p_loc"   --->   Operation 121 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 0.00>
ST_24 : Operation 122 [1/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_6_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_8_loc_load, i64 %arg1_r_8_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i63 %empty_37, i63 %empty_36, i64 %arg2_r_1_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_5_loc_load, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i64 %arg2_r_7_loc_load, i128 %mul40, i64 %empty_38, i64 %arg2_r_1_loc_load, i64 %arg2_r_loc_load, i128 %add68_743_loc, i128 %add68_642_loc, i128 %add68_541_loc, i128 %add68_440_loc, i128 %add68_339_loc, i128 %add68_238_loc, i128 %add68_12137_loc, i128 %add6836_loc, i128 %p_loc"   --->   Operation 122 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 3.15>
ST_25 : Operation 123 [1/1] (0.00ns)   --->   "%add68_743_loc_load = load i128 %add68_743_loc"   --->   Operation 123 'load' 'add68_743_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 124 [1/1] (0.00ns)   --->   "%add68_642_loc_load = load i128 %add68_642_loc"   --->   Operation 124 'load' 'add68_642_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 125 [1/1] (0.00ns)   --->   "%add68_541_loc_load = load i128 %add68_541_loc"   --->   Operation 125 'load' 'add68_541_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 126 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i128 %add68_743_loc_load" [d4.cpp:60]   --->   Operation 126 'trunc' 'trunc_ln60' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln60_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add68_743_loc_load, i32 58, i32 127" [d4.cpp:60]   --->   Operation 127 'partselect' 'trunc_ln60_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 128 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i70 %trunc_ln60_2" [d4.cpp:60]   --->   Operation 128 'sext' 'sext_ln60' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 129 [1/1] (1.57ns)   --->   "%add_ln60 = add i128 %add68_642_loc_load, i128 %sext_ln60" [d4.cpp:60]   --->   Operation 129 'add' 'add_ln60' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln60_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60, i32 58, i32 127" [d4.cpp:60]   --->   Operation 130 'partselect' 'trunc_ln60_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 131 [1/1] (0.00ns)   --->   "%sext_ln60_1 = sext i70 %trunc_ln60_3" [d4.cpp:60]   --->   Operation 131 'sext' 'sext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 132 [1/1] (1.57ns)   --->   "%add_ln60_1 = add i128 %add68_541_loc_load, i128 %sext_ln60_1" [d4.cpp:60]   --->   Operation 132 'add' 'add_ln60_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln60_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_1, i32 58, i32 127" [d4.cpp:60]   --->   Operation 133 'partselect' 'trunc_ln60_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln61 = trunc i128 %add68_642_loc_load" [d4.cpp:61]   --->   Operation 134 'trunc' 'trunc_ln61' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln61_3 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add68_743_loc_load, i32 58, i32 115" [d4.cpp:61]   --->   Operation 135 'partselect' 'trunc_ln61_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 136 [1/1] (1.09ns)   --->   "%add_ln61_1 = add i58 %trunc_ln61_3, i58 %trunc_ln61" [d4.cpp:61]   --->   Operation 136 'add' 'add_ln61_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i128 %add68_541_loc_load" [d4.cpp:62]   --->   Operation 137 'trunc' 'trunc_ln62' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 138 [1/1] (0.00ns)   --->   "%trunc_ln62_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60, i32 58, i32 115" [d4.cpp:62]   --->   Operation 138 'partselect' 'trunc_ln62_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 139 [1/1] (1.09ns)   --->   "%add_ln62_1 = add i58 %trunc_ln62_2, i58 %trunc_ln62" [d4.cpp:62]   --->   Operation 139 'add' 'add_ln62_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln63_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_1, i32 58, i32 115" [d4.cpp:63]   --->   Operation 140 'partselect' 'trunc_ln63_1' <Predicate = true> <Delay = 0.00>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 141 [1/1] (0.00ns)   --->   "%add68_440_loc_load = load i128 %add68_440_loc"   --->   Operation 141 'load' 'add68_440_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 142 [1/1] (0.00ns)   --->   "%add68_339_loc_load = load i128 %add68_339_loc"   --->   Operation 142 'load' 'add68_339_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 143 [1/1] (0.00ns)   --->   "%add68_238_loc_load = load i128 %add68_238_loc"   --->   Operation 143 'load' 'add68_238_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 144 [1/1] (0.00ns)   --->   "%add68_12137_loc_load = load i128 %add68_12137_loc"   --->   Operation 144 'load' 'add68_12137_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 145 [1/1] (0.00ns)   --->   "%sext_ln60_2 = sext i70 %trunc_ln60_4" [d4.cpp:60]   --->   Operation 145 'sext' 'sext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 146 [1/1] (1.57ns)   --->   "%add_ln60_2 = add i128 %add68_440_loc_load, i128 %sext_ln60_2" [d4.cpp:60]   --->   Operation 146 'add' 'add_ln60_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 147 [1/1] (0.00ns)   --->   "%trunc_ln60_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_2, i32 58, i32 127" [d4.cpp:60]   --->   Operation 147 'partselect' 'trunc_ln60_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln60_3 = sext i70 %trunc_ln60_5" [d4.cpp:60]   --->   Operation 148 'sext' 'sext_ln60_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 149 [1/1] (1.57ns)   --->   "%add_ln60_3 = add i128 %add68_339_loc_load, i128 %sext_ln60_3" [d4.cpp:60]   --->   Operation 149 'add' 'add_ln60_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln60_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_3, i32 58, i32 127" [d4.cpp:60]   --->   Operation 150 'partselect' 'trunc_ln60_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 151 [1/1] (0.00ns)   --->   "%sext_ln60_4 = sext i70 %trunc_ln60_6" [d4.cpp:60]   --->   Operation 151 'sext' 'sext_ln60_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 152 [1/1] (1.57ns)   --->   "%add_ln60_4 = add i128 %add68_238_loc_load, i128 %sext_ln60_4" [d4.cpp:60]   --->   Operation 152 'add' 'add_ln60_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 153 [1/1] (0.00ns)   --->   "%trunc_ln60_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_4, i32 58, i32 127" [d4.cpp:60]   --->   Operation 153 'partselect' 'trunc_ln60_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 154 [1/1] (0.00ns)   --->   "%sext_ln60_5 = sext i70 %trunc_ln60_7" [d4.cpp:60]   --->   Operation 154 'sext' 'sext_ln60_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 155 [1/1] (1.57ns)   --->   "%add_ln60_5 = add i128 %add68_12137_loc_load, i128 %sext_ln60_5" [d4.cpp:60]   --->   Operation 155 'add' 'add_ln60_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln60_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_5, i32 58, i32 127" [d4.cpp:60]   --->   Operation 156 'partselect' 'trunc_ln60_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln63 = trunc i128 %add68_440_loc_load" [d4.cpp:63]   --->   Operation 157 'trunc' 'trunc_ln63' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 158 [1/1] (1.09ns)   --->   "%out1_w_3 = add i58 %trunc_ln63_1, i58 %trunc_ln63" [d4.cpp:63]   --->   Operation 158 'add' 'out1_w_3' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 159 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i128 %add68_339_loc_load" [d4.cpp:64]   --->   Operation 159 'trunc' 'trunc_ln64' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 160 [1/1] (0.00ns)   --->   "%trunc_ln64_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_2, i32 58, i32 115" [d4.cpp:64]   --->   Operation 160 'partselect' 'trunc_ln64_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 161 [1/1] (1.09ns)   --->   "%out1_w_4 = add i58 %trunc_ln64_1, i58 %trunc_ln64" [d4.cpp:64]   --->   Operation 161 'add' 'out1_w_4' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i128 %add68_238_loc_load" [d4.cpp:65]   --->   Operation 162 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 163 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_3, i32 58, i32 115" [d4.cpp:65]   --->   Operation 163 'partselect' 'trunc_ln65_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 164 [1/1] (1.09ns)   --->   "%out1_w_5 = add i58 %trunc_ln65_1, i58 %trunc_ln65" [d4.cpp:65]   --->   Operation 164 'add' 'out1_w_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln66 = trunc i128 %add68_12137_loc_load" [d4.cpp:66]   --->   Operation 165 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 166 [1/1] (0.00ns)   --->   "%trunc_ln66_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_4, i32 58, i32 115" [d4.cpp:66]   --->   Operation 166 'partselect' 'trunc_ln66_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 167 [1/1] (1.09ns)   --->   "%out1_w_6 = add i58 %trunc_ln66_1, i58 %trunc_ln66" [d4.cpp:66]   --->   Operation 167 'add' 'out1_w_6' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 168 [1/1] (0.00ns)   --->   "%trunc_ln67_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_5, i32 58, i32 115" [d4.cpp:67]   --->   Operation 168 'partselect' 'trunc_ln67_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 169 [1/1] (0.00ns)   --->   "%sext_ln72 = sext i61 %trunc_ln72_1" [d4.cpp:72]   --->   Operation 169 'sext' 'sext_ln72' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 170 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln72" [d4.cpp:72]   --->   Operation 170 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 171 [1/1] (7.30ns)   --->   "%empty_39 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d4.cpp:72]   --->   Operation 171 'writereq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.25>
ST_27 : Operation 172 [1/1] (0.00ns)   --->   "%add6836_loc_load = load i128 %add6836_loc"   --->   Operation 172 'load' 'add6836_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 173 [1/1] (0.00ns)   --->   "%p_loc_load = load i128 %p_loc"   --->   Operation 173 'load' 'p_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 174 [1/1] (0.00ns)   --->   "%sext_ln60_6 = sext i70 %trunc_ln60_8" [d4.cpp:60]   --->   Operation 174 'sext' 'sext_ln60_6' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 175 [1/1] (1.57ns)   --->   "%add_ln60_6 = add i128 %add6836_loc_load, i128 %sext_ln60_6" [d4.cpp:60]   --->   Operation 175 'add' 'add_ln60_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 176 [1/1] (0.00ns)   --->   "%trunc_ln60_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln60_6, i32 58, i32 127" [d4.cpp:60]   --->   Operation 176 'partselect' 'trunc_ln60_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 177 [1/1] (0.00ns)   --->   "%sext_ln60_7 = sext i70 %trunc_ln60_9" [d4.cpp:60]   --->   Operation 177 'sext' 'sext_ln60_7' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 178 [1/1] (1.57ns)   --->   "%add_ln60_7 = add i128 %p_loc_load, i128 %sext_ln60_7" [d4.cpp:60]   --->   Operation 178 'add' 'add_ln60_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln60_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln60_7, i32 57, i32 114" [d4.cpp:60]   --->   Operation 179 'partselect' 'trunc_ln60_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 180 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln60_1, i58 %trunc_ln60" [d4.cpp:60]   --->   Operation 180 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i58 %trunc_ln60" [d4.cpp:61]   --->   Operation 181 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 182 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln60_7, i32 57, i32 127" [d4.cpp:61]   --->   Operation 182 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 183 [1/1] (0.00ns)   --->   "%sext_ln61 = sext i71 %trunc_ln1" [d4.cpp:61]   --->   Operation 183 'sext' 'sext_ln61' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 184 [1/1] (1.13ns)   --->   "%add_ln61 = add i72 %sext_ln61, i72 %zext_ln61" [d4.cpp:61]   --->   Operation 184 'add' 'add_ln61' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln61_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln61, i32 58, i32 71" [d4.cpp:61]   --->   Operation 185 'partselect' 'trunc_ln61_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 186 [1/1] (0.00ns)   --->   "%sext_ln61_1 = sext i14 %trunc_ln61_1" [d4.cpp:61]   --->   Operation 186 'sext' 'sext_ln61_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 187 [1/1] (0.00ns)   --->   "%sext_ln61_2 = sext i14 %trunc_ln61_1" [d4.cpp:61]   --->   Operation 187 'sext' 'sext_ln61_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 188 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln61_2, i58 %add_ln61_1" [d4.cpp:61]   --->   Operation 188 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i58 %add_ln61_1" [d4.cpp:62]   --->   Operation 189 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 190 [1/1] (1.09ns)   --->   "%add_ln62 = add i60 %sext_ln61_1, i60 %zext_ln62" [d4.cpp:62]   --->   Operation 190 'add' 'add_ln62' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 191 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln62, i32 58, i32 59" [d4.cpp:62]   --->   Operation 191 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 192 [1/1] (0.00ns)   --->   "%sext_ln62 = sext i2 %tmp" [d4.cpp:62]   --->   Operation 192 'sext' 'sext_ln62' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i6 %sext_ln62" [d4.cpp:62]   --->   Operation 193 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i58 %add_ln62_1" [d4.cpp:62]   --->   Operation 194 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 195 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln62_2, i59 %zext_ln62_1" [d4.cpp:62]   --->   Operation 195 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln67 = trunc i128 %add6836_loc_load" [d4.cpp:67]   --->   Operation 196 'trunc' 'trunc_ln67' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 197 [1/1] (1.09ns)   --->   "%out1_w_7 = add i58 %trunc_ln67_1, i58 %trunc_ln67" [d4.cpp:67]   --->   Operation 197 'add' 'out1_w_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 198 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i128 %p_loc_load" [d4.cpp:68]   --->   Operation 198 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln68_1 = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln60_6, i32 58, i32 114" [d4.cpp:68]   --->   Operation 199 'partselect' 'trunc_ln68_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 200 [1/1] (1.09ns)   --->   "%out1_w_8 = add i57 %trunc_ln68_1, i57 %trunc_ln68" [d4.cpp:68]   --->   Operation 200 'add' 'out1_w_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 201 [2/2] (0.77ns)   --->   "%call_ln72 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln72_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d4.cpp:72]   --->   Operation 201 'call' 'call_ln72' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 0.00>
ST_28 : Operation 202 [1/2] (0.00ns)   --->   "%call_ln72 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln72_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d4.cpp:72]   --->   Operation 202 'call' 'call_ln72' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 203 [5/5] (7.30ns)   --->   "%empty_40 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d4.cpp:77]   --->   Operation 203 'writeresp' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 204 [4/5] (7.30ns)   --->   "%empty_40 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d4.cpp:77]   --->   Operation 204 'writeresp' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 205 [3/5] (7.30ns)   --->   "%empty_40 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d4.cpp:77]   --->   Operation 205 'writeresp' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 206 [2/5] (7.30ns)   --->   "%empty_40 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d4.cpp:77]   --->   Operation 206 'writeresp' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 207 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d4.cpp:3]   --->   Operation 207 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 208 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 208 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 209 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 209 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 210 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 210 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 211 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 211 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 212 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 212 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 213 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 213 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 214 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 214 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 215 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 215 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 216 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 216 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 217 [1/5] (7.30ns)   --->   "%empty_40 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d4.cpp:77]   --->   Operation 217 'writeresp' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 218 [1/1] (0.00ns)   --->   "%ret_ln77 = ret" [d4.cpp:77]   --->   Operation 218 'ret' 'ret_ln77' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d4.cpp:22) [47]  (0.000 ns)
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d4.cpp:22) on port 'mem' (d4.cpp:22) [48]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d4.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [49]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d4.cpp:29) [61]  (0.000 ns)
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d4.cpp:29) on port 'mem' (d4.cpp:29) [62]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d4.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [63]  (1.224 ns)

 <State 22>: 4.530ns
The critical path consists of the following:
	'load' operation ('arg1_r_8_loc_load') on local variable 'arg1_r_8_loc' [50]  (0.000 ns)
	multiplexor before operation 'mul' with delay (0.796 ns)
'mul' operation ('mul40') [83]  (3.734 ns)

 <State 23>: 0.000ns
The critical path consists of the following:

 <State 24>: 0.000ns
The critical path consists of the following:

 <State 25>: 3.158ns
The critical path consists of the following:
	'load' operation ('add68_743_loc_load') on local variable 'add68_743_loc' [86]  (0.000 ns)
	'add' operation ('add_ln60', d4.cpp:60) [98]  (1.579 ns)
	'add' operation ('add_ln60_1', d4.cpp:60) [101]  (1.579 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d4.cpp:72) [163]  (0.000 ns)
	bus request operation ('empty_39', d4.cpp:72) on port 'mem' (d4.cpp:72) [164]  (7.300 ns)

 <State 27>: 7.253ns
The critical path consists of the following:
	'load' operation ('add6836_loc_load') on local variable 'add6836_loc' [93]  (0.000 ns)
	'add' operation ('add_ln60_6', d4.cpp:60) [116]  (1.579 ns)
	'add' operation ('add_ln60_7', d4.cpp:60) [119]  (1.579 ns)
	'add' operation ('add_ln61', d4.cpp:61) [125]  (1.139 ns)
	'add' operation ('add_ln62', d4.cpp:62) [134]  (1.093 ns)
	'add' operation ('out1_w', d4.cpp:62) [142]  (1.093 ns)
	'call' operation ('call_ln72', d4.cpp:72) to 'test_Pipeline_ARRAY_WRITE' [165]  (0.770 ns)

 <State 28>: 0.000ns
The critical path consists of the following:

 <State 29>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_40', d4.cpp:77) on port 'mem' (d4.cpp:77) [166]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_40', d4.cpp:77) on port 'mem' (d4.cpp:77) [166]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_40', d4.cpp:77) on port 'mem' (d4.cpp:77) [166]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_40', d4.cpp:77) on port 'mem' (d4.cpp:77) [166]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_40', d4.cpp:77) on port 'mem' (d4.cpp:77) [166]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
