

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 22:01:18 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_10 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.101 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |        4|        4|         2|          1|          1|     4|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.57>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%arr_8 = alloca i32 1"   --->   Operation 5 'alloca' 'arr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arr_9 = alloca i32 1"   --->   Operation 6 'alloca' 'arr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arr_10 = alloca i32 1"   --->   Operation 7 'alloca' 'arr_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr_11 = alloca i32 1"   --->   Operation 8 'alloca' 'arr_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_12 = alloca i32 1"   --->   Operation 9 'alloca' 'arr_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_13 = alloca i32 1"   --->   Operation 10 'alloca' 'arr_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_14 = alloca i32 1"   --->   Operation 11 'alloca' 'arr_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_15 = alloca i32 1"   --->   Operation 12 'alloca' 'arr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 13 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 14 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 15 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 16 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 17 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_1_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_1_cast"   --->   Operation 18 'read' 'arg2_r_1_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_2_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_2_cast"   --->   Operation 19 'read' 'arg2_r_2_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_3_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_3_cast"   --->   Operation 20 'read' 'arg2_r_3_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_4_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_4_cast"   --->   Operation 21 'read' 'arg2_r_4_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_5_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_5_cast"   --->   Operation 22 'read' 'arg2_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_6_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_6_cast"   --->   Operation 23 'read' 'arg2_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_8_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_8_cast"   --->   Operation 24 'read' 'arg2_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_7_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_7_cast"   --->   Operation 25 'read' 'arg2_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%conv34_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %conv34"   --->   Operation 26 'read' 'conv34_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_8_reload"   --->   Operation 27 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 28 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 29 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 30 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%conv34_cast = zext i64 %conv34_read"   --->   Operation 31 'zext' 'conv34_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 8, i4 %i"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_15"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_14"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_13"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_12"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_11"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_10"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_9"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %arr_8"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc50.1.1"   --->   Operation 41 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [d6.cpp:49]   --->   Operation 42 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.79ns)   --->   "%icmp_ln36 = icmp_eq  i4 %i_2, i4 0" [d6.cpp:36]   --->   Operation 43 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.inc50.1.1.split, void %for.inc84.preheader.exitStub" [d6.cpp:36]   --->   Operation 44 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.77ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_2_reload_read, i64 0, i64 %arg1_r_4_reload_read, i64 0, i64 %arg1_r_6_reload_read, i64 0, i64 %arg1_r_8_reload_read, i4 %i_2" [d6.cpp:49]   --->   Operation 45 'mux' 'tmp' <Predicate = (!icmp_ln36)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i64 %tmp" [d6.cpp:49]   --->   Operation 46 'zext' 'zext_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_18 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d6.cpp:49]   --->   Operation 47 'bitselect' 'tmp_18' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : [1/1] (0.79ns)   --->   Input mux for Operation 48 '%mul_ln49 = mul i128 %zext_ln49, i128 %conv34_cast'
ST_1 : Operation 48 [1/1] (3.73ns)   --->   "%mul_ln49 = mul i128 %zext_ln49, i128 %conv34_cast" [d6.cpp:49]   --->   Operation 48 'mul' 'mul_ln49' <Predicate = (!icmp_ln36)> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [d6.cpp:49]   --->   Operation 49 'bitselect' 'tmp_19' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_6)   --->   "%select_ln34 = select i1 %tmp_19, i4 7, i4 8" [d6.cpp:34]   --->   Operation 50 'select' 'select_ln34' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.79ns)   --->   "%icmp_ln49 = icmp_ugt  i4 %i_2, i4 6" [d6.cpp:49]   --->   Operation 51 'icmp' 'icmp_ln49' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_6)   --->   "%zext_ln50 = zext i1 %icmp_ln49" [d6.cpp:50]   --->   Operation 52 'zext' 'zext_ln50' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln34_6 = sub i4 %select_ln34, i4 %zext_ln50" [d6.cpp:34]   --->   Operation 53 'sub' 'sub_ln34_6' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.79ns)   --->   "%icmp_ln49_1 = icmp_ugt  i4 %i_2, i4 5" [d6.cpp:49]   --->   Operation 54 'icmp' 'icmp_ln49_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i1 %icmp_ln49_1" [d6.cpp:50]   --->   Operation 55 'zext' 'zext_ln50_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.79ns)   --->   "%sub_ln34_7 = sub i4 %sub_ln34_6, i4 %zext_ln50_1" [d6.cpp:34]   --->   Operation 56 'sub' 'sub_ln34_7' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.79ns)   --->   "%icmp_ln49_2 = icmp_ugt  i4 %i_2, i4 4" [d6.cpp:49]   --->   Operation 57 'icmp' 'icmp_ln49_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i1 %icmp_ln49_2" [d6.cpp:50]   --->   Operation 58 'zext' 'zext_ln50_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%sub_ln34 = sub i4 %sub_ln34_7, i4 %zext_ln50_2" [d6.cpp:34]   --->   Operation 59 'sub' 'sub_ln34' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i_2, i32 2, i32 3" [d6.cpp:49]   --->   Operation 60 'partselect' 'tmp_20' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.54ns)   --->   "%icmp_ln49_3 = icmp_ne  i2 %tmp_20, i2 0" [d6.cpp:49]   --->   Operation 61 'icmp' 'icmp_ln49_3' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i1 %icmp_ln49_3" [d6.cpp:50]   --->   Operation 62 'zext' 'zext_ln50_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.79ns)   --->   "%sub_ln34_1 = sub i4 %sub_ln34, i4 %zext_ln50_3" [d6.cpp:34]   --->   Operation 63 'sub' 'sub_ln34_1' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.79ns)   --->   "%icmp_ln49_4 = icmp_ugt  i4 %i_2, i4 2" [d6.cpp:49]   --->   Operation 64 'icmp' 'icmp_ln49_4' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i1 %icmp_ln49_4" [d6.cpp:50]   --->   Operation 65 'zext' 'zext_ln50_4' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.79ns)   --->   "%sub_ln34_2 = sub i4 %sub_ln34_1, i4 %zext_ln50_4" [d6.cpp:34]   --->   Operation 66 'sub' 'sub_ln34_2' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%empty = add i4 %i_2, i4 15" [d6.cpp:49]   --->   Operation 67 'add' 'empty' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.77ns)   --->   "%tmp_8 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_1_reload_read, i64 0, i64 %arg1_r_3_reload_read, i64 0, i64 %arg1_r_5_reload_read, i64 0, i64 %arg1_r_7_reload_read, i4 %i_2" [d6.cpp:49]   --->   Operation 68 'mux' 'tmp_8' <Predicate = (!icmp_ln36)> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.79ns)   --->   "%icmp_ln49_5 = icmp_eq  i4 %empty, i4 7" [d6.cpp:49]   --->   Operation 69 'icmp' 'icmp_ln49_5' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_8)   --->   "%select_ln34_1 = select i1 %icmp_ln49_5, i4 7, i4 8" [d6.cpp:34]   --->   Operation 70 'select' 'select_ln34_1' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.79ns)   --->   "%icmp_ln49_6 = icmp_sgt  i4 %empty, i4 5" [d6.cpp:49]   --->   Operation 71 'icmp' 'icmp_ln49_6' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_8)   --->   "%zext_ln50_5 = zext i1 %icmp_ln49_6" [d6.cpp:50]   --->   Operation 72 'zext' 'zext_ln50_5' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln34_8 = sub i4 %select_ln34_1, i4 %zext_ln50_5" [d6.cpp:34]   --->   Operation 73 'sub' 'sub_ln34_8' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.79ns)   --->   "%icmp_ln49_7 = icmp_sgt  i4 %empty, i4 4" [d6.cpp:49]   --->   Operation 74 'icmp' 'icmp_ln49_7' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln50_6 = zext i1 %icmp_ln49_7" [d6.cpp:50]   --->   Operation 75 'zext' 'zext_ln50_6' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.79ns)   --->   "%sub_ln34_9 = sub i4 %sub_ln34_8, i4 %zext_ln50_6" [d6.cpp:34]   --->   Operation 76 'sub' 'sub_ln34_9' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %empty, i32 2, i32 3" [d6.cpp:49]   --->   Operation 77 'partselect' 'tmp_21' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.54ns)   --->   "%icmp_ln49_8 = icmp_eq  i2 %tmp_21, i2 1" [d6.cpp:49]   --->   Operation 78 'icmp' 'icmp_ln49_8' <Predicate = (!icmp_ln36)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln50_7 = zext i1 %icmp_ln49_8" [d6.cpp:50]   --->   Operation 79 'zext' 'zext_ln50_7' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.79ns)   --->   "%sub_ln34_3 = sub i4 %sub_ln34_9, i4 %zext_ln50_7" [d6.cpp:34]   --->   Operation 80 'sub' 'sub_ln34_3' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%icmp_ln49_9 = icmp_sgt  i4 %empty, i4 2" [d6.cpp:49]   --->   Operation 81 'icmp' 'icmp_ln49_9' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln50_8 = zext i1 %icmp_ln49_9" [d6.cpp:50]   --->   Operation 82 'zext' 'zext_ln50_8' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.79ns)   --->   "%sub_ln34_4 = sub i4 %sub_ln34_3, i4 %zext_ln50_8" [d6.cpp:34]   --->   Operation 83 'sub' 'sub_ln34_4' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %empty, i32 1, i32 3" [d6.cpp:49]   --->   Operation 84 'partselect' 'tmp_22' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.67ns)   --->   "%icmp_ln49_10 = icmp_sgt  i3 %tmp_22, i3 0" [d6.cpp:49]   --->   Operation 85 'icmp' 'icmp_ln49_10' <Predicate = (!icmp_ln36)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln50_9 = zext i1 %icmp_ln49_10" [d6.cpp:50]   --->   Operation 86 'zext' 'zext_ln50_9' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%sub_ln34_5 = sub i4 %sub_ln34_4, i4 %zext_ln50_9" [d6.cpp:34]   --->   Operation 87 'sub' 'sub_ln34_5' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%add_ln36 = add i4 %i_2, i4 14" [d6.cpp:36]   --->   Operation 88 'add' 'add_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.42ns)   --->   "%store_ln36 = store i4 %add_ln36, i4 %i" [d6.cpp:36]   --->   Operation 89 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.42>
ST_1 : Operation 203 [1/1] (0.00ns)   --->   "%arr_8_load = load i128 %arr_8"   --->   Operation 203 'load' 'arr_8_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 204 [1/1] (0.00ns)   --->   "%arr_9_load = load i128 %arr_9"   --->   Operation 204 'load' 'arr_9_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.00ns)   --->   "%arr_10_load = load i128 %arr_10"   --->   Operation 205 'load' 'arr_10_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 206 [1/1] (0.00ns)   --->   "%arr_11_load = load i128 %arr_11"   --->   Operation 206 'load' 'arr_11_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (0.00ns)   --->   "%arr_12_load = load i128 %arr_12"   --->   Operation 207 'load' 'arr_12_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 208 [1/1] (0.00ns)   --->   "%arr_13_load = load i128 %arr_13"   --->   Operation 208 'load' 'arr_13_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 209 [1/1] (0.00ns)   --->   "%arr_14_load = load i128 %arr_14"   --->   Operation 209 'load' 'arr_14_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 210 [1/1] (0.00ns)   --->   "%arr_15_load = load i128 %arr_15"   --->   Operation 210 'load' 'arr_15_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_186_3125_out, i128 %arr_15_load"   --->   Operation 211 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 212 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_186_2124_out, i128 %arr_14_load"   --->   Operation 212 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 213 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_186_1123_out, i128 %arr_13_load"   --->   Operation 213 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 214 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_186122_out, i128 %arr_12_load"   --->   Operation 214 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_3121_out, i128 %arr_11_load"   --->   Operation 215 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_2120_out, i128 %arr_10_load"   --->   Operation 216 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 217 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add_1104119_out, i128 %arr_9_load"   --->   Operation 217 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 218 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add118_out, i128 %arr_8_load"   --->   Operation 218 'write' 'write_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_1 : Operation 219 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 219 'ret' 'ret_ln0' <Predicate = (icmp_ln36)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.10>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%arr_8_load_1 = load i128 %arr_8" [d6.cpp:49]   --->   Operation 90 'load' 'arr_8_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%arr_9_load_1 = load i128 %arr_9" [d6.cpp:49]   --->   Operation 91 'load' 'arr_9_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%arr_10_load_1 = load i128 %arr_10" [d6.cpp:49]   --->   Operation 92 'load' 'arr_10_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%arr_11_load_1 = load i128 %arr_11" [d6.cpp:49]   --->   Operation 93 'load' 'arr_11_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%arr_12_load_1 = load i128 %arr_12" [d6.cpp:49]   --->   Operation 94 'load' 'arr_12_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%arr_13_load_1 = load i128 %arr_13" [d6.cpp:49]   --->   Operation 95 'load' 'arr_13_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%arr_14_load_1 = load i128 %arr_14" [d6.cpp:49]   --->   Operation 96 'load' 'arr_14_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%arr_15_load_1 = load i128 %arr_15" [d6.cpp:49]   --->   Operation 97 'load' 'arr_15_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_3" [d6.cpp:38]   --->   Operation 98 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4" [d6.cpp:34]   --->   Operation 99 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [d6.cpp:36]   --->   Operation 100 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node arr)   --->   "%select_ln49_2 = select i1 %tmp_19, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 101 'select' 'select_ln49_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node arr)   --->   "%and_ln49 = and i128 %mul_ln49, i128 %select_ln49_2" [d6.cpp:49]   --->   Operation 102 'and' 'and_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 103 [1/1] (1.57ns) (out node of the LUT)   --->   "%arr = add i128 %and_ln49, i128 %arr_8_load_1" [d6.cpp:49]   --->   Operation 103 'add' 'arr' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.41ns)   --->   "%select_ln49 = select i1 %tmp_18, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d6.cpp:49]   --->   Operation 104 'select' 'select_ln49' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln49, i1 0" [d6.cpp:49]   --->   Operation 105 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i64 %shl_ln" [d6.cpp:49]   --->   Operation 106 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.77ns)   --->   "%tmp_2 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_6" [d6.cpp:49]   --->   Operation 107 'mux' 'tmp_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%shl_ln49_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_2, i1 0" [d6.cpp:49]   --->   Operation 108 'bitconcatenate' 'shl_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i64 %shl_ln49_1" [d6.cpp:49]   --->   Operation 109 'zext' 'zext_ln49_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 110 [1/1] (0.77ns)   --->   "%tmp_3 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_7" [d6.cpp:49]   --->   Operation 110 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%shl_ln49_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_3, i1 0" [d6.cpp:49]   --->   Operation 111 'bitconcatenate' 'shl_ln49_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln49_3 = zext i64 %shl_ln49_2" [d6.cpp:49]   --->   Operation 112 'zext' 'zext_ln49_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.77ns)   --->   "%tmp_4 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34" [d6.cpp:49]   --->   Operation 113 'mux' 'tmp_4' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%shl_ln49_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_4, i1 0" [d6.cpp:49]   --->   Operation 114 'bitconcatenate' 'shl_ln49_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln49_4 = zext i64 %shl_ln49_3" [d6.cpp:49]   --->   Operation 115 'zext' 'zext_ln49_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.77ns)   --->   "%tmp_5 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_1" [d6.cpp:49]   --->   Operation 116 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%shl_ln49_4 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_5, i1 0" [d6.cpp:49]   --->   Operation 117 'bitconcatenate' 'shl_ln49_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln49_5 = zext i64 %shl_ln49_4" [d6.cpp:49]   --->   Operation 118 'zext' 'zext_ln49_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.77ns)   --->   "%tmp_6 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_2" [d6.cpp:49]   --->   Operation 119 'mux' 'tmp_6' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%shl_ln49_5 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_6, i1 0" [d6.cpp:49]   --->   Operation 120 'bitconcatenate' 'shl_ln49_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln49_6 = zext i64 %shl_ln49_5" [d6.cpp:49]   --->   Operation 121 'zext' 'zext_ln49_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.77ns)   --->   "%tmp_7 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i4 %sub_ln34_2" [d6.cpp:49]   --->   Operation 122 'mux' 'tmp_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%shl_ln49_6 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_7, i1 0" [d6.cpp:49]   --->   Operation 123 'bitconcatenate' 'shl_ln49_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln49_7 = zext i64 %shl_ln49_6" [d6.cpp:49]   --->   Operation 124 'zext' 'zext_ln49_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln49_8 = zext i64 %tmp_8" [d6.cpp:49]   --->   Operation 125 'zext' 'zext_ln49_8' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 126 '%mul_ln49_1 = mul i128 %zext_ln49_1, i128 %zext_ln49'
ST_2 : Operation 126 [1/1] (3.73ns)   --->   "%mul_ln49_1 = mul i128 %zext_ln49_1, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 126 'mul' 'mul_ln49_1' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_1)   --->   "%select_ln49_3 = select i1 %icmp_ln49, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 127 'select' 'select_ln49_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_1 = and i128 %mul_ln49_1, i128 %select_ln49_3" [d6.cpp:49]   --->   Operation 128 'and' 'and_ln49_1' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 129 '%mul_ln49_2 = mul i128 %zext_ln49_8, i128 %conv34_cast'
ST_2 : Operation 129 [1/1] (3.73ns)   --->   "%mul_ln49_2 = mul i128 %zext_ln49_8, i128 %conv34_cast" [d6.cpp:49]   --->   Operation 129 'mul' 'mul_ln49_2' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_2)   --->   "%select_ln49_4 = select i1 %icmp_ln49_5, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 130 'select' 'select_ln49_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 131 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_2 = and i128 %mul_ln49_2, i128 %select_ln49_4" [d6.cpp:49]   --->   Operation 131 'and' 'and_ln49_2' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49 = add i128 %and_ln49_2, i128 %and_ln49_1" [d6.cpp:49]   --->   Operation 132 'add' 'add_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 133 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_16 = add i128 %arr_9_load_1, i128 %add_ln49" [d6.cpp:49]   --->   Operation 133 'add' 'arr_16' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 134 [1/1] (0.41ns)   --->   "%select_ln49_1 = select i1 %icmp_ln49_5, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d6.cpp:49]   --->   Operation 134 'select' 'select_ln49_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%shl_ln49_7 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln49_1, i1 0" [d6.cpp:49]   --->   Operation 135 'bitconcatenate' 'shl_ln49_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln49_9 = zext i64 %shl_ln49_7" [d6.cpp:49]   --->   Operation 136 'zext' 'zext_ln49_9' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 137 '%mul_ln49_3 = mul i128 %zext_ln49_2, i128 %zext_ln49'
ST_2 : Operation 137 [1/1] (3.73ns)   --->   "%mul_ln49_3 = mul i128 %zext_ln49_2, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 137 'mul' 'mul_ln49_3' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_3)   --->   "%select_ln49_5 = select i1 %icmp_ln49_1, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 138 'select' 'select_ln49_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 139 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_3 = and i128 %mul_ln49_3, i128 %select_ln49_5" [d6.cpp:49]   --->   Operation 139 'and' 'and_ln49_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 140 '%mul_ln49_4 = mul i128 %zext_ln49_9, i128 %zext_ln49_8'
ST_2 : Operation 140 [1/1] (3.73ns)   --->   "%mul_ln49_4 = mul i128 %zext_ln49_9, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 140 'mul' 'mul_ln49_4' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_4)   --->   "%select_ln49_6 = select i1 %icmp_ln49_6, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 141 'select' 'select_ln49_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 142 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_4 = and i128 %mul_ln49_4, i128 %select_ln49_6" [d6.cpp:49]   --->   Operation 142 'and' 'and_ln49_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_2 = add i128 %and_ln49_4, i128 %and_ln49_3" [d6.cpp:49]   --->   Operation 143 'add' 'add_ln49_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 144 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_17 = add i128 %arr_10_load_1, i128 %add_ln49_2" [d6.cpp:49]   --->   Operation 144 'add' 'arr_17' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 145 [1/1] (0.77ns)   --->   "%tmp_s = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_8" [d6.cpp:49]   --->   Operation 145 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%shl_ln49_8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_s, i1 0" [d6.cpp:49]   --->   Operation 146 'bitconcatenate' 'shl_ln49_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln49_10 = zext i64 %shl_ln49_8" [d6.cpp:49]   --->   Operation 147 'zext' 'zext_ln49_10' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 148 '%mul_ln49_5 = mul i128 %zext_ln49_3, i128 %zext_ln49'
ST_2 : Operation 148 [1/1] (3.73ns)   --->   "%mul_ln49_5 = mul i128 %zext_ln49_3, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 148 'mul' 'mul_ln49_5' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_5)   --->   "%select_ln49_7 = select i1 %icmp_ln49_2, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 149 'select' 'select_ln49_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 150 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_5 = and i128 %mul_ln49_5, i128 %select_ln49_7" [d6.cpp:49]   --->   Operation 150 'and' 'and_ln49_5' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 151 '%mul_ln49_6 = mul i128 %zext_ln49_10, i128 %zext_ln49_8'
ST_2 : Operation 151 [1/1] (3.73ns)   --->   "%mul_ln49_6 = mul i128 %zext_ln49_10, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 151 'mul' 'mul_ln49_6' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_6)   --->   "%select_ln49_8 = select i1 %icmp_ln49_7, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 152 'select' 'select_ln49_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 153 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_6 = and i128 %mul_ln49_6, i128 %select_ln49_8" [d6.cpp:49]   --->   Operation 153 'and' 'and_ln49_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 154 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_4 = add i128 %and_ln49_6, i128 %and_ln49_5" [d6.cpp:49]   --->   Operation 154 'add' 'add_ln49_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 155 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_18 = add i128 %arr_11_load_1, i128 %add_ln49_4" [d6.cpp:49]   --->   Operation 155 'add' 'arr_18' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 156 [1/1] (0.77ns)   --->   "%tmp_1 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_9" [d6.cpp:49]   --->   Operation 156 'mux' 'tmp_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%shl_ln49_9 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_1, i1 0" [d6.cpp:49]   --->   Operation 157 'bitconcatenate' 'shl_ln49_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln49_11 = zext i64 %shl_ln49_9" [d6.cpp:49]   --->   Operation 158 'zext' 'zext_ln49_11' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 159 '%mul_ln49_7 = mul i128 %zext_ln49_4, i128 %zext_ln49'
ST_2 : Operation 159 [1/1] (3.73ns)   --->   "%mul_ln49_7 = mul i128 %zext_ln49_4, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 159 'mul' 'mul_ln49_7' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_7)   --->   "%select_ln49_9 = select i1 %icmp_ln49_3, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 160 'select' 'select_ln49_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_7 = and i128 %mul_ln49_7, i128 %select_ln49_9" [d6.cpp:49]   --->   Operation 161 'and' 'and_ln49_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 162 '%mul_ln49_8 = mul i128 %zext_ln49_11, i128 %zext_ln49_8'
ST_2 : Operation 162 [1/1] (3.73ns)   --->   "%mul_ln49_8 = mul i128 %zext_ln49_11, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 162 'mul' 'mul_ln49_8' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_8)   --->   "%select_ln49_10 = select i1 %icmp_ln49_8, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 163 'select' 'select_ln49_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 164 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_8 = and i128 %mul_ln49_8, i128 %select_ln49_10" [d6.cpp:49]   --->   Operation 164 'and' 'and_ln49_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 165 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_6 = add i128 %and_ln49_8, i128 %and_ln49_7" [d6.cpp:49]   --->   Operation 165 'add' 'add_ln49_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 166 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_19 = add i128 %arr_12_load_1, i128 %add_ln49_6" [d6.cpp:49]   --->   Operation 166 'add' 'arr_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 167 [1/1] (0.77ns)   --->   "%tmp_9 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_3" [d6.cpp:49]   --->   Operation 167 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 168 [1/1] (0.00ns)   --->   "%shl_ln49_s = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_9, i1 0" [d6.cpp:49]   --->   Operation 168 'bitconcatenate' 'shl_ln49_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln49_12 = zext i64 %shl_ln49_s" [d6.cpp:49]   --->   Operation 169 'zext' 'zext_ln49_12' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 170 '%mul_ln49_9 = mul i128 %zext_ln49_5, i128 %zext_ln49'
ST_2 : Operation 170 [1/1] (3.73ns)   --->   "%mul_ln49_9 = mul i128 %zext_ln49_5, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 170 'mul' 'mul_ln49_9' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_9)   --->   "%select_ln49_11 = select i1 %icmp_ln49_4, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 171 'select' 'select_ln49_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 172 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_9 = and i128 %mul_ln49_9, i128 %select_ln49_11" [d6.cpp:49]   --->   Operation 172 'and' 'and_ln49_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 173 '%mul_ln49_10 = mul i128 %zext_ln49_12, i128 %zext_ln49_8'
ST_2 : Operation 173 [1/1] (3.73ns)   --->   "%mul_ln49_10 = mul i128 %zext_ln49_12, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 173 'mul' 'mul_ln49_10' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_10)   --->   "%select_ln49_12 = select i1 %icmp_ln49_9, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 174 'select' 'select_ln49_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 175 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_10 = and i128 %mul_ln49_10, i128 %select_ln49_12" [d6.cpp:49]   --->   Operation 175 'and' 'and_ln49_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 176 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_8 = add i128 %and_ln49_10, i128 %and_ln49_9" [d6.cpp:49]   --->   Operation 176 'add' 'add_ln49_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 177 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_20 = add i128 %arr_13_load_1, i128 %add_ln49_8" [d6.cpp:49]   --->   Operation 177 'add' 'arr_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 178 [1/1] (0.77ns)   --->   "%tmp_10 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_4" [d6.cpp:49]   --->   Operation 178 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 179 [1/1] (0.00ns)   --->   "%shl_ln49_10 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_10, i1 0" [d6.cpp:49]   --->   Operation 179 'bitconcatenate' 'shl_ln49_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln49_13 = zext i64 %shl_ln49_10" [d6.cpp:49]   --->   Operation 180 'zext' 'zext_ln49_13' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 181 '%mul_ln49_11 = mul i128 %zext_ln49_6, i128 %zext_ln49'
ST_2 : Operation 181 [1/1] (3.73ns)   --->   "%mul_ln49_11 = mul i128 %zext_ln49_6, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 181 'mul' 'mul_ln49_11' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 182 '%mul_ln49_12 = mul i128 %zext_ln49_13, i128 %zext_ln49_8'
ST_2 : Operation 182 [1/1] (3.73ns)   --->   "%mul_ln49_12 = mul i128 %zext_ln49_13, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 182 'mul' 'mul_ln49_12' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_11)   --->   "%select_ln49_13 = select i1 %icmp_ln49_10, i128 340282366920938463463374607431768211455, i128 0" [d6.cpp:49]   --->   Operation 183 'select' 'select_ln49_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln49_11 = and i128 %mul_ln49_12, i128 %select_ln49_13" [d6.cpp:49]   --->   Operation 184 'and' 'and_ln49_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 185 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_10 = add i128 %and_ln49_11, i128 %mul_ln49_11" [d6.cpp:49]   --->   Operation 185 'add' 'add_ln49_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 186 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_21 = add i128 %arr_14_load_1, i128 %add_ln49_10" [d6.cpp:49]   --->   Operation 186 'add' 'arr_21' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 187 [1/1] (0.77ns)   --->   "%tmp_11 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln34_5" [d6.cpp:49]   --->   Operation 187 'mux' 'tmp_11' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (0.00ns)   --->   "%shl_ln49_11 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_11, i1 0" [d6.cpp:49]   --->   Operation 188 'bitconcatenate' 'shl_ln49_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln49_14 = zext i64 %shl_ln49_11" [d6.cpp:49]   --->   Operation 189 'zext' 'zext_ln49_14' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 190 '%mul_ln49_13 = mul i128 %zext_ln49_7, i128 %zext_ln49'
ST_2 : Operation 190 [1/1] (3.73ns)   --->   "%mul_ln49_13 = mul i128 %zext_ln49_7, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 190 'mul' 'mul_ln49_13' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (0.79ns)   --->   Input mux for Operation 191 '%mul_ln49_14 = mul i128 %zext_ln49_14, i128 %zext_ln49_8'
ST_2 : Operation 191 [1/1] (3.73ns)   --->   "%mul_ln49_14 = mul i128 %zext_ln49_14, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 191 'mul' 'mul_ln49_14' <Predicate = true> <Delay = 3.73> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 192 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_12 = add i128 %mul_ln49_14, i128 %mul_ln49_13" [d6.cpp:49]   --->   Operation 192 'add' 'add_ln49_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 193 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_22 = add i128 %arr_15_load_1, i128 %add_ln49_12" [d6.cpp:49]   --->   Operation 193 'add' 'arr_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 194 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_22, i128 %arr_15" [d6.cpp:36]   --->   Operation 194 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 195 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_21, i128 %arr_14" [d6.cpp:36]   --->   Operation 195 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 196 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_20, i128 %arr_13" [d6.cpp:36]   --->   Operation 196 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 197 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_19, i128 %arr_12" [d6.cpp:36]   --->   Operation 197 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 198 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_18, i128 %arr_11" [d6.cpp:36]   --->   Operation 198 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 199 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_17, i128 %arr_10" [d6.cpp:36]   --->   Operation 199 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 200 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr_16, i128 %arr_9" [d6.cpp:36]   --->   Operation 200 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 201 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %arr, i128 %arr_8" [d6.cpp:36]   --->   Operation 201 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_2 : Operation 202 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.inc50.1.1" [d6.cpp:36]   --->   Operation 202 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.579ns
The critical path consists of the following:
	'alloca' operation ('i') [34]  (0.000 ns)
	'load' operation ('i', d6.cpp:49) on local variable 'i' [64]  (0.000 ns)
	'add' operation ('empty', d6.cpp:49) [125]  (0.797 ns)
	'icmp' operation ('icmp_ln49_5', d6.cpp:49) [128]  (0.797 ns)
	'select' operation ('select_ln34_1', d6.cpp:34) [137]  (0.000 ns)
	'sub' operation ('sub_ln34_8', d6.cpp:34) [151]  (0.797 ns)
	'sub' operation ('sub_ln34_9', d6.cpp:34) [165]  (0.797 ns)
	'sub' operation ('sub_ln34_3', d6.cpp:34) [180]  (0.797 ns)
	'sub' operation ('sub_ln34_4', d6.cpp:34) [194]  (0.797 ns)
	'sub' operation ('sub_ln34_5', d6.cpp:34) [207]  (0.797 ns)

 <State 2>: 7.101ns
The critical path consists of the following:
	'mux' operation ('tmp_10', d6.cpp:49) [195]  (0.770 ns)
	multiplexor before operation 'mul' with delay (0.796 ns)
'mul' operation ('mul_ln49_12', d6.cpp:49) [201]  (3.734 ns)
	'and' operation ('and_ln49_11', d6.cpp:49) [203]  (0.379 ns)
	'add' operation ('add_ln49_10', d6.cpp:49) [204]  (0.000 ns)
	'add' operation ('arr', d6.cpp:49) [205]  (0.995 ns)
	'store' operation ('store_ln36', d6.cpp:36) of variable 'arr', d6.cpp:49 on local variable 'arr' [218]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
