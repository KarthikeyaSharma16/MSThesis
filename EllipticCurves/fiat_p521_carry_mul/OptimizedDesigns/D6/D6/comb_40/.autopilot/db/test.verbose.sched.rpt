

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:17:16 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_40 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       94|       94|  0.940 us|  0.940 us|   95|   95|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 31
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 32 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 32 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 33 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 33 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 34 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%add83229_loc = alloca i64 1"   --->   Operation 35 'alloca' 'add83229_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 36 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 37 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 38 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 39 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 40 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 41 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 42 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 43 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 44 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 45 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d6.cpp:22]   --->   Operation 54 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d6.cpp:29]   --->   Operation 55 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln99_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d6.cpp:99]   --->   Operation 56 'partselect' 'trunc_ln99_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d6.cpp:22]   --->   Operation 57 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d6.cpp:22]   --->   Operation 58 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 59 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 60 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 60 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 61 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 61 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 62 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 62 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 63 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 63 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 64 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 64 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 65 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 65 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 66 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 66 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 67 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 67 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 68 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 68 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d6.cpp:29]   --->   Operation 69 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 70 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d6.cpp:29]   --->   Operation 70 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 71 [8/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 71 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 72 [7/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 72 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 73 [6/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 73 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 74 [5/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 74 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 75 [4/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 75 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 76 [3/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 76 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 77 [2/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 77 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 78 [1/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 78 'readreq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 79 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 79 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 80 [1/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 80 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 6.10>
ST_22 : Operation 81 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 81 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 82 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 82 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 83 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 83 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 84 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 85 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 85 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 86 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 86 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 87 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 87 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 88 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 88 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 89 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 89 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i63 %arg2_r_8_loc"   --->   Operation 90 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 91 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 92 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 93 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 94 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 95 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 95 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 96 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 96 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 97 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 97 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 98 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 98 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 99 [1/1] (0.00ns)   --->   "%mul = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %arg2_r_8_loc_load, i1 0"   --->   Operation 99 'bitconcatenate' 'mul' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 100 [1/1] (0.00ns)   --->   "%conv34 = zext i64 %mul"   --->   Operation 100 'zext' 'conv34' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%shl_ln49 = shl i64 %arg2_r_7_loc_load, i64 1" [d6.cpp:49]   --->   Operation 101 'shl' 'shl_ln49' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%shl_ln49_1 = shl i64 %arg2_r_5_loc_load, i64 1" [d6.cpp:49]   --->   Operation 102 'shl' 'shl_ln49_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (0.00ns)   --->   "%shl_ln49_2 = shl i64 %arg2_r_3_loc_load, i64 1" [d6.cpp:49]   --->   Operation 103 'shl' 'shl_ln49_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i64 %arg1_r_6_loc_load" [d6.cpp:49]   --->   Operation 104 'zext' 'zext_ln49' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i64 %arg1_r_4_loc_load" [d6.cpp:49]   --->   Operation 105 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 106 '%mul_ln49 = mul i128 %conv34, i128 %zext_ln49_1'
ST_22 : Operation 106 [1/1] (3.34ns)   --->   "%mul_ln49 = mul i128 %conv34, i128 %zext_ln49_1" [d6.cpp:49]   --->   Operation 106 'mul' 'mul_ln49' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 107 [2/2] (1.08ns)   --->   "%call_ln29 = call void @test_Pipeline_VITIS_LOOP_56_5, i64 %mem, i64 %arg1_read, i61 %trunc_ln29_1, i128 %add83229_loc" [d6.cpp:29]   --->   Operation 107 'call' 'call_ln29' <Predicate = true> <Delay = 1.08> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%shl_ln49_3 = shl i64 %arg2_r_6_loc_load, i64 1" [d6.cpp:49]   --->   Operation 108 'shl' 'shl_ln49_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i64 %shl_ln49_1" [d6.cpp:49]   --->   Operation 109 'zext' 'zext_ln49_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln49_3 = zext i64 %arg1_r_7_loc_load" [d6.cpp:49]   --->   Operation 110 'zext' 'zext_ln49_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln49_4 = zext i64 %arg1_r_5_loc_load" [d6.cpp:49]   --->   Operation 111 'zext' 'zext_ln49_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln49_5 = zext i64 %arg1_r_2_loc_load" [d6.cpp:49]   --->   Operation 112 'zext' 'zext_ln49_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln49_6 = zext i64 %shl_ln49" [d6.cpp:49]   --->   Operation 113 'zext' 'zext_ln49_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln49_7 = zext i64 %shl_ln49_3" [d6.cpp:49]   --->   Operation 114 'zext' 'zext_ln49_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%shl_ln49_4 = shl i64 %arg2_r_4_loc_load, i64 1" [d6.cpp:49]   --->   Operation 115 'shl' 'shl_ln49_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%shl_ln49_5 = shl i64 %arg2_r_2_loc_load, i64 1" [d6.cpp:49]   --->   Operation 116 'shl' 'shl_ln49_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 117 '%mul_ln49_1 = mul i128 %zext_ln49_2, i128 %zext_ln49_3'
ST_22 : Operation 117 [1/1] (3.34ns)   --->   "%mul_ln49_1 = mul i128 %zext_ln49_2, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 117 'mul' 'mul_ln49_1' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 118 '%mul_ln49_2 = mul i128 %zext_ln49_7, i128 %zext_ln49'
ST_22 : Operation 118 [1/1] (3.34ns)   --->   "%mul_ln49_2 = mul i128 %zext_ln49_7, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 118 'mul' 'mul_ln49_2' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 119 '%mul_ln49_3 = mul i128 %zext_ln49_6, i128 %zext_ln49_4'
ST_22 : Operation 119 [1/1] (3.34ns)   --->   "%mul_ln49_3 = mul i128 %zext_ln49_6, i128 %zext_ln49_4" [d6.cpp:49]   --->   Operation 119 'mul' 'mul_ln49_3' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln49_8 = zext i64 %arg1_r_3_loc_load" [d6.cpp:49]   --->   Operation 120 'zext' 'zext_ln49_8' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 121 '%mul_ln49_4 = mul i128 %conv34, i128 %zext_ln49_5'
ST_22 : Operation 121 [1/1] (3.34ns)   --->   "%mul_ln49_4 = mul i128 %conv34, i128 %zext_ln49_5" [d6.cpp:49]   --->   Operation 121 'mul' 'mul_ln49_4' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln49_9 = zext i64 %shl_ln49_4" [d6.cpp:49]   --->   Operation 122 'zext' 'zext_ln49_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln49_10 = zext i64 %shl_ln49_2" [d6.cpp:49]   --->   Operation 123 'zext' 'zext_ln49_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%shl_ln49_6 = shl i64 %arg2_r_1_loc_load, i64 1" [d6.cpp:49]   --->   Operation 124 'shl' 'shl_ln49_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 125 '%mul_ln49_5 = mul i128 %zext_ln49_6, i128 %zext_ln49_3'
ST_22 : Operation 125 [1/1] (3.34ns)   --->   "%mul_ln49_5 = mul i128 %zext_ln49_6, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 125 'mul' 'mul_ln49_5' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 126 '%mul_ln49_6 = mul i128 %zext_ln49_10, i128 %zext_ln49_3'
ST_22 : Operation 126 [1/1] (3.34ns)   --->   "%mul_ln49_6 = mul i128 %zext_ln49_10, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 126 'mul' 'mul_ln49_6' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 127 '%mul_ln49_7 = mul i128 %conv34, i128 %zext_ln49'
ST_22 : Operation 127 [1/1] (3.34ns)   --->   "%mul_ln49_7 = mul i128 %conv34, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 127 'mul' 'mul_ln49_7' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 128 '%mul_ln49_8 = mul i128 %zext_ln49_9, i128 %zext_ln49'
ST_22 : Operation 128 [1/1] (3.34ns)   --->   "%mul_ln49_8 = mul i128 %zext_ln49_9, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 128 'mul' 'mul_ln49_8' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 129 '%mul_ln49_9 = mul i128 %zext_ln49_2, i128 %zext_ln49_4'
ST_22 : Operation 129 [1/1] (3.34ns)   --->   "%mul_ln49_9 = mul i128 %zext_ln49_2, i128 %zext_ln49_4" [d6.cpp:49]   --->   Operation 129 'mul' 'mul_ln49_9' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 130 '%mul_ln49_10 = mul i128 %zext_ln49_7, i128 %zext_ln49_1'
ST_22 : Operation 130 [1/1] (3.34ns)   --->   "%mul_ln49_10 = mul i128 %zext_ln49_7, i128 %zext_ln49_1" [d6.cpp:49]   --->   Operation 130 'mul' 'mul_ln49_10' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 131 '%mul_ln49_11 = mul i128 %zext_ln49_6, i128 %zext_ln49_8'
ST_22 : Operation 131 [1/1] (3.34ns)   --->   "%mul_ln49_11 = mul i128 %zext_ln49_6, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 131 'mul' 'mul_ln49_11' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln49_11 = zext i64 %arg1_r_1_loc_load" [d6.cpp:49]   --->   Operation 132 'zext' 'zext_ln49_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln49_12 = zext i64 %arg1_r_8_loc_load" [d6.cpp:49]   --->   Operation 133 'zext' 'zext_ln49_12' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln49_13 = zext i64 %shl_ln49_5" [d6.cpp:49]   --->   Operation 134 'zext' 'zext_ln49_13' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln49_14 = zext i64 %shl_ln49_6" [d6.cpp:49]   --->   Operation 135 'zext' 'zext_ln49_14' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 136 '%mul_ln49_12 = mul i128 %conv34, i128 %zext_ln49_3'
ST_22 : Operation 136 [1/1] (3.34ns)   --->   "%mul_ln49_12 = mul i128 %conv34, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 136 'mul' 'mul_ln49_12' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 137 '%mul_ln49_13 = mul i128 %zext_ln49_7, i128 %zext_ln49_3'
ST_22 : Operation 137 [1/1] (3.34ns)   --->   "%mul_ln49_13 = mul i128 %zext_ln49_7, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 137 'mul' 'mul_ln49_13' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 138 '%mul_ln49_14 = mul i128 %zext_ln49_9, i128 %zext_ln49_3'
ST_22 : Operation 138 [1/1] (3.34ns)   --->   "%mul_ln49_14 = mul i128 %zext_ln49_9, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 138 'mul' 'mul_ln49_14' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 139 '%mul_ln49_15 = mul i128 %zext_ln49_13, i128 %zext_ln49_3'
ST_22 : Operation 139 [1/1] (3.34ns)   --->   "%mul_ln49_15 = mul i128 %zext_ln49_13, i128 %zext_ln49_3" [d6.cpp:49]   --->   Operation 139 'mul' 'mul_ln49_15' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 140 '%mul_ln49_16 = mul i128 %zext_ln49_6, i128 %zext_ln49'
ST_22 : Operation 140 [1/1] (3.34ns)   --->   "%mul_ln49_16 = mul i128 %zext_ln49_6, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 140 'mul' 'mul_ln49_16' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 141 '%mul_ln49_17 = mul i128 %zext_ln49_2, i128 %zext_ln49'
ST_22 : Operation 141 [1/1] (3.34ns)   --->   "%mul_ln49_17 = mul i128 %zext_ln49_2, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 141 'mul' 'mul_ln49_17' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 142 '%mul_ln49_18 = mul i128 %zext_ln49_10, i128 %zext_ln49'
ST_22 : Operation 142 [1/1] (3.34ns)   --->   "%mul_ln49_18 = mul i128 %zext_ln49_10, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 142 'mul' 'mul_ln49_18' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 143 '%mul_ln49_19 = mul i128 %conv34, i128 %zext_ln49_4'
ST_22 : Operation 143 [1/1] (3.34ns)   --->   "%mul_ln49_19 = mul i128 %conv34, i128 %zext_ln49_4" [d6.cpp:49]   --->   Operation 143 'mul' 'mul_ln49_19' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 144 '%mul_ln49_20 = mul i128 %zext_ln49_7, i128 %zext_ln49_4'
ST_22 : Operation 144 [1/1] (3.34ns)   --->   "%mul_ln49_20 = mul i128 %zext_ln49_7, i128 %zext_ln49_4" [d6.cpp:49]   --->   Operation 144 'mul' 'mul_ln49_20' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 145 '%mul_ln49_21 = mul i128 %zext_ln49_9, i128 %zext_ln49_4'
ST_22 : Operation 145 [1/1] (3.34ns)   --->   "%mul_ln49_21 = mul i128 %zext_ln49_9, i128 %zext_ln49_4" [d6.cpp:49]   --->   Operation 145 'mul' 'mul_ln49_21' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 146 '%mul_ln49_22 = mul i128 %zext_ln49_6, i128 %zext_ln49_1'
ST_22 : Operation 146 [1/1] (3.34ns)   --->   "%mul_ln49_22 = mul i128 %zext_ln49_6, i128 %zext_ln49_1" [d6.cpp:49]   --->   Operation 146 'mul' 'mul_ln49_22' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 147 '%mul_ln49_23 = mul i128 %zext_ln49_2, i128 %zext_ln49_1'
ST_22 : Operation 147 [1/1] (3.34ns)   --->   "%mul_ln49_23 = mul i128 %zext_ln49_2, i128 %zext_ln49_1" [d6.cpp:49]   --->   Operation 147 'mul' 'mul_ln49_23' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 148 '%mul_ln49_24 = mul i128 %conv34, i128 %zext_ln49_8'
ST_22 : Operation 148 [1/1] (3.34ns)   --->   "%mul_ln49_24 = mul i128 %conv34, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 148 'mul' 'mul_ln49_24' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 149 '%mul_ln49_25 = mul i128 %zext_ln49_7, i128 %zext_ln49_8'
ST_22 : Operation 149 [1/1] (3.34ns)   --->   "%mul_ln49_25 = mul i128 %zext_ln49_7, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 149 'mul' 'mul_ln49_25' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 150 '%mul_ln49_26 = mul i128 %zext_ln49_6, i128 %zext_ln49_5'
ST_22 : Operation 150 [1/1] (3.34ns)   --->   "%mul_ln49_26 = mul i128 %zext_ln49_6, i128 %zext_ln49_5" [d6.cpp:49]   --->   Operation 150 'mul' 'mul_ln49_26' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 151 '%mul_ln49_27 = mul i128 %conv34, i128 %zext_ln49_11'
ST_22 : Operation 151 [1/1] (3.34ns)   --->   "%mul_ln49_27 = mul i128 %conv34, i128 %zext_ln49_11" [d6.cpp:49]   --->   Operation 151 'mul' 'mul_ln49_27' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 152 '%arr_8 = mul i128 %conv34, i128 %zext_ln49_12'
ST_22 : Operation 152 [1/1] (3.34ns)   --->   "%arr_8 = mul i128 %conv34, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 152 'mul' 'arr_8' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 153 '%mul_ln49_29 = mul i128 %zext_ln49_6, i128 %zext_ln49_12'
ST_22 : Operation 153 [1/1] (3.34ns)   --->   "%mul_ln49_29 = mul i128 %zext_ln49_6, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 153 'mul' 'mul_ln49_29' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 154 '%mul_ln49_30 = mul i128 %zext_ln49_7, i128 %zext_ln49_12'
ST_22 : Operation 154 [1/1] (3.34ns)   --->   "%mul_ln49_30 = mul i128 %zext_ln49_7, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 154 'mul' 'mul_ln49_30' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 155 '%mul_ln49_31 = mul i128 %zext_ln49_2, i128 %zext_ln49_12'
ST_22 : Operation 155 [1/1] (3.34ns)   --->   "%mul_ln49_31 = mul i128 %zext_ln49_2, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 155 'mul' 'mul_ln49_31' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 156 '%mul_ln49_32 = mul i128 %zext_ln49_9, i128 %zext_ln49_12'
ST_22 : Operation 156 [1/1] (3.34ns)   --->   "%mul_ln49_32 = mul i128 %zext_ln49_9, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 156 'mul' 'mul_ln49_32' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 157 '%mul_ln49_33 = mul i128 %zext_ln49_10, i128 %zext_ln49_12'
ST_22 : Operation 157 [1/1] (3.34ns)   --->   "%mul_ln49_33 = mul i128 %zext_ln49_10, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 157 'mul' 'mul_ln49_33' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 158 '%mul_ln49_34 = mul i128 %zext_ln49_13, i128 %zext_ln49_12'
ST_22 : Operation 158 [1/1] (3.34ns)   --->   "%mul_ln49_34 = mul i128 %zext_ln49_13, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 158 'mul' 'mul_ln49_34' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 159 '%mul_ln49_35 = mul i128 %zext_ln49_14, i128 %zext_ln49_12'
ST_22 : Operation 159 [1/1] (3.34ns)   --->   "%mul_ln49_35 = mul i128 %zext_ln49_14, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 159 'mul' 'mul_ln49_35' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i64 %arg2_r_loc_load" [d6.cpp:80]   --->   Operation 160 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 161 '%mul_ln80 = mul i128 %zext_ln80, i128 %zext_ln49_3'
ST_22 : Operation 161 [1/1] (3.34ns)   --->   "%mul_ln80 = mul i128 %zext_ln80, i128 %zext_ln49_3" [d6.cpp:80]   --->   Operation 161 'mul' 'mul_ln80' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i64 %arg2_r_1_loc_load" [d6.cpp:80]   --->   Operation 162 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 163 '%mul_ln80_1 = mul i128 %zext_ln80_1, i128 %zext_ln49'
ST_22 : Operation 163 [1/1] (3.34ns)   --->   "%mul_ln80_1 = mul i128 %zext_ln80_1, i128 %zext_ln49" [d6.cpp:80]   --->   Operation 163 'mul' 'mul_ln80_1' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 164 '%mul_ln80_2 = mul i128 %zext_ln80, i128 %zext_ln49'
ST_22 : Operation 164 [1/1] (3.34ns)   --->   "%mul_ln80_2 = mul i128 %zext_ln80, i128 %zext_ln49" [d6.cpp:80]   --->   Operation 164 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i64 %arg2_r_2_loc_load" [d6.cpp:80]   --->   Operation 165 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 166 '%mul_ln80_3 = mul i128 %zext_ln80_2, i128 %zext_ln49_4'
ST_22 : Operation 166 [1/1] (3.34ns)   --->   "%mul_ln80_3 = mul i128 %zext_ln80_2, i128 %zext_ln49_4" [d6.cpp:80]   --->   Operation 166 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 167 '%mul_ln80_4 = mul i128 %zext_ln80_1, i128 %zext_ln49_4'
ST_22 : Operation 167 [1/1] (3.34ns)   --->   "%mul_ln80_4 = mul i128 %zext_ln80_1, i128 %zext_ln49_4" [d6.cpp:80]   --->   Operation 167 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 168 '%mul_ln80_5 = mul i128 %zext_ln80, i128 %zext_ln49_4'
ST_22 : Operation 168 [1/1] (3.34ns)   --->   "%mul_ln80_5 = mul i128 %zext_ln80, i128 %zext_ln49_4" [d6.cpp:80]   --->   Operation 168 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i64 %arg2_r_3_loc_load" [d6.cpp:80]   --->   Operation 169 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 170 '%mul_ln80_6 = mul i128 %zext_ln80_3, i128 %zext_ln49_1'
ST_22 : Operation 170 [1/1] (3.34ns)   --->   "%mul_ln80_6 = mul i128 %zext_ln80_3, i128 %zext_ln49_1" [d6.cpp:80]   --->   Operation 170 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 171 '%mul_ln80_7 = mul i128 %zext_ln80_2, i128 %zext_ln49_1'
ST_22 : Operation 171 [1/1] (3.34ns)   --->   "%mul_ln80_7 = mul i128 %zext_ln80_2, i128 %zext_ln49_1" [d6.cpp:80]   --->   Operation 171 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 172 '%mul_ln80_8 = mul i128 %zext_ln80_1, i128 %zext_ln49_1'
ST_22 : Operation 172 [1/1] (3.34ns)   --->   "%mul_ln80_8 = mul i128 %zext_ln80_1, i128 %zext_ln49_1" [d6.cpp:80]   --->   Operation 172 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 173 '%mul_ln80_9 = mul i128 %zext_ln80, i128 %zext_ln49_1'
ST_22 : Operation 173 [1/1] (3.34ns)   --->   "%mul_ln80_9 = mul i128 %zext_ln80, i128 %zext_ln49_1" [d6.cpp:80]   --->   Operation 173 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i64 %arg2_r_4_loc_load" [d6.cpp:80]   --->   Operation 174 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 175 '%mul_ln80_10 = mul i128 %zext_ln80_4, i128 %zext_ln49_8'
ST_22 : Operation 175 [1/1] (3.34ns)   --->   "%mul_ln80_10 = mul i128 %zext_ln80_4, i128 %zext_ln49_8" [d6.cpp:80]   --->   Operation 175 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 176 '%mul_ln80_11 = mul i128 %zext_ln80_3, i128 %zext_ln49_8'
ST_22 : Operation 176 [1/1] (3.34ns)   --->   "%mul_ln80_11 = mul i128 %zext_ln80_3, i128 %zext_ln49_8" [d6.cpp:80]   --->   Operation 176 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 177 '%mul_ln80_12 = mul i128 %zext_ln80_2, i128 %zext_ln49_8'
ST_22 : Operation 177 [1/1] (3.34ns)   --->   "%mul_ln80_12 = mul i128 %zext_ln80_2, i128 %zext_ln49_8" [d6.cpp:80]   --->   Operation 177 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 178 '%mul_ln80_13 = mul i128 %zext_ln80_1, i128 %zext_ln49_8'
ST_22 : Operation 178 [1/1] (3.34ns)   --->   "%mul_ln80_13 = mul i128 %zext_ln80_1, i128 %zext_ln49_8" [d6.cpp:80]   --->   Operation 178 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 179 '%mul_ln80_14 = mul i128 %zext_ln80, i128 %zext_ln49_8'
ST_22 : Operation 179 [1/1] (3.34ns)   --->   "%mul_ln80_14 = mul i128 %zext_ln80, i128 %zext_ln49_8" [d6.cpp:80]   --->   Operation 179 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i64 %arg2_r_5_loc_load" [d6.cpp:80]   --->   Operation 180 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 181 '%mul_ln80_15 = mul i128 %zext_ln80_5, i128 %zext_ln49_5'
ST_22 : Operation 181 [1/1] (3.34ns)   --->   "%mul_ln80_15 = mul i128 %zext_ln80_5, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 181 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 182 '%mul_ln80_16 = mul i128 %zext_ln80_4, i128 %zext_ln49_5'
ST_22 : Operation 182 [1/1] (3.34ns)   --->   "%mul_ln80_16 = mul i128 %zext_ln80_4, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 182 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 183 '%mul_ln80_17 = mul i128 %zext_ln80_3, i128 %zext_ln49_5'
ST_22 : Operation 183 [1/1] (3.34ns)   --->   "%mul_ln80_17 = mul i128 %zext_ln80_3, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 183 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 184 '%mul_ln80_18 = mul i128 %zext_ln80_2, i128 %zext_ln49_5'
ST_22 : Operation 184 [1/1] (3.34ns)   --->   "%mul_ln80_18 = mul i128 %zext_ln80_2, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 184 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 185 '%mul_ln80_19 = mul i128 %zext_ln80_1, i128 %zext_ln49_5'
ST_22 : Operation 185 [1/1] (3.34ns)   --->   "%mul_ln80_19 = mul i128 %zext_ln80_1, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 185 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 186 '%mul_ln80_20 = mul i128 %zext_ln80, i128 %zext_ln49_5'
ST_22 : Operation 186 [1/1] (3.34ns)   --->   "%mul_ln80_20 = mul i128 %zext_ln80, i128 %zext_ln49_5" [d6.cpp:80]   --->   Operation 186 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i64 %arg2_r_6_loc_load" [d6.cpp:80]   --->   Operation 187 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 188 '%mul_ln80_21 = mul i128 %zext_ln80_6, i128 %zext_ln49_11'
ST_22 : Operation 188 [1/1] (3.34ns)   --->   "%mul_ln80_21 = mul i128 %zext_ln80_6, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 188 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 189 '%mul_ln80_22 = mul i128 %zext_ln80_5, i128 %zext_ln49_11'
ST_22 : Operation 189 [1/1] (3.34ns)   --->   "%mul_ln80_22 = mul i128 %zext_ln80_5, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 189 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 190 '%mul_ln80_23 = mul i128 %zext_ln80_4, i128 %zext_ln49_11'
ST_22 : Operation 190 [1/1] (3.34ns)   --->   "%mul_ln80_23 = mul i128 %zext_ln80_4, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 190 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 191 '%mul_ln80_24 = mul i128 %zext_ln80_3, i128 %zext_ln49_11'
ST_22 : Operation 191 [1/1] (3.34ns)   --->   "%mul_ln80_24 = mul i128 %zext_ln80_3, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 191 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 192 '%mul_ln80_25 = mul i128 %zext_ln80_2, i128 %zext_ln49_11'
ST_22 : Operation 192 [1/1] (3.34ns)   --->   "%mul_ln80_25 = mul i128 %zext_ln80_2, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 192 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 193 '%mul_ln80_26 = mul i128 %zext_ln80_1, i128 %zext_ln49_11'
ST_22 : Operation 193 [1/1] (3.34ns)   --->   "%mul_ln80_26 = mul i128 %zext_ln80_1, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 193 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 194 '%mul_ln80_27 = mul i128 %zext_ln80, i128 %zext_ln49_11'
ST_22 : Operation 194 [1/1] (3.34ns)   --->   "%mul_ln80_27 = mul i128 %zext_ln80, i128 %zext_ln49_11" [d6.cpp:80]   --->   Operation 194 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i64 %arg1_r_loc_load" [d6.cpp:80]   --->   Operation 195 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i64 %arg2_r_7_loc_load" [d6.cpp:80]   --->   Operation 196 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 197 '%mul_ln80_28 = mul i128 %zext_ln80_8, i128 %zext_ln80_7'
ST_22 : Operation 197 [1/1] (3.34ns)   --->   "%mul_ln80_28 = mul i128 %zext_ln80_8, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 197 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 198 [1/1] (1.57ns)   --->   "%add_ln80 = add i128 %mul_ln80_21, i128 %mul_ln80_28" [d6.cpp:80]   --->   Operation 198 'add' 'add_ln80' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 199 [1/1] (1.57ns)   --->   "%add_ln80_1 = add i128 %mul_ln80_15, i128 %mul_ln80_10" [d6.cpp:80]   --->   Operation 199 'add' 'add_ln80_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i128 %add_ln80" [d6.cpp:80]   --->   Operation 200 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 201 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i128 %add_ln80_1" [d6.cpp:80]   --->   Operation 201 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 202 [1/1] (1.57ns)   --->   "%add_ln80_3 = add i128 %mul_ln80, i128 %mul_ln80_1" [d6.cpp:80]   --->   Operation 202 'add' 'add_ln80_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 203 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_4 = add i128 %mul_ln80_3, i128 %arr_8" [d6.cpp:80]   --->   Operation 203 'add' 'add_ln80_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 204 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_5 = add i128 %add_ln80_4, i128 %mul_ln80_6" [d6.cpp:80]   --->   Operation 204 'add' 'add_ln80_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 205 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 205 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 206 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i128 %add_ln80_5" [d6.cpp:80]   --->   Operation 206 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 207 '%mul_ln80_29 = mul i128 %zext_ln80_6, i128 %zext_ln80_7'
ST_22 : Operation 207 [1/1] (3.34ns)   --->   "%mul_ln80_29 = mul i128 %zext_ln80_6, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 207 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 208 [1/1] (1.57ns)   --->   "%add_ln80_10 = add i128 %mul_ln80_29, i128 %mul_ln49_29" [d6.cpp:80]   --->   Operation 208 'add' 'add_ln80_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 209 [1/1] (1.57ns)   --->   "%add_ln80_11 = add i128 %mul_ln80_22, i128 %mul_ln80_16" [d6.cpp:80]   --->   Operation 209 'add' 'add_ln80_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 210 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i128 %add_ln80_10" [d6.cpp:80]   --->   Operation 210 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 211 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i128 %add_ln80_11" [d6.cpp:80]   --->   Operation 211 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 212 [1/1] (1.57ns)   --->   "%add_ln80_13 = add i128 %mul_ln80_2, i128 %mul_ln80_4" [d6.cpp:80]   --->   Operation 212 'add' 'add_ln80_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 213 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_14 = add i128 %mul_ln80_7, i128 %mul_ln49_12" [d6.cpp:80]   --->   Operation 213 'add' 'add_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 214 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_15 = add i128 %add_ln80_14, i128 %mul_ln80_11" [d6.cpp:80]   --->   Operation 214 'add' 'add_ln80_15' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 215 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i128 %add_ln80_13" [d6.cpp:80]   --->   Operation 215 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 216 [1/1] (0.00ns)   --->   "%trunc_ln80_7 = trunc i128 %add_ln80_15" [d6.cpp:80]   --->   Operation 216 'trunc' 'trunc_ln80_7' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 217 '%mul_ln80_30 = mul i128 %zext_ln80_5, i128 %zext_ln80_7'
ST_22 : Operation 217 [1/1] (3.34ns)   --->   "%mul_ln80_30 = mul i128 %zext_ln80_5, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 217 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 218 [1/1] (1.57ns)   --->   "%add_ln80_20 = add i128 %mul_ln49_30, i128 %mul_ln49_5" [d6.cpp:80]   --->   Operation 218 'add' 'add_ln80_20' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 219 [1/1] (1.57ns)   --->   "%add_ln80_21 = add i128 %mul_ln80_30, i128 %mul_ln80_23" [d6.cpp:80]   --->   Operation 219 'add' 'add_ln80_21' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 220 [1/1] (0.00ns)   --->   "%trunc_ln80_8 = trunc i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 220 'trunc' 'trunc_ln80_8' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 221 [1/1] (0.00ns)   --->   "%trunc_ln80_9 = trunc i128 %add_ln80_21" [d6.cpp:80]   --->   Operation 221 'trunc' 'trunc_ln80_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 222 [1/1] (1.57ns)   --->   "%add_ln80_23 = add i128 %mul_ln80_5, i128 %mul_ln80_8" [d6.cpp:80]   --->   Operation 222 'add' 'add_ln80_23' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 223 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_24 = add i128 %mul_ln80_12, i128 %mul_ln49_7" [d6.cpp:80]   --->   Operation 223 'add' 'add_ln80_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 224 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_25 = add i128 %add_ln80_24, i128 %mul_ln80_17" [d6.cpp:80]   --->   Operation 224 'add' 'add_ln80_25' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 225 [1/1] (0.00ns)   --->   "%trunc_ln80_10 = trunc i128 %add_ln80_23" [d6.cpp:80]   --->   Operation 225 'trunc' 'trunc_ln80_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 226 [1/1] (0.00ns)   --->   "%trunc_ln80_11 = trunc i128 %add_ln80_25" [d6.cpp:80]   --->   Operation 226 'trunc' 'trunc_ln80_11' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 227 '%mul_ln80_31 = mul i128 %zext_ln80_4, i128 %zext_ln80_7'
ST_22 : Operation 227 [1/1] (3.34ns)   --->   "%mul_ln80_31 = mul i128 %zext_ln80_4, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 227 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 228 [1/1] (1.57ns)   --->   "%add_ln80_30 = add i128 %mul_ln49_13, i128 %mul_ln49_16" [d6.cpp:80]   --->   Operation 228 'add' 'add_ln80_30' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 229 [1/1] (1.57ns)   --->   "%add_ln80_31 = add i128 %mul_ln49_31, i128 %mul_ln80_31" [d6.cpp:80]   --->   Operation 229 'add' 'add_ln80_31' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln80_12 = trunc i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 230 'trunc' 'trunc_ln80_12' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln80_13 = trunc i128 %add_ln80_31" [d6.cpp:80]   --->   Operation 231 'trunc' 'trunc_ln80_13' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 232 [1/1] (1.57ns)   --->   "%add_ln80_33 = add i128 %mul_ln80_9, i128 %mul_ln80_13" [d6.cpp:80]   --->   Operation 232 'add' 'add_ln80_33' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 233 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_34 = add i128 %mul_ln80_18, i128 %mul_ln49_19" [d6.cpp:80]   --->   Operation 233 'add' 'add_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 234 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_35 = add i128 %add_ln80_34, i128 %mul_ln80_24" [d6.cpp:80]   --->   Operation 234 'add' 'add_ln80_35' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln80_14 = trunc i128 %add_ln80_33" [d6.cpp:80]   --->   Operation 235 'trunc' 'trunc_ln80_14' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln80_15 = trunc i128 %add_ln80_35" [d6.cpp:80]   --->   Operation 236 'trunc' 'trunc_ln80_15' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 237 '%mul_ln80_32 = mul i128 %zext_ln80_3, i128 %zext_ln80_7'
ST_22 : Operation 237 [1/1] (3.34ns)   --->   "%mul_ln80_32 = mul i128 %zext_ln80_3, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 237 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 238 [1/1] (1.57ns)   --->   "%add_ln80_40 = add i128 %mul_ln49_2, i128 %mul_ln49_3" [d6.cpp:80]   --->   Operation 238 'add' 'add_ln80_40' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 239 [1/1] (1.57ns)   --->   "%add_ln80_41 = add i128 %mul_ln49_1, i128 %mul_ln49_32" [d6.cpp:80]   --->   Operation 239 'add' 'add_ln80_41' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 240 [1/1] (0.00ns)   --->   "%trunc_ln80_16 = trunc i128 %add_ln80_40" [d6.cpp:80]   --->   Operation 240 'trunc' 'trunc_ln80_16' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 241 [1/1] (0.00ns)   --->   "%trunc_ln80_17 = trunc i128 %add_ln80_41" [d6.cpp:80]   --->   Operation 241 'trunc' 'trunc_ln80_17' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 242 [1/1] (1.57ns)   --->   "%add_ln80_43 = add i128 %mul_ln80_14, i128 %mul_ln80_19" [d6.cpp:80]   --->   Operation 242 'add' 'add_ln80_43' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 243 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_44 = add i128 %mul_ln80_25, i128 %mul_ln49" [d6.cpp:80]   --->   Operation 243 'add' 'add_ln80_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 244 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_45 = add i128 %add_ln80_44, i128 %mul_ln80_32" [d6.cpp:80]   --->   Operation 244 'add' 'add_ln80_45' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 245 [1/1] (0.00ns)   --->   "%trunc_ln80_18 = trunc i128 %add_ln80_43" [d6.cpp:80]   --->   Operation 245 'trunc' 'trunc_ln80_18' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 246 [1/1] (0.00ns)   --->   "%trunc_ln80_19 = trunc i128 %add_ln80_45" [d6.cpp:80]   --->   Operation 246 'trunc' 'trunc_ln80_19' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 247 '%mul_ln80_33 = mul i128 %zext_ln80_2, i128 %zext_ln80_7'
ST_22 : Operation 247 [1/1] (3.34ns)   --->   "%mul_ln80_33 = mul i128 %zext_ln80_2, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 247 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 248 [1/1] (1.57ns)   --->   "%add_ln80_50 = add i128 %mul_ln49_20, i128 %mul_ln49_22" [d6.cpp:80]   --->   Operation 248 'add' 'add_ln80_50' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 249 [1/1] (1.57ns)   --->   "%add_ln80_51 = add i128 %mul_ln49_17, i128 %mul_ln49_14" [d6.cpp:80]   --->   Operation 249 'add' 'add_ln80_51' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 250 [1/1] (0.00ns)   --->   "%trunc_ln80_20 = trunc i128 %add_ln80_50" [d6.cpp:80]   --->   Operation 250 'trunc' 'trunc_ln80_20' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln80_21 = trunc i128 %add_ln80_51" [d6.cpp:80]   --->   Operation 251 'trunc' 'trunc_ln80_21' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 252 [1/1] (1.57ns)   --->   "%add_ln80_53 = add i128 %mul_ln80_20, i128 %mul_ln80_26" [d6.cpp:80]   --->   Operation 252 'add' 'add_ln80_53' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 253 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_54 = add i128 %mul_ln80_33, i128 %mul_ln49_24" [d6.cpp:80]   --->   Operation 253 'add' 'add_ln80_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 254 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_55 = add i128 %add_ln80_54, i128 %mul_ln49_33" [d6.cpp:80]   --->   Operation 254 'add' 'add_ln80_55' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln80_22 = trunc i128 %add_ln80_53" [d6.cpp:80]   --->   Operation 255 'trunc' 'trunc_ln80_22' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 256 [1/1] (0.00ns)   --->   "%trunc_ln80_23 = trunc i128 %add_ln80_55" [d6.cpp:80]   --->   Operation 256 'trunc' 'trunc_ln80_23' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 257 '%mul_ln80_34 = mul i128 %zext_ln80_1, i128 %zext_ln80_7'
ST_22 : Operation 257 [1/1] (3.34ns)   --->   "%mul_ln80_34 = mul i128 %zext_ln80_1, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 257 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 258 [1/1] (1.57ns)   --->   "%add_ln80_60 = add i128 %mul_ln49_10, i128 %mul_ln49_11" [d6.cpp:80]   --->   Operation 258 'add' 'add_ln80_60' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 259 [1/1] (1.57ns)   --->   "%add_ln80_61 = add i128 %mul_ln49_9, i128 %mul_ln49_8" [d6.cpp:80]   --->   Operation 259 'add' 'add_ln80_61' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 260 [1/1] (0.00ns)   --->   "%trunc_ln80_24 = trunc i128 %add_ln80_60" [d6.cpp:80]   --->   Operation 260 'trunc' 'trunc_ln80_24' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln80_25 = trunc i128 %add_ln80_61" [d6.cpp:80]   --->   Operation 261 'trunc' 'trunc_ln80_25' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 262 [1/1] (1.57ns)   --->   "%add_ln80_63 = add i128 %mul_ln80_27, i128 %mul_ln80_34" [d6.cpp:80]   --->   Operation 262 'add' 'add_ln80_63' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_64 = add i128 %mul_ln49_34, i128 %mul_ln49_4" [d6.cpp:80]   --->   Operation 263 'add' 'add_ln80_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 264 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_65 = add i128 %add_ln80_64, i128 %mul_ln49_6" [d6.cpp:80]   --->   Operation 264 'add' 'add_ln80_65' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln80_26 = trunc i128 %add_ln80_63" [d6.cpp:80]   --->   Operation 265 'trunc' 'trunc_ln80_26' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 266 [1/1] (0.00ns)   --->   "%trunc_ln80_27 = trunc i128 %add_ln80_65" [d6.cpp:80]   --->   Operation 266 'trunc' 'trunc_ln80_27' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (1.18ns)   --->   Input mux for Operation 267 '%mul_ln80_35 = mul i128 %zext_ln80, i128 %zext_ln80_7'
ST_22 : Operation 267 [1/1] (3.34ns)   --->   "%mul_ln80_35 = mul i128 %zext_ln80, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 267 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 3.34> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 268 [1/1] (1.57ns)   --->   "%add_ln80_70 = add i128 %mul_ln49_25, i128 %mul_ln49_26" [d6.cpp:80]   --->   Operation 268 'add' 'add_ln80_70' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 269 [1/1] (1.57ns)   --->   "%add_ln80_71 = add i128 %mul_ln49_23, i128 %mul_ln49_21" [d6.cpp:80]   --->   Operation 269 'add' 'add_ln80_71' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln80_28 = trunc i128 %add_ln80_70" [d6.cpp:80]   --->   Operation 270 'trunc' 'trunc_ln80_28' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln80_29 = trunc i128 %add_ln80_71" [d6.cpp:80]   --->   Operation 271 'trunc' 'trunc_ln80_29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 272 [1/1] (1.57ns)   --->   "%add_ln80_73 = add i128 %mul_ln80_35, i128 %mul_ln49_35" [d6.cpp:80]   --->   Operation 272 'add' 'add_ln80_73' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_74 = add i128 %mul_ln49_15, i128 %mul_ln49_27" [d6.cpp:80]   --->   Operation 273 'add' 'add_ln80_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 274 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_75 = add i128 %add_ln80_74, i128 %mul_ln49_18" [d6.cpp:80]   --->   Operation 274 'add' 'add_ln80_75' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 275 [1/1] (0.00ns)   --->   "%trunc_ln80_30 = trunc i128 %add_ln80_73" [d6.cpp:80]   --->   Operation 275 'trunc' 'trunc_ln80_30' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 276 [1/1] (0.00ns)   --->   "%trunc_ln80_31 = trunc i128 %add_ln80_75" [d6.cpp:80]   --->   Operation 276 'trunc' 'trunc_ln80_31' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 6.55>
ST_23 : Operation 277 [1/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_VITIS_LOOP_56_5, i64 %mem, i64 %arg1_read, i61 %trunc_ln29_1, i128 %add83229_loc" [d6.cpp:29]   --->   Operation 277 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 278 [1/1] (1.57ns)   --->   "%add_ln80_2 = add i128 %add_ln80_1, i128 %add_ln80" [d6.cpp:80]   --->   Operation 278 'add' 'add_ln80_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 279 [1/1] (1.57ns)   --->   "%add_ln80_6 = add i128 %add_ln80_5, i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 279 'add' 'add_ln80_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 280 [1/1] (1.09ns)   --->   "%add_ln80_7 = add i58 %trunc_ln80_1, i58 %trunc_ln80" [d6.cpp:80]   --->   Operation 280 'add' 'add_ln80_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 281 [1/1] (1.09ns)   --->   "%add_ln80_8 = add i58 %trunc_ln80_3, i58 %trunc_ln80_2" [d6.cpp:80]   --->   Operation 281 'add' 'add_ln80_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 282 [1/1] (1.57ns)   --->   "%add_ln80_12 = add i128 %add_ln80_11, i128 %add_ln80_10" [d6.cpp:80]   --->   Operation 282 'add' 'add_ln80_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 283 [1/1] (1.57ns)   --->   "%add_ln80_16 = add i128 %add_ln80_15, i128 %add_ln80_13" [d6.cpp:80]   --->   Operation 283 'add' 'add_ln80_16' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 284 [1/1] (1.09ns)   --->   "%add_ln80_17 = add i58 %trunc_ln80_5, i58 %trunc_ln80_4" [d6.cpp:80]   --->   Operation 284 'add' 'add_ln80_17' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 285 [1/1] (1.09ns)   --->   "%add_ln80_18 = add i58 %trunc_ln80_7, i58 %trunc_ln80_6" [d6.cpp:80]   --->   Operation 285 'add' 'add_ln80_18' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 286 [1/1] (1.57ns)   --->   "%add_ln80_22 = add i128 %add_ln80_21, i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 286 'add' 'add_ln80_22' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 287 [1/1] (1.57ns)   --->   "%add_ln80_26 = add i128 %add_ln80_25, i128 %add_ln80_23" [d6.cpp:80]   --->   Operation 287 'add' 'add_ln80_26' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 288 [1/1] (1.09ns)   --->   "%add_ln80_27 = add i58 %trunc_ln80_9, i58 %trunc_ln80_8" [d6.cpp:80]   --->   Operation 288 'add' 'add_ln80_27' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 289 [1/1] (1.09ns)   --->   "%add_ln80_28 = add i58 %trunc_ln80_11, i58 %trunc_ln80_10" [d6.cpp:80]   --->   Operation 289 'add' 'add_ln80_28' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 290 [1/1] (1.57ns)   --->   "%add_ln80_32 = add i128 %add_ln80_31, i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 290 'add' 'add_ln80_32' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 291 [1/1] (1.57ns)   --->   "%add_ln80_36 = add i128 %add_ln80_35, i128 %add_ln80_33" [d6.cpp:80]   --->   Operation 291 'add' 'add_ln80_36' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 292 [1/1] (1.09ns)   --->   "%add_ln80_37 = add i58 %trunc_ln80_13, i58 %trunc_ln80_12" [d6.cpp:80]   --->   Operation 292 'add' 'add_ln80_37' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 293 [1/1] (1.09ns)   --->   "%add_ln80_38 = add i58 %trunc_ln80_15, i58 %trunc_ln80_14" [d6.cpp:80]   --->   Operation 293 'add' 'add_ln80_38' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 294 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_3 = add i128 %add_ln80_36, i128 %add_ln80_32" [d6.cpp:80]   --->   Operation 294 'add' 'arr_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 295 [1/1] (1.57ns)   --->   "%add_ln80_42 = add i128 %add_ln80_41, i128 %add_ln80_40" [d6.cpp:80]   --->   Operation 295 'add' 'add_ln80_42' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 296 [1/1] (1.57ns)   --->   "%add_ln80_46 = add i128 %add_ln80_45, i128 %add_ln80_43" [d6.cpp:80]   --->   Operation 296 'add' 'add_ln80_46' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 297 [1/1] (1.09ns)   --->   "%add_ln80_47 = add i58 %trunc_ln80_17, i58 %trunc_ln80_16" [d6.cpp:80]   --->   Operation 297 'add' 'add_ln80_47' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 298 [1/1] (1.09ns)   --->   "%add_ln80_48 = add i58 %trunc_ln80_19, i58 %trunc_ln80_18" [d6.cpp:80]   --->   Operation 298 'add' 'add_ln80_48' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_4 = add i128 %add_ln80_46, i128 %add_ln80_42" [d6.cpp:80]   --->   Operation 299 'add' 'arr_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 300 [1/1] (1.57ns)   --->   "%add_ln80_52 = add i128 %add_ln80_51, i128 %add_ln80_50" [d6.cpp:80]   --->   Operation 300 'add' 'add_ln80_52' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 301 [1/1] (1.57ns)   --->   "%add_ln80_56 = add i128 %add_ln80_55, i128 %add_ln80_53" [d6.cpp:80]   --->   Operation 301 'add' 'add_ln80_56' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 302 [1/1] (1.09ns)   --->   "%add_ln80_57 = add i58 %trunc_ln80_21, i58 %trunc_ln80_20" [d6.cpp:80]   --->   Operation 302 'add' 'add_ln80_57' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 303 [1/1] (1.09ns)   --->   "%add_ln80_58 = add i58 %trunc_ln80_23, i58 %trunc_ln80_22" [d6.cpp:80]   --->   Operation 303 'add' 'add_ln80_58' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 304 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_5 = add i128 %add_ln80_56, i128 %add_ln80_52" [d6.cpp:80]   --->   Operation 304 'add' 'arr_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 305 [1/1] (1.57ns)   --->   "%add_ln80_62 = add i128 %add_ln80_61, i128 %add_ln80_60" [d6.cpp:80]   --->   Operation 305 'add' 'add_ln80_62' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 306 [1/1] (1.57ns)   --->   "%add_ln80_66 = add i128 %add_ln80_65, i128 %add_ln80_63" [d6.cpp:80]   --->   Operation 306 'add' 'add_ln80_66' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 307 [1/1] (1.09ns)   --->   "%add_ln80_67 = add i58 %trunc_ln80_25, i58 %trunc_ln80_24" [d6.cpp:80]   --->   Operation 307 'add' 'add_ln80_67' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 308 [1/1] (1.09ns)   --->   "%add_ln80_68 = add i58 %trunc_ln80_27, i58 %trunc_ln80_26" [d6.cpp:80]   --->   Operation 308 'add' 'add_ln80_68' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 309 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_6 = add i128 %add_ln80_66, i128 %add_ln80_62" [d6.cpp:80]   --->   Operation 309 'add' 'arr_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 310 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_72 = add i128 %add_ln80_71, i128 %add_ln80_70" [d6.cpp:80]   --->   Operation 310 'add' 'add_ln80_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 311 [1/1] (1.57ns)   --->   "%add_ln80_76 = add i128 %add_ln80_75, i128 %add_ln80_73" [d6.cpp:80]   --->   Operation 311 'add' 'add_ln80_76' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 312 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_77 = add i58 %trunc_ln80_29, i58 %trunc_ln80_28" [d6.cpp:80]   --->   Operation 312 'add' 'add_ln80_77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 313 [1/1] (1.09ns)   --->   "%add_ln80_78 = add i58 %trunc_ln80_31, i58 %trunc_ln80_30" [d6.cpp:80]   --->   Operation 313 'add' 'add_ln80_78' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 314 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_7 = add i128 %add_ln80_76, i128 %add_ln80_72" [d6.cpp:80]   --->   Operation 314 'add' 'arr_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 315 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln87_8 = add i58 %add_ln80_78, i58 %add_ln80_77" [d6.cpp:87]   --->   Operation 315 'add' 'add_ln87_8' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 316 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %arr_7, i32 58, i32 127" [d6.cpp:87]   --->   Operation 316 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 317 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i70 %trunc_ln1" [d6.cpp:87]   --->   Operation 317 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 318 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87 = add i128 %arr_6, i128 %sext_ln87" [d6.cpp:87]   --->   Operation 318 'add' 'add_ln87' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln87_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87, i32 58, i32 127" [d6.cpp:87]   --->   Operation 319 'partselect' 'trunc_ln87_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 320 [1/1] (0.00ns)   --->   "%sext_ln87_1 = sext i70 %trunc_ln87_2" [d6.cpp:87]   --->   Operation 320 'sext' 'sext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 321 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_1 = add i128 %arr_5, i128 %sext_ln87_1" [d6.cpp:87]   --->   Operation 321 'add' 'add_ln87_1' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 322 [1/1] (0.00ns)   --->   "%trunc_ln87_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 322 'partselect' 'trunc_ln87_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 323 [1/1] (0.00ns)   --->   "%sext_ln87_2 = sext i70 %trunc_ln87_3" [d6.cpp:87]   --->   Operation 323 'sext' 'sext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 324 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_2 = add i128 %arr_4, i128 %sext_ln87_2" [d6.cpp:87]   --->   Operation 324 'add' 'add_ln87_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln87_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 127" [d6.cpp:87]   --->   Operation 325 'partselect' 'trunc_ln87_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 326 [1/1] (0.00ns)   --->   "%sext_ln87_3 = sext i70 %trunc_ln87_4" [d6.cpp:87]   --->   Operation 326 'sext' 'sext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 327 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_3 = add i128 %arr_3, i128 %sext_ln87_3" [d6.cpp:87]   --->   Operation 327 'add' 'add_ln87_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 328 [1/1] (0.00ns)   --->   "%trunc_ln87_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 127" [d6.cpp:87]   --->   Operation 328 'partselect' 'trunc_ln87_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 329 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln88_2 = add i58 %add_ln80_68, i58 %add_ln80_67" [d6.cpp:88]   --->   Operation 329 'add' 'add_ln88_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 330 [1/1] (0.00ns)   --->   "%trunc_ln88_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %arr_7, i32 58, i32 115" [d6.cpp:88]   --->   Operation 330 'partselect' 'trunc_ln88_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 331 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln88_1 = add i58 %trunc_ln88_2, i58 %add_ln88_2" [d6.cpp:88]   --->   Operation 331 'add' 'add_ln88_1' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 332 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln89_2 = add i58 %add_ln80_58, i58 %add_ln80_57" [d6.cpp:89]   --->   Operation 332 'add' 'add_ln89_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 333 [1/1] (0.00ns)   --->   "%trunc_ln89_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87, i32 58, i32 115" [d6.cpp:89]   --->   Operation 333 'partselect' 'trunc_ln89_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 334 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln89_1 = add i58 %trunc_ln89_1, i58 %add_ln89_2" [d6.cpp:89]   --->   Operation 334 'add' 'add_ln89_1' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 335 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln90 = add i58 %add_ln80_48, i58 %add_ln80_47" [d6.cpp:90]   --->   Operation 335 'add' 'add_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 115" [d6.cpp:90]   --->   Operation 336 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 337 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i58 %trunc_ln4, i58 %add_ln90" [d6.cpp:90]   --->   Operation 337 'add' 'out1_w_3' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 338 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln91 = add i58 %add_ln80_38, i58 %add_ln80_37" [d6.cpp:91]   --->   Operation 338 'add' 'add_ln91' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 339 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 115" [d6.cpp:91]   --->   Operation 339 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 340 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i58 %trunc_ln5, i58 %add_ln91" [d6.cpp:91]   --->   Operation 340 'add' 'out1_w_4' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 341 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 115" [d6.cpp:92]   --->   Operation 341 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 342 [1/1] (0.00ns)   --->   "%add83229_loc_load = load i128 %add83229_loc"   --->   Operation 342 'load' 'add83229_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr = add i128 %add_ln80_6, i128 %add_ln80_2" [d6.cpp:80]   --->   Operation 343 'add' 'arr' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 344 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_1 = add i128 %add_ln80_16, i128 %add_ln80_12" [d6.cpp:80]   --->   Operation 344 'add' 'arr_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 345 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_2 = add i128 %add_ln80_26, i128 %add_ln80_22" [d6.cpp:80]   --->   Operation 345 'add' 'arr_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 346 [1/1] (0.00ns)   --->   "%sext_ln87_4 = sext i70 %trunc_ln87_5" [d6.cpp:87]   --->   Operation 346 'sext' 'sext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 347 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_4 = add i128 %arr_2, i128 %sext_ln87_4" [d6.cpp:87]   --->   Operation 347 'add' 'add_ln87_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 348 [1/1] (0.00ns)   --->   "%trunc_ln87_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 127" [d6.cpp:87]   --->   Operation 348 'partselect' 'trunc_ln87_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 349 [1/1] (0.00ns)   --->   "%sext_ln87_5 = sext i70 %trunc_ln87_6" [d6.cpp:87]   --->   Operation 349 'sext' 'sext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 350 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_5 = add i128 %arr_1, i128 %sext_ln87_5" [d6.cpp:87]   --->   Operation 350 'add' 'add_ln87_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 351 [1/1] (0.00ns)   --->   "%trunc_ln87_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 127" [d6.cpp:87]   --->   Operation 351 'partselect' 'trunc_ln87_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 352 [1/1] (0.00ns)   --->   "%sext_ln87_6 = sext i70 %trunc_ln87_7" [d6.cpp:87]   --->   Operation 352 'sext' 'sext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 353 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_6 = add i128 %arr, i128 %sext_ln87_6" [d6.cpp:87]   --->   Operation 353 'add' 'add_ln87_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 354 [1/1] (0.00ns)   --->   "%trunc_ln87_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 127" [d6.cpp:87]   --->   Operation 354 'partselect' 'trunc_ln87_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 355 [1/1] (0.00ns)   --->   "%sext_ln87_7 = sext i70 %trunc_ln87_8" [d6.cpp:87]   --->   Operation 355 'sext' 'sext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 356 [1/1] (1.57ns)   --->   "%add_ln87_7 = add i128 %add83229_loc_load, i128 %sext_ln87_7" [d6.cpp:87]   --->   Operation 356 'add' 'add_ln87_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 357 [1/1] (0.00ns)   --->   "%trunc_ln87_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 114" [d6.cpp:87]   --->   Operation 357 'partselect' 'trunc_ln87_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 358 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln87_1, i58 %add_ln87_8" [d6.cpp:87]   --->   Operation 358 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 359 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i58 %add_ln87_8" [d6.cpp:88]   --->   Operation 359 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 360 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 127" [d6.cpp:88]   --->   Operation 360 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 361 [1/1] (0.00ns)   --->   "%sext_ln88 = sext i71 %trunc_ln2" [d6.cpp:88]   --->   Operation 361 'sext' 'sext_ln88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 362 [1/1] (1.13ns)   --->   "%add_ln88 = add i72 %sext_ln88, i72 %zext_ln88" [d6.cpp:88]   --->   Operation 362 'add' 'add_ln88' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 363 [1/1] (0.00ns)   --->   "%trunc_ln88_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln88, i32 58, i32 71" [d6.cpp:88]   --->   Operation 363 'partselect' 'trunc_ln88_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 364 [1/1] (0.00ns)   --->   "%sext_ln88_1 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 364 'sext' 'sext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 365 [1/1] (0.00ns)   --->   "%sext_ln88_2 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 365 'sext' 'sext_ln88_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 366 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln88_2, i58 %add_ln88_1" [d6.cpp:88]   --->   Operation 366 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 367 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i58 %add_ln88_1" [d6.cpp:89]   --->   Operation 367 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 368 [1/1] (1.09ns)   --->   "%add_ln89 = add i60 %sext_ln88_1, i60 %zext_ln89" [d6.cpp:89]   --->   Operation 368 'add' 'add_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 369 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln89, i32 58, i32 59" [d6.cpp:89]   --->   Operation 369 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 370 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln92 = add i58 %add_ln80_28, i58 %add_ln80_27" [d6.cpp:92]   --->   Operation 370 'add' 'add_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 371 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i58 %trunc_ln6, i58 %add_ln92" [d6.cpp:92]   --->   Operation 371 'add' 'out1_w_5' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 372 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln93 = add i58 %add_ln80_18, i58 %add_ln80_17" [d6.cpp:93]   --->   Operation 372 'add' 'add_ln93' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 373 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 115" [d6.cpp:93]   --->   Operation 373 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 374 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i58 %trunc_ln7, i58 %add_ln93" [d6.cpp:93]   --->   Operation 374 'add' 'out1_w_6' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 375 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln94 = add i58 %add_ln80_8, i58 %add_ln80_7" [d6.cpp:94]   --->   Operation 375 'add' 'add_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 376 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 115" [d6.cpp:94]   --->   Operation 376 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 377 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_7 = add i58 %trunc_ln8, i58 %add_ln94" [d6.cpp:94]   --->   Operation 377 'add' 'out1_w_7' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 378 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 114" [d6.cpp:95]   --->   Operation 378 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 379 [1/1] (0.00ns)   --->   "%trunc_ln95 = trunc i128 %add83229_loc_load" [d6.cpp:95]   --->   Operation 379 'trunc' 'trunc_ln95' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 380 [1/1] (1.09ns)   --->   "%out1_w_8 = add i57 %trunc_ln95, i57 %trunc_ln9" [d6.cpp:95]   --->   Operation 380 'add' 'out1_w_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 381 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i61 %trunc_ln99_1" [d6.cpp:99]   --->   Operation 381 'sext' 'sext_ln99' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 382 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln99" [d6.cpp:99]   --->   Operation 382 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 383 [1/1] (7.30ns)   --->   "%empty_27 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d6.cpp:99]   --->   Operation 383 'writereq' 'empty_27' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 1.86>
ST_25 : Operation 384 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i2 %tmp" [d6.cpp:89]   --->   Operation 384 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 385 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i6 %sext_ln89" [d6.cpp:89]   --->   Operation 385 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i58 %add_ln89_1" [d6.cpp:89]   --->   Operation 386 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 387 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln89_2, i59 %zext_ln89_1" [d6.cpp:89]   --->   Operation 387 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 388 [2/2] (0.77ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 388 'call' 'call_ln99' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 0.00>
ST_26 : Operation 389 [1/2] (0.00ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 389 'call' 'call_ln99' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 390 [5/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 390 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 391 [4/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 391 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 392 [3/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 392 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 393 [2/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 393 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 394 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d6.cpp:3]   --->   Operation 394 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 395 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 395 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 396 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 396 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 397 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 397 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 398 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 398 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 399 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 399 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 400 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 400 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 401 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 401 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 402 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 402 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 403 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 403 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 404 [1/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 404 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 405 [1/1] (0.00ns)   --->   "%ret_ln104 = ret" [d6.cpp:104]   --->   Operation 405 'ret' 'ret_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d6.cpp:22) [39]  (0.000 ns)
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [40]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d6.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [41]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d6.cpp:29) [53]  (0.000 ns)
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_26', d6.cpp:29) on port 'mem' (d6.cpp:29) [54]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 0.000ns
The critical path consists of the following:

 <State 22>: 6.109ns
The critical path consists of the following:
	'load' operation ('arg1_r_1_loc_load') on local variable 'arg1_r_1_loc' [49]  (0.000 ns)
	multiplexor before operation 'mul' with delay (1.180 ns)
'mul' operation ('mul_ln80_21', d6.cpp:80) [155]  (3.350 ns)
	'add' operation ('add_ln80', d6.cpp:80) [165]  (1.579 ns)

 <State 23>: 6.554ns
The critical path consists of the following:
	'add' operation ('add_ln80_76', d6.cpp:80) [280]  (1.579 ns)
	'add' operation ('arr', d6.cpp:80) [283]  (0.995 ns)
	'add' operation ('add_ln87', d6.cpp:87) [287]  (0.995 ns)
	'add' operation ('add_ln87_1', d6.cpp:87) [290]  (0.995 ns)
	'add' operation ('add_ln87_2', d6.cpp:87) [293]  (0.995 ns)
	'add' operation ('add_ln87_3', d6.cpp:87) [296]  (0.995 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d6.cpp:99) [352]  (0.000 ns)
	bus request operation ('empty_27', d6.cpp:99) on port 'mem' (d6.cpp:99) [353]  (7.300 ns)

 <State 25>: 1.863ns
The critical path consists of the following:
	'add' operation ('out1_w', d6.cpp:89) [331]  (1.093 ns)
	'call' operation ('call_ln99', d6.cpp:99) to 'test_Pipeline_ARRAY_WRITE' [354]  (0.770 ns)

 <State 26>: 0.000ns
The critical path consists of the following:

 <State 27>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_28', d6.cpp:104) on port 'mem' (d6.cpp:104) [355]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_28', d6.cpp:104) on port 'mem' (d6.cpp:104) [355]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_28', d6.cpp:104) on port 'mem' (d6.cpp:104) [355]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_28', d6.cpp:104) on port 'mem' (d6.cpp:104) [355]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_28', d6.cpp:104) on port 'mem' (d6.cpp:104) [355]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
