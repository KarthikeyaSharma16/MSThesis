

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 21:57:39 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_3 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       99|       99|  0.990 us|  0.990 us|  100|  100|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 56 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 56 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 57 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 57 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 58 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 58 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add183_loc = alloca i64 1"   --->   Operation 59 'alloca' 'add183_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add_1184_loc = alloca i64 1"   --->   Operation 60 'alloca' 'add_1184_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add_2185_loc = alloca i64 1"   --->   Operation 61 'alloca' 'add_2185_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add_3186_loc = alloca i64 1"   --->   Operation 62 'alloca' 'add_3186_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add_4187_loc = alloca i64 1"   --->   Operation 63 'alloca' 'add_4187_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add_5188_loc = alloca i64 1"   --->   Operation 64 'alloca' 'add_5188_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add_6189_loc = alloca i64 1"   --->   Operation 65 'alloca' 'add_6189_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add_7190_loc = alloca i64 1"   --->   Operation 66 'alloca' 'add_7190_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 80 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 81 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 82 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 83 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 84 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d6.cpp:22]   --->   Operation 85 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d6.cpp:29]   --->   Operation 86 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln99_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d6.cpp:99]   --->   Operation 87 'partselect' 'trunc_ln99_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d6.cpp:22]   --->   Operation 88 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d6.cpp:22]   --->   Operation 89 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 90 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 91 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 91 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 92 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 92 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 93 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 93 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 94 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 94 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 95 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 95 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 96 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 96 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 97 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 97 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 98 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 98 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 99 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 99 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d6.cpp:29]   --->   Operation 100 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d6.cpp:29]   --->   Operation 101 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [8/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 102 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 103 [7/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 103 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 104 [6/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 104 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 105 [5/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 105 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 106 [4/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 106 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 107 [3/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 107 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 108 [2/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 108 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 109 [1/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 109 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 110 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 110 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 111 [1/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 111 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 112 [8/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 112 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 113 [7/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 113 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 114 [8/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 114 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 115 [6/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 115 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 116 [7/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 116 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 117 [5/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 117 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 118 [6/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 118 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 119 [4/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 119 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 120 [5/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 120 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 121 [3/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 121 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 122 [4/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 122 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 123 [2/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 123 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 124 [3/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 124 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 125 [1/8] (7.30ns)   --->   "%empty_36 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 125 'readreq' 'empty_36' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 126 [2/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 126 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 127 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 127 'read' 'mem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 128 [1/8] (7.30ns)   --->   "%empty_37 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 128 'readreq' 'empty_37' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 129 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i61 %trunc_ln99_1" [d6.cpp:99]   --->   Operation 129 'sext' 'sext_ln99' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 130 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln99" [d6.cpp:99]   --->   Operation 130 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 131 [1/1] (7.30ns)   --->   "%empty_38 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d6.cpp:99]   --->   Operation 131 'writereq' 'empty_38' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 132 [1/1] (7.30ns)   --->   "%mem_addr_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 132 'read' 'mem_addr_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 133 [1/1] (7.30ns)   --->   "%mem_addr_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 133 'read' 'mem_addr_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 134 [1/1] (7.30ns)   --->   "%mem_addr_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 134 'read' 'mem_addr_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 135 [1/1] (7.30ns)   --->   "%mem_addr_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 135 'read' 'mem_addr_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 136 [1/1] (7.30ns)   --->   "%mem_addr_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 136 'read' 'mem_addr_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 137 [1/1] (7.30ns)   --->   "%mem_addr_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 137 'read' 'mem_addr_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 138 [1/1] (7.30ns)   --->   "%mem_addr_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 138 'read' 'mem_addr_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 139 [1/1] (7.30ns)   --->   "%mem_addr_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 139 'read' 'mem_addr_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 140 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 140 'read' 'mem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 141 [1/1] (7.30ns)   --->   "%mem_addr_1_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 141 'read' 'mem_addr_1_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i64 %mem_addr_read_8" [d6.cpp:62]   --->   Operation 142 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 143 [1/1] (7.30ns)   --->   "%mem_addr_1_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 143 'read' 'mem_addr_1_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i64 %mem_addr_1_read" [d6.cpp:62]   --->   Operation 144 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.97ns)   --->   Input mux for Operation 145 '%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62'
ST_41 : Operation 145 [1/1] (3.55ns)   --->   "%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62" [d6.cpp:62]   --->   Operation 145 'mul' 'mul_ln62' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i64 %mem_addr_read_7" [d6.cpp:62]   --->   Operation 146 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i64 %mem_addr_1_read_1" [d6.cpp:62]   --->   Operation 147 'zext' 'zext_ln62_3' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.97ns)   --->   Input mux for Operation 148 '%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2'
ST_41 : Operation 148 [1/1] (3.55ns)   --->   "%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2" [d6.cpp:62]   --->   Operation 148 'mul' 'mul_ln62_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 149 [1/1] (1.57ns)   --->   "%add_ln62_3 = add i128 %mul_ln62, i128 %mul_ln62_1" [d6.cpp:62]   --->   Operation 149 'add' 'add_ln62_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln62_2 = trunc i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 150 'trunc' 'trunc_ln62_2' <Predicate = true> <Delay = 0.00>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 151 [1/1] (7.30ns)   --->   "%mem_addr_1_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 151 'read' 'mem_addr_1_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 152 [1/1] (7.30ns)   --->   "%mem_addr_1_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 152 'read' 'mem_addr_1_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 153 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 153 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 154 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 154 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 155 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 155 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 156 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 156 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 157 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 157 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 158 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 158 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 159 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 159 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 160 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 160 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 161 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i63 %arg2_r_8_loc"   --->   Operation 161 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 162 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 162 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 163 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 163 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 164 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 164 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 165 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 165 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 166 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 166 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 167 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 167 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 168 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 168 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 169 [1/1] (0.00ns)   --->   "%empty_29 = trunc i64 %arg2_r_1_loc_load"   --->   Operation 169 'trunc' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 170 [1/1] (0.00ns)   --->   "%empty_30 = trunc i64 %arg2_r_2_loc_load"   --->   Operation 170 'trunc' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 171 [1/1] (0.00ns)   --->   "%empty_31 = trunc i64 %arg2_r_3_loc_load"   --->   Operation 171 'trunc' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 172 [1/1] (0.00ns)   --->   "%empty_32 = trunc i64 %arg2_r_4_loc_load"   --->   Operation 172 'trunc' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 173 [1/1] (0.00ns)   --->   "%empty_33 = trunc i64 %arg2_r_5_loc_load"   --->   Operation 173 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 174 [1/1] (0.00ns)   --->   "%empty_34 = trunc i64 %arg2_r_6_loc_load"   --->   Operation 174 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 175 [1/1] (0.00ns)   --->   "%empty_35 = trunc i64 %arg2_r_7_loc_load"   --->   Operation 175 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 176 [1/1] (0.00ns)   --->   "%mul = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %arg2_r_8_loc_load, i1 0"   --->   Operation 176 'bitconcatenate' 'mul' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 177 [2/2] (0.77ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %mul, i63 %empty_35, i63 %arg2_r_8_loc_load, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i63 %empty_29, i128 %add_7190_loc, i128 %add_6189_loc, i128 %add_5188_loc, i128 %add_4187_loc, i128 %add_3186_loc, i128 %add_2185_loc, i128 %add_1184_loc, i128 %add183_loc"   --->   Operation 177 'call' 'call_ln0' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 178 [1/1] (7.30ns)   --->   "%mem_addr_1_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 178 'read' 'mem_addr_1_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 179 [1/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg1_r_8_loc_load, i64 %mul, i63 %empty_35, i63 %arg2_r_8_loc_load, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i63 %empty_29, i128 %add_7190_loc, i128 %add_6189_loc, i128 %add_5188_loc, i128 %add_4187_loc, i128 %add_3186_loc, i128 %add_2185_loc, i128 %add_1184_loc, i128 %add183_loc"   --->   Operation 179 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_45 : Operation 180 [1/1] (7.30ns)   --->   "%mem_addr_1_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 180 'read' 'mem_addr_1_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln62_8 = zext i64 %mem_addr_read_4" [d6.cpp:62]   --->   Operation 181 'zext' 'zext_ln62_8' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln62_9 = zext i64 %mem_addr_1_read_4" [d6.cpp:62]   --->   Operation 182 'zext' 'zext_ln62_9' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.97ns)   --->   Input mux for Operation 183 '%mul_ln62_4 = mul i128 %zext_ln62_9, i128 %zext_ln62_8'
ST_45 : Operation 183 [1/1] (3.55ns)   --->   "%mul_ln62_4 = mul i128 %zext_ln62_9, i128 %zext_ln62_8" [d6.cpp:62]   --->   Operation 183 'mul' 'mul_ln62_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln62_10 = zext i64 %mem_addr_read_3" [d6.cpp:62]   --->   Operation 184 'zext' 'zext_ln62_10' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln62_11 = zext i64 %mem_addr_1_read_5" [d6.cpp:62]   --->   Operation 185 'zext' 'zext_ln62_11' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.97ns)   --->   Input mux for Operation 186 '%mul_ln62_5 = mul i128 %zext_ln62_11, i128 %zext_ln62_10'
ST_45 : Operation 186 [1/1] (3.55ns)   --->   "%mul_ln62_5 = mul i128 %zext_ln62_11, i128 %zext_ln62_10" [d6.cpp:62]   --->   Operation 186 'mul' 'mul_ln62_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 187 [1/1] (1.57ns)   --->   "%add_ln62_1 = add i128 %mul_ln62_5, i128 %mul_ln62_4" [d6.cpp:62]   --->   Operation 187 'add' 'add_ln62_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 188 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i128 %add_ln62_1" [d6.cpp:62]   --->   Operation 188 'trunc' 'trunc_ln62_1' <Predicate = true> <Delay = 0.00>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 189 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 189 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 190 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 190 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 191 [1/1] (0.00ns)   --->   "%add_7190_loc_load = load i128 %add_7190_loc"   --->   Operation 191 'load' 'add_7190_loc_load' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 192 [1/1] (7.30ns)   --->   "%mem_addr_1_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 192 'read' 'mem_addr_1_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i64 %arg1_r_7_loc_load" [d6.cpp:80]   --->   Operation 193 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i64 %arg1_r_6_loc_load" [d6.cpp:80]   --->   Operation 194 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 195 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i64 %arg1_r_5_loc_load" [d6.cpp:80]   --->   Operation 195 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i64 %arg1_r_4_loc_load" [d6.cpp:80]   --->   Operation 196 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i64 %arg1_r_3_loc_load" [d6.cpp:80]   --->   Operation 197 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i64 %arg1_r_2_loc_load" [d6.cpp:80]   --->   Operation 198 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i64 %arg1_r_1_loc_load" [d6.cpp:80]   --->   Operation 199 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i64 %arg1_r_loc_load" [d6.cpp:80]   --->   Operation 200 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i64 %arg2_r_loc_load" [d6.cpp:80]   --->   Operation 201 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 202 '%mul_ln80 = mul i128 %zext_ln80_8, i128 %zext_ln80'
ST_46 : Operation 202 [1/1] (3.55ns)   --->   "%mul_ln80 = mul i128 %zext_ln80_8, i128 %zext_ln80" [d6.cpp:80]   --->   Operation 202 'mul' 'mul_ln80' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 203 '%mul_ln80_1 = mul i128 %zext_ln80_8, i128 %zext_ln80_1'
ST_46 : Operation 203 [1/1] (3.55ns)   --->   "%mul_ln80_1 = mul i128 %zext_ln80_8, i128 %zext_ln80_1" [d6.cpp:80]   --->   Operation 203 'mul' 'mul_ln80_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 204 '%mul_ln80_2 = mul i128 %zext_ln80_8, i128 %zext_ln80_2'
ST_46 : Operation 204 [1/1] (3.55ns)   --->   "%mul_ln80_2 = mul i128 %zext_ln80_8, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 204 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 205 '%mul_ln80_3 = mul i128 %zext_ln80_8, i128 %zext_ln80_3'
ST_46 : Operation 205 [1/1] (3.55ns)   --->   "%mul_ln80_3 = mul i128 %zext_ln80_8, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 205 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 206 '%mul_ln80_4 = mul i128 %zext_ln80_8, i128 %zext_ln80_4'
ST_46 : Operation 206 [1/1] (3.55ns)   --->   "%mul_ln80_4 = mul i128 %zext_ln80_8, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 206 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 207 '%mul_ln80_5 = mul i128 %zext_ln80_8, i128 %zext_ln80_5'
ST_46 : Operation 207 [1/1] (3.55ns)   --->   "%mul_ln80_5 = mul i128 %zext_ln80_8, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 207 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 208 '%mul_ln80_6 = mul i128 %zext_ln80_8, i128 %zext_ln80_6'
ST_46 : Operation 208 [1/1] (3.55ns)   --->   "%mul_ln80_6 = mul i128 %zext_ln80_8, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 208 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln80_9 = zext i64 %arg2_r_1_loc_load" [d6.cpp:80]   --->   Operation 209 'zext' 'zext_ln80_9' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 210 '%mul_ln80_7 = mul i128 %zext_ln80_9, i128 %zext_ln80_1'
ST_46 : Operation 210 [1/1] (3.55ns)   --->   "%mul_ln80_7 = mul i128 %zext_ln80_9, i128 %zext_ln80_1" [d6.cpp:80]   --->   Operation 210 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 211 '%mul_ln80_8 = mul i128 %zext_ln80_9, i128 %zext_ln80_2'
ST_46 : Operation 211 [1/1] (3.55ns)   --->   "%mul_ln80_8 = mul i128 %zext_ln80_9, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 211 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 212 '%mul_ln80_9 = mul i128 %zext_ln80_9, i128 %zext_ln80_3'
ST_46 : Operation 212 [1/1] (3.55ns)   --->   "%mul_ln80_9 = mul i128 %zext_ln80_9, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 212 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 213 '%mul_ln80_10 = mul i128 %zext_ln80_9, i128 %zext_ln80_4'
ST_46 : Operation 213 [1/1] (3.55ns)   --->   "%mul_ln80_10 = mul i128 %zext_ln80_9, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 213 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 214 '%mul_ln80_11 = mul i128 %zext_ln80_9, i128 %zext_ln80_5'
ST_46 : Operation 214 [1/1] (3.55ns)   --->   "%mul_ln80_11 = mul i128 %zext_ln80_9, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 214 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 215 '%mul_ln80_12 = mul i128 %zext_ln80_9, i128 %zext_ln80_6'
ST_46 : Operation 215 [1/1] (3.55ns)   --->   "%mul_ln80_12 = mul i128 %zext_ln80_9, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 215 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln80_10 = zext i64 %arg2_r_2_loc_load" [d6.cpp:80]   --->   Operation 216 'zext' 'zext_ln80_10' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 217 '%mul_ln80_13 = mul i128 %zext_ln80_10, i128 %zext_ln80_2'
ST_46 : Operation 217 [1/1] (3.55ns)   --->   "%mul_ln80_13 = mul i128 %zext_ln80_10, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 217 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 218 '%mul_ln80_14 = mul i128 %zext_ln80_10, i128 %zext_ln80_3'
ST_46 : Operation 218 [1/1] (3.55ns)   --->   "%mul_ln80_14 = mul i128 %zext_ln80_10, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 218 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 219 '%mul_ln80_15 = mul i128 %zext_ln80_10, i128 %zext_ln80_4'
ST_46 : Operation 219 [1/1] (3.55ns)   --->   "%mul_ln80_15 = mul i128 %zext_ln80_10, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 219 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 220 '%mul_ln80_16 = mul i128 %zext_ln80_10, i128 %zext_ln80_5'
ST_46 : Operation 220 [1/1] (3.55ns)   --->   "%mul_ln80_16 = mul i128 %zext_ln80_10, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 220 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 221 '%mul_ln80_17 = mul i128 %zext_ln80_10, i128 %zext_ln80_6'
ST_46 : Operation 221 [1/1] (3.55ns)   --->   "%mul_ln80_17 = mul i128 %zext_ln80_10, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 221 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 222 [1/1] (0.00ns)   --->   "%zext_ln80_11 = zext i64 %arg2_r_3_loc_load" [d6.cpp:80]   --->   Operation 222 'zext' 'zext_ln80_11' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 223 '%mul_ln80_18 = mul i128 %zext_ln80_11, i128 %zext_ln80_3'
ST_46 : Operation 223 [1/1] (3.55ns)   --->   "%mul_ln80_18 = mul i128 %zext_ln80_11, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 223 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 224 '%mul_ln80_19 = mul i128 %zext_ln80_11, i128 %zext_ln80_4'
ST_46 : Operation 224 [1/1] (3.55ns)   --->   "%mul_ln80_19 = mul i128 %zext_ln80_11, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 224 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 225 '%mul_ln80_20 = mul i128 %zext_ln80_11, i128 %zext_ln80_5'
ST_46 : Operation 225 [1/1] (3.55ns)   --->   "%mul_ln80_20 = mul i128 %zext_ln80_11, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 225 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 226 '%mul_ln80_21 = mul i128 %zext_ln80_11, i128 %zext_ln80_6'
ST_46 : Operation 226 [1/1] (3.55ns)   --->   "%mul_ln80_21 = mul i128 %zext_ln80_11, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 226 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln80_12 = zext i64 %arg2_r_4_loc_load" [d6.cpp:80]   --->   Operation 227 'zext' 'zext_ln80_12' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 228 '%mul_ln80_22 = mul i128 %zext_ln80_12, i128 %zext_ln80_4'
ST_46 : Operation 228 [1/1] (3.55ns)   --->   "%mul_ln80_22 = mul i128 %zext_ln80_12, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 228 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 229 '%mul_ln80_23 = mul i128 %zext_ln80_12, i128 %zext_ln80_5'
ST_46 : Operation 229 [1/1] (3.55ns)   --->   "%mul_ln80_23 = mul i128 %zext_ln80_12, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 229 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 230 '%mul_ln80_24 = mul i128 %zext_ln80_12, i128 %zext_ln80_6'
ST_46 : Operation 230 [1/1] (3.55ns)   --->   "%mul_ln80_24 = mul i128 %zext_ln80_12, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 230 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 231 [1/1] (0.00ns)   --->   "%zext_ln80_13 = zext i64 %arg2_r_5_loc_load" [d6.cpp:80]   --->   Operation 231 'zext' 'zext_ln80_13' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 232 '%mul_ln80_25 = mul i128 %zext_ln80_13, i128 %zext_ln80_5'
ST_46 : Operation 232 [1/1] (3.55ns)   --->   "%mul_ln80_25 = mul i128 %zext_ln80_13, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 232 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 233 '%mul_ln80_26 = mul i128 %zext_ln80_13, i128 %zext_ln80_6'
ST_46 : Operation 233 [1/1] (3.55ns)   --->   "%mul_ln80_26 = mul i128 %zext_ln80_13, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 233 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln80_14 = zext i64 %arg2_r_6_loc_load" [d6.cpp:80]   --->   Operation 234 'zext' 'zext_ln80_14' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 235 '%mul_ln80_27 = mul i128 %zext_ln80_14, i128 %zext_ln80_6'
ST_46 : Operation 235 [1/1] (3.55ns)   --->   "%mul_ln80_27 = mul i128 %zext_ln80_14, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 235 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 236 [1/1] (0.00ns)   --->   "%zext_ln80_15 = zext i64 %arg2_r_7_loc_load" [d6.cpp:80]   --->   Operation 236 'zext' 'zext_ln80_15' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 237 '%mul_ln80_28 = mul i128 %zext_ln80_15, i128 %zext_ln80_7'
ST_46 : Operation 237 [1/1] (3.55ns)   --->   "%mul_ln80_28 = mul i128 %zext_ln80_15, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 237 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 238 [1/1] (1.57ns)   --->   "%add_ln80 = add i128 %mul_ln80_25, i128 %mul_ln80_27" [d6.cpp:80]   --->   Operation 238 'add' 'add_ln80' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 239 [1/1] (1.57ns)   --->   "%add_ln80_1 = add i128 %mul_ln80_22, i128 %mul_ln80_18" [d6.cpp:80]   --->   Operation 239 'add' 'add_ln80_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 240 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i128 %add_ln80" [d6.cpp:80]   --->   Operation 240 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 241 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i128 %add_ln80_1" [d6.cpp:80]   --->   Operation 241 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 242 [1/1] (1.57ns)   --->   "%add_ln80_3 = add i128 %mul_ln80_7, i128 %mul_ln80_13" [d6.cpp:80]   --->   Operation 242 'add' 'add_ln80_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 243 [1/1] (1.57ns)   --->   "%add_ln80_4 = add i128 %mul_ln80, i128 %mul_ln80_28" [d6.cpp:80]   --->   Operation 243 'add' 'add_ln80_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 244 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 244 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 245 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i128 %add_ln80_4" [d6.cpp:80]   --->   Operation 245 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 246 '%mul_ln80_29 = mul i128 %zext_ln80_14, i128 %zext_ln80_7'
ST_46 : Operation 246 [1/1] (3.55ns)   --->   "%mul_ln80_29 = mul i128 %zext_ln80_14, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 246 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 247 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_10 = add i128 %mul_ln80_26, i128 %mul_ln80_19" [d6.cpp:80]   --->   Operation 247 'add' 'add_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 248 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_11 = add i128 %add_ln80_10, i128 %mul_ln80_23" [d6.cpp:80]   --->   Operation 248 'add' 'add_ln80_11' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 249 [1/1] (1.57ns)   --->   "%add_ln80_12 = add i128 %mul_ln80_8, i128 %mul_ln80_14" [d6.cpp:80]   --->   Operation 249 'add' 'add_ln80_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 250 [1/1] (1.57ns)   --->   "%add_ln80_14 = add i128 %mul_ln80_1, i128 %mul_ln80_29" [d6.cpp:80]   --->   Operation 250 'add' 'add_ln80_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i128 %add_ln80_12" [d6.cpp:80]   --->   Operation 251 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i128 %add_ln80_14" [d6.cpp:80]   --->   Operation 252 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 253 [1/1] (0.00ns)   --->   "%trunc_ln80_7 = trunc i128 %add_ln80_11" [d6.cpp:80]   --->   Operation 253 'trunc' 'trunc_ln80_7' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 254 '%mul_ln80_30 = mul i128 %zext_ln80_13, i128 %zext_ln80_7'
ST_46 : Operation 254 [1/1] (3.55ns)   --->   "%mul_ln80_30 = mul i128 %zext_ln80_13, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 254 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 255 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_18 = add i128 %mul_ln80_24, i128 %mul_ln80_15" [d6.cpp:80]   --->   Operation 255 'add' 'add_ln80_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 256 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_20 = add i128 %add_ln80_18, i128 %mul_ln80_20" [d6.cpp:80]   --->   Operation 256 'add' 'add_ln80_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 257 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_21 = add i128 %mul_ln80_9, i128 %mul_ln80_30" [d6.cpp:80]   --->   Operation 257 'add' 'add_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 258 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_22 = add i128 %add_ln80_21, i128 %mul_ln80_2" [d6.cpp:80]   --->   Operation 258 'add' 'add_ln80_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 259 [1/1] (0.00ns)   --->   "%trunc_ln80_9 = trunc i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 259 'trunc' 'trunc_ln80_9' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 260 [1/1] (0.00ns)   --->   "%trunc_ln80_10 = trunc i128 %add_ln80_22" [d6.cpp:80]   --->   Operation 260 'trunc' 'trunc_ln80_10' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 261 '%mul_ln80_31 = mul i128 %zext_ln80_12, i128 %zext_ln80_7'
ST_46 : Operation 261 [1/1] (3.55ns)   --->   "%mul_ln80_31 = mul i128 %zext_ln80_12, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 261 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 262 [1/1] (1.57ns)   --->   "%add_ln80_25 = add i128 %mul_ln80_16, i128 %mul_ln80_21" [d6.cpp:80]   --->   Operation 262 'add' 'add_ln80_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_26 = add i128 %mul_ln80_10, i128 %mul_ln80_31" [d6.cpp:80]   --->   Operation 263 'add' 'add_ln80_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 264 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_27 = add i128 %add_ln80_26, i128 %mul_ln80_3" [d6.cpp:80]   --->   Operation 264 'add' 'add_ln80_27' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln80_12 = trunc i128 %add_ln80_25" [d6.cpp:80]   --->   Operation 265 'trunc' 'trunc_ln80_12' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 266 [1/1] (0.00ns)   --->   "%trunc_ln80_13 = trunc i128 %add_ln80_27" [d6.cpp:80]   --->   Operation 266 'trunc' 'trunc_ln80_13' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 267 '%mul_ln80_32 = mul i128 %zext_ln80_11, i128 %zext_ln80_7'
ST_46 : Operation 267 [1/1] (3.55ns)   --->   "%mul_ln80_32 = mul i128 %zext_ln80_11, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 267 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 268 [1/1] (1.57ns)   --->   "%add_ln80_30 = add i128 %mul_ln80_4, i128 %mul_ln80_17" [d6.cpp:80]   --->   Operation 268 'add' 'add_ln80_30' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 269 [1/1] (1.57ns)   --->   "%add_ln80_32 = add i128 %mul_ln80_11, i128 %mul_ln80_32" [d6.cpp:80]   --->   Operation 269 'add' 'add_ln80_32' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln80_15 = trunc i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 270 'trunc' 'trunc_ln80_15' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln80_16 = trunc i128 %add_ln80_32" [d6.cpp:80]   --->   Operation 271 'trunc' 'trunc_ln80_16' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 272 '%mul_ln80_33 = mul i128 %zext_ln80_10, i128 %zext_ln80_7'
ST_46 : Operation 272 [1/1] (3.55ns)   --->   "%mul_ln80_33 = mul i128 %zext_ln80_10, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 272 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_35 = add i128 %mul_ln80_5, i128 %mul_ln80_33" [d6.cpp:80]   --->   Operation 273 'add' 'add_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 274 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_31 = add i128 %add_ln80_35, i128 %mul_ln80_12" [d6.cpp:80]   --->   Operation 274 'add' 'add_ln80_31' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 275 [1/1] (0.00ns)   --->   "%trunc_ln80_19 = trunc i128 %add_ln80_31" [d6.cpp:80]   --->   Operation 275 'trunc' 'trunc_ln80_19' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 276 '%mul_ln80_34 = mul i128 %zext_ln80_9, i128 %zext_ln80_7'
ST_46 : Operation 276 [1/1] (3.55ns)   --->   "%mul_ln80_34 = mul i128 %zext_ln80_9, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 276 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 277 [1/1] (1.57ns)   --->   "%add_ln80_33 = add i128 %mul_ln80_34, i128 %mul_ln80_6" [d6.cpp:80]   --->   Operation 277 'add' 'add_ln80_33' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 278 [1/1] (0.00ns)   --->   "%trunc_ln80_21 = trunc i128 %add_ln80_33" [d6.cpp:80]   --->   Operation 278 'trunc' 'trunc_ln80_21' <Predicate = true> <Delay = 0.00>
ST_46 : [1/1] (0.97ns)   --->   Input mux for Operation 279 '%mul_ln80_35 = mul i128 %zext_ln80_8, i128 %zext_ln80_7'
ST_46 : Operation 279 [1/1] (3.55ns)   --->   "%mul_ln80_35 = mul i128 %zext_ln80_8, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 279 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 280 [1/1] (1.57ns)   --->   "%arr_1 = add i128 %add_7190_loc_load, i128 %mul_ln80_35" [d6.cpp:80]   --->   Operation 280 'add' 'arr_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 281 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i128 %arr_1" [d6.cpp:87]   --->   Operation 281 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 282 [1/1] (0.00ns)   --->   "%trunc_ln87_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %arr_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 282 'partselect' 'trunc_ln87_2' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln88_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %arr_1, i32 58, i32 115" [d6.cpp:88]   --->   Operation 283 'partselect' 'trunc_ln88_2' <Predicate = true> <Delay = 0.00>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 284 [1/1] (0.00ns)   --->   "%add_6189_loc_load = load i128 %add_6189_loc"   --->   Operation 284 'load' 'add_6189_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 285 [1/1] (0.00ns)   --->   "%add_5188_loc_load = load i128 %add_5188_loc"   --->   Operation 285 'load' 'add_5188_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 286 [1/1] (0.00ns)   --->   "%add_4187_loc_load = load i128 %add_4187_loc"   --->   Operation 286 'load' 'add_4187_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 287 [1/1] (0.00ns)   --->   "%add_3186_loc_load = load i128 %add_3186_loc"   --->   Operation 287 'load' 'add_3186_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 288 [1/1] (7.30ns)   --->   "%mem_addr_1_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 288 'read' 'mem_addr_1_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 289 [1/1] (0.00ns)   --->   "%zext_ln62_12 = zext i64 %mem_addr_read_2" [d6.cpp:62]   --->   Operation 289 'zext' 'zext_ln62_12' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln62_13 = zext i64 %mem_addr_1_read_6" [d6.cpp:62]   --->   Operation 290 'zext' 'zext_ln62_13' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.97ns)   --->   Input mux for Operation 291 '%mul_ln62_6 = mul i128 %zext_ln62_13, i128 %zext_ln62_12'
ST_47 : Operation 291 [1/1] (3.55ns)   --->   "%mul_ln62_6 = mul i128 %zext_ln62_13, i128 %zext_ln62_12" [d6.cpp:62]   --->   Operation 291 'mul' 'mul_ln62_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 292 [1/1] (0.00ns)   --->   "%zext_ln62_14 = zext i64 %mem_addr_read_1" [d6.cpp:62]   --->   Operation 292 'zext' 'zext_ln62_14' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 293 [1/1] (0.00ns)   --->   "%zext_ln62_15 = zext i64 %mem_addr_1_read_7" [d6.cpp:62]   --->   Operation 293 'zext' 'zext_ln62_15' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.97ns)   --->   Input mux for Operation 294 '%mul_ln62_7 = mul i128 %zext_ln62_15, i128 %zext_ln62_14'
ST_47 : Operation 294 [1/1] (3.55ns)   --->   "%mul_ln62_7 = mul i128 %zext_ln62_15, i128 %zext_ln62_14" [d6.cpp:62]   --->   Operation 294 'mul' 'mul_ln62_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 295 [1/1] (1.57ns)   --->   "%add_ln62 = add i128 %mul_ln62_6, i128 %mul_ln62_7" [d6.cpp:62]   --->   Operation 295 'add' 'add_ln62' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i128 %add_ln62" [d6.cpp:62]   --->   Operation 296 'trunc' 'trunc_ln62' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 297 [1/1] (1.57ns)   --->   "%add_ln80_2 = add i128 %add_ln80_1, i128 %add_ln80" [d6.cpp:80]   --->   Operation 297 'add' 'add_ln80_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 298 [1/1] (1.57ns)   --->   "%add_ln80_5 = add i128 %add_ln80_4, i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 298 'add' 'add_ln80_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 299 [1/1] (1.09ns)   --->   "%add_ln80_7 = add i58 %trunc_ln80_1, i58 %trunc_ln80" [d6.cpp:80]   --->   Operation 299 'add' 'add_ln80_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 300 [1/1] (1.09ns)   --->   "%add_ln80_8 = add i58 %trunc_ln80_3, i58 %trunc_ln80_2" [d6.cpp:80]   --->   Operation 300 'add' 'add_ln80_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 301 [1/1] (1.57ns)   --->   "%add_ln80_15 = add i128 %add_ln80_14, i128 %add_ln80_12" [d6.cpp:80]   --->   Operation 301 'add' 'add_ln80_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 302 [1/1] (1.09ns)   --->   "%add_ln80_16 = add i58 %trunc_ln80_6, i58 %trunc_ln80_5" [d6.cpp:80]   --->   Operation 302 'add' 'add_ln80_16' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 303 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_24 = add i128 %add_ln80_27, i128 %add_ln80_25" [d6.cpp:80]   --->   Operation 303 'add' 'add_ln80_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 304 [1/1] (0.00ns)   --->   "%trunc_ln80_14 = trunc i128 %add_3186_loc_load" [d6.cpp:80]   --->   Operation 304 'trunc' 'trunc_ln80_14' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 305 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_29 = add i58 %trunc_ln80_13, i58 %trunc_ln80_12" [d6.cpp:80]   --->   Operation 305 'add' 'add_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 306 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_28 = add i128 %add_ln80_32, i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 306 'add' 'add_ln80_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 307 [1/1] (0.00ns)   --->   "%trunc_ln80_17 = trunc i128 %add_4187_loc_load" [d6.cpp:80]   --->   Operation 307 'trunc' 'trunc_ln80_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 308 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_34 = add i58 %trunc_ln80_16, i58 %trunc_ln80_15" [d6.cpp:80]   --->   Operation 308 'add' 'add_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln80_18 = trunc i128 %add_5188_loc_load" [d6.cpp:80]   --->   Operation 309 'trunc' 'trunc_ln80_18' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 310 [1/1] (0.00ns)   --->   "%trunc_ln80_20 = trunc i128 %add_6189_loc_load" [d6.cpp:80]   --->   Operation 310 'trunc' 'trunc_ln80_20' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 311 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i70 %trunc_ln87_2" [d6.cpp:87]   --->   Operation 311 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 312 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_8 = add i128 %add_6189_loc_load, i128 %sext_ln87" [d6.cpp:87]   --->   Operation 312 'add' 'add_ln87_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 313 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87 = add i128 %add_ln87_8, i128 %add_ln80_33" [d6.cpp:87]   --->   Operation 313 'add' 'add_ln87' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 314 [1/1] (0.00ns)   --->   "%trunc_ln87_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87, i32 58, i32 127" [d6.cpp:87]   --->   Operation 314 'partselect' 'trunc_ln87_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 315 [1/1] (0.00ns)   --->   "%sext_ln87_1 = sext i70 %trunc_ln87_3" [d6.cpp:87]   --->   Operation 315 'sext' 'sext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 316 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_9 = add i128 %add_5188_loc_load, i128 %sext_ln87_1" [d6.cpp:87]   --->   Operation 316 'add' 'add_ln87_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 317 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_1 = add i128 %add_ln87_9, i128 %add_ln80_31" [d6.cpp:87]   --->   Operation 317 'add' 'add_ln87_1' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 318 [1/1] (0.00ns)   --->   "%trunc_ln87_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 318 'partselect' 'trunc_ln87_4' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 319 [1/1] (0.00ns)   --->   "%sext_ln87_2 = sext i70 %trunc_ln87_4" [d6.cpp:87]   --->   Operation 319 'sext' 'sext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 320 [1/1] (1.57ns)   --->   "%add_ln87_10 = add i128 %add_4187_loc_load, i128 %sext_ln87_2" [d6.cpp:87]   --->   Operation 320 'add' 'add_ln87_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 321 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_2 = add i128 %add_ln87_10, i128 %add_ln80_28" [d6.cpp:87]   --->   Operation 321 'add' 'add_ln87_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 322 [1/1] (0.00ns)   --->   "%trunc_ln87_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 127" [d6.cpp:87]   --->   Operation 322 'partselect' 'trunc_ln87_5' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 323 [1/1] (0.00ns)   --->   "%sext_ln87_3 = sext i70 %trunc_ln87_5" [d6.cpp:87]   --->   Operation 323 'sext' 'sext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 324 [1/1] (1.57ns)   --->   "%add_ln87_11 = add i128 %add_3186_loc_load, i128 %sext_ln87_3" [d6.cpp:87]   --->   Operation 324 'add' 'add_ln87_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 325 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_3 = add i128 %add_ln87_11, i128 %add_ln80_24" [d6.cpp:87]   --->   Operation 325 'add' 'add_ln87_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 326 [1/1] (0.00ns)   --->   "%trunc_ln87_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 127" [d6.cpp:87]   --->   Operation 326 'partselect' 'trunc_ln87_6' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 327 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln88_1 = add i58 %trunc_ln80_20, i58 %trunc_ln88_2" [d6.cpp:88]   --->   Operation 327 'add' 'add_ln88_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 328 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln88_2 = add i58 %add_ln88_1, i58 %trunc_ln80_21" [d6.cpp:88]   --->   Operation 328 'add' 'add_ln88_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 329 [1/1] (0.00ns)   --->   "%trunc_ln89_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87, i32 58, i32 115" [d6.cpp:89]   --->   Operation 329 'partselect' 'trunc_ln89_1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 330 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln89_1 = add i58 %trunc_ln80_18, i58 %trunc_ln89_1" [d6.cpp:89]   --->   Operation 330 'add' 'add_ln89_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 331 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln89_2 = add i58 %add_ln89_1, i58 %trunc_ln80_19" [d6.cpp:89]   --->   Operation 331 'add' 'add_ln89_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 332 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 115" [d6.cpp:90]   --->   Operation 332 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 333 [1/1] (1.09ns)   --->   "%add_ln90 = add i58 %trunc_ln80_17, i58 %trunc_ln5" [d6.cpp:90]   --->   Operation 333 'add' 'add_ln90' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 334 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i58 %add_ln90, i58 %add_ln80_34" [d6.cpp:90]   --->   Operation 334 'add' 'out1_w_3' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 115" [d6.cpp:91]   --->   Operation 335 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 336 [1/1] (1.09ns)   --->   "%add_ln91 = add i58 %trunc_ln80_14, i58 %trunc_ln6" [d6.cpp:91]   --->   Operation 336 'add' 'add_ln91' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 337 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i58 %add_ln91, i58 %add_ln80_29" [d6.cpp:91]   --->   Operation 337 'add' 'out1_w_4' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 115" [d6.cpp:92]   --->   Operation 338 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>

State 48 <SV = 47> <Delay = 7.04>
ST_48 : Operation 339 [1/1] (0.00ns)   --->   "%add_2185_loc_load = load i128 %add_2185_loc"   --->   Operation 339 'load' 'add_2185_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 340 [1/1] (0.00ns)   --->   "%add_1184_loc_load = load i128 %add_1184_loc"   --->   Operation 340 'load' 'add_1184_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 341 [1/1] (0.00ns)   --->   "%add183_loc_load = load i128 %add183_loc"   --->   Operation 341 'load' 'add183_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 342 [1/1] (0.00ns)   --->   "%zext_ln62_4 = zext i64 %mem_addr_read_6" [d6.cpp:62]   --->   Operation 342 'zext' 'zext_ln62_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 343 [1/1] (0.00ns)   --->   "%zext_ln62_5 = zext i64 %mem_addr_1_read_2" [d6.cpp:62]   --->   Operation 343 'zext' 'zext_ln62_5' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 344 '%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4'
ST_48 : Operation 344 [1/1] (3.55ns)   --->   "%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4" [d6.cpp:62]   --->   Operation 344 'mul' 'mul_ln62_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 345 [1/1] (0.00ns)   --->   "%zext_ln62_6 = zext i64 %mem_addr_read_5" [d6.cpp:62]   --->   Operation 345 'zext' 'zext_ln62_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln62_7 = zext i64 %mem_addr_1_read_3" [d6.cpp:62]   --->   Operation 346 'zext' 'zext_ln62_7' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 347 '%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6'
ST_48 : Operation 347 [1/1] (3.55ns)   --->   "%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6" [d6.cpp:62]   --->   Operation 347 'mul' 'mul_ln62_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln62_16 = zext i64 %mem_addr_read" [d6.cpp:62]   --->   Operation 348 'zext' 'zext_ln62_16' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 349 [1/1] (0.00ns)   --->   "%zext_ln62_17 = zext i64 %mem_addr_1_read_8" [d6.cpp:62]   --->   Operation 349 'zext' 'zext_ln62_17' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 350 '%mul_ln62_8 = mul i128 %zext_ln62_17, i128 %zext_ln62_16'
ST_48 : Operation 350 [1/1] (3.55ns)   --->   "%mul_ln62_8 = mul i128 %zext_ln62_17, i128 %zext_ln62_16" [d6.cpp:62]   --->   Operation 350 'mul' 'mul_ln62_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 351 [1/1] (1.57ns)   --->   "%add_ln62_2 = add i128 %add_ln62_1, i128 %add_ln62" [d6.cpp:62]   --->   Operation 351 'add' 'add_ln62_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 352 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_4 = add i128 %mul_ln62_2, i128 %mul_ln62_8" [d6.cpp:62]   --->   Operation 352 'add' 'add_ln62_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 353 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln62_5 = add i128 %add_ln62_4, i128 %mul_ln62_3" [d6.cpp:62]   --->   Operation 353 'add' 'add_ln62_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 354 [1/1] (0.00ns)   --->   "%trunc_ln62_3 = trunc i128 %add_ln62_5" [d6.cpp:62]   --->   Operation 354 'trunc' 'trunc_ln62_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 355 [1/1] (1.09ns)   --->   "%add_ln62_7 = add i57 %trunc_ln62_1, i57 %trunc_ln62" [d6.cpp:62]   --->   Operation 355 'add' 'add_ln62_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 356 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i128 %add183_loc_load" [d6.cpp:80]   --->   Operation 356 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 357 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i58 %add_ln80_8, i58 %add_ln80_7" [d6.cpp:80]   --->   Operation 357 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 358 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_13 = add i128 %add_ln80_15, i128 %add_ln80_11" [d6.cpp:80]   --->   Operation 358 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 359 [1/1] (0.00ns)   --->   "%trunc_ln80_8 = trunc i128 %add_1184_loc_load" [d6.cpp:80]   --->   Operation 359 'trunc' 'trunc_ln80_8' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 360 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_17 = add i58 %add_ln80_16, i58 %trunc_ln80_7" [d6.cpp:80]   --->   Operation 360 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 361 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_19 = add i128 %add_ln80_22, i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 361 'add' 'add_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 362 [1/1] (0.00ns)   --->   "%trunc_ln80_11 = trunc i128 %add_2185_loc_load" [d6.cpp:80]   --->   Operation 362 'trunc' 'trunc_ln80_11' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 363 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_23 = add i58 %trunc_ln80_10, i58 %trunc_ln80_9" [d6.cpp:80]   --->   Operation 363 'add' 'add_ln80_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 364 [1/1] (0.00ns)   --->   "%sext_ln87_4 = sext i70 %trunc_ln87_6" [d6.cpp:87]   --->   Operation 364 'sext' 'sext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 365 [1/1] (1.57ns)   --->   "%add_ln87_12 = add i128 %add_2185_loc_load, i128 %sext_ln87_4" [d6.cpp:87]   --->   Operation 365 'add' 'add_ln87_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 366 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_4 = add i128 %add_ln87_12, i128 %add_ln80_19" [d6.cpp:87]   --->   Operation 366 'add' 'add_ln87_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 367 [1/1] (0.00ns)   --->   "%trunc_ln87_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 127" [d6.cpp:87]   --->   Operation 367 'partselect' 'trunc_ln87_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 368 [1/1] (0.00ns)   --->   "%sext_ln87_5 = sext i70 %trunc_ln87_7" [d6.cpp:87]   --->   Operation 368 'sext' 'sext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 369 [1/1] (1.57ns)   --->   "%add_ln87_13 = add i128 %add_1184_loc_load, i128 %sext_ln87_5" [d6.cpp:87]   --->   Operation 369 'add' 'add_ln87_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 370 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_5 = add i128 %add_ln87_13, i128 %add_ln80_13" [d6.cpp:87]   --->   Operation 370 'add' 'add_ln87_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 371 [1/1] (0.00ns)   --->   "%trunc_ln87_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 127" [d6.cpp:87]   --->   Operation 371 'partselect' 'trunc_ln87_8' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 372 [1/1] (0.00ns)   --->   "%sext_ln87_6 = sext i70 %trunc_ln87_8" [d6.cpp:87]   --->   Operation 372 'sext' 'sext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 373 [1/1] (1.57ns)   --->   "%add_ln87_14 = add i128 %add183_loc_load, i128 %sext_ln87_6" [d6.cpp:87]   --->   Operation 373 'add' 'add_ln87_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 374 [1/1] (1.09ns)   --->   "%add_ln92 = add i58 %trunc_ln80_11, i58 %trunc_ln7" [d6.cpp:92]   --->   Operation 374 'add' 'add_ln92' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 375 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i58 %add_ln92, i58 %add_ln80_23" [d6.cpp:92]   --->   Operation 375 'add' 'out1_w_5' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 376 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 115" [d6.cpp:93]   --->   Operation 376 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 377 [1/1] (1.09ns)   --->   "%add_ln93 = add i58 %trunc_ln80_8, i58 %trunc_ln8" [d6.cpp:93]   --->   Operation 377 'add' 'add_ln93' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 378 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i58 %add_ln93, i58 %add_ln80_17" [d6.cpp:93]   --->   Operation 378 'add' 'out1_w_6' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 379 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 115" [d6.cpp:94]   --->   Operation 379 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 380 [1/1] (1.09ns)   --->   "%add_ln94 = add i58 %trunc_ln80_4, i58 %trunc_ln9" [d6.cpp:94]   --->   Operation 380 'add' 'add_ln94' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 381 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_7 = add i58 %add_ln94, i58 %add_ln80_9" [d6.cpp:94]   --->   Operation 381 'add' 'out1_w_7' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 49 <SV = 48> <Delay = 6.66>
ST_49 : Operation 382 [1/1] (1.57ns)   --->   "%add_ln62_6 = add i128 %add_ln62_5, i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 382 'add' 'add_ln62_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 383 [1/1] (1.09ns)   --->   "%add_ln62_8 = add i57 %trunc_ln62_3, i57 %trunc_ln62_2" [d6.cpp:62]   --->   Operation 383 'add' 'add_ln62_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 384 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr = add i128 %add_ln62_6, i128 %add_ln62_2" [d6.cpp:62]   --->   Operation 384 'add' 'arr' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 385 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_6 = add i128 %add_ln80_5, i128 %add_ln80_2" [d6.cpp:80]   --->   Operation 385 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 386 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_6 = add i128 %add_ln87_14, i128 %add_ln80_6" [d6.cpp:87]   --->   Operation 386 'add' 'add_ln87_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 387 [1/1] (0.00ns)   --->   "%trunc_ln87_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 127" [d6.cpp:87]   --->   Operation 387 'partselect' 'trunc_ln87_9' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 388 [1/1] (0.00ns)   --->   "%sext_ln87_7 = sext i70 %trunc_ln87_9" [d6.cpp:87]   --->   Operation 388 'sext' 'sext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 389 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_7 = add i128 %arr, i128 %sext_ln87_7" [d6.cpp:87]   --->   Operation 389 'add' 'add_ln87_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 390 [1/1] (0.00ns)   --->   "%trunc_ln87_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 114" [d6.cpp:87]   --->   Operation 390 'partselect' 'trunc_ln87_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 391 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln87_1, i58 %trunc_ln87" [d6.cpp:87]   --->   Operation 391 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 392 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i58 %trunc_ln87" [d6.cpp:88]   --->   Operation 392 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 393 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 127" [d6.cpp:88]   --->   Operation 393 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 394 [1/1] (0.00ns)   --->   "%sext_ln88 = sext i71 %trunc_ln3" [d6.cpp:88]   --->   Operation 394 'sext' 'sext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 395 [1/1] (1.13ns)   --->   "%add_ln88 = add i72 %sext_ln88, i72 %zext_ln88" [d6.cpp:88]   --->   Operation 395 'add' 'add_ln88' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 396 [1/1] (0.00ns)   --->   "%trunc_ln88_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln88, i32 58, i32 71" [d6.cpp:88]   --->   Operation 396 'partselect' 'trunc_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 397 [1/1] (0.00ns)   --->   "%sext_ln88_1 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 397 'sext' 'sext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 398 [1/1] (0.00ns)   --->   "%sext_ln88_2 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 398 'sext' 'sext_ln88_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 399 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln88_2, i58 %add_ln88_2" [d6.cpp:88]   --->   Operation 399 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 400 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i58 %add_ln88_2" [d6.cpp:89]   --->   Operation 400 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 401 [1/1] (1.09ns)   --->   "%add_ln89 = add i60 %sext_ln88_1, i60 %zext_ln89" [d6.cpp:89]   --->   Operation 401 'add' 'add_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 402 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln89, i32 58, i32 59" [d6.cpp:89]   --->   Operation 402 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 403 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i2 %tmp" [d6.cpp:89]   --->   Operation 403 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i6 %sext_ln89" [d6.cpp:89]   --->   Operation 404 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 405 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i58 %add_ln89_2" [d6.cpp:89]   --->   Operation 405 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 406 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln89_2, i59 %zext_ln89_1" [d6.cpp:89]   --->   Operation 406 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 114" [d6.cpp:95]   --->   Operation 407 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 408 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln95 = add i57 %add_ln62_8, i57 %add_ln62_7" [d6.cpp:95]   --->   Operation 408 'add' 'add_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 409 [1/1] (0.79ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i57 %add_ln95, i57 %trunc_ln" [d6.cpp:95]   --->   Operation 409 'add' 'out1_w_8' <Predicate = true> <Delay = 0.79> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 410 [2/2] (0.77ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 410 'call' 'call_ln99' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 0.00>
ST_50 : Operation 411 [1/2] (0.00ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 411 'call' 'call_ln99' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 50> <Delay = 7.30>
ST_51 : Operation 412 [5/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 412 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 7.30>
ST_52 : Operation 413 [4/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 413 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 7.30>
ST_53 : Operation 414 [3/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 414 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 7.30>
ST_54 : Operation 415 [2/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 415 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 7.30>
ST_55 : Operation 416 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d6.cpp:3]   --->   Operation 416 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 417 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 417 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 418 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 418 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 419 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 419 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 420 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 420 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 421 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 421 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 422 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 422 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 423 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 423 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 424 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 424 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 425 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 425 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 426 [1/5] (7.30ns)   --->   "%empty_39 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 426 'writeresp' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 427 [1/1] (0.00ns)   --->   "%ret_ln104 = ret" [d6.cpp:104]   --->   Operation 427 'ret' 'ret_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d6.cpp:22) [46]  (0.000 ns)
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d6.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [48]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d6.cpp:29) [60]  (0.000 ns)
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 0.000ns
The critical path consists of the following:

 <State 22>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_36', d6.cpp:62) on port 'mem' (d6.cpp:62) [89]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [90]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [91]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [92]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [93]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [94]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [95]  (7.300 ns)

 <State 36>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [96]  (7.300 ns)

 <State 37>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [97]  (7.300 ns)

 <State 38>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 39>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [101]  (7.300 ns)

 <State 40>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [102]  (7.300 ns)

 <State 41>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [103]  (7.300 ns)

 <State 42>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [104]  (7.300 ns)

 <State 43>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [105]  (7.300 ns)

 <State 44>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [106]  (7.300 ns)

 <State 45>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [107]  (7.300 ns)

 <State 46>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [108]  (7.300 ns)

 <State 47>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [109]  (7.300 ns)

 <State 48>: 7.041ns
The critical path consists of the following:
	'load' operation ('add_2185_loc_load') on local variable 'add_2185_loc' [86]  (0.000 ns)
	'add' operation ('add_ln87_12', d6.cpp:87) [280]  (1.579 ns)
	'add' operation ('add_ln87_4', d6.cpp:87) [281]  (0.995 ns)
	'add' operation ('add_ln87_13', d6.cpp:87) [284]  (1.579 ns)
	'add' operation ('add_ln87_5', d6.cpp:87) [285]  (0.995 ns)
	'add' operation ('add_ln94', d6.cpp:94) [329]  (1.093 ns)
	'add' operation ('out1_w', d6.cpp:94) [330]  (0.800 ns)

 <State 49>: 6.669ns
The critical path consists of the following:
	'add' operation ('add_ln62_6', d6.cpp:62) [146]  (1.579 ns)
	'add' operation ('arr', d6.cpp:62) [149]  (0.000 ns)
	'add' operation ('add_ln87_7', d6.cpp:87) [292]  (0.995 ns)
	'add' operation ('add_ln88', d6.cpp:88) [298]  (1.139 ns)
	'add' operation ('add_ln89', d6.cpp:89) [307]  (1.093 ns)
	'add' operation ('out1_w', d6.cpp:89) [315]  (1.093 ns)
	'call' operation ('call_ln99', d6.cpp:99) to 'test_Pipeline_ARRAY_WRITE' [338]  (0.770 ns)

 <State 50>: 0.000ns
The critical path consists of the following:

 <State 51>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d6.cpp:104) on port 'mem' (d6.cpp:104) [339]  (7.300 ns)

 <State 52>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d6.cpp:104) on port 'mem' (d6.cpp:104) [339]  (7.300 ns)

 <State 53>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d6.cpp:104) on port 'mem' (d6.cpp:104) [339]  (7.300 ns)

 <State 54>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d6.cpp:104) on port 'mem' (d6.cpp:104) [339]  (7.300 ns)

 <State 55>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_39', d6.cpp:104) on port 'mem' (d6.cpp:104) [339]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
