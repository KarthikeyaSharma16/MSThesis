

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:05:46 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_18 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      100|      100|  1.000 us|  1.000 us|  101|  101|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 56 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 56 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 57 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 57 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 58 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 58 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add12481_loc = alloca i64 1"   --->   Operation 59 'alloca' 'add12481_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add124_12882_loc = alloca i64 1"   --->   Operation 60 'alloca' 'add124_12882_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add124_283_loc = alloca i64 1"   --->   Operation 61 'alloca' 'add124_283_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add124_384_loc = alloca i64 1"   --->   Operation 62 'alloca' 'add124_384_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add124_485_loc = alloca i64 1"   --->   Operation 63 'alloca' 'add124_485_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add124_586_loc = alloca i64 1"   --->   Operation 64 'alloca' 'add124_586_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add124_687_loc = alloca i64 1"   --->   Operation 65 'alloca' 'add124_687_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add124_788_loc = alloca i64 1"   --->   Operation 66 'alloca' 'add124_788_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%add89_loc = alloca i64 1"   --->   Operation 67 'alloca' 'add89_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%add_17690_loc = alloca i64 1"   --->   Operation 68 'alloca' 'add_17690_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%add_291_loc = alloca i64 1"   --->   Operation 69 'alloca' 'add_291_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%add_392_loc = alloca i64 1"   --->   Operation 70 'alloca' 'add_392_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%add_15893_loc = alloca i64 1"   --->   Operation 71 'alloca' 'add_15893_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%add_158_194_loc = alloca i64 1"   --->   Operation 72 'alloca' 'add_158_194_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%add_158_295_loc = alloca i64 1"   --->   Operation 73 'alloca' 'add_158_295_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%add_158_396_loc = alloca i64 1"   --->   Operation 74 'alloca' 'add_158_396_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 80 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 81 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 82 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 83 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 84 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 85 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 86 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 87 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 88 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 89 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 90 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 91 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 92 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d6.cpp:22]   --->   Operation 93 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d6.cpp:29]   --->   Operation 94 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln99_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d6.cpp:99]   --->   Operation 95 'partselect' 'trunc_ln99_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d6.cpp:22]   --->   Operation 96 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d6.cpp:22]   --->   Operation 97 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 98 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 99 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 99 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 100 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 100 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 101 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 101 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 102 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 102 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 103 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 103 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 104 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 104 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 105 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 105 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 106 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 106 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 107 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 107 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 108 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d6.cpp:29]   --->   Operation 108 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d6.cpp:29]   --->   Operation 109 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [8/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 110 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 111 [7/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 111 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 112 [6/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 112 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 113 [5/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 113 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 114 [4/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 114 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 115 [3/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 115 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 116 [2/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 116 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 117 [1/8] (7.30ns)   --->   "%empty_29 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 117 'readreq' 'empty_29' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 118 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 118 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 119 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 119 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 120 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 121 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 122 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 123 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 124 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 125 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 126 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 126 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 127 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 127 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 128 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 128 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 129 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 129 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 130 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 130 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 131 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 131 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 132 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 133 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 134 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 135 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 136 [1/1] (0.00ns)   --->   "%empty_30 = trunc i64 %arg2_r_1_loc_load"   --->   Operation 136 'trunc' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 137 [1/1] (0.00ns)   --->   "%empty_31 = trunc i64 %arg2_r_2_loc_load"   --->   Operation 137 'trunc' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 138 [1/1] (0.00ns)   --->   "%empty_32 = trunc i64 %arg2_r_3_loc_load"   --->   Operation 138 'trunc' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 139 [1/1] (0.00ns)   --->   "%empty_33 = trunc i64 %arg2_r_4_loc_load"   --->   Operation 139 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "%empty_34 = trunc i64 %arg2_r_5_loc_load"   --->   Operation 140 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "%empty_35 = trunc i64 %arg2_r_6_loc_load"   --->   Operation 141 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "%empty_36 = trunc i64 %arg2_r_8_loc_load"   --->   Operation 142 'trunc' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 143 [1/1] (0.00ns)   --->   "%empty_37 = trunc i64 %arg2_r_7_loc_load"   --->   Operation 143 'trunc' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 144 [1/1] (0.00ns)   --->   "%empty_38 = shl i64 %arg2_r_8_loc_load, i64 1"   --->   Operation 144 'shl' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 145 [2/2] (6.13ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_2_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_8_loc_load, i64 %empty_38, i63 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i64 %arg1_r_1_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_7_loc_load, i128 %add_158_396_loc, i128 %add_158_295_loc, i128 %add_158_194_loc, i128 %add_15893_loc, i128 %add_392_loc, i128 %add_291_loc, i128 %add_17690_loc, i128 %add89_loc"   --->   Operation 145 'call' 'call_ln0' <Predicate = true> <Delay = 6.13> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 146 [8/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 146 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 147 [1/2] (1.22ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_2_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_8_loc_load, i64 %empty_38, i63 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i63 %empty_32, i63 %empty_31, i63 %empty_30, i64 %arg1_r_1_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_7_loc_load, i128 %add_158_396_loc, i128 %add_158_295_loc, i128 %add_158_194_loc, i128 %add_15893_loc, i128 %add_392_loc, i128 %add_291_loc, i128 %add_17690_loc, i128 %add89_loc"   --->   Operation 147 'call' 'call_ln0' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 148 [7/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 148 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 149 [8/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 149 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 150 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 150 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 151 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 151 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 152 [1/1] (0.00ns)   --->   "%add_158_396_loc_load = load i128 %add_158_396_loc"   --->   Operation 152 'load' 'add_158_396_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 153 [1/1] (0.00ns)   --->   "%add_158_295_loc_load = load i128 %add_158_295_loc"   --->   Operation 153 'load' 'add_158_295_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 154 [1/1] (0.00ns)   --->   "%add_158_194_loc_load = load i128 %add_158_194_loc"   --->   Operation 154 'load' 'add_158_194_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 155 [1/1] (0.00ns)   --->   "%add_15893_loc_load = load i128 %add_15893_loc"   --->   Operation 155 'load' 'add_15893_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 156 [1/1] (0.00ns)   --->   "%add_392_loc_load = load i128 %add_392_loc"   --->   Operation 156 'load' 'add_392_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 157 [1/1] (0.00ns)   --->   "%add_291_loc_load = load i128 %add_291_loc"   --->   Operation 157 'load' 'add_291_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 158 [1/1] (0.00ns)   --->   "%add_17690_loc_load = load i128 %add_17690_loc"   --->   Operation 158 'load' 'add_17690_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 159 [1/1] (0.00ns)   --->   "%add89_loc_load = load i128 %add89_loc"   --->   Operation 159 'load' 'add89_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 160 [6/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 160 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 161 [7/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 161 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 162 [2/2] (0.72ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_67_7, i128 %add_158_396_loc_load, i128 %add_158_295_loc_load, i128 %add_158_194_loc_load, i128 %add_15893_loc_load, i128 %add_392_loc_load, i128 %add_291_loc_load, i128 %add_17690_loc_load, i128 %add89_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i64 %arg1_r_loc_load, i128 %add124_788_loc, i128 %add124_687_loc, i128 %add124_586_loc, i128 %add124_485_loc, i128 %add124_384_loc, i128 %add124_283_loc, i128 %add124_12882_loc, i128 %add12481_loc"   --->   Operation 162 'call' 'call_ln0' <Predicate = true> <Delay = 0.72> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 163 [5/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 163 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 164 [6/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 164 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 165 [1/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_67_7, i128 %add_158_396_loc_load, i128 %add_158_295_loc_load, i128 %add_158_194_loc_load, i128 %add_15893_loc_load, i128 %add_392_loc_load, i128 %add_291_loc_load, i128 %add_17690_loc_load, i128 %add89_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i64 %arg1_r_loc_load, i128 %add124_788_loc, i128 %add124_687_loc, i128 %add124_586_loc, i128 %add124_485_loc, i128 %add124_384_loc, i128 %add124_283_loc, i128 %add124_12882_loc, i128 %add12481_loc"   --->   Operation 165 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 166 [4/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 166 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 167 [5/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 167 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 168 [3/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 168 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 169 [4/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 169 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 170 [2/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 170 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 171 [3/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 171 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 172 [1/8] (7.30ns)   --->   "%empty_39 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 172 'readreq' 'empty_39' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 173 [2/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 173 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 174 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 174 'read' 'mem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 175 [1/8] (7.30ns)   --->   "%empty_40 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 175 'readreq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 176 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i61 %trunc_ln99_1" [d6.cpp:99]   --->   Operation 176 'sext' 'sext_ln99' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 177 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln99" [d6.cpp:99]   --->   Operation 177 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 178 [1/1] (7.30ns)   --->   "%empty_41 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d6.cpp:99]   --->   Operation 178 'writereq' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 179 [1/1] (7.30ns)   --->   "%mem_addr_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 179 'read' 'mem_addr_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 180 [1/1] (7.30ns)   --->   "%mem_addr_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 180 'read' 'mem_addr_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 181 [1/1] (7.30ns)   --->   "%mem_addr_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 181 'read' 'mem_addr_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 182 [1/1] (7.30ns)   --->   "%mem_addr_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 182 'read' 'mem_addr_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 183 [1/1] (7.30ns)   --->   "%mem_addr_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 183 'read' 'mem_addr_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 184 [1/1] (7.30ns)   --->   "%mem_addr_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 184 'read' 'mem_addr_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 185 [1/1] (7.30ns)   --->   "%mem_addr_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 185 'read' 'mem_addr_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 186 [1/1] (7.30ns)   --->   "%mem_addr_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 186 'read' 'mem_addr_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 187 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 187 'read' 'mem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 188 [1/1] (7.30ns)   --->   "%mem_addr_1_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 188 'read' 'mem_addr_1_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i64 %mem_addr_read_8" [d6.cpp:62]   --->   Operation 189 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 190 [1/1] (7.30ns)   --->   "%mem_addr_1_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 190 'read' 'mem_addr_1_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i64 %mem_addr_1_read" [d6.cpp:62]   --->   Operation 191 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.83ns)   --->   Input mux for Operation 192 '%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62'
ST_41 : Operation 192 [1/1] (3.69ns)   --->   "%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62" [d6.cpp:62]   --->   Operation 192 'mul' 'mul_ln62' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i64 %mem_addr_read_7" [d6.cpp:62]   --->   Operation 193 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i64 %mem_addr_1_read_1" [d6.cpp:62]   --->   Operation 194 'zext' 'zext_ln62_3' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.83ns)   --->   Input mux for Operation 195 '%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2'
ST_41 : Operation 195 [1/1] (3.69ns)   --->   "%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2" [d6.cpp:62]   --->   Operation 195 'mul' 'mul_ln62_1' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 196 [1/1] (1.57ns)   --->   "%add_ln62_3 = add i128 %mul_ln62, i128 %mul_ln62_1" [d6.cpp:62]   --->   Operation 196 'add' 'add_ln62_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 197 [1/1] (0.00ns)   --->   "%trunc_ln62_2 = trunc i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 197 'trunc' 'trunc_ln62_2' <Predicate = true> <Delay = 0.00>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 198 [1/1] (7.30ns)   --->   "%mem_addr_1_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 198 'read' 'mem_addr_1_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 199 [1/1] (7.30ns)   --->   "%mem_addr_1_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 199 'read' 'mem_addr_1_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 200 [1/1] (7.30ns)   --->   "%mem_addr_1_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 200 'read' 'mem_addr_1_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 201 [1/1] (7.30ns)   --->   "%mem_addr_1_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 201 'read' 'mem_addr_1_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln62_8 = zext i64 %mem_addr_1_read_4" [d6.cpp:62]   --->   Operation 202 'zext' 'zext_ln62_8' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln62_9 = zext i64 %mem_addr_1_read_5" [d6.cpp:62]   --->   Operation 203 'zext' 'zext_ln62_9' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln62_11 = zext i64 %mem_addr_read_4" [d6.cpp:62]   --->   Operation 204 'zext' 'zext_ln62_11' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.83ns)   --->   Input mux for Operation 205 '%mul_ln62_4 = mul i128 %zext_ln62_8, i128 %zext_ln62_11'
ST_45 : Operation 205 [1/1] (3.69ns)   --->   "%mul_ln62_4 = mul i128 %zext_ln62_8, i128 %zext_ln62_11" [d6.cpp:62]   --->   Operation 205 'mul' 'mul_ln62_4' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln62_13 = zext i64 %mem_addr_read_3" [d6.cpp:62]   --->   Operation 206 'zext' 'zext_ln62_13' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.83ns)   --->   Input mux for Operation 207 '%mul_ln62_6 = mul i128 %zext_ln62_9, i128 %zext_ln62_13'
ST_45 : Operation 207 [1/1] (3.69ns)   --->   "%mul_ln62_6 = mul i128 %zext_ln62_9, i128 %zext_ln62_13" [d6.cpp:62]   --->   Operation 207 'mul' 'mul_ln62_6' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 208 [1/1] (1.57ns)   --->   "%add_ln62_1 = add i128 %mul_ln62_6, i128 %mul_ln62_4" [d6.cpp:62]   --->   Operation 208 'add' 'add_ln62_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 209 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i128 %add_ln62_1" [d6.cpp:62]   --->   Operation 209 'trunc' 'trunc_ln62_1' <Predicate = true> <Delay = 0.00>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 210 [1/1] (7.30ns)   --->   "%mem_addr_1_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 210 'read' 'mem_addr_1_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 211 [1/1] (7.30ns)   --->   "%mem_addr_1_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 211 'read' 'mem_addr_1_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln62_10 = zext i64 %mem_addr_1_read_6" [d6.cpp:62]   --->   Operation 212 'zext' 'zext_ln62_10' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 213 [1/1] (0.00ns)   --->   "%add124_788_loc_load = load i128 %add124_788_loc"   --->   Operation 213 'load' 'add124_788_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 214 [1/1] (0.00ns)   --->   "%add124_687_loc_load = load i128 %add124_687_loc"   --->   Operation 214 'load' 'add124_687_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 215 [1/1] (0.00ns)   --->   "%add124_586_loc_load = load i128 %add124_586_loc"   --->   Operation 215 'load' 'add124_586_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln62_12 = zext i64 %mem_addr_read_2" [d6.cpp:62]   --->   Operation 216 'zext' 'zext_ln62_12' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.83ns)   --->   Input mux for Operation 217 '%mul_ln62_5 = mul i128 %zext_ln62_10, i128 %zext_ln62_12'
ST_47 : Operation 217 [1/1] (3.69ns)   --->   "%mul_ln62_5 = mul i128 %zext_ln62_10, i128 %zext_ln62_12" [d6.cpp:62]   --->   Operation 217 'mul' 'mul_ln62_5' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln62_14 = zext i64 %mem_addr_1_read_7" [d6.cpp:62]   --->   Operation 218 'zext' 'zext_ln62_14' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln62_15 = zext i64 %mem_addr_read_1" [d6.cpp:62]   --->   Operation 219 'zext' 'zext_ln62_15' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.83ns)   --->   Input mux for Operation 220 '%mul_ln62_7 = mul i128 %zext_ln62_14, i128 %zext_ln62_15'
ST_47 : Operation 220 [1/1] (3.69ns)   --->   "%mul_ln62_7 = mul i128 %zext_ln62_14, i128 %zext_ln62_15" [d6.cpp:62]   --->   Operation 220 'mul' 'mul_ln62_7' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 221 [1/1] (1.57ns)   --->   "%add_ln62 = add i128 %mul_ln62_5, i128 %mul_ln62_7" [d6.cpp:62]   --->   Operation 221 'add' 'add_ln62' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 222 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i128 %add_ln62" [d6.cpp:62]   --->   Operation 222 'trunc' 'trunc_ln62' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i128 %add124_788_loc_load" [d6.cpp:87]   --->   Operation 223 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 224 [1/1] (0.00ns)   --->   "%trunc_ln87_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add124_788_loc_load, i32 58, i32 127" [d6.cpp:87]   --->   Operation 224 'partselect' 'trunc_ln87_2' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 225 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i70 %trunc_ln87_2" [d6.cpp:87]   --->   Operation 225 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 226 [1/1] (1.57ns)   --->   "%add_ln87 = add i128 %add124_687_loc_load, i128 %sext_ln87" [d6.cpp:87]   --->   Operation 226 'add' 'add_ln87' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 227 [1/1] (0.00ns)   --->   "%trunc_ln87_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87, i32 58, i32 127" [d6.cpp:87]   --->   Operation 227 'partselect' 'trunc_ln87_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 228 [1/1] (0.00ns)   --->   "%sext_ln87_1 = sext i70 %trunc_ln87_3" [d6.cpp:87]   --->   Operation 228 'sext' 'sext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 229 [1/1] (1.57ns)   --->   "%add_ln87_1 = add i128 %add124_586_loc_load, i128 %sext_ln87_1" [d6.cpp:87]   --->   Operation 229 'add' 'add_ln87_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln87_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 230 'partselect' 'trunc_ln87_4' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln88 = trunc i128 %add124_687_loc_load" [d6.cpp:88]   --->   Operation 231 'trunc' 'trunc_ln88' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 232 [1/1] (0.00ns)   --->   "%trunc_ln88_3 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add124_788_loc_load, i32 58, i32 115" [d6.cpp:88]   --->   Operation 232 'partselect' 'trunc_ln88_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 233 [1/1] (1.09ns)   --->   "%add_ln88_1 = add i58 %trunc_ln88_3, i58 %trunc_ln88" [d6.cpp:88]   --->   Operation 233 'add' 'add_ln88_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i128 %add124_586_loc_load" [d6.cpp:89]   --->   Operation 234 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln89_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87, i32 58, i32 115" [d6.cpp:89]   --->   Operation 235 'partselect' 'trunc_ln89_2' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 236 [1/1] (1.09ns)   --->   "%add_ln89_1 = add i58 %trunc_ln89_2, i58 %trunc_ln89" [d6.cpp:89]   --->   Operation 236 'add' 'add_ln89_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 237 [1/1] (0.00ns)   --->   "%trunc_ln90_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 115" [d6.cpp:90]   --->   Operation 237 'partselect' 'trunc_ln90_1' <Predicate = true> <Delay = 0.00>

State 48 <SV = 47> <Delay = 6.31>
ST_48 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln62_4 = zext i64 %mem_addr_read_6" [d6.cpp:62]   --->   Operation 238 'zext' 'zext_ln62_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln62_5 = zext i64 %mem_addr_1_read_2" [d6.cpp:62]   --->   Operation 239 'zext' 'zext_ln62_5' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.83ns)   --->   Input mux for Operation 240 '%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4'
ST_48 : Operation 240 [1/1] (3.69ns)   --->   "%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4" [d6.cpp:62]   --->   Operation 240 'mul' 'mul_ln62_2' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 241 [1/1] (0.00ns)   --->   "%zext_ln62_6 = zext i64 %mem_addr_read_5" [d6.cpp:62]   --->   Operation 241 'zext' 'zext_ln62_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln62_7 = zext i64 %mem_addr_1_read_3" [d6.cpp:62]   --->   Operation 242 'zext' 'zext_ln62_7' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.83ns)   --->   Input mux for Operation 243 '%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6'
ST_48 : Operation 243 [1/1] (3.69ns)   --->   "%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6" [d6.cpp:62]   --->   Operation 243 'mul' 'mul_ln62_3' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 244 [1/1] (0.00ns)   --->   "%add124_485_loc_load = load i128 %add124_485_loc"   --->   Operation 244 'load' 'add124_485_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 245 [1/1] (0.00ns)   --->   "%add124_384_loc_load = load i128 %add124_384_loc"   --->   Operation 245 'load' 'add124_384_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 246 [1/1] (0.00ns)   --->   "%add124_283_loc_load = load i128 %add124_283_loc"   --->   Operation 246 'load' 'add124_283_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 247 [1/1] (0.00ns)   --->   "%add124_12882_loc_load = load i128 %add124_12882_loc"   --->   Operation 247 'load' 'add124_12882_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 248 [1/1] (0.00ns)   --->   "%zext_ln62_16 = zext i64 %mem_addr_1_read_8" [d6.cpp:62]   --->   Operation 248 'zext' 'zext_ln62_16' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln62_17 = zext i64 %mem_addr_read" [d6.cpp:62]   --->   Operation 249 'zext' 'zext_ln62_17' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.83ns)   --->   Input mux for Operation 250 '%mul_ln62_8 = mul i128 %zext_ln62_16, i128 %zext_ln62_17'
ST_48 : Operation 250 [1/1] (3.69ns)   --->   "%mul_ln62_8 = mul i128 %zext_ln62_16, i128 %zext_ln62_17" [d6.cpp:62]   --->   Operation 250 'mul' 'mul_ln62_8' <Predicate = true> <Delay = 3.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 251 [1/1] (1.57ns)   --->   "%add_ln62_2 = add i128 %add_ln62_1, i128 %add_ln62" [d6.cpp:62]   --->   Operation 251 'add' 'add_ln62_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 252 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_4 = add i128 %mul_ln62_2, i128 %mul_ln62_8" [d6.cpp:62]   --->   Operation 252 'add' 'add_ln62_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 253 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln62_5 = add i128 %add_ln62_4, i128 %mul_ln62_3" [d6.cpp:62]   --->   Operation 253 'add' 'add_ln62_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 254 [1/1] (0.00ns)   --->   "%trunc_ln62_3 = trunc i128 %add_ln62_5" [d6.cpp:62]   --->   Operation 254 'trunc' 'trunc_ln62_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 255 [1/1] (1.09ns)   --->   "%add_ln62_7 = add i57 %trunc_ln62_1, i57 %trunc_ln62" [d6.cpp:62]   --->   Operation 255 'add' 'add_ln62_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 256 [1/1] (0.00ns)   --->   "%sext_ln87_2 = sext i70 %trunc_ln87_4" [d6.cpp:87]   --->   Operation 256 'sext' 'sext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 257 [1/1] (1.57ns)   --->   "%add_ln87_2 = add i128 %add124_485_loc_load, i128 %sext_ln87_2" [d6.cpp:87]   --->   Operation 257 'add' 'add_ln87_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln87_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 127" [d6.cpp:87]   --->   Operation 258 'partselect' 'trunc_ln87_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 259 [1/1] (0.00ns)   --->   "%sext_ln87_3 = sext i70 %trunc_ln87_5" [d6.cpp:87]   --->   Operation 259 'sext' 'sext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 260 [1/1] (1.57ns)   --->   "%add_ln87_3 = add i128 %add124_384_loc_load, i128 %sext_ln87_3" [d6.cpp:87]   --->   Operation 260 'add' 'add_ln87_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln87_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 127" [d6.cpp:87]   --->   Operation 261 'partselect' 'trunc_ln87_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 262 [1/1] (0.00ns)   --->   "%sext_ln87_4 = sext i70 %trunc_ln87_6" [d6.cpp:87]   --->   Operation 262 'sext' 'sext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 263 [1/1] (1.57ns)   --->   "%add_ln87_4 = add i128 %add124_283_loc_load, i128 %sext_ln87_4" [d6.cpp:87]   --->   Operation 263 'add' 'add_ln87_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 264 [1/1] (0.00ns)   --->   "%trunc_ln87_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 127" [d6.cpp:87]   --->   Operation 264 'partselect' 'trunc_ln87_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 265 [1/1] (0.00ns)   --->   "%sext_ln87_5 = sext i70 %trunc_ln87_7" [d6.cpp:87]   --->   Operation 265 'sext' 'sext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 266 [1/1] (1.57ns)   --->   "%add_ln87_5 = add i128 %add124_12882_loc_load, i128 %sext_ln87_5" [d6.cpp:87]   --->   Operation 266 'add' 'add_ln87_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 267 [1/1] (0.00ns)   --->   "%trunc_ln87_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 127" [d6.cpp:87]   --->   Operation 267 'partselect' 'trunc_ln87_8' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i128 %add124_485_loc_load" [d6.cpp:90]   --->   Operation 268 'trunc' 'trunc_ln90' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 269 [1/1] (1.09ns)   --->   "%out1_w_3 = add i58 %trunc_ln90_1, i58 %trunc_ln90" [d6.cpp:90]   --->   Operation 269 'add' 'out1_w_3' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln91 = trunc i128 %add124_384_loc_load" [d6.cpp:91]   --->   Operation 270 'trunc' 'trunc_ln91' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 271 [1/1] (0.00ns)   --->   "%trunc_ln91_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 115" [d6.cpp:91]   --->   Operation 271 'partselect' 'trunc_ln91_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 272 [1/1] (1.09ns)   --->   "%out1_w_4 = add i58 %trunc_ln91_1, i58 %trunc_ln91" [d6.cpp:91]   --->   Operation 272 'add' 'out1_w_4' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 273 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i128 %add124_283_loc_load" [d6.cpp:92]   --->   Operation 273 'trunc' 'trunc_ln92' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln92_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 115" [d6.cpp:92]   --->   Operation 274 'partselect' 'trunc_ln92_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 275 [1/1] (1.09ns)   --->   "%out1_w_5 = add i58 %trunc_ln92_1, i58 %trunc_ln92" [d6.cpp:92]   --->   Operation 275 'add' 'out1_w_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 276 [1/1] (0.00ns)   --->   "%trunc_ln93 = trunc i128 %add124_12882_loc_load" [d6.cpp:93]   --->   Operation 276 'trunc' 'trunc_ln93' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln93_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 115" [d6.cpp:93]   --->   Operation 277 'partselect' 'trunc_ln93_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 278 [1/1] (1.09ns)   --->   "%out1_w_6 = add i58 %trunc_ln93_1, i58 %trunc_ln93" [d6.cpp:93]   --->   Operation 278 'add' 'out1_w_6' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 279 [1/1] (0.00ns)   --->   "%trunc_ln94_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 115" [d6.cpp:94]   --->   Operation 279 'partselect' 'trunc_ln94_1' <Predicate = true> <Delay = 0.00>

State 49 <SV = 48> <Delay = 6.66>
ST_49 : Operation 280 [1/1] (0.00ns)   --->   "%add12481_loc_load = load i128 %add12481_loc"   --->   Operation 280 'load' 'add12481_loc_load' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 281 [1/1] (1.57ns)   --->   "%add_ln62_6 = add i128 %add_ln62_5, i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 281 'add' 'add_ln62_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 282 [1/1] (1.09ns)   --->   "%add_ln62_8 = add i57 %trunc_ln62_3, i57 %trunc_ln62_2" [d6.cpp:62]   --->   Operation 282 'add' 'add_ln62_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 283 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr = add i128 %add_ln62_6, i128 %add_ln62_2" [d6.cpp:62]   --->   Operation 283 'add' 'arr' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 284 [1/1] (0.00ns)   --->   "%sext_ln87_6 = sext i70 %trunc_ln87_8" [d6.cpp:87]   --->   Operation 284 'sext' 'sext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 285 [1/1] (1.57ns)   --->   "%add_ln87_6 = add i128 %add12481_loc_load, i128 %sext_ln87_6" [d6.cpp:87]   --->   Operation 285 'add' 'add_ln87_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 286 [1/1] (0.00ns)   --->   "%trunc_ln87_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 127" [d6.cpp:87]   --->   Operation 286 'partselect' 'trunc_ln87_9' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 287 [1/1] (0.00ns)   --->   "%sext_ln87_7 = sext i70 %trunc_ln87_9" [d6.cpp:87]   --->   Operation 287 'sext' 'sext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 288 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_7 = add i128 %arr, i128 %sext_ln87_7" [d6.cpp:87]   --->   Operation 288 'add' 'add_ln87_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 289 [1/1] (0.00ns)   --->   "%trunc_ln87_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 114" [d6.cpp:87]   --->   Operation 289 'partselect' 'trunc_ln87_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 290 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln87_1, i58 %trunc_ln87" [d6.cpp:87]   --->   Operation 290 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 291 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i58 %trunc_ln87" [d6.cpp:88]   --->   Operation 291 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 292 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 127" [d6.cpp:88]   --->   Operation 292 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 293 [1/1] (0.00ns)   --->   "%sext_ln88 = sext i71 %trunc_ln3" [d6.cpp:88]   --->   Operation 293 'sext' 'sext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 294 [1/1] (1.13ns)   --->   "%add_ln88 = add i72 %sext_ln88, i72 %zext_ln88" [d6.cpp:88]   --->   Operation 294 'add' 'add_ln88' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln88_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln88, i32 58, i32 71" [d6.cpp:88]   --->   Operation 295 'partselect' 'trunc_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 296 [1/1] (0.00ns)   --->   "%sext_ln88_1 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 296 'sext' 'sext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 297 [1/1] (0.00ns)   --->   "%sext_ln88_2 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 297 'sext' 'sext_ln88_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 298 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln88_2, i58 %add_ln88_1" [d6.cpp:88]   --->   Operation 298 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i58 %add_ln88_1" [d6.cpp:89]   --->   Operation 299 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 300 [1/1] (1.09ns)   --->   "%add_ln89 = add i60 %sext_ln88_1, i60 %zext_ln89" [d6.cpp:89]   --->   Operation 300 'add' 'add_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 301 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln89, i32 58, i32 59" [d6.cpp:89]   --->   Operation 301 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 302 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i2 %tmp" [d6.cpp:89]   --->   Operation 302 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i6 %sext_ln89" [d6.cpp:89]   --->   Operation 303 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 304 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i58 %add_ln89_1" [d6.cpp:89]   --->   Operation 304 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 305 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln89_2, i59 %zext_ln89_1" [d6.cpp:89]   --->   Operation 305 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 306 [1/1] (0.00ns)   --->   "%trunc_ln94 = trunc i128 %add12481_loc_load" [d6.cpp:94]   --->   Operation 306 'trunc' 'trunc_ln94' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 307 [1/1] (1.09ns)   --->   "%out1_w_7 = add i58 %trunc_ln94_1, i58 %trunc_ln94" [d6.cpp:94]   --->   Operation 307 'add' 'out1_w_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 308 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln95 = add i57 %add_ln62_8, i57 %add_ln62_7" [d6.cpp:95]   --->   Operation 308 'add' 'add_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 114" [d6.cpp:95]   --->   Operation 309 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 310 [1/1] (0.79ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i57 %trunc_ln, i57 %add_ln95" [d6.cpp:95]   --->   Operation 310 'add' 'out1_w_8' <Predicate = true> <Delay = 0.79> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 311 [2/2] (0.77ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 311 'call' 'call_ln99' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 0.00>
ST_50 : Operation 312 [1/2] (0.00ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 312 'call' 'call_ln99' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 50> <Delay = 7.30>
ST_51 : Operation 313 [5/5] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 313 'writeresp' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 7.30>
ST_52 : Operation 314 [4/5] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 314 'writeresp' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 7.30>
ST_53 : Operation 315 [3/5] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 315 'writeresp' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 7.30>
ST_54 : Operation 316 [2/5] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 316 'writeresp' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 7.30>
ST_55 : Operation 317 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_14" [d6.cpp:3]   --->   Operation 317 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 318 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_1, i32 0, i32 0, void @empty_2, i32 0, i32 9, void @empty_3, void @empty_4, void @empty_2, i32 16, i32 16, i32 16, i32 16, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 318 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 319 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 319 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 320 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 320 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 321 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 321 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 322 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_12, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 322 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 323 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 323 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 324 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_13, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 324 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 325 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 325 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 326 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 326 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 327 [1/5] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 327 'writeresp' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 328 [1/1] (0.00ns)   --->   "%ret_ln104 = ret" [d6.cpp:104]   --->   Operation 328 'ret' 'ret_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d6.cpp:22) [54]  (0.000 ns)
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [55]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d6.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [56]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d6.cpp:29) [68]  (0.000 ns)
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_29', d6.cpp:29) on port 'mem' (d6.cpp:29) [69]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d6.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [70]  (1.224 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_39', d6.cpp:62) on port 'mem' (d6.cpp:62) [98]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [99]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [100]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [101]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [102]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [103]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [104]  (7.300 ns)

 <State 36>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [105]  (7.300 ns)

 <State 37>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [106]  (7.300 ns)

 <State 38>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [107]  (7.300 ns)

 <State 39>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [110]  (7.300 ns)

 <State 40>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [111]  (7.300 ns)

 <State 41>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [112]  (7.300 ns)

 <State 42>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [113]  (7.300 ns)

 <State 43>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [114]  (7.300 ns)

 <State 44>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [115]  (7.300 ns)

 <State 45>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [116]  (7.300 ns)

 <State 46>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [117]  (7.300 ns)

 <State 47>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [118]  (7.300 ns)

 <State 48>: 6.316ns
The critical path consists of the following:
	'load' operation ('add124_485_loc_load') on local variable 'add124_485_loc' [137]  (0.000 ns)
	'add' operation ('add_ln87_2', d6.cpp:87) [177]  (1.579 ns)
	'add' operation ('add_ln87_3', d6.cpp:87) [180]  (1.579 ns)
	'add' operation ('add_ln87_4', d6.cpp:87) [183]  (1.579 ns)
	'add' operation ('add_ln87_5', d6.cpp:87) [186]  (1.579 ns)

 <State 49>: 6.669ns
The critical path consists of the following:
	'load' operation ('add12481_loc_load') on local variable 'add12481_loc' [141]  (0.000 ns)
	'add' operation ('add_ln87_6', d6.cpp:87) [189]  (1.579 ns)
	'add' operation ('add_ln87_7', d6.cpp:87) [192]  (0.995 ns)
	'add' operation ('add_ln88', d6.cpp:88) [198]  (1.139 ns)
	'add' operation ('add_ln89', d6.cpp:89) [207]  (1.093 ns)
	'add' operation ('out1_w', d6.cpp:89) [215]  (1.093 ns)
	'call' operation ('call_ln99', d6.cpp:99) to 'test_Pipeline_ARRAY_WRITE' [238]  (0.770 ns)

 <State 50>: 0.000ns
The critical path consists of the following:

 <State 51>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_42', d6.cpp:104) on port 'mem' (d6.cpp:104) [239]  (7.300 ns)

 <State 52>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_42', d6.cpp:104) on port 'mem' (d6.cpp:104) [239]  (7.300 ns)

 <State 53>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_42', d6.cpp:104) on port 'mem' (d6.cpp:104) [239]  (7.300 ns)

 <State 54>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_42', d6.cpp:104) on port 'mem' (d6.cpp:104) [239]  (7.300 ns)

 <State 55>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_42', d6.cpp:104) on port 'mem' (d6.cpp:104) [239]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
