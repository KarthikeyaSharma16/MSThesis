

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:09:42 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_26 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       98|       98|  0.980 us|  0.980 us|   99|   99|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 56 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 56 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 57 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 57 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 58 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 58 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add124116_loc = alloca i64 1"   --->   Operation 59 'alloca' 'add124116_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add124_1117_loc = alloca i64 1"   --->   Operation 60 'alloca' 'add124_1117_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add124_2118_loc = alloca i64 1"   --->   Operation 61 'alloca' 'add124_2118_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add124_3119_loc = alloca i64 1"   --->   Operation 62 'alloca' 'add124_3119_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add124_4120_loc = alloca i64 1"   --->   Operation 63 'alloca' 'add124_4120_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add124_5121_loc = alloca i64 1"   --->   Operation 64 'alloca' 'add124_5121_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add124_6122_loc = alloca i64 1"   --->   Operation 65 'alloca' 'add124_6122_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add124_7123_loc = alloca i64 1"   --->   Operation 66 'alloca' 'add124_7123_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 67 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 68 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 69 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 70 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 71 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 72 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 73 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 74 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 75 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 76 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 77 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 78 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 79 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 80 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 81 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 82 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 83 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 84 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d6.cpp:22]   --->   Operation 85 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d6.cpp:29]   --->   Operation 86 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln99_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d6.cpp:99]   --->   Operation 87 'partselect' 'trunc_ln99_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d6.cpp:22]   --->   Operation 88 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d6.cpp:22]   --->   Operation 89 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 90 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 91 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 91 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 92 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 92 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 93 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 93 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 94 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 94 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 95 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 95 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 96 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 96 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 97 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 97 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 98 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 98 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 99 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 99 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d6.cpp:29]   --->   Operation 100 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d6.cpp:29]   --->   Operation 101 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [8/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 102 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 103 [7/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 103 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 104 [6/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 104 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 105 [5/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 105 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 106 [4/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 106 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 107 [3/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 107 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 108 [2/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 108 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 109 [1/8] (7.30ns)   --->   "%empty_28 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 109 'readreq' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 110 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 110 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 1.22>
ST_21 : Operation 111 [1/2] (1.22ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i64 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 111 'call' 'call_ln29' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 7.30>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 112 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 113 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 114 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 115 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 116 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 117 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 117 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 118 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 118 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 119 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 119 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 120 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i64 %arg2_r_8_loc"   --->   Operation 120 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 121 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 121 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 122 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 122 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 123 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 123 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 124 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 124 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 125 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 125 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 126 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 126 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 127 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 127 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 128 [1/1] (0.00ns)   --->   "%empty_29 = shl i64 %arg2_r_8_loc_load, i64 1"   --->   Operation 128 'shl' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 129 [1/1] (0.00ns)   --->   "%conv34 = zext i64 %empty_29"   --->   Operation 129 'zext' 'conv34' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i64 %arg1_r_8_loc_load" [d6.cpp:49]   --->   Operation 130 'zext' 'zext_ln49' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 131 '%arr = mul i128 %conv34, i128 %zext_ln49'
ST_22 : Operation 131 [1/1] (3.55ns)   --->   "%arr = mul i128 %conv34, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 131 'mul' 'arr' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 132 [1/1] (0.00ns)   --->   "%shl_ln49 = shl i64 %arg2_r_7_loc_load, i64 1" [d6.cpp:49]   --->   Operation 132 'shl' 'shl_ln49' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i64 %shl_ln49" [d6.cpp:49]   --->   Operation 133 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 134 '%mul_ln49_1 = mul i128 %zext_ln49_1, i128 %zext_ln49'
ST_22 : Operation 134 [1/1] (3.55ns)   --->   "%mul_ln49_1 = mul i128 %zext_ln49_1, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 134 'mul' 'mul_ln49_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%shl_ln49_1 = shl i64 %arg2_r_6_loc_load, i64 1" [d6.cpp:49]   --->   Operation 135 'shl' 'shl_ln49_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln49_2 = zext i64 %shl_ln49_1" [d6.cpp:49]   --->   Operation 136 'zext' 'zext_ln49_2' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 137 '%mul_ln49_2 = mul i128 %zext_ln49_2, i128 %zext_ln49'
ST_22 : Operation 137 [1/1] (3.55ns)   --->   "%mul_ln49_2 = mul i128 %zext_ln49_2, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 137 'mul' 'mul_ln49_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 138 [1/1] (0.00ns)   --->   "%shl_ln49_2 = shl i64 %arg2_r_5_loc_load, i64 1" [d6.cpp:49]   --->   Operation 138 'shl' 'shl_ln49_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln49_3 = zext i64 %shl_ln49_2" [d6.cpp:49]   --->   Operation 139 'zext' 'zext_ln49_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "%shl_ln49_3 = shl i64 %arg2_r_4_loc_load, i64 1" [d6.cpp:49]   --->   Operation 140 'shl' 'shl_ln49_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln49_4 = zext i64 %shl_ln49_3" [d6.cpp:49]   --->   Operation 141 'zext' 'zext_ln49_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 142 [1/1] (0.00ns)   --->   "%shl_ln49_4 = shl i64 %arg2_r_3_loc_load, i64 1" [d6.cpp:49]   --->   Operation 142 'shl' 'shl_ln49_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln49_5 = zext i64 %shl_ln49_4" [d6.cpp:49]   --->   Operation 143 'zext' 'zext_ln49_5' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 144 '%mul_ln49_5 = mul i128 %zext_ln49_5, i128 %zext_ln49'
ST_22 : Operation 144 [1/1] (3.55ns)   --->   "%mul_ln49_5 = mul i128 %zext_ln49_5, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 144 'mul' 'mul_ln49_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 145 [1/1] (0.00ns)   --->   "%shl_ln49_5 = shl i64 %arg2_r_2_loc_load, i64 1" [d6.cpp:49]   --->   Operation 145 'shl' 'shl_ln49_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln49_6 = zext i64 %shl_ln49_5" [d6.cpp:49]   --->   Operation 146 'zext' 'zext_ln49_6' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 147 '%mul_ln49_6 = mul i128 %zext_ln49_6, i128 %zext_ln49'
ST_22 : Operation 147 [1/1] (3.55ns)   --->   "%mul_ln49_6 = mul i128 %zext_ln49_6, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 147 'mul' 'mul_ln49_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 148 [1/1] (0.00ns)   --->   "%shl_ln49_6 = shl i64 %arg2_r_1_loc_load, i64 1" [d6.cpp:49]   --->   Operation 148 'shl' 'shl_ln49_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln49_7 = zext i64 %shl_ln49_6" [d6.cpp:49]   --->   Operation 149 'zext' 'zext_ln49_7' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 150 '%mul_ln49_7 = mul i128 %zext_ln49_7, i128 %zext_ln49'
ST_22 : Operation 150 [1/1] (3.55ns)   --->   "%mul_ln49_7 = mul i128 %zext_ln49_7, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 150 'mul' 'mul_ln49_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln49_8 = zext i64 %arg1_r_7_loc_load" [d6.cpp:49]   --->   Operation 151 'zext' 'zext_ln49_8' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 152 '%mul_ln49_8 = mul i128 %conv34, i128 %zext_ln49_8'
ST_22 : Operation 152 [1/1] (3.55ns)   --->   "%mul_ln49_8 = mul i128 %conv34, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 152 'mul' 'mul_ln49_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 153 [1/1] (1.57ns)   --->   "%arr_1 = add i128 %mul_ln49_8, i128 %mul_ln49_1" [d6.cpp:49]   --->   Operation 153 'add' 'arr_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 154 '%mul_ln49_9 = mul i128 %zext_ln49_1, i128 %zext_ln49_8'
ST_22 : Operation 154 [1/1] (3.55ns)   --->   "%mul_ln49_9 = mul i128 %zext_ln49_1, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 154 'mul' 'mul_ln49_9' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 155 '%mul_ln49_13 = mul i128 %zext_ln49_5, i128 %zext_ln49_8'
ST_22 : Operation 155 [1/1] (3.55ns)   --->   "%mul_ln49_13 = mul i128 %zext_ln49_5, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 155 'mul' 'mul_ln49_13' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 156 '%mul_ln49_14 = mul i128 %zext_ln49_6, i128 %zext_ln49_8'
ST_22 : Operation 156 [1/1] (3.55ns)   --->   "%mul_ln49_14 = mul i128 %zext_ln49_6, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 156 'mul' 'mul_ln49_14' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln49_9 = zext i64 %arg1_r_6_loc_load" [d6.cpp:49]   --->   Operation 157 'zext' 'zext_ln49_9' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 158 '%mul_ln49_15 = mul i128 %conv34, i128 %zext_ln49_9'
ST_22 : Operation 158 [1/1] (3.55ns)   --->   "%mul_ln49_15 = mul i128 %conv34, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 158 'mul' 'mul_ln49_15' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 159 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_1 = add i128 %mul_ln49_2, i128 %mul_ln49_15" [d6.cpp:49]   --->   Operation 159 'add' 'add_ln49_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 160 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_2 = add i128 %add_ln49_1, i128 %mul_ln49_9" [d6.cpp:49]   --->   Operation 160 'add' 'arr_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 161 '%mul_ln49_16 = mul i128 %zext_ln49_1, i128 %zext_ln49_9'
ST_22 : Operation 161 [1/1] (3.55ns)   --->   "%mul_ln49_16 = mul i128 %zext_ln49_1, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 161 'mul' 'mul_ln49_16' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 162 '%mul_ln49_17 = mul i128 %zext_ln49_2, i128 %zext_ln49_9'
ST_22 : Operation 162 [1/1] (3.55ns)   --->   "%mul_ln49_17 = mul i128 %zext_ln49_2, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 162 'mul' 'mul_ln49_17' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 163 '%mul_ln49_18 = mul i128 %zext_ln49_3, i128 %zext_ln49_9'
ST_22 : Operation 163 [1/1] (3.55ns)   --->   "%mul_ln49_18 = mul i128 %zext_ln49_3, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 163 'mul' 'mul_ln49_18' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 164 '%mul_ln49_19 = mul i128 %zext_ln49_4, i128 %zext_ln49_9'
ST_22 : Operation 164 [1/1] (3.55ns)   --->   "%mul_ln49_19 = mul i128 %zext_ln49_4, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 164 'mul' 'mul_ln49_19' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 165 '%mul_ln49_20 = mul i128 %zext_ln49_5, i128 %zext_ln49_9'
ST_22 : Operation 165 [1/1] (3.55ns)   --->   "%mul_ln49_20 = mul i128 %zext_ln49_5, i128 %zext_ln49_9" [d6.cpp:49]   --->   Operation 165 'mul' 'mul_ln49_20' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln49_10 = zext i64 %arg1_r_5_loc_load" [d6.cpp:49]   --->   Operation 166 'zext' 'zext_ln49_10' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 167 '%mul_ln49_21 = mul i128 %conv34, i128 %zext_ln49_10'
ST_22 : Operation 167 [1/1] (3.55ns)   --->   "%mul_ln49_21 = mul i128 %conv34, i128 %zext_ln49_10" [d6.cpp:49]   --->   Operation 167 'mul' 'mul_ln49_21' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 168 [1/1] (1.57ns)   --->   "%add_ln49_4 = add i128 %mul_ln49_16, i128 %mul_ln49_21" [d6.cpp:49]   --->   Operation 168 'add' 'add_ln49_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 169 '%mul_ln49_22 = mul i128 %zext_ln49_1, i128 %zext_ln49_10'
ST_22 : Operation 169 [1/1] (3.55ns)   --->   "%mul_ln49_22 = mul i128 %zext_ln49_1, i128 %zext_ln49_10" [d6.cpp:49]   --->   Operation 169 'mul' 'mul_ln49_22' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 170 '%mul_ln49_23 = mul i128 %zext_ln49_2, i128 %zext_ln49_10'
ST_22 : Operation 170 [1/1] (3.55ns)   --->   "%mul_ln49_23 = mul i128 %zext_ln49_2, i128 %zext_ln49_10" [d6.cpp:49]   --->   Operation 170 'mul' 'mul_ln49_23' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 171 '%mul_ln49_24 = mul i128 %zext_ln49_3, i128 %zext_ln49_10'
ST_22 : Operation 171 [1/1] (3.55ns)   --->   "%mul_ln49_24 = mul i128 %zext_ln49_3, i128 %zext_ln49_10" [d6.cpp:49]   --->   Operation 171 'mul' 'mul_ln49_24' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 172 '%mul_ln49_25 = mul i128 %zext_ln49_4, i128 %zext_ln49_10'
ST_22 : Operation 172 [1/1] (3.55ns)   --->   "%mul_ln49_25 = mul i128 %zext_ln49_4, i128 %zext_ln49_10" [d6.cpp:49]   --->   Operation 172 'mul' 'mul_ln49_25' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln49_11 = zext i64 %arg1_r_4_loc_load" [d6.cpp:49]   --->   Operation 173 'zext' 'zext_ln49_11' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 174 '%mul_ln49_26 = mul i128 %conv34, i128 %zext_ln49_11'
ST_22 : Operation 174 [1/1] (3.55ns)   --->   "%mul_ln49_26 = mul i128 %conv34, i128 %zext_ln49_11" [d6.cpp:49]   --->   Operation 174 'mul' 'mul_ln49_26' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 175 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_7 = add i128 %mul_ln49_22, i128 %mul_ln49_26" [d6.cpp:49]   --->   Operation 175 'add' 'add_ln49_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 176 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln49_8 = add i128 %add_ln49_7, i128 %mul_ln49_17" [d6.cpp:49]   --->   Operation 176 'add' 'add_ln49_8' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 177 '%mul_ln49_27 = mul i128 %zext_ln49_1, i128 %zext_ln49_11'
ST_22 : Operation 177 [1/1] (3.55ns)   --->   "%mul_ln49_27 = mul i128 %zext_ln49_1, i128 %zext_ln49_11" [d6.cpp:49]   --->   Operation 177 'mul' 'mul_ln49_27' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 178 '%mul_ln49_28 = mul i128 %zext_ln49_2, i128 %zext_ln49_11'
ST_22 : Operation 178 [1/1] (3.55ns)   --->   "%mul_ln49_28 = mul i128 %zext_ln49_2, i128 %zext_ln49_11" [d6.cpp:49]   --->   Operation 178 'mul' 'mul_ln49_28' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 179 '%mul_ln49_29 = mul i128 %zext_ln49_3, i128 %zext_ln49_11'
ST_22 : Operation 179 [1/1] (3.55ns)   --->   "%mul_ln49_29 = mul i128 %zext_ln49_3, i128 %zext_ln49_11" [d6.cpp:49]   --->   Operation 179 'mul' 'mul_ln49_29' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln49_12 = zext i64 %arg1_r_3_loc_load" [d6.cpp:49]   --->   Operation 180 'zext' 'zext_ln49_12' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 181 '%mul_ln49_30 = mul i128 %conv34, i128 %zext_ln49_12'
ST_22 : Operation 181 [1/1] (3.55ns)   --->   "%mul_ln49_30 = mul i128 %conv34, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 181 'mul' 'mul_ln49_30' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 182 [1/1] (1.57ns)   --->   "%add_ln49_10 = add i128 %mul_ln49_5, i128 %mul_ln49_18" [d6.cpp:49]   --->   Operation 182 'add' 'add_ln49_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 183 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_12 = add i128 %mul_ln49_27, i128 %mul_ln49_30" [d6.cpp:49]   --->   Operation 183 'add' 'add_ln49_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 184 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln49_13 = add i128 %add_ln49_12, i128 %mul_ln49_23" [d6.cpp:49]   --->   Operation 184 'add' 'add_ln49_13' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 185 '%mul_ln49_31 = mul i128 %zext_ln49_1, i128 %zext_ln49_12'
ST_22 : Operation 185 [1/1] (3.55ns)   --->   "%mul_ln49_31 = mul i128 %zext_ln49_1, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 185 'mul' 'mul_ln49_31' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 186 '%mul_ln49_32 = mul i128 %zext_ln49_2, i128 %zext_ln49_12'
ST_22 : Operation 186 [1/1] (3.55ns)   --->   "%mul_ln49_32 = mul i128 %zext_ln49_2, i128 %zext_ln49_12" [d6.cpp:49]   --->   Operation 186 'mul' 'mul_ln49_32' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln49_13 = zext i64 %arg1_r_2_loc_load" [d6.cpp:49]   --->   Operation 187 'zext' 'zext_ln49_13' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 188 '%mul_ln49_33 = mul i128 %conv34, i128 %zext_ln49_13'
ST_22 : Operation 188 [1/1] (3.55ns)   --->   "%mul_ln49_33 = mul i128 %conv34, i128 %zext_ln49_13" [d6.cpp:49]   --->   Operation 188 'mul' 'mul_ln49_33' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 189 [1/1] (1.57ns)   --->   "%add_ln49_15 = add i128 %mul_ln49_6, i128 %mul_ln49_19" [d6.cpp:49]   --->   Operation 189 'add' 'add_ln49_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 190 [1/1] (1.57ns)   --->   "%add_ln49_18 = add i128 %mul_ln49_31, i128 %mul_ln49_33" [d6.cpp:49]   --->   Operation 190 'add' 'add_ln49_18' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 191 '%mul_ln49_34 = mul i128 %zext_ln49_1, i128 %zext_ln49_13'
ST_22 : Operation 191 [1/1] (3.55ns)   --->   "%mul_ln49_34 = mul i128 %zext_ln49_1, i128 %zext_ln49_13" [d6.cpp:49]   --->   Operation 191 'mul' 'mul_ln49_34' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln49_14 = zext i64 %arg1_r_1_loc_load" [d6.cpp:49]   --->   Operation 192 'zext' 'zext_ln49_14' <Predicate = true> <Delay = 0.00>
ST_22 : [1/1] (0.97ns)   --->   Input mux for Operation 193 '%mul_ln49_35 = mul i128 %conv34, i128 %zext_ln49_14'
ST_22 : Operation 193 [1/1] (3.55ns)   --->   "%mul_ln49_35 = mul i128 %conv34, i128 %zext_ln49_14" [d6.cpp:49]   --->   Operation 193 'mul' 'mul_ln49_35' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 194 [1/1] (1.57ns)   --->   "%add_ln49_21 = add i128 %mul_ln49_14, i128 %mul_ln49_7" [d6.cpp:49]   --->   Operation 194 'add' 'add_ln49_21' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 195 [1/1] (1.57ns)   --->   "%add_ln49_22 = add i128 %mul_ln49_20, i128 %mul_ln49_25" [d6.cpp:49]   --->   Operation 195 'add' 'add_ln49_22' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 196 [1/1] (1.57ns)   --->   "%add_ln49_25 = add i128 %mul_ln49_34, i128 %mul_ln49_35" [d6.cpp:49]   --->   Operation 196 'add' 'add_ln49_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 197 [8/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 197 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 7.30>
ST_23 : Operation 198 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 198 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 199 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 199 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 200 '%mul_ln49_3 = mul i128 %zext_ln49_3, i128 %zext_ln49'
ST_23 : Operation 200 [1/1] (3.55ns)   --->   "%mul_ln49_3 = mul i128 %zext_ln49_3, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 200 'mul' 'mul_ln49_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 201 '%mul_ln49_4 = mul i128 %zext_ln49_4, i128 %zext_ln49'
ST_23 : Operation 201 [1/1] (3.55ns)   --->   "%mul_ln49_4 = mul i128 %zext_ln49_4, i128 %zext_ln49" [d6.cpp:49]   --->   Operation 201 'mul' 'mul_ln49_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 202 '%mul_ln49_10 = mul i128 %zext_ln49_2, i128 %zext_ln49_8'
ST_23 : Operation 202 [1/1] (3.55ns)   --->   "%mul_ln49_10 = mul i128 %zext_ln49_2, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 202 'mul' 'mul_ln49_10' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 203 '%mul_ln49_11 = mul i128 %zext_ln49_3, i128 %zext_ln49_8'
ST_23 : Operation 203 [1/1] (3.55ns)   --->   "%mul_ln49_11 = mul i128 %zext_ln49_3, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 203 'mul' 'mul_ln49_11' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (0.97ns)   --->   Input mux for Operation 204 '%mul_ln49_12 = mul i128 %zext_ln49_4, i128 %zext_ln49_8'
ST_23 : Operation 204 [1/1] (3.55ns)   --->   "%mul_ln49_12 = mul i128 %zext_ln49_4, i128 %zext_ln49_8" [d6.cpp:49]   --->   Operation 204 'mul' 'mul_ln49_12' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 205 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_3 = add i128 %mul_ln49_10, i128 %mul_ln49_3" [d6.cpp:49]   --->   Operation 205 'add' 'add_ln49_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 206 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_3 = add i128 %add_ln49_4, i128 %add_ln49_3" [d6.cpp:49]   --->   Operation 206 'add' 'arr_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 207 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_6 = add i128 %mul_ln49_11, i128 %mul_ln49_4" [d6.cpp:49]   --->   Operation 207 'add' 'add_ln49_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 208 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_4 = add i128 %add_ln49_8, i128 %add_ln49_6" [d6.cpp:49]   --->   Operation 208 'add' 'arr_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_11 = add i128 %add_ln49_10, i128 %mul_ln49_12" [d6.cpp:49]   --->   Operation 209 'add' 'add_ln49_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 210 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_5 = add i128 %add_ln49_13, i128 %add_ln49_11" [d6.cpp:49]   --->   Operation 210 'add' 'arr_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_16 = add i128 %add_ln49_15, i128 %mul_ln49_13" [d6.cpp:49]   --->   Operation 211 'add' 'add_ln49_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 212 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_17 = add i128 %mul_ln49_24, i128 %mul_ln49_28" [d6.cpp:49]   --->   Operation 212 'add' 'add_ln49_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 213 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln49_19 = add i128 %add_ln49_18, i128 %add_ln49_17" [d6.cpp:49]   --->   Operation 213 'add' 'add_ln49_19' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 214 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_6 = add i128 %add_ln49_19, i128 %add_ln49_16" [d6.cpp:49]   --->   Operation 214 'add' 'arr_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_23 = add i128 %add_ln49_22, i128 %add_ln49_21" [d6.cpp:49]   --->   Operation 215 'add' 'add_ln49_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 216 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49_24 = add i128 %mul_ln49_29, i128 %mul_ln49_32" [d6.cpp:49]   --->   Operation 216 'add' 'add_ln49_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 217 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln49_26 = add i128 %add_ln49_25, i128 %add_ln49_24" [d6.cpp:49]   --->   Operation 217 'add' 'add_ln49_26' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 218 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%arr_7 = add i128 %add_ln49_26, i128 %add_ln49_23" [d6.cpp:49]   --->   Operation 218 'add' 'arr_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 219 [7/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 219 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 220 [8/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 220 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 221 [2/2] (0.72ns)   --->   "%call_ln49 = call void @test_Pipeline_VITIS_LOOP_67_7, i128 %arr_7, i128 %arr_6, i128 %arr_5, i128 %arr_4, i128 %arr_3, i128 %arr_2, i128 %arr_1, i128 %arr, i64 %arg1_r_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i128 %add124_7123_loc, i128 %add124_6122_loc, i128 %add124_5121_loc, i128 %add124_4120_loc, i128 %add124_3119_loc, i128 %add124_2118_loc, i128 %add124_1117_loc, i128 %add124116_loc" [d6.cpp:49]   --->   Operation 221 'call' 'call_ln49' <Predicate = true> <Delay = 0.72> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 7.30>
ST_24 : Operation 222 [6/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 222 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 223 [7/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 223 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 224 [1/2] (0.00ns)   --->   "%call_ln49 = call void @test_Pipeline_VITIS_LOOP_67_7, i128 %arr_7, i128 %arr_6, i128 %arr_5, i128 %arr_4, i128 %arr_3, i128 %arr_2, i128 %arr_1, i128 %arr, i64 %arg1_r_loc_load, i64 %arg1_r_1_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_4_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_7_loc_load, i64 %arg2_r_loc_load, i64 %arg2_r_1_loc_load, i64 %arg2_r_2_loc_load, i64 %arg2_r_3_loc_load, i64 %arg2_r_4_loc_load, i64 %arg2_r_5_loc_load, i64 %arg2_r_6_loc_load, i64 %arg2_r_7_loc_load, i64 %arg2_r_8_loc_load, i128 %add124_7123_loc, i128 %add124_6122_loc, i128 %add124_5121_loc, i128 %add124_4120_loc, i128 %add124_3119_loc, i128 %add124_2118_loc, i128 %add124_1117_loc, i128 %add124116_loc" [d6.cpp:49]   --->   Operation 224 'call' 'call_ln49' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 7.30>
ST_25 : Operation 225 [5/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 225 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 226 [6/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 226 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 227 [4/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 227 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 228 [5/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 228 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 7.30>
ST_27 : Operation 229 [3/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 229 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 230 [4/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 230 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 7.30>
ST_28 : Operation 231 [2/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 231 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 232 [3/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 232 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 233 [1/8] (7.30ns)   --->   "%empty_30 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:62]   --->   Operation 233 'readreq' 'empty_30' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 234 [2/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 234 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 235 [1/1] (7.30ns)   --->   "%mem_addr_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 235 'read' 'mem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 236 [1/8] (7.30ns)   --->   "%empty_31 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:62]   --->   Operation 236 'readreq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 237 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i61 %trunc_ln99_1" [d6.cpp:99]   --->   Operation 237 'sext' 'sext_ln99' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 238 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln99" [d6.cpp:99]   --->   Operation 238 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 239 [1/1] (7.30ns)   --->   "%empty_32 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d6.cpp:99]   --->   Operation 239 'writereq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 240 [1/1] (7.30ns)   --->   "%mem_addr_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 240 'read' 'mem_addr_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 241 [1/1] (7.30ns)   --->   "%mem_addr_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 241 'read' 'mem_addr_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 242 [1/1] (7.30ns)   --->   "%mem_addr_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 242 'read' 'mem_addr_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 7.30>
ST_34 : Operation 243 [1/1] (7.30ns)   --->   "%mem_addr_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 243 'read' 'mem_addr_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 7.30>
ST_35 : Operation 244 [1/1] (7.30ns)   --->   "%mem_addr_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 244 'read' 'mem_addr_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 7.30>
ST_36 : Operation 245 [1/1] (7.30ns)   --->   "%mem_addr_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 245 'read' 'mem_addr_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 7.30>
ST_37 : Operation 246 [1/1] (7.30ns)   --->   "%mem_addr_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 246 'read' 'mem_addr_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 7.30>
ST_38 : Operation 247 [1/1] (7.30ns)   --->   "%mem_addr_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr" [d6.cpp:62]   --->   Operation 247 'read' 'mem_addr_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 7.30>
ST_39 : Operation 248 [1/1] (7.30ns)   --->   "%mem_addr_1_read = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 248 'read' 'mem_addr_1_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 7.30>
ST_40 : Operation 249 [1/1] (7.30ns)   --->   "%mem_addr_1_read_1 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 249 'read' 'mem_addr_1_read_1' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 7.30>
ST_41 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i64 %mem_addr_read_8" [d6.cpp:62]   --->   Operation 250 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 251 [1/1] (7.30ns)   --->   "%mem_addr_1_read_2 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 251 'read' 'mem_addr_1_read_2' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i64 %mem_addr_1_read" [d6.cpp:62]   --->   Operation 252 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.97ns)   --->   Input mux for Operation 253 '%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62'
ST_41 : Operation 253 [1/1] (3.55ns)   --->   "%mul_ln62 = mul i128 %zext_ln62_1, i128 %zext_ln62" [d6.cpp:62]   --->   Operation 253 'mul' 'mul_ln62' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 254 [1/1] (0.00ns)   --->   "%zext_ln62_2 = zext i64 %mem_addr_read_7" [d6.cpp:62]   --->   Operation 254 'zext' 'zext_ln62_2' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln62_3 = zext i64 %mem_addr_1_read_1" [d6.cpp:62]   --->   Operation 255 'zext' 'zext_ln62_3' <Predicate = true> <Delay = 0.00>
ST_41 : [1/1] (0.97ns)   --->   Input mux for Operation 256 '%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2'
ST_41 : Operation 256 [1/1] (3.55ns)   --->   "%mul_ln62_1 = mul i128 %zext_ln62_3, i128 %zext_ln62_2" [d6.cpp:62]   --->   Operation 256 'mul' 'mul_ln62_1' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 257 [1/1] (1.57ns)   --->   "%add_ln62_3 = add i128 %mul_ln62, i128 %mul_ln62_1" [d6.cpp:62]   --->   Operation 257 'add' 'add_ln62_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln62_2 = trunc i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 258 'trunc' 'trunc_ln62_2' <Predicate = true> <Delay = 0.00>

State 42 <SV = 41> <Delay = 7.30>
ST_42 : Operation 259 [1/1] (7.30ns)   --->   "%mem_addr_1_read_3 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 259 'read' 'mem_addr_1_read_3' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 7.30>
ST_43 : Operation 260 [1/1] (7.30ns)   --->   "%mem_addr_1_read_4 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 260 'read' 'mem_addr_1_read_4' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 7.30>
ST_44 : Operation 261 [1/1] (7.30ns)   --->   "%mem_addr_1_read_5 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 261 'read' 'mem_addr_1_read_5' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 7.30>
ST_45 : Operation 262 [1/1] (7.30ns)   --->   "%mem_addr_1_read_6 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 262 'read' 'mem_addr_1_read_6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 263 [1/1] (0.00ns)   --->   "%zext_ln62_8 = zext i64 %mem_addr_1_read_4" [d6.cpp:62]   --->   Operation 263 'zext' 'zext_ln62_8' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln62_9 = zext i64 %mem_addr_1_read_5" [d6.cpp:62]   --->   Operation 264 'zext' 'zext_ln62_9' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 265 [1/1] (0.00ns)   --->   "%zext_ln62_11 = zext i64 %mem_addr_read_4" [d6.cpp:62]   --->   Operation 265 'zext' 'zext_ln62_11' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.97ns)   --->   Input mux for Operation 266 '%mul_ln62_4 = mul i128 %zext_ln62_8, i128 %zext_ln62_11'
ST_45 : Operation 266 [1/1] (3.55ns)   --->   "%mul_ln62_4 = mul i128 %zext_ln62_8, i128 %zext_ln62_11" [d6.cpp:62]   --->   Operation 266 'mul' 'mul_ln62_4' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln62_13 = zext i64 %mem_addr_read_3" [d6.cpp:62]   --->   Operation 267 'zext' 'zext_ln62_13' <Predicate = true> <Delay = 0.00>
ST_45 : [1/1] (0.97ns)   --->   Input mux for Operation 268 '%mul_ln62_6 = mul i128 %zext_ln62_9, i128 %zext_ln62_13'
ST_45 : Operation 268 [1/1] (3.55ns)   --->   "%mul_ln62_6 = mul i128 %zext_ln62_9, i128 %zext_ln62_13" [d6.cpp:62]   --->   Operation 268 'mul' 'mul_ln62_6' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 269 [1/1] (1.57ns)   --->   "%add_ln62_1 = add i128 %mul_ln62_6, i128 %mul_ln62_4" [d6.cpp:62]   --->   Operation 269 'add' 'add_ln62_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln62_1 = trunc i128 %add_ln62_1" [d6.cpp:62]   --->   Operation 270 'trunc' 'trunc_ln62_1' <Predicate = true> <Delay = 0.00>

State 46 <SV = 45> <Delay = 7.30>
ST_46 : Operation 271 [1/1] (7.30ns)   --->   "%mem_addr_1_read_7 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 271 'read' 'mem_addr_1_read_7' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 7.30>
ST_47 : Operation 272 [1/1] (7.30ns)   --->   "%mem_addr_1_read_8 = read i64 @_ssdm_op_Read.m_axi.p1i64, i64 %mem_addr_1" [d6.cpp:62]   --->   Operation 272 'read' 'mem_addr_1_read_8' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln62_10 = zext i64 %mem_addr_1_read_6" [d6.cpp:62]   --->   Operation 273 'zext' 'zext_ln62_10' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 274 [1/1] (0.00ns)   --->   "%add124_7123_loc_load = load i128 %add124_7123_loc"   --->   Operation 274 'load' 'add124_7123_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 275 [1/1] (0.00ns)   --->   "%add124_6122_loc_load = load i128 %add124_6122_loc"   --->   Operation 275 'load' 'add124_6122_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 276 [1/1] (0.00ns)   --->   "%add124_5121_loc_load = load i128 %add124_5121_loc"   --->   Operation 276 'load' 'add124_5121_loc_load' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 277 [1/1] (0.00ns)   --->   "%zext_ln62_12 = zext i64 %mem_addr_read_2" [d6.cpp:62]   --->   Operation 277 'zext' 'zext_ln62_12' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.97ns)   --->   Input mux for Operation 278 '%mul_ln62_5 = mul i128 %zext_ln62_10, i128 %zext_ln62_12'
ST_47 : Operation 278 [1/1] (3.55ns)   --->   "%mul_ln62_5 = mul i128 %zext_ln62_10, i128 %zext_ln62_12" [d6.cpp:62]   --->   Operation 278 'mul' 'mul_ln62_5' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln62_14 = zext i64 %mem_addr_1_read_7" [d6.cpp:62]   --->   Operation 279 'zext' 'zext_ln62_14' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln62_15 = zext i64 %mem_addr_read_1" [d6.cpp:62]   --->   Operation 280 'zext' 'zext_ln62_15' <Predicate = true> <Delay = 0.00>
ST_47 : [1/1] (0.97ns)   --->   Input mux for Operation 281 '%mul_ln62_7 = mul i128 %zext_ln62_14, i128 %zext_ln62_15'
ST_47 : Operation 281 [1/1] (3.55ns)   --->   "%mul_ln62_7 = mul i128 %zext_ln62_14, i128 %zext_ln62_15" [d6.cpp:62]   --->   Operation 281 'mul' 'mul_ln62_7' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 282 [1/1] (1.57ns)   --->   "%add_ln62 = add i128 %mul_ln62_5, i128 %mul_ln62_7" [d6.cpp:62]   --->   Operation 282 'add' 'add_ln62' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i128 %add_ln62" [d6.cpp:62]   --->   Operation 283 'trunc' 'trunc_ln62' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 284 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i128 %add124_7123_loc_load" [d6.cpp:87]   --->   Operation 284 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 285 [1/1] (0.00ns)   --->   "%trunc_ln87_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add124_7123_loc_load, i32 58, i32 127" [d6.cpp:87]   --->   Operation 285 'partselect' 'trunc_ln87_2' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 286 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i70 %trunc_ln87_2" [d6.cpp:87]   --->   Operation 286 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 287 [1/1] (1.57ns)   --->   "%add_ln87 = add i128 %add124_6122_loc_load, i128 %sext_ln87" [d6.cpp:87]   --->   Operation 287 'add' 'add_ln87' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 288 [1/1] (0.00ns)   --->   "%trunc_ln87_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87, i32 58, i32 127" [d6.cpp:87]   --->   Operation 288 'partselect' 'trunc_ln87_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 289 [1/1] (0.00ns)   --->   "%sext_ln87_1 = sext i70 %trunc_ln87_3" [d6.cpp:87]   --->   Operation 289 'sext' 'sext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 290 [1/1] (1.57ns)   --->   "%add_ln87_1 = add i128 %add124_5121_loc_load, i128 %sext_ln87_1" [d6.cpp:87]   --->   Operation 290 'add' 'add_ln87_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln87_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 291 'partselect' 'trunc_ln87_4' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 292 [1/1] (0.00ns)   --->   "%trunc_ln88 = trunc i128 %add124_6122_loc_load" [d6.cpp:88]   --->   Operation 292 'trunc' 'trunc_ln88' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 293 [1/1] (0.00ns)   --->   "%trunc_ln88_3 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add124_7123_loc_load, i32 58, i32 115" [d6.cpp:88]   --->   Operation 293 'partselect' 'trunc_ln88_3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 294 [1/1] (1.09ns)   --->   "%add_ln88_1 = add i58 %trunc_ln88_3, i58 %trunc_ln88" [d6.cpp:88]   --->   Operation 294 'add' 'add_ln88_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i128 %add124_5121_loc_load" [d6.cpp:89]   --->   Operation 295 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln89_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87, i32 58, i32 115" [d6.cpp:89]   --->   Operation 296 'partselect' 'trunc_ln89_2' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 297 [1/1] (1.09ns)   --->   "%add_ln89_1 = add i58 %trunc_ln89_2, i58 %trunc_ln89" [d6.cpp:89]   --->   Operation 297 'add' 'add_ln89_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 298 [1/1] (0.00ns)   --->   "%trunc_ln90_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 115" [d6.cpp:90]   --->   Operation 298 'partselect' 'trunc_ln90_1' <Predicate = true> <Delay = 0.00>

State 48 <SV = 47> <Delay = 6.31>
ST_48 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln62_4 = zext i64 %mem_addr_read_6" [d6.cpp:62]   --->   Operation 299 'zext' 'zext_ln62_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 300 [1/1] (0.00ns)   --->   "%zext_ln62_5 = zext i64 %mem_addr_1_read_2" [d6.cpp:62]   --->   Operation 300 'zext' 'zext_ln62_5' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 301 '%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4'
ST_48 : Operation 301 [1/1] (3.55ns)   --->   "%mul_ln62_2 = mul i128 %zext_ln62_5, i128 %zext_ln62_4" [d6.cpp:62]   --->   Operation 301 'mul' 'mul_ln62_2' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 302 [1/1] (0.00ns)   --->   "%zext_ln62_6 = zext i64 %mem_addr_read_5" [d6.cpp:62]   --->   Operation 302 'zext' 'zext_ln62_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln62_7 = zext i64 %mem_addr_1_read_3" [d6.cpp:62]   --->   Operation 303 'zext' 'zext_ln62_7' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 304 '%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6'
ST_48 : Operation 304 [1/1] (3.55ns)   --->   "%mul_ln62_3 = mul i128 %zext_ln62_7, i128 %zext_ln62_6" [d6.cpp:62]   --->   Operation 304 'mul' 'mul_ln62_3' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 305 [1/1] (0.00ns)   --->   "%add124_4120_loc_load = load i128 %add124_4120_loc"   --->   Operation 305 'load' 'add124_4120_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 306 [1/1] (0.00ns)   --->   "%add124_3119_loc_load = load i128 %add124_3119_loc"   --->   Operation 306 'load' 'add124_3119_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 307 [1/1] (0.00ns)   --->   "%add124_2118_loc_load = load i128 %add124_2118_loc"   --->   Operation 307 'load' 'add124_2118_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 308 [1/1] (0.00ns)   --->   "%add124_1117_loc_load = load i128 %add124_1117_loc"   --->   Operation 308 'load' 'add124_1117_loc_load' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 309 [1/1] (0.00ns)   --->   "%zext_ln62_16 = zext i64 %mem_addr_1_read_8" [d6.cpp:62]   --->   Operation 309 'zext' 'zext_ln62_16' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln62_17 = zext i64 %mem_addr_read" [d6.cpp:62]   --->   Operation 310 'zext' 'zext_ln62_17' <Predicate = true> <Delay = 0.00>
ST_48 : [1/1] (0.97ns)   --->   Input mux for Operation 311 '%mul_ln62_8 = mul i128 %zext_ln62_16, i128 %zext_ln62_17'
ST_48 : Operation 311 [1/1] (3.55ns)   --->   "%mul_ln62_8 = mul i128 %zext_ln62_16, i128 %zext_ln62_17" [d6.cpp:62]   --->   Operation 311 'mul' 'mul_ln62_8' <Predicate = true> <Delay = 3.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 312 [1/1] (1.57ns)   --->   "%add_ln62_2 = add i128 %add_ln62_1, i128 %add_ln62" [d6.cpp:62]   --->   Operation 312 'add' 'add_ln62_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 313 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62_4 = add i128 %mul_ln62_2, i128 %mul_ln62_8" [d6.cpp:62]   --->   Operation 313 'add' 'add_ln62_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 314 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln62_5 = add i128 %add_ln62_4, i128 %mul_ln62_3" [d6.cpp:62]   --->   Operation 314 'add' 'add_ln62_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 315 [1/1] (0.00ns)   --->   "%trunc_ln62_3 = trunc i128 %add_ln62_5" [d6.cpp:62]   --->   Operation 315 'trunc' 'trunc_ln62_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 316 [1/1] (1.09ns)   --->   "%add_ln62_7 = add i57 %trunc_ln62_1, i57 %trunc_ln62" [d6.cpp:62]   --->   Operation 316 'add' 'add_ln62_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 317 [1/1] (0.00ns)   --->   "%sext_ln87_2 = sext i70 %trunc_ln87_4" [d6.cpp:87]   --->   Operation 317 'sext' 'sext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 318 [1/1] (1.57ns)   --->   "%add_ln87_2 = add i128 %add124_4120_loc_load, i128 %sext_ln87_2" [d6.cpp:87]   --->   Operation 318 'add' 'add_ln87_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln87_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 127" [d6.cpp:87]   --->   Operation 319 'partselect' 'trunc_ln87_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 320 [1/1] (0.00ns)   --->   "%sext_ln87_3 = sext i70 %trunc_ln87_5" [d6.cpp:87]   --->   Operation 320 'sext' 'sext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 321 [1/1] (1.57ns)   --->   "%add_ln87_3 = add i128 %add124_3119_loc_load, i128 %sext_ln87_3" [d6.cpp:87]   --->   Operation 321 'add' 'add_ln87_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 322 [1/1] (0.00ns)   --->   "%trunc_ln87_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 127" [d6.cpp:87]   --->   Operation 322 'partselect' 'trunc_ln87_6' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 323 [1/1] (0.00ns)   --->   "%sext_ln87_4 = sext i70 %trunc_ln87_6" [d6.cpp:87]   --->   Operation 323 'sext' 'sext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 324 [1/1] (1.57ns)   --->   "%add_ln87_4 = add i128 %add124_2118_loc_load, i128 %sext_ln87_4" [d6.cpp:87]   --->   Operation 324 'add' 'add_ln87_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln87_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 127" [d6.cpp:87]   --->   Operation 325 'partselect' 'trunc_ln87_7' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 326 [1/1] (0.00ns)   --->   "%sext_ln87_5 = sext i70 %trunc_ln87_7" [d6.cpp:87]   --->   Operation 326 'sext' 'sext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 327 [1/1] (1.57ns)   --->   "%add_ln87_5 = add i128 %add124_1117_loc_load, i128 %sext_ln87_5" [d6.cpp:87]   --->   Operation 327 'add' 'add_ln87_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 328 [1/1] (0.00ns)   --->   "%trunc_ln87_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 127" [d6.cpp:87]   --->   Operation 328 'partselect' 'trunc_ln87_8' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 329 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i128 %add124_4120_loc_load" [d6.cpp:90]   --->   Operation 329 'trunc' 'trunc_ln90' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 330 [1/1] (1.09ns)   --->   "%out1_w_3 = add i58 %trunc_ln90_1, i58 %trunc_ln90" [d6.cpp:90]   --->   Operation 330 'add' 'out1_w_3' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 331 [1/1] (0.00ns)   --->   "%trunc_ln91 = trunc i128 %add124_3119_loc_load" [d6.cpp:91]   --->   Operation 331 'trunc' 'trunc_ln91' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 332 [1/1] (0.00ns)   --->   "%trunc_ln91_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 115" [d6.cpp:91]   --->   Operation 332 'partselect' 'trunc_ln91_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 333 [1/1] (1.09ns)   --->   "%out1_w_4 = add i58 %trunc_ln91_1, i58 %trunc_ln91" [d6.cpp:91]   --->   Operation 333 'add' 'out1_w_4' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 334 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i128 %add124_2118_loc_load" [d6.cpp:92]   --->   Operation 334 'trunc' 'trunc_ln92' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln92_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 115" [d6.cpp:92]   --->   Operation 335 'partselect' 'trunc_ln92_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 336 [1/1] (1.09ns)   --->   "%out1_w_5 = add i58 %trunc_ln92_1, i58 %trunc_ln92" [d6.cpp:92]   --->   Operation 336 'add' 'out1_w_5' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 337 [1/1] (0.00ns)   --->   "%trunc_ln93 = trunc i128 %add124_1117_loc_load" [d6.cpp:93]   --->   Operation 337 'trunc' 'trunc_ln93' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln93_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 115" [d6.cpp:93]   --->   Operation 338 'partselect' 'trunc_ln93_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 339 [1/1] (1.09ns)   --->   "%out1_w_6 = add i58 %trunc_ln93_1, i58 %trunc_ln93" [d6.cpp:93]   --->   Operation 339 'add' 'out1_w_6' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 340 [1/1] (0.00ns)   --->   "%trunc_ln94_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 115" [d6.cpp:94]   --->   Operation 340 'partselect' 'trunc_ln94_1' <Predicate = true> <Delay = 0.00>

State 49 <SV = 48> <Delay = 6.66>
ST_49 : Operation 341 [1/1] (0.00ns)   --->   "%add124116_loc_load = load i128 %add124116_loc"   --->   Operation 341 'load' 'add124116_loc_load' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 342 [1/1] (1.57ns)   --->   "%add_ln62_6 = add i128 %add_ln62_5, i128 %add_ln62_3" [d6.cpp:62]   --->   Operation 342 'add' 'add_ln62_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 343 [1/1] (1.09ns)   --->   "%add_ln62_8 = add i57 %trunc_ln62_3, i57 %trunc_ln62_2" [d6.cpp:62]   --->   Operation 343 'add' 'add_ln62_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 344 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%arr_9 = add i128 %add_ln62_6, i128 %add_ln62_2" [d6.cpp:62]   --->   Operation 344 'add' 'arr_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 345 [1/1] (0.00ns)   --->   "%sext_ln87_6 = sext i70 %trunc_ln87_8" [d6.cpp:87]   --->   Operation 345 'sext' 'sext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 346 [1/1] (1.57ns)   --->   "%add_ln87_6 = add i128 %add124116_loc_load, i128 %sext_ln87_6" [d6.cpp:87]   --->   Operation 346 'add' 'add_ln87_6' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 347 [1/1] (0.00ns)   --->   "%trunc_ln87_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 127" [d6.cpp:87]   --->   Operation 347 'partselect' 'trunc_ln87_9' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 348 [1/1] (0.00ns)   --->   "%sext_ln87_7 = sext i70 %trunc_ln87_9" [d6.cpp:87]   --->   Operation 348 'sext' 'sext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 349 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_7 = add i128 %arr_9, i128 %sext_ln87_7" [d6.cpp:87]   --->   Operation 349 'add' 'add_ln87_7' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 350 [1/1] (0.00ns)   --->   "%trunc_ln87_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 114" [d6.cpp:87]   --->   Operation 350 'partselect' 'trunc_ln87_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 351 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln87_1, i58 %trunc_ln87" [d6.cpp:87]   --->   Operation 351 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 352 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i58 %trunc_ln87" [d6.cpp:88]   --->   Operation 352 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 353 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 127" [d6.cpp:88]   --->   Operation 353 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 354 [1/1] (0.00ns)   --->   "%sext_ln88 = sext i71 %trunc_ln3" [d6.cpp:88]   --->   Operation 354 'sext' 'sext_ln88' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 355 [1/1] (1.13ns)   --->   "%add_ln88 = add i72 %sext_ln88, i72 %zext_ln88" [d6.cpp:88]   --->   Operation 355 'add' 'add_ln88' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 356 [1/1] (0.00ns)   --->   "%trunc_ln88_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln88, i32 58, i32 71" [d6.cpp:88]   --->   Operation 356 'partselect' 'trunc_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 357 [1/1] (0.00ns)   --->   "%sext_ln88_1 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 357 'sext' 'sext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 358 [1/1] (0.00ns)   --->   "%sext_ln88_2 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 358 'sext' 'sext_ln88_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 359 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln88_2, i58 %add_ln88_1" [d6.cpp:88]   --->   Operation 359 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 360 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i58 %add_ln88_1" [d6.cpp:89]   --->   Operation 360 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 361 [1/1] (1.09ns)   --->   "%add_ln89 = add i60 %sext_ln88_1, i60 %zext_ln89" [d6.cpp:89]   --->   Operation 361 'add' 'add_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 362 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln89, i32 58, i32 59" [d6.cpp:89]   --->   Operation 362 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 363 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i2 %tmp" [d6.cpp:89]   --->   Operation 363 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 364 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i6 %sext_ln89" [d6.cpp:89]   --->   Operation 364 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 365 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i58 %add_ln89_1" [d6.cpp:89]   --->   Operation 365 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 366 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln89_2, i59 %zext_ln89_1" [d6.cpp:89]   --->   Operation 366 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 367 [1/1] (0.00ns)   --->   "%trunc_ln94 = trunc i128 %add124116_loc_load" [d6.cpp:94]   --->   Operation 367 'trunc' 'trunc_ln94' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 368 [1/1] (1.09ns)   --->   "%out1_w_7 = add i58 %trunc_ln94_1, i58 %trunc_ln94" [d6.cpp:94]   --->   Operation 368 'add' 'out1_w_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 369 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln95 = add i57 %add_ln62_8, i57 %add_ln62_7" [d6.cpp:95]   --->   Operation 369 'add' 'add_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 370 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 114" [d6.cpp:95]   --->   Operation 370 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 371 [1/1] (0.79ns) (root node of TernaryAdder)   --->   "%out1_w_8 = add i57 %trunc_ln, i57 %add_ln95" [d6.cpp:95]   --->   Operation 371 'add' 'out1_w_8' <Predicate = true> <Delay = 0.79> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.39> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 372 [2/2] (0.77ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 372 'call' 'call_ln99' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 0.00>
ST_50 : Operation 373 [1/2] (0.00ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 373 'call' 'call_ln99' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 50> <Delay = 7.30>
ST_51 : Operation 374 [5/5] (7.30ns)   --->   "%empty_33 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 374 'writeresp' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 7.30>
ST_52 : Operation 375 [4/5] (7.30ns)   --->   "%empty_33 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 375 'writeresp' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 7.30>
ST_53 : Operation 376 [3/5] (7.30ns)   --->   "%empty_33 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 376 'writeresp' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 53> <Delay = 7.30>
ST_54 : Operation 377 [2/5] (7.30ns)   --->   "%empty_33 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 377 'writeresp' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 54> <Delay = 7.30>
ST_55 : Operation 378 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_9" [d6.cpp:3]   --->   Operation 378 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 379 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_7, i32 0, i32 0, void @empty_14, i32 0, i32 9, void @empty, void @empty_0, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 379 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 380 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 380 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 381 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 381 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 382 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 382 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 383 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_8, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 383 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 384 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 384 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 385 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_5, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 385 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 386 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_6, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_14, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_4, i32 4294967295, i32 0"   --->   Operation 386 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 387 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_2, void @empty_14, void @empty_14, i32 0, i32 0, i32 0, i32 0, void @empty_14, void @empty_14, i32 4294967295, i32 0"   --->   Operation 387 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 388 [1/5] (7.30ns)   --->   "%empty_33 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 388 'writeresp' 'empty_33' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 389 [1/1] (0.00ns)   --->   "%ret_ln104 = ret" [d6.cpp:104]   --->   Operation 389 'ret' 'ret_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d6.cpp:22) [46]  (0.000 ns)
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [47]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d6.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [48]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d6.cpp:29) [60]  (0.000 ns)
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_28', d6.cpp:29) on port 'mem' (d6.cpp:29) [61]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln29', d6.cpp:29) to 'test_Pipeline_ARRAY_2_READ' [62]  (1.224 ns)

 <State 22>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 23>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 24>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 25>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 27>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 28>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 29>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_30', d6.cpp:62) on port 'mem' (d6.cpp:62) [160]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [161]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [162]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [163]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [164]  (7.300 ns)

 <State 34>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [165]  (7.300 ns)

 <State 35>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [166]  (7.300 ns)

 <State 36>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [167]  (7.300 ns)

 <State 37>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [168]  (7.300 ns)

 <State 38>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [169]  (7.300 ns)

 <State 39>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read', d6.cpp:62) on port 'mem' (d6.cpp:62) [172]  (7.300 ns)

 <State 40>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_1', d6.cpp:62) on port 'mem' (d6.cpp:62) [173]  (7.300 ns)

 <State 41>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_2', d6.cpp:62) on port 'mem' (d6.cpp:62) [174]  (7.300 ns)

 <State 42>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_3', d6.cpp:62) on port 'mem' (d6.cpp:62) [175]  (7.300 ns)

 <State 43>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_4', d6.cpp:62) on port 'mem' (d6.cpp:62) [176]  (7.300 ns)

 <State 44>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_5', d6.cpp:62) on port 'mem' (d6.cpp:62) [177]  (7.300 ns)

 <State 45>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_6', d6.cpp:62) on port 'mem' (d6.cpp:62) [178]  (7.300 ns)

 <State 46>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_7', d6.cpp:62) on port 'mem' (d6.cpp:62) [179]  (7.300 ns)

 <State 47>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem_addr_1_read_8', d6.cpp:62) on port 'mem' (d6.cpp:62) [180]  (7.300 ns)

 <State 48>: 6.316ns
The critical path consists of the following:
	'load' operation ('add124_4120_loc_load') on local variable 'add124_4120_loc' [199]  (0.000 ns)
	'add' operation ('add_ln87_2', d6.cpp:87) [239]  (1.579 ns)
	'add' operation ('add_ln87_3', d6.cpp:87) [242]  (1.579 ns)
	'add' operation ('add_ln87_4', d6.cpp:87) [245]  (1.579 ns)
	'add' operation ('add_ln87_5', d6.cpp:87) [248]  (1.579 ns)

 <State 49>: 6.669ns
The critical path consists of the following:
	'load' operation ('add124116_loc_load') on local variable 'add124116_loc' [203]  (0.000 ns)
	'add' operation ('add_ln87_6', d6.cpp:87) [251]  (1.579 ns)
	'add' operation ('add_ln87_7', d6.cpp:87) [254]  (0.995 ns)
	'add' operation ('add_ln88', d6.cpp:88) [260]  (1.139 ns)
	'add' operation ('add_ln89', d6.cpp:89) [269]  (1.093 ns)
	'add' operation ('out1_w', d6.cpp:89) [277]  (1.093 ns)
	'call' operation ('call_ln99', d6.cpp:99) to 'test_Pipeline_ARRAY_WRITE' [300]  (0.770 ns)

 <State 50>: 0.000ns
The critical path consists of the following:

 <State 51>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_33', d6.cpp:104) on port 'mem' (d6.cpp:104) [301]  (7.300 ns)

 <State 52>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_33', d6.cpp:104) on port 'mem' (d6.cpp:104) [301]  (7.300 ns)

 <State 53>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_33', d6.cpp:104) on port 'mem' (d6.cpp:104) [301]  (7.300 ns)

 <State 54>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_33', d6.cpp:104) on port 'mem' (d6.cpp:104) [301]  (7.300 ns)

 <State 55>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_33', d6.cpp:104) on port 'mem' (d6.cpp:104) [301]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
