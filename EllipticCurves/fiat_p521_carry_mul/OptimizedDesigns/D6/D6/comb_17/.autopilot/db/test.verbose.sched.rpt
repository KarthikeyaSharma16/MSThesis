

================================================================
== Vitis HLS Report for 'test'
================================================================
* Date:           Thu May  9 22:05:19 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D6
* Solution:       comb_17 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       96|       96|  0.960 us|  0.960 us|   97|   97|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%arg2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg2"   --->   Operation 34 'read' 'arg2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%arg1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %arg1"   --->   Operation 35 'read' 'arg1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%out1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out1"   --->   Operation 36 'read' 'out1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add83_2223_loc = alloca i64 1"   --->   Operation 37 'alloca' 'add83_2223_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add225_loc = alloca i64 1"   --->   Operation 38 'alloca' 'add225_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add_1182226_loc = alloca i64 1"   --->   Operation 39 'alloca' 'add_1182226_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add_2196227_loc = alloca i64 1"   --->   Operation 40 'alloca' 'add_2196227_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add_3210228_loc = alloca i64 1"   --->   Operation 41 'alloca' 'add_3210228_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add_4229_loc = alloca i64 1"   --->   Operation 42 'alloca' 'add_4229_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add_5230_loc = alloca i64 1"   --->   Operation 43 'alloca' 'add_5230_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add_6231_loc = alloca i64 1"   --->   Operation 44 'alloca' 'add_6231_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%add_7232_loc = alloca i64 1"   --->   Operation 45 'alloca' 'add_7232_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%arg2_r_loc = alloca i64 1"   --->   Operation 46 'alloca' 'arg2_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%arg2_r_1_loc = alloca i64 1"   --->   Operation 47 'alloca' 'arg2_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%arg2_r_2_loc = alloca i64 1"   --->   Operation 48 'alloca' 'arg2_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%arg2_r_3_loc = alloca i64 1"   --->   Operation 49 'alloca' 'arg2_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%arg2_r_4_loc = alloca i64 1"   --->   Operation 50 'alloca' 'arg2_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%arg2_r_5_loc = alloca i64 1"   --->   Operation 51 'alloca' 'arg2_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%arg2_r_6_loc = alloca i64 1"   --->   Operation 52 'alloca' 'arg2_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%arg2_r_7_loc = alloca i64 1"   --->   Operation 53 'alloca' 'arg2_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%arg2_r_8_loc = alloca i64 1"   --->   Operation 54 'alloca' 'arg2_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%arg1_r_loc = alloca i64 1"   --->   Operation 55 'alloca' 'arg1_r_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%arg1_r_1_loc = alloca i64 1"   --->   Operation 56 'alloca' 'arg1_r_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%arg1_r_2_loc = alloca i64 1"   --->   Operation 57 'alloca' 'arg1_r_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%arg1_r_3_loc = alloca i64 1"   --->   Operation 58 'alloca' 'arg1_r_3_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%arg1_r_4_loc = alloca i64 1"   --->   Operation 59 'alloca' 'arg1_r_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%arg1_r_5_loc = alloca i64 1"   --->   Operation 60 'alloca' 'arg1_r_5_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%arg1_r_6_loc = alloca i64 1"   --->   Operation 61 'alloca' 'arg1_r_6_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%arg1_r_7_loc = alloca i64 1"   --->   Operation 62 'alloca' 'arg1_r_7_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%arg1_r_8_loc = alloca i64 1"   --->   Operation 63 'alloca' 'arg1_r_8_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln22_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg1_read, i32 3, i32 63" [d6.cpp:22]   --->   Operation 64 'partselect' 'trunc_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %arg2_read, i32 3, i32 63" [d6.cpp:29]   --->   Operation 65 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln99_1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %out1_read, i32 3, i32 63" [d6.cpp:99]   --->   Operation 66 'partselect' 'trunc_ln99_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i61 %trunc_ln22_1" [d6.cpp:22]   --->   Operation 67 'sext' 'sext_ln22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i64 %mem, i64 %sext_ln22" [d6.cpp:22]   --->   Operation 68 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 69 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 70 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 70 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 71 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 71 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 72 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 72 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 73 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 73 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 74 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 74 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 75 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 75 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 76 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr, i32 9" [d6.cpp:22]   --->   Operation 76 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 77 [2/2] (0.00ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 77 'call' 'call_ln22' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.22>
ST_11 : Operation 78 [1/2] (1.22ns)   --->   "%call_ln22 = call void @test_Pipeline_ARRAY_1_READ, i64 %mem, i61 %trunc_ln22_1, i64 %arg1_r_8_loc, i64 %arg1_r_7_loc, i64 %arg1_r_6_loc, i64 %arg1_r_5_loc, i64 %arg1_r_4_loc, i64 %arg1_r_3_loc, i64 %arg1_r_2_loc, i64 %arg1_r_1_loc, i64 %arg1_r_loc" [d6.cpp:22]   --->   Operation 78 'call' 'call_ln22' <Predicate = true> <Delay = 1.22> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i61 %trunc_ln29_1" [d6.cpp:29]   --->   Operation 79 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i64 %mem, i64 %sext_ln29" [d6.cpp:29]   --->   Operation 80 'getelementptr' 'mem_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [8/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 81 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 82 [7/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 82 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 83 [6/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 83 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 84 [5/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 84 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 85 [4/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 85 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 86 [3/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 86 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 87 [2/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 87 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 88 [1/8] (7.30ns)   --->   "%empty_32 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i64, i64 %mem_addr_1, i32 9" [d6.cpp:29]   --->   Operation 88 'readreq' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 0.00>
ST_20 : Operation 89 [2/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 89 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 0.00>
ST_21 : Operation 90 [1/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_ARRAY_2_READ, i64 %mem, i61 %trunc_ln29_1, i63 %arg2_r_8_loc, i64 %arg2_r_7_loc, i64 %arg2_r_6_loc, i64 %arg2_r_5_loc, i64 %arg2_r_4_loc, i64 %arg2_r_3_loc, i64 %arg2_r_2_loc, i64 %arg2_r_1_loc, i64 %arg2_r_loc" [d6.cpp:29]   --->   Operation 90 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 1.08>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%arg1_r_8_loc_load = load i64 %arg1_r_8_loc"   --->   Operation 91 'load' 'arg1_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%arg1_r_7_loc_load = load i64 %arg1_r_7_loc"   --->   Operation 92 'load' 'arg1_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%arg1_r_6_loc_load = load i64 %arg1_r_6_loc"   --->   Operation 93 'load' 'arg1_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%arg1_r_5_loc_load = load i64 %arg1_r_5_loc"   --->   Operation 94 'load' 'arg1_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 95 [1/1] (0.00ns)   --->   "%arg1_r_4_loc_load = load i64 %arg1_r_4_loc"   --->   Operation 95 'load' 'arg1_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 96 [1/1] (0.00ns)   --->   "%arg1_r_3_loc_load = load i64 %arg1_r_3_loc"   --->   Operation 96 'load' 'arg1_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 97 [1/1] (0.00ns)   --->   "%arg1_r_2_loc_load = load i64 %arg1_r_2_loc"   --->   Operation 97 'load' 'arg1_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 98 [1/1] (0.00ns)   --->   "%arg1_r_1_loc_load = load i64 %arg1_r_1_loc"   --->   Operation 98 'load' 'arg1_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 99 [1/1] (0.00ns)   --->   "%arg2_r_8_loc_load = load i63 %arg2_r_8_loc"   --->   Operation 99 'load' 'arg2_r_8_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 100 [1/1] (0.00ns)   --->   "%arg2_r_7_loc_load = load i64 %arg2_r_7_loc"   --->   Operation 100 'load' 'arg2_r_7_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%arg2_r_6_loc_load = load i64 %arg2_r_6_loc"   --->   Operation 101 'load' 'arg2_r_6_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%arg2_r_5_loc_load = load i64 %arg2_r_5_loc"   --->   Operation 102 'load' 'arg2_r_5_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (0.00ns)   --->   "%arg2_r_4_loc_load = load i64 %arg2_r_4_loc"   --->   Operation 103 'load' 'arg2_r_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%arg2_r_3_loc_load = load i64 %arg2_r_3_loc"   --->   Operation 104 'load' 'arg2_r_3_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%arg2_r_2_loc_load = load i64 %arg2_r_2_loc"   --->   Operation 105 'load' 'arg2_r_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 106 [1/1] (0.00ns)   --->   "%arg2_r_1_loc_load = load i64 %arg2_r_1_loc"   --->   Operation 106 'load' 'arg2_r_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%empty_33 = trunc i64 %arg2_r_1_loc_load"   --->   Operation 107 'trunc' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%empty_34 = trunc i64 %arg2_r_2_loc_load"   --->   Operation 108 'trunc' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.00ns)   --->   "%empty_35 = trunc i64 %arg2_r_3_loc_load"   --->   Operation 109 'trunc' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 110 [1/1] (0.00ns)   --->   "%empty_36 = trunc i64 %arg2_r_4_loc_load"   --->   Operation 110 'trunc' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 111 [1/1] (0.00ns)   --->   "%empty_37 = trunc i64 %arg2_r_5_loc_load"   --->   Operation 111 'trunc' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 112 [1/1] (0.00ns)   --->   "%empty_38 = trunc i64 %arg2_r_6_loc_load"   --->   Operation 112 'trunc' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 113 [1/1] (0.00ns)   --->   "%empty_39 = trunc i64 %arg2_r_7_loc_load"   --->   Operation 113 'trunc' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 114 [1/1] (0.00ns)   --->   "%mul = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %arg2_r_8_loc_load, i1 0"   --->   Operation 114 'bitconcatenate' 'mul' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 115 [2/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_8_loc_load, i64 %arg1_r_4_loc_load, i64 %mul, i63 %empty_39, i63 %arg2_r_8_loc_load, i63 %empty_38, i63 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i64 %arg1_r_7_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_1_loc_load, i128 %add_7232_loc, i128 %add_6231_loc, i128 %add_5230_loc, i128 %add_4229_loc, i128 %add_3210228_loc, i128 %add_2196227_loc, i128 %add_1182226_loc, i128 %add225_loc"   --->   Operation 115 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 116 [2/2] (1.08ns)   --->   "%call_ln29 = call void @test_Pipeline_VITIS_LOOP_56_5, i64 %mem, i64 %arg1_read, i61 %trunc_ln29_1, i128 %add83_2223_loc" [d6.cpp:29]   --->   Operation 116 'call' 'call_ln29' <Predicate = true> <Delay = 1.08> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 0.00>
ST_23 : Operation 117 [1/2] (0.00ns)   --->   "%call_ln0 = call void @test_Pipeline_VITIS_LOOP_36_1, i64 %arg1_r_8_loc_load, i64 %arg1_r_4_loc_load, i64 %mul, i63 %empty_39, i63 %arg2_r_8_loc_load, i63 %empty_38, i63 %empty_37, i63 %empty_36, i63 %empty_35, i63 %empty_34, i63 %empty_33, i64 %arg1_r_7_loc_load, i64 %arg1_r_3_loc_load, i64 %arg1_r_6_loc_load, i64 %arg1_r_2_loc_load, i64 %arg1_r_5_loc_load, i64 %arg1_r_1_loc_load, i128 %add_7232_loc, i128 %add_6231_loc, i128 %add_5230_loc, i128 %add_4229_loc, i128 %add_3210228_loc, i128 %add_2196227_loc, i128 %add_1182226_loc, i128 %add225_loc"   --->   Operation 117 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 118 [1/2] (0.00ns)   --->   "%call_ln29 = call void @test_Pipeline_VITIS_LOOP_56_5, i64 %mem, i64 %arg1_read, i61 %trunc_ln29_1, i128 %add83_2223_loc" [d6.cpp:29]   --->   Operation 118 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 6.10>
ST_24 : Operation 119 [1/1] (0.00ns)   --->   "%arg1_r_loc_load = load i64 %arg1_r_loc"   --->   Operation 119 'load' 'arg1_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 120 [1/1] (0.00ns)   --->   "%arg2_r_loc_load = load i64 %arg2_r_loc"   --->   Operation 120 'load' 'arg2_r_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 121 [1/1] (0.00ns)   --->   "%add_7232_loc_load = load i128 %add_7232_loc"   --->   Operation 121 'load' 'add_7232_loc_load' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i64 %arg1_r_7_loc_load" [d6.cpp:80]   --->   Operation 122 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i64 %arg1_r_6_loc_load" [d6.cpp:80]   --->   Operation 123 'zext' 'zext_ln80_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i64 %arg1_r_5_loc_load" [d6.cpp:80]   --->   Operation 124 'zext' 'zext_ln80_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i64 %arg1_r_4_loc_load" [d6.cpp:80]   --->   Operation 125 'zext' 'zext_ln80_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i64 %arg1_r_3_loc_load" [d6.cpp:80]   --->   Operation 126 'zext' 'zext_ln80_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln80_5 = zext i64 %arg1_r_2_loc_load" [d6.cpp:80]   --->   Operation 127 'zext' 'zext_ln80_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln80_6 = zext i64 %arg1_r_1_loc_load" [d6.cpp:80]   --->   Operation 128 'zext' 'zext_ln80_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln80_7 = zext i64 %arg1_r_loc_load" [d6.cpp:80]   --->   Operation 129 'zext' 'zext_ln80_7' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln80_8 = zext i64 %arg2_r_loc_load" [d6.cpp:80]   --->   Operation 130 'zext' 'zext_ln80_8' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 131 '%mul_ln80 = mul i128 %zext_ln80_8, i128 %zext_ln80'
ST_24 : Operation 131 [1/1] (3.63ns)   --->   "%mul_ln80 = mul i128 %zext_ln80_8, i128 %zext_ln80" [d6.cpp:80]   --->   Operation 131 'mul' 'mul_ln80' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 132 '%mul_ln80_1 = mul i128 %zext_ln80_8, i128 %zext_ln80_1'
ST_24 : Operation 132 [1/1] (3.63ns)   --->   "%mul_ln80_1 = mul i128 %zext_ln80_8, i128 %zext_ln80_1" [d6.cpp:80]   --->   Operation 132 'mul' 'mul_ln80_1' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 133 '%mul_ln80_2 = mul i128 %zext_ln80_8, i128 %zext_ln80_2'
ST_24 : Operation 133 [1/1] (3.63ns)   --->   "%mul_ln80_2 = mul i128 %zext_ln80_8, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 133 'mul' 'mul_ln80_2' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 134 '%mul_ln80_3 = mul i128 %zext_ln80_8, i128 %zext_ln80_3'
ST_24 : Operation 134 [1/1] (3.63ns)   --->   "%mul_ln80_3 = mul i128 %zext_ln80_8, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 134 'mul' 'mul_ln80_3' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 135 '%mul_ln80_4 = mul i128 %zext_ln80_8, i128 %zext_ln80_4'
ST_24 : Operation 135 [1/1] (3.63ns)   --->   "%mul_ln80_4 = mul i128 %zext_ln80_8, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 135 'mul' 'mul_ln80_4' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 136 '%mul_ln80_5 = mul i128 %zext_ln80_8, i128 %zext_ln80_5'
ST_24 : Operation 136 [1/1] (3.63ns)   --->   "%mul_ln80_5 = mul i128 %zext_ln80_8, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 136 'mul' 'mul_ln80_5' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 137 '%mul_ln80_6 = mul i128 %zext_ln80_8, i128 %zext_ln80_6'
ST_24 : Operation 137 [1/1] (3.63ns)   --->   "%mul_ln80_6 = mul i128 %zext_ln80_8, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 137 'mul' 'mul_ln80_6' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln80_9 = zext i64 %arg2_r_1_loc_load" [d6.cpp:80]   --->   Operation 138 'zext' 'zext_ln80_9' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 139 '%mul_ln80_7 = mul i128 %zext_ln80_9, i128 %zext_ln80_1'
ST_24 : Operation 139 [1/1] (3.63ns)   --->   "%mul_ln80_7 = mul i128 %zext_ln80_9, i128 %zext_ln80_1" [d6.cpp:80]   --->   Operation 139 'mul' 'mul_ln80_7' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 140 '%mul_ln80_8 = mul i128 %zext_ln80_9, i128 %zext_ln80_2'
ST_24 : Operation 140 [1/1] (3.63ns)   --->   "%mul_ln80_8 = mul i128 %zext_ln80_9, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 140 'mul' 'mul_ln80_8' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 141 '%mul_ln80_9 = mul i128 %zext_ln80_9, i128 %zext_ln80_3'
ST_24 : Operation 141 [1/1] (3.63ns)   --->   "%mul_ln80_9 = mul i128 %zext_ln80_9, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 141 'mul' 'mul_ln80_9' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 142 '%mul_ln80_10 = mul i128 %zext_ln80_9, i128 %zext_ln80_4'
ST_24 : Operation 142 [1/1] (3.63ns)   --->   "%mul_ln80_10 = mul i128 %zext_ln80_9, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 142 'mul' 'mul_ln80_10' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 143 '%mul_ln80_11 = mul i128 %zext_ln80_9, i128 %zext_ln80_5'
ST_24 : Operation 143 [1/1] (3.63ns)   --->   "%mul_ln80_11 = mul i128 %zext_ln80_9, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 143 'mul' 'mul_ln80_11' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 144 '%mul_ln80_12 = mul i128 %zext_ln80_9, i128 %zext_ln80_6'
ST_24 : Operation 144 [1/1] (3.63ns)   --->   "%mul_ln80_12 = mul i128 %zext_ln80_9, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 144 'mul' 'mul_ln80_12' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln80_10 = zext i64 %arg2_r_2_loc_load" [d6.cpp:80]   --->   Operation 145 'zext' 'zext_ln80_10' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 146 '%mul_ln80_13 = mul i128 %zext_ln80_10, i128 %zext_ln80_2'
ST_24 : Operation 146 [1/1] (3.63ns)   --->   "%mul_ln80_13 = mul i128 %zext_ln80_10, i128 %zext_ln80_2" [d6.cpp:80]   --->   Operation 146 'mul' 'mul_ln80_13' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 147 '%mul_ln80_14 = mul i128 %zext_ln80_10, i128 %zext_ln80_3'
ST_24 : Operation 147 [1/1] (3.63ns)   --->   "%mul_ln80_14 = mul i128 %zext_ln80_10, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 147 'mul' 'mul_ln80_14' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 148 '%mul_ln80_15 = mul i128 %zext_ln80_10, i128 %zext_ln80_4'
ST_24 : Operation 148 [1/1] (3.63ns)   --->   "%mul_ln80_15 = mul i128 %zext_ln80_10, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 148 'mul' 'mul_ln80_15' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 149 '%mul_ln80_16 = mul i128 %zext_ln80_10, i128 %zext_ln80_5'
ST_24 : Operation 149 [1/1] (3.63ns)   --->   "%mul_ln80_16 = mul i128 %zext_ln80_10, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 149 'mul' 'mul_ln80_16' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 150 '%mul_ln80_17 = mul i128 %zext_ln80_10, i128 %zext_ln80_6'
ST_24 : Operation 150 [1/1] (3.63ns)   --->   "%mul_ln80_17 = mul i128 %zext_ln80_10, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 150 'mul' 'mul_ln80_17' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln80_11 = zext i64 %arg2_r_3_loc_load" [d6.cpp:80]   --->   Operation 151 'zext' 'zext_ln80_11' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 152 '%mul_ln80_18 = mul i128 %zext_ln80_11, i128 %zext_ln80_3'
ST_24 : Operation 152 [1/1] (3.63ns)   --->   "%mul_ln80_18 = mul i128 %zext_ln80_11, i128 %zext_ln80_3" [d6.cpp:80]   --->   Operation 152 'mul' 'mul_ln80_18' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 153 '%mul_ln80_19 = mul i128 %zext_ln80_11, i128 %zext_ln80_4'
ST_24 : Operation 153 [1/1] (3.63ns)   --->   "%mul_ln80_19 = mul i128 %zext_ln80_11, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 153 'mul' 'mul_ln80_19' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 154 '%mul_ln80_20 = mul i128 %zext_ln80_11, i128 %zext_ln80_5'
ST_24 : Operation 154 [1/1] (3.63ns)   --->   "%mul_ln80_20 = mul i128 %zext_ln80_11, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 154 'mul' 'mul_ln80_20' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 155 '%mul_ln80_21 = mul i128 %zext_ln80_11, i128 %zext_ln80_6'
ST_24 : Operation 155 [1/1] (3.63ns)   --->   "%mul_ln80_21 = mul i128 %zext_ln80_11, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 155 'mul' 'mul_ln80_21' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln80_12 = zext i64 %arg2_r_4_loc_load" [d6.cpp:80]   --->   Operation 156 'zext' 'zext_ln80_12' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 157 '%mul_ln80_22 = mul i128 %zext_ln80_12, i128 %zext_ln80_4'
ST_24 : Operation 157 [1/1] (3.63ns)   --->   "%mul_ln80_22 = mul i128 %zext_ln80_12, i128 %zext_ln80_4" [d6.cpp:80]   --->   Operation 157 'mul' 'mul_ln80_22' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 158 '%mul_ln80_23 = mul i128 %zext_ln80_12, i128 %zext_ln80_5'
ST_24 : Operation 158 [1/1] (3.63ns)   --->   "%mul_ln80_23 = mul i128 %zext_ln80_12, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 158 'mul' 'mul_ln80_23' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 159 '%mul_ln80_24 = mul i128 %zext_ln80_12, i128 %zext_ln80_6'
ST_24 : Operation 159 [1/1] (3.63ns)   --->   "%mul_ln80_24 = mul i128 %zext_ln80_12, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 159 'mul' 'mul_ln80_24' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln80_13 = zext i64 %arg2_r_5_loc_load" [d6.cpp:80]   --->   Operation 160 'zext' 'zext_ln80_13' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 161 '%mul_ln80_25 = mul i128 %zext_ln80_13, i128 %zext_ln80_5'
ST_24 : Operation 161 [1/1] (3.63ns)   --->   "%mul_ln80_25 = mul i128 %zext_ln80_13, i128 %zext_ln80_5" [d6.cpp:80]   --->   Operation 161 'mul' 'mul_ln80_25' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 162 '%mul_ln80_26 = mul i128 %zext_ln80_13, i128 %zext_ln80_6'
ST_24 : Operation 162 [1/1] (3.63ns)   --->   "%mul_ln80_26 = mul i128 %zext_ln80_13, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 162 'mul' 'mul_ln80_26' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln80_14 = zext i64 %arg2_r_6_loc_load" [d6.cpp:80]   --->   Operation 163 'zext' 'zext_ln80_14' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 164 '%mul_ln80_27 = mul i128 %zext_ln80_14, i128 %zext_ln80_6'
ST_24 : Operation 164 [1/1] (3.63ns)   --->   "%mul_ln80_27 = mul i128 %zext_ln80_14, i128 %zext_ln80_6" [d6.cpp:80]   --->   Operation 164 'mul' 'mul_ln80_27' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln80_15 = zext i64 %arg2_r_7_loc_load" [d6.cpp:80]   --->   Operation 165 'zext' 'zext_ln80_15' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 166 '%mul_ln80_28 = mul i128 %zext_ln80_15, i128 %zext_ln80_7'
ST_24 : Operation 166 [1/1] (3.63ns)   --->   "%mul_ln80_28 = mul i128 %zext_ln80_15, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 166 'mul' 'mul_ln80_28' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 167 [1/1] (1.57ns)   --->   "%add_ln80 = add i128 %mul_ln80_25, i128 %mul_ln80_27" [d6.cpp:80]   --->   Operation 167 'add' 'add_ln80' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 168 [1/1] (1.57ns)   --->   "%add_ln80_1 = add i128 %mul_ln80_22, i128 %mul_ln80_18" [d6.cpp:80]   --->   Operation 168 'add' 'add_ln80_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 169 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i128 %add_ln80" [d6.cpp:80]   --->   Operation 169 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 170 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i128 %add_ln80_1" [d6.cpp:80]   --->   Operation 170 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 171 [1/1] (1.57ns)   --->   "%add_ln80_3 = add i128 %mul_ln80_7, i128 %mul_ln80_13" [d6.cpp:80]   --->   Operation 171 'add' 'add_ln80_3' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 172 [1/1] (1.57ns)   --->   "%add_ln80_4 = add i128 %mul_ln80, i128 %mul_ln80_28" [d6.cpp:80]   --->   Operation 172 'add' 'add_ln80_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 173 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 173 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 174 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i128 %add_ln80_4" [d6.cpp:80]   --->   Operation 174 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 175 '%mul_ln80_29 = mul i128 %zext_ln80_14, i128 %zext_ln80_7'
ST_24 : Operation 175 [1/1] (3.63ns)   --->   "%mul_ln80_29 = mul i128 %zext_ln80_14, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 175 'mul' 'mul_ln80_29' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 176 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_10 = add i128 %mul_ln80_26, i128 %mul_ln80_19" [d6.cpp:80]   --->   Operation 176 'add' 'add_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 177 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_11 = add i128 %add_ln80_10, i128 %mul_ln80_23" [d6.cpp:80]   --->   Operation 177 'add' 'add_ln80_11' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 178 [1/1] (1.57ns)   --->   "%add_ln80_12 = add i128 %mul_ln80_8, i128 %mul_ln80_14" [d6.cpp:80]   --->   Operation 178 'add' 'add_ln80_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 179 [1/1] (1.57ns)   --->   "%add_ln80_14 = add i128 %mul_ln80_1, i128 %mul_ln80_29" [d6.cpp:80]   --->   Operation 179 'add' 'add_ln80_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 180 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i128 %add_ln80_12" [d6.cpp:80]   --->   Operation 180 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 181 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i128 %add_ln80_14" [d6.cpp:80]   --->   Operation 181 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 182 [1/1] (0.00ns)   --->   "%trunc_ln80_7 = trunc i128 %add_ln80_11" [d6.cpp:80]   --->   Operation 182 'trunc' 'trunc_ln80_7' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 183 '%mul_ln80_30 = mul i128 %zext_ln80_13, i128 %zext_ln80_7'
ST_24 : Operation 183 [1/1] (3.63ns)   --->   "%mul_ln80_30 = mul i128 %zext_ln80_13, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 183 'mul' 'mul_ln80_30' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_18 = add i128 %mul_ln80_24, i128 %mul_ln80_15" [d6.cpp:80]   --->   Operation 184 'add' 'add_ln80_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 185 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_20 = add i128 %add_ln80_18, i128 %mul_ln80_20" [d6.cpp:80]   --->   Operation 185 'add' 'add_ln80_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 186 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_21 = add i128 %mul_ln80_9, i128 %mul_ln80_30" [d6.cpp:80]   --->   Operation 186 'add' 'add_ln80_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 187 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_22 = add i128 %add_ln80_21, i128 %mul_ln80_2" [d6.cpp:80]   --->   Operation 187 'add' 'add_ln80_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 188 [1/1] (0.00ns)   --->   "%trunc_ln80_9 = trunc i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 188 'trunc' 'trunc_ln80_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 189 [1/1] (0.00ns)   --->   "%trunc_ln80_10 = trunc i128 %add_ln80_22" [d6.cpp:80]   --->   Operation 189 'trunc' 'trunc_ln80_10' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 190 '%mul_ln80_31 = mul i128 %zext_ln80_12, i128 %zext_ln80_7'
ST_24 : Operation 190 [1/1] (3.63ns)   --->   "%mul_ln80_31 = mul i128 %zext_ln80_12, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 190 'mul' 'mul_ln80_31' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 191 [1/1] (1.57ns)   --->   "%add_ln80_25 = add i128 %mul_ln80_16, i128 %mul_ln80_21" [d6.cpp:80]   --->   Operation 191 'add' 'add_ln80_25' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 192 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_26 = add i128 %mul_ln80_10, i128 %mul_ln80_31" [d6.cpp:80]   --->   Operation 192 'add' 'add_ln80_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 193 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_27 = add i128 %add_ln80_26, i128 %mul_ln80_3" [d6.cpp:80]   --->   Operation 193 'add' 'add_ln80_27' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 194 [1/1] (0.00ns)   --->   "%trunc_ln80_12 = trunc i128 %add_ln80_25" [d6.cpp:80]   --->   Operation 194 'trunc' 'trunc_ln80_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 195 [1/1] (0.00ns)   --->   "%trunc_ln80_13 = trunc i128 %add_ln80_27" [d6.cpp:80]   --->   Operation 195 'trunc' 'trunc_ln80_13' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 196 '%mul_ln80_32 = mul i128 %zext_ln80_11, i128 %zext_ln80_7'
ST_24 : Operation 196 [1/1] (3.63ns)   --->   "%mul_ln80_32 = mul i128 %zext_ln80_11, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 196 'mul' 'mul_ln80_32' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 197 [1/1] (1.57ns)   --->   "%add_ln80_30 = add i128 %mul_ln80_4, i128 %mul_ln80_17" [d6.cpp:80]   --->   Operation 197 'add' 'add_ln80_30' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 198 [1/1] (1.57ns)   --->   "%add_ln80_32 = add i128 %mul_ln80_11, i128 %mul_ln80_32" [d6.cpp:80]   --->   Operation 198 'add' 'add_ln80_32' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln80_15 = trunc i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 199 'trunc' 'trunc_ln80_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln80_16 = trunc i128 %add_ln80_32" [d6.cpp:80]   --->   Operation 200 'trunc' 'trunc_ln80_16' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 201 '%mul_ln80_33 = mul i128 %zext_ln80_10, i128 %zext_ln80_7'
ST_24 : Operation 201 [1/1] (3.63ns)   --->   "%mul_ln80_33 = mul i128 %zext_ln80_10, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 201 'mul' 'mul_ln80_33' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 202 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_35 = add i128 %mul_ln80_5, i128 %mul_ln80_33" [d6.cpp:80]   --->   Operation 202 'add' 'add_ln80_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 203 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln80_31 = add i128 %add_ln80_35, i128 %mul_ln80_12" [d6.cpp:80]   --->   Operation 203 'add' 'add_ln80_31' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 204 [1/1] (0.00ns)   --->   "%trunc_ln80_19 = trunc i128 %add_ln80_31" [d6.cpp:80]   --->   Operation 204 'trunc' 'trunc_ln80_19' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 205 '%mul_ln80_34 = mul i128 %zext_ln80_9, i128 %zext_ln80_7'
ST_24 : Operation 205 [1/1] (3.63ns)   --->   "%mul_ln80_34 = mul i128 %zext_ln80_9, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 205 'mul' 'mul_ln80_34' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 206 [1/1] (1.57ns)   --->   "%add_ln80_33 = add i128 %mul_ln80_34, i128 %mul_ln80_6" [d6.cpp:80]   --->   Operation 206 'add' 'add_ln80_33' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 207 [1/1] (0.00ns)   --->   "%trunc_ln80_21 = trunc i128 %add_ln80_33" [d6.cpp:80]   --->   Operation 207 'trunc' 'trunc_ln80_21' <Predicate = true> <Delay = 0.00>
ST_24 : [1/1] (0.89ns)   --->   Input mux for Operation 208 '%mul_ln80_35 = mul i128 %zext_ln80_8, i128 %zext_ln80_7'
ST_24 : Operation 208 [1/1] (3.63ns)   --->   "%mul_ln80_35 = mul i128 %zext_ln80_8, i128 %zext_ln80_7" [d6.cpp:80]   --->   Operation 208 'mul' 'mul_ln80_35' <Predicate = true> <Delay = 3.63> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 209 [1/1] (1.57ns)   --->   "%arr = add i128 %add_7232_loc_load, i128 %mul_ln80_35" [d6.cpp:80]   --->   Operation 209 'add' 'arr' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 210 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i128 %arr" [d6.cpp:87]   --->   Operation 210 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 211 [1/1] (0.00ns)   --->   "%trunc_ln87_2 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %arr, i32 58, i32 127" [d6.cpp:87]   --->   Operation 211 'partselect' 'trunc_ln87_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln88_2 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %arr, i32 58, i32 115" [d6.cpp:88]   --->   Operation 212 'partselect' 'trunc_ln88_2' <Predicate = true> <Delay = 0.00>

State 25 <SV = 24> <Delay = 7.13>
ST_25 : Operation 213 [1/1] (0.00ns)   --->   "%add_6231_loc_load = load i128 %add_6231_loc"   --->   Operation 213 'load' 'add_6231_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 214 [1/1] (0.00ns)   --->   "%add_5230_loc_load = load i128 %add_5230_loc"   --->   Operation 214 'load' 'add_5230_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 215 [1/1] (0.00ns)   --->   "%add_4229_loc_load = load i128 %add_4229_loc"   --->   Operation 215 'load' 'add_4229_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 216 [1/1] (0.00ns)   --->   "%add_3210228_loc_load = load i128 %add_3210228_loc"   --->   Operation 216 'load' 'add_3210228_loc_load' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 217 [1/1] (1.57ns)   --->   "%add_ln80_2 = add i128 %add_ln80_1, i128 %add_ln80" [d6.cpp:80]   --->   Operation 217 'add' 'add_ln80_2' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 218 [1/1] (1.57ns)   --->   "%add_ln80_5 = add i128 %add_ln80_4, i128 %add_ln80_3" [d6.cpp:80]   --->   Operation 218 'add' 'add_ln80_5' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 219 [1/1] (1.09ns)   --->   "%add_ln80_7 = add i58 %trunc_ln80_1, i58 %trunc_ln80" [d6.cpp:80]   --->   Operation 219 'add' 'add_ln80_7' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 220 [1/1] (1.09ns)   --->   "%add_ln80_8 = add i58 %trunc_ln80_3, i58 %trunc_ln80_2" [d6.cpp:80]   --->   Operation 220 'add' 'add_ln80_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 221 [1/1] (1.57ns)   --->   "%add_ln80_15 = add i128 %add_ln80_14, i128 %add_ln80_12" [d6.cpp:80]   --->   Operation 221 'add' 'add_ln80_15' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 222 [1/1] (1.09ns)   --->   "%add_ln80_16 = add i58 %trunc_ln80_6, i58 %trunc_ln80_5" [d6.cpp:80]   --->   Operation 222 'add' 'add_ln80_16' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 223 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_24 = add i128 %add_ln80_27, i128 %add_ln80_25" [d6.cpp:80]   --->   Operation 223 'add' 'add_ln80_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 224 [1/1] (0.00ns)   --->   "%trunc_ln80_14 = trunc i128 %add_3210228_loc_load" [d6.cpp:80]   --->   Operation 224 'trunc' 'trunc_ln80_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 225 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_29 = add i58 %trunc_ln80_13, i58 %trunc_ln80_12" [d6.cpp:80]   --->   Operation 225 'add' 'add_ln80_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 226 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_28 = add i128 %add_ln80_32, i128 %add_ln80_30" [d6.cpp:80]   --->   Operation 226 'add' 'add_ln80_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 227 [1/1] (0.00ns)   --->   "%trunc_ln80_17 = trunc i128 %add_4229_loc_load" [d6.cpp:80]   --->   Operation 227 'trunc' 'trunc_ln80_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 228 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_34 = add i58 %trunc_ln80_16, i58 %trunc_ln80_15" [d6.cpp:80]   --->   Operation 228 'add' 'add_ln80_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 229 [1/1] (0.00ns)   --->   "%trunc_ln80_18 = trunc i128 %add_5230_loc_load" [d6.cpp:80]   --->   Operation 229 'trunc' 'trunc_ln80_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln80_20 = trunc i128 %add_6231_loc_load" [d6.cpp:80]   --->   Operation 230 'trunc' 'trunc_ln80_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 231 [1/1] (0.00ns)   --->   "%sext_ln87 = sext i70 %trunc_ln87_2" [d6.cpp:87]   --->   Operation 231 'sext' 'sext_ln87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 232 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_8 = add i128 %add_6231_loc_load, i128 %sext_ln87" [d6.cpp:87]   --->   Operation 232 'add' 'add_ln87_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 233 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87 = add i128 %add_ln87_8, i128 %add_ln80_33" [d6.cpp:87]   --->   Operation 233 'add' 'add_ln87' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln87_3 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87, i32 58, i32 127" [d6.cpp:87]   --->   Operation 234 'partselect' 'trunc_ln87_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 235 [1/1] (0.00ns)   --->   "%sext_ln87_1 = sext i70 %trunc_ln87_3" [d6.cpp:87]   --->   Operation 235 'sext' 'sext_ln87_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 236 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87_9 = add i128 %add_5230_loc_load, i128 %sext_ln87_1" [d6.cpp:87]   --->   Operation 236 'add' 'add_ln87_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 237 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_1 = add i128 %add_ln87_9, i128 %add_ln80_31" [d6.cpp:87]   --->   Operation 237 'add' 'add_ln87_1' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 238 [1/1] (0.00ns)   --->   "%trunc_ln87_4 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 127" [d6.cpp:87]   --->   Operation 238 'partselect' 'trunc_ln87_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 239 [1/1] (0.00ns)   --->   "%sext_ln87_2 = sext i70 %trunc_ln87_4" [d6.cpp:87]   --->   Operation 239 'sext' 'sext_ln87_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 240 [1/1] (1.57ns)   --->   "%add_ln87_10 = add i128 %add_4229_loc_load, i128 %sext_ln87_2" [d6.cpp:87]   --->   Operation 240 'add' 'add_ln87_10' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 241 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_2 = add i128 %add_ln87_10, i128 %add_ln80_28" [d6.cpp:87]   --->   Operation 241 'add' 'add_ln87_2' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 242 [1/1] (0.00ns)   --->   "%trunc_ln87_5 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 127" [d6.cpp:87]   --->   Operation 242 'partselect' 'trunc_ln87_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 243 [1/1] (0.00ns)   --->   "%sext_ln87_3 = sext i70 %trunc_ln87_5" [d6.cpp:87]   --->   Operation 243 'sext' 'sext_ln87_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 244 [1/1] (1.57ns)   --->   "%add_ln87_11 = add i128 %add_3210228_loc_load, i128 %sext_ln87_3" [d6.cpp:87]   --->   Operation 244 'add' 'add_ln87_11' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 245 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_3 = add i128 %add_ln87_11, i128 %add_ln80_24" [d6.cpp:87]   --->   Operation 245 'add' 'add_ln87_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 246 [1/1] (0.00ns)   --->   "%trunc_ln87_6 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 127" [d6.cpp:87]   --->   Operation 246 'partselect' 'trunc_ln87_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 247 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln88_1 = add i58 %trunc_ln80_20, i58 %trunc_ln88_2" [d6.cpp:88]   --->   Operation 247 'add' 'add_ln88_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 248 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln88_2 = add i58 %add_ln88_1, i58 %trunc_ln80_21" [d6.cpp:88]   --->   Operation 248 'add' 'add_ln88_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 249 [1/1] (0.00ns)   --->   "%trunc_ln89_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87, i32 58, i32 115" [d6.cpp:89]   --->   Operation 249 'partselect' 'trunc_ln89_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 250 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln89_1 = add i58 %trunc_ln80_18, i58 %trunc_ln89_1" [d6.cpp:89]   --->   Operation 250 'add' 'add_ln89_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 251 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%add_ln89_2 = add i58 %add_ln89_1, i58 %trunc_ln80_19" [d6.cpp:89]   --->   Operation 251 'add' 'add_ln89_2' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_1, i32 58, i32 115" [d6.cpp:90]   --->   Operation 252 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 253 [1/1] (1.09ns)   --->   "%add_ln90 = add i58 %trunc_ln80_17, i58 %trunc_ln5" [d6.cpp:90]   --->   Operation 253 'add' 'add_ln90' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 254 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_3 = add i58 %add_ln90, i58 %add_ln80_34" [d6.cpp:90]   --->   Operation 254 'add' 'out1_w_3' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_2, i32 58, i32 115" [d6.cpp:91]   --->   Operation 255 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 256 [1/1] (1.09ns)   --->   "%add_ln91 = add i58 %trunc_ln80_14, i58 %trunc_ln6" [d6.cpp:91]   --->   Operation 256 'add' 'add_ln91' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 257 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_4 = add i58 %add_ln91, i58 %add_ln80_29" [d6.cpp:91]   --->   Operation 257 'add' 'out1_w_4' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 258 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_3, i32 58, i32 115" [d6.cpp:92]   --->   Operation 258 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 259 [1/1] (0.00ns)   --->   "%add_2196227_loc_load = load i128 %add_2196227_loc"   --->   Operation 259 'load' 'add_2196227_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 260 [1/1] (0.00ns)   --->   "%add_1182226_loc_load = load i128 %add_1182226_loc"   --->   Operation 260 'load' 'add_1182226_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 261 [1/1] (0.00ns)   --->   "%add225_loc_load = load i128 %add225_loc"   --->   Operation 261 'load' 'add225_loc_load' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 262 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i128 %add225_loc_load" [d6.cpp:80]   --->   Operation 262 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_9 = add i58 %add_ln80_8, i58 %add_ln80_7" [d6.cpp:80]   --->   Operation 263 'add' 'add_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 264 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_13 = add i128 %add_ln80_15, i128 %add_ln80_11" [d6.cpp:80]   --->   Operation 264 'add' 'add_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln80_8 = trunc i128 %add_1182226_loc_load" [d6.cpp:80]   --->   Operation 265 'trunc' 'trunc_ln80_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 266 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_17 = add i58 %add_ln80_16, i58 %trunc_ln80_7" [d6.cpp:80]   --->   Operation 266 'add' 'add_ln80_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 267 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_19 = add i128 %add_ln80_22, i128 %add_ln80_20" [d6.cpp:80]   --->   Operation 267 'add' 'add_ln80_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln80_11 = trunc i128 %add_2196227_loc_load" [d6.cpp:80]   --->   Operation 268 'trunc' 'trunc_ln80_11' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 269 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_23 = add i58 %trunc_ln80_10, i58 %trunc_ln80_9" [d6.cpp:80]   --->   Operation 269 'add' 'add_ln80_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 270 [1/1] (0.00ns)   --->   "%sext_ln87_4 = sext i70 %trunc_ln87_6" [d6.cpp:87]   --->   Operation 270 'sext' 'sext_ln87_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 271 [1/1] (1.57ns)   --->   "%add_ln87_12 = add i128 %add_2196227_loc_load, i128 %sext_ln87_4" [d6.cpp:87]   --->   Operation 271 'add' 'add_ln87_12' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 272 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_4 = add i128 %add_ln87_12, i128 %add_ln80_19" [d6.cpp:87]   --->   Operation 272 'add' 'add_ln87_4' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 273 [1/1] (0.00ns)   --->   "%trunc_ln87_7 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 127" [d6.cpp:87]   --->   Operation 273 'partselect' 'trunc_ln87_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 274 [1/1] (0.00ns)   --->   "%sext_ln87_5 = sext i70 %trunc_ln87_7" [d6.cpp:87]   --->   Operation 274 'sext' 'sext_ln87_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 275 [1/1] (1.57ns)   --->   "%add_ln87_13 = add i128 %add_1182226_loc_load, i128 %sext_ln87_5" [d6.cpp:87]   --->   Operation 275 'add' 'add_ln87_13' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 276 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_5 = add i128 %add_ln87_13, i128 %add_ln80_13" [d6.cpp:87]   --->   Operation 276 'add' 'add_ln87_5' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln87_8 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 127" [d6.cpp:87]   --->   Operation 277 'partselect' 'trunc_ln87_8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 278 [1/1] (0.00ns)   --->   "%sext_ln87_6 = sext i70 %trunc_ln87_8" [d6.cpp:87]   --->   Operation 278 'sext' 'sext_ln87_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 279 [1/1] (1.57ns)   --->   "%add_ln87_14 = add i128 %add225_loc_load, i128 %sext_ln87_6" [d6.cpp:87]   --->   Operation 279 'add' 'add_ln87_14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 280 [1/1] (1.09ns)   --->   "%add_ln92 = add i58 %trunc_ln80_11, i58 %trunc_ln7" [d6.cpp:92]   --->   Operation 280 'add' 'add_ln92' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 281 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_5 = add i58 %add_ln92, i58 %add_ln80_23" [d6.cpp:92]   --->   Operation 281 'add' 'out1_w_5' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 282 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_4, i32 58, i32 115" [d6.cpp:93]   --->   Operation 282 'partselect' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 283 [1/1] (1.09ns)   --->   "%add_ln93 = add i58 %trunc_ln80_8, i58 %trunc_ln8" [d6.cpp:93]   --->   Operation 283 'add' 'add_ln93' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 284 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_6 = add i58 %add_ln93, i58 %add_ln80_17" [d6.cpp:93]   --->   Operation 284 'add' 'out1_w_6' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 285 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_5, i32 58, i32 115" [d6.cpp:94]   --->   Operation 285 'partselect' 'trunc_ln9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 286 [1/1] (1.09ns)   --->   "%add_ln94 = add i58 %trunc_ln80_4, i58 %trunc_ln9" [d6.cpp:94]   --->   Operation 286 'add' 'add_ln94' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 287 [1/1] (0.80ns) (root node of TernaryAdder)   --->   "%out1_w_7 = add i58 %add_ln94, i58 %add_ln80_9" [d6.cpp:94]   --->   Operation 287 'add' 'out1_w_7' <Predicate = true> <Delay = 0.80> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 288 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i61 %trunc_ln99_1" [d6.cpp:99]   --->   Operation 288 'sext' 'sext_ln99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 289 [1/1] (0.00ns)   --->   "%mem_addr_2 = getelementptr i64 %mem, i64 %sext_ln99" [d6.cpp:99]   --->   Operation 289 'getelementptr' 'mem_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 290 [1/1] (7.30ns)   --->   "%empty_40 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %mem_addr_2, i32 9" [d6.cpp:99]   --->   Operation 290 'writereq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 6.66>
ST_27 : Operation 291 [1/1] (0.00ns)   --->   "%add83_2223_loc_load = load i128 %add83_2223_loc"   --->   Operation 291 'load' 'add83_2223_loc_load' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 292 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_6 = add i128 %add_ln80_5, i128 %add_ln80_2" [d6.cpp:80]   --->   Operation 292 'add' 'add_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 293 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln87_6 = add i128 %add_ln87_14, i128 %add_ln80_6" [d6.cpp:87]   --->   Operation 293 'add' 'add_ln87_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.40> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 294 [1/1] (0.00ns)   --->   "%trunc_ln87_9 = partselect i70 @_ssdm_op_PartSelect.i70.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 127" [d6.cpp:87]   --->   Operation 294 'partselect' 'trunc_ln87_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 295 [1/1] (0.00ns)   --->   "%sext_ln87_7 = sext i70 %trunc_ln87_9" [d6.cpp:87]   --->   Operation 295 'sext' 'sext_ln87_7' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 296 [1/1] (1.57ns)   --->   "%add_ln87_7 = add i128 %add83_2223_loc_load, i128 %sext_ln87_7" [d6.cpp:87]   --->   Operation 296 'add' 'add_ln87_7' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 297 [1/1] (0.00ns)   --->   "%trunc_ln87_1 = partselect i58 @_ssdm_op_PartSelect.i58.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 114" [d6.cpp:87]   --->   Operation 297 'partselect' 'trunc_ln87_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 298 [1/1] (1.09ns)   --->   "%out1_w = add i58 %trunc_ln87_1, i58 %trunc_ln87" [d6.cpp:87]   --->   Operation 298 'add' 'out1_w' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i58 %trunc_ln87" [d6.cpp:88]   --->   Operation 299 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 300 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i71 @_ssdm_op_PartSelect.i71.i128.i32.i32, i128 %add_ln87_7, i32 57, i32 127" [d6.cpp:88]   --->   Operation 300 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 301 [1/1] (0.00ns)   --->   "%sext_ln88 = sext i71 %trunc_ln3" [d6.cpp:88]   --->   Operation 301 'sext' 'sext_ln88' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 302 [1/1] (1.13ns)   --->   "%add_ln88 = add i72 %sext_ln88, i72 %zext_ln88" [d6.cpp:88]   --->   Operation 302 'add' 'add_ln88' <Predicate = true> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 303 [1/1] (0.00ns)   --->   "%trunc_ln88_1 = partselect i14 @_ssdm_op_PartSelect.i14.i72.i32.i32, i72 %add_ln88, i32 58, i32 71" [d6.cpp:88]   --->   Operation 303 'partselect' 'trunc_ln88_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 304 [1/1] (0.00ns)   --->   "%sext_ln88_1 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 304 'sext' 'sext_ln88_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 305 [1/1] (0.00ns)   --->   "%sext_ln88_2 = sext i14 %trunc_ln88_1" [d6.cpp:88]   --->   Operation 305 'sext' 'sext_ln88_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 306 [1/1] (1.09ns)   --->   "%out1_w_1 = add i58 %sext_ln88_2, i58 %add_ln88_2" [d6.cpp:88]   --->   Operation 306 'add' 'out1_w_1' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 307 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i58 %add_ln88_2" [d6.cpp:89]   --->   Operation 307 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 308 [1/1] (1.09ns)   --->   "%add_ln89 = add i60 %sext_ln88_1, i60 %zext_ln89" [d6.cpp:89]   --->   Operation 308 'add' 'add_ln89' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 309 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i60.i32.i32, i60 %add_ln89, i32 58, i32 59" [d6.cpp:89]   --->   Operation 309 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 310 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i2 %tmp" [d6.cpp:89]   --->   Operation 310 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 311 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i6 %sext_ln89" [d6.cpp:89]   --->   Operation 311 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 312 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i58 %add_ln89_2" [d6.cpp:89]   --->   Operation 312 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 313 [1/1] (1.09ns)   --->   "%out1_w_2 = add i59 %zext_ln89_2, i59 %zext_ln89_1" [d6.cpp:89]   --->   Operation 313 'add' 'out1_w_2' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 314 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i57 @_ssdm_op_PartSelect.i57.i128.i32.i32, i128 %add_ln87_6, i32 58, i32 114" [d6.cpp:95]   --->   Operation 314 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 315 [1/1] (0.00ns)   --->   "%trunc_ln95 = trunc i128 %add83_2223_loc_load" [d6.cpp:95]   --->   Operation 315 'trunc' 'trunc_ln95' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 316 [1/1] (1.09ns)   --->   "%out1_w_8 = add i57 %trunc_ln95, i57 %trunc_ln" [d6.cpp:95]   --->   Operation 316 'add' 'out1_w_8' <Predicate = true> <Delay = 1.09> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 317 [2/2] (0.77ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 317 'call' 'call_ln99' <Predicate = true> <Delay = 0.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 0.00>
ST_28 : Operation 318 [1/2] (0.00ns)   --->   "%call_ln99 = call void @test_Pipeline_ARRAY_WRITE, i64 %mem, i61 %trunc_ln99_1, i58 %out1_w, i58 %out1_w_1, i59 %out1_w_2, i58 %out1_w_3, i58 %out1_w_4, i58 %out1_w_5, i58 %out1_w_6, i58 %out1_w_7, i57 %out1_w_8" [d6.cpp:99]   --->   Operation 318 'call' 'call_ln99' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 7.30>
ST_29 : Operation 319 [5/5] (7.30ns)   --->   "%empty_41 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 319 'writeresp' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 7.30>
ST_30 : Operation 320 [4/5] (7.30ns)   --->   "%empty_41 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 320 'writeresp' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 7.30>
ST_31 : Operation 321 [3/5] (7.30ns)   --->   "%empty_41 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 321 'writeresp' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 7.30>
ST_32 : Operation 322 [2/5] (7.30ns)   --->   "%empty_41 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 322 'writeresp' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 7.30>
ST_33 : Operation 323 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_14" [d6.cpp:3]   --->   Operation 323 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 324 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %mem, void @empty_1, i32 0, i32 0, void @empty_2, i32 0, i32 9, void @empty_3, void @empty_4, void @empty_2, i32 16, i32 16, i32 16, i32 16, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 324 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 325 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %mem"   --->   Operation 325 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 326 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 326 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 327 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 327 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 328 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_12, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 328 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 329 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg1, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 329 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 330 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_13, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 330 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 331 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %arg2, void @empty_11, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_0, i32 4294967295, i32 0"   --->   Operation 331 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 332 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_8, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_15, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 332 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 333 [1/5] (7.30ns)   --->   "%empty_41 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %mem_addr_2" [d6.cpp:104]   --->   Operation 333 'writeresp' 'empty_41' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 334 [1/1] (0.00ns)   --->   "%ret_ln104 = ret" [d6.cpp:104]   --->   Operation 334 'ret' 'ret_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('arg2_read') on port 'arg2' [5]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr', d6.cpp:22) [47]  (0.000 ns)
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', d6.cpp:22) on port 'mem' (d6.cpp:22) [48]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 1.224ns
The critical path consists of the following:
	'call' operation ('call_ln22', d6.cpp:22) to 'test_Pipeline_ARRAY_1_READ' [49]  (1.224 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_1', d6.cpp:29) [61]  (0.000 ns)
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_32', d6.cpp:29) on port 'mem' (d6.cpp:29) [62]  (7.300 ns)

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 0.000ns
The critical path consists of the following:

 <State 22>: 1.085ns
The critical path consists of the following:
	'call' operation ('call_ln29', d6.cpp:29) to 'test_Pipeline_VITIS_LOOP_56_5' [90]  (1.085 ns)

 <State 23>: 0.000ns
The critical path consists of the following:

 <State 24>: 6.109ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (0.890 ns)
'mul' operation ('mul_ln80_25', d6.cpp:80) [131]  (3.640 ns)
	'add' operation ('add_ln80', d6.cpp:80) [137]  (1.579 ns)

 <State 25>: 7.138ns
The critical path consists of the following:
	'load' operation ('add_6231_loc_load') on local variable 'add_6231_loc' [83]  (0.000 ns)
	'add' operation ('add_ln87_8', d6.cpp:87) [206]  (0.000 ns)
	'add' operation ('add_ln87', d6.cpp:87) [207]  (0.995 ns)
	'add' operation ('add_ln87_9', d6.cpp:87) [210]  (0.000 ns)
	'add' operation ('add_ln87_1', d6.cpp:87) [211]  (0.995 ns)
	'add' operation ('add_ln87_10', d6.cpp:87) [214]  (1.579 ns)
	'add' operation ('add_ln87_2', d6.cpp:87) [215]  (0.995 ns)
	'add' operation ('add_ln87_11', d6.cpp:87) [218]  (1.579 ns)
	'add' operation ('add_ln87_3', d6.cpp:87) [219]  (0.995 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation ('mem_addr_2', d6.cpp:99) [278]  (0.000 ns)
	bus request operation ('empty_40', d6.cpp:99) on port 'mem' (d6.cpp:99) [279]  (7.300 ns)

 <State 27>: 6.669ns
The critical path consists of the following:
	'add' operation ('add_ln80_6', d6.cpp:80) [149]  (0.000 ns)
	'add' operation ('add_ln87_6', d6.cpp:87) [231]  (0.995 ns)
	'add' operation ('add_ln87_7', d6.cpp:87) [234]  (1.579 ns)
	'add' operation ('add_ln88', d6.cpp:88) [240]  (1.139 ns)
	'add' operation ('add_ln89', d6.cpp:89) [249]  (1.093 ns)
	'add' operation ('out1_w', d6.cpp:89) [257]  (1.093 ns)
	'call' operation ('call_ln99', d6.cpp:99) to 'test_Pipeline_ARRAY_WRITE' [280]  (0.770 ns)

 <State 28>: 0.000ns
The critical path consists of the following:

 <State 29>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_41', d6.cpp:104) on port 'mem' (d6.cpp:104) [281]  (7.300 ns)

 <State 30>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_41', d6.cpp:104) on port 'mem' (d6.cpp:104) [281]  (7.300 ns)

 <State 31>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_41', d6.cpp:104) on port 'mem' (d6.cpp:104) [281]  (7.300 ns)

 <State 32>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_41', d6.cpp:104) on port 'mem' (d6.cpp:104) [281]  (7.300 ns)

 <State 33>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_41', d6.cpp:104) on port 'mem' (d6.cpp:104) [281]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
