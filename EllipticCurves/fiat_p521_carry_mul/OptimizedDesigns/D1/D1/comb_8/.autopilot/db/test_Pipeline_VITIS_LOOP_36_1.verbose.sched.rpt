

================================================================
== Vitis HLS Report for 'test_Pipeline_VITIS_LOOP_36_1'
================================================================
* Date:           Thu May  9 21:45:48 2024

* Version:        2023.1.1 (Build 3869133 on Jun 15 2023)
* Project:        D1
* Solution:       comb_8 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.173 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_36_1  |        4|        4|         3|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.17>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%add32_2129 = alloca i32 1"   --->   Operation 6 'alloca' 'add32_2129' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add59130 = alloca i32 1"   --->   Operation 7 'alloca' 'add59130' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%add59_123131 = alloca i32 1"   --->   Operation 8 'alloca' 'add59_123131' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%add59_258132 = alloca i32 1"   --->   Operation 9 'alloca' 'add59_258132' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%add59_3133 = alloca i32 1"   --->   Operation 10 'alloca' 'add59_3133' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%add59_4134 = alloca i32 1"   --->   Operation 11 'alloca' 'add59_4134' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add59_5135 = alloca i32 1"   --->   Operation 12 'alloca' 'add59_5135' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%add59_6136 = alloca i32 1"   --->   Operation 13 'alloca' 'add59_6136' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%add59_7137 = alloca i32 1"   --->   Operation 14 'alloca' 'add59_7137' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 15 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%conv47_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %conv47"   --->   Operation 16 'read' 'conv47_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%arg2_r_1_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_1_cast"   --->   Operation 17 'read' 'arg2_r_1_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%arg2_r_2_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_2_cast"   --->   Operation 18 'read' 'arg2_r_2_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arg2_r_3_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_3_cast"   --->   Operation 19 'read' 'arg2_r_3_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%arg2_r_4_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_4_cast"   --->   Operation 20 'read' 'arg2_r_4_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%arg2_r_5_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_5_cast"   --->   Operation 21 'read' 'arg2_r_5_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%arg2_r_6_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_6_cast"   --->   Operation 22 'read' 'arg2_r_6_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%arg2_r_8_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_8_cast"   --->   Operation 23 'read' 'arg2_r_8_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%arg2_r_7_cast_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %arg2_r_7_cast"   --->   Operation 24 'read' 'arg2_r_7_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%arg2_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_1_reload"   --->   Operation 25 'read' 'arg2_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%arg2_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_reload"   --->   Operation 26 'read' 'arg2_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%arg1_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_8_reload"   --->   Operation 27 'read' 'arg1_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%arg1_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_7_reload"   --->   Operation 28 'read' 'arg1_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%arg2_r_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_8_reload"   --->   Operation 29 'read' 'arg2_r_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%arg2_r_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_7_reload"   --->   Operation 30 'read' 'arg2_r_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%arg2_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_6_reload"   --->   Operation 31 'read' 'arg2_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%arg2_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_5_reload"   --->   Operation 32 'read' 'arg2_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%arg2_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_4_reload"   --->   Operation 33 'read' 'arg2_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%arg2_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_3_reload"   --->   Operation 34 'read' 'arg2_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%arg2_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg2_r_2_reload"   --->   Operation 35 'read' 'arg2_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arg1_r_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_6_reload"   --->   Operation 36 'read' 'arg1_r_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%arg1_r_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_5_reload"   --->   Operation 37 'read' 'arg1_r_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arg1_r_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_4_reload"   --->   Operation 38 'read' 'arg1_r_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%arg1_r_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_3_reload"   --->   Operation 39 'read' 'arg1_r_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%arg1_r_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_2_reload"   --->   Operation 40 'read' 'arg1_r_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%arg1_r_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_1_reload"   --->   Operation 41 'read' 'arg1_r_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%arg1_r_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %arg1_r_reload"   --->   Operation 42 'read' 'arg1_r_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%conv47_cast = zext i64 %conv47_read"   --->   Operation 43 'zext' 'conv47_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 8, i5 %i"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_7137"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_6136"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_5135"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_4134"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_3133"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_258132"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59_123131"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add59130"   --->   Operation 52 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 53 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %add32_2129"   --->   Operation 53 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body39"   --->   Operation 54 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [d1.cpp:54]   --->   Operation 55 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_1, i32 4" [d1.cpp:36]   --->   Operation 56 'bitselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %tmp_45, void %for.body39.split, void %for.end113.exitStub" [d1.cpp:36]   --->   Operation 57 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i5 %i_1" [d1.cpp:36]   --->   Operation 58 'trunc' 'trunc_ln36' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.79ns)   --->   "%sub_ln39 = sub i4 8, i4 %trunc_ln36" [d1.cpp:39]   --->   Operation 59 'sub' 'sub_ln39' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i4 %sub_ln39" [d1.cpp:44]   --->   Operation 60 'trunc' 'trunc_ln44' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.79ns)   --->   "%add_ln52 = add i4 %trunc_ln36, i4 15" [d1.cpp:52]   --->   Operation 61 'add' 'add_ln52' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_46 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d1.cpp:52]   --->   Operation 62 'partselect' 'tmp_46' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.54ns)   --->   "%icmp_ln52 = icmp_eq  i2 %tmp_46, i2 1" [d1.cpp:52]   --->   Operation 63 'icmp' 'icmp_ln52' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_9)   --->   "%select_ln54 = select i1 %icmp_ln52, i4 7, i4 8" [d1.cpp:54]   --->   Operation 64 'select' 'select_ln54' <Predicate = (!tmp_45)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.78ns)   --->   "%icmp_ln52_1 = icmp_sgt  i5 %i_1, i5 6" [d1.cpp:52]   --->   Operation 65 'icmp' 'icmp_ln52_1' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_9)   --->   "%zext_ln53 = zext i1 %icmp_ln52_1" [d1.cpp:53]   --->   Operation 66 'zext' 'zext_ln53' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln54_9 = sub i4 %select_ln54, i4 %zext_ln53" [d1.cpp:54]   --->   Operation 67 'sub' 'sub_ln54_9' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_47 = partselect i2 @_ssdm_op_PartSelect.i2.i5.i32.i32, i5 %i_1, i32 3, i32 4" [d1.cpp:54]   --->   Operation 68 'partselect' 'tmp_47' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.54ns)   --->   "%icmp_ln54 = icmp_ne  i2 %tmp_47, i2 1" [d1.cpp:54]   --->   Operation 69 'icmp' 'icmp_ln54' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.79ns)   --->   "%add_ln55 = add i4 %sub_ln39, i4 15" [d1.cpp:55]   --->   Operation 70 'add' 'add_ln55' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i1 %icmp_ln54" [d1.cpp:55]   --->   Operation 71 'zext' 'zext_ln55' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.79ns)   --->   "%sub_ln49_9 = sub i4 %add_ln55, i4 %zext_ln55" [d1.cpp:49]   --->   Operation 72 'sub' 'sub_ln49_9' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.78ns)   --->   "%icmp_ln52_2 = icmp_sgt  i5 %i_1, i5 5" [d1.cpp:52]   --->   Operation 73 'icmp' 'icmp_ln52_2' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i1 %icmp_ln52_2" [d1.cpp:53]   --->   Operation 74 'zext' 'zext_ln53_1' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.79ns)   --->   "%sub_ln54_10 = sub i4 %sub_ln54_9, i4 %zext_ln53_1" [d1.cpp:54]   --->   Operation 75 'sub' 'sub_ln54_10' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.78ns)   --->   "%icmp_ln54_1 = icmp_slt  i5 %i_1, i5 7" [d1.cpp:54]   --->   Operation 76 'icmp' 'icmp_ln54_1' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln55_1 = zext i1 %icmp_ln54_1" [d1.cpp:55]   --->   Operation 77 'zext' 'zext_ln55_1' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.79ns)   --->   "%sub_ln49_10 = sub i4 %sub_ln49_9, i4 %zext_ln55_1" [d1.cpp:49]   --->   Operation 78 'sub' 'sub_ln49_10' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.78ns)   --->   "%icmp_ln52_3 = icmp_sgt  i5 %i_1, i5 4" [d1.cpp:52]   --->   Operation 79 'icmp' 'icmp_ln52_3' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln53_2 = zext i1 %icmp_ln52_3" [d1.cpp:53]   --->   Operation 80 'zext' 'zext_ln53_2' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.79ns)   --->   "%sub_ln54 = sub i4 %sub_ln54_10, i4 %zext_ln53_2" [d1.cpp:54]   --->   Operation 81 'sub' 'sub_ln54' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.78ns)   --->   "%icmp_ln54_2 = icmp_slt  i5 %i_1, i5 6" [d1.cpp:54]   --->   Operation 82 'icmp' 'icmp_ln54_2' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln55_2 = zext i1 %icmp_ln54_2" [d1.cpp:55]   --->   Operation 83 'zext' 'zext_ln55_2' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.79ns)   --->   "%sub_ln49 = sub i4 %sub_ln49_10, i4 %zext_ln55_2" [d1.cpp:49]   --->   Operation 84 'sub' 'sub_ln49' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_48 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d1.cpp:52]   --->   Operation 85 'partselect' 'tmp_48' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.67ns)   --->   "%icmp_ln52_4 = icmp_sgt  i3 %tmp_48, i3 0" [d1.cpp:52]   --->   Operation 86 'icmp' 'icmp_ln52_4' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln53_3 = zext i1 %icmp_ln52_4" [d1.cpp:53]   --->   Operation 87 'zext' 'zext_ln53_3' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.79ns)   --->   "%sub_ln54_1 = sub i4 %sub_ln54, i4 %zext_ln53_3" [d1.cpp:54]   --->   Operation 88 'sub' 'sub_ln54_1' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.78ns)   --->   "%icmp_ln54_3 = icmp_slt  i5 %i_1, i5 5" [d1.cpp:54]   --->   Operation 89 'icmp' 'icmp_ln54_3' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln55_3 = zext i1 %icmp_ln54_3" [d1.cpp:55]   --->   Operation 90 'zext' 'zext_ln55_3' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.79ns)   --->   "%sub_ln49_1 = sub i4 %sub_ln49, i4 %zext_ln55_3" [d1.cpp:49]   --->   Operation 91 'sub' 'sub_ln49_1' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.78ns)   --->   "%icmp_ln52_5 = icmp_sgt  i5 %i_1, i5 2" [d1.cpp:52]   --->   Operation 92 'icmp' 'icmp_ln52_5' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln53_4 = zext i1 %icmp_ln52_5" [d1.cpp:53]   --->   Operation 93 'zext' 'zext_ln53_4' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.79ns)   --->   "%sub_ln54_2 = sub i4 %sub_ln54_1, i4 %zext_ln53_4" [d1.cpp:54]   --->   Operation 94 'sub' 'sub_ln54_2' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_49 = partselect i3 @_ssdm_op_PartSelect.i3.i5.i32.i32, i5 %i_1, i32 2, i32 4" [d1.cpp:54]   --->   Operation 95 'partselect' 'tmp_49' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.67ns)   --->   "%icmp_ln54_4 = icmp_slt  i3 %tmp_49, i3 1" [d1.cpp:54]   --->   Operation 96 'icmp' 'icmp_ln54_4' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln55_4 = zext i1 %icmp_ln54_4" [d1.cpp:55]   --->   Operation 97 'zext' 'zext_ln55_4' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%sub_ln49_2 = sub i4 %sub_ln49_1, i4 %zext_ln55_4" [d1.cpp:49]   --->   Operation 98 'sub' 'sub_ln49_2' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.78ns)   --->   "%icmp_ln54_5 = icmp_slt  i5 %i_1, i5 3" [d1.cpp:54]   --->   Operation 99 'icmp' 'icmp_ln54_5' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.79ns)   --->   "%icmp_ln52_6 = icmp_eq  i4 %add_ln52, i4 7" [d1.cpp:52]   --->   Operation 100 'icmp' 'icmp_ln52_6' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_11)   --->   "%select_ln54_1 = select i1 %icmp_ln52_6, i4 7, i4 8" [d1.cpp:54]   --->   Operation 101 'select' 'select_ln54_1' <Predicate = (!tmp_45)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.79ns)   --->   "%icmp_ln52_7 = icmp_sgt  i4 %add_ln52, i4 5" [d1.cpp:52]   --->   Operation 102 'icmp' 'icmp_ln52_7' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_11)   --->   "%zext_ln53_5 = zext i1 %icmp_ln52_7" [d1.cpp:53]   --->   Operation 103 'zext' 'zext_ln53_5' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln54_11 = sub i4 %select_ln54_1, i4 %zext_ln53_5" [d1.cpp:54]   --->   Operation 104 'sub' 'sub_ln54_11' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.79ns)   --->   "%icmp_ln54_6 = icmp_ne  i4 %add_ln52, i4 7" [d1.cpp:54]   --->   Operation 105 'icmp' 'icmp_ln54_6' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln55_5 = zext i1 %icmp_ln54_6" [d1.cpp:55]   --->   Operation 106 'zext' 'zext_ln55_5' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.79ns)   --->   "%sub_ln49_11 = sub i4 %add_ln55, i4 %zext_ln55_5" [d1.cpp:49]   --->   Operation 107 'sub' 'sub_ln49_11' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.79ns)   --->   "%icmp_ln52_8 = icmp_sgt  i4 %add_ln52, i4 4" [d1.cpp:52]   --->   Operation 108 'icmp' 'icmp_ln52_8' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln53_6 = zext i1 %icmp_ln52_8" [d1.cpp:53]   --->   Operation 109 'zext' 'zext_ln53_6' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.79ns)   --->   "%sub_ln54_12 = sub i4 %sub_ln54_11, i4 %zext_ln53_6" [d1.cpp:54]   --->   Operation 110 'sub' 'sub_ln54_12' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.79ns)   --->   "%icmp_ln54_7 = icmp_slt  i4 %add_ln52, i4 6" [d1.cpp:54]   --->   Operation 111 'icmp' 'icmp_ln54_7' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln55_6 = zext i1 %icmp_ln54_7" [d1.cpp:55]   --->   Operation 112 'zext' 'zext_ln55_6' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.79ns)   --->   "%sub_ln49_12 = sub i4 %sub_ln49_11, i4 %zext_ln55_6" [d1.cpp:49]   --->   Operation 113 'sub' 'sub_ln49_12' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_50 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln52, i32 2, i32 3" [d1.cpp:52]   --->   Operation 114 'partselect' 'tmp_50' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.54ns)   --->   "%icmp_ln52_9 = icmp_eq  i2 %tmp_50, i2 1" [d1.cpp:52]   --->   Operation 115 'icmp' 'icmp_ln52_9' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln53_7 = zext i1 %icmp_ln52_9" [d1.cpp:53]   --->   Operation 116 'zext' 'zext_ln53_7' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.79ns)   --->   "%sub_ln54_3 = sub i4 %sub_ln54_12, i4 %zext_ln53_7" [d1.cpp:54]   --->   Operation 117 'sub' 'sub_ln54_3' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.79ns)   --->   "%icmp_ln54_8 = icmp_slt  i4 %add_ln52, i4 5" [d1.cpp:54]   --->   Operation 118 'icmp' 'icmp_ln54_8' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln55_7 = zext i1 %icmp_ln54_8" [d1.cpp:55]   --->   Operation 119 'zext' 'zext_ln55_7' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.79ns)   --->   "%sub_ln49_3 = sub i4 %sub_ln49_12, i4 %zext_ln55_7" [d1.cpp:49]   --->   Operation 120 'sub' 'sub_ln49_3' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 121 [1/1] (0.79ns)   --->   "%icmp_ln52_10 = icmp_sgt  i4 %add_ln52, i4 2" [d1.cpp:52]   --->   Operation 121 'icmp' 'icmp_ln52_10' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln53_8 = zext i1 %icmp_ln52_10" [d1.cpp:53]   --->   Operation 122 'zext' 'zext_ln53_8' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.79ns)   --->   "%sub_ln54_4 = sub i4 %sub_ln54_3, i4 %zext_ln53_8" [d1.cpp:54]   --->   Operation 123 'sub' 'sub_ln54_4' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_51 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln52, i32 2, i32 3" [d1.cpp:54]   --->   Operation 124 'partselect' 'tmp_51' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.54ns)   --->   "%icmp_ln54_9 = icmp_ne  i2 %tmp_51, i2 1" [d1.cpp:54]   --->   Operation 125 'icmp' 'icmp_ln54_9' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln55_8 = zext i1 %icmp_ln54_9" [d1.cpp:55]   --->   Operation 126 'zext' 'zext_ln55_8' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.79ns)   --->   "%sub_ln49_4 = sub i4 %sub_ln49_3, i4 %zext_ln55_8" [d1.cpp:49]   --->   Operation 127 'sub' 'sub_ln49_4' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_52 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln52, i32 1, i32 3" [d1.cpp:52]   --->   Operation 128 'partselect' 'tmp_52' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.67ns)   --->   "%icmp_ln52_11 = icmp_sgt  i3 %tmp_52, i3 0" [d1.cpp:52]   --->   Operation 129 'icmp' 'icmp_ln52_11' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln53_9 = zext i1 %icmp_ln52_11" [d1.cpp:53]   --->   Operation 130 'zext' 'zext_ln53_9' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.79ns)   --->   "%sub_ln54_5 = sub i4 %sub_ln54_4, i4 %zext_ln53_9" [d1.cpp:54]   --->   Operation 131 'sub' 'sub_ln54_5' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.79ns)   --->   "%icmp_ln54_10 = icmp_slt  i4 %add_ln52, i4 3" [d1.cpp:54]   --->   Operation 132 'icmp' 'icmp_ln54_10' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln55_9 = zext i1 %icmp_ln54_10" [d1.cpp:55]   --->   Operation 133 'zext' 'zext_ln55_9' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.79ns)   --->   "%sub_ln49_5 = sub i4 %sub_ln49_4, i4 %zext_ln55_9" [d1.cpp:49]   --->   Operation 134 'sub' 'sub_ln49_5' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_53 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln52, i32 1, i32 3" [d1.cpp:54]   --->   Operation 135 'partselect' 'tmp_53' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.67ns)   --->   "%icmp_ln54_11 = icmp_slt  i3 %tmp_53, i3 1" [d1.cpp:54]   --->   Operation 136 'icmp' 'icmp_ln54_11' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 137 [1/1] (0.79ns)   --->   "%add_ln44 = add i4 %trunc_ln36, i4 14" [d1.cpp:44]   --->   Operation 137 'add' 'add_ln44' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.79ns)   --->   "%cmp53_2 = icmp_sgt  i4 %add_ln44, i4 0" [d1.cpp:44]   --->   Operation 138 'icmp' 'cmp53_2' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 139 [1/1] (0.78ns)   --->   "%add_ln36 = add i5 %i_1, i5 29" [d1.cpp:36]   --->   Operation 139 'add' 'add_ln36' <Predicate = (!tmp_45)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln49)   --->   "%select_ln49 = select i1 %cmp53_2, i4 1, i4 2" [d1.cpp:49]   --->   Operation 140 'select' 'select_ln49' <Predicate = (!tmp_45)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 141 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln49 = add i4 %select_ln49, i4 %sub_ln39" [d1.cpp:49]   --->   Operation 141 'add' 'add_ln49' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln55_10 = zext i1 %cmp53_2" [d1.cpp:55]   --->   Operation 142 'zext' 'zext_ln55_10' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.79ns)   --->   "%sub_ln49_13 = sub i4 %add_ln49, i4 %zext_ln55_10" [d1.cpp:49]   --->   Operation 143 'sub' 'sub_ln49_13' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.79ns)   --->   "%icmp_ln52_12 = icmp_slt  i4 %trunc_ln36, i4 10" [d1.cpp:52]   --->   Operation 144 'icmp' 'icmp_ln52_12' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_13)   --->   "%select_ln54_2 = select i1 %icmp_ln52_12, i4 7, i4 8" [d1.cpp:54]   --->   Operation 145 'select' 'select_ln54_2' <Predicate = (!tmp_45)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.79ns)   --->   "%sub_ln49_14 = sub i4 %sub_ln49_13, i4 %zext_ln55_10" [d1.cpp:49]   --->   Operation 146 'sub' 'sub_ln49_14' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.79ns)   --->   "%icmp_ln52_13 = icmp_sgt  i4 %add_ln44, i4 4" [d1.cpp:52]   --->   Operation 147 'icmp' 'icmp_ln52_13' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node sub_ln54_13)   --->   "%zext_ln53_10 = zext i1 %icmp_ln52_13" [d1.cpp:53]   --->   Operation 148 'zext' 'zext_ln53_10' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.79ns) (out node of the LUT)   --->   "%sub_ln54_13 = sub i4 %select_ln54_2, i4 %zext_ln53_10" [d1.cpp:54]   --->   Operation 149 'sub' 'sub_ln54_13' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.79ns)   --->   "%icmp_ln54_12 = icmp_sgt  i4 %trunc_ln36, i4 9" [d1.cpp:54]   --->   Operation 150 'icmp' 'icmp_ln54_12' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.28ns)   --->   "%and_ln54_12 = and i1 %icmp_ln54_12, i1 %cmp53_2" [d1.cpp:54]   --->   Operation 151 'and' 'and_ln54_12' <Predicate = (!tmp_45)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln55_11 = zext i1 %and_ln54_12" [d1.cpp:55]   --->   Operation 152 'zext' 'zext_ln55_11' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.79ns)   --->   "%sub_ln49_15 = sub i4 %sub_ln49_14, i4 %zext_ln55_11" [d1.cpp:49]   --->   Operation 153 'sub' 'sub_ln49_15' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_54 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln44, i32 2, i32 3" [d1.cpp:52]   --->   Operation 154 'partselect' 'tmp_54' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.54ns)   --->   "%icmp_ln52_14 = icmp_eq  i2 %tmp_54, i2 1" [d1.cpp:52]   --->   Operation 155 'icmp' 'icmp_ln52_14' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln53_11 = zext i1 %icmp_ln52_14" [d1.cpp:53]   --->   Operation 156 'zext' 'zext_ln53_11' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.79ns)   --->   "%sub_ln54_6 = sub i4 %sub_ln54_13, i4 %zext_ln53_11" [d1.cpp:54]   --->   Operation 157 'sub' 'sub_ln54_6' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.79ns)   --->   "%icmp_ln54_13 = icmp_slt  i4 %add_ln44, i4 5" [d1.cpp:54]   --->   Operation 158 'icmp' 'icmp_ln54_13' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.28ns)   --->   "%and_ln54_19 = and i1 %icmp_ln54_13, i1 %cmp53_2" [d1.cpp:54]   --->   Operation 159 'and' 'and_ln54_19' <Predicate = (!tmp_45)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln55_12 = zext i1 %and_ln54_19" [d1.cpp:55]   --->   Operation 160 'zext' 'zext_ln55_12' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.79ns)   --->   "%sub_ln49_6 = sub i4 %sub_ln49_15, i4 %zext_ln55_12" [d1.cpp:49]   --->   Operation 161 'sub' 'sub_ln49_6' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.79ns)   --->   "%icmp_ln52_15 = icmp_sgt  i4 %add_ln44, i4 2" [d1.cpp:52]   --->   Operation 162 'icmp' 'icmp_ln52_15' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln53_12 = zext i1 %icmp_ln52_15" [d1.cpp:53]   --->   Operation 163 'zext' 'zext_ln53_12' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 164 [1/1] (0.79ns)   --->   "%sub_ln54_7 = sub i4 %sub_ln54_6, i4 %zext_ln53_12" [d1.cpp:54]   --->   Operation 164 'sub' 'sub_ln54_7' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_55 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %add_ln44, i32 2, i32 3" [d1.cpp:54]   --->   Operation 165 'partselect' 'tmp_55' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.54ns)   --->   "%icmp_ln54_14 = icmp_ne  i2 %tmp_55, i2 1" [d1.cpp:54]   --->   Operation 166 'icmp' 'icmp_ln54_14' <Predicate = (!tmp_45)> <Delay = 0.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.28ns)   --->   "%and_ln54_26 = and i1 %icmp_ln54_14, i1 %cmp53_2" [d1.cpp:54]   --->   Operation 167 'and' 'and_ln54_26' <Predicate = (!tmp_45)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln55_13 = zext i1 %and_ln54_26" [d1.cpp:55]   --->   Operation 168 'zext' 'zext_ln55_13' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.79ns)   --->   "%sub_ln49_7 = sub i4 %sub_ln49_6, i4 %zext_ln55_13" [d1.cpp:49]   --->   Operation 169 'sub' 'sub_ln49_7' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_56 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln44, i32 1, i32 3" [d1.cpp:52]   --->   Operation 170 'partselect' 'tmp_56' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.67ns)   --->   "%icmp_ln52_16 = icmp_sgt  i3 %tmp_56, i3 0" [d1.cpp:52]   --->   Operation 171 'icmp' 'icmp_ln52_16' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln53_13 = zext i1 %icmp_ln52_16" [d1.cpp:53]   --->   Operation 172 'zext' 'zext_ln53_13' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.79ns)   --->   "%sub_ln54_8 = sub i4 %sub_ln54_7, i4 %zext_ln53_13" [d1.cpp:54]   --->   Operation 173 'sub' 'sub_ln54_8' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.79ns)   --->   "%icmp_ln54_15 = icmp_slt  i4 %add_ln44, i4 3" [d1.cpp:54]   --->   Operation 174 'icmp' 'icmp_ln54_15' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.28ns)   --->   "%and_ln54_33 = and i1 %icmp_ln54_15, i1 %cmp53_2" [d1.cpp:54]   --->   Operation 175 'and' 'and_ln54_33' <Predicate = (!tmp_45)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln55_14 = zext i1 %and_ln54_33" [d1.cpp:55]   --->   Operation 176 'zext' 'zext_ln55_14' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.79ns)   --->   "%sub_ln49_8 = sub i4 %sub_ln49_7, i4 %zext_ln55_14" [d1.cpp:49]   --->   Operation 177 'sub' 'sub_ln49_8' <Predicate = (!tmp_45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_57 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %add_ln44, i32 1, i32 3" [d1.cpp:54]   --->   Operation 178 'partselect' 'tmp_57' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.67ns)   --->   "%icmp_ln54_16 = icmp_slt  i3 %tmp_57, i3 1" [d1.cpp:54]   --->   Operation 179 'icmp' 'icmp_ln54_16' <Predicate = (!tmp_45)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 180 [1/1] (0.42ns)   --->   "%store_ln36 = store i5 %add_ln36, i5 %i" [d1.cpp:36]   --->   Operation 180 'store' 'store_ln36' <Predicate = (!tmp_45)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 6.87>
ST_2 : Operation 181 [1/1] (0.67ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i3 %trunc_ln44" [d1.cpp:44]   --->   Operation 181 'mux' 'tmp' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 182 [1/1] (0.77ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %trunc_ln36" [d1.cpp:44]   --->   Operation 182 'mux' 'tmp_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 183 [1/1] (0.77ns)   --->   "%tmp_2 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i4 %trunc_ln36" [d1.cpp:52]   --->   Operation 183 'mux' 'tmp_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i64 %tmp_2" [d1.cpp:52]   --->   Operation 184 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 185 [1/1] (0.77ns)   --->   "%tmp_3 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i4 %trunc_ln36" [d1.cpp:54]   --->   Operation 185 'mux' 'tmp_3' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i64 %tmp_3" [d1.cpp:54]   --->   Operation 186 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 187 [1/1] (0.67ns)   --->   "%tmp_4 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i3 %trunc_ln44" [d1.cpp:54]   --->   Operation 187 'mux' 'tmp_4' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i64 %tmp_4" [d1.cpp:54]   --->   Operation 188 'zext' 'zext_ln54_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 189 [1/1] (0.41ns)   --->   "%select_ln52 = select i1 %icmp_ln52, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d1.cpp:52]   --->   Operation 189 'select' 'select_ln52' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 190 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln52, i1 0" [d1.cpp:52]   --->   Operation 190 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i64 %shl_ln" [d1.cpp:52]   --->   Operation 191 'zext' 'zext_ln52_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 192 [1/1] (0.67ns)   --->   "%tmp_6 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 0, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i3 %trunc_ln44" [d1.cpp:54]   --->   Operation 192 'mux' 'tmp_6' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln54_2 = zext i64 %tmp_6" [d1.cpp:54]   --->   Operation 193 'zext' 'zext_ln54_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 194 [1/1] (0.77ns)   --->   "%tmp_7 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_9" [d1.cpp:52]   --->   Operation 194 'mux' 'tmp_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 195 [1/1] (0.00ns)   --->   "%shl_ln52_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_7, i1 0" [d1.cpp:52]   --->   Operation 195 'bitconcatenate' 'shl_ln52_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i64 %shl_ln52_1" [d1.cpp:52]   --->   Operation 196 'zext' 'zext_ln52_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 197 [1/1] (0.77ns)   --->   "%tmp_8 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_9" [d1.cpp:54]   --->   Operation 197 'mux' 'tmp_8' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln54_3 = zext i64 %tmp_8" [d1.cpp:54]   --->   Operation 198 'zext' 'zext_ln54_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 199 [1/1] (0.77ns)   --->   "%tmp_9 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_10" [d1.cpp:52]   --->   Operation 199 'mux' 'tmp_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 200 [1/1] (0.00ns)   --->   "%shl_ln52_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_9, i1 0" [d1.cpp:52]   --->   Operation 200 'bitconcatenate' 'shl_ln52_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i64 %shl_ln52_2" [d1.cpp:52]   --->   Operation 201 'zext' 'zext_ln52_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 202 [1/1] (0.77ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_10" [d1.cpp:54]   --->   Operation 202 'mux' 'tmp_s' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln54_4 = zext i64 %tmp_s" [d1.cpp:54]   --->   Operation 203 'zext' 'zext_ln54_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 204 [1/1] (0.77ns)   --->   "%tmp_5 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54" [d1.cpp:52]   --->   Operation 204 'mux' 'tmp_5' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 205 [1/1] (0.00ns)   --->   "%shl_ln52_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_5, i1 0" [d1.cpp:52]   --->   Operation 205 'bitconcatenate' 'shl_ln52_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln52_4 = zext i64 %shl_ln52_3" [d1.cpp:52]   --->   Operation 206 'zext' 'zext_ln52_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 207 [1/1] (0.77ns)   --->   "%tmp_10 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49" [d1.cpp:54]   --->   Operation 207 'mux' 'tmp_10' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln54_5 = zext i64 %tmp_10" [d1.cpp:54]   --->   Operation 208 'zext' 'zext_ln54_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 209 [1/1] (0.77ns)   --->   "%tmp_11 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_1" [d1.cpp:52]   --->   Operation 209 'mux' 'tmp_11' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 210 [1/1] (0.00ns)   --->   "%shl_ln52_4 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_11, i1 0" [d1.cpp:52]   --->   Operation 210 'bitconcatenate' 'shl_ln52_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln52_5 = zext i64 %shl_ln52_4" [d1.cpp:52]   --->   Operation 211 'zext' 'zext_ln52_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 212 [1/1] (0.77ns)   --->   "%tmp_12 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_1" [d1.cpp:54]   --->   Operation 212 'mux' 'tmp_12' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 213 [1/1] (0.00ns)   --->   "%zext_ln54_6 = zext i64 %tmp_12" [d1.cpp:54]   --->   Operation 213 'zext' 'zext_ln54_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 214 [1/1] (0.77ns)   --->   "%tmp_13 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_2" [d1.cpp:52]   --->   Operation 214 'mux' 'tmp_13' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 215 [1/1] (0.00ns)   --->   "%shl_ln52_5 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_13, i1 0" [d1.cpp:52]   --->   Operation 215 'bitconcatenate' 'shl_ln52_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln52_6 = zext i64 %shl_ln52_5" [d1.cpp:52]   --->   Operation 216 'zext' 'zext_ln52_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 217 [1/1] (0.77ns)   --->   "%tmp_14 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_2" [d1.cpp:54]   --->   Operation 217 'mux' 'tmp_14' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln54_7 = zext i64 %tmp_14" [d1.cpp:54]   --->   Operation 218 'zext' 'zext_ln54_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 219 [1/1] (0.77ns)   --->   "%tmp_15 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_1_cast_read, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i4 %sub_ln54_2" [d1.cpp:52]   --->   Operation 219 'mux' 'tmp_15' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 220 [1/1] (0.00ns)   --->   "%shl_ln52_6 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_15, i1 0" [d1.cpp:52]   --->   Operation 220 'bitconcatenate' 'shl_ln52_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln52_7 = zext i64 %shl_ln52_6" [d1.cpp:52]   --->   Operation 221 'zext' 'zext_ln52_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 222 [1/1] (0.67ns)   --->   "%tmp_16 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i3 %trunc_ln44" [d1.cpp:44]   --->   Operation 222 'mux' 'tmp_16' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln44_2 = zext i64 %tmp_16" [d1.cpp:44]   --->   Operation 223 'zext' 'zext_ln44_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 224 [1/1] (0.77ns)   --->   "%tmp_17 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i4 %trunc_ln36" [d1.cpp:44]   --->   Operation 224 'mux' 'tmp_17' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 225 [1/1] (0.00ns)   --->   "%zext_ln44_3 = zext i64 %tmp_17" [d1.cpp:44]   --->   Operation 225 'zext' 'zext_ln44_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 226 [1/1] (0.77ns)   --->   "%tmp_18 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i4 %trunc_ln36" [d1.cpp:54]   --->   Operation 226 'mux' 'tmp_18' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln54_8 = zext i64 %tmp_18" [d1.cpp:54]   --->   Operation 227 'zext' 'zext_ln54_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 228 [1/1] (0.67ns)   --->   "%tmp_19 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i3 %trunc_ln44" [d1.cpp:54]   --->   Operation 228 'mux' 'tmp_19' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln54_9 = zext i64 %tmp_19" [d1.cpp:54]   --->   Operation 229 'zext' 'zext_ln54_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 230 [1/1] (0.41ns)   --->   "%select_ln52_1 = select i1 %icmp_ln52_6, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d1.cpp:52]   --->   Operation 230 'select' 'select_ln52_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%shl_ln52_7 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln52_1, i1 0" [d1.cpp:52]   --->   Operation 231 'bitconcatenate' 'shl_ln52_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (0.00ns)   --->   "%zext_ln52_8 = zext i64 %shl_ln52_7" [d1.cpp:52]   --->   Operation 232 'zext' 'zext_ln52_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 233 [1/1] (0.77ns)   --->   "%tmp_20 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_11" [d1.cpp:52]   --->   Operation 233 'mux' 'tmp_20' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 234 [1/1] (0.00ns)   --->   "%shl_ln52_8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_20, i1 0" [d1.cpp:52]   --->   Operation 234 'bitconcatenate' 'shl_ln52_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln52_9 = zext i64 %shl_ln52_8" [d1.cpp:52]   --->   Operation 235 'zext' 'zext_ln52_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 236 [1/1] (0.77ns)   --->   "%tmp_21 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_11" [d1.cpp:54]   --->   Operation 236 'mux' 'tmp_21' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 237 [1/1] (0.00ns)   --->   "%zext_ln54_10 = zext i64 %tmp_21" [d1.cpp:54]   --->   Operation 237 'zext' 'zext_ln54_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 238 [1/1] (0.77ns)   --->   "%tmp_22 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_12" [d1.cpp:52]   --->   Operation 238 'mux' 'tmp_22' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 239 [1/1] (0.00ns)   --->   "%shl_ln52_9 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_22, i1 0" [d1.cpp:52]   --->   Operation 239 'bitconcatenate' 'shl_ln52_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 240 [1/1] (0.00ns)   --->   "%zext_ln52_10 = zext i64 %shl_ln52_9" [d1.cpp:52]   --->   Operation 240 'zext' 'zext_ln52_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 241 [1/1] (0.77ns)   --->   "%tmp_23 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_12" [d1.cpp:54]   --->   Operation 241 'mux' 'tmp_23' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln54_11 = zext i64 %tmp_23" [d1.cpp:54]   --->   Operation 242 'zext' 'zext_ln54_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 243 [1/1] (0.77ns)   --->   "%tmp_24 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_3" [d1.cpp:52]   --->   Operation 243 'mux' 'tmp_24' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 244 [1/1] (0.00ns)   --->   "%shl_ln52_s = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_24, i1 0" [d1.cpp:52]   --->   Operation 244 'bitconcatenate' 'shl_ln52_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln52_11 = zext i64 %shl_ln52_s" [d1.cpp:52]   --->   Operation 245 'zext' 'zext_ln52_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 246 [1/1] (0.77ns)   --->   "%tmp_25 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_3" [d1.cpp:54]   --->   Operation 246 'mux' 'tmp_25' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln54_12 = zext i64 %tmp_25" [d1.cpp:54]   --->   Operation 247 'zext' 'zext_ln54_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 248 [1/1] (0.77ns)   --->   "%tmp_26 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_4" [d1.cpp:52]   --->   Operation 248 'mux' 'tmp_26' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 249 [1/1] (0.00ns)   --->   "%shl_ln52_10 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_26, i1 0" [d1.cpp:52]   --->   Operation 249 'bitconcatenate' 'shl_ln52_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln52_12 = zext i64 %shl_ln52_10" [d1.cpp:52]   --->   Operation 250 'zext' 'zext_ln52_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 251 [1/1] (0.77ns)   --->   "%tmp_27 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_4" [d1.cpp:54]   --->   Operation 251 'mux' 'tmp_27' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln54_13 = zext i64 %tmp_27" [d1.cpp:54]   --->   Operation 252 'zext' 'zext_ln54_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 253 [1/1] (0.77ns)   --->   "%tmp_28 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 %arg2_r_2_cast_read, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_5" [d1.cpp:52]   --->   Operation 253 'mux' 'tmp_28' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 254 [1/1] (0.00ns)   --->   "%shl_ln52_11 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_28, i1 0" [d1.cpp:52]   --->   Operation 254 'bitconcatenate' 'shl_ln52_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln52_13 = zext i64 %shl_ln52_11" [d1.cpp:52]   --->   Operation 255 'zext' 'zext_ln52_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 256 [1/1] (0.77ns)   --->   "%tmp_29 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_5" [d1.cpp:54]   --->   Operation 256 'mux' 'tmp_29' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 257 [1/1] (0.00ns)   --->   "%zext_ln54_14 = zext i64 %tmp_29" [d1.cpp:54]   --->   Operation 257 'zext' 'zext_ln54_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 258 [1/1] (0.67ns)   --->   "%tmp_30 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i64 %arg1_r_6_reload_read, i64 %arg1_r_7_reload_read, i64 %arg1_r_8_reload_read, i3 %trunc_ln44" [d1.cpp:44]   --->   Operation 258 'mux' 'tmp_30' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln44_4 = zext i64 %tmp_30" [d1.cpp:44]   --->   Operation 259 'zext' 'zext_ln44_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 260 [1/1] (0.77ns)   --->   "%tmp_31 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i4 %trunc_ln36" [d1.cpp:44]   --->   Operation 260 'mux' 'tmp_31' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln44_5 = zext i64 %tmp_31" [d1.cpp:44]   --->   Operation 261 'zext' 'zext_ln44_5' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 262 '%mul_ln44 = mul i128 %zext_ln44_5, i128 %zext_ln44_4'
ST_2 : Operation 262 [1/1] (3.48ns)   --->   "%mul_ln44 = mul i128 %zext_ln44_5, i128 %zext_ln44_4" [d1.cpp:44]   --->   Operation 262 'mul' 'mul_ln44' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 263 '%mul_ln44_2 = mul i128 %zext_ln44_3, i128 %zext_ln44_2'
ST_2 : Operation 263 [1/1] (3.48ns)   --->   "%mul_ln44_2 = mul i128 %zext_ln44_3, i128 %zext_ln44_2" [d1.cpp:44]   --->   Operation 263 'mul' 'mul_ln44_2' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 264 [1/1] (1.57ns)   --->   "%add_ln44_1 = add i128 %mul_ln44_2, i128 %mul_ln44" [d1.cpp:44]   --->   Operation 264 'add' 'add_ln44_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 265 [1/1] (0.77ns)   --->   "%tmp_32 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 0, i64 0, i64 %arg1_r_reload_read, i64 %arg1_r_1_reload_read, i64 %arg1_r_2_reload_read, i64 %arg1_r_3_reload_read, i64 %arg1_r_4_reload_read, i64 %arg1_r_5_reload_read, i4 %trunc_ln36" [d1.cpp:54]   --->   Operation 265 'mux' 'tmp_32' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 266 [1/1] (0.00ns)   --->   "%zext_ln54_15 = zext i64 %tmp_32" [d1.cpp:54]   --->   Operation 266 'zext' 'zext_ln54_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 267 [1/1] (0.67ns)   --->   "%tmp_33 = mux i64 @_ssdm_op_Mux.ap_auto.7i64.i3, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i3 %trunc_ln44" [d1.cpp:54]   --->   Operation 267 'mux' 'tmp_33' <Predicate = true> <Delay = 0.67> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln54_16 = zext i64 %tmp_33" [d1.cpp:54]   --->   Operation 268 'zext' 'zext_ln54_16' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 269 '%mul_ln54 = mul i128 %zext_ln54_9, i128 %zext_ln54_8'
ST_2 : Operation 269 [1/1] (3.48ns)   --->   "%mul_ln54 = mul i128 %zext_ln54_9, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 269 'mul' 'mul_ln54' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 270 '%mul_ln54_1 = mul i128 %zext_ln52, i128 %conv47_cast'
ST_2 : Operation 270 [1/1] (3.48ns)   --->   "%mul_ln54_1 = mul i128 %zext_ln52, i128 %conv47_cast" [d1.cpp:54]   --->   Operation 270 'mul' 'mul_ln54_1' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 271 '%mul_ln54_2 = mul i128 %zext_ln54_16, i128 %zext_ln54_15'
ST_2 : Operation 271 [1/1] (3.48ns)   --->   "%mul_ln54_2 = mul i128 %zext_ln54_16, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 271 'mul' 'mul_ln54_2' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node add_ln54)   --->   "%select_ln54_3 = select i1 %icmp_ln52, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 272 'select' 'select_ln54_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node add_ln54)   --->   "%and_ln54 = and i128 %mul_ln54_1, i128 %select_ln54_3" [d1.cpp:54]   --->   Operation 273 'and' 'and_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 274 [1/1] (0.17ns)   --->   "%select_ln54_4 = select i1 %cmp53_2, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 274 'select' 'select_ln54_4' <Predicate = true> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_1)   --->   "%and_ln54_1 = and i128 %mul_ln54_2, i128 %select_ln54_4" [d1.cpp:54]   --->   Operation 275 'and' 'and_ln54_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 276 '%mul_ln54_3 = mul i128 %zext_ln54_1, i128 %zext_ln54'
ST_2 : Operation 276 [1/1] (3.48ns)   --->   "%mul_ln54_3 = mul i128 %zext_ln54_1, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 276 'mul' 'mul_ln54_3' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln54 = add i128 %and_ln54, i128 %mul_ln54_3" [d1.cpp:54]   --->   Operation 277 'add' 'add_ln54' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln54_1 = add i128 %mul_ln54, i128 %and_ln54_1" [d1.cpp:54]   --->   Operation 278 'add' 'add_ln54_1' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 279 [1/1] (0.77ns)   --->   "%tmp_34 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 0, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %add_ln49" [d1.cpp:54]   --->   Operation 279 'mux' 'tmp_34' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln54_17 = zext i64 %tmp_34" [d1.cpp:54]   --->   Operation 280 'zext' 'zext_ln54_17' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 281 '%mul_ln54_4 = mul i128 %zext_ln52_1, i128 %zext_ln52'
ST_2 : Operation 281 [1/1] (3.48ns)   --->   "%mul_ln54_4 = mul i128 %zext_ln52_1, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 281 'mul' 'mul_ln54_4' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 282 '%mul_ln54_5 = mul i128 %zext_ln54_2, i128 %zext_ln54'
ST_2 : Operation 282 [1/1] (3.48ns)   --->   "%mul_ln54_5 = mul i128 %zext_ln54_2, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 282 'mul' 'mul_ln54_5' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_4)   --->   "%select_ln54_5 = select i1 %icmp_ln52_1, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 283 'select' 'select_ln54_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 284 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_4)   --->   "%and_ln54_2 = and i128 %mul_ln54_4, i128 %select_ln54_5" [d1.cpp:54]   --->   Operation 284 'and' 'and_ln54_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 285 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_3)   --->   "%select_ln54_6 = select i1 %icmp_ln54, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 285 'select' 'select_ln54_6' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 286 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_3 = and i128 %mul_ln54_5, i128 %select_ln54_6" [d1.cpp:54]   --->   Operation 286 'and' 'and_ln54_3' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 287 '%mul_ln54_6 = mul i128 %zext_ln54_8, i128 %zext_ln54_1'
ST_2 : Operation 287 [1/1] (3.48ns)   --->   "%mul_ln54_6 = mul i128 %zext_ln54_8, i128 %zext_ln54_1" [d1.cpp:54]   --->   Operation 287 'mul' 'mul_ln54_6' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 288 '%mul_ln54_7 = mul i128 %zext_ln54_17, i128 %zext_ln54_15'
ST_2 : Operation 288 [1/1] (3.48ns)   --->   "%mul_ln54_7 = mul i128 %zext_ln54_17, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 288 'mul' 'mul_ln54_7' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 289 '%mul_ln54_8 = mul i128 %zext_ln54, i128 %conv47_cast'
ST_2 : Operation 289 [1/1] (3.48ns)   --->   "%mul_ln54_8 = mul i128 %zext_ln54, i128 %conv47_cast" [d1.cpp:54]   --->   Operation 289 'mul' 'mul_ln54_8' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 290 [1/1] (0.37ns)   --->   "%and_ln54_4 = and i128 %mul_ln54_7, i128 %select_ln54_4" [d1.cpp:54]   --->   Operation 290 'and' 'and_ln54_4' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_4)   --->   "%select_ln54_7 = select i1 %icmp_ln52_6, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 291 'select' 'select_ln54_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_4)   --->   "%and_ln54_5 = and i128 %mul_ln54_8, i128 %select_ln54_7" [d1.cpp:54]   --->   Operation 292 'and' 'and_ln54_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 293 [1/1] (1.57ns) (out node of the LUT)   --->   "%add_ln54_4 = add i128 %and_ln54_5, i128 %and_ln54_2" [d1.cpp:54]   --->   Operation 293 'add' 'add_ln54_4' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_5 = add i128 %mul_ln54_6, i128 %and_ln54_4" [d1.cpp:54]   --->   Operation 294 'add' 'add_ln54_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 295 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_6 = add i128 %add_ln54_5, i128 %and_ln54_3" [d1.cpp:54]   --->   Operation 295 'add' 'add_ln54_6' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 296 [1/1] (0.77ns)   --->   "%tmp_35 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_13" [d1.cpp:54]   --->   Operation 296 'mux' 'tmp_35' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 297 [1/1] (0.00ns)   --->   "%zext_ln54_18 = zext i64 %tmp_35" [d1.cpp:54]   --->   Operation 297 'zext' 'zext_ln54_18' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 298 '%mul_ln54_9 = mul i128 %zext_ln54_3, i128 %zext_ln54'
ST_2 : Operation 298 [1/1] (3.48ns)   --->   "%mul_ln54_9 = mul i128 %zext_ln54_3, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 298 'mul' 'mul_ln54_9' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 299 '%mul_ln54_10 = mul i128 %zext_ln54_8, i128 %zext_ln54_2'
ST_2 : Operation 299 [1/1] (3.48ns)   --->   "%mul_ln54_10 = mul i128 %zext_ln54_8, i128 %zext_ln54_2" [d1.cpp:54]   --->   Operation 299 'mul' 'mul_ln54_10' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 300 '%mul_ln54_11 = mul i128 %zext_ln54_8, i128 %conv47_cast'
ST_2 : Operation 300 [1/1] (3.48ns)   --->   "%mul_ln54_11 = mul i128 %zext_ln54_8, i128 %conv47_cast" [d1.cpp:54]   --->   Operation 300 'mul' 'mul_ln54_11' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 301 '%mul_ln54_12 = mul i128 %zext_ln52_8, i128 %zext_ln54'
ST_2 : Operation 301 [1/1] (3.48ns)   --->   "%mul_ln54_12 = mul i128 %zext_ln52_8, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 301 'mul' 'mul_ln54_12' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 302 '%mul_ln54_13 = mul i128 %zext_ln54_18, i128 %zext_ln54_15'
ST_2 : Operation 302 [1/1] (3.48ns)   --->   "%mul_ln54_13 = mul i128 %zext_ln54_18, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 302 'mul' 'mul_ln54_13' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_6)   --->   "%select_ln54_8 = select i1 %icmp_ln54_1, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 303 'select' 'select_ln54_8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 304 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_6 = and i128 %mul_ln54_9, i128 %select_ln54_8" [d1.cpp:54]   --->   Operation 304 'and' 'and_ln54_6' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_7)   --->   "%select_ln54_9 = select i1 %icmp_ln54_6, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 305 'select' 'select_ln54_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 306 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_7 = and i128 %mul_ln54_10, i128 %select_ln54_9" [d1.cpp:54]   --->   Operation 306 'and' 'and_ln54_7' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_8)   --->   "%select_ln54_10 = select i1 %icmp_ln52_12, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 307 'select' 'select_ln54_10' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 308 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_8 = and i128 %mul_ln54_11, i128 %select_ln54_10" [d1.cpp:54]   --->   Operation 308 'and' 'and_ln54_8' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_9)   --->   "%select_ln54_11 = select i1 %icmp_ln52_7, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 309 'select' 'select_ln54_11' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 310 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_9 = and i128 %mul_ln54_12, i128 %select_ln54_11" [d1.cpp:54]   --->   Operation 310 'and' 'and_ln54_9' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 311 [1/1] (0.37ns)   --->   "%and_ln54_10 = and i128 %mul_ln54_13, i128 %select_ln54_4" [d1.cpp:54]   --->   Operation 311 'and' 'and_ln54_10' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 312 '%mul_ln54_14 = mul i128 %zext_ln52_2, i128 %zext_ln52'
ST_2 : Operation 312 [1/1] (3.48ns)   --->   "%mul_ln54_14 = mul i128 %zext_ln52_2, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 312 'mul' 'mul_ln54_14' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_11)   --->   "%select_ln54_12 = select i1 %icmp_ln52_2, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 313 'select' 'select_ln54_12' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 314 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_11 = and i128 %mul_ln54_14, i128 %select_ln54_12" [d1.cpp:54]   --->   Operation 314 'and' 'and_ln54_11' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 315 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_9 = add i128 %and_ln54_11, i128 %and_ln54_7" [d1.cpp:54]   --->   Operation 315 'add' 'add_ln54_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 316 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_10 = add i128 %add_ln54_9, i128 %and_ln54_6" [d1.cpp:54]   --->   Operation 316 'add' 'add_ln54_10' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 317 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_11 = add i128 %and_ln54_9, i128 %and_ln54_10" [d1.cpp:54]   --->   Operation 317 'add' 'add_ln54_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 318 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_12 = add i128 %add_ln54_11, i128 %and_ln54_8" [d1.cpp:54]   --->   Operation 318 'add' 'add_ln54_12' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 319 [1/1] (0.41ns)   --->   "%select_ln52_2 = select i1 %icmp_ln52_12, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read" [d1.cpp:52]   --->   Operation 319 'select' 'select_ln52_2' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 320 [1/1] (0.00ns)   --->   "%shl_ln52_12 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %select_ln52_2, i1 0" [d1.cpp:52]   --->   Operation 320 'bitconcatenate' 'shl_ln52_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 321 [1/1] (0.00ns)   --->   "%zext_ln52_14 = zext i64 %shl_ln52_12" [d1.cpp:52]   --->   Operation 321 'zext' 'zext_ln52_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 322 [1/1] (0.77ns)   --->   "%tmp_36 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_14" [d1.cpp:54]   --->   Operation 322 'mux' 'tmp_36' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 323 [1/1] (0.00ns)   --->   "%zext_ln54_19 = zext i64 %tmp_36" [d1.cpp:54]   --->   Operation 323 'zext' 'zext_ln54_19' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 324 '%mul_ln54_15 = mul i128 %zext_ln54_4, i128 %zext_ln54'
ST_2 : Operation 324 [1/1] (3.48ns)   --->   "%mul_ln54_15 = mul i128 %zext_ln54_4, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 324 'mul' 'mul_ln54_15' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 325 '%mul_ln54_16 = mul i128 %zext_ln54_10, i128 %zext_ln54_8'
ST_2 : Operation 325 [1/1] (3.48ns)   --->   "%mul_ln54_16 = mul i128 %zext_ln54_10, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 325 'mul' 'mul_ln54_16' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 326 '%mul_ln54_17 = mul i128 %zext_ln52_14, i128 %zext_ln54_8'
ST_2 : Operation 326 [1/1] (3.48ns)   --->   "%mul_ln54_17 = mul i128 %zext_ln52_14, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 326 'mul' 'mul_ln54_17' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 327 '%mul_ln54_18 = mul i128 %zext_ln52_9, i128 %zext_ln54'
ST_2 : Operation 327 [1/1] (3.48ns)   --->   "%mul_ln54_18 = mul i128 %zext_ln52_9, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 327 'mul' 'mul_ln54_18' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 328 '%mul_ln54_19 = mul i128 %zext_ln54_19, i128 %zext_ln54_15'
ST_2 : Operation 328 [1/1] (3.48ns)   --->   "%mul_ln54_19 = mul i128 %zext_ln54_19, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 328 'mul' 'mul_ln54_19' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_13)   --->   "%select_ln54_13 = select i1 %icmp_ln54_2, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 329 'select' 'select_ln54_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 330 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_13 = and i128 %mul_ln54_15, i128 %select_ln54_13" [d1.cpp:54]   --->   Operation 330 'and' 'and_ln54_13' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_14)   --->   "%select_ln54_14 = select i1 %icmp_ln54_7, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 331 'select' 'select_ln54_14' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 332 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_14 = and i128 %mul_ln54_16, i128 %select_ln54_14" [d1.cpp:54]   --->   Operation 332 'and' 'and_ln54_14' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_15)   --->   "%select_ln54_15 = select i1 %icmp_ln52_13, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 333 'select' 'select_ln54_15' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 334 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_15 = and i128 %mul_ln54_17, i128 %select_ln54_15" [d1.cpp:54]   --->   Operation 334 'and' 'and_ln54_15' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 335 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_16)   --->   "%select_ln54_16 = select i1 %icmp_ln52_8, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 335 'select' 'select_ln54_16' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 336 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_16 = and i128 %mul_ln54_18, i128 %select_ln54_16" [d1.cpp:54]   --->   Operation 336 'and' 'and_ln54_16' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_17)   --->   "%select_ln54_17 = select i1 %and_ln54_12, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 337 'select' 'select_ln54_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 338 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_17 = and i128 %mul_ln54_19, i128 %select_ln54_17" [d1.cpp:54]   --->   Operation 338 'and' 'and_ln54_17' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 339 '%mul_ln54_20 = mul i128 %zext_ln52_3, i128 %zext_ln52'
ST_2 : Operation 339 [1/1] (3.48ns)   --->   "%mul_ln54_20 = mul i128 %zext_ln52_3, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 339 'mul' 'mul_ln54_20' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_18)   --->   "%select_ln54_18 = select i1 %icmp_ln52_3, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 340 'select' 'select_ln54_18' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 341 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_18 = and i128 %mul_ln54_20, i128 %select_ln54_18" [d1.cpp:54]   --->   Operation 341 'and' 'and_ln54_18' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_15 = add i128 %and_ln54_18, i128 %and_ln54_14" [d1.cpp:54]   --->   Operation 342 'add' 'add_ln54_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 343 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_16 = add i128 %add_ln54_15, i128 %and_ln54_13" [d1.cpp:54]   --->   Operation 343 'add' 'add_ln54_16' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 344 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_17 = add i128 %and_ln54_15, i128 %and_ln54_17" [d1.cpp:54]   --->   Operation 344 'add' 'add_ln54_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 345 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_18 = add i128 %add_ln54_17, i128 %and_ln54_16" [d1.cpp:54]   --->   Operation 345 'add' 'add_ln54_18' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 346 [1/1] (0.77ns)   --->   "%tmp_37 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_13" [d1.cpp:52]   --->   Operation 346 'mux' 'tmp_37' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 347 [1/1] (0.00ns)   --->   "%shl_ln52_13 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_37, i1 0" [d1.cpp:52]   --->   Operation 347 'bitconcatenate' 'shl_ln52_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln52_15 = zext i64 %shl_ln52_13" [d1.cpp:52]   --->   Operation 348 'zext' 'zext_ln52_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 349 [1/1] (0.77ns)   --->   "%tmp_38 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_15" [d1.cpp:54]   --->   Operation 349 'mux' 'tmp_38' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 350 [1/1] (0.00ns)   --->   "%zext_ln54_20 = zext i64 %tmp_38" [d1.cpp:54]   --->   Operation 350 'zext' 'zext_ln54_20' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 351 '%mul_ln54_21 = mul i128 %zext_ln54_5, i128 %zext_ln54'
ST_2 : Operation 351 [1/1] (3.48ns)   --->   "%mul_ln54_21 = mul i128 %zext_ln54_5, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 351 'mul' 'mul_ln54_21' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 352 '%mul_ln54_22 = mul i128 %zext_ln54_11, i128 %zext_ln54_8'
ST_2 : Operation 352 [1/1] (3.48ns)   --->   "%mul_ln54_22 = mul i128 %zext_ln54_11, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 352 'mul' 'mul_ln54_22' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 353 '%mul_ln54_23 = mul i128 %zext_ln52_15, i128 %zext_ln54_8'
ST_2 : Operation 353 [1/1] (3.48ns)   --->   "%mul_ln54_23 = mul i128 %zext_ln52_15, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 353 'mul' 'mul_ln54_23' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 354 '%mul_ln54_24 = mul i128 %zext_ln52_10, i128 %zext_ln54'
ST_2 : Operation 354 [1/1] (3.48ns)   --->   "%mul_ln54_24 = mul i128 %zext_ln52_10, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 354 'mul' 'mul_ln54_24' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 355 '%mul_ln54_25 = mul i128 %zext_ln54_20, i128 %zext_ln54_15'
ST_2 : Operation 355 [1/1] (3.48ns)   --->   "%mul_ln54_25 = mul i128 %zext_ln54_20, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 355 'mul' 'mul_ln54_25' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_20)   --->   "%select_ln54_19 = select i1 %icmp_ln54_3, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 356 'select' 'select_ln54_19' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 357 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_20 = and i128 %mul_ln54_21, i128 %select_ln54_19" [d1.cpp:54]   --->   Operation 357 'and' 'and_ln54_20' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_21)   --->   "%select_ln54_20 = select i1 %icmp_ln54_8, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 358 'select' 'select_ln54_20' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_21 = and i128 %mul_ln54_22, i128 %select_ln54_20" [d1.cpp:54]   --->   Operation 359 'and' 'and_ln54_21' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_22)   --->   "%select_ln54_21 = select i1 %icmp_ln52_14, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 360 'select' 'select_ln54_21' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 361 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_22 = and i128 %mul_ln54_23, i128 %select_ln54_21" [d1.cpp:54]   --->   Operation 361 'and' 'and_ln54_22' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_23)   --->   "%select_ln54_22 = select i1 %icmp_ln52_9, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 362 'select' 'select_ln54_22' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 363 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_23 = and i128 %mul_ln54_24, i128 %select_ln54_22" [d1.cpp:54]   --->   Operation 363 'and' 'and_ln54_23' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_24)   --->   "%select_ln54_23 = select i1 %and_ln54_19, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 364 'select' 'select_ln54_23' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_24 = and i128 %mul_ln54_25, i128 %select_ln54_23" [d1.cpp:54]   --->   Operation 365 'and' 'and_ln54_24' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 366 '%mul_ln54_26 = mul i128 %zext_ln52_4, i128 %zext_ln52'
ST_2 : Operation 366 [1/1] (3.48ns)   --->   "%mul_ln54_26 = mul i128 %zext_ln52_4, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 366 'mul' 'mul_ln54_26' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_25)   --->   "%select_ln54_24 = select i1 %icmp_ln52_4, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 367 'select' 'select_ln54_24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 368 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_25 = and i128 %mul_ln54_26, i128 %select_ln54_24" [d1.cpp:54]   --->   Operation 368 'and' 'and_ln54_25' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 369 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_21 = add i128 %and_ln54_25, i128 %and_ln54_21" [d1.cpp:54]   --->   Operation 369 'add' 'add_ln54_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 370 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_22 = add i128 %add_ln54_21, i128 %and_ln54_20" [d1.cpp:54]   --->   Operation 370 'add' 'add_ln54_22' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 371 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_23 = add i128 %and_ln54_22, i128 %and_ln54_24" [d1.cpp:54]   --->   Operation 371 'add' 'add_ln54_23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 372 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_24 = add i128 %add_ln54_23, i128 %and_ln54_23" [d1.cpp:54]   --->   Operation 372 'add' 'add_ln54_24' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 373 [1/1] (0.77ns)   --->   "%tmp_39 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_6" [d1.cpp:52]   --->   Operation 373 'mux' 'tmp_39' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 374 [1/1] (0.00ns)   --->   "%shl_ln52_14 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_39, i1 0" [d1.cpp:52]   --->   Operation 374 'bitconcatenate' 'shl_ln52_14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 375 [1/1] (0.00ns)   --->   "%zext_ln52_16 = zext i64 %shl_ln52_14" [d1.cpp:52]   --->   Operation 375 'zext' 'zext_ln52_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 376 [1/1] (0.77ns)   --->   "%tmp_40 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_6" [d1.cpp:54]   --->   Operation 376 'mux' 'tmp_40' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln54_21 = zext i64 %tmp_40" [d1.cpp:54]   --->   Operation 377 'zext' 'zext_ln54_21' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 378 '%mul_ln54_27 = mul i128 %zext_ln54_6, i128 %zext_ln54'
ST_2 : Operation 378 [1/1] (3.48ns)   --->   "%mul_ln54_27 = mul i128 %zext_ln54_6, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 378 'mul' 'mul_ln54_27' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 379 '%mul_ln54_28 = mul i128 %zext_ln54_12, i128 %zext_ln54_8'
ST_2 : Operation 379 [1/1] (3.48ns)   --->   "%mul_ln54_28 = mul i128 %zext_ln54_12, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 379 'mul' 'mul_ln54_28' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 380 '%mul_ln54_29 = mul i128 %zext_ln52_16, i128 %zext_ln54_8'
ST_2 : Operation 380 [1/1] (3.48ns)   --->   "%mul_ln54_29 = mul i128 %zext_ln52_16, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 380 'mul' 'mul_ln54_29' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 381 '%mul_ln54_30 = mul i128 %zext_ln52_11, i128 %zext_ln54'
ST_2 : Operation 381 [1/1] (3.48ns)   --->   "%mul_ln54_30 = mul i128 %zext_ln52_11, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 381 'mul' 'mul_ln54_30' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 382 '%mul_ln54_31 = mul i128 %zext_ln54_21, i128 %zext_ln54_15'
ST_2 : Operation 382 [1/1] (3.48ns)   --->   "%mul_ln54_31 = mul i128 %zext_ln54_21, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 382 'mul' 'mul_ln54_31' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_27)   --->   "%select_ln54_25 = select i1 %icmp_ln54_4, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 383 'select' 'select_ln54_25' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 384 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_27 = and i128 %mul_ln54_27, i128 %select_ln54_25" [d1.cpp:54]   --->   Operation 384 'and' 'and_ln54_27' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_28)   --->   "%select_ln54_26 = select i1 %icmp_ln54_9, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 385 'select' 'select_ln54_26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_28 = and i128 %mul_ln54_28, i128 %select_ln54_26" [d1.cpp:54]   --->   Operation 386 'and' 'and_ln54_28' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_29)   --->   "%select_ln54_27 = select i1 %icmp_ln52_15, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 387 'select' 'select_ln54_27' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 388 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_29 = and i128 %mul_ln54_29, i128 %select_ln54_27" [d1.cpp:54]   --->   Operation 388 'and' 'and_ln54_29' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_30)   --->   "%select_ln54_28 = select i1 %icmp_ln52_10, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 389 'select' 'select_ln54_28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_30 = and i128 %mul_ln54_30, i128 %select_ln54_28" [d1.cpp:54]   --->   Operation 390 'and' 'and_ln54_30' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_31)   --->   "%select_ln54_29 = select i1 %and_ln54_26, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 391 'select' 'select_ln54_29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_31 = and i128 %mul_ln54_31, i128 %select_ln54_29" [d1.cpp:54]   --->   Operation 392 'and' 'and_ln54_31' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 393 '%mul_ln54_32 = mul i128 %zext_ln52_5, i128 %zext_ln52'
ST_2 : Operation 393 [1/1] (3.48ns)   --->   "%mul_ln54_32 = mul i128 %zext_ln52_5, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 393 'mul' 'mul_ln54_32' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_32)   --->   "%select_ln54_30 = select i1 %icmp_ln52_5, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 394 'select' 'select_ln54_30' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_32 = and i128 %mul_ln54_32, i128 %select_ln54_30" [d1.cpp:54]   --->   Operation 395 'and' 'and_ln54_32' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 396 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_27 = add i128 %and_ln54_32, i128 %and_ln54_28" [d1.cpp:54]   --->   Operation 396 'add' 'add_ln54_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 397 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_28 = add i128 %add_ln54_27, i128 %and_ln54_27" [d1.cpp:54]   --->   Operation 397 'add' 'add_ln54_28' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 398 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_29 = add i128 %and_ln54_29, i128 %and_ln54_31" [d1.cpp:54]   --->   Operation 398 'add' 'add_ln54_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 399 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_30 = add i128 %add_ln54_29, i128 %and_ln54_30" [d1.cpp:54]   --->   Operation 399 'add' 'add_ln54_30' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 400 [1/1] (0.77ns)   --->   "%tmp_41 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 0, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_7" [d1.cpp:52]   --->   Operation 400 'mux' 'tmp_41' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 401 [1/1] (0.00ns)   --->   "%shl_ln52_15 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_41, i1 0" [d1.cpp:52]   --->   Operation 401 'bitconcatenate' 'shl_ln52_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln52_17 = zext i64 %shl_ln52_15" [d1.cpp:52]   --->   Operation 402 'zext' 'zext_ln52_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 403 [1/1] (0.77ns)   --->   "%tmp_42 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_7" [d1.cpp:54]   --->   Operation 403 'mux' 'tmp_42' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 404 [1/1] (0.00ns)   --->   "%zext_ln54_22 = zext i64 %tmp_42" [d1.cpp:54]   --->   Operation 404 'zext' 'zext_ln54_22' <Predicate = true> <Delay = 0.00>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 405 '%mul_ln54_33 = mul i128 %zext_ln54_7, i128 %zext_ln54'
ST_2 : Operation 405 [1/1] (3.48ns)   --->   "%mul_ln54_33 = mul i128 %zext_ln54_7, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 405 'mul' 'mul_ln54_33' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 406 '%mul_ln54_34 = mul i128 %zext_ln54_13, i128 %zext_ln54_8'
ST_2 : Operation 406 [1/1] (3.48ns)   --->   "%mul_ln54_34 = mul i128 %zext_ln54_13, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 406 'mul' 'mul_ln54_34' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 407 '%mul_ln54_35 = mul i128 %zext_ln52_17, i128 %zext_ln54_8'
ST_2 : Operation 407 [1/1] (3.48ns)   --->   "%mul_ln54_35 = mul i128 %zext_ln52_17, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 407 'mul' 'mul_ln54_35' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 408 '%mul_ln54_36 = mul i128 %zext_ln54_22, i128 %zext_ln54_15'
ST_2 : Operation 408 [1/1] (3.48ns)   --->   "%mul_ln54_36 = mul i128 %zext_ln54_22, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 408 'mul' 'mul_ln54_36' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_34)   --->   "%select_ln54_31 = select i1 %icmp_ln54_5, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 409 'select' 'select_ln54_31' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_34 = and i128 %mul_ln54_33, i128 %select_ln54_31" [d1.cpp:54]   --->   Operation 410 'and' 'and_ln54_34' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_35)   --->   "%select_ln54_32 = select i1 %icmp_ln54_10, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 411 'select' 'select_ln54_32' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 412 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_35 = and i128 %mul_ln54_34, i128 %select_ln54_32" [d1.cpp:54]   --->   Operation 412 'and' 'and_ln54_35' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_36)   --->   "%select_ln54_33 = select i1 %icmp_ln52_16, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 413 'select' 'select_ln54_33' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 414 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_36 = and i128 %mul_ln54_35, i128 %select_ln54_33" [d1.cpp:54]   --->   Operation 414 'and' 'and_ln54_36' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 415 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_37)   --->   "%select_ln54_34 = select i1 %and_ln54_33, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 415 'select' 'select_ln54_34' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 416 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_37 = and i128 %mul_ln54_36, i128 %select_ln54_34" [d1.cpp:54]   --->   Operation 416 'and' 'and_ln54_37' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 417 '%mul_ln54_37 = mul i128 %zext_ln52_6, i128 %zext_ln52'
ST_2 : Operation 417 [1/1] (3.48ns)   --->   "%mul_ln54_37 = mul i128 %zext_ln52_6, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 417 'mul' 'mul_ln54_37' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 418 '%mul_ln54_38 = mul i128 %zext_ln52_12, i128 %zext_ln54'
ST_2 : Operation 418 [1/1] (3.48ns)   --->   "%mul_ln54_38 = mul i128 %zext_ln52_12, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 418 'mul' 'mul_ln54_38' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 419 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_38)   --->   "%select_ln54_35 = select i1 %icmp_ln52_11, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 419 'select' 'select_ln54_35' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 420 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_38 = and i128 %mul_ln54_38, i128 %select_ln54_35" [d1.cpp:54]   --->   Operation 420 'and' 'and_ln54_38' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 421 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_33 = add i128 %and_ln54_34, i128 %and_ln54_35" [d1.cpp:54]   --->   Operation 421 'add' 'add_ln54_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 422 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_34 = add i128 %add_ln54_33, i128 %mul_ln54_37" [d1.cpp:54]   --->   Operation 422 'add' 'add_ln54_34' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 423 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_35 = add i128 %and_ln54_37, i128 %and_ln54_36" [d1.cpp:54]   --->   Operation 423 'add' 'add_ln54_35' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 424 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_36 = add i128 %add_ln54_35, i128 %and_ln54_38" [d1.cpp:54]   --->   Operation 424 'add' 'add_ln54_36' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 425 [1/1] (0.77ns)   --->   "%tmp_43 = mux i63 @_ssdm_op_Mux.ap_auto.9i63.i4, i63 0, i63 0, i63 0, i63 %arg2_r_3_cast_read, i63 %arg2_r_4_cast_read, i63 %arg2_r_5_cast_read, i63 %arg2_r_6_cast_read, i63 %arg2_r_7_cast_read, i63 %arg2_r_8_cast_read, i4 %sub_ln54_8" [d1.cpp:52]   --->   Operation 425 'mux' 'tmp_43' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 426 [1/1] (0.00ns)   --->   "%shl_ln52_16 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %tmp_43, i1 0" [d1.cpp:52]   --->   Operation 426 'bitconcatenate' 'shl_ln52_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 427 [1/1] (0.00ns)   --->   "%zext_ln52_18 = zext i64 %shl_ln52_16" [d1.cpp:52]   --->   Operation 427 'zext' 'zext_ln52_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 428 [1/1] (0.77ns)   --->   "%tmp_44 = mux i64 @_ssdm_op_Mux.ap_auto.9i64.i4, i64 %arg2_r_reload_read, i64 %arg2_r_1_reload_read, i64 %arg2_r_2_reload_read, i64 %arg2_r_3_reload_read, i64 %arg2_r_4_reload_read, i64 %arg2_r_5_reload_read, i64 %arg2_r_6_reload_read, i64 %arg2_r_7_reload_read, i64 %arg2_r_8_reload_read, i4 %sub_ln49_8" [d1.cpp:54]   --->   Operation 428 'mux' 'tmp_44' <Predicate = true> <Delay = 0.77> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 429 [1/1] (0.00ns)   --->   "%zext_ln54_23 = zext i64 %tmp_44" [d1.cpp:54]   --->   Operation 429 'zext' 'zext_ln54_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_41)   --->   "%and_ln54_39 = and i1 %icmp_ln54_16, i1 %cmp53_2" [d1.cpp:54]   --->   Operation 430 'and' 'and_ln54_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 431 '%mul_ln54_39 = mul i128 %zext_ln54_14, i128 %zext_ln54_8'
ST_2 : Operation 431 [1/1] (3.48ns)   --->   "%mul_ln54_39 = mul i128 %zext_ln54_14, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 431 'mul' 'mul_ln54_39' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_40)   --->   "%select_ln54_36 = select i1 %icmp_ln54_11, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 432 'select' 'select_ln54_36' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 433 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_40 = and i128 %mul_ln54_39, i128 %select_ln54_36" [d1.cpp:54]   --->   Operation 433 'and' 'and_ln54_40' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 434 '%mul_ln54_40 = mul i128 %zext_ln52_7, i128 %zext_ln52'
ST_2 : Operation 434 [1/1] (3.48ns)   --->   "%mul_ln54_40 = mul i128 %zext_ln52_7, i128 %zext_ln52" [d1.cpp:54]   --->   Operation 434 'mul' 'mul_ln54_40' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 435 '%mul_ln54_41 = mul i128 %zext_ln52_13, i128 %zext_ln54'
ST_2 : Operation 435 [1/1] (3.48ns)   --->   "%mul_ln54_41 = mul i128 %zext_ln52_13, i128 %zext_ln54" [d1.cpp:54]   --->   Operation 435 'mul' 'mul_ln54_41' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 436 '%mul_ln54_42 = mul i128 %zext_ln54_23, i128 %zext_ln54_15'
ST_2 : Operation 436 [1/1] (3.48ns)   --->   "%mul_ln54_42 = mul i128 %zext_ln54_23, i128 %zext_ln54_15" [d1.cpp:54]   --->   Operation 436 'mul' 'mul_ln54_42' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : [1/1] (1.04ns)   --->   Input mux for Operation 437 '%mul_ln54_43 = mul i128 %zext_ln52_18, i128 %zext_ln54_8'
ST_2 : Operation 437 [1/1] (3.48ns)   --->   "%mul_ln54_43 = mul i128 %zext_ln52_18, i128 %zext_ln54_8" [d1.cpp:54]   --->   Operation 437 'mul' 'mul_ln54_43' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 438 [1/1] (0.00ns) (grouped into LUT with out node and_ln54_41)   --->   "%select_ln54_37 = select i1 %and_ln54_39, i128 340282366920938463463374607431768211455, i128 0" [d1.cpp:54]   --->   Operation 438 'select' 'select_ln54_37' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 439 [1/1] (0.37ns) (out node of the LUT)   --->   "%and_ln54_41 = and i128 %mul_ln54_42, i128 %select_ln54_37" [d1.cpp:54]   --->   Operation 439 'and' 'and_ln54_41' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 440 [1/1] (0.37ns)   --->   "%and_ln54_42 = and i128 %mul_ln54_43, i128 %select_ln54_4" [d1.cpp:54]   --->   Operation 440 'and' 'and_ln54_42' <Predicate = true> <Delay = 0.37> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 441 [1/1] (1.57ns)   --->   "%add_ln54_39 = add i128 %mul_ln54_40, i128 %mul_ln54_41" [d1.cpp:54]   --->   Operation 441 'add' 'add_ln54_39' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 442 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_40 = add i128 %and_ln54_42, i128 %and_ln54_41" [d1.cpp:54]   --->   Operation 442 'add' 'add_ln54_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 443 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_41 = add i128 %add_ln54_40, i128 %and_ln54_40" [d1.cpp:54]   --->   Operation 443 'add' 'add_ln54_41' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 487 [1/1] (0.00ns)   --->   "%add32_2129_load_1 = load i128 %add32_2129"   --->   Operation 487 'load' 'add32_2129_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 488 [1/1] (0.00ns)   --->   "%add59130_load_1 = load i128 %add59130"   --->   Operation 488 'load' 'add59130_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 489 [1/1] (0.00ns)   --->   "%add59_123131_load_1 = load i128 %add59_123131"   --->   Operation 489 'load' 'add59_123131_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 490 [1/1] (0.00ns)   --->   "%add59_258132_load_1 = load i128 %add59_258132"   --->   Operation 490 'load' 'add59_258132_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 491 [1/1] (0.00ns)   --->   "%add59_3133_load_1 = load i128 %add59_3133"   --->   Operation 491 'load' 'add59_3133_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 492 [1/1] (0.00ns)   --->   "%add59_4134_load_1 = load i128 %add59_4134"   --->   Operation 492 'load' 'add59_4134_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 493 [1/1] (0.00ns)   --->   "%add59_5135_load_1 = load i128 %add59_5135"   --->   Operation 493 'load' 'add59_5135_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 494 [1/1] (0.00ns)   --->   "%add59_6136_load_1 = load i128 %add59_6136"   --->   Operation 494 'load' 'add59_6136_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 495 [1/1] (0.00ns)   --->   "%add59_7137_load_1 = load i128 %add59_7137"   --->   Operation 495 'load' 'add59_7137_load_1' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 496 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_7137_out, i128 %add59_7137_load_1"   --->   Operation 496 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 497 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_6136_out, i128 %add59_6136_load_1"   --->   Operation 497 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 498 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_5135_out, i128 %add59_5135_load_1"   --->   Operation 498 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 499 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_4134_out, i128 %add59_4134_load_1"   --->   Operation 499 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 500 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_3133_out, i128 %add59_3133_load_1"   --->   Operation 500 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 501 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_258132_out, i128 %add59_258132_load_1"   --->   Operation 501 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 502 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59_123131_out, i128 %add59_123131_load_1"   --->   Operation 502 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 503 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add59130_out, i128 %add59130_load_1"   --->   Operation 503 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 504 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %add32_2129_out, i128 %add32_2129_load_1"   --->   Operation 504 'write' 'write_ln0' <Predicate = (tmp_45)> <Delay = 0.00>
ST_2 : Operation 505 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 505 'ret' 'ret_ln0' <Predicate = (tmp_45)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.95>
ST_3 : Operation 444 [1/1] (0.00ns)   --->   "%add32_2129_load = load i128 %add32_2129" [d1.cpp:44]   --->   Operation 444 'load' 'add32_2129_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 445 [1/1] (0.00ns)   --->   "%add59130_load = load i128 %add59130" [d1.cpp:54]   --->   Operation 445 'load' 'add59130_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 446 [1/1] (0.00ns)   --->   "%add59_123131_load = load i128 %add59_123131" [d1.cpp:54]   --->   Operation 446 'load' 'add59_123131_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 447 [1/1] (0.00ns)   --->   "%add59_258132_load = load i128 %add59_258132" [d1.cpp:54]   --->   Operation 447 'load' 'add59_258132_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 448 [1/1] (0.00ns)   --->   "%add59_3133_load = load i128 %add59_3133" [d1.cpp:54]   --->   Operation 448 'load' 'add59_3133_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 449 [1/1] (0.00ns)   --->   "%add59_4134_load = load i128 %add59_4134" [d1.cpp:54]   --->   Operation 449 'load' 'add59_4134_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 450 [1/1] (0.00ns)   --->   "%add59_5135_load = load i128 %add59_5135" [d1.cpp:54]   --->   Operation 450 'load' 'add59_5135_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 451 [1/1] (0.00ns)   --->   "%add59_6136_load = load i128 %add59_6136" [d1.cpp:54]   --->   Operation 451 'load' 'add59_6136_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 452 [1/1] (0.00ns)   --->   "%add59_7137_load = load i128 %add59_7137" [d1.cpp:54]   --->   Operation 452 'load' 'add59_7137_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 453 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_14" [d1.cpp:38]   --->   Operation 453 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 454 [1/1] (0.00ns)   --->   "%speclooptripcount_ln34 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [d1.cpp:34]   --->   Operation 454 'speclooptripcount' 'speclooptripcount_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 455 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [d1.cpp:36]   --->   Operation 455 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 456 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i64 %tmp" [d1.cpp:44]   --->   Operation 456 'zext' 'zext_ln44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 457 [1/1] (0.00ns)   --->   "%zext_ln44_1 = zext i64 %tmp_1" [d1.cpp:44]   --->   Operation 457 'zext' 'zext_ln44_1' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.04ns)   --->   Input mux for Operation 458 '%mul_ln44_1 = mul i128 %zext_ln44_1, i128 %zext_ln44'
ST_3 : Operation 458 [1/1] (3.48ns)   --->   "%mul_ln44_1 = mul i128 %zext_ln44_1, i128 %zext_ln44" [d1.cpp:44]   --->   Operation 458 'mul' 'mul_ln44_1' <Predicate = true> <Delay = 3.48> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 459 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln44_2 = add i128 %add_ln44_1, i128 %mul_ln44_1" [d1.cpp:44]   --->   Operation 459 'add' 'add_ln44_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 460 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln44_3 = add i128 %add32_2129_load, i128 %add_ln44_2" [d1.cpp:44]   --->   Operation 460 'add' 'add_ln44_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 461 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_2 = add i128 %add_ln54_1, i128 %add_ln54" [d1.cpp:54]   --->   Operation 461 'add' 'add_ln54_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 462 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_3 = add i128 %add59130_load, i128 %add_ln54_2" [d1.cpp:54]   --->   Operation 462 'add' 'add_ln54_3' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 463 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_7 = add i128 %add_ln54_6, i128 %add_ln54_4" [d1.cpp:54]   --->   Operation 463 'add' 'add_ln54_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 464 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_8 = add i128 %add59_123131_load, i128 %add_ln54_7" [d1.cpp:54]   --->   Operation 464 'add' 'add_ln54_8' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 465 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_13 = add i128 %add_ln54_12, i128 %add_ln54_10" [d1.cpp:54]   --->   Operation 465 'add' 'add_ln54_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 466 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_14 = add i128 %add59_258132_load, i128 %add_ln54_13" [d1.cpp:54]   --->   Operation 466 'add' 'add_ln54_14' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 467 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_19 = add i128 %add_ln54_18, i128 %add_ln54_16" [d1.cpp:54]   --->   Operation 467 'add' 'add_ln54_19' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 468 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_20 = add i128 %add59_3133_load, i128 %add_ln54_19" [d1.cpp:54]   --->   Operation 468 'add' 'add_ln54_20' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 469 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_25 = add i128 %add_ln54_24, i128 %add_ln54_22" [d1.cpp:54]   --->   Operation 469 'add' 'add_ln54_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 470 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_26 = add i128 %add59_4134_load, i128 %add_ln54_25" [d1.cpp:54]   --->   Operation 470 'add' 'add_ln54_26' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 471 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_31 = add i128 %add_ln54_30, i128 %add_ln54_28" [d1.cpp:54]   --->   Operation 471 'add' 'add_ln54_31' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 472 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_32 = add i128 %add59_5135_load, i128 %add_ln54_31" [d1.cpp:54]   --->   Operation 472 'add' 'add_ln54_32' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 473 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_37 = add i128 %add_ln54_36, i128 %add_ln54_34" [d1.cpp:54]   --->   Operation 473 'add' 'add_ln54_37' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 474 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_38 = add i128 %add59_6136_load, i128 %add_ln54_37" [d1.cpp:54]   --->   Operation 474 'add' 'add_ln54_38' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 475 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_42 = add i128 %add_ln54_41, i128 %add_ln54_39" [d1.cpp:54]   --->   Operation 475 'add' 'add_ln54_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 476 [1/1] (0.99ns) (root node of TernaryAdder)   --->   "%add_ln54_43 = add i128 %add59_7137_load, i128 %add_ln54_42" [d1.cpp:54]   --->   Operation 476 'add' 'add_ln54_43' <Predicate = true> <Delay = 0.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.49> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 477 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_43, i128 %add59_7137" [d1.cpp:36]   --->   Operation 477 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 478 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_38, i128 %add59_6136" [d1.cpp:36]   --->   Operation 478 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 479 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_32, i128 %add59_5135" [d1.cpp:36]   --->   Operation 479 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 480 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_26, i128 %add59_4134" [d1.cpp:36]   --->   Operation 480 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 481 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_20, i128 %add59_3133" [d1.cpp:36]   --->   Operation 481 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 482 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_14, i128 %add59_258132" [d1.cpp:36]   --->   Operation 482 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 483 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_8, i128 %add59_123131" [d1.cpp:36]   --->   Operation 483 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 484 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln54_3, i128 %add59130" [d1.cpp:36]   --->   Operation 484 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 485 [1/1] (0.42ns)   --->   "%store_ln36 = store i128 %add_ln44_3, i128 %add32_2129" [d1.cpp:36]   --->   Operation 485 'store' 'store_ln36' <Predicate = true> <Delay = 0.42>
ST_3 : Operation 486 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body39" [d1.cpp:36]   --->   Operation 486 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 7.173ns
The critical path consists of the following:
	'alloca' operation ('i') [46]  (0.000 ns)
	'load' operation ('i', d1.cpp:54) on local variable 'i' [87]  (0.000 ns)
	'add' operation ('add_ln44', d1.cpp:44) [263]  (0.797 ns)
	'icmp' operation ('cmp53_2', d1.cpp:44) [272]  (0.797 ns)
	'select' operation ('select_ln49', d1.cpp:49) [290]  (0.000 ns)
	'add' operation ('add_ln49', d1.cpp:49) [291]  (0.797 ns)
	'sub' operation ('sub_ln49_13', d1.cpp:49) [312]  (0.797 ns)
	'sub' operation ('sub_ln49_14', d1.cpp:49) [340]  (0.797 ns)
	'sub' operation ('sub_ln49_15', d1.cpp:49) [376]  (0.797 ns)
	'sub' operation ('sub_ln49_6', d1.cpp:49) [413]  (0.797 ns)
	'sub' operation ('sub_ln49_7', d1.cpp:49) [450]  (0.797 ns)
	'sub' operation ('sub_ln49_8', d1.cpp:49) [485]  (0.797 ns)

 <State 2>: 6.879ns
The critical path consists of the following:
	'mux' operation ('tmp_17', d1.cpp:44) [190]  (0.770 ns)
	multiplexor before operation 'mul' with delay (1.047 ns)
'mul' operation ('mul_ln44_2', d1.cpp:44) [268]  (3.483 ns)
	'add' operation ('add_ln44_1', d1.cpp:44) [269]  (1.579 ns)

 <State 3>: 5.952ns
The critical path consists of the following:
	multiplexor before operation 'mul' with delay (1.047 ns)
'mul' operation ('mul_ln44_1', d1.cpp:44) [267]  (3.483 ns)
	'add' operation ('add_ln44_2', d1.cpp:44) [270]  (0.000 ns)
	'add' operation ('add_ln44_3', d1.cpp:44) [271]  (0.995 ns)
	'store' operation ('store_ln36', d1.cpp:36) of variable 'add_ln44_3', d1.cpp:44 on local variable 'add32_2129' [518]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
